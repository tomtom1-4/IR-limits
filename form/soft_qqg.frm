#-
#: IncDir procedures
#: SmallExtension 100M
#: WorkSpace      2G
Off Statistics;

****************************************
* diags function choice

#write "specify diagrams to calculate by defining first and last"

****************************************

#include declarations.h
* Read Feynman diagrams generated by diags.cpp (This is just to get the number of diagrams)
#include diagrams/diags_qqg.out
.sort
drop;

#write "`ndiags' diagrams for the soft current\n"

#ifndef `first'
#define first "1"
#endif

#ifndef `last'
#define last "`ndiags'"
#endif

.sort
#do i=`first',`last'

#message d`i' / `ndiags'
* Read the Feynman diagram
#include diagrams/diags_qqg.out # d`i'

#call Kinematics
#call FeynmanRules
#call Dirac
#call WaveFunctions

** Remove couplings to second Wilson line
if(match(M(cOli1?, c2)) == 0) discard;

id cOlT(c1, cOli1?, cOli7?)*cOlT(cOli1?, cOli3?, cOli6?)*M(cOli3?, c2) = T(cOli7)*T(cOli6);
b T, M;
print+s d`i';
.sort
id cOlT(c1, cOli2?, cOli7?)*M(cOli2?, c2) = T(cOli7);
id T(cOli1?)*T(cOli2?) = TTsym(cOli1,cOli2)/2 + i_*cOlf(cOli1,cOli2,cOli10)*T(cOli10)/2;
id cOlT(c3,cOli1?,c5)*cOlT(cOli1?,c4,cOli2?) = cOlT(c3,cOli1,cOli2)*cOlT(cOli1,c4,c5) + i_*cOlf(c5, cOli2, cOli11)*cOlT(c3, c4, cOli11);
sum cOli11;
.sort
repeat;
  id V(p4?)*T(cOli1?) = T(cOli1)*V(p4);
  id UBar(p4?)*T(cOli1?) = T(cOli1)*UBar(p4);
  id g(p4?)*T(cOli1?) = T(cOli1)*g(p4);
endrepeat;
sum cOli1,...,cOli10;
#call WaveFunctions
.sort

#call SoftLim
print+s d`i';
.sort
#call WaveFunctions

bracket cOlT, cOlf, delta, M, T, den, TTsym;
print+s d`i';
.sort

.store
.sort
*save results/diags_qqg/d`i'.sav d`i';
#enddo
g sum = d`first'+...+d`last';
#call WaveFunctions
#call Kinematics
id 1/s15? = rat(1,s15);
#call FullSimplify
#call Simplify
bracket cOlT, cOlf, delta, M, T, TTsym;
*bracket TTsym, den, s15;
format mathematica;
print+s sum;
.store
save results/qqg.sav sum;

.end