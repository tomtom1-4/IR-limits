P0Pol = (2*ep^2*(9*p1q*s12*(2*s13 + s23) - p2q*s13*(9*s13 + s23) + 
        p1q*s23*(9*s13 + s23) + p2q*s12*(9*s13 + 8*s23) + 
        p3q*(-9*s12^2 + 9*s12*s13 - s12*s23 + 8*s13*s23)))/
      (9*(p1q + p2q + p3q)*s12*s13) + 
     (2*(-2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*
         (p2q*(2*s12 - 7*s13 + s23) + p3q*(-7*s12 + 2*s13 + s23)) + 
        2*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23)*
         (p2q*p3q*(18*s12^2 - 18*s12*s13 + 18*s13^2 + 13*s12*s23 + 
            13*s13*s23 - 2*s23^2) + p2q^2*(18*s12*s13 + 9*s13^2 - 2*s12*s23 + 
            24*s13*s23 - s23^2) + p3q^2*(9*s12^2 - s23*(2*s13 + s23) + 
            6*s12*(3*s13 + 4*s23))) + 
        p1q*(p2q^4*s23*(18*s13^3 + s12^2*(36*s13 - 2*s23) + 59*s13^2*s23 + 
            40*s13*s23^2 - s23^3 + s12*(54*s13^2 + 75*s13*s23 - 3*s23^2)) + 
          p3q^4*s23*(18*s12^3 + s12^2*(54*s13 + 59*s23) - 
            s23*(2*s13^2 + 3*s13*s23 + s23^2) + s12*(36*s13^2 + 75*s13*s23 + 
              40*s23^2)) + p2q*p3q^3*(18*s12^3*(2*s13 + 5*s23) + 
            2*s12^2*s23*(72*s13 + 85*s23) + 3*s12*s23*(18*s13^2 + 
              45*s13*s23 + 28*s23^2) + s23*(36*s13^3 + 39*s13^2*s23 + 
              7*s13*s23^2 - 4*s23^3)) + 2*p2q^2*p3q^2*(54*s12^3*s23 + 
            3*s12*s23*(6*s13^2 + 14*s13*s23 + 9*s23^2) + 
            s12^2*(-36*s13^2 + 18*s13*s23 + 76*s23^2) + 
            s23*(54*s13^3 + 76*s13^2*s23 + 27*s13*s23^2 - 3*s23^3)) + 
          p2q^3*p3q*(36*s12^3*s23 + 3*s12^2*s23*(18*s13 + 13*s23) + 
            2*s23*(45*s13^3 + 85*s13^2*s23 + 42*s13*s23^2 - 2*s23^3) + 
            s12*(36*s13^3 + 144*s13^2*s23 + 135*s13*s23^2 + 7*s23^3))) + 
        (p2q + p3q)*(p2q^4*s13*s23*(18*s12^2 + 27*s12*s13 + 9*s13^2 + 
            35*s12*s23 + 26*s13*s23 + 17*s23^2) + p3q^4*s12*s23*
           (9*s12^2 + 27*s12*s13 + 18*s13^2 + 26*s12*s23 + 35*s13*s23 + 
            17*s23^2) + p2q*p3q^3*(9*s12^3*(4*s13 + 5*s23) + 
            9*s12^2*s23*(11*s13 + 8*s23) + s13*s23*(18*s13^2 + 19*s13*s23 + 
              9*s23^2) + s12*s23*(36*s13^2 + 80*s13*s23 + 35*s23^2)) + 
          p2q^2*p3q^2*(45*s12^3*s23 + 9*s12*s23*(3*s13^2 + 8*s13*s23 + 
              3*s23^2) + s13*s23*(45*s13^2 + 56*s13*s23 + 27*s23^2) + 
            s12^2*(-72*s13^2 + 27*s13*s23 + 56*s23^2)) + 
          p2q^3*p3q*(18*s12^3*s23 + s12^2*s23*(36*s13 + 19*s23) + 
            s13*s23*(45*s13^2 + 72*s13*s23 + 35*s23^2) + 
            s12*(36*s13^3 + 99*s13^2*s23 + 80*s13*s23^2 + 9*s23^3)))))/
      (9*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*s23^2) + 
     (ep*(2*p1q*(p2q^4*s23^2*(2*s12^2 - 5*s12*s13 - 7*s13^2 + 3*s12*s23 - 
            6*s13*s23 + s23^2) + p3q^4*s23^2*(-7*s12^2 - 5*s12*s13 + 
            2*s13^2 - 6*s12*s23 + 3*s13*s23 + s23^2) + 
          p2q*p3q^3*(-36*s12^3*s13 + 13*s13^2*s23^2 + 3*s23^4 + 
            4*s12^2*s23*(-9*s13 + s23) - s12*s23^2*(35*s13 + 9*s23)) + 
          2*p2q^2*p3q^2*(-3*s12*s23*(-6*s13^2 + 4*s13*s23 + s23^2) + 
            s23^2*(11*s13^2 - 3*s13*s23 + 2*s23^2) + 
            s12^2*(36*s13^2 + 18*s13*s23 + 11*s23^2)) + 
          p2q^3*p3q*(13*s12^2*s23^2 + s23^2*(4*s13^2 - 9*s13*s23 + 3*s23^2) - 
            s12*s13*(36*s13^2 + 36*s13*s23 + 35*s23^2))) - 
        2*(p2q + p3q)*(p2q^4*s13*s23*(18*s12^2 + 27*s12*s13 + 9*s13^2 + 
            35*s12*s23 + 26*s13*s23 + 17*s23^2) + p3q^4*s12*s23*
           (9*s12^2 + 27*s12*s13 + 18*s13^2 + 26*s12*s23 + 35*s13*s23 + 
            17*s23^2) + p2q*p3q^3*(9*s12^3*(4*s13 + 3*s23) + 
            9*s12^2*s23*(11*s13 + 5*s23) + s13*s23*(18*s13^2 + 19*s13*s23 + 
              17*s23^2) + s12*s23*(54*s13^2 + 107*s13*s23 + 34*s23^2)) + 
          p2q^2*p3q^2*(27*s12^3*s23 + s12^2*(-72*s13^2 + 45*s13*s23 + 
              29*s23^2) + s13*s23*(27*s13^2 + 29*s13*s23 + 34*s23^2) + 
            s12*s23*(45*s13^2 + 126*s13*s23 + 34*s23^2)) + 
          p2q^3*p3q*(18*s12^3*s23 + s12^2*s23*(54*s13 + 19*s23) + 
            s13*s23*(27*s13^2 + 45*s13*s23 + 34*s23^2) + 
            s12*(36*s13^3 + 99*s13^2*s23 + 107*s13*s23^2 + 17*s23^3)))))/
      (9*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*s23^2)
 
P0Avg = (2*ep^2*(9*p1q*s12*(2*s13 + s23) - p2q*s13*(9*s13 + s23) + 
        p1q*s23*(9*s13 + s23) + p2q*s12*(9*s13 + 8*s23) + 
        p3q*(-9*s12^2 + 9*s12*s13 - s12*s23 + 8*s13*s23)))/
      (9*(p1q + p2q + p3q)*s12*s13) + 
     (2*(-2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*
         (p2q*(2*s12 - 7*s13 + s23) + p3q*(-7*s12 + 2*s13 + s23)) + 
        2*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23)*
         (p2q*p3q*(18*s12^2 - 18*s12*s13 + 18*s13^2 + 13*s12*s23 + 
            13*s13*s23 - 2*s23^2) + p2q^2*(18*s12*s13 + 9*s13^2 - 2*s12*s23 + 
            24*s13*s23 - s23^2) + p3q^2*(9*s12^2 - s23*(2*s13 + s23) + 
            6*s12*(3*s13 + 4*s23))) + 
        p1q*(p2q^4*s23*(18*s13^3 + s12^2*(36*s13 - 2*s23) + 59*s13^2*s23 + 
            40*s13*s23^2 - s23^3 + s12*(54*s13^2 + 75*s13*s23 - 3*s23^2)) + 
          p3q^4*s23*(18*s12^3 + s12^2*(54*s13 + 59*s23) - 
            s23*(2*s13^2 + 3*s13*s23 + s23^2) + s12*(36*s13^2 + 75*s13*s23 + 
              40*s23^2)) + p2q*p3q^3*(18*s12^3*(2*s13 + 5*s23) + 
            2*s12^2*s23*(72*s13 + 85*s23) + 3*s12*s23*(18*s13^2 + 
              45*s13*s23 + 28*s23^2) + s23*(36*s13^3 + 39*s13^2*s23 + 
              7*s13*s23^2 - 4*s23^3)) + 2*p2q^2*p3q^2*(54*s12^3*s23 + 
            3*s12*s23*(6*s13^2 + 14*s13*s23 + 9*s23^2) + 
            s12^2*(-36*s13^2 + 18*s13*s23 + 76*s23^2) + 
            s23*(54*s13^3 + 76*s13^2*s23 + 27*s13*s23^2 - 3*s23^3)) + 
          p2q^3*p3q*(36*s12^3*s23 + 3*s12^2*s23*(18*s13 + 13*s23) + 
            2*s23*(45*s13^3 + 85*s13^2*s23 + 42*s13*s23^2 - 2*s23^3) + 
            s12*(36*s13^3 + 144*s13^2*s23 + 135*s13*s23^2 + 7*s23^3))) + 
        (p2q + p3q)*(p2q^4*s13*s23*(18*s12^2 + 27*s12*s13 + 9*s13^2 + 
            35*s12*s23 + 26*s13*s23 + 17*s23^2) + p3q^4*s12*s23*
           (9*s12^2 + 27*s12*s13 + 18*s13^2 + 26*s12*s23 + 35*s13*s23 + 
            17*s23^2) + p2q*p3q^3*(9*s12^3*(4*s13 + 5*s23) + 
            9*s12^2*s23*(11*s13 + 8*s23) + s13*s23*(18*s13^2 + 19*s13*s23 + 
              9*s23^2) + s12*s23*(36*s13^2 + 80*s13*s23 + 35*s23^2)) + 
          p2q^2*p3q^2*(45*s12^3*s23 + 9*s12*s23*(3*s13^2 + 8*s13*s23 + 
              3*s23^2) + s13*s23*(45*s13^2 + 56*s13*s23 + 27*s23^2) + 
            s12^2*(-72*s13^2 + 27*s13*s23 + 56*s23^2)) + 
          p2q^3*p3q*(18*s12^3*s23 + s12^2*s23*(36*s13 + 19*s23) + 
            s13*s23*(45*s13^2 + 72*s13*s23 + 35*s23^2) + 
            s12*(36*s13^3 + 99*s13^2*s23 + 80*s13*s23^2 + 9*s23^3)))))/
      (9*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*s23^2) + 
     (ep*(2*p1q*(p2q^4*s23^2*(2*s12^2 - 5*s12*s13 - 7*s13^2 + 3*s12*s23 - 
            6*s13*s23 + s23^2) + p3q^4*s23^2*(-7*s12^2 - 5*s12*s13 + 
            2*s13^2 - 6*s12*s23 + 3*s13*s23 + s23^2) + 
          p2q*p3q^3*(-36*s12^3*s13 + 13*s13^2*s23^2 + 3*s23^4 + 
            4*s12^2*s23*(-9*s13 + s23) - s12*s23^2*(35*s13 + 9*s23)) + 
          2*p2q^2*p3q^2*(-3*s12*s23*(-6*s13^2 + 4*s13*s23 + s23^2) + 
            s23^2*(11*s13^2 - 3*s13*s23 + 2*s23^2) + 
            s12^2*(36*s13^2 + 18*s13*s23 + 11*s23^2)) + 
          p2q^3*p3q*(13*s12^2*s23^2 + s23^2*(4*s13^2 - 9*s13*s23 + 3*s23^2) - 
            s12*s13*(36*s13^2 + 36*s13*s23 + 35*s23^2))) - 
        2*(p2q + p3q)*(p2q^4*s13*s23*(18*s12^2 + 27*s12*s13 + 9*s13^2 + 
            35*s12*s23 + 26*s13*s23 + 17*s23^2) + p3q^4*s12*s23*
           (9*s12^2 + 27*s12*s13 + 18*s13^2 + 26*s12*s23 + 35*s13*s23 + 
            17*s23^2) + p2q*p3q^3*(9*s12^3*(4*s13 + 3*s23) + 
            9*s12^2*s23*(11*s13 + 5*s23) + s13*s23*(18*s13^2 + 19*s13*s23 + 
              17*s23^2) + s12*s23*(54*s13^2 + 107*s13*s23 + 34*s23^2)) + 
          p2q^2*p3q^2*(27*s12^3*s23 + s12^2*(-72*s13^2 + 45*s13*s23 + 
              29*s23^2) + s13*s23*(27*s13^2 + 29*s13*s23 + 34*s23^2) + 
            s12*s23*(45*s13^2 + 126*s13*s23 + 34*s23^2)) + 
          p2q^3*p3q*(18*s12^3*s23 + s12^2*s23*(54*s13 + 19*s23) + 
            s13*s23*(27*s13^2 + 45*s13*s23 + 34*s23^2) + 
            s12*(36*s13^3 + 99*s13^2*s23 + 107*s13*s23^2 + 17*s23^3)))))/
      (9*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*s23^2)
 
P1Pol = 
    ((ep^3*(-(p2q*(23*s12*s13^2 + 95*s13^3 + 71*s12*s13*s23 + 102*s13^2*s23 + 
             40*s12*s23^2 + 7*s13*s23^2)) + p1q*(72*s12*s13^2 + 
            31*s12*s13*s23 + 95*s13^2*s23 - 33*s12*s23^2 + 102*s13*s23^2 + 
            7*s23^3) + p3q*(80*s13*s23*(s13 + s23) + 
            s12^2*(23*s13 + 33*s23) + s12*(95*s13^2 + 72*s13*s23 - 
              7*s23^2))))/(27*(p1q + p2q + p3q)*s12*s13*(s13 + s23)) - 
       (2*p1q^4*s23^2*(s12 + s13 + s23)*(176*p2q*s13^3*(s13 + s23) + 
           77*p3q*s13^3*(s13 + s23) - p3q*s12*(22*s13^3 + 21*s13^2*s23 + 
             10*s23^3) + p2q*s12*(77*s13^3 + 312*s13^2*s23 + 243*s13*s23^2 + 
             80*s23^3)) - s23*(-(p3q^5*s12^2*(20*s12^3*s23 + 20*s12^2*s23*(
                3*s13 + s23) + s13^2*(99*s13^2 + 130*s13*s23 + 31*s23^2) + 
              s12*s13*(99*s13^2 + 71*s13*s23 + 40*s23^2))) - 
           p2q^5*s13^3*(176*s23*(s13 + s23)^2 + 9*s12^2*(11*s13 + 3*s23) + 
             s12*(99*s13^2 + 302*s13*s23 + 203*s23^2)) + 2*p2q*p3q^4*s12*
            (-90*s12^5 + s12^4*(63*s13 - 100*s23) + s12^3*s13*
              (-180*s13 + 133*s23) + s12*s13*s23*(337*s13^2 + 29*s13*s23 + 20*
                s23^2) + 2*s12^2*(117*s13^3 - 157*s13^2*s23 + 10*s13*s23^2 + 
               5*s23^3) + s13^2*(99*s13^3 + 40*s13^2*s23 + 121*s13*s23^2 + 20*
                s23^3)) + p2q^3*p3q^2*s13*(-360*s12^4*(2*s13 + s23) + 
             s12^3*(837*s13^2 - 30*s13*s23 - 360*s23^2) + 
             2*s13^3*(-99*s13^2 + 50*s13*s23 + 149*s23^2) + 
             s12^2*s13*(-1377*s13^2 + 217*s13*s23 + 870*s23^2) + 
             2*s12*s13*(432*s13^3 + 85*s13^2*s23 - 85*s13*s23^2 + 30*
                s23^3)) + p2q^2*p3q^3*(180*s12^5*(3*s13 + s23) + 
             s13^4*(-99*s13^2 + 50*s13*s23 + 149*s23^2) + 
             s12^4*(-738*s13^2 + 434*s13*s23 + 200*s23^2) + 
             2*s12^3*(594*s13^3 - 370*s13^2*s23 - 113*s13*s23^2 + 10*s23^3) + 
             2*s12^2*s13*(-567*s13^3 + 421*s13^2*s23 + 352*s13*s23^2 + 20*
                s23^3) + s12*s13^2*(297*s13^3 - 703*s13^2*s23 - 208*s13*
                s23^2 + 80*s23^3)) + p2q^4*p3q*s13^2*
            (9*s12^3*(51*s13 + 41*s23) + s12^2*(-126*s13^2 + 422*s13*s23 + 
               309*s23^2) + s12*(549*s13^3 + 615*s13^2*s23 + 158*s13*s23^2 + 
               20*s23^3) - 2*s13*(99*s13^3 + 162*s13^2*s23 + 151*s13*s23^2 + 
               88*s23^3))) + 2*p1q^3*s23*(s12 + s13 + s23)*
          (p2q*p3q*(4*s13^3*(18*s13^2 + 113*s13*s23 + 95*s23^2) - 
             3*s12^2*(42*s13^3 + 224*s13^2*s23 + 243*s13*s23^2 + 110*s23^3) + 
             s12*(-54*s13^4 + 86*s13^3*s23 + 555*s13^2*s23^2 + 183*s13*
                s23^3 - 20*s23^4)) - p3q^2*(-77*s13^3*s23*(s13 + s23) + 
             3*s12^2*(9*s13^3 + 2*s13^2*s23 - 10*s23^3) + 
             s12*(126*s13^4 + 274*s13^3*s23 + 59*s13^2*s23^2 - 20*s13*s23^3 + 
               10*s23^4)) + p2q^2*(3*s13^3*(-9*s13^2 + 158*s13*s23 + 167*
                s23^2) + s12*(72*s13^4 - 9*s13^3*s23 + 218*s13^2*s23^2 + 163*
                s13*s23^3 + 80*s23^4))) + 
         p1q*(-(p3q^4*s12*(s12^4*(54*s13^2 - 20*s23^2) + 4*s12^3*(27*s13^3 + 
                27*s13^2*s23 - 15*s13*s23^2 + 10*s23^3) + s13^2*s23*(
                99*s13^3 + 297*s13^2*s23 + 229*s13*s23^2 + 31*s23^3) + 
              s12*s13*s23*(-99*s13^3 - 53*s13^2*s23 + 58*s13*s23^2 + 
                80*s23^3) + s12^2*(54*s13^4 - 90*s13^3*s23 - 39*s13^2*s23^2 + 
                100*s13*s23^3 + 60*s23^4))) + p2q^4*s13^2*
            (2*s13*(s13 + s23)^2*(27*s13^2 + 27*s13*s23 + 352*s23^2) + 
             s12^2*(54*s13^3 + 351*s13^2*s23 + 158*s13*s23^2 + 149*s23^3) + 
             s12*(108*s13^4 + 513*s13^3*s23 + 1267*s13^2*s23^2 + 1011*s13*
                s23^3 + 149*s23^4)) - p2q^3*p3q*s13*
            (s12^3*(162*s13^3 + 1251*s13^2*s23 + 1353*s13*s23^2 + 160*
                s23^3) + 3*s12^2*(90*s13^4 + 33*s13^3*s23 + 498*s13^2*s23^2 + 
               365*s13*s23^3 + 40*s23^4) - 2*s13^2*(27*s13^4 + 378*s13^3*
                s23 + 804*s13^2*s23^2 + 830*s13*s23^3 + 377*s23^4) + 
             2*s12*(27*s13^5 + 378*s13^4*s23 + 67*s13^3*s23^2 - 341*s13^2*
                s23^3 - 149*s13*s23^4 - 20*s23^5)) + p2q*p3q^3*
            (-2*s12^5*(27*s13^2 + 243*s13*s23 + 350*s23^2) + 
             s12^4*(54*s13^3 + 792*s13^2*s23 - 268*s13*s23^2 - 780*s23^3) + 
             s13^3*s23*(99*s13^3 + 99*s13^2*s23 + 149*s13*s23^2 + 149*
                s23^3) - s12*s13*s23*(495*s13^4 + 21*s13^3*s23 + 60*s13^2*
                s23^2 + 102*s13*s23^3 - 40*s23^4) + s12^3*(270*s13^4 + 54*
                s13^3*s23 + 949*s13^2*s23^2 + 698*s13*s23^3 - 40*s23^4) + 
             s12^2*(162*s13^5 + 846*s13^4*s23 - 1314*s13^3*s23^2 - 1423*s13^2*
                s23^3 - 60*s13*s23^4 + 40*s23^5)) + p2q^2*p3q^2*
            (2*s13^3*s23*(198*s13^3 + 173*s13^2*s23 + 124*s13*s23^2 + 149*
                s23^3) + 2*s12^4*(81*s13^3 + 693*s13^2*s23 + 673*s13*s23^2 + 
               260*s23^3) + s12^3*(162*s13^4 - 1206*s13^3*s23 - 227*s13^2*
                s23^2 + 1214*s13*s23^3 + 560*s23^4) - 
             s12^2*(162*s13^5 - 648*s13^4*s23 + 2218*s13^3*s23^2 + 2807*s13^2*
                s23^3 + 532*s13*s23^4 - 40*s23^5) + s12*s13*(-162*s13^5 - 
               1692*s13^4*s23 - 81*s13^3*s23^2 + 1397*s13^2*s23^3 + 564*s13*
                s23^4 + 80*s23^5))) + 
         p1q^2*(p2q^3*s13*(2*s13^2*(s13 + s23)^2*(27*s13^2 + 589*s23^2) + 
             s12^2*(54*s13^4 + 396*s13^3*s23 - 41*s13^2*s23^2 - 39*s13*
                s23^3 - 160*s23^4) + s12*(108*s13^5 + 504*s13^4*s23 + 1533*
                s13^3*s23^2 + 1098*s13^2*s23^3 - 199*s13*s23^4 - 160*
                s23^5)) + p3q^3*(77*s13^3*s23^2*(s13 + s23)^2 + 
             2*s12^3*s13*(54*s13^3 + 261*s13^2*s23 + 140*s13*s23^2 - 70*
                s23^3) + 6*s12^4*(9*s13^3 + 18*s13^2*s23 - 10*s23^3) - 
             s12*s13*s23*(198*s13^4 + 539*s13^3*s23 + 394*s13^2*s23^2 + 13*
                s13*s23^3 - 40*s23^4) + s12^2*(54*s13^5 + 216*s13^4*s23 + 114*
                s13^3*s23^2 + 39*s13^2*s23^3 + 20*s13*s23^4 + 60*s23^5)) - 
           p2q^2*p3q*(2*s12^3*(54*s13^4 + 585*s13^3*s23 + 931*s13^2*s23^2 + 
               566*s13*s23^3 + 250*s23^4) - 2*s13^3*(27*s13^4 + 351*s13^3*
                s23 + 1089*s13^2*s23^2 + 1357*s13*s23^3 + 592*s23^4) + 
             s12*s23*(90*s13^5 - 1330*s13^4*s23 - 2769*s13^3*s23^2 - 1827*
                s13^2*s23^3 - 386*s13*s23^4 + 20*s23^5) + 
             s12^2*(162*s13^5 + 630*s13^4*s23 + 2148*s13^3*s23^2 + 1493*s13^2*
                s23^3 + 1226*s13*s23^4 + 520*s23^5)) + 
           p2q*p3q^2*(6*s12^4*(9*s13^3 + 129*s13^2*s23 + 243*s13*s23^2 + 170*
                s23^3) + 2*s13^3*s23*(99*s13^3 + 264*s13^2*s23 + 355*s13*
                s23^2 + 190*s23^3) + 2*s12^3*s23*(9*s13^3 - 125*s13^2*s23 + 
               750*s13*s23^2 + 560*s23^3) - s12^2*(162*s13^5 + 540*s13^4*
                s23 + 2848*s13^3*s23^2 + 2945*s13^2*s23^3 + 758*s13*s23^4 - 
               80*s23^5) + s12*(-108*s13^6 - 918*s13^5*s23 - 634*s13^4*
                s23^2 + 539*s13^3*s23^3 + 555*s13^2*s23^4 + 100*s13*s23^5 - 
               20*s23^6))))/(54*ep*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13^3*s23^2*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep^2*(-(p2q^5*s13^2*(s13 + s23)*(-9*s12^2*(s13^2 - 10*s13*s23 - 19*
                s23^2) + 2*s23*(27*s13^3 + 157*s13^2*s23 + 213*s13*s23^2 + 83*
                s23^3) + s12*(-9*s13^3 + 135*s13^2*s23 + 521*s13*s23^2 + 337*
                s23^3))) - p3q^2*(s12 + s13 + s23)*
           (p1q^3*s23^2*(s13 + s23)^2*(9*s13^2 + 14*s13*s23 + 10*s23^2) - 
            p1q^2*p3q*s23^2*(s13 + s23)*(5*s13*s23*(s13 + s23) + 
              s12*(41*s13^2 + 67*s13*s23 + 30*s23^2)) + p3q^3*s12^2*
             (-5*s13*s23^2*(s13 + s23) + s12*(9*s13^3 - 9*s13^2*s23 - 
                29*s13*s23^2 - 10*s23^3)) + p1q*p3q^2*s12*
             (5*s13*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) + s12*(-9*s13^4 + 
                70*s13^2*s23^2 + 92*s13*s23^3 + 30*s23^4))) - 
          p2q^4*s13*(p1q*(s13 + s23)*(s12^2*(-9*s13^3 + 90*s13^2*s23 + 
                241*s13*s23^2 - 10*s23^3) + s12*(-9*s13^4 + 135*s13^3*s23 + 
                738*s13^2*s23^2 + 459*s13*s23^3 - 15*s23^4) + 
              s23*(54*s13^4 + 461*s13^3*s23 + 635*s13^2*s23^2 + 
                223*s13*s23^3 - 5*s23^4)) + p3q*(-(s13*(s13 + s23)^2*
                (9*s13^3 - 72*s13^2*s23 - 662*s13*s23^2 - 517*s23^3)) + 
              s12^3*(27*s13^3 - 162*s13^2*s23 - 271*s13*s23^2 - 10*s23^3) + 
              s12^2*(18*s13^4 - 90*s13^3*s23 - 369*s13^2*s23^2 - 
                246*s13*s23^3 - 25*s23^4) + s12*(-18*s13^5 + 27*s13^4*s23 + 
                457*s13^3*s23^2 + 918*s13^2*s23^3 + 591*s13*s23^4 + 
                85*s23^5))) + p2q*p3q*(-(p1q^3*s23^2*(s13 + s23)*
              (9*s13^4 - 9*s13^3*s23 + 4*s13^2*s23^2 + 31*s13*s23^3 + 9*
                s23^4 + s12^2*(9*s13^2 - s23^2) + s12*(18*s13^3 - 
                 9*s13^2*s23 + 21*s13*s23^2 + 8*s23^3))) + 
            p1q^2*p3q*s23*(s12^3*s23*(9*s13^2 + 18*s13*s23 + 17*s23^2) - 
              s23*(s13 + s23)^2*(13*s13^3 - 203*s13^2*s23 - 182*s13*s23^2 + 
                10*s23^3) + s12*s23*(40*s13^4 + 179*s13^3*s23 + 387*s13^2*
                 s23^2 + 285*s13*s23^3 + 37*s23^4) + s12^2*(-72*s13^4 - 
                252*s13^3*s23 - 83*s13^2*s23^2 + 201*s13*s23^3 + 64*s23^4)) + 
            p3q^3*s12*(s12^4*(-9*s13^2 + 19*s23^2) + s13*s23^2*(152*s13^3 + 
                59*s13^2*s23 - 98*s13*s23^2 - 5*s23^3) + s12^3*(-18*s13^3 - 
                63*s13^2*s23 + 103*s13*s23^2 + 48*s23^3) + s12^2*(18*s13^4 + 
                27*s13^3*s23 + 33*s13^2*s23^2 + 140*s13*s23^3 + 19*s23^4) + 
              s12*(27*s13^5 + 45*s13^4*s23 - 69*s13^3*s23^2 - 109*s13^2*
                 s23^3 + 112*s13*s23^4 - 10*s23^5)) + p1q*p3q^2*
             (-(s13*s23^2*(s13 + s23)^2*(85*s13^2 - 88*s13*s23 - 5*s23^2)) + 
              s12^4*(9*s13^3 + 9*s13^2*s23 - 19*s13*s23^2 - 37*s23^3) + 
              s12^3*(18*s13^4 + 153*s13^3*s23 + 158*s13^2*s23^2 - 
                275*s13*s23^3 - 104*s23^4) - s12^2*(9*s13^5 + 36*s13^4*s23 + 
                34*s13^3*s23^2 + 345*s13^2*s23^3 + 385*s13*s23^4 + 
                47*s23^5) - 2*s12*(9*s13^6 + 27*s13^5*s23 - 85*s13^4*s23^2 - 
                46*s13^3*s23^3 + 204*s13^2*s23^4 + 137*s13*s23^5 - 
                10*s23^6))) + p2q^3*(p1q^2*s23^2*(s13 + s23)*
             (-147*s13^4 - 168*s13^3*s23 - 14*s13^2*s23^2 + 8*s13*s23^3 + 
              s23^4 + s12^2*(-79*s13^2 + 10*s13*s23 + s23^2) + 
              2*s12*(-113*s13^3 - 45*s13^2*s23 + 9*s13*s23^2 + s23^3)) + 
            p3q^2*(s13^2*(s13 + s23)^2*(9*s13^3 + 27*s13^2*s23 - 
                514*s13*s23^2 - 340*s23^3) + s12^3*s23*(198*s13^3 + 
                241*s13^2*s23 - 109*s13*s23^2 - 38*s23^3) + s12^4*(27*s13^3 - 
                81*s13^2*s23 - 29*s13*s23^2 - 19*s23^3) + s12*s13*(
                -18*s13^5 + 153*s13^4*s23 + 875*s13^3*s23^2 + 837*s13^2*
                 s23^3 - 113*s13*s23^4 - 246*s23^5) + s12^2*(-54*s13^5 + 
                153*s13^4*s23 + 879*s13^3*s23^2 + 625*s13^2*s23^3 - 
                26*s13*s23^4 - 19*s23^5)) + p1q*p3q*(2*s12^3*(-9*s13^4 + 
                36*s13^3*s23 + 85*s13^2*s23^2 + 9*s13*s23^3 + 9*s23^4) + 
              s13*(s13 + s23)^2*(9*s13^4 - 72*s13^3*s23 - 768*s13^2*s23^2 - 
                313*s13*s23^3 + 206*s23^4) - s12^2*(9*s13^5 + 45*s13^4*s23 + 
                190*s13^3*s23^2 + 161*s13^2*s23^3 - 109*s13*s23^4 - 
                36*s23^5) + s12*(18*s13^6 - 9*s13^5*s23 - 599*s13^4*s23^2 - 
                1142*s13^3*s23^3 - 491*s13^2*s23^4 + 97*s13*s23^5 + 
                18*s23^6))) + p2q^2*(p1q^3*s23^2*(s13 + s23)*
             (s12^2*(-9*s13^2 + s23^2) + s23*(41*s13^3 + 43*s13^2*s23 + 
                3*s13*s23^2 + s23^3) + s12*(-9*s13^3 + 32*s13^2*s23 + 
                3*s13*s23^2 + 2*s23^3)) + p1q^2*p3q*s23*
             (s12^3*s23*(9*s13^2 + 18*s13*s23 + 17*s23^2) - s23*(s13 + s23)^
                2*(115*s13^3 - 222*s13^2*s23 - 184*s13*s23^2 + 9*s23^3) + 
              s12^2*s23*(-255*s13^3 - 233*s13^2*s23 + 97*s13*s23^2 + 
                35*s23^3) + s12*(72*s13^5 + 7*s13^4*s23 - 57*s13^3*s23^2 + 
                154*s13^2*s23^3 + 155*s13*s23^4 + 9*s23^5)) - 
            p3q^3*(s13^2*(157*s13 - 11*s23)*s23^2*(s13 + s23)^2 + 
              s12^5*(9*s13^2 - 19*s23^2) - s12^4*(18*s13^3 - 162*s13^2*s23 + 
                27*s13*s23^2 + 19*s23^3) + s12^2*s23*(135*s13^4 + 
                140*s13^3*s23 + 82*s13^2*s23^2 - 38*s13*s23^3 + 29*s23^4) + 
              s12^3*(-54*s13^4 + 9*s13^3*s23 + 157*s13^2*s23^2 + 
                59*s13*s23^3 + 29*s23^4) + s12*s13*(27*s13^5 + 90*s13^4*s23 - 
                477*s13^3*s23^2 - 686*s13^2*s23^3 + 20*s13*s23^4 + 
                166*s23^5)) + p1q*p3q^2*(s12^4*(9*s13^3 + 9*s13^2*s23 - 
                19*s13*s23^2 - 37*s23^3) + s12^3*(-9*s13^4 + 162*s13^3*s23 + 
                380*s13^2*s23^2 - 129*s13*s23^3 - 56*s23^4) + 
              s13*(s13 + s23)^2*(9*s13^4 + 27*s13^3*s23 - 446*s13^2*s23^2 - 
                42*s13*s23^3 + 206*s23^4) - s12^2*(36*s13^5 + 90*s13^4*s23 - 
                56*s13^3*s23^2 + 89*s13^2*s23^3 + 100*s13*s23^4 - 19*s23^5) + 
              s12*(-9*s13^6 + 90*s13^5*s23 + 431*s13^4*s23^2 + 68*s13^3*
                 s23^3 - 466*s13^2*s23^4 - 164*s13*s23^5 + 38*s23^6)))))/
        (27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23^2*(s13 + s23)*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*(-2*p1q^4*s23^2*(s13 + s23)^2*(s12 + s13 + s23)*
           (p2q*s13*(9*s13^3 + 50*s13^2*s23 + s13*s23^2 - 40*s23^3) + 
            p3q*s12*(9*s13^3 - 10*s13*s23^2 - 5*s23^3) + 
            p3q*s13*(9*s13^3 + 14*s13^2*s23 + 10*s13*s23^2 + 5*s23^3) + 
            p2q*s12*(9*s13^3 - s13*s23^2 + 40*s23^3)) + 
          4*p2q^5*s13^3*(s13 + s23)*(s23*(s13 + s23)^2*(9*s13^2 - 
              38*s13*s23 - 87*s23^2) + s12^2*(9*s13^3 + 21*s13*s23^2 + 
              10*s23^3) + s12*(9*s13^4 + 18*s13^3*s23 - 8*s13^2*s23^2 - 
              94*s13*s23^3 - 77*s23^4)) - 2*p3q^5*s12^2*(s13 + s23)*
           (5*s12^4*s23^2 + 5*s12^3*s23^2*(2*s13 + 3*s23) + 
            9*s13^2*s23*(s13 + s23)^2*(11*s13 + 4*s23) + 
            s12*s13*(18*s13^4 + 81*s13^3*s23 + 43*s13^2*s23^2 - 
              30*s13*s23^3 - 10*s23^4) + s12^2*(18*s13^4 - 36*s13^3*s23 - 
              51*s13^2*s23^2 + 5*s13*s23^3 + 10*s23^4)) + 
          p2q^4*p3q*s13^2*(s13*(s13 + s23)^3*(36*s13^3 + 126*s13^2*s23 + 
              961*s13*s23^2 - 257*s23^3) - 4*s12^3*(27*s13^4 - 36*s13^3*s23 - 
              276*s13^2*s23^2 - 323*s13*s23^3 - 90*s23^4) + 
            s12*(s13 + s23)^2*(72*s13^4 + 1692*s13^3*s23 + 3921*s13^2*s23^2 + 
              2465*s13*s23^3 + 172*s23^4) + 2*s12^2*(-36*s13^5 - 
              63*s13^4*s23 + 215*s13^3*s23^2 + 721*s13^2*s23^3 + 
              605*s13*s23^4 + 126*s23^5)) + p2q^2*p3q^3*
           (-2*s13^3*s23*(s13 + s23)^3*(99*s13^2 - 342*s13*s23 + 179*s23^2) - 
            s12*s13^2*(s13 + s23)^2*(108*s13^4 - 270*s13^3*s23 + 
              368*s13^2*s23^2 - 2847*s13*s23^3 - 785*s23^4) + 
            s12^5*(-36*s13^4 + 54*s13^3*s23 - 94*s13^2*s23^2 + 16*s13*s23^3 + 
              100*s23^4) + 2*s12^4*(36*s13^5 - 333*s13^4*s23 - 
              1299*s13^3*s23^2 - 856*s13^2*s23^3 - 6*s13*s23^4 + 60*s23^5) + 
            s12^2*s13*s23*(-1314*s13^5 - 2553*s13^4*s23 + 1772*s13^3*s23^2 + 
              5343*s13^2*s23^3 + 2656*s13*s23^4 + 324*s23^5) + 
            s12^3*(216*s13^6 + 2934*s13^5*s23 + 7311*s13^4*s23^2 + 
              4782*s13^3*s23^3 + 625*s13^2*s23^4 + 216*s13*s23^5 + 
              20*s23^6)) - p2q*p3q^4*s12*(100*s12^5*s23^2*(s13 + s23) - 
            2*s13^2*s23*(s13 + s23)^2*(198*s13^3 - 108*s13^2*s23 + 
              539*s13*s23^2 + 45*s23^3) + 2*s12^4*(18*s13^4 - 27*s13^3*s23 + 
              138*s13^2*s23^2 + 188*s13*s23^3 + 55*s23^4) + 
            2*s12^3*(36*s13^5 + 540*s13^4*s23 + 1642*s13^3*s23^2 + 
              1323*s13^2*s23^3 + 230*s13*s23^4 - 5*s23^5) + 
            s12^2*(-72*s13^6 - 234*s13^5*s23 + 1357*s13^4*s23^2 + 
              4574*s13^3*s23^3 + 3189*s13^2*s23^4 + 274*s13*s23^5 - 
              20*s23^6) + s12*s13*(-108*s13^6 - 108*s13^5*s23 + 
              893*s13^4*s23^2 + 1989*s13^3*s23^3 + 1907*s13^2*s23^4 + 
              831*s13*s23^5 + 20*s23^6)) + p2q^3*p3q^2*s13*
           (3*s13^2*(s13 + s23)^3*(12*s13^3 - 24*s13^2*s23 + 611*s13*s23^2 - 
              89*s23^3) - 3*s12*s13*(s13 + s23)^2*(24*s13^4 - 318*s13^3*s23 - 
              799*s13^2*s23^2 - 1226*s13*s23^3 - 289*s23^4) + 
            2*s12^4*(54*s13^4 - 117*s13^3*s23 - 335*s13^2*s23^2 + 
              18*s13*s23^3 + 92*s23^4) + 2*s12^3*s23*(315*s13^4 + 
              1855*s13^3*s23 + 2638*s13^2*s23^2 + 1362*s13*s23^3 + 
              264*s23^4) + s12^2*(-216*s13^6 - 3726*s13^5*s23 - 
              9072*s13^4*s23^2 - 4875*s13^3*s23^3 + 3218*s13^2*s23^4 + 
              2875*s13*s23^5 + 344*s23^6)) + 2*p1q^3*s23^2*(s13 + s23)*
           (s12 + s13 + s23)*(p3q^2*(-(s13*(s13 + s23)^2*(27*s13^2 + 
                 42*s13*s23 + 10*s23^2)) + s12^2*(9*s13^3 - 15*s13*s23^2 - 
                10*s23^3) + s12*(5*s13^4 + 39*s13^3*s23 + 74*s13^2*s23^2 + 
                50*s13*s23^3 + 10*s23^4)) + p2q^2*(s12*(34*s13^4 - 
                17*s13^3*s23 + 112*s13^2*s23^2 + 83*s13*s23^3 - 40*s23^4) + 
              2*s13*(69*s13^4 + 136*s13^3*s23 + 206*s13^2*s23^2 + 
                240*s13*s23^3 + 101*s23^4)) + p2q*p3q*
             (s12^2*(9*s13^3 + 18*s13^2*s23 + 147*s13*s23^2 + 170*s23^3) + 
              s12*(66*s13^4 + 49*s13^3*s23 + 51*s13^2*s23^2 + 43*s13*s23^3 + 
                15*s23^4) + s13*(-6*s13^4 + 104*s13^3*s23 + 453*s13^2*s23^2 + 
                490*s13*s23^3 + 147*s23^4))) + 
          p1q^2*(2*p3q^3*(s13 + s23)*(-(s13^2*s23^2*(s13 + s23)^3*
                (77*s13 + 5*s23)) + s12^4*s13*(9*s13^3 + 9*s13^2*s23 - 
                10*s13*s23^2 - 15*s23^3) + s12*s13*s23*(s13 + s23)^2*(
                9*s13^3 + 77*s13^2*s23 + 176*s13*s23^2 + 30*s23^3) + 
              s12^3*(18*s13^5 + 45*s13^4*s23 + 2*s13^3*s23^2 - 108*s13^2*
                 s23^3 - 105*s13*s23^4 - 30*s23^5) + s12^2*(9*s13^6 + 
                45*s13^5*s23 + 193*s13^4*s23^2 + 255*s13^3*s23^3 + 
                38*s13^2*s23^4 - 90*s13*s23^5 - 30*s23^6)) + 
            2*p2q^3*s13*(s13 + s23)*(s12^2*(9*s13^5 + 108*s13^4*s23 + 
                354*s13^3*s23^2 + 6*s13^2*s23^3 - 7*s13*s23^4 + 122*s23^5) + 
              (s13 + s23)^2*(9*s13^5 + 63*s13^4*s23 + 250*s13^3*s23^2 + 
                69*s13^2*s23^3 + 275*s13*s23^4 + 162*s23^5) + 
              s12*(18*s13^6 + 189*s13^5*s23 + 775*s13^4*s23^2 + 679*s13^3*
                 s23^3 + 343*s13^2*s23^4 + 552*s13*s23^5 + 284*s23^6)) - 
            p2q^2*p3q*(-(s12*s23*(s13 + s23)^2*(2214*s13^5 + 3060*s13^4*s23 - 
                 1937*s13^3*s23^2 - 2867*s13^2*s23^3 - 552*s13*s23^4 + 
                 20*s23^5)) - s13*(s13 + s23)^3*(18*s13^5 + 306*s13^4*s23 + 
                580*s13^3*s23^2 - 1217*s13^2*s23^3 + 243*s13*s23^4 + 
                304*s23^5) + 2*s12^3*(18*s13^6 + 117*s13^5*s23 + 
                107*s13^4*s23^2 + 127*s13^3*s23^3 + 347*s13^2*s23^4 + 
                58*s13*s23^5 - 130*s23^6) + 2*s12^2*(27*s13^7 + 
                72*s13^6*s23 + 702*s13^5*s23^2 + 2672*s13^4*s23^3 + 
                4057*s13^3*s23^4 + 2528*s13^2*s23^5 + 346*s13*s23^6 - 
                140*s23^7)) + p2q*p3q^2*(s13*s23*(s13 + s23)^3*(18*s13^4 + 
                124*s13^3*s23 - 1411*s13^2*s23^2 - 569*s13*s23^3 - 
                20*s23^4) + 2*s12^4*(9*s13^5 + 18*s13^4*s23 - 10*s13^3*
                 s23^2 - 196*s13^2*s23^3 - 447*s13*s23^4 - 270*s23^5) - 
              2*s12^3*s23*(117*s13^5 + 195*s13^4*s23 + 368*s13^3*s23^2 + 
                1046*s13^2*s23^3 + 1021*s13*s23^4 + 305*s23^5) - 
              s12*(s13 + s23)^2*(36*s13^6 + 324*s13^5*s23 + 2800*s13^4*
                 s23^2 + 5667*s13^3*s23^3 + 4269*s13^2*s23^4 + 862*s13*
                 s23^5 - 20*s23^6) - 2*s12^2*(27*s13^7 + 1224*s13^6*s23 + 
                4652*s13^5*s23^2 + 7273*s13^4*s23^3 + 6211*s13^3*s23^4 + 
                3118*s13^2*s23^5 + 750*s13*s23^6 + 25*s23^7))) + 
          p1q*(2*p2q^4*s13^2*(s13 + s23)*(s12^2*(27*s13^4 + 108*s13^3*s23 + 
                353*s13^2*s23^2 + 34*s13*s23^3 - 118*s23^4) + 
              (s13 + s23)^2*(9*s13^4 + 81*s13^3*s23 + 27*s13^2*s23^2 - 
                289*s13*s23^3 - 4*s23^4) + s12*(36*s13^5 + 225*s13^4*s23 + 
                569*s13^3*s23^2 + 125*s13^2*s23^3 - 377*s13*s23^4 - 
                122*s23^5)) + 2*p3q^4*s12*(s13 + s23)*
             (s13^2*s23*(s13 + s23)^2*(99*s13^2 + 203*s13*s23 + 41*s23^2) + 
              s12^4*(-9*s13^3 + 15*s13*s23^2 + 10*s23^3) + s12^3*(-18*s13^4 - 
                27*s13^3*s23 + 39*s13^2*s23^2 + 75*s13*s23^3 + 40*s23^4) + 
              s12*s13*(18*s13^5 + 90*s13^4*s23 + 47*s13^3*s23^2 - 
                189*s13^2*s23^3 - 194*s13*s23^4 - 30*s23^5) + 
              s12^2*(9*s13^5 - 54*s13^4*s23 - 222*s13^3*s23^2 - 131*s13^2*
                 s23^3 + 50*s13*s23^4 + 30*s23^5)) - p2q^3*p3q*s13*
             (-(s13*(s13 + s23)^3*(54*s13^4 + 432*s13^3*s23 + 1535*s13^2*
                  s23^2 - 1722*s13*s23^3 - 463*s23^4)) - s12*(s13 + s23)^2*(
                54*s13^5 + 3654*s13^4*s23 + 6437*s13^3*s23^2 + 316*s13^2*
                 s23^3 - 2933*s13*s23^4 - 668*s23^5) + 2*s12^3*(63*s13^5 + 
                234*s13^4*s23 - 48*s13^3*s23^2 - 400*s13^2*s23^3 + 
                113*s13*s23^4 + 214*s23^5) + 2*s12^2*(63*s13^6 + 
                450*s13^5*s23 + 1468*s13^4*s23^2 + 2718*s13^3*s23^3 + 
                3265*s13^2*s23^4 + 2176*s13*s23^5 + 548*s23^6)) + 
            p2q*p3q^3*(-2*s13^2*s23*(s13 + s23)^3*(99*s13^3 - 85*s13^2*s23 + 
                441*s13*s23^2 + 5*s23^3) - 2*s12^5*(9*s13^4 + 9*s13^3*s23 - 
                69*s13^2*s23^2 - 259*s13*s23^3 - 190*s23^4) - 
              s12*s13*(s13 + s23)^2*(72*s13^5 + 126*s13^4*s23 - 
                19*s13^3*s23^2 - 2781*s13^2*s23^3 - 1540*s13*s23^4 - 
                40*s23^5) + 2*s12^4*(27*s13^5 + 126*s13^4*s23 + 127*s13^3*
                 s23^2 + 646*s13^2*s23^3 + 743*s13*s23^4 + 215*s23^5) + 
              2*s12^3*(81*s13^6 + 1674*s13^5*s23 + 5446*s13^4*s23^2 + 
                6631*s13^3*s23^3 + 3533*s13^2*s23^4 + 720*s13*s23^5 + 
                5*s23^6) + s12^2*(18*s13^7 - 450*s13^6*s23 + 2691*s13^5*
                 s23^2 + 13202*s13^4*s23^3 + 16875*s13^3*s23^4 + 
                7674*s13^2*s23^5 + 802*s13*s23^6 - 40*s23^7)) + 
            p2q^2*p3q^2*(s13^2*(s13 + s23)^3*(36*s13^4 - 54*s13^3*s23 + 
                1651*s13^2*s23^2 - 1900*s13*s23^3 - 465*s23^4) + 
              2*s12^4*(45*s13^5 + 108*s13^4*s23 + 25*s13^3*s23^2 + 
                199*s13^2*s23^3 + 7*s13*s23^4 - 140*s23^5) - 
              s12*s13*(s13 + s23)^2*(90*s13^5 - 126*s13^4*s23 + 1334*s13^3*
                 s23^2 + 1525*s13^2*s23^3 + 2275*s13*s23^4 + 628*s23^5) + 
              2*s12^3*(9*s13^6 + 72*s13^5*s23 + 1972*s13^4*s23^2 + 
                4126*s13^3*s23^3 + 2484*s13^2*s23^4 + 147*s13*s23^5 - 
                160*s23^6) - s12^2*(198*s13^7 + 7236*s13^6*s23 + 
                20665*s13^5*s23^2 + 17672*s13^4*s23^3 + 2419*s13^3*s23^4 - 
                1558*s13^2*s23^5 + 108*s13*s23^6 + 40*s23^7)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23^2*
         (s13 + s23)^2*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (2*p1q^4*s23^2*(s13 + s23)^2*(s12 + s13 + s23)*
          (p2q*s13*(325*s13^3 + 162*s13^2*s23 - 203*s13*s23^2 - 40*s23^3) + 
           p3q*s13*(127*s13^3 + 117*s13^2*s23 - 5*s13*s23^2 + 5*s23^3) - 
           p3q*s12*(71*s13^3 + 67*s13^2*s23 + 5*s13*s23^2 + 15*s23^3) + 
           p2q*s12*(127*s13^3 + 257*s13^2*s23 + 202*s13*s23^2 + 120*s23^3)) - 
         p2q^5*s13^3*(s13 + s23)*(-16*s23^2*(s13 + s23)^2*(28*s13 + 33*s23) + 
           s12^2*(54*s13^3 - 189*s13^2*s23 - 164*s13*s23^2 - s23^3) + 
           s12*(54*s13^4 - 135*s13^3*s23 - 801*s13^2*s23^2 - 1141*s13*s23^3 - 
             529*s23^4)) + p3q^5*s12^2*(10*s12^4*s23^2*(2*s13 + s23) + 
           3*s13^2*s23*(s13 + s23)^3*(99*s13 + 31*s23) + 10*s12^3*s23^2*
            (4*s13^2 + 10*s13*s23 + 5*s23^2) + s12*s13*(s13 + s23)^2*
            (54*s13^3 + 351*s13^2*s23 + 187*s13*s23^2 + 80*s23^3) + 
           2*s12^2*(27*s13^5 + 54*s13^4*s23 + 84*s13^3*s23^2 + 
             132*s13^2*s23^3 + 95*s13*s23^4 + 20*s23^5)) + 
         p2q^4*p3q*s13^2*(-(s13*(s13 + s23)^3*(54*s13^3 - 756*s13^2*s23 - 
              469*s13*s23^2 - 731*s23^3)) + s12^3*(162*s13^4 - 99*s13^3*s23 - 
             845*s13^2*s23^2 - 1045*s13*s23^3 - 381*s23^4) - 
           s12*(s13 + s23)^2*(108*s13^4 + 1503*s13^3*s23 + 2474*s13^2*s23^2 + 
             717*s13*s23^3 - 266*s23^4) + s12^2*(108*s13^5 + 990*s13^4*s23 + 
             2314*s13^3*s23^2 + 2055*s13^2*s23^3 + 748*s13*s23^4 + 
             125*s23^5)) + p2q^2*p3q^3*(s13^3*s23*(s13 + s23)^3*
            (297*s13^2 - 519*s13*s23 + 176*s23^2) + s12*s13^2*(s13 + s23)^2*
            (162*s13^4 - 783*s13^3*s23 + 949*s13^2*s23^2 - 1159*s13*s23^3 - 
             429*s23^4) + s12^5*(54*s13^4 + 414*s13^3*s23 - 314*s13^2*s23^2 - 
             834*s13*s23^3 - 280*s23^4) + s12^2*s13*s23*(2736*s13^5 + 
             3851*s13^4*s23 - 4426*s13^3*s23^2 - 9199*s13^2*s23^3 - 
             4084*s13*s23^4 - 426*s23^5) - 2*s12^4*(54*s13^5 - 
             594*s13^4*s23 - 1626*s13^3*s23^2 - 753*s13^2*s23^3 + 
             370*s13*s23^4 + 160*s23^5) - s12^3*(324*s13^6 + 5346*s13^5*s23 + 
             12141*s13^4*s23^2 + 7748*s13^3*s23^3 + 921*s13^2*s23^4 + 
             92*s13*s23^5 + 40*s23^6)) + p2q*p3q^4*s12*
          (20*s12^5*s23^2*(19*s13 + 14*s23) - 2*s13^2*s23*(s13 + s23)^2*
            (297*s13^3 + 84*s13^2*s23 + 487*s13*s23^2 + 60*s23^3) + 
           s12^4*(54*s13^4 + 306*s13^3*s23 + 464*s13^2*s23^2 + 
             562*s13*s23^3 + 310*s23^4) + 2*s12^3*(54*s13^5 + 
             1089*s13^4*s23 + 2415*s13^3*s23^2 + 1464*s13^2*s23^3 + 
             124*s13*s23^4 - 5*s23^5) + s12^2*(-108*s13^6 - 990*s13^5*s23 + 
             163*s13^4*s23^2 + 4108*s13^3*s23^3 + 3139*s13^2*s23^4 + 
             196*s13*s23^5 - 40*s23^6) - s12*s13*(162*s13^6 + 378*s13^5*s23 + 
             1259*s13^4*s23^2 + 2175*s13^3*s23^3 + 1131*s13^2*s23^4 + 
             79*s13*s23^5 + 80*s23^6)) - p2q^3*p3q^2*s13*
          (s13^2*(s13 + s23)^3*(54*s13^3 - 540*s13^2*s23 + 1011*s13*s23^2 - 
             379*s23^3) - s12*s13*(s13 + s23)^2*(108*s13^4 - 2664*s13^3*s23 - 
             2509*s13^2*s23^2 - 1188*s13*s23^3 - 43*s23^4) + 
           6*s12^4*(27*s13^4 + 75*s13^3*s23 + 10*s13^2*s23^2 - 77*s13*s23^3 - 
             29*s23^4) + s12^3*s23*(2565*s13^4 + 8282*s13^3*s23 + 
             8505*s13^2*s23^2 + 2960*s13*s23^3 + 172*s23^4) + 
           s12^2*(-324*s13^6 - 4887*s13^5*s23 - 10953*s13^4*s23^2 - 
             5264*s13^3*s23^3 + 4045*s13^2*s23^4 + 3265*s13*s23^5 + 
             346*s23^6)) + 2*p1q^3*s23*(s13 + s23)*(s12 + s13 + s23)*
          (p2q*p3q*(-(s12^2*(189*s13^4 + 734*s13^3*s23 + 935*s13^2*s23^2 + 
                1026*s13*s23^3 + 500*s23^4)) + s13*(207*s13^5 + 1040*s13^4*
                s23 + 1384*s13^3*s23^2 + 278*s13^2*s23^3 - 431*s13*s23^4 - 
               158*s23^5) + s12*(18*s13^5 + 351*s13^4*s23 + 1666*s13^3*
                s23^2 + 1492*s13^2*s23^3 + 164*s13*s23^4 - 35*s23^5)) + 
           p3q^2*(154*s13^3*s23*(s13 + s23)^2 + s12^2*(9*s13^4 + 112*s13^3*
                s23 + 91*s13^2*s23^2 + 45*s13*s23^3 + 40*s23^4) - 
             s12*(189*s13^5 + 601*s13^4*s23 + 470*s13^3*s23^2 + 38*s13^2*
                s23^3 + 20*s23^5)) + p2q^2*(s13*(9*s13^5 + 1192*s13^4*s23 + 
               2111*s13^3*s23^2 + 439*s13^2*s23^3 - 692*s13*s23^4 - 203*
                s23^5) + s12*(207*s13^5 + 592*s13^4*s23 + 858*s13^3*s23^2 + 
               432*s13^2*s23^3 + 119*s13*s23^4 + 120*s23^5))) + 
         p1q^2*(p2q^3*s13*(s13 + s23)*(s12^2*(36*s13^5 + 882*s13^4*s23 + 1515*
                s13^3*s23^2 + 1954*s13^2*s23^3 + 639*s13*s23^4 - 406*s23^5) + 
             2*(s13 + s23)^2*(18*s13^5 + 45*s13^4*s23 + 1615*s13^3*s23^2 + 
               1748*s13^2*s23^3 - 123*s13*s23^4 - 163*s23^5) + 
             s12*(72*s13^6 + 1044*s13^5*s23 + 5717*s13^4*s23^2 + 10195*s13^3*
                s23^3 + 5843*s13^2*s23^4 - 339*s13*s23^5 - 732*s23^6)) + 
           p3q^3*(231*s13^3*s23^2*(s13 + s23)^4 - s12*s13*s23*(s13 + s23)^3*
              (342*s13^3 + 573*s13^2*s23 + 123*s13*s23^2 - 80*s23^3) + 
             2*s12^4*(18*s13^5 + 18*s13^4*s23 - 28*s13^3*s23^2 - 48*s13^2*
                s23^3 - 55*s13*s23^4 - 30*s23^5) + s12^2*(s13 + s23)^2*
              (36*s13^5 + 144*s13^4*s23 - 192*s13^3*s23^2 - 129*s13^2*s23^3 + 
               80*s13*s23^4 + 120*s23^5) + 2*s12^3*(36*s13^6 + 297*s13^5*
                s23 + 539*s13^4*s23^2 + 227*s13^3*s23^3 - 106*s13^2*s23^4 - 
               25*s13*s23^5 + 30*s23^6)) + p2q^2*p3q*
            (s13*(s13 + s23)^3*(36*s13^5 + 1638*s13^4*s23 + 3142*s13^3*
                s23^2 + 3037*s13^2*s23^3 - 61*s13*s23^4 - 326*s23^5) + 
             2*s12*s23*(s13 + s23)^2*(117*s13^5 + 1883*s13^4*s23 + 5016*s13^3*
                s23^2 + 3562*s13^2*s23^3 + 500*s13*s23^4 - 20*s23^5) - 
             s12^2*(s13 + s23)^2*(108*s13^5 - 450*s13^4*s23 - 1128*s13^3*
                s23^2 - 4375*s13^2*s23^3 - 396*s13*s23^4 + 800*s23^5) - 
             2*s12^3*(36*s13^6 + 747*s13^5*s23 + 2133*s13^4*s23^2 + 2304*
                s13^3*s23^3 + 1327*s13^2*s23^4 + 865*s13*s23^5 + 380*
                s23^6)) + p2q*p3q^2*(s13^2*s23*(s13 + s23)^3*(450*s13^3 + 692*
                s13^2*s23 + 1383*s13*s23^2 + 149*s23^3) + 
             2*s12^4*(18*s13^5 + 342*s13^4*s23 + 755*s13^3*s23^2 + 1527*s13^2*
                s23^3 + 1916*s13*s23^4 + 780*s23^5) + 2*s12^3*s23*
              (-585*s13^5 - 2548*s13^4*s23 - 2869*s13^3*s23^2 + 808*s13^2*
                s23^3 + 2539*s13*s23^4 + 865*s23^5) - 2*s12*(s13 + s23)^2*
              (36*s13^6 + 801*s13^5*s23 + 56*s13^4*s23^2 - 2141*s13^3*s23^3 - 
               2048*s13^2*s23^4 - 564*s13*s23^5 + 20*s23^6) - 
             s12^2*(108*s13^7 + 810*s13^6*s23 + 3576*s13^5*s23^2 + 7161*s13^4*
                s23^3 + 5370*s13^3*s23^4 + 269*s13^2*s23^5 - 944*s13*s23^6 - 
               130*s23^7))) + p1q*(p2q^4*s13^2*(s13 + s23)*
            (2*(s13 + s23)^2*(18*s13^4 + 36*s13^3*s23 + 981*s13^2*s23^2 + 
               1246*s13*s23^3 + 163*s23^4) + s12^2*(-18*s13^4 + 657*s13^3*
                s23 + 749*s13^2*s23^2 + 1007*s13*s23^3 + 693*s23^4) + 
             s12*(18*s13^5 + 747*s13^4*s23 + 3440*s13^3*s23^2 + 6210*s13^2*
                s23^3 + 4518*s13*s23^4 + 1019*s23^5)) - 
           p3q^4*s12*(3*s13^2*s23*(s13 + s23)^3*(99*s13^2 + 198*s13*s23 + 31*
                s23^2) + 2*s12^4*s13*(18*s13^3 + 9*s13^2*s23 - 4*s13*s23^2 + 
               5*s23^3) + s12*s13*(s13 + s23)^2*(54*s13^4 + 63*s13^3*s23 + 
               183*s13^2*s23^2 + 144*s13*s23^3 + 160*s23^4) + 
             2*s12^3*(36*s13^5 + 81*s13^4*s23 - 25*s13^2*s23^3 + 85*s13*
                s23^4 + 60*s23^5) + s12^2*(90*s13^6 - 36*s13^5*s23 - 547*
                s13^4*s23^2 - 422*s13^3*s23^3 + 319*s13^2*s23^4 + 440*s13*
                s23^5 + 120*s23^6)) + p2q^3*p3q*s13*
            (-(s13*(s13 + s23)^3*(18*s13^4 - 1980*s13^3*s23 - 2199*s13^2*
                 s23^2 - 2900*s13*s23^3 - 475*s23^4)) - s12^3*s23*
              (837*s13^4 + 2497*s13^3*s23 + 2843*s13^2*s23^2 + 751*s13*
                s23^3 - 272*s23^4) - s12*(s13 + s23)^2*(144*s13^5 + 1530*
                s13^4*s23 + 451*s13^3*s23^2 - 4908*s13^2*s23^3 - 4333*s13*
                s23^4 - 712*s23^5) + s12^2*(-126*s13^6 + 2007*s13^5*s23 + 
               7426*s13^4*s23^2 + 10690*s13^3*s23^3 + 8984*s13^2*s23^4 + 4571*
                s13*s23^5 + 984*s23^6)) - p2q*p3q^3*
            (-(s13^3*s23*(s13 + s23)^3*(297*s13^2 + 695*s23^2)) + 
             2*s12^5*(18*s13^4 - 27*s13^3*s23 + 347*s13^2*s23^2 + 1022*s13*
                s23^3 + 540*s23^4) - s12*s13*(s13 + s23)^2*(108*s13^5 - 873*
                s13^4*s23 - 162*s13^3*s23^2 - 1235*s13^2*s23^3 - 630*s13*
                s23^4 + 80*s23^5) + 2*s12^4*(9*s13^5 - 936*s13^4*s23 - 1536*
                s13^3*s23^2 + 209*s13^2*s23^3 + 1445*s13*s23^4 + 605*s23^5) + 
             s12^3*(-72*s13^6 + 1674*s13^5*s23 + 7185*s13^4*s23^2 + 9230*
                s13^3*s23^3 + 4805*s13^2*s23^4 + 984*s13*s23^5 + 50*s23^6) + 
             s12^2*(-162*s13^7 - 1926*s13^6*s23 + 709*s13^5*s23^2 + 13433*
                s13^4*s23^3 + 18469*s13^3*s23^4 + 8517*s13^2*s23^5 + 928*s13*
                s23^6 - 80*s23^7)) + p2q^2*p3q^2*
            (-(s13^2*(s13 + s23)^3*(54*s13^4 - 990*s13^3*s23 + 339*s13^2*
                 s23^2 - 1742*s13*s23^3 - 149*s23^4)) - s12*s13*(s13 + s23)^2*
              (54*s13^5 + 3780*s13^4*s23 + 939*s13^3*s23^2 - 3642*s13^2*
                s23^3 - 3119*s13*s23^4 - 792*s23^5) + 
             2*s12^4*(27*s13^5 + 72*s13^4*s23 + 285*s13^3*s23^2 + 873*s13^2*
                s23^3 + 1043*s13*s23^4 + 400*s23^5) + 
             s12^3*(162*s13^6 - 4626*s13^5*s23 - 16421*s13^4*s23^2 - 18588*
                s13^3*s23^3 - 6083*s13^2*s23^4 + 1672*s13*s23^5 + 880*
                s23^6) + s12^2*(108*s13^7 + 3474*s13^6*s23 + 6511*s13^5*
                s23^2 - 3395*s13^4*s23^3 - 12525*s13^3*s23^4 - 6407*s13^2*
                s23^5 - 342*s13*s23^6 + 80*s23^7))))/(54*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12*s13^3*s23^2*(s13 + s23)^2*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]] + 
     ((ep^3*(-(p3q*(95*s12^3 + 40*s13*s23^2 + s12*s23*(71*s13 + 7*s23) + 
             s12^2*(23*s13 + 102*s23))) + p1q*(s23^2*(-33*s13 + 7*s23) + 
            s12^2*(72*s13 + 95*s23) + s12*s23*(31*s13 + 102*s23)) + 
          p2q*(s13*(33*s13 - 7*s23)*s23 + s12^2*(95*s13 + 80*s23) + 
            s12*(23*s13^2 + 72*s13*s23 + 80*s23^2))))/(27*(p1q + p2q + p3q)*
         s12*s13*(s12 + s23)) + 
       (ep^2*(p2q^5*s13^2*(-9*s12^4*s13 + 10*s13*s23^3*(s13 + s23) + 
            s12^3*(-9*s13^2 + 5*s23^2) + s12*s23^2*(29*s13^2 + 44*s13*s23 + 
              5*s23^2) + s12^2*s23*(9*s13^2 + 43*s13*s23 + 10*s23^2)) - 
          p3q^5*s12^2*(s12 + s23)*(-9*s12^3*(s13 - 6*s23) + 
            s23^2*(171*s13^2 + 337*s13*s23 + 166*s23^2) + 
            s12^2*(-9*s13^2 + 135*s13*s23 + 314*s23^2) + 
            s12*s23*(90*s13^2 + 521*s13*s23 + 426*s23^2)) + 
          p2q*p3q^4*s12*(9*s12^6 + 18*s12^5*(s13 - 3*s23) + 
            5*s13*s23^3*(2*s13^2 + 5*s13*s23 - 17*s23^2) - 
            s12^4*(18*s13^2 + 27*s13*s23 + 797*s23^2) + 
            s12^2*s23*(162*s13^3 + 369*s13^2*s23 - 918*s13*s23^2 - 
              1696*s23^3) + s12*s23^2*(271*s13^3 + 246*s13^2*s23 - 
              591*s13*s23^2 - 517*s23^3) - s12^3*(27*s13^3 - 90*s13^2*s23 + 
              457*s13*s23^2 + 1913*s23^3)) + p2q^2*p3q^3*
           (9*s12^7 - 9*s12^6*(2*s13 - 5*s23) - 19*s13^2*s23^3*
             (s13 + s23)^2 + s12^4*s23*(153*s13^2 + 875*s13*s23 - 
              1341*s23^2) + s12^5*(-54*s13^2 + 153*s13*s23 - 451*s23^2) - 
            s12*s13*s23^2*(29*s13^3 + 109*s13^2*s23 + 26*s13*s23^2 + 
              246*s23^3) + 3*s12^3*(9*s13^4 + 66*s13^3*s23 + 293*s13^2*s23^
                2 + 279*s13*s23^3 - 398*s23^4) + s12^2*s23*(-81*s13^4 + 
              241*s13^3*s23 + 625*s13^2*s23^2 - 113*s13*s23^3 - 340*s23^4)) + 
          p2q^4*p3q*s13*(27*s12^5*s13 + s12^4*(18*s13^2 + 45*s13*s23 + 
              152*s23^2) + s13*s23^2*(19*s13^3 + 48*s13^2*s23 + 
              19*s13*s23^2 - 10*s23^3) + s12*s23^2*(103*s13^3 + 
              140*s13^2*s23 + 112*s13*s23^2 - 5*s23^3) + 
            s12^3*(-18*s13^3 + 27*s13^2*s23 - 69*s13*s23^2 + 59*s23^3) - 
            s12^2*(9*s13^4 + 63*s13^3*s23 - 33*s13^2*s23^2 + 109*s13*s23^3 + 
              98*s23^4)) - p2q^3*p3q^2*(27*s12^6*s13 + s12^5*s23*
             (90*s13 + 157*s23) + s13^2*s23^2*(-19*s13^3 - 19*s13^2*s23 + 
              29*s13*s23^2 + 29*s23^3) + s12*s13*s23^2*(-27*s13^3 + 
              59*s13^2*s23 - 38*s13*s23^2 + 166*s23^3) + 
            s12^4*(-54*s13^3 + 135*s13^2*s23 - 477*s13*s23^2 + 303*s23^3) + 
            s12^3*(-18*s13^4 + 9*s13^3*s23 + 140*s13^2*s23^2 - 
              686*s13*s23^3 + 135*s23^4) + s12^2*(9*s13^5 + 162*s13^4*s23 + 
              157*s13^3*s23^2 + 82*s13^2*s23^3 + 20*s13*s23^4 - 11*s23^5)) - 
          p1q^3*(p2q + p3q)*s23^2*(s12 + s23)*(s12 + s13 + s23)*
           (p2q*(9*s12^3 + 23*s12^2*s23 + 24*s12*s23^2 + 10*s23^3) + 
            p3q*(s12^2*(9*s13 - 41*s23) - 2*s12*s23^2 - s23^2*(s13 + s23))) + 
          p1q^2*s23*(p2q^3*s23*(s12 + s23)*(30*s13*s23^2*(s13 + s23) + 
              s12^3*(41*s13 + 5*s23) + s12*s23*(67*s13^2 + 102*s13*s23 + 
                5*s23^2) + s12^2*(41*s13^2 + 113*s13*s23 + 10*s23^2)) + 
            p3q^3*s23*(s12 + s23)*(-147*s12^4 + s23^2*(s13 + s23)^2 - 
              2*s12^3*(113*s13 + 84*s23) + 2*s12*s23*(5*s13^2 + 9*s13*s23 + 
                4*s23^2) - s12^2*(79*s13^2 + 90*s13*s23 + 14*s23^2)) + 
            p2q^2*p3q*(-13*s12^5*s23 + s12^4*(-72*s13^2 + 40*s13*s23 + 
                177*s23^2) + s12^3*s23*(-252*s13^2 + 179*s13*s23 + 
                575*s23^2) + s23^3*(17*s13^3 + 64*s13^2*s23 + 37*s13*s23^2 - 
                10*s23^3) + 3*s12*s23^2*(6*s13^3 + 67*s13^2*s23 + 
                95*s13*s23^2 + 54*s23^3) + s12^2*s23*(9*s13^3 - 
                83*s13^2*s23 + 387*s13*s23^2 + 557*s23^3)) + 
            p2q*p3q^2*(s12^5*(72*s13 - 115*s23) + s12^4*(7*s13 - 8*s23)*s23 + 
              3*s12^3*s23*(-85*s13^2 - 19*s13*s23 + 171*s23^2) + 
              s23^3*(17*s13^3 + 35*s13^2*s23 + 9*s13*s23^2 - 9*s23^3) + 
              s12*s23^2*(18*s13^3 + 97*s13^2*s23 + 155*s13*s23^2 + 
                166*s23^3) + s12^2*s23*(9*s13^3 - 233*s13^2*s23 + 
                154*s13*s23^2 + 581*s23^3))) + 
          p1q*(p2q^4*s13*(9*s12^5*s13 - 30*s13*s23^4*(s13 + s23) - 
              5*s12^3*s23^2*(15*s13 + 4*s23) + s12^4*(9*s13^2 + 9*s13*s23 - 
                5*s23^2) - 2*s12*s23^3*(46*s13^2 + 66*s13*s23 + 5*s23^2) - 
              s12^2*s23^2*(70*s13^2 + 177*s13*s23 + 25*s23^2)) - 
            p3q^4*s12*(s12 + s23)*(-9*s12^4*(s13 - 6*s23) - 
              5*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) + s12*s23^2*(241*s13^2 + 
                459*s13*s23 + 223*s23^2) + s12^3*(-9*s13^2 + 135*s13*s23 + 
                461*s23^2) + s12^2*s23*(90*s13^2 + 738*s13*s23 + 
                635*s23^2)) + p2q*p3q^3*(9*s12^7 + 18*s12^6*(s13 - 3*s23) + 
              18*s13*s23^4*(s13 + s23)^2 - 3*s12^5*(3*s13^2 + 3*s13*s23 + 
                301*s23^2) + s12^2*s23^2*(170*s13^3 - 161*s13^2*s23 - 
                491*s13*s23^2 + 99*s23^3) + s12*s23^3*(18*s13^3 + 
                109*s13^2*s23 + 97*s13*s23^2 + 206*s23^3) - 2*s12^3*s23*(
                -36*s13^3 + 95*s13^2*s23 + 571*s13*s23^2 + 594*s23^3) - 
              s12^4*(18*s13^3 + 45*s13^2*s23 + 599*s13*s23^2 + 1921*s23^3)) - 
            p2q^3*p3q*(18*s12^6*s13 + s12^5*(9*s13^2 + 54*s13*s23 + 
                85*s23^2) - 2*s12^4*(9*s13^3 - 18*s13^2*s23 + 85*s13*s23^2 - 
                41*s23^3) + s13*s23^3*(37*s13^3 + 104*s13^2*s23 + 
                47*s13*s23^2 - 20*s23^3) + s12^2*s23*(-9*s13^4 - 
                158*s13^3*s23 + 345*s13^2*s23^2 + 408*s13*s23^3 - 98*s23^4) + 
              s12*s23^2*(19*s13^4 + 275*s13^3*s23 + 385*s13^2*s23^2 + 
                274*s13*s23^3 - 5*s23^4) - s12^3*(9*s13^4 + 153*s13^3*s23 - 
                34*s13^2*s23^2 + 92*s13*s23^3 + 96*s23^4)) + 
            p2q^2*p3q^2*(9*s12^7 - 9*s12^6*(s13 - 5*s23) + s12^5*(-36*s13^2 + 
                90*s13*s23 - 383*s23^2) + s13*s23^3*(-37*s13^3 - 
                56*s13^2*s23 + 19*s13*s23^2 + 38*s23^3) - s12^4*(9*s13^3 + 
                90*s13^2*s23 - 431*s13*s23^2 + 907*s23^3) + s12^3*(9*s13^4 + 
                162*s13^3*s23 + 56*s13^2*s23^2 + 68*s13*s23^3 - 324*s23^4) - 
              s12*s23^2*(19*s13^4 + 129*s13^3*s23 + 100*s13^2*s23^2 + 
                164*s13*s23^3 - 206*s23^4) + s12^2*s23*(9*s13^4 + 
                380*s13^3*s23 - 89*s13^2*s23^2 - 466*s13*s23^3 + 
                370*s23^4)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13*s23^2*(s12 + s23)*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (-2*p1q^4*s23^2*(s12 + s13 + s23)*
          (p3q*(176*s12^4 + 312*s12^2*s13*s23 + 243*s12*s13*s23^2 + 
             80*s13*s23^3 + 11*s12^3*(7*s13 + 16*s23)) + 
           p2q*(77*s12^4 - 21*s12^2*s13*s23 - 10*s13*s23^3 + 
             s12^3*(-22*s13 + 77*s23))) - 2*p1q^3*s23*(s12 + s13 + s23)*
          (-(p2q^2*(7*s12^4*(18*s13 - 11*s23) - 20*s12*s13*s23^3 + 
              10*s13*s23^3*(-3*s13 + s23) + s12^2*s13*s23*(6*s13 + 59*s23) + 
              s12^3*(27*s13^2 + 274*s13*s23 - 77*s23^2))) + 
           p2q*p3q*(72*s12^5 - 10*s13*s23^3*(33*s13 + 2*s23) + 
             3*s12*s13*s23^2*(-243*s13 + 61*s23) + 3*s12^2*s13*s23*
              (-224*s13 + 185*s23) + s12^4*(-54*s13 + 452*s23) + 
             s12^3*(-126*s13^2 + 86*s13*s23 + 380*s23^2)) + 
           p3q^2*(-27*s12^5 + 218*s12^2*s13*s23^2 + 163*s12*s13*s23^3 + 
             80*s13*s23^4 + 6*s12^4*(12*s13 + 79*s23) + 
             s12^3*(-9*s13*s23 + 501*s23^2))) + 
         s23*(-(p2q^5*s13^2*(99*s12^4 + 20*s13^2*s23*(s13 + s23) + 
              20*s12*s13*s23*(3*s13 + 2*s23) + s12^2*s23*(71*s13 + 31*s23) + 
              s12^3*(99*s13 + 130*s23))) - p3q^5*s12^3*
            (11*s12^2*(9*s13 + 16*s23) + s23*(27*s13^2 + 203*s13*s23 + 176*
                s23^2) + s12*(99*s13^2 + 302*s13*s23 + 352*s23^2)) + 
           p2q*p3q^4*s12^2*(-198*s12^4 + 9*s12^3*(61*s13 - 36*s23) + 
             s12^2*(-126*s13^2 + 615*s13*s23 - 302*s23^2) + 
             s13*s23*(369*s13^2 + 309*s13*s23 + 20*s23^2) + 
             s12*(459*s13^3 + 422*s13^2*s23 + 158*s13*s23^2 - 176*s23^3)) + 
           p2q^2*p3q^3*s12*(-198*s12^5 - 360*s13^3*s23*(s13 + s23) + 
             4*s12^4*(216*s13 + 25*s23) + s12^2*s13*(837*s13^2 + 217*s13*
                s23 - 170*s23^2) + s12^3*(-1377*s13^2 + 170*s13*s23 + 298*
                s23^2) - 30*s12*s13*(24*s13^3 + s13^2*s23 - 29*s13*s23^2 - 2*
                s23^3)) + 2*p2q^4*p3q*s13*(99*s12^5 + 40*s12^4*s23 + 
             s12^3*(234*s13^2 + 337*s13*s23 + 121*s23^2) + 
             10*s13^2*(-9*s13^3 - 10*s13^2*s23 + s23^3) + 
             s12*s13*(63*s13^3 + 133*s13^2*s23 + 20*s13*s23^2 + 20*s23^3) + 
             s12^2*(-180*s13^3 - 314*s13^2*s23 + 29*s13*s23^2 + 20*s23^3)) + 
           p2q^3*p3q^2*(-99*s12^6 + s12^5*(297*s13 + 50*s23) + 
             2*s12^3*s13*(594*s13^2 + 421*s13*s23 - 104*s23^2) + 
             20*s13^3*s23*(9*s13^2 + 10*s13*s23 + s23^2) + 
             s12^4*(-1134*s13^2 - 703*s13*s23 + 149*s23^2) + 
             2*s12*s13^2*(270*s13^3 + 217*s13^2*s23 - 113*s13*s23^2 + 20*
                s23^3) + s12^2*(-738*s13^4 - 740*s13^3*s23 + 704*s13^2*
                s23^2 + 80*s13*s23^3))) + 
         p1q*(-(p3q^4*s12^2*(54*s12^5 + 149*s13*s23^3*(s13 + s23) + 
              54*s12^4*(2*s13 + 3*s23) + s12*s23^2*(158*s13^2 + 
                1011*s13*s23 + 704*s23^2) + s12^3*(54*s13^2 + 513*s13*s23 + 
                866*s23^2) + s12^2*s23*(351*s13^2 + 1267*s13*s23 + 
                1462*s23^2))) + p2q*p3q^3*s12*(-54*s12^6 + 
             54*s12^5*(s13 - 14*s23) + s12*s13*s23^2*(1353*s13^2 + 1095*s13*
                s23 - 298*s23^2) + 6*s12^4*(45*s13^2 + 126*s13*s23 - 268*
                s23^2) + 40*s13*s23^3*(4*s13^2 + 3*s13*s23 - s23^2) + 
             s12^3*(162*s13^3 + 99*s13^2*s23 + 134*s13*s23^2 - 1660*s23^3) + 
             s12^2*s23*(1251*s13^3 + 1494*s13^2*s23 - 682*s13*s23^2 - 754*
                s23^3)) + p2q^2*p3q^2*(18*s12^6*(9*s13 - 22*s23) + 
             2*s12^5*(81*s13^2 + 846*s13*s23 - 173*s23^2) - 
             40*s13^2*s23^3*(13*s13^2 + 14*s13*s23 + s23^2) + 
             s12^2*s13*s23*(-1386*s13^3 + 227*s13^2*s23 + 2807*s13*s23^2 - 
               564*s23^3) - 2*s12*s13*s23^2*(673*s13^3 + 607*s13^2*s23 - 266*
                s13*s23^2 + 40*s23^3) - s12^4*(162*s13^3 + 648*s13^2*s23 - 81*
                s13*s23^2 + 248*s23^3) + s12^3*(-162*s13^4 + 1206*s13^3*s23 + 
               2218*s13^2*s23^2 - 1397*s13*s23^3 - 298*s23^4)) + 
           p2q^4*s13*(99*s12^5*s23 - 20*s12*s13*s23^2*(3*s13^2 - 5*s13*s23 - 
               4*s23^2) - 20*s13^2*s23^2*(s13^2 - 2*s13*s23 - 3*s23^2) + 
             9*s12^4*(6*s13^2 - 11*s13*s23 + 33*s23^2) + 
             s12^3*(108*s13^3 - 90*s13^2*s23 - 53*s13*s23^2 + 229*s23^3) + 
             s12^2*(54*s13^4 + 108*s13^3*s23 - 39*s13^2*s23^2 + 58*s13*
                s23^3 + 31*s23^4)) + p2q^3*p3q*(-99*s12^6*s23 - 
             9*s12^5*(18*s13^2 - 55*s13*s23 + 11*s23^2) + 20*s13^2*s23^2*
              (35*s13^3 + 39*s13^2*s23 + 2*s13*s23^2 - 2*s23^3) - 
             s12^4*(270*s13^3 + 846*s13^2*s23 - 21*s13*s23^2 + 149*s23^3) + 
             s12^3*(-54*s13^4 - 54*s13^3*s23 + 1314*s13^2*s23^2 + 60*s13*
                s23^3 - 149*s23^4) + 2*s12*s13*s23*(243*s13^4 + 134*s13^3*
                s23 - 349*s13^2*s23^2 + 30*s13*s23^3 - 20*s23^4) + 
             s12^2*s13*(54*s13^4 - 792*s13^3*s23 - 949*s13^2*s23^2 + 1423*s13*
                s23^3 + 102*s23^4))) - 
         p1q^2*(p3q^3*s12*(54*s12^6 + 108*s12^5*(s13 + s23) - 
             160*s13*s23^4*(s13 + s23) - s12*s13*s23^3*(39*s13 + 199*s23) + 
             2*s12^4*(27*s13^2 + 252*s13*s23 + 616*s23^2) + 
             s12^2*s23^2*(-41*s13^2 + 1098*s13*s23 + 1178*s23^2) + 
             s12^3*s23*(396*s13^2 + 1533*s13*s23 + 2356*s23^2)) + 
           p2q*p3q^2*(54*s12^7 + 702*s12^6*s23 - 2*s12*s13*s23^3*
              (566*s13^2 + 613*s13*s23 - 193*s23^2) - 18*s12^5*
              (9*s13^2 + 5*s13*s23 - 121*s23^2) - 20*s13*s23^4*
              (25*s13^2 + 26*s13*s23 + s23^2) + s12^2*s13*s23^2*
              (-1862*s13^2 - 1493*s13*s23 + 1827*s23^2) - 
             2*s12^4*(54*s13^3 + 315*s13^2*s23 - 665*s13*s23^2 - 1357*
                s23^3) + s12^3*s23*(-1170*s13^3 - 2148*s13^2*s23 + 2769*s13*
                s23^2 + 1184*s23^3)) + p2q^3*(-20*s12*s13*s23^3*
              (7*s13^2 - s13*s23 - 2*s23^2) + 60*s13^2*s23^3*(-s13^2 + s23^
                2) + s12^5*(54*s13^2 - 198*s13*s23 + 77*s23^2) + 
             s12^2*s13*s23*(108*s13^3 + 280*s13^2*s23 + 39*s13*s23^2 - 13*
                s23^3) + s12^4*(108*s13^3 + 216*s13^2*s23 - 539*s13*s23^2 + 
               154*s23^3) + s12^3*(54*s13^4 + 522*s13^3*s23 + 114*s13^2*
                s23^2 - 394*s13*s23^3 + 77*s23^4)) + p2q^2*p3q*
            (-18*s12^6*(6*s13 - 11*s23) - 6*s12^5*(27*s13^2 + 153*s13*s23 - 
               88*s23^2) + 2*s12^4*s23*(-270*s13^2 - 317*s13*s23 + 355*
                s23^2) + 20*s13*s23^3*(51*s13^3 + 56*s13^2*s23 + 4*s13*
                s23^2 - s23^3) + 2*s12*s13*s23^2*(729*s13^3 + 750*s13^2*s23 - 
               379*s13*s23^2 + 50*s23^3) + s12^2*s13*s23*(774*s13^3 - 250*
                s13^2*s23 - 2945*s13*s23^2 + 555*s23^3) + 
             s12^3*(54*s13^4 + 18*s13^3*s23 - 2848*s13^2*s23^2 + 539*s13*
                s23^3 + 380*s23^4))))/(54*ep*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^3*s13*s23^2*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep*(4*p3q^5*s12^3*(s12 + s23)*
           (9*s12^4*(s13 + s23) - 2*s12^2*s23^2*(4*s13 + 77*s23) + 
            s12*s23^2*(21*s13^2 - 94*s13*s23 - 212*s23^2) + 
            s23^3*(10*s13^2 - 77*s13*s23 - 87*s23^2) + 
            s12^3*(9*s13^2 + 18*s13*s23 - 20*s23^2)) - 2*p2q^5*s13^2*
           (s12 + s23)*(9*s12^5*(2*s13 + 11*s23) + 5*s12*s13*s23^2*
             (2*s13^2 + s13*s23 - 2*s23^2) + 5*s13^2*s23^2*
             (s13^2 + 3*s13*s23 + 2*s23^2) + 3*s12^2*s23^2*(-17*s13^2 - 
              10*s13*s23 + 12*s23^2) + 9*s12^4*(2*s13^2 + 9*s13*s23 + 
              26*s23^2) + s12^3*s23*(-36*s13^2 + 43*s13*s23 + 171*s23^2)) + 
          p2q*p3q^4*s12^2*(36*s12^7 + 18*s12^6*(4*s13 + 13*s23) + 
            4*s13*s23^4*(90*s13^2 + 63*s13*s23 + 43*s23^2) + 
            s12^5*(-72*s13^2 + 1836*s13*s23 + 1447*s23^2) + 
            s12*s23^3*(1292*s13^3 + 1210*s13^2*s23 + 2809*s13*s23^2 - 
              257*s23^3) + s12^2*s23^2*(1104*s13^3 + 1442*s13^2*s23 + 
              9023*s13*s23^2 + 190*s23^3) + s12^3*s23*(144*s13^3 + 
              430*s13^2*s23 + 11999*s13*s23^2 + 2238*s23^3) + 
            s12^4*(-108*s13^3 - 126*s13^2*s23 + 7377*s13*s23^2 + 
              3040*s23^3)) - p2q^4*p3q*s13*(-36*s12^7*(3*s13 + 11*s23) - 
            36*s12^6*(2*s13^2 + 3*s13*s23 + 16*s23^2) + 
            s12^5*(72*s13^3 - 234*s13^2*s23 + 893*s13*s23^2 - 1042*s23^3) + 
            10*s13^2*s23^3*(10*s13^3 + 11*s13^2*s23 - s13*s23^2 - 2*s23^3) + 
            s12^4*(36*s13^4 + 1080*s13^3*s23 + 1357*s13^2*s23^2 + 
              1989*s13*s23^3 - 2030*s23^4) + s12^3*s23*(-54*s13^4 + 
              3284*s13^3*s23 + 4574*s13^2*s23^2 + 1907*s13*s23^3 - 
              1258*s23^4) + 3*s12^2*s23^2*(92*s13^4 + 882*s13^3*s23 + 
              1063*s13^2*s23^2 + 277*s13*s23^3 - 30*s23^4) + 
            2*s12*s13*s23^2*(50*s13^4 + 188*s13^3*s23 + 230*s13^2*s23^2 + 
              137*s13*s23^3 + 10*s23^4)) + p2q^2*p3q^3*s12*
           (36*s12^8 + 36*s12^7*(-2*s13 + s23) + 8*s13^2*s23^4*
             (23*s13^2 + 66*s13*s23 + 43*s23^2) + s12^6*(-216*s13^2 + 
              810*s13*s23 + 1725*s23^2) + s12*s13*s23^3*(36*s13^3 + 
              2724*s13^2*s23 + 2875*s13*s23^2 + 867*s23^3) + 
            s12^5*(-3726*s13^2*s23 + 4233*s13*s23^2 + 5052*s23^3) + 
            s12^2*s23^2*(-670*s13^4 + 5276*s13^3*s23 + 3218*s13^2*s23^2 + 
              5412*s13*s23^3 - 267*s23^4) + 6*s12^4*(18*s13^4 + 
              105*s13^3*s23 - 1512*s13^2*s23^2 + 1571*s13*s23^3 + 
              771*s23^4) + s12^3*s23*(-234*s13^4 + 3710*s13^3*s23 - 
              4875*s13^2*s23^2 + 10620*s13*s23^3 + 1032*s23^4)) + 
          p2q^3*p3q^2*(18*s12^7*s23*(3*s13 + 5*s23) - 
            18*s12^8*(6*s13 + 11*s23) + 20*s13^3*s23^4*(5*s13^2 + 6*s13*s23 + 
              s23^2) + 4*s12*s13^2*s23^3*(4*s13^3 - 3*s13^2*s23 + 
              54*s13*s23^2 + 81*s23^3) + 2*s12^6*(108*s13^3 - 657*s13^2*s23 + 
              32*s13*s23^2 + 550*s23^3) + s12^5*(72*s13^4 + 2934*s13^3*s23 - 
              2553*s13^2*s23^2 + 2381*s13*s23^3 + 780*s23^4) + 
            s12^2*s13*s23^2*(-94*s13^4 - 1712*s13^3*s23 + 625*s13^2*s23^2 + 
              2656*s13*s23^3 + 785*s23^4) + s12^4*(-36*s13^5 - 
              666*s13^4*s23 + 7311*s13^3*s23^2 + 1772*s13^2*s23^3 + 
              6111*s13*s23^4 - 390*s23^5) + s12^3*s23*(54*s13^5 - 
              2598*s13^4*s23 + 4782*s13^3*s23^2 + 5343*s13^2*s23^3 + 
              4417*s13*s23^4 - 358*s23^5)) - 2*p1q^4*s23^2*(s12 + s23)^2*
           (s12 + s13 + s23)*(p2q*(9*s12^4 + 10*s12^2*s23^2 - 5*s13*s23^3 + 
              5*s12*s23^2*(-2*s13 + s23) + s12^3*(9*s13 + 14*s23)) + 
            p3q*(9*s12^4 + s12^2*s23^2 + 40*s13*s23^3 - s12*s23^2*(s13 + 
                40*s23) + s12^3*(9*s13 + 50*s23))) - 2*p1q^3*s23^2*
           (s12 + s23)*(s12 + s13 + s23)*(-(p3q^2*(138*s12^5 - 40*s13*s23^4 + 
               34*s12^4*(s13 + 8*s23) + 16*s12^2*s23^2*(7*s13 + 30*s23) + s12*
                s23^3*(83*s13 + 202*s23) + s12^3*s23*(-17*s13 + 412*s23))) + 
            p2q*p3q*(6*s12^5 - 5*s13*s23^3*(34*s13 + 3*s23) - 
              2*s12^4*(33*s13 + 52*s23) - s12*s23^2*(147*s13^2 + 43*s13*s23 + 
                147*s23^2) - s12^3*(9*s13^2 + 49*s13*s23 + 453*s23^2) - 
              s12^2*s23*(18*s13^2 + 51*s13*s23 + 490*s23^2)) + 
            p2q^2*(27*s12^5 + 10*s13*(s13 - s23)*s23^3 + s12^4*(-5*s13 + 
                96*s23) + 5*s12*s23^2*(3*s13^2 - 10*s13*s23 + 2*s23^2) + 
              s12^3*(-9*s13^2 - 39*s13*s23 + 121*s23^2) + 
              s12^2*(-74*s13*s23^2 + 62*s23^3))) + 
          p1q^2*(2*p3q^3*s12*(s12 + s23)*(9*s12^7 + 9*s12^6*(2*s13 + 9*s23) + 
              2*s23^5*(61*s13^2 + 142*s13*s23 + 81*s23^2) + s12^5*(9*s13^2 + 
                189*s13*s23 + 385*s23^2) + s12*s23^4*(-7*s13^2 + 
                552*s13*s23 + 599*s23^2) + s12^4*s23*(108*s13^2 + 
                775*s13*s23 + 632*s23^2) + s12^3*s23^2*(354*s13^2 + 
                679*s13*s23 + 663*s23^2) + s12^2*s23^3*(6*s13^2 + 
                343*s13*s23 + 781*s23^2)) + p2q*p3q^2*(18*s12^9 + 
              360*s12^8*s23 + 20*s13*s23^6*(13*s13^2 + 14*s13*s23 + s23^2) + 
              s12^7*(-54*s13^2 + 2214*s13*s23 + 1552*s23^2) - 
              4*s12*s23^5*(29*s13^3 + 173*s13^2*s23 + 128*s13*s23^2 - 
                76*s23^3) + s12^3*s23^3*(-254*s13^3 - 8114*s13^2*s23 - 
                8223*s13*s23^2 + 424*s23^3) + s12^2*s23^4*(-694*s13^3 - 
                5056*s13^2*s23 - 3951*s13*s23^2 + 1155*s23^3) - 
              s12^5*s23*(234*s13^3 + 1404*s13^2*s23 - 6397*s13*s23^2 + 
                1362*s23^3) + s12^6*(-36*s13^3 - 144*s13^2*s23 + 
                7488*s13*s23^2 + 1459*s23^3) - s12^4*s23^2*(214*s13^3 + 
                5344*s13^2*s23 + 3681*s13*s23^2 + 2038*s23^3)) + 
            2*p2q^3*(s12 + s23)*(-30*s13^2*s23^5*(s13 + s23) + 
              s12^6*(9*s13^2 + 9*s13*s23 - 77*s23^2) + s12^5*(18*s13^3 + 
                45*s13^2*s23 + 95*s13*s23^2 - 236*s23^3) - 15*s12*s13*s23^3*(
                s13^3 + 7*s13^2*s23 + 6*s13*s23^2 - 2*s23^3) + 
              s12^4*(9*s13^4 + 45*s13^3*s23 + 193*s13^2*s23^2 + 
                339*s13*s23^3 - 246*s23^4) + s12^3*s23*(9*s13^4 + 
                2*s13^3*s23 + 255*s13^2*s23^2 + 459*s13*s23^3 - 92*s23^4) + 
              s12^2*s23^2*(-10*s13^4 - 108*s13^3*s23 + 38*s13^2*s23^2 + 
                236*s13*s23^3 - 5*s23^4)) - p2q^2*p3q*
             (18*s12^8*(2*s13 - s23) + 2*s12^7*(27*s13^2 + 198*s13*s23 - 
                89*s23^2) + s12^6*s23*(2448*s13^2 + 3484*s13*s23 + 
                985*s23^2) + 10*s13*s23^5*(54*s13^3 + 61*s13^2*s23 + 
                5*s13*s23^2 - 2*s23^3) + 2*s12*s23^4*(447*s13^4 + 
                1021*s13^3*s23 + 750*s13^2*s23^2 + 411*s13*s23^3 + 
                10*s23^4) + s12^2*s23^3*(392*s13^4 + 2092*s13^3*s23 + 
                6236*s13^2*s23^2 + 5973*s13*s23^3 + 629*s23^4) + 
              s12^3*s23^2*(20*s13^4 + 736*s13^3*s23 + 12422*s13^2*s23^2 + 
                15067*s13*s23^3 + 3178*s23^4) + s12^5*(-18*s13^4 + 
                234*s13^3*s23 + 9304*s13^2*s23^2 + 11591*s13*s23^3 + 
                4412*s23^4) + s12^4*s23*(-36*s13^4 + 390*s13^3*s23 + 
                14546*s13^2*s23^2 + 18403*s13*s23^3 + 5836*s23^4))) + 
          p1q*(2*p3q^4*s12^2*(s12 + s23)*(9*s12^6 + 9*s12^5*(4*s13 + 
                11*s23) + s12^2*s23^2*(353*s13^2 + 125*s13*s23 - 555*s23^2) + 
              s12*s23^3*(34*s13^2 - 377*s13*s23 - 297*s23^2) + 
              s12^3*s23*(108*s13^2 + 569*s13*s23 - 154*s23^2) - 
              2*s23^4*(59*s13^2 + 61*s13*s23 + 2*s23^2) + 9*s12^4*(3*s13^2 + 
                25*s13*s23 + 22*s23^2)) + p2q*p3q^3*s12*(54*s12^8 + 
              54*s12^7*(s13 + 11*s23) - 4*s13*s23^5*(107*s13^2 + 
                274*s13*s23 + 167*s23^2) + s12^6*(-126*s13^2 + 3762*s13*s23 + 
                2993*s23^2) + 4*s12^3*s23^2*(24*s13^3 - 1359*s13^2*s23 + 
                1034*s13*s23^2 - 1255*s23^3) - 4*s12^4*s23*(117*s13^3 + 
                734*s13^2*s23 - 4211*s13*s23^2 + 148*s23^3) - 
              s12*s23^4*(226*s13^3 + 4352*s13^2*s23 + 4269*s13*s23^2 + 
                463*s23^3) - s12^2*s23^3*(-800*s13^3 + 6530*s13^2*s23 + 
                6218*s13*s23^2 + 3111*s23^3) + s12^5*(-126*s13^3 - 
                900*s13^2*s23 + 13799*s13*s23^2 + 4233*s23^3)) + 
            p2q^2*p3q^2*(36*s12^9 + s12^8*(-90*s13 + 54*s23) - 
              40*s13^2*s23^5*(7*s13^2 + 8*s13*s23 + s23^2) + 
              s12^7*(-198*s13^2 - 54*s13*s23 + 1597*s23^2) + 2*s12*s13*s23^4*(
                7*s13^3 + 147*s13^2*s23 - 54*s13*s23^2 - 314*s23^3) + 
              s12^6*(18*s13^3 - 7236*s13^2*s23 - 1172*s13*s23^2 + 
                2927*s23^3) + s12^4*s23*(216*s13^4 + 3944*s13^3*s23 - 
                17672*s13^2*s23^2 - 6659*s13*s23^3 - 5444*s23^4) + 
              s12^3*s23^2*(50*s13^4 + 8252*s13^3*s23 - 2419*s13^2*s23^2 - 
                6703*s13*s23^3 - 3295*s23^4) + s12^5*(90*s13^4 + 
                144*s13^3*s23 - 20665*s13^2*s23^2 - 4067*s13*s23^3 - 
                1266*s23^4) + s12^2*s23^3*(398*s13^4 + 4968*s13^3*s23 + 
                1558*s13^2*s23^2 - 3531*s13*s23^3 - 465*s23^4)) + 
            2*p2q^4*s13*(s12 + s23)*(9*s12^6*(2*s13 + 11*s23) + 
              10*s13^2*s23^3*(s13^2 + 4*s13*s23 + 3*s23^2) + s12^5*(9*s13^2 + 
                90*s13*s23 + 401*s23^2) + 5*s12*s13*s23^2*(3*s13^3 + 
                15*s13^2*s23 + 10*s13*s23^2 - 6*s23^3) + s12^2*s23^2*(
                39*s13^3 - 131*s13^2*s23 - 194*s13*s23^2 + 41*s23^3) + 
              s12^4*(-18*s13^3 - 54*s13^2*s23 + 47*s13*s23^2 + 546*s23^3) - 
              3*s12^3*(3*s13^4 + 9*s13^3*s23 + 74*s13^2*s23^2 + 
                63*s13*s23^3 - 95*s23^4)) + p2q^3*p3q*
             (-18*s12^8*(4*s13 + 11*s23) + 2*s12^7*(9*s13^2 - 135*s13*s23 - 
                212*s23^2) + s12^6*(162*s13^3 - 450*s13^2*s23 - 
                305*s13*s23^2 - 966*s23^3) + 10*s13^2*s23^4*(38*s13^3 + 
                43*s13^2*s23 + s13*s23^2 - 4*s23^3) + s12^5*(54*s13^4 + 
                3348*s13^3*s23 + 2691*s13^2*s23^2 + 2693*s13*s23^3 - 
                2344*s23^4) + 2*s12*s13*s23^3*(259*s13^4 + 743*s13^3*s23 + 
                720*s13^2*s23^2 + 401*s13*s23^3 + 20*s23^4) + 
              s12^4*(-18*s13^5 + 252*s13^4*s23 + 10892*s13^3*s23^2 + 
                13202*s13^2*s23^3 + 7121*s13*s23^4 - 2506*s23^5) + 
              s12^3*s23*(-18*s13^5 + 254*s13^4*s23 + 13262*s13^3*s23^2 + 
                16875*s13^2*s23^3 + 5901*s13*s23^4 - 912*s23^5) + 
              2*s12^2*s23^2*(69*s13^5 + 646*s13^4*s23 + 3533*s13^3*s23^2 + 
                3837*s13^2*s23^3 + 810*s13*s23^4 - 5*s23^5)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13*s23^2*
         (s12 + s23)^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (-(p3q^5*s12^3*(s12 + s23)*(54*s12^4*s13 + s12^3*(54*s13^2 - 
              135*s13*s23 - 448*s23^2) - s23^3*(s13^2 + 529*s13*s23 + 
              528*s23^2) - s12^2*s23*(189*s13^2 + 801*s13*s23 + 1424*s23^2) - 
            s12*s23^2*(164*s13^2 + 1141*s13*s23 + 1504*s23^2))) + 
         p2q^5*s13^2*(27*s12^6*(2*s13 + 11*s23) + 10*s13^2*s23^3*
            (s13^2 + 5*s13*s23 + 4*s23^2) + s12^3*s23^2*(168*s13^2 + 
             805*s13*s23 + 576*s23^2) + s12^5*(54*s13^2 + 459*s13*s23 + 
             984*s23^2) + s12^4*s23*(108*s13^2 + 943*s13*s23 + 1170*s23^2) + 
           10*s12*s13*s23^2*(2*s13^3 + 10*s13^2*s23 + 19*s13*s23^2 + 
             8*s23^3) + s12^2*s23^2*(40*s13^3 + 264*s13^2*s23 + 
             347*s13*s23^2 + 93*s23^3)) + p2q*p3q^4*s12^2*
          (-54*s12^7 - 54*s12^6*(2*s13 - 11*s23) + s13*s23^4*
            (-381*s13^2 + 125*s13*s23 + 266*s23^2) + 
           s12^5*(108*s13^2 - 1719*s13*s23 + 2575*s23^2) + 
           s12*s23^3*(-1045*s13^3 + 748*s13^2*s23 - 185*s13*s23^2 + 
             731*s23^3) + 2*s12^4*(81*s13^3 + 495*s13^2*s23 - 
             2794*s13*s23^2 + 2176*s23^3) + s12^2*s23^2*(-845*s13^3 + 
             2055*s13^2*s23 - 3642*s13*s23^2 + 2662*s23^3) + 
           s12^3*s23*(-99*s13^3 + 2314*s13^2*s23 - 7168*s13*s23^2 + 
             4356*s23^3)) + p2q^4*p3q*s13*(-54*s12^7*(3*s13 + 11*s23) - 
           6*s12^6*(18*s13^2 + 63*s13*s23 + 226*s23^2) + 
           s12^5*(108*s13^3 - 990*s13^2*s23 - 1259*s13*s23^2 - 1904*s23^3) + 
           10*s13^2*s23^3*(28*s13^3 + 31*s13^2*s23 - s13*s23^2 - 4*s23^3) + 
           s12^4*(54*s13^4 + 2178*s13^3*s23 + 163*s13^2*s23^2 - 
             2175*s13*s23^3 - 2236*s23^4) + s12^3*s23*(306*s13^4 + 
             4830*s13^3*s23 + 4108*s13^2*s23^2 - 1131*s13*s23^3 - 
             1214*s23^4) + s12^2*s23^2*(464*s13^4 + 2928*s13^3*s23 + 
             3139*s13^2*s23^2 - 79*s13*s23^3 - 120*s23^4) + 
           2*s12*s13*s23^2*(190*s13^4 + 281*s13^3*s23 + 124*s13^2*s23^2 + 
             98*s13*s23^3 - 40*s23^4)) - p2q^2*p3q^3*s12*
          (54*s12^8 - 54*s12^7*(2*s13 + 7*s23) - 3*s12^6*(108*s13^2 - 
             816*s13*s23 + 149*s23^2) + 2*s13^2*s23^4*(-87*s13^2 + 
             86*s13*s23 + 173*s23^2) + s12^5*s23*(-4887*s13^2 + 
             7729*s13*s23 + 1088*s23^2) + s12*s13*s23^3*(-462*s13^3 + 
             2960*s13^2*s23 + 3265*s13*s23^2 + 43*s23^3) + 
           s12^2*s23^2*(60*s13^4 + 8505*s13^3*s23 + 4045*s13^2*s23^2 + 
             1274*s13*s23^3 - 379*s23^4) + 2*s12^3*s23*(225*s13^4 + 
             4141*s13^3*s23 - 2632*s13^2*s23^2 + 2464*s13*s23^3 - 63*s23^4) + 
           s12^4*(162*s13^4 + 2565*s13^3*s23 - 10953*s13^2*s23^2 + 
             8870*s13*s23^3 + 1356*s23^4)) + p2q^3*p3q^2*
          (27*s12^8*(6*s13 + 11*s23) - 40*s13^3*s23^4*(7*s13^2 + 8*s13*s23 + 
             s23^2) + s12^7*(-459*s13*s23 + 372*s23^2) - 2*s12*s13^2*s23^3*
            (417*s13^3 + 370*s13^2*s23 + 46*s13*s23^2 + 213*s23^3) - 
           s12^6*(324*s13^3 - 2736*s13^2*s23 + 455*s13*s23^2 + 490*s23^3) - 
           s12^2*s13*s23^2*(314*s13^4 - 1506*s13^3*s23 + 921*s13^2*s23^2 + 
             4084*s13*s23^3 + 429*s23^4) - s12^5*(108*s13^4 + 
             5346*s13^3*s23 - 3851*s13^2*s23^2 + 44*s13*s23^3 + 732*s23^4) + 
           s12^4*(54*s13^5 + 1188*s13^4*s23 - 12141*s13^3*s23^2 - 
             4426*s13^2*s23^3 - 1798*s13*s23^4 + 9*s23^5) + 
           s12^3*s23*(414*s13^5 + 3252*s13^4*s23 - 7748*s13^3*s23^2 - 
             9199*s13^2*s23^3 - 2017*s13*s23^4 + 176*s23^5)) + 
         2*p1q^4*s23^2*(s12 + s23)^2*(s12 + s13 + s23)*
          (p2q*(127*s12^4 - 15*s13*s23^3 + 5*s12*s23^2*(-s13 + s23) - 
             s12^2*s23*(67*s13 + 5*s23) + s12^3*(-71*s13 + 117*s23)) + 
           p3q*(325*s12^4 + s12^2*(257*s13 - 203*s23)*s23 + 
             2*s12*(101*s13 - 20*s23)*s23^2 + 120*s13*s23^3 + 
             s12^3*(127*s13 + 162*s23))) + 2*p1q^3*s23*(s12 + s23)*
          (s12 + s13 + s23)*(p3q^2*(9*s12^6 + 4*s12^2*(108*s13 - 173*s23)*
              s23^3 + 7*s12*(17*s13 - 29*s23)*s23^4 + 120*s13*s23^5 + 
             s12^3*s23^2*(858*s13 + 439*s23) + s12^5*(207*s13 + 1192*s23) + 
             s12^4*s23*(592*s13 + 2111*s23)) + 
           p2q^2*(-7*s12^5*(27*s13 - 22*s23) + s12^2*s13*(91*s13 - 38*s23)*
              s23^2 + 45*s12*s13^2*s23^3 + 20*s13*(2*s13 - s23)*s23^4 + 
             2*s12^3*s23*(56*s13^2 - 235*s13*s23 + 77*s23^2) + 
             s12^4*(9*s13^2 - 601*s13*s23 + 308*s23^2)) + 
           p2q*p3q*(207*s12^6 - 5*s13*s23^4*(100*s13 + 7*s23) + 
             2*s12^5*(9*s13 + 520*s23) + s12^2*s23^2*(-935*s13^2 + 1492*s13*
                s23 - 431*s23^2) - 2*s12*s23^3*(513*s13^2 - 82*s13*s23 + 79*
                s23^2) + 2*s12^3*s23*(-367*s13^2 + 833*s13*s23 + 139*s23^2) + 
             s12^4*(-189*s13^2 + 351*s13*s23 + 1384*s23^2))) + 
         p1q^2*(p3q^3*s12*(s12 + s23)*(36*s12^7 + 18*s12^6*(4*s13 + 9*s23) + 
             s12*s23^4*(639*s13^2 - 339*s13*s23 - 898*s23^2) - 
             2*s23^5*(203*s13^2 + 366*s13*s23 + 163*s23^2) + 
             2*s12^5*(18*s13^2 + 522*s13*s23 + 1723*s23^2) + 
             s12^2*s23^3*(1954*s13^2 + 5843*s13*s23 + 2678*s23^2) + 
             s12^3*s23^2*(1515*s13^2 + 10195*s13*s23 + 9976*s23^2) + 
             s12^4*s23*(882*s13^2 + 5717*s13*s23 + 10046*s23^2)) + 
           p2q*p3q^2*(36*s12^9 + 1746*s12^8*s23 - 40*s13*s23^6*
              (19*s13^2 + 20*s13*s23 + s23^2) + s12^7*(-108*s13^2 + 234*s13*
                s23 + 8164*s23^2) + s12^2*s23^4*(-2654*s13^3 + 4367*s13^2*
                s23 + 9084*s13*s23^2 - 1039*s23^3) - 2*s12*s23^5*
              (865*s13^3 + 602*s13^2*s23 - 460*s13*s23^2 + 163*s23^3) + 
             2*s12^3*s23^3*(-2304*s13^3 + 5137*s13^2*s23 + 12640*s13*s23^2 + 
               938*s23^3) + 2*s12^5*s23*(-747*s13^3 + 960*s13^2*s23 + 8899*
                s13*s23^2 + 10057*s23^3) + s12^4*s23^2*(-4266*s13^3 + 7081*
                s13^2*s23 + 30954*s13*s23^2 + 11744*s23^3) + 
             s12^6*(-72*s13^3 + 234*s13^2*s23 + 4234*s13*s23^2 + 17413*
                s23^3)) + p2q^3*(60*s13^2*s23^5*(-s13^2 + s13*s23 + 2*
                s23^2) + 3*s12^7*(12*s13^2 - 114*s13*s23 + 77*s23^2) - 
             10*s12*s13*s23^4*(11*s13^3 + 5*s13^2*s23 - 32*s13*s23^2 - 8*
                s23^3) + s12^2*s13*s23^3*(-96*s13^3 - 212*s13^2*s23 + 151*s13*
                s23^2 + 117*s23^3) + 3*s12^6*(24*s13^3 + 72*s13^2*s23 - 533*
                s13*s23^2 + 308*s23^3) + s12^3*s23^2*(-56*s13^4 + 454*s13^3*
                s23 - 370*s13^2*s23^2 - 702*s13*s23^3 + 231*s23^4) + 
             6*s12^5*(6*s13^4 + 99*s13^3*s23 + 22*s13^2*s23^2 - 478*s13*
                s23^3 + 231*s23^4) + s12^4*s23*(36*s13^4 + 1078*s13^3*s23 - 
               369*s13^2*s23^2 - 2350*s13*s23^3 + 924*s23^4)) + 
           p2q^2*p3q*(s12^8*(-72*s13 + 450*s23) - 2*s12^7*(54*s13^2 + 873*s13*
                s23 - 1021*s23^2) + s12^6*s23*(-810*s13^2 - 3388*s13*s23 + 
               4809*s23^2) + 10*s13*s23^5*(156*s13^3 + 173*s13^2*s23 + 13*s13*
                s23^2 - 4*s23^3) + 2*s12*s13*s23^4*(1916*s13^3 + 2539*s13^2*
                s23 + 472*s13*s23^2 + 524*s23^3) + s12^2*s23^3*
              (3054*s13^4 + 1616*s13^3*s23 - 269*s13^2*s23^2 + 6312*s13*
                s23^3 + 149*s23^4) + 2*s12^3*s23^2*(755*s13^4 - 2869*s13^3*
                s23 - 2685*s13^2*s23^2 + 6801*s13*s23^3 + 915*s23^4) + 
             2*s12^5*(18*s13^4 - 585*s13^3*s23 - 1788*s13^2*s23^2 + 1228*s13*
                s23^3 + 3412*s23^4) + s12^4*s23*(684*s13^4 - 5096*s13^3*s23 - 
               7161*s13^2*s23^2 + 12548*s13*s23^3 + 5288*s23^4))) + 
         p1q*(p3q^4*s12^2*(s12 + s23)*(36*s12^6 + 18*s12^5*(s13 + 8*s23) - 
             9*s12^4*(2*s13^2 - 83*s13*s23 - 238*s23^2) + 
             s23^4*(693*s13^2 + 1019*s13*s23 + 326*s23^2) + 
             s12*s23^3*(1007*s13^2 + 4518*s13*s23 + 3144*s23^2) + 
             s12^3*s23*(657*s13^2 + 3440*s13*s23 + 6488*s23^2) + 
             s12^2*s23^2*(749*s13^2 + 6210*s13*s23 + 7272*s23^2)) + 
           p2q*p3q^3*s12*(-18*s12^8 - 18*s12^7*(8*s13 - 107*s23) - 
             3*s12^6*(42*s13^2 + 606*s13*s23 - 2695*s23^2) + 
             8*s13*s23^5*(34*s13^2 + 123*s13*s23 + 89*s23^2) + 
             s12^5*s23*(2007*s13^2 - 3655*s13*s23 + 15419*s23^2) + 
             s12*s23^4*(-751*s13^3 + 4571*s13^2*s23 + 5757*s13*s23^2 + 475*
                s23^3) + s12^2*s23^3*(-2843*s13^3 + 8984*s13^2*s23 + 14286*
                s13*s23^2 + 4325*s23^3) + s12^3*s23^2*(-2497*s13^3 + 10690*
                s13^2*s23 + 13698*s13*s23^2 + 12324*s23^3) + 
             s12^4*s23*(-837*s13^3 + 7426*s13^2*s23 + 2476*s13*s23^2 + 17752*
                s23^3)) + p2q^2*p3q^2*(-54*s12^9 + s12^8*(-54*s13 + 828*
                s23) + 80*s13^2*s23^5*(10*s13^2 + 11*s13*s23 + s23^2) + 
             3*s12^7*(36*s13^2 - 1296*s13*s23 + 823*s23^2) + 
             2*s12*s13*s23^4*(1043*s13^3 + 836*s13^2*s23 - 171*s13*s23^2 + 
               396*s23^3) + s12^6*(162*s13^3 + 3474*s13^2*s23 - 8553*s13*
                s23^2 + 3641*s23^3) + s12^2*s23^3*(1746*s13^4 - 6083*s13^3*
                s23 - 6407*s13^2*s23^2 + 4703*s13*s23^3 + 149*s23^4) + 
             s12^3*s23^2*(570*s13^4 - 18588*s13^3*s23 - 12525*s13^2*s23^2 + 
               10672*s13*s23^3 + 2189*s23^4) + s12^4*s23*(144*s13^4 - 16421*
                s13^3*s23 - 3395*s13^2*s23^2 + 9464*s13*s23^3 + 5334*s23^4) + 
             s12^5*(54*s13^4 - 4626*s13^3*s23 + 6511*s13^2*s23^2 - 2016*s13*
                s23^3 + 5348*s23^4)) + p2q^3*p3q*(27*s12^8*(4*s13 + 11*s23) + 
             9*s12^7*(18*s13^2 - 73*s13*s23 + 99*s23^2) - 10*s13^2*s23^4*
              (108*s13^3 + 121*s13^2*s23 + 5*s13*s23^2 - 8*s23^3) + 
             2*s12^6*(36*s13^3 + 963*s13^2*s23 - 900*s13*s23^2 + 793*s23^3) - 
             s12^5*(18*s13^4 + 1674*s13^3*s23 + 709*s13^2*s23^2 + 2432*s13*
                s23^3 - 2382*s23^4) - 2*s12*s13*s23^3*(1022*s13^4 + 1445*
                s13^3*s23 + 492*s13^2*s23^2 + 464*s13*s23^3 - 40*s23^4) - 
             s12^2*s13*s23^2*(694*s13^4 + 418*s13^3*s23 + 4805*s13^2*s23^2 + 
               8517*s13*s23^3 + 470*s23^4) - s12^4*(36*s13^5 - 1872*s13^4*
                s23 + 7185*s13^3*s23^2 + 13433*s13^2*s23^3 + 3262*s13*s23^4 - 
               2085*s23^5) + s12^3*s23*(54*s13^5 + 3072*s13^4*s23 - 9230*
                s13^3*s23^2 - 18469*s13^2*s23^3 - 2415*s13*s23^4 + 695*
                s23^5)) - p2q^4*s13*(120*s13^2*s23^5*(s13 + s23) + 
             27*s12^7*(2*s13 + 11*s23) + 9*s12^6*(10*s13^2 + 19*s13*s23 + 165*
                s23^2) + 10*s12*s13*s23^3*(s13^3 + 17*s13^2*s23 + 44*s13*
                s23^2 + 16*s23^3) + 3*s12^5*(24*s13^3 - 12*s13^2*s23 + 121*
                s13*s23^2 + 922*s23^3) + s12^2*s23^2*(-8*s13^4 - 50*s13^3*
                s23 + 319*s13^2*s23^2 + 464*s13*s23^3 + 93*s23^4) + 
             s12^4*(36*s13^4 + 162*s13^3*s23 - 547*s13^2*s23^2 + 573*s13*
                s23^3 + 2358*s23^4) + s12^3*(18*s13^4*s23 - 422*s13^2*s23^3 + 
               631*s13*s23^4 + 873*s23^5))))/(54*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)^2*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     (-1/27*(ep^3*(p3q*(-27*s12^3 + 13*s12^2*s23 + 40*s13^2*s23 + 
             s12*s13*(27*s13 + 35*s23)) + p2q*(35*s12*s13*s23 + 
             s13^2*(-27*s13 + 13*s23) + s12^2*(27*s13 + 40*s23)) + 
           p1q*(s13*(27*s13 - 13*s23)*s23 + 9*s12^2*(4*s13 + 3*s23) + 
             s12*(36*s13^2 + 18*s13*s23 - 13*s23^2))))/((p1q + p2q + p3q)*s12*
          s13*(s12 + s13)) + 
       (ep^2*(-(p2q^4*s13^2*(s12^2 + 11*s12*s13 + 10*s13^2)*(s12 + s23)*
            (s12 + s13 + s23)) - p3q^2*(s12 + s13 + s23)*
           (p3q^2*s12^2*(10*s12^2 + 11*s12*s13 + s13^2)*(s13 + s23) - 
            p1q*p3q*s12^2*s23*(9*s12*s13 + 9*s13^2 + 20*s12*s23 + 
              11*s13*s23) + p1q^2*s23^2*(-2*s12*s13^2 - s12^2*(s13 - 
                10*s23) - s13^2*(s13 + s23))) + p2q^3*s13*
           (p1q*s13*s23*(9*s12^3 + 20*s13*s23*(s13 + s23) + 2*s12^2*(9*s13 + 
                10*s23) + s12*(9*s13^2 + 40*s13*s23 + 11*s23^2)) + 
            p3q*(20*s12^5 + s12^4*(59*s13 + 40*s23) + s12^2*s13*(-22*s13^2 + 
                8*s13*s23 - 589*s23^2) + 2*s12^3*(s13^2 + 38*s13*s23 - 
                40*s23^2) - s13^3*(19*s13^2 + 48*s13*s23 + 29*s23^2) - 
              2*s12*s13^2*(38*s13^2 + 65*s13*s23 + 72*s23^2))) + 
          p2q*p3q*(p1q^2*s23^2*(s12^4 + 2*s12*s13^2*(2*s13 - 3*s23) + 
              4*s12^3*(s13 - 2*s23) + s13^2*(s13^2 - 8*s13*s23 - 9*s23^2) + 
              s12^2*(6*s13^2 - 6*s13*s23 - 9*s23^2)) - p3q^2*s12*
             (19*s12^5 + s12^4*(76*s13 + 48*s23) - 2*s12^2*s13*(s13^2 + 
                4*s13*s23 - 72*s23^2) - 20*s13^3*(s13^2 + 2*s13*s23 - 
                4*s23^2) + s12^3*(22*s13^2 + 130*s13*s23 + 29*s23^2) + 
              s12*s13^2*(-59*s13^2 - 76*s13*s23 + 589*s23^2)) + 
            p1q*p3q*(18*s12^5*s23 + 18*s13^3*s23*(s13 + s23)^2 - 
              4*s12^2*s13*s23*(64*s13^2 + 133*s13*s23 - 46*s23^2) + 
              4*s12^4*(9*s13^2 + 18*s13*s23 + 14*s23^2) + s12*s13^2*s23*(
                45*s13^2 + 118*s13*s23 + 173*s23^2) + s12^3*(-36*s13^3 - 
                193*s13^2*s23 + 176*s13*s23^2 + 38*s23^3))) + 
          p2q^2*(p1q^2*s23^2*(s12^4 + s12*s13^2*(s13 - 9*s23) - 
              10*s13^2*s23*(s13 + s23) + s12^3*(3*s13 + 2*s23) + 
              s12^2*(3*s13^2 + 3*s13*s23 + s23^2)) - 
            p3q^2*(19*s12^6 + 19*s13^4*(s13 + s23)^2 + s12^5*(28*s13 + 
                38*s23) + s12^4*(-95*s13^2 + 41*s13*s23 + 19*s23^2) + 
              s12^3*s13*(-64*s13^2 - 127*s13*s23 + 213*s23^2) + 
              s12*s13^3*(28*s13^2 + 41*s13*s23 + 213*s23^2) + 
              s12^2*s13^2*(-95*s13^2 - 127*s13*s23 + 1176*s23^2)) + 
            p1q*p3q*(18*s12^5*s23 + 9*s12^4*s23*(5*s13 + 4*s23) + 
              2*s13^3*s23*(9*s13^2 + 28*s13*s23 + 19*s23^2) + 
              8*s12*s13^2*s23*(9*s13^2 + 22*s13*s23 + 23*s23^2) - 
              2*s12^3*(18*s13^3 + 128*s13^2*s23 - 59*s13*s23^2 - 9*s23^3) + 
              s12^2*s13*(36*s13^3 - 193*s13^2*s23 - 532*s13*s23^2 + 
                173*s23^3)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13^2*(s12 + s13)*s23) - 
       (ep*(-2*p1q^4*(p2q + p3q)*(s12^2 - s13^2)*s23^4*(s12 + s13 + s23)*
           (p2q*(-10*s12*s13^3 + s12^3*(s13 - 40*s23) - 5*s13^3*s23) + 
            p3q*(-(s12*s13^3) + 40*s13^3*s23 + 5*s12^3*(2*s13 + s23))) + 
          2*p1q^3*(p2q + p3q)*(s12 + s13)*s23^3*(s12 + s13 + s23)*
           (p3q^2*(-40*s13^5*s23 + s12^2*s13^2*s23*(-244*s13 + s23) + 
              10*s12^5*(s13 + s23) + s12*s13^3*(s13^2 - 122*s13*s23 - 
                162*s23^2) + s12^3*s13*(-94*s13^2 - 259*s13*s23 + 10*s23^2) - 
              s12^4*(101*s13^2 + 35*s13*s23 + 10*s23^2)) + 
            p2q^2*(s12^5*(s13 - 40*s23) - 122*s12^4*s13*s23 + 
              10*s13^4*(s13 - s23)*s23 + s12^2*s13^2*(-101*s13^2 - 
                259*s13*s23 + s23^2) + 5*s12*s13^3*(2*s13^2 - 7*s13*s23 + 
                2*s23^2) - 2*s12^3*s13*(47*s13^2 + 122*s13*s23 + 81*s23^2)) - 
            p2q*p3q*(5*s13^4*s23*(33*s13 + 2*s23) + s12^5*(7*s13 + 165*s23) + 
              s12^2*s13^2*(65*s13^2 + 629*s13*s23 - 2*s23^2) + 
              s12^4*(65*s13^2 + 58*s13*s23 + 10*s23^2) + s12*s13^3*(7*s13^2 + 
                58*s13*s23 + 152*s23^2) + s12^3*s13*(224*s13^2 + 
                629*s13*s23 + 152*s23^2))) + (p2q + p3q)^2*(s12 + s13)*
           (2*p3q^4*s12^3*(s12 + s13)*s23*(5*s12^5 + 5*s12^4*(2*s13 + 
                3*s23) + s12*s13^2*(375*s13^2 - 164*s13*s23 - 188*s23^2) + 
              3*s13^3*(70*s13^2 + 23*s13*s23 - 47*s23^2) + s12^2*s13*(
                120*s13^2 - 243*s13*s23 - 10*s23^2) + 5*s12^3*(-8*s13^2 + 
                s13*s23 + 2*s23^2)) + 2*p2q^4*s13^3*(s12 + s13)*s23*
             (210*s12^5 + s12^4*(375*s13 + 69*s23) + s12^3*(120*s13^2 - 
                164*s13*s23 - 141*s23^2) + 5*s12*s13^2*(2*s13^2 + s13*s23 - 
                2*s23^2) + 5*s13^3*(s13^2 + 3*s13*s23 + 2*s23^2) - 
              s12^2*s13*(40*s13^2 + 243*s13*s23 + 188*s23^2)) + 
            p2q*p3q^3*s12^2*(100*s12^7*s23 + 8*s12^6*s23*(47*s13 + 15*s23) + 
              2*s13^5*s23*(332*s13^2 + 273*s13*s23 + 81*s23^2) + 
              2*s12*s13^4*s23*(1476*s13^2 + 4013*s13*s23 + 691*s23^2) + 
              s12^2*s13^3*s23*(11325*s13^2 + 15567*s13*s23 + 1600*s23^2) + 
              s12^5*(3384*s13^3 + 2877*s13^2*s23 + 640*s13*s23^2 + 
                20*s23^3) + s12^4*s13*(6768*s13^3 + 10063*s13^2*s23 + 
                3369*s13*s23^2 + 344*s23^3) + s12^3*s13^2*(3384*s13^3 + 
                16499*s13^2*s23 + 10576*s13*s23^2 + 704*s23^3)) + 
            p2q^3*p3q*s13^2*(664*s12^7*s23 + 6*s12^6*s23*(492*s13 + 91*s23) + 
              20*s13^5*s23*(5*s13^2 + 6*s13*s23 + s23^2) + 8*s12*s13^4*s23*(
                47*s13^2 + 80*s13*s23 + 43*s23^2) + s12^2*s13^3*s23*(
                2877*s13^2 + 3369*s13*s23 + 704*s23^2) + s12^5*(3384*s13^3 + 
                11325*s13^2*s23 + 8026*s13*s23^2 + 162*s23^3) + 
              s12^4*s13*(6768*s13^3 + 16499*s13^2*s23 + 15567*s13*s23^2 + 
                1382*s23^3) + s12^3*s13^2*(3384*s13^3 + 10063*s13^2*s23 + 
                10576*s13*s23^2 + 1600*s23^3)) + 2*p2q^2*p3q^2*s12*s13*
             (92*s12^7*s23 + 22*s12^6*s23*(53*s13 + 12*s23) + 
              4*s13^5*s23*(23*s13^2 + 66*s13*s23 + 43*s23^2) + 
              2*s12*s13^4*s23*(583*s13^2 + 794*s13*s23 + 311*s23^2) + 
              s12^2*s13^3*s23*(1605*s13^2 + 7281*s13*s23 + 1934*s23^2) + 
              s12^5*(-3384*s13^3 + 1605*s13^2*s23 + 1588*s13*s23^2 + 
                172*s23^3) + s12^4*s13*(-6768*s13^3 + 2005*s13^2*s23 + 
                7281*s13*s23^2 + 622*s23^3) + s12^3*s13^2*(-3384*s13^3 + 
                2005*s13^2*s23 + 12274*s13*s23^2 + 1934*s23^3))) - 
          p1q*(p2q + p3q)*(2*p2q^4*s13^2*(s12 + s13)*s23*
             (s12^6*(s13 + 270*s23) + 10*s13^4*s23*(s13^2 + 4*s13*s23 + 
                3*s23^2) + s12^5*(84*s13^2 + 1196*s13*s23 + 269*s23^2) + 
              s12^2*s13^2*(111*s13^3 + 314*s13^2*s23 - 270*s13*s23^2 - 
                428*s23^3) + s12^3*s13*(274*s13^3 + 1129*s13^2*s23 + 
                7*s13*s23^2 - 353*s23^3) + 5*s12*s13^3*(2*s13^3 + 
                13*s13^2*s23 + 13*s13*s23^2 - 2*s23^3) + s12^4*(256*s13^3 + 
                1796*s13^2*s23 + 571*s13*s23^2 - s23^3)) + 
            2*p3q^4*s12^2*(s12 + s13)*s23*(10*s12^6*(s13 + s23) + 
              s13^4*s23*(270*s13^2 + 269*s13*s23 - s23^2) + 
              s12^5*(111*s13^2 + 65*s13*s23 + 40*s23^2) + s12^2*s13^2*(
                84*s13^3 + 1796*s13^2*s23 + 7*s13*s23^2 - 428*s23^3) + 
              s12*s13^3*(s13^3 + 1196*s13^2*s23 + 571*s13*s23^2 - 
                353*s23^3) + s12^3*s13*(256*s13^3 + 1129*s13^2*s23 - 
                270*s13*s23^2 - 10*s23^3) + s12^4*(274*s13^3 + 314*s13^2*
                 s23 + 65*s13*s23^2 + 30*s23^3)) + p2q*p3q^3*s12*
             (2*s12^8*s23*(29*s13 + 195*s23) + 4*s13^6*s23^2*(107*s13^2 + 
                274*s13*s23 + 167*s23^2) + s12^7*(-3384*s13^3 + 444*s13^2*
                 s23 + 1746*s13*s23^2 + 490*s23^3) + 2*s12*s13^5*s23*(
                -20*s13^3 + 2488*s13^2*s23 + 3343*s13*s23^2 + 995*s23^3) + 
              s12^3*s13^3*s23*(-5844*s13^3 + 26671*s13^2*s23 + 35162*s13*
                 s23^2 + 2218*s23^3) + s12^2*s13^4*s23*(-390*s13^3 + 
                13493*s13^2*s23 + 22571*s13*s23^2 + 2938*s23^3) + 
              s12^6*(-10152*s13^4 + 2334*s13^3*s23 + 9626*s13^2*s23^2 + 
                2490*s13*s23^3 + 100*s23^4) + s12^5*s13*(-10152*s13^4 - 
                1616*s13^3*s23 + 26963*s13^2*s23^2 + 10068*s13*s23^3 + 
                1092*s23^4) + s12^4*s13^2*(-3384*s13^4 - 9058*s13^3*s23 + 
                36419*s13^2*s23^2 + 25889*s13*s23^3 + 1594*s23^4)) + 
            p2q^3*p3q*s13*(10*s13^6*s23^2*(39*s13^2 + 49*s13*s23 + 
                10*s23^2) + s12^8*(-40*s13*s23 + 428*s23^2) + 
              2*s12^7*s23*(-195*s13^2 + 2488*s13*s23 + 548*s23^2) + 
              2*s12*s13^5*s23*(29*s13^3 + 873*s13^2*s23 + 1245*s13*s23^2 + 
                546*s23^3) + 2*s12^2*s13^4*s23*(222*s13^3 + 4813*s13^2*s23 + 
                5034*s13*s23^2 + 797*s23^3) + s12^6*(-3384*s13^4 - 
                5844*s13^3*s23 + 13493*s13^2*s23^2 + 6686*s13*s23^3 + 
                668*s23^4) + s12^5*s13*(-10152*s13^4 - 9058*s13^3*s23 + 
                26671*s13^2*s23^2 + 22571*s13*s23^3 + 1990*s23^4) + 
              s12^3*s13^3*(-3384*s13^4 + 2334*s13^3*s23 + 26963*s13^2*s23^2 + 
                25889*s13*s23^3 + 2218*s23^4) + s12^4*s13^2*(-10152*s13^4 - 
                1616*s13^3*s23 + 36419*s13^2*s23^2 + 35162*s13*s23^3 + 
                2938*s23^4)) + p2q^2*p3q^2*(2*s12^9*s23*(19*s13 + 140*s23) + 
              40*s13^7*s23^2*(7*s13^2 + 8*s13*s23 + s23^2) + 2*s12^8*s23*(
                81*s13^2 + 931*s13*s23 + 160*s23^2) + 2*s12*s13^6*s23*(
                19*s13^3 + 931*s13^2*s23 + 1652*s13*s23^2 + 860*s23^3) + 
              s12^2*s13^5*s23*(162*s13^3 + 12053*s13^2*s23 + 15447*s13*
                 s23^2 + 4462*s23^3) + s12^3*s13^4*s23*(4700*s13^3 + 
                29175*s13^2*s23 + 42878*s13*s23^2 + 7426*s23^3) + 
              s12^7*(6768*s13^4 + 4700*s13^3*s23 + 12053*s13^2*s23^2 + 
                3304*s13*s23^3 + 40*s23^4) + s12^6*s13*(20304*s13^4 + 
                5422*s13^3*s23 + 29175*s13^2*s23^2 + 15447*s13*s23^3 + 
                1720*s23^4) + 2*s12^5*s13^2*(10152*s13^4 + 846*s13^3*s23 + 
                20399*s13^2*s23^2 + 21439*s13*s23^3 + 2231*s23^4) + 
              2*s12^4*s13^3*(3384*s13^4 + 2711*s13^3*s23 + 20399*s13^2*
                 s23^2 + 30775*s13*s23^3 + 3713*s23^4))) + 
          p1q^2*s23*(2*p3q^4*s12*(s12 + s13)*s23*(10*s12^6*s13 + 
              s12^5*(202*s13^2 + 75*s13*s23 + 30*s23^2) + 2*s12*s13^3*s23*(
                399*s13^2 + 499*s13*s23 + 80*s23^2) + 2*s13^4*s23*(61*s13^2 + 
                142*s13*s23 + 81*s23^2) + 3*s12^2*s13^2*(28*s13^3 + 
                578*s13^2*s23 + 301*s13*s23^2 - 77*s23^3) + s12^3*s13*(
                350*s13^3 + 1707*s13^2*s23 + 216*s13*s23^2 - 20*s23^3) + 
              s12^4*(458*s13^3 + 724*s13^2*s23 + 75*s13*s23^2 + 30*s23^3)) + 
            2*p2q^4*s13*(s12 + s13)*s23*(122*s12^6*s23 + 30*s13^4*s23^2*(
                s13 + s23) + s12^5*(84*s13^2 + 798*s13*s23 + 284*s23^2) + 
              s12^2*s13^2*(202*s13^3 + 724*s13^2*s23 + 216*s13*s23^2 - 
                231*s23^3) + 5*s12*s13^3*(2*s13^3 + 15*s13^2*s23 + 
                15*s13*s23^2 - 4*s23^3) + 2*s12^4*(175*s13^3 + 867*s13^2*
                 s23 + 499*s13*s23^2 + 81*s23^3) + s12^3*s13*(458*s13^3 + 
                1707*s13^2*s23 + 903*s13*s23^2 + 160*s23^3)) + 
            p2q*p3q^3*(2*s12^8*s23*(47*s13 + 265*s23) + 20*s13^6*s23^2*(
                13*s13^2 + 14*s13*s23 + s23^2) + 4*s12*s13^5*s23*(9*s13^3 + 
                462*s13^2*s23 + 808*s13*s23^2 + 415*s23^3) + 
              s12^7*(-3384*s13^3 + 1028*s13^2*s23 + 2092*s13*s23^2 + 
                670*s23^3) + 2*s12^2*s13^4*s23*(99*s13^3 + 4589*s13^2*s23 + 
                5978*s13*s23^2 + 1556*s23^3) + s12^3*s13^3*s23*(956*s13^3 + 
                19677*s13^2*s23 + 20565*s13*s23^2 + 1560*s23^3) + 
              s12^6*(-6624*s13^4 + 1010*s13^3*s23 + 10125*s13^2*s23^2 + 
                2660*s13*s23^3 + 140*s23^4) + s12^4*s13^2*(144*s13^4 - 
                1894*s13^3*s23 + 26379*s13^2*s23^2 + 19246*s13*s23^3 + 
                820*s23^4) + s12^5*s13*(-3096*s13^4 - 2612*s13^3*s23 + 
                23575*s13^2*s23^2 + 9315*s13*s23^3 + 1052*s23^4)) + 
            p2q^3*p3q*(4*s12^8*s23*(9*s13 + 65*s23) + 10*s13^6*s23^2*(
                53*s13^2 + 67*s13*s23 + 14*s23^2) + 2*s12^7*s23*(99*s13^2 + 
                924*s13*s23 + 140*s23^2) + 2*s12*s13^5*s23*(47*s13^3 + 
                1046*s13^2*s23 + 1330*s13*s23^2 + 526*s23^3) + 
              s12^2*s13^4*s23*(1028*s13^3 + 10125*s13^2*s23 + 9315*s13*
                 s23^2 + 820*s23^3) + 2*s12^6*(72*s13^4 + 478*s13^3*s23 + 
                4589*s13^2*s23^2 + 1616*s13*s23^3 + 10*s23^4) + 
              s12^3*s13^3*(-3384*s13^4 + 1010*s13^3*s23 + 23575*s13^2*s23^2 + 
                19246*s13*s23^3 + 1560*s23^4) + s12^5*s13*(-3096*s13^4 - 
                1894*s13^3*s23 + 19677*s13^2*s23^2 + 11956*s13*s23^3 + 
                1660*s23^4) + s12^4*s13^2*(-6624*s13^4 - 2612*s13^3*s23 + 
                26379*s13^2*s23^2 + 20565*s13*s23^3 + 3112*s23^4)) + 
            p2q^2*p3q^2*(10*s12^8*s23*(11*s13 + 79*s23) + 10*s13^6*s23^2*(
                79*s13^2 + 89*s13*s23 + 10*s23^2) + s12^7*(-144*s13^3 + 
                802*s13^2*s23 + 3546*s13*s23^2 + 890*s23^3) + 
              2*s12*s13^5*s23*(55*s13^3 + 1773*s13^2*s23 + 2557*s13*s23^2 + 
                1184*s23^3) + s12^2*s13^4*s23*(802*s13^3 + 15865*s13^2*s23 + 
                18125*s13*s23^2 + 3790*s23^3) + s12^6*(6480*s13^4 + 
                6958*s13^3*s23 + 15865*s13^2*s23^2 + 5114*s13*s23^3 + 
                100*s23^4) + s12^5*s13*(13248*s13^4 + 12450*s13^3*s23 + 
                36566*s13^2*s23^2 + 18125*s13*s23^3 + 2368*s23^4) + 
              s12^3*s13^3*(-144*s13^4 + 6958*s13^3*s23 + 36566*s13^2*s23^2 + 
                33771*s13*s23^3 + 3404*s23^4) + s12^4*s13^2*(6480*s13^4 + 
                12450*s13^3*s23 + 45474*s13^2*s23^2 + 33771*s13*s23^3 + 
                3790*s23^4)))))/(54*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*
         s12^3*s13^3*(s12 + s13)^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       (4*p1q^4*s23^3*(s12 + s13 + s23)*(p3q^2*(120*s13^5*s23^2 + 
             6*s12*s13^4*s23*(27*s13 + 20*s23) + 2*s12^2*s13^3*
              (311*s13^2 - s13*s23 - 40*s23^2) + s12^4*s13*(498*s13^2 - 20*
                s13*s23 - 15*s23^2) + 2*s12^3*s13^2*(591*s13^2 - 92*s13*s23 + 
               5*s23^2) - s12^5*(62*s13^2 + 15*s23^2)) + 
           p2q^2*(-15*s12*s13^4*s23^2 - 15*s13^5*s23^2 + 2*s12^3*s13^2*
              (249*s13^2 - 92*s13*s23 - 40*s23^2) - 2*s12^2*s13^3*
              (31*s13^2 + 10*s13*s23 - 5*s23^2) + 2*s12^4*s13*
              (591*s13^2 - s13*s23 + 60*s23^2) + 2*s12^5*(311*s13^2 + 81*s13*
                s23 + 60*s23^2)) + p2q*p3q*(s12 + s13)*
            (8*s12^3*s13^2*(140*s13 - 23*s23) + 162*s12*s13^4*s23 + 
             105*s13^4*s23^2 + 2*s12^2*s13^2*(280*s13^2 - 92*s13*s23 - 35*
                s23^2) + s12^4*(560*s13^2 + 162*s13*s23 + 105*s23^2))) - 
         2*p1q^3*s23^2*(s12 + s13 + s23)*(p3q^3*(240*s13^6*s23^2 - 
             2*s12^6*(143*s13^2 + 10*s13*s23 + 40*s23^2) + 2*s12*s13^4*s23*
              (162*s13^2 + 443*s13*s23 + 163*s23^2) + 2*s12^4*s13*
              (2967*s13^3 - 1362*s13^2*s23 - 163*s13*s23^2 + 30*s23^3) + 
             s12^5*(1916*s13^3 - 299*s13^2*s23 - 190*s13*s23^2 + 40*s23^3) + 
             s12^3*s13^2*(4976*s13^3 - 3695*s13^2*s23 - 64*s13*s23^2 + 256*
                s23^3) + 2*s12^2*s13^3*(622*s13^3 - 463*s13^2*s23 + 489*s13*
                s23^2 + 326*s23^3)) + p2q^3*(40*s13^5*s23^2*(-2*s13 + s23) - 
             10*s12*s13^4*s23*(2*s13^2 + 19*s13*s23 - 6*s23^2) + 
             4*s12^6*(311*s13^2 + 81*s13*s23 + 60*s23^2) + 
             2*s12^5*s13*(2488*s13^2 - 463*s13*s23 + 443*s23^2) - 
             s12^2*s13^3*(286*s13^3 + 299*s13^2*s23 + 326*s13*s23^2 - 256*
                s23^3) + 4*s12^3*s13^2*(479*s13^3 - 681*s13^2*s23 - 16*s13*
                s23^2 + 163*s23^3) + s12^4*s13*(5934*s13^3 - 3695*s13^2*s23 + 
               978*s13*s23^2 + 326*s23^3)) + p2q^2*p3q*
            (10*s13^5*s23^2*(89*s13 + 8*s23) + 2*s12*s13^4*s23*
              (466*s13^2 + 451*s13*s23 + 223*s23^2) + 
             2*s12^6*(1866*s13^2 + 638*s13*s23 + 605*s23^2) + 
             s12^5*(7044*s13^3 - 3933*s13^2*s23 + 1978*s13*s23^2 + 40*
                s23^3) + 2*s12^4*s13*(2547*s13^3 - 6902*s13^2*s23 + 356*s13*
                s23^2 + 356*s23^3) + 2*s12^2*s13^3*(1101*s13^3 - 1653*s13^2*
                s23 - 296*s13*s23^2 + 582*s23^3) + s12^3*s13^2*
              (3984*s13^3 - 12833*s13^2*s23 + 240*s13*s23^2 + 1560*s23^3)) + 
           p2q*p3q^2*(10*s13^5*s23^2*(121*s13 + 4*s23) + 2*s12*s13^4*s23*
              (638*s13^2 + 989*s13*s23 + 356*s23^2) + 
             s12^6*(2202*s13^2 + 932*s13*s23 + 890*s23^2) + 
             s12^5*(3984*s13^3 - 3306*s13^2*s23 + 902*s13*s23^2 + 80*s23^3) + 
             4*s12^3*s13^2*(1761*s13^3 - 3451*s13^2*s23 + 60*s13*s23^2 + 291*
                s23^3) + s12^4*s13*(5094*s13^3 - 12833*s13^2*s23 - 592*s13*
                s23^2 + 446*s23^3) + s12^2*s13^3*(3732*s13^3 - 3933*s13^2*
                s23 + 712*s13*s23^2 + 1560*s23^3))) + (p2q + p3q)^2*
          (s12 + s13)*(-2*p2q^2*p3q^2*s12*s13*(174*s12^7*s23 + 
             2*s13^5*s23*(87*s13^2 - 86*s13*s23 - 173*s23^2) + 
             2*s12^6*(81*s13^2 - 1431*s13*s23 - 86*s23^2) - 
             2*s12*s13^4*s23*(1431*s13^2 + 1895*s13*s23 + 444*s23^2) + 
             s12^3*s13^2*(6912*s13^3 + 8661*s13^2*s23 - 7130*s13*s23^2 - 1214*
                s23^3) + s12^2*s13^3*(162*s13^3 - 753*s13^2*s23 - 6823*s13*
                s23^2 - 1214*s23^3) + s12^4*s13*(13500*s13^3 + 8661*s13^2*
                s23 - 6823*s13*s23^2 - 888*s23^3) + s12^5*(6912*s13^3 - 753*
                s13^2*s23 - 3790*s13*s23^2 - 346*s23^3)) + 
           2*p3q^4*s12^3*(s12 + s13)*(10*s12^5*s23 + 2*s12^4*(81*s13^2 + 15*
                s13*s23 + 25*s23^2) + s13^3*s23*(1079*s13^2 + 1145*s13*s23 + 
               66*s23^2) + s12*s13^2*s23*(2319*s13^2 + 1675*s13*s23 + 369*
                s23^2) + s12^3*(324*s13^3 + 353*s13^2*s23 + 160*s13*s23^2 + 
               40*s23^3) + s12^2*s13*(162*s13^3 + 1573*s13^2*s23 + 640*s13*
                s23^2 + 100*s23^3)) + 2*p2q^4*s13^3*(s12 + s13)*
            (1079*s12^5*s23 + 10*s13^3*s23*(s13^2 + 5*s13*s23 + 4*s23^2) + 
             10*s12*s13^2*s23*(3*s13^2 + 16*s13*s23 + 10*s23^2) + 
             s12^4*(162*s13^2 + 2319*s13*s23 + 1145*s23^2) + 
             s12^3*(324*s13^3 + 1573*s13^2*s23 + 1675*s13*s23^2 + 66*s23^3) + 
             s12^2*s13*(162*s13^3 + 353*s13^2*s23 + 640*s13*s23^2 + 369*
                s23^3)) + p2q^3*p3q*s13^2*(1734*s12^7*s23 + 
             80*s13^5*s23*(7*s13^2 + 8*s13*s23 + s23^2) + 4*s12*s13^4*s23*
              (266*s13^2 + 389*s13*s23 + 243*s23^2) + 
             s12^6*(-324*s13^2 + 2092*s13*s23 + 722*s23^2) + 
             s12^5*(5616*s13^3 + 10507*s13^2*s23 + 6994*s13*s23^2 - 532*
                s23^3) + s12^4*s13*(12528*s13^3 + 24029*s13^2*s23 + 18557*s13*
                s23^2 + 326*s23^3) + s12^3*s13^2*(6912*s13^3 + 20787*s13^2*
                s23 + 21024*s13*s23^2 + 3266*s23^3) + s12^2*s13^3*
              (324*s13^3 + 7411*s13^2*s23 + 10375*s13*s23^2 + 3300*s23^3)) + 
           p2q*p3q^3*s12^2*(560*s12^7*s23 + 2*s13^5*s23*(867*s13^2 + 361*s13*
                s23 - 266*s23^2) + 4*s12^6*(81*s13^2 + 266*s13*s23 + 160*
                s23^2) + 2*s12*s13^4*s23*(1046*s13^2 + 3497*s13*s23 + 163*
                s23^2) + s12^5*(6912*s13^3 + 7411*s13^2*s23 + 1556*s13*
                s23^2 + 80*s23^3) + s12^4*s13*(12528*s13^3 + 20787*s13^2*
                s23 + 10375*s13*s23^2 + 972*s23^3) + s12^2*s13^3*
              (-324*s13^3 + 10507*s13^2*s23 + 18557*s13*s23^2 + 3266*s23^3) + 
             s12^3*s13^2*(5616*s13^3 + 24029*s13^2*s23 + 21024*s13*s23^2 + 
               3300*s23^3))) + p1q^2*s23*
          (2*p2q^4*s13*(60*s13^5*s23^2*(-s13^2 + s13*s23 + 2*s23^2) + 
             2*s12^7*(666*s13^2 - 623*s13*s23 + 203*s23^2) - 
             10*s12*s13^4*s23*(4*s13^3 + 35*s13^2*s23 - 17*s13*s23^2 - 30*
                s23^3) + s12^6*(5166*s13^3 - 6213*s13^2*s23 + 1643*s13*
                s23^2 + 732*s23^3) - 2*s12^2*s13^3*(162*s13^4 + 474*s13^3*
                s23 + 821*s13^2*s23^2 - 220*s13*s23^3 - 474*s23^4) + 
             s12^5*(7182*s13^4 - 11829*s13^3*s23 - 214*s13^2*s23^2 + 4113*s13*
                s23^3 + 326*s23^4) + s12^4*s13*(3870*s13^4 - 10871*s13^3*
                s23 - 4855*s13^2*s23^2 + 6742*s13*s23^3 + 1304*s23^4) + 
             s12^3*s13^2*(198*s13^4 - 4917*s13^3*s23 - 4756*s13^2*s23^2 + 
               3691*s13*s23^3 + 1836*s23^4)) + 2*p3q^4*s12*
            (-4*s12^7*(81*s13^2 + 10*s13*s23 + 15*s23^2) + 2*s13^5*s23^2*
              (203*s13^2 + 366*s13*s23 + 163*s23^2) + 
             2*s12^6*(99*s13^3 - 474*s13^2*s23 - 175*s13*s23^2 + 30*s23^3) + 
             s12*s13^4*s23*(-1246*s13^3 + 1643*s13^2*s23 + 4113*s13*s23^2 + 
               1304*s23^3) + s12^5*(3870*s13^4 - 4917*s13^3*s23 - 1642*s13^2*
                s23^2 + 170*s13*s23^3 + 120*s23^4) + s12^4*s13*
              (7182*s13^4 - 10871*s13^3*s23 - 4756*s13^2*s23^2 + 440*s13*
                s23^3 + 300*s23^4) + s12^3*s13^2*(5166*s13^4 - 11829*s13^3*
                s23 - 4855*s13^2*s23^2 + 3691*s13*s23^3 + 948*s23^4) + 
             s12^2*s13^3*(1332*s13^4 - 6213*s13^3*s23 - 214*s13^2*s23^2 + 
               6742*s13*s23^3 + 1836*s23^4)) + p2q^3*p3q*
            (20*s13^6*s23^2*(145*s13^2 + 173*s13*s23 + 28*s23^2) + 
             8*s12^8*(351*s13^2 + 157*s13*s23 + 190*s23^2) + 
             2*s12^7*(3132*s13^3 - 4465*s13^2*s23 + 3904*s13*s23^2 + 800*
                s23^3) + 4*s12*s13^5*s23*(436*s13^3 + 2024*s13^2*s23 + 1872*
                s13*s23^2 + 869*s23^3) + s12^6*(-108*s13^4 - 47478*s13^3*
                s23 + 9220*s13^2*s23^2 + 8692*s13*s23^3 + 80*s23^4) + 
             s12^5*s13*(-14688*s13^4 - 99920*s13^3*s23 - 745*s13^2*s23^2 + 
               31494*s13*s23^3 + 3580*s23^4) + s12^2*s13^4*(1836*s13^4 - 
               10330*s13^3*s23 - 6395*s13^2*s23^2 + 16847*s13*s23^3 + 9788*
                s23^4) + s12^4*s13^2*(-16200*s13^4 - 108328*s13^3*s23 - 17677*
                s13^2*s23^2 + 52771*s13*s23^3 + 11212*s23^4) + 
             s12^3*s13^3*(-3240*s13^4 - 57774*s13^3*s23 - 24151*s13^2*s23^2 + 
               41908*s13*s23^3 + 14224*s23^4)) + p2q*p3q^3*
            (80*s13^6*s23^2*(19*s13^2 + 20*s13*s23 + s23^2) + 
             4*s12^8*(459*s13^2 + 436*s13*s23 + 725*s23^2) + 
             4*s12*s13^5*s23*(314*s13^3 + 1952*s13^2*s23 + 2173*s13*s23^2 + 
               895*s23^3) + s12^7*(-3240*s13^3 - 10330*s13^2*s23 + 8096*s13*
                s23^2 + 3460*s23^3) + s12^6*(-16200*s13^4 - 57774*s13^3*s23 - 
               6395*s13^2*s23^2 + 7488*s13*s23^3 + 560*s23^4) + 
             s12^5*s13*(-14688*s13^4 - 108328*s13^3*s23 - 24151*s13^2*s23^2 + 
               16847*s13*s23^3 + 3476*s23^4) + 2*s12^2*s13^4*
              (1404*s13^4 - 4465*s13^3*s23 + 4610*s13^2*s23^2 + 15747*s13*
                s23^3 + 5606*s23^4) + s12^4*s13^2*(-108*s13^4 - 99920*s13^3*
                s23 - 17677*s13^2*s23^2 + 41908*s13*s23^3 + 9788*s23^4) + 
             s12^3*s13^3*(6264*s13^4 - 47478*s13^3*s23 - 745*s13^2*s23^2 + 
               52771*s13*s23^3 + 14224*s23^4)) + p2q^2*p3q^2*
            (20*s13^6*s23^2*(227*s13^2 + 247*s13*s23 + 20*s23^2) + 
             4*s12^8*(1323*s13^2 + 770*s13*s23 + 1135*s23^2) + 
             4*s12^7*(1449*s13^3 - 3718*s13^2*s23 + 3948*s13*s23^2 + 1235*
                s23^3) + 4*s12*s13^5*s23*(770*s13^3 + 3948*s13^2*s23 + 3594*
                s13*s23^2 + 1451*s23^3) + s12^6*(-11052*s13^4 - 71328*s13^3*
                s23 + 2823*s13^2*s23^2 + 14376*s13*s23^3 + 400*s23^4) + 
             s12^5*s13*(-23112*s13^4 - 127856*s13^3*s23 - 9124*s13^2*s23^2 + 
               39235*s13*s23^3 + 5804*s23^4) + s12^2*s13^4*(5292*s13^4 - 
               14872*s13^3*s23 + 2823*s13^2*s23^2 + 39235*s13*s23^3 + 16496*
                s23^4) + s12^4*s13^2*(-11052*s13^4 - 127856*s13^3*s23 - 4270*
                s13^2*s23^2 + 73813*s13*s23^3 + 16496*s23^4) + 
             s12^3*s13^3*(5796*s13^4 - 71328*s13^3*s23 - 9124*s13^2*s23^2 + 
               73813*s13*s23^3 + 21104*s23^4))) + p1q*(p2q + p3q)*
          (p2q^3*p3q*s13*(4*s12^8*(691*s13 - 136*s23)*s23 - 
             20*s13^6*s23^2*(107*s13^2 + 127*s13*s23 + 20*s23^2) - 
             4*s12^7*(81*s13^3 - 26*s13^2*s23 + 2829*s13*s23^2 + 492*s23^3) - 
             4*s12*s13^5*s23*(142*s13^3 + 1525*s13^2*s23 + 1827*s13*s23^2 + 
               879*s23^3) + s12^3*s13^3*(7236*s13^4 + 18000*s13^3*s23 - 32265*
                s13^2*s23^2 - 64919*s13*s23^3 - 16144*s23^4) + 
             s12^4*s13^2*(19440*s13^4 + 13252*s13^3*s23 - 74443*s13^2*s23^2 - 
               84248*s13*s23^3 - 11998*s23^4) + 2*s12^2*s13^4*
              (162*s13^4 + 3242*s13^3*s23 - 4802*s13^2*s23^2 - 13451*s13*
                s23^3 - 5703*s23^4) + s12^5*s13*(18144*s13^4 - 4144*s13^3*
                s23 - 80339*s13^2*s23^2 - 58343*s13*s23^3 - 5568*s23^4) + 
             s12^6*(5292*s13^4 - 9108*s13^3*s23 - 43289*s13^2*s23^2 - 19568*
                s13*s23^3 - 1424*s23^4)) + 2*p2q^4*s13^2*(s12 + s13)*
            (s12^6*(1658*s13 - 1179*s23)*s23 - 120*s13^4*s23^3*(s13 + s23) + 
             s12^5*(162*s13^3 + 5239*s13^2*s23 - 3291*s13*s23^2 - 1505*
                s23^3) + 10*s12*s13^3*s23*(2*s13^3 + 7*s13^2*s23 - 37*s13*
                s23^2 - 30*s23^3) + s12^3*s13*(486*s13^4 + 2513*s13^3*s23 - 
               213*s13^2*s23^2 - 4472*s13*s23^3 - 1021*s23^4) + 
             s12^2*s13^2*(162*s13^4 + 325*s13^3*s23 + 384*s13^2*s23^2 - 1110*
                s13*s23^3 - 1001*s23^4) + s12^4*(486*s13^4 + 5789*s13^3*s23 - 
               2639*s13^2*s23^2 - 5117*s13*s23^3 - 326*s23^4)) + 
           2*p3q^4*s12^2*(s12 + s13)*(2*s12^6*s13*(81*s13 + 10*s23) - 
             s13^4*s23^2*(1179*s13^2 + 1505*s13*s23 + 326*s23^2) + 
             s12*s13^3*s23*(1658*s13^3 - 3291*s13^2*s23 - 5117*s13*s23^2 - 
               1021*s23^3) + s12^5*(486*s13^3 + 325*s13^2*s23 + 70*s13*
                s23^2 - 120*s23^3) + 13*s12^2*s13^2*s23*(403*s13^3 - 203*
                s13^2*s23 - 344*s13*s23^2 - 77*s23^3) + s12^3*s13*
              (162*s13^4 + 5789*s13^3*s23 - 213*s13^2*s23^2 - 1110*s13*
                s23^3 - 300*s23^4) + s12^4*(486*s13^4 + 2513*s13^3*s23 + 384*
                s13^2*s23^2 - 370*s13*s23^3 - 120*s23^4)) + 
           p2q*p3q^3*s12*(4*s12^8*(81*s13^2 - 142*s13*s23 - 535*s23^2) - 
             16*s13^6*s23^2*(34*s13^2 + 123*s13*s23 + 89*s23^2) + 
             s12^2*s13^4*s23*(104*s13^3 - 43289*s13^2*s23 - 58343*s13*s23^2 - 
               11998*s23^3) + 4*s12*s13^5*s23*(691*s13^3 - 2829*s13^2*s23 - 
               4892*s13*s23^2 - 1392*s23^3) + 4*s12^7*(1809*s13^3 + 1621*
                s13^2*s23 - 1525*s13*s23^2 - 635*s23^3) + s12^4*s13^2*
              (5292*s13^4 - 4144*s13^3*s23 - 74443*s13^2*s23^2 - 64919*s13*
                s23^3 - 11406*s23^4) + s12^5*s13*(18144*s13^4 + 13252*s13^3*
                s23 - 32265*s13^2*s23^2 - 26902*s13*s23^3 - 3516*s23^4) + 
             4*s12^6*(4860*s13^4 + 4500*s13^3*s23 - 2401*s13^2*s23^2 - 1827*
                s13*s23^3 - 100*s23^4) - s12^3*s13^3*(324*s13^4 + 9108*s13^3*
                s23 + 80339*s13^2*s23^2 + 84248*s13*s23^3 + 16144*s23^4)) - 
           p2q^2*p3q^2*(32*s12^9*s23*(19*s13 + 50*s23) + 160*s13^7*s23^2*
              (10*s13^2 + 11*s13*s23 + s23^2) + 2*s12^8*(162*s13^3 - 4279*
                s13^2*s23 + 2726*s13*s23^2 + 880*s23^3) + 4*s12*s13^6*s23*
              (152*s13^3 + 1363*s13^2*s23 + 1876*s13*s23^2 + 1025*s23^3) + 
             s12^2*s13^5*s23*(-8558*s13^3 + 16869*s13^2*s23 + 38691*s13*
                s23^2 + 13720*s23^3) + s12^7*(14148*s13^4 - 2416*s13^3*s23 + 
               16869*s13^2*s23^2 + 7504*s13*s23^3 + 160*s23^4) + 
             s12^6*s13*(40824*s13^4 + 53038*s13^3*s23 + 58991*s13^2*s23^2 + 
               38691*s13*s23^3 + 4100*s23^4) + 2*s12^5*s13^2*
              (20412*s13^4 + 46288*s13^3*s23 + 60932*s13^2*s23^2 + 46133*s13*
                s23^3 + 6860*s23^4) + 2*s12^4*s13^3*(7074*s13^4 + 26519*s13^3*
                s23 + 60932*s13^2*s23^2 + 60039*s13*s23^3 + 10702*s23^4) + 
             s12^3*s13^4*(324*s13^4 - 2416*s13^3*s23 + 58991*s13^2*s23^2 + 
               92266*s13*s23^3 + 21404*s23^4))))/(108*p2q*p3q*(p2q + p3q)^2*
         (p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)^2*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (2*p1q^4*s23^3*(s12 + s13 + s23)*(p3q^2*(311*s12^2*s13^3 + 
             163*s12*s13^3*s23 + 80*s13^3*s23^2 + s12^3*(-31*s13^2 + 10*s13*
                s23 - 10*s23^2)) + p2q*p3q*(280*s12^2*s13^3 + 
             173*s12*s13^3*s23 + 70*s13^3*s23^2 + s12^3*(280*s13^2 + 173*s13*
                s23 + 70*s23^2)) + p2q^2*(-31*s12^2*s13^3 + 
             10*s12*s13^3*s23 - 10*s13^3*s23^2 + s12^3*(311*s13^2 + 163*s13*
                s23 + 80*s23^2))) - 2*p1q^3*s23^2*(s12 + s13 + s23)*
          (p2q^3*(20*s12*s13^3*(s13 - 2*s23)*s23 + 10*s13^3*s23^2*
              (-3*s13 + s23) + s12^2*s13^3*(-31*s13 + 72*s23) + 
             s12^4*(311*s13^2 + 163*s13*s23 + 80*s23^2) + 
             s12^3*s13*(622*s13^2 + 15*s13*s23 + 160*s23^2)) + 
           p2q*p3q^2*(3*s12^2*s13^3*(311*s13 - 182*s23) + 10*s13^3*s23^2*
              (40*s13 + s23) + s12*s13^3*s23*(652*s13 + 37*s23) + 
             s12^4*(591*s13^2 + 509*s13*s23 + 290*s23^2) - 
             s12^3*(186*s13^3 + 489*s13^2*s23 + 163*s13*s23^2 - 20*s23^3)) + 
           p3q^3*(80*s13^4*s23^2 + s12^2*s13^3*(311*s13 + 15*s23) + 
             s12*s13^3*s23*(163*s13 + 160*s23) + s12^4*(-31*s13^2 + 20*s13*
                s23 - 30*s23^2) + 2*s12^3*(311*s13^3 + 36*s13^2*s23 - 20*s13*
                s23^2 + 5*s23^3)) + p2q^2*p3q*(3*s12^2*s13^3*(197*s13 - 163*
                s23) + s12*s13^3*(509*s13 - 163*s23)*s23 + 10*s13^3*s23^2*
              (29*s13 + 2*s23) + s12^4*(933*s13^2 + 652*s13*s23 + 400*
                s23^2) + s12^3*(-186*s13^3 - 546*s13^2*s23 + 37*s13*s23^2 + 
               10*s23^3))) + (p2q + p3q)^2*(p2q^4*s13^3*s23*
            (333*s12^5 + 20*s13^3*s23*(s13 + s23) + 20*s12*s13^2*s23*
              (4*s13 + 3*s23) + s12^2*s13*s23*(131*s13 + 71*s23) + 
             s12^4*(666*s13 + 355*s23) + s12^3*(333*s13^2 + 426*s13*s23 + 22*
                s23^2)) + p3q^4*s12^3*s23*(20*s12^4*s23 + 20*s12^3*s23*
              (4*s13 + s23) + s13^3*(333*s13^2 + 355*s13*s23 + 22*s23^2) + 
             s12^2*s13*(333*s13^2 + 131*s13*s23 + 60*s23^2) + 
             s12*s13^2*(666*s13^2 + 426*s13*s23 + 71*s23^2)) - 
           2*p2q^2*p3q^2*s12*s13*(180*s12^6*s23 - 9*s12^5*(33*s13 - 20*s23)*
              s23 + 180*s13^5*s23*(s13 + s23) + s12^4*s13*(1368*s13^2 + 576*
                s13*s23 - 427*s23^2) + 3*s12^2*s13^2*s23*(192*s13^2 + 125*s13*
                s23 - 20*s23^2) - s12*s13^3*s23*(297*s13^2 + 427*s13*s23 + 30*
                s23^2) + 3*s12^3*s13*(456*s13^3 + 678*s13^2*s23 + 125*s13*
                s23^2 - 10*s23^3)) + p2q*p3q^3*s12^2*(180*s12^6*s23 + 
             2*s12^5*s23*(27*s13 + 100*s23) + s13^4*s23*(531*s13^2 + 471*s13*
                s23 + 20*s23^2) + s12*s13^3*s23*(54*s13^2 + 222*s13*s23 + 91*
                s23^2) + s12^2*s13^2*s23*(927*s13^2 + 763*s13*s23 + 120*
                s23^2) + 2*s12^4*(684*s13^3 + 288*s13^2*s23 - 23*s13*s23^2 + 
               10*s23^3) + 2*s12^3*s13*(684*s13^3 + 1017*s13^2*s23 + 401*s13*
                s23^2 + 30*s23^3)) + p2q^3*p3q*s13^2*(531*s12^6*s23 + 
             3*s12^5*s23*(18*s13 + 157*s23) + 20*s13^4*s23*(9*s13^2 + 10*s13*
                s23 + s23^2) + 2*s12*s13^3*s23*(27*s13^2 - 23*s13*s23 + 30*
                s23^2) + 2*s12^2*s13^2*s23*(288*s13^2 + 401*s13*s23 + 60*
                s23^2) + s12^4*(1368*s13^3 + 927*s13^2*s23 + 222*s13*s23^2 + 
               20*s23^3) + s12^3*s13*(1368*s13^3 + 2034*s13^2*s23 + 763*s13*
                s23^2 + 91*s23^3))) + p1q*(p2q + p3q)*
          (p2q^4*s13^2*s23*(s12^5*(666*s13 - 311*s23) + s12^3*s13*
              (666*s13^2 + 241*s13*s23 - 649*s23^2) + 
             s12^4*(1332*s13^2 - 223*s13*s23 - 311*s23^2) + 
             s12^2*s13*s23*(233*s13^2 - 38*s13*s23 - 71*s23^2) + 
             20*s12*s13^2*s23*(5*s13^2 - 5*s13*s23 - 6*s23^2) + 
             20*s13^3*s23*(s13^2 - 2*s13*s23 - 3*s23^2)) + 
           p3q^4*s12^2*s23*(20*s12^5*s23 + 20*s12^4*(5*s13 - 2*s23)*s23 - 
             311*s13^4*s23*(s13 + s23) + s12^2*s13*(1332*s13^3 + 241*s13^2*
                s23 - 38*s13*s23^2 - 120*s23^3) + s12*s13^2*(666*s13^3 - 223*
                s13^2*s23 - 649*s13*s23^2 - 71*s23^3) + 
             s12^3*(666*s13^3 + 233*s13^2*s23 - 100*s13*s23^2 - 60*s23^3)) - 
           p2q*p3q^3*s12*(34*s12^6*s23*(9*s13 + 20*s23) - 40*s13^4*s23^2*
              (4*s13^2 + 3*s13*s23 - s23^2) - 6*s12^5*(228*s13^3 + 183*s13^2*
                s23 - 78*s13*s23^2 - 130*s23^3) + 4*s12*s13^3*s23*
              (-252*s13^3 + 39*s13^2*s23 + 316*s13*s23^2 + 15*s23^3) + 
             s12^2*s13^2*s23*(396*s13^3 + 2620*s13^2*s23 + 1479*s13*s23^2 + 
               191*s23^3) + s12^3*s13*s23*(630*s13^3 + 3060*s13^2*s23 + 1333*
                s13*s23^2 + 240*s23^3) - 2*s12^4*(684*s13^4 + 333*s13^3*s23 + 
               430*s13^2*s23^2 + 89*s13*s23^3 - 50*s23^4)) - 
           p2q^3*p3q*s13*(-16*s12^6*s23*(63*s13 + 10*s23) + 
             12*s12^5*s23*(33*s13^2 + 13*s13*s23 - 10*s23^2) + 
             20*s13^4*s23^2*(34*s13^2 + 39*s13*s23 + 5*s23^2) + 
             2*s12*s13^3*s23*(153*s13^3 + 234*s13^2*s23 - 89*s13*s23^2 + 120*
                s23^3) + s12^2*s13^2*s23*(-1098*s13^3 - 860*s13^2*s23 + 1333*
                s13*s23^2 + 191*s23^3) + 3*s12^3*s13*(-456*s13^4 - 222*s13^3*
                s23 + 1020*s13^2*s23^2 + 493*s13*s23^3 + 20*s23^4) + 
             s12^4*(-1368*s13^4 + 630*s13^3*s23 + 2620*s13^2*s23^2 + 1264*s13*
                s23^3 + 40*s23^4)) - 2*p2q^2*p3q^2*
            (s12^7*s23*(153*s13 + 260*s23) + 20*s13^5*s23^2*(13*s13^2 + 14*
                s13*s23 + s23^2) + s12^6*s23*(-1053*s13^2 + 87*s13*s23 + 280*
                s23^2) + s12*s13^4*s23*(153*s13^3 + 87*s13^2*s23 - 226*s13*
                s23^2 + 80*s23^3) + s12^3*s13^2*s23*(1251*s13^3 + 2471*s13^2*
                s23 + 524*s13*s23^2 + 90*s23^3) + s12^2*s13^3*s23*
              (-1053*s13^3 - 526*s13^2*s23 + 1016*s13*s23^2 + 90*s23^3) + 
             s12^5*(1368*s13^4 + 1251*s13^3*s23 - 526*s13^2*s23^2 - 226*s13*
                s23^3 + 20*s23^4) + s12^4*s13*(1368*s13^4 + 3402*s13^3*s23 + 
               2471*s13^2*s23^2 + 1016*s13*s23^3 + 80*s23^4))) + 
         p1q^2*s23*(p2q^4*s13*(s12^2*s13^2*s23*(164*s13^2 - 169*s13*s23 - 93*
                s23^2) + 60*s13^3*s23^2*(-s13^2 + s23^2) + 
             2*s12^5*(333*s13^2 - 148*s13*s23 + 80*s23^2) + 20*s12*s13^2*s23*
              (s13^3 - 10*s13^2*s23 - 2*s13*s23^2 + 3*s23^3) + 
             s12^4*(1332*s13^3 - 504*s13^2*s23 + 335*s13*s23^2 + 160*s23^3) + 
             s12^3*s13*(666*s13^3 - 64*s13^2*s23 - 556*s13*s23^2 + 471*
                s23^3)) + p2q*p3q^3*(20*s13^4*s23^2*(25*s13^2 + 26*s13*s23 + 
               s23^2) + s12^6*(702*s13^2 + 978*s13*s23 + 920*s23^2) - 
             2*s12^5*(684*s13^3 + 271*s13^2*s23 - 550*s13*s23^2 - 530*
                s23^3) + 2*s12*s13^3*s23*(316*s13^3 + 703*s13^2*s23 + 177*s13*
                s23^2 + 30*s23^3) + s12^3*s13*s23*(-4006*s13^3 - 540*s13^2*
                s23 + 387*s13*s23^2 + 180*s23^3) + s12^2*s13^3*
              (702*s13^3 - 1084*s13^2*s23 - 1257*s13*s23^2 + 867*s23^3) - 
             s12^4*(1332*s13^4 + 5178*s13^3*s23 + 2733*s13^2*s23^2 + 478*s13*
                s23^3 - 140*s23^4)) + p2q^3*p3q*(20*s13^4*s23^2*
              (46*s13^2 + 53*s13*s23 + 7*s23^2) + 2*s12^5*s23*
              (-542*s13^2 + 703*s13*s23 + 260*s23^2) + 
             s12^6*(702*s13^2 + 632*s13*s23 + 500*s23^2) + 2*s12*s13^3*s23*
              (489*s13^3 + 550*s13^2*s23 - 239*s13*s23^2 + 90*s23^3) + 
             s12^2*s13^3*(702*s13^3 - 542*s13^2*s23 - 2733*s13*s23^2 + 387*
                s23^3) - 3*s12^3*s13*(456*s13^4 + 1726*s13^3*s23 + 180*s13^2*
                s23^2 - 289*s13*s23^3 - 20*s23^4) + s12^4*(-1332*s13^4 - 4006*
                s13^3*s23 - 1257*s13^2*s23^2 + 354*s13*s23^3 + 20*s23^4)) + 
           p3q^4*s12*(20*s12^5*(s13 - 3*s23)*s23 + 160*s13^4*s23^2*
              (s13 + s23) + 2*s12^4*s13*(333*s13^2 + 82*s13*s23 - 100*
                s23^2) + s12*s13^3*s23*(-296*s13^2 + 335*s13*s23 + 471*
                s23^2) + s12^2*s13*(666*s13^4 - 504*s13^3*s23 - 556*s13^2*
                s23^2 - 93*s13*s23^3 + 60*s23^4) + s12^3*(1332*s13^4 - 64*
                s13^3*s23 - 169*s13^2*s23^2 - 40*s13*s23^3 + 60*s23^4)) + 
           2*p2q^2*p3q^2*(10*s13^4*s23^2*(74*s13^2 + 79*s13*s23 + 5*s23^2) + 
             s12^6*(702*s13^2 + 795*s13*s23 + 740*s23^2) + s12*s13^3*s23*
              (795*s13^3 + 1273*s13^2*s23 - 122*s13*s23^2 + 90*s23^3) + 
             s12^2*s13^3*(702*s13^3 - 747*s13^2*s23 - 2078*s13*s23^2 + 438*
                s23^3) + s12^5*(-702*s13^3 - 747*s13^2*s23 + 1273*s13*s23^2 + 
               790*s23^3) - 2*s12^4*(684*s13^4 + 1506*s13^3*s23 + 1039*s13^2*
                s23^2 + 61*s13*s23^3 - 25*s23^4) + s12^3*(-702*s13^5 - 3012*
                s13^4*s23 + 664*s13^3*s23^2 + 438*s13^2*s23^3 + 90*s13*
                s23^4))))/(54*ep*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*
         s12^3*s13^3*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) - (9*(-2*p1q^2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*s23*
           (s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23)) + 
          (p2q + p3q)*(2*p3q^4*s12^2*(2*s12 + s23)*(s12 + s13 + s23) + 
            2*p2q^4*s13^2*(s12 + s13 + s23)*(2*s13 + s23) + 
            2*p2q^2*p3q^2*s12*s13*(-2*s12^2 + 20*s12*s13 - 2*s13^2 + 
              7*s12*s23 + 7*s13*s23 + 3*s23^2) - p2q^3*p3q*s13*
             (s12^2*(4*s13 - 6*s23) + s12*s13*(24*s13 + 23*s23) + 
              s13*(-4*s13^2 - 3*s13*s23 + s23^2)) + p2q*p3q^3*s12*
             (4*s12^3 + 6*s13^2*s23 + 3*s12^2*(-8*s13 + s23) - 
              s12*(4*s13^2 + 23*s13*s23 + s23^2))) + 
          p1q*(2*p3q^4*s12*(s12 + s13 + s23)*(2*s12^2 - s12*s23 - s23^2) + 
            2*p2q^4*s13*(s12 + s13 + s23)*(2*s13^2 - s13*s23 - s23^2) - 
            p2q^3*p3q*s13*(-4*s13^3 + 4*s12^2*(s13 - 2*s23) + 4*s13^2*s23 + 
              9*s13*s23^2 + s23^3 + s12*(24*s13^2 + 28*s13*s23 - s23^2)) + 
            p2q*p3q^3*s12*(4*s12^3 - 4*s12^2*(6*s13 + s23) + s23*(8*s13^2 + 
                s13*s23 - s23^2) - s12*(4*s13^2 + 28*s13*s23 + 9*s23^2)) + 
            p2q^2*p3q^2*(-2*s12^3*(2*s13 + 3*s23) + 5*s12^2*(8*s13^2 + 
                6*s13*s23 - s23^2) + s13*s23*(-6*s13^2 - 5*s13*s23 + s23^2) + 
              s12*(-4*s13^3 + 30*s13^2*s23 + 30*s13*s23^2 + s23^3))))*
         den[-3 + 2*ep])/(4*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*
         s23^2) + nl*((p1q*(p3q^2*s12*(8*s12^2*s13 + s12*(8*s13 - s23)*s23 + 
               (s13 - s23)*s23^2) - p2q*p3q*(s13*s23^2*(s13 + s23) + s12^2*
                (4*s13 + s23)^2 + s12*s23*(8*s13^2 + 6*s13*s23 + s23^2)) + 
             p2q^2*s13*(-(s23^2*(s13 + s23)) + s12*(8*s13^2 + 8*s13*s23 + 
                 s23^2))) + (p2q + p3q)*(-2*p2q*p3q*s12*s13*((s13 - s23)*
                s23 + s12*(8*s13 + s23)) + p3q^2*s12*(2*s13*s23^2 + s12^2*
                (8*s13 + s23) + s12*s23*(9*s13 + s23)) + 
             p2q^2*s13*(s13*s23*(s13 + s23) + s12*(8*s13^2 + 9*s13*s23 + 
                 2*s23^2))))/(2*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*
           s23^2) + ((-(p1q^2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*s23*
              (s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23))) + 
            (p2q + p3q)*(p3q^4*s12^2*(2*s12 + s23)*(s12 + s13 + s23) + 
              p2q^4*s13^2*(s12 + s13 + s23)*(2*s13 + s23) - 2*p2q^2*p3q^2*s12*
               s13*(s12^2 + s13^2 - 3*s13*s23 - 2*s23^2 - 3*s12*(2*s13 + 
                  s23)) + p2q*p3q^3*s12*(2*s12^3 + s13*s23*(3*s13 + s23) + 
                s12^2*(-8*s13 + 2*s23) - s12*s13*(2*s13 + 7*s23)) + 
              p2q^3*p3q*s13*(2*s13^2*(s13 + s23) + s12^2*(-2*s13 + 3*s23) + 
                s12*(-8*s13^2 - 7*s13*s23 + s23^2))) + 
            p1q*(p3q^4*s12*(s12 + s13 + s23)*(2*s12^2 - s12*s23 - s23^2) + 
              p2q^4*s13*(s12 + s13 + s23)*(2*s13^2 - s13*s23 - s23^2) - 
              p2q^3*p3q*s13*(-2*s13^3 + 2*s12^2*(s13 - 2*s23) + 2*s13^2*s23 + 
                5*s13*s23^2 + s23^3 + s12*(8*s13^2 + 10*s13*s23 - s23^2)) - 
              p2q^2*p3q^2*(3*s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 3*s23) + 
                s12*s13*(2*s13^2 - 11*s13*s23 - 12*s23^2) + s12^2*
                 (-12*s13^2 - 11*s13*s23 + 3*s23^2)) + p2q*p3q^3*s12*(
                2*s12^3 - 2*s12^2*(4*s13 + s23) + s23*(4*s13^2 + s13*s23 - 
                  s23^2) - s12*(2*s13^2 + 10*s13*s23 + 5*s23^2))))*
           den[-1 + ep])/(p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*
           s23^2) - (3*(-2*p1q^2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*s23*
             (s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23)) + 
            (p2q + p3q)*(2*p3q^4*s12^2*(2*s12 + s23)*(s12 + s13 + s23) + 
              2*p2q^4*s13^2*(s12 + s13 + s23)*(2*s13 + s23) + 
              2*p2q^2*p3q^2*s12*s13*(-2*s12^2 + 20*s12*s13 - 2*s13^2 + 
                7*s12*s23 + 7*s13*s23 + 3*s23^2) - p2q^3*p3q*s13*(
                s12^2*(4*s13 - 6*s23) + s12*s13*(24*s13 + 23*s23) + 
                s13*(-4*s13^2 - 3*s13*s23 + s23^2)) + p2q*p3q^3*s12*(
                4*s12^3 + 6*s13^2*s23 + 3*s12^2*(-8*s13 + s23) - 
                s12*(4*s13^2 + 23*s13*s23 + s23^2))) + 
            p1q*(2*p3q^4*s12*(s12 + s13 + s23)*(2*s12^2 - s12*s23 - s23^2) + 
              2*p2q^4*s13*(s12 + s13 + s23)*(2*s13^2 - s13*s23 - s23^2) - 
              p2q^3*p3q*s13*(-4*s13^3 + 4*s12^2*(s13 - 2*s23) + 4*s13^2*s23 + 
                9*s13*s23^2 + s23^3 + s12*(24*s13^2 + 28*s13*s23 - s23^2)) + 
              p2q*p3q^3*s12*(4*s12^3 - 4*s12^2*(6*s13 + s23) + 
                s23*(8*s13^2 + s13*s23 - s23^2) - s12*(4*s13^2 + 28*s13*s23 + 
                  9*s23^2)) + p2q^2*p3q^2*(-2*s12^3*(2*s13 + 3*s23) + 
                5*s12^2*(8*s13^2 + 6*s13*s23 - s23^2) + s13*s23*(-6*s13^2 - 
                  5*s13*s23 + s23^2) + s12*(-4*s13^3 + 30*s13^2*s23 + 
                  30*s13*s23^2 + s23^3))))*den[-3 + 2*ep])/
          (2*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*s23^2)))*
      Int[DS[k]*DS[k + p2 + p3]] + 
     ((ep^3*(p3q*(120*s13^2*s23^2*(s13 + s23) - 2*s12^3*s23*
             (45*s13 + 53*s23) - s12^4*(99*s13 + 109*s23) + 
            s12*s13*s23*(227*s13^2 + 348*s13*s23 + 105*s23^2) + 
            s12^2*(99*s13^3 + 228*s13^2*s23 + 122*s13*s23^2 + 3*s23^3)) + 
          p1q*(s13*s23^2*(109*s13^2 + 106*s13*s23 - 3*s23^2) + 
            s12^3*(180*s13^2 + 297*s13*s23 + 109*s23^2) + 
            s12*s23*(297*s13^3 + 484*s13^2*s23 + 176*s13*s23^2 - 3*s23^3) + 
            2*s12^2*(90*s13^3 + 279*s13^2*s23 + 242*s13*s23^2 + 53*s23^3)) + 
          p2q*(s13^2*s23*(-109*s13^2 - 106*s13*s23 + 3*s23^2) + 
            12*s12^2*s23*(19*s13^2 + 29*s13*s23 + 10*s23^2) + 
            s12^3*(99*s13^2 + 227*s13*s23 + 120*s23^2) + 
            s12*s13*(-99*s13^3 - 90*s13^2*s23 + 122*s13*s23^2 + 105*s23^3))))/
        (27*(p1q + p2q + p3q)*s12*s13*(s12 + s13)*(s12 + s23)*(s13 + s23)) + 
       (p1q^6*s23^3*(s12 + s13 + s23)*(p3q*(243*s12*s13^3*s23^2*(s13 + s23) + 
             80*s13^3*s23^3*(s13 + s23) + s12^2*s13^2*s23*(329*s13^2 + 333*
                s13*s23 + 4*s23^2) - 2*s12^4*(7*s13^3 + 11*s13^2*s23 + 5*
                s23^3) + 2*s12^3*(11*s13^4 + 6*s13^3*s23 - 9*s13^2*s23^2 - 5*
                s23^4)) + p2q*(-10*s13^3*s23^3*(s13 + s23) - 
             2*s12^2*s13^2*s23*(11*s13^2 + 9*s13*s23 - 2*s23^2) + 
             s12^4*(22*s13^3 + 329*s13^2*s23 + 243*s13*s23^2 + 80*s23^3) + 
             s12^3*(-14*s13^4 + 12*s13^3*s23 + 333*s13^2*s23^2 + 243*s13*
                s23^3 + 80*s23^4))) - (p2q + p3q)*
          (p2q^6*s13^4*s23*(10*s13^3*s23*(s13 + s23)^2 + 
             9*s12^5*(3*s13 + 11*s23) + 10*s12*s13^2*s23*(4*s13^2 + 7*s13*
                s23 + 3*s23^2) + 18*s12^4*(4*s13^2 + 15*s13*s23 + 7*s23^2) + 
             s12^3*(63*s13^3 + 263*s13^2*s23 + 227*s13*s23^2 + 27*s23^3) + 
             2*s12^2*s13*(9*s13^3 + 61*s13^2*s23 + 80*s13*s23^2 + 28*
                s23^3)) + p3q^6*s12^4*s23*(10*s12^5*s23 + 9*s13^3*s23*
              (11*s13^2 + 14*s13*s23 + 3*s23^2) + 2*s12^4*(9*s13^2 + 20*s13*
                s23 + 10*s23^2) + s12^3*(63*s13^3 + 122*s13^2*s23 + 70*s13*
                s23^2 + 10*s23^3) + s12^2*s13*(72*s13^3 + 263*s13^2*s23 + 160*
                s13*s23^2 + 30*s23^3) + s12*s13^2*(27*s13^3 + 270*s13^2*s23 + 
               227*s13*s23^2 + 56*s23^3)) + p2q*p3q^5*s12^3*
            (90*s12^7*s23 + s12^6*s23*(27*s13 + 190*s23) + 2*s13^3*s23^2*
              (63*s13^3 + 22*s13^2*s23 - 103*s13*s23^2 - 18*s23^3) + 
             s12^5*(72*s13^3 + 207*s13^2*s23 - 16*s13*s23^2 + 100*s23^3) + 
             s12*s13^2*s23*(162*s13^4 + 206*s13^3*s23 - 376*s13^2*s23^2 - 271*
                s13*s23^3 - 65*s23^4) + s12^2*s13*s23*(72*s13^4 + 44*s13^3*
                s23 - 11*s13^2*s23^2 - 96*s13*s23^3 - 30*s23^4) + 
             s12^4*(72*s13^4 + 549*s13^3*s23 + 537*s13^2*s23^2 - 63*s13*
                s23^3 - 10*s23^4) + s12^3*s23*(261*s13^4 + 599*s13^3*s23 + 
               309*s13^2*s23^2 - 50*s13*s23^3 - 10*s23^4)) + 
           p2q^3*p3q^3*s12*s13*(18*s12^7*s23*(37*s13 + 15*s23) + 
             10*s13^5*s23^2*(27*s13^2 + 46*s13*s23 + 19*s23^2) + 
             s12^6*s23*(-189*s13^2 + 909*s13*s23 + 460*s23^2) + 
             2*s12^4*s13*(216*s13^4 + 909*s13^3*s23 + 948*s13^2*s23^2 - 80*
                s13*s23^3 - 278*s23^4) + s12*s13^3*s23*(666*s13^4 + 909*s13^3*
                s23 - 309*s13^2*s23^2 - 556*s13*s23^3 - 84*s23^4) + 
             3*s12^3*s13*s23*(90*s13^4 + 632*s13^3*s23 + 340*s13^2*s23^2 - 
               111*s13*s23^3 - 28*s23^4) - s12^2*s13^2*s23*(189*s13^4 + 1017*
                s13^3*s23 + 160*s13^2*s23^2 + 333*s13*s23^3 + 168*s23^4) + 
             s12^5*(432*s13^4 + 270*s13^3*s23 - 1017*s13^2*s23^2 - 309*s13*
                s23^3 + 190*s23^4)) + p2q^5*p3q*s13^3*
            (18*s12^6*s23*(9*s13 + 7*s23) + 10*s13^3*s23*(s13 + s23)^2*
              (9*s13^2 + s13*s23 - s23^2) + 2*s12^5*s23*(36*s13^2 + 103*s13*
                s23 + 22*s23^2) + s12^4*(72*s13^4 + 261*s13^3*s23 + 44*s13^2*
                s23^2 - 376*s13*s23^3 - 206*s23^4) + s12^2*s13*s23*
              (207*s13^4 + 537*s13^3*s23 + 309*s13^2*s23^2 - 96*s13*s23^3 - 
               65*s23^4) + s12*s13^2*s23*(27*s13^4 - 16*s13^3*s23 - 63*s13^2*
                s23^2 - 50*s13*s23^3 - 30*s23^4) + s12^3*(72*s13^5 + 549*
                s13^4*s23 + 599*s13^3*s23^2 - 11*s13^2*s23^3 - 271*s13*
                s23^4 - 36*s23^5)) - p2q^2*p3q^4*s12^2*
            (90*s12^7*s23*(4*s13 + s23) + s12^6*s23*(-162*s13^2 + 677*s13*
                s23 + 190*s23^2) + s13^4*s23^2*(405*s13^3 + 674*s13^2*s23 + 
               297*s13*s23^2 + 28*s23^3) + s12^3*s13*s23*(549*s13^4 + 1710*
                s13^3*s23 + 1411*s13^2*s23^2 + 510*s13*s23^3 + 30*s23^4) + 
             2*s12^5*(144*s13^4 + 126*s13^3*s23 - 266*s13^2*s23^2 + 147*s13*
                s23^3 + 55*s23^4) + s12*s13^3*s23*(585*s13^4 + 898*s13^3*
                s23 + 122*s13^2*s23^2 + 454*s13*s23^3 + 129*s23^4) + 
             s12^2*s13^2*s23*(144*s13^4 - 184*s13^3*s23 + 928*s13^2*s23^2 + 
               725*s13*s23^3 + 130*s23^4) + s12^4*(288*s13^5 + 1476*s13^4*
                s23 + 1484*s13^3*s23^2 + 80*s13^2*s23^3 + 7*s13*s23^4 + 10*
                s23^5)) - p2q^4*p3q^2*s13^2*(10*s13^4*s23^2*(s13 + s23)^2*
              (9*s13 + s23) + 45*s12^7*s23*(13*s13 + 9*s23) + 
             2*s12^6*s23*(72*s13^2 + 449*s13*s23 + 337*s23^2) + 
             s12*s13^3*s23*(360*s13^4 + 677*s13^3*s23 + 294*s13^2*s23^2 + 7*
                s13*s23^3 + 30*s23^4) + 2*s12^2*s13^2*s23*(-81*s13^4 - 266*
                s13^3*s23 + 40*s13^2*s23^2 + 255*s13*s23^3 + 65*s23^4) + 
             s12^3*s13*s23*(252*s13^4 + 1484*s13^3*s23 + 1411*s13^2*s23^2 + 
               725*s13*s23^3 + 129*s23^4) + s12^5*(288*s13^4 + 549*s13^3*
                s23 - 184*s13^2*s23^2 + 122*s13*s23^3 + 297*s23^4) + 
             2*s12^4*(144*s13^5 + 738*s13^4*s23 + 855*s13^3*s23^2 + 464*s13^2*
                s23^3 + 227*s13*s23^4 + 14*s23^5))) - 
         p1q^5*s23^2*(s12 + s13 + s23)*
          (p2q^2*(-30*s12*s13^3*s23^3*(s13 + s23) - 20*s13^3*s23^3*
              (2*s13^2 + s13*s23 - s23^2) + s12^2*s13^2*s23*(19*s13^3 + 150*
                s13^2*s23 + 123*s13*s23^2 - 8*s23^3) + 
             s12^5*(22*s13^3 + 329*s13^2*s23 + 243*s13*s23^2 + 80*s23^3) + 
             s12^4*s13*(107*s13^3 + 703*s13^2*s23 + 324*s13*s23^2 + 160*
                s23^3) + s12^3*(49*s13^5 + 283*s13^4*s23 + 1107*s13^3*s23^2 + 
               230*s13^2*s23^3 - 3*s13*s23^4 - 80*s23^5)) + 
           p2q*p3q*(2*s12*s13^3*s23^2*(486*s13^2 + 308*s13*s23 - 183*s23^2) + 
             20*s13^3*s23^3*(20*s13^2 + 17*s13*s23 - 3*s23^2) + 
             s12^2*s13^2*s23*(1050*s13^3 + 429*s13^2*s23 - 637*s13*s23^2 - 16*
                s23^3) + s12^5*(107*s13^3 + 1050*s13^2*s23 + 972*s13*s23^2 + 
               400*s23^3) + s12^4*(-2*s13^4 + 104*s13^3*s23 + 429*s13^2*
                s23^2 + 616*s13*s23^3 + 340*s23^4) + s12^3*(107*s13^5 + 104*
                s13^4*s23 - 36*s13^3*s23^2 - 637*s13^2*s23^3 - 366*s13*
                s23^4 - 60*s23^5)) + p3q^2*(s12*s13^3*s23^2*(243*s13^2 + 160*
                s13*s23 - 3*s23^2) + 80*s13^3*s23^3*(s13^2 - s23^2) + 
             s12^5*(49*s13^3 + 19*s13^2*s23 - 40*s23^3) + s12^2*s13^2*s23*
              (329*s13^3 + 324*s13^2*s23 + 230*s13*s23^2 - 8*s23^3) + 
             s12^4*(107*s13^4 + 283*s13^3*s23 + 150*s13^2*s23^2 - 30*s13*
                s23^3 - 20*s23^4) + s12^3*(22*s13^5 + 703*s13^4*s23 + 1107*
                s13^3*s23^2 + 123*s13^2*s23^3 - 30*s13*s23^4 + 20*s23^5))) + 
         p1q*(p2q^6*s13^3*(-20*s13^3*(s13 - 2*s23)*s23^2*(s13 + s23)^2 + 
             9*s12^6*s23*(3*s13 + 11*s23) - 10*s12*s13^2*s23^2*
              (8*s13^3 + s13^2*s23 - 16*s13*s23^2 - 9*s23^3) + 
             s12^5*(27*s13^3 + 18*s13^2*s23 + 2*s13*s23^2 + 299*s23^3) + 
             s12^4*(81*s13^4 - 18*s13^3*s23 - 397*s13^2*s23^2 + 363*s13*
                s23^3 + 229*s23^4) + s12^3*(81*s13^5 + 18*s13^4*s23 - 435*
                s13^3*s23^2 + 29*s13^2*s23^3 + 430*s13*s23^4 + 29*s23^5) + 
             3*s12^2*s13*(9*s13^5 + 9*s13^4*s23 - 65*s13^3*s23^2 - 33*s13^2*
                s23^3 + 70*s13*s23^4 + 38*s23^5)) + p3q^6*s12^3*
            (s12^5*s13*(81*s13^2 + 27*s13*s23 - 80*s23^2) + 
             s12^6*(27*s13^2 - 20*s23^2) + s13^3*s23^2*(99*s13^3 + 299*s13^2*
                s23 + 229*s13*s23^2 + 29*s23^3) + s12^4*(81*s13^4 + 18*s13^3*
                s23 - 195*s13^2*s23^2 - 10*s13*s23^3 + 60*s23^4) + 
             s12^2*s13*s23*(18*s13^4 - 397*s13^3*s23 + 29*s13^2*s23^2 + 210*
                s13*s23^3 + 90*s23^4) + s12*s13^2*s23*(27*s13^4 + 2*s13^3*
                s23 + 363*s13^2*s23^2 + 430*s13*s23^3 + 114*s23^4) + 
             s12^3*(27*s13^5 - 18*s13^4*s23 - 435*s13^3*s23^2 - 99*s13^2*
                s23^3 + 160*s13*s23^4 + 40*s23^5)) + p2q^2*p3q^4*s12*
            (-90*s12^9*s23 + s12^8*(27*s13^2 + 486*s13*s23 + 250*s23^2) - 
             3*s12^7*(69*s13^3 + 558*s13^2*s23 + 21*s13*s23^2 - 160*s23^3) + 
             s12^6*(99*s13^4 - 630*s13^3*s23 - 2769*s13^2*s23^2 - 1665*s13*
                s23^3 - 200*s23^4) - 20*s13^4*s23^2*(9*s13^4 + s13^3*s23 - 12*
                s13^2*s23^2 - 3*s13*s23^3 + s23^4) + s12^5*(225*s13^5 + 1872*
                s13^4*s23 + 4148*s13^3*s23^2 + 2166*s13^2*s23^3 - 877*s13*
                s23^4 - 390*s23^5) + s12^2*s13^2*s23*(1494*s13^5 + 2814*s13^4*
                s23 - 54*s13^3*s23^2 + 863*s13^2*s23^3 - 307*s13*s23^4 - 169*
                s23^5) + s12*s13^3*s23*(-396*s13^5 + 1170*s13^4*s23 + 2721*
                s13^3*s23^2 + 479*s13^2*s23^3 - 492*s13*s23^4 - 56*s23^5) + 
             s12^3*s13*(162*s13^6 + 108*s13^5*s23 - 2330*s13^4*s23^2 + 2495*
                s13^3*s23^3 + 1474*s13^2*s23^4 - 167*s13*s23^5 - 120*s23^6) + 
             s12^4*(54*s13^6 - 90*s13^5*s23 + 1874*s13^4*s23^2 + 4311*s13^3*
                s23^3 + 2916*s13^2*s23^4 + 119*s13*s23^5 - 50*s23^6)) + 
           p2q*p3q^5*s12^2*(-90*s12^8*s23 + s12^7*(54*s13^2 + 216*s13*s23 + 
               230*s23^2) - 10*s12^6*(9*s13^3 + 45*s13^2*s23 - 60*s13*s23^2 - 
               82*s23^3) + s13^3*s23^2*(225*s13^4 + 259*s13^3*s23 - 75*s13^2*
                s23^2 - 111*s13*s23^3 - 2*s23^4) + s12^5*(-234*s13^4 - 1116*
                s13^3*s23 - 1191*s13^2*s23^2 + 312*s13*s23^3 + 560*s23^4) + 
             s12*s13^2*s23*(189*s13^5 + 212*s13^4*s23 + 423*s13^3*s23^2 + 766*
                s13^2*s23^3 - 137*s13*s23^4 - 67*s23^5) + s12^2*s13*s23*
              (-315*s13^5 - 235*s13^4*s23 + 2488*s13^3*s23^2 + 1574*s13^2*
                s23^3 + 257*s13*s23^4 - 60*s23^5) + s12^4*(-198*s13^5 - 369*
                s13^4*s23 - 129*s13^3*s23^2 + 387*s13^2*s23^3 + 58*s13*
                s23^4 + 30*s23^5) + s12^3*(-108*s13^6 - 153*s13^5*s23 + 742*
                s13^4*s23^2 + 2198*s13^3*s23^3 + 1448*s13^2*s23^4 + 70*s13*
                s23^5 - 30*s23^6)) + p2q^4*p3q^2*s13*
            (-36*s12^8*s23*(11*s13 + 5*s23) + 2*s12^7*(81*s13^3 + 747*s13^2*
                s23 + 585*s13*s23^2 - 10*s23^3) - 10*s13^4*s23*(s13 + s23)^2*
              (9*s13^3 - 43*s13^2*s23 + 29*s13*s23^2 + 5*s23^3) + 
             3*s12^6*(18*s13^4 + 36*s13^3*s23 + 938*s13^2*s23^2 + 907*s13*
                s23^3 + 80*s23^4) + s12*s13^3*s23*(486*s13^5 - 63*s13^4*s23 - 
               1665*s13^3*s23^2 - 877*s13^2*s23^3 + 119*s13*s23^4 - 120*
                s23^5) + s12^5*(225*s13^5 - 90*s13^4*s23 - 2330*s13^3*s23^2 - 
               54*s13^2*s23^3 + 479*s13*s23^4 + 60*s23^5) + 
             s12^2*s13^2*(27*s13^6 - 1674*s13^5*s23 - 2769*s13^4*s23^2 + 2166*
                s13^3*s23^3 + 2916*s13^2*s23^4 - 167*s13*s23^5 - 169*s23^6) + 
             s12^3*s13*(-207*s13^6 - 630*s13^5*s23 + 4148*s13^4*s23^2 + 4311*
                s13^3*s23^3 + 1474*s13^2*s23^4 - 307*s13*s23^5 - 56*s23^6) + 
             s12^4*(99*s13^6 + 1872*s13^5*s23 + 1874*s13^4*s23^2 + 2495*s13^3*
                s23^3 + 863*s13^2*s23^4 - 492*s13*s23^5 - 20*s23^6)) + 
           p2q^3*p3q^3*(90*s12^9*s23*(3*s13 + s23) + 10*s13^5*s23^2*
              (s13 + s23)^2*(9*s13^2 - 25*s13*s23 - 2*s23^2) - 
             s12^8*(108*s13^3 + 1593*s13^2*s23 + 626*s13*s23^2 + 70*s23^3) + 
             s12^7*(216*s13^4 + 1521*s13^3*s23 - 441*s13^2*s23^2 - 1386*s13*
                s23^3 - 430*s23^4) + s12^6*(-108*s13^5 + 1521*s13^4*s23 + 
               6516*s13^3*s23^2 + 4682*s13^2*s23^3 - 184*s13*s23^4 - 290*
                s23^5) + 2*s12*s13^4*s23*(135*s13^5 - 313*s13^4*s23 - 693*
                s13^3*s23^2 - 92*s13^2*s23^3 + 113*s13*s23^4 - 40*s23^5) - 
             s12^2*s13^3*s23*(1593*s13^5 + 441*s13^4*s23 - 4682*s13^3*s23^2 - 
               2421*s13^2*s23^3 + 655*s13*s23^4 + 156*s23^5) + 
             s12^3*s13^2*(-108*s13^6 + 1521*s13^5*s23 + 6516*s13^4*s23^2 + 
               2351*s13^3*s23^3 + 1070*s13^2*s23^4 - 156*s13*s23^5 - 156*
                s23^6) + s12^4*s13*(216*s13^6 + 1521*s13^5*s23 - 2105*s13^4*
                s23^2 + 1136*s13^3*s23^3 + 1070*s13^2*s23^4 - 655*s13*s23^5 - 
               80*s23^6) + s12^5*(-108*s13^6 - 1566*s13^5*s23 - 2105*s13^4*
                s23^2 + 2351*s13^3*s23^3 + 2421*s13^2*s23^4 + 226*s13*s23^5 - 
               20*s23^6)) + p2q^5*p3q*s13^2*(9*s12^7*s23*(21*s13 + 25*s23) - 
             10*s13^3*s23*(s13 + s23)^2*(9*s13^3 - 41*s13^2*s23 - 9*s13*
                s23^2 + 3*s23^3) + s12^6*(-108*s13^3 - 315*s13^2*s23 + 212*
                s13*s23^2 + 259*s23^3) - s12^5*(198*s13^4 + 153*s13^3*s23 + 
               235*s13^2*s23^2 - 423*s13*s23^3 + 75*s23^4) + 
             s12^4*(-234*s13^5 - 369*s13^4*s23 + 742*s13^3*s23^2 + 2488*s13^2*
                s23^3 + 766*s13*s23^4 - 111*s23^5) + 2*s12*s13^2*s23*
              (108*s13^5 + 300*s13^4*s23 + 156*s13^3*s23^2 + 29*s13^2*s23^3 + 
               35*s13*s23^4 - 30*s23^5) + s12^2*s13*(54*s13^6 - 450*s13^5*
                s23 - 1191*s13^4*s23^2 + 387*s13^3*s23^3 + 1448*s13^2*s23^4 + 
               257*s13*s23^5 - 67*s23^6) - s12^3*(90*s13^6 + 1116*s13^5*s23 + 
               129*s13^4*s23^2 - 2198*s13^3*s23^3 - 1574*s13^2*s23^4 + 137*
                s13*s23^5 + 2*s23^6))) + 
         p1q^2*(-(p2q^5*s13^2*(10*s13^3*s23^2*(s13 + s23)^2*(s13^2 - 
                8*s13*s23 + 6*s23^2) + s12^6*(27*s13^3 - 54*s13^2*s23 - 
                286*s13*s23^2 + 83*s23^3) + 10*s12*s13^2*s23^2*(4*s13^4 - 
                19*s13^3*s23 - 26*s13^2*s23^2 + 6*s13*s23^3 + 9*s23^4) + 
              s12^4*s23*(342*s13^4 + 768*s13^3*s23 - 586*s13^2*s23^2 + 
                307*s13*s23^3 + 167*s23^4) + s12^5*(54*s13^4 + 54*s13^3*s23 - 
                179*s13^2*s23^2 - 363*s13*s23^3 + 248*s23^4) - 
              3*s12^2*s13*(9*s13^6 - 24*s13^5*s23 - 130*s13^4*s23^2 + 
                10*s13^3*s23^3 + 149*s13^2*s23^4 + 22*s13*s23^5 - 20*s23^6) + 
              s12^3*(-54*s13^6 + 306*s13^5*s23 + 1021*s13^4*s23^2 - 
                202*s13^3*s23^3 - 501*s13^2*s23^4 + 364*s13*s23^5 + 
                2*s23^6))) + p3q^5*s12^2*(s12^7*(27*s13^2 - 10*s23^2) - 
             s13^3*s23^3*(83*s13^3 + 248*s13^2*s23 + 167*s13*s23^2 + 2*
                s23^3) + 2*s12^5*s23*(-153*s13^3 - 195*s13^2*s23 + 95*s13*
                s23^2 + 45*s23^3) + s12^6*(54*s13^3 - 72*s13^2*s23 - 40*s13*
                s23^2 + 60*s23^3) + s12*s13^2*s23^2*(286*s13^4 + 363*s13^3*
                s23 - 307*s13^2*s23^2 - 364*s13*s23^3 - 60*s23^4) + 
             s12^2*s13*s23*(54*s13^5 + 179*s13^4*s23 + 586*s13^3*s23^2 + 501*
                s13^2*s23^3 + 66*s13*s23^4 - 90*s23^5) - 
             s12^4*(54*s13^5 + 342*s13^4*s23 + 1021*s13^3*s23^2 - 30*s13^2*
                s23^3 - 260*s13*s23^4 + 40*s23^5) - s12^3*(27*s13^6 + 54*
                s13^5*s23 + 768*s13^4*s23^2 - 202*s13^3*s23^3 - 447*s13^2*
                s23^4 + 60*s13*s23^5 + 60*s23^6)) + p2q^4*p3q*s13*
            (10*s13^3*s23^2*(s13 + s23)^2*(43*s13^3 - 75*s13^2*s23 - 15*s13*
                s23^2 + 3*s23^3) + s12^7*(81*s13^3 + 540*s13^2*s23 + 802*s13*
                s23^2 + 80*s23^3) + s12^6*(108*s13^4 + 297*s13^3*s23 + 1545*
                s13^2*s23^2 + 680*s13*s23^3 - 30*s23^4) + 
             s12^5*(36*s13^5 + 567*s13^4*s23 + 844*s13^3*s23^2 + 1116*s13^2*
                s23^3 - 672*s13*s23^4 - 60*s23^5) + s12*s13^2*s23*
              (243*s13^6 - 348*s13^5*s23 - 1947*s13^4*s23^2 - 1038*s13^3*
                s23^3 + 88*s13^2*s23^4 - 200*s13*s23^5 + 30*s23^6) + 
             s12^4*(-90*s13^6 + 216*s13^5*s23 + 1690*s13^4*s23^2 + 4185*s13^3*
                s23^3 + 614*s13^2*s23^4 - 165*s13*s23^5 + 50*s23^6) + 
             s12^3*s13*(-45*s13^6 - 990*s13^5*s23 + 1771*s13^4*s23^2 + 4104*
                s13^3*s23^3 + 988*s13^2*s23^4 - 865*s13*s23^5 + 147*s23^6) + 
             s12^2*s13*(54*s13^7 - 801*s13^6*s23 - 1280*s13^5*s23^2 + 2287*
                s13^4*s23^3 + 2326*s13^3*s23^4 - 797*s13^2*s23^5 - 309*s13*
                s23^6 + 2*s23^7)) + p2q*p3q^4*s12*
            (s12^8*(54*s13^2 + 243*s13*s23 + 430*s23^2) - 
             s12^7*(45*s13^3 + 801*s13^2*s23 + 348*s13*s23^2 - 110*s23^3) + 
             10*s13^4*s23^3*(8*s13^3 - 3*s13^2*s23 - 6*s13*s23^2 + 5*s23^3) - 
             s12^6*(90*s13^4 + 990*s13^3*s23 + 1280*s13^2*s23^2 + 1947*s13*
                s23^3 + 1220*s23^4) + s12^5*(36*s13^5 + 216*s13^4*s23 + 1771*
                s13^3*s23^2 + 2287*s13^2*s23^3 - 1038*s13*s23^4 - 1020*
                s23^5) + s12*s13^2*s23^2*(802*s13^5 + 680*s13^4*s23 - 672*
                s13^3*s23^2 - 165*s13^2*s23^3 + 147*s13*s23^4 + 2*s23^5) + 
             s12^4*(108*s13^6 + 567*s13^5*s23 + 1690*s13^4*s23^2 + 4104*s13^3*
                s23^3 + 2326*s13^2*s23^4 + 88*s13*s23^5 - 90*s23^6) + 
             s12^2*s13*s23*(540*s13^6 + 1545*s13^5*s23 + 1116*s13^4*s23^2 + 
               614*s13^3*s23^3 - 865*s13^2*s23^4 - 309*s13*s23^5 + 30*
                s23^6) + s12^3*(81*s13^7 + 297*s13^6*s23 + 844*s13^5*s23^2 + 
               4185*s13^4*s23^3 + 988*s13^3*s23^4 - 797*s13^2*s23^5 - 200*s13*
                s23^6 + 30*s23^7)) + p2q^3*p3q^2*
            (s12^7*s23*(1368*s13^3 + 1887*s13^2*s23 - 204*s13*s23^2 - 290*
                s23^3) + 10*s13^4*s23^2*(s13 + s23)^2*(35*s13^3 - 82*s13^2*
                s23 + 41*s13*s23^2 + 4*s23^3) - s12^8*(81*s13^3 + 765*s13^2*
                s23 + 673*s13*s23^2 + 260*s23^3) + s12^6*(-63*s13^5 + 1152*
                s13^4*s23 + 5091*s13^3*s23^2 + 4642*s13^2*s23^3 + 1098*s13*
                s23^4 + 210*s23^5) + s12*s13^3*s23*(243*s13^6 - 945*s13^5*
                s23 - 1422*s13^4*s23^2 + 1324*s13^3*s23^3 + 1119*s13^2*
                s23^4 - 379*s13*s23^5 + 60*s23^6) + s12^5*(36*s13^6 + 693*
                s13^5*s23 - 321*s13^4*s23^2 + 632*s13^3*s23^3 - 434*s13^2*
                s23^4 + 596*s13*s23^5 + 250*s23^6) + s12^2*s13^2*
              (27*s13^7 - 1494*s13^6*s23 + 483*s13^5*s23^2 + 6982*s13^4*
                s23^3 + 1995*s13^3*s23^4 - 2536*s13^2*s23^5 - 227*s13*s23^6 + 
               6*s23^7) + s12^4*(45*s13^7 + 1755*s13^6*s23 + 1130*s13^5*
                s23^2 + 3855*s13^4*s23^3 - 213*s13^3*s23^4 - 1581*s13^2*
                s23^5 - 3*s13*s23^6 + 10*s23^7) + s12^3*s13*(-108*s13^7 + 288*
                s13^6*s23 + 6444*s13^5*s23^2 + 2836*s13^4*s23^3 - 1295*s13^3*
                s23^4 - 1278*s13^2*s23^5 - 81*s13*s23^6 + 30*s23^7)) + 
           p2q^2*p3q^3*(-10*s13^4*s23^3*(s13 + s23)^2*(26*s13^2 - 23*s13*
                s23 - s23^2) + s12^9*(27*s13^2 + 243*s13*s23 + 350*s23^2) - 
             3*s12^8*(36*s13^3 + 498*s13^2*s23 + 315*s13*s23^2 + 40*s23^3) + 
             s12^7*(45*s13^4 + 288*s13^3*s23 + 483*s13^2*s23^2 - 1422*s13*
                s23^3 - 880*s23^4) + s12*s13^3*s23^2*(-673*s13^5 - 204*s13^4*
                s23 + 1098*s13^3*s23^2 + 596*s13^2*s23^3 - 3*s13*s23^4 + 30*
                s23^5) + s12^6*(36*s13^5 + 1755*s13^4*s23 + 6444*s13^3*
                s23^2 + 6982*s13^2*s23^3 + 1324*s13*s23^4 + 40*s23^5) + 
             s12^2*s13^2*s23*(-765*s13^6 + 1887*s13^5*s23 + 4642*s13^4*
                s23^2 - 434*s13^3*s23^3 - 1581*s13^2*s23^4 - 81*s13*s23^5 + 6*
                s23^6) + s12^4*s23*(1152*s13^6 - 321*s13^5*s23 + 3855*s13^4*
                s23^2 - 1295*s13^3*s23^3 - 2536*s13^2*s23^4 - 379*s13*s23^5 + 
               40*s23^6) + s12^5*(-63*s13^6 + 693*s13^5*s23 + 1130*s13^4*
                s23^2 + 2836*s13^3*s23^3 + 1995*s13^2*s23^4 + 1119*s13*
                s23^5 + 490*s23^6) + s12^3*s13*(-81*s13^7 + 1368*s13^6*s23 + 
               5091*s13^5*s23^2 + 632*s13^4*s23^3 - 213*s13^3*s23^4 - 1278*
                s13^2*s23^5 - 227*s13*s23^6 + 60*s23^7))) + 
         p1q^4*s23*(p2q^3*(-10*s13^3*s23^3*(s13 + s23)^2*(6*s13^2 - 8*s13*
                s23 + s23^2) - 50*s12*s13^3*s23^3*(3*s13^3 + 2*s13^2*s23 - 2*
                s13*s23^2 - s23^3) + s12^6*(81*s13^4 + 344*s13^3*s23 - 252*
                s13^2*s23^2 - 163*s13*s23^3 - 80*s23^4) + 
             s12^5*(252*s13^5 + 882*s13^4*s23 + 7*s13^3*s23^2 - 589*s13^2*
                s23^3 - 486*s13*s23^4 - 160*s23^5) + s12^2*s13^2*s23*
              (131*s13^5 + 440*s13^4*s23 + 192*s13^3*s23^2 - 256*s13^2*
                s23^3 - 133*s13*s23^4 + 6*s23^5) + 2*s12^3*s13*
              (45*s13^6 + 309*s13^5*s23 + 810*s13^4*s23^2 - 10*s13^3*s23^3 - 
               674*s13^2*s23^4 - 238*s13*s23^5 - 120*s23^6) + 
             s12^4*(261*s13^6 + 1025*s13^5*s23 + 1286*s13^4*s23^2 - 1166*
                s13^3*s23^3 - 659*s13^2*s23^4 - 563*s13*s23^5 - 80*s23^6)) + 
           p3q^3*(-80*s13^4*s23^4*(s13 + s23)^2 + s12^7*(90*s13^3 + 131*s13^2*
                s23 - 60*s23^3) - s12*s13^3*s23^3*(163*s13^3 + 486*s13^2*
                s23 + 563*s13*s23^2 + 240*s23^3) + s12^6*(261*s13^4 + 618*
                s13^3*s23 + 440*s13^2*s23^2 - 150*s13*s23^3 - 40*s23^4) - 
             s12^2*s13^2*s23^2*(252*s13^4 + 589*s13^3*s23 + 659*s13^2*s23^2 + 
               476*s13*s23^3 - 6*s23^4) + s12^5*(252*s13^5 + 1025*s13^4*s23 + 
               1620*s13^3*s23^2 + 192*s13^2*s23^3 - 100*s13*s23^4 + 90*
                s23^5) + s12^3*s23*(344*s13^6 + 7*s13^5*s23 - 1166*s13^4*
                s23^2 - 1348*s13^3*s23^3 - 133*s13^2*s23^4 + 50*s13*s23^5 - 
               10*s23^6) + s12^4*(81*s13^6 + 882*s13^5*s23 + 1286*s13^4*
                s23^2 - 20*s13^3*s23^3 - 256*s13^2*s23^4 + 100*s13*s23^5 + 60*
                s23^6)) + p2q*p3q^2*(10*s13^3*s23^3*(s13 + s23)^2*
              (33*s13^2 - 39*s13*s23 + 7*s23^2) + s12^7*(207*s13^3 + 1243*
                s13^2*s23 + 1458*s13*s23^2 + 810*s23^3) + s12*s13^3*s23^2*
              (729*s13^4 + 963*s13^3*s23 - 355*s13^2*s23^2 - 273*s13*s23^3 + 
               316*s23^4) + s12^6*(351*s13^4 + 1634*s13^3*s23 + 1798*s13^2*
                s23^2 + 2362*s13*s23^3 + 1300*s23^4) + s12^2*s13^2*s23*
              (761*s13^5 + 791*s13^4*s23 - 910*s13^3*s23^2 - 16*s13^2*s23^3 + 
               566*s13*s23^4 + 22*s23^5) + s12^5*(414*s13^5 + 952*s13^4*s23 - 
               756*s13^3*s23^2 - 2721*s13^2*s23^3 - 617*s13*s23^4 + 140*
                s23^5) + s12^4*(243*s13^6 + 1205*s13^5*s23 + 1202*s13^4*
                s23^2 - 3156*s13^3*s23^3 - 2871*s13^2*s23^4 - 1338*s13*
                s23^5 - 380*s23^6) + s12^3*(117*s13^7 + 1333*s13^6*s23 + 241*
                s13^5*s23^2 - 837*s13^4*s23^3 - 755*s13^3*s23^4 + 477*s13^2*
                s23^5 + 183*s13*s23^6 - 30*s23^7)) + p2q^2*p3q*
            (10*s13^3*s23^3*(s13 + s23)^2*(81*s13^2 - 32*s13*s23 - 3*s23^2) + 
             s12^7*(117*s13^3 + 761*s13^2*s23 + 729*s13*s23^2 + 330*s23^3) + 
             s12*s13^3*s23^2*(1458*s13^4 + 2362*s13^3*s23 - 617*s13^2*s23^2 - 
               1338*s13*s23^3 + 183*s23^4) + s12^6*(243*s13^4 + 1333*s13^3*
                s23 + 791*s13^2*s23^2 + 963*s13*s23^3 + 270*s23^4) + 
             s12^5*(414*s13^5 + 1205*s13^4*s23 + 241*s13^3*s23^2 - 910*s13^2*
                s23^3 - 355*s13*s23^4 - 380*s23^5) + s12^2*s13^2*s23*
              (1243*s13^5 + 1798*s13^4*s23 - 2721*s13^3*s23^2 - 2871*s13^2*
                s23^3 + 477*s13*s23^4 + 22*s23^5) + s12^4*(351*s13^6 + 952*
                s13^5*s23 + 1202*s13^4*s23^2 - 837*s13^3*s23^3 - 16*s13^2*
                s23^4 - 273*s13*s23^5 - 250*s23^6) + s12^3*(207*s13^7 + 1634*
                s13^6*s23 - 756*s13^5*s23^2 - 3156*s13^4*s23^3 - 755*s13^3*
                s23^4 + 566*s13^2*s23^5 + 316*s13*s23^6 + 70*s23^7))) + 
         p1q^3*(p3q^4*s12*(80*s13^4*s23^4*(s13^2 + 3*s13*s23 + 2*s23^2) + 
             s12^7*(-27*s13^3 - 117*s13^2*s23 + 40*s23^3) + 
             s12*s13^2*s23^3*(-6*s13^4 + 388*s13^3*s23 + 793*s13^2*s23^2 + 
               321*s13*s23^3 + 2*s23^4) - s12^6*(81*s13^4 + 297*s13^3*s23 + 
               186*s13^2*s23^2 - 130*s13*s23^3 + 40*s23^4) + 
             s12^2*s13*s23^2*(553*s13^5 + 1147*s13^4*s23 + 795*s13^3*s23^2 + 
               46*s13^2*s23^3 - 122*s13*s23^4 + 30*s23^5) - 
             s12^5*(81*s13^5 + 135*s13^4*s23 + 182*s13^3*s23^2 - 428*s13^2*
                s23^3 + 80*s13*s23^4 + 160*s23^5) + s12^4*(-27*s13^6 + 153*
                s13^5*s23 + 540*s13^4*s23^2 + 1903*s13^3*s23^3 + 520*s13^2*
                s23^4 - 320*s13*s23^5 - 40*s23^6) + s12^3*s23*
              (108*s13^6 + 1089*s13^5*s23 + 2484*s13^4*s23^2 + 1540*s13^3*
                s23^3 - 101*s13^2*s23^4 - 80*s13*s23^5 + 40*s23^6)) + 
           p2q^4*s13*(40*s13^3*s23^3*(s13 + s23)^2*(s13^2 - 3*s13*s23 + s23^
                2) + 10*s12*s13^2*s23^3*(13*s13^4 - 8*s13^3*s23 - 32*s13^2*
                s23^2 - 8*s13*s23^3 + 3*s23^4) + s12^6*(-27*s13^4 + 108*s13^3*
                s23 + 553*s13^2*s23^2 - 6*s13*s23^3 + 80*s23^4) + 
             s12^5*(-81*s13^5 + 153*s13^4*s23 + 1089*s13^3*s23^2 + 1147*s13^2*
                s23^3 + 388*s13*s23^4 + 240*s23^5) + s12^2*s13*s23*
              (-117*s13^6 - 186*s13^5*s23 + 428*s13^4*s23^2 + 520*s13^3*
                s23^3 - 101*s13^2*s23^4 - 122*s13*s23^5 + 2*s23^6) + 
             s12^4*(-81*s13^6 - 135*s13^5*s23 + 540*s13^4*s23^2 + 2484*s13^3*
                s23^3 + 795*s13^2*s23^4 + 793*s13*s23^5 + 160*s23^6) + 
             s12^3*s13*(-27*s13^6 - 297*s13^5*s23 - 182*s13^4*s23^2 + 1903*
                s13^3*s23^3 + 1540*s13^2*s23^4 + 46*s13*s23^5 + 321*s23^6)) + 
           p2q*p3q^3*(10*s13^4*(25*s13 - 7*s23)*s23^4*(s13 + s23)^2 - 
             2*s12^8*(27*s13^3 + 288*s13^2*s23 + 486*s13*s23^2 + 415*s23^3) + 
             2*s12*s13^3*s23^3*(283*s13^4 + 468*s13^3*s23 + 182*s13^2*s23^2 - 
               63*s13*s23^3 - 60*s23^4) - s12^7*(36*s13^4 + 351*s13^3*s23 - 
               495*s13^2*s23^2 + 808*s13*s23^3 + 970*s23^4) + 
             s12^2*s13^2*s23^2*(1101*s13^5 + 829*s13^4*s23 - 1466*s13^3*
                s23^2 - 887*s13^2*s23^3 - 311*s13*s23^4 + 12*s23^5) + 
             s12^6*(72*s13^5 + 414*s13^4*s23 + 2768*s13^3*s23^2 + 4279*s13^2*
                s23^3 + 2258*s13*s23^4 + 660*s23^5) + 
             s12^5*(108*s13^6 + 900*s13^5*s23 + 1556*s13^4*s23^2 + 2353*s13^3*
                s23^3 + 977*s13^2*s23^4 + 1662*s13*s23^5 + 900*s23^6) + 
             s12^3*s23*(495*s13^7 + 2060*s13^6*s23 + 217*s13^5*s23^2 - 1632*
                s13^4*s23^3 - 2366*s13^3*s23^4 - 204*s13^2*s23^5 + 110*s13*
                s23^6 - 10*s23^7) + s12^4*(54*s13^7 + 702*s13^6*s23 + 1610*
                s13^5*s23^2 + 2769*s13^4*s23^3 - 2479*s13^3*s23^4 - 2547*
                s13^2*s23^5 - 322*s13*s23^6 + 90*s23^7)) + 
           p2q^3*p3q*(-10*s13^3*s23^3*(s13 + s23)^2*(83*s13^3 - 69*s13^2*
                s23 - 11*s13*s23^2 + s23^3) + s12^7*(54*s13^4 + 495*s13^3*
                s23 + 1101*s13^2*s23^2 + 566*s13*s23^3 + 250*s23^4) - 
             2*s12*s13^3*s23^2*(486*s13^5 + 404*s13^4*s23 - 1129*s13^3*
                s23^2 - 831*s13^2*s23^3 + 161*s13*s23^4 - 55*s23^5) + 
             s12^6*(108*s13^5 + 702*s13^4*s23 + 2060*s13^3*s23^2 + 829*s13^2*
                s23^3 + 936*s13*s23^4 + 430*s23^5) + s12^2*s13^2*s23*
              (-576*s13^6 + 495*s13^5*s23 + 4279*s13^4*s23^2 + 977*s13^3*
                s23^3 - 2547*s13^2*s23^4 - 204*s13*s23^5 + 12*s23^6) + 
             s12^5*(72*s13^6 + 900*s13^5*s23 + 1610*s13^4*s23^2 + 217*s13^3*
                s23^3 - 1466*s13^2*s23^4 + 364*s13*s23^5 + 110*s23^6) - 
             s12^4*(36*s13^7 - 414*s13^6*s23 - 1556*s13^5*s23^2 - 2769*s13^4*
                s23^3 + 1632*s13^3*s23^4 + 887*s13^2*s23^5 + 126*s13*s23^6 + 
               70*s23^7) - s12^3*s13*(54*s13^7 + 351*s13^6*s23 - 2768*s13^5*
                s23^2 - 2353*s13^4*s23^3 + 2479*s13^3*s23^4 + 2366*s13^2*
                s23^5 + 311*s13*s23^6 + 120*s23^7)) + p2q^2*p3q^2*
            (-10*s13^3*s23^3*(s13 + s23)^2*(51*s13^3 - 79*s13^2*s23 + 27*s13*
                s23^2 + s23^3) - 3*s12^8*(9*s13^3 + 153*s13^2*s23 + 243*s13*
                s23^2 + 170*s23^3) + s12^7*(27*s13^4 + 297*s13^3*s23 + 1656*
                s13^2*s23^2 - 21*s13*s23^3 - 230*s23^4) - s12*s13^3*s23^2*
              (729*s13^5 + 21*s13^4*s23 - 1664*s13^3*s23^2 + 162*s13^2*
                s23^3 + 915*s13*s23^4 - 203*s23^5) + s12^6*(72*s13^5 + 711*
                s13^4*s23 + 3350*s13^3*s23^2 + 3255*s13^2*s23^3 + 1664*s13*
                s23^4 + 800*s23^5) + s12^2*s13^2*s23*(-459*s13^6 + 1656*s13^5*
                s23 + 3255*s13^4*s23^2 - 2657*s13^3*s23^3 - 2578*s13^2*
                s23^4 + 519*s13*s23^5 + 20*s23^6) + s12^5*(72*s13^6 + 918*
                s13^5*s23 + 979*s13^4*s23^2 - 228*s13^3*s23^3 - 2657*s13^2*
                s23^4 - 162*s13*s23^5 + 240*s23^6) + s12^4*(27*s13^7 + 711*
                s13^6*s23 + 979*s13^5*s23^2 + 4134*s13^4*s23^3 - 1370*s13^3*
                s23^4 - 2578*s13^2*s23^5 - 915*s13*s23^6 - 290*s23^7) + 
             s12^3*(-27*s13^8 + 297*s13^7*s23 + 3350*s13^6*s23^2 - 228*s13^5*
                s23^3 - 1370*s13^4*s23^4 - 342*s13^3*s23^5 + 519*s13^2*
                s23^6 + 203*s13*s23^7 - 10*s23^8))))/(27*ep*p2q*p3q*
         (p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13^3*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + 
       (ep^2*(p2q^6*s13^3*(s13 + s23)*(-10*s13^2*s23^3*(s13 + s23)^2 + 
            9*s12^5*(s13^2 + 10*s13*s23 + s23^2) + 2*s12*s13*s23^2*
             (8*s13^3 + 8*s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
            s12^4*(18*s13^3 + 225*s13^2*s23 + 229*s13*s23^2 + 22*s23^3) + 
            s12^2*s23*(36*s13^4 + 189*s13^3*s23 + 180*s13^2*s23^2 + 
              31*s13*s23^3 + 4*s23^4) + s12^3*(9*s13^4 + 171*s13^3*s23 + 
              393*s13^2*s23^2 + 176*s13*s23^3 + 17*s23^4)) + 
          p3q^6*s12^3*(s12 + s23)*(s13^2*s23^2*(s13 + s23)^2*
             (9*s13 + 4*s23) + s12^4*(9*s13^3 + 36*s13^2*s23 + 16*s13*s23^2 - 
              10*s23^3) + s12^3*(18*s13^4 + 171*s13^3*s23 + 189*s13^2*s23^2 + 
              16*s13*s23^3 - 20*s23^4) + s12*s13*s23*(90*s13^4 + 
              229*s13^3*s23 + 176*s13^2*s23^2 + 31*s13*s23^3 - 6*s23^4) + 
            s12^2*(9*s13^5 + 225*s13^4*s23 + 393*s13^3*s23^2 + 
              180*s13^2*s23^3 - 6*s13*s23^4 - 10*s23^5)) + 
          p2q*p3q^5*s12^2*(s12^7*(9*s13^2 - 19*s23^2) + 
            s12^6*(207*s13^3 + 396*s13^2*s23 + 63*s13*s23^2 - 86*s23^3) + 
            s12^5*(171*s13^4 + 1422*s13^3*s23 + 1743*s13^2*s23^2 + 
              150*s13*s23^3 - 134*s23^4) + s13^2*s23^3*(181*s13^4 + 
              230*s13^3*s23 + 229*s13^2*s23^2 + 176*s13*s23^3 - 4*s23^4) + 
            s12^4*(-63*s13^5 + 1377*s13^4*s23 + 4299*s13^3*s23^2 + 
              3342*s13^2*s23^3 + 76*s13*s23^4 - 76*s23^5) + 
            s12*s13*s23^2*(352*s13^5 + 963*s13^4*s23 + 1590*s13^3*s23^2 + 
              955*s13^2*s23^3 - 242*s13*s23^4 + 6*s23^5) + 
            s12^3*(-36*s13^6 + 306*s13^5*s23 + 3442*s13^4*s23^2 + 
              5761*s13^3*s23^3 + 2646*s13^2*s23^4 - 40*s13*s23^5 + s23^6) + 
            s12^2*s23*(63*s13^6 + 1102*s13^5*s23 + 3669*s13^4*s23^2 + 
              3456*s13^3*s23^3 + 422*s13^2*s23^4 - 23*s13*s23^5 + 
              10*s23^6)) + p2q^5*p3q*s13^2*(-(s13^2*s23^2*(s13 + s23)^3*
              (19*s13^2 + 29*s13*s23 - 10*s23^2)) + s12*s13*s23^2*
             (s13 + s23)^2*(63*s13^3 + 24*s13^2*s23 - 35*s13*s23^2 + 
              6*s23^3) + s12^6*(-36*s13^3 + 63*s13^2*s23 + 352*s13*s23^2 + 
              181*s23^3) + s12^5*(-63*s13^4 + 306*s13^3*s23 + 
              1102*s13^2*s23^2 + 963*s13*s23^3 + 230*s23^4) + 
            s12^4*(171*s13^5 + 1377*s13^4*s23 + 3442*s13^3*s23^2 + 
              3669*s13^2*s23^3 + 1590*s13*s23^4 + 229*s23^5) + 
            s12^3*(207*s13^6 + 1422*s13^5*s23 + 4299*s13^4*s23^2 + 
              5761*s13^3*s23^3 + 3456*s13^2*s23^4 + 955*s13*s23^5 + 
              176*s23^6) + s12^2*(9*s13^7 + 396*s13^6*s23 + 1743*s13^5*s23^
                2 + 3342*s13^4*s23^3 + 2646*s13^3*s23^4 + 422*s13^2*s23^5 - 
              242*s13*s23^6 - 4*s23^7)) - p2q^3*p3q^3*
           (-19*s13^4*s23^3*(s13 + s23)^4 + s12^8*(36*s13^3 - 261*s13^2*s23 - 
              228*s13*s23^2 - 19*s23^3) - s12*s13^3*s23^2*(s13 + s23)^2*
             (228*s13^3 - 101*s13^2*s23 - 21*s13*s23^2 - 14*s23^3) + 
            s12^7*(18*s13^4 + 18*s13^3*s23 - 491*s13^2*s23^2 - 
              355*s13*s23^3 - 76*s23^4) - s12^6*(1206*s13^5 + 999*s13^4*s23 - 
              255*s13^3*s23^2 - 25*s13^2*s23^3 + 5*s13*s23^4 + 114*s23^5) + 
            s12^2*s13^2*s23*(-261*s13^6 - 491*s13^5*s23 + 25*s13^4*s23^2 + 
              2796*s13^3*s23^3 + 3602*s13^2*s23^4 + 339*s13*s23^5 - 
              722*s23^6) + s12^5*(-1206*s13^6 - 1908*s13^5*s23 + 
              2230*s13^4*s23^2 + 5587*s13^3*s23^3 + 2796*s13^2*s23^4 + 
              157*s13*s23^5 - 76*s23^6) + s12^4*(18*s13^7 - 999*s13^6*s23 + 
              2230*s13^5*s23^2 + 8844*s13^4*s23^3 + 8911*s13^3*s23^4 + 
              3602*s13^2*s23^5 + 49*s13*s23^6 - 19*s23^7) + 
            s12^3*s13*(36*s13^7 + 18*s13^6*s23 + 255*s13^5*s23^2 + 
              5587*s13^4*s23^3 + 8911*s13^3*s23^4 + 3618*s13^2*s23^5 + 
              339*s13*s23^6 + 14*s23^7)) + p2q^2*p3q^4*s12*
           (s12^8*(9*s13^2 - 19*s23^2) - s13^3*s23^3*(s13 + s23)^2*
             (209*s13^2 + 90*s13*s23 + 53*s23^2) + 
            s12^7*(-18*s13^3 + 405*s13^2*s23 + 248*s13*s23^2 - 57*s23^3) + 
            s12^6*(-819*s13^4 - 225*s13^3*s23 + 1598*s13^2*s23^2 + 
              574*s13*s23^3 - 28*s23^4) - s12*s13^2*s23^2*(660*s13^5 + 
              1872*s13^4*s23 + 3110*s13^3*s23^2 + 2203*s13^2*s23^3 - 
              52*s13*s23^4 - 357*s23^5) + s12^5*(-774*s13^5 - 
              2412*s13^4*s23 + 483*s13^3*s23^2 + 2967*s13^2*s23^3 + 
              417*s13*s23^4 + 68*s23^5) - s12^2*s13*s23*(423*s13^6 + 
              2276*s13^5*s23 + 6141*s13^4*s23^2 + 5690*s13^3*s23^3 + 
              1537*s13^2*s23^4 + 578*s13*s23^5 - 45*s23^6) + 
            s12^4*(72*s13^6 - 2727*s13^5*s23 - 4536*s13^4*s23^2 - 
              752*s13^3*s23^3 + 1143*s13^2*s23^4 + 149*s13*s23^5 + 
              87*s23^6) + s12^3*(54*s13^7 - 936*s13^6*s23 - 5412*s13^5*s23^
                2 - 6530*s13^4*s23^3 - 3124*s13^3*s23^4 - 1557*s13^2*s23^5 + 
              103*s13*s23^6 + 29*s23^7)) + p2q^4*p3q^2*s13*
           (-(s13^3*s23^2*(s13 + s23)^3*(19*s13^2 - 29*s23^2)) + 
            s12^7*(54*s13^3 - 423*s13^2*s23 - 660*s13*s23^2 - 209*s23^3) + 
            s12*s13^2*s23^2*(s13 + s23)^2*(248*s13^3 + 78*s13^2*s23 + 
              13*s13*s23^2 + 45*s23^3) + 4*s12^6*(18*s13^4 - 234*s13^3*s23 - 
              569*s13^2*s23^2 - 468*s13*s23^3 - 127*s23^4) - 
            s12^5*(774*s13^5 + 2727*s13^4*s23 + 5412*s13^3*s23^2 + 
              6141*s13^2*s23^3 + 3110*s13*s23^4 + 442*s23^5) - 
            s12^4*(819*s13^6 + 2412*s13^5*s23 + 4536*s13^4*s23^2 + 
              6530*s13^3*s23^3 + 5690*s13^2*s23^4 + 2203*s13*s23^5 + 
              196*s23^6) - s12^3*(18*s13^7 + 225*s13^6*s23 - 483*s13^5*s23^
                2 + 752*s13^4*s23^3 + 3124*s13^3*s23^4 + 1537*s13^2*s23^5 - 
              52*s13*s23^6 + 53*s23^7) + s12^2*s13*(9*s13^7 + 405*s13^6*s23 + 
              1598*s13^5*s23^2 + 2967*s13^4*s23^3 + 1143*s13^3*s23^4 - 
              1557*s13^2*s23^5 - 578*s13*s23^6 + 357*s23^7)) + 
          p1q^4*s23^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23)*
           (p2q^2*(s12 + s23)*(10*s13^2*s23^2*(s13 + s23) + s12^3*(9*s13^2 - 
                s23^2) + s12^2*(9*s13^3 - 2*s13*s23^2 - s23^3)) + 
            p3q^2*(s13 + s23)*(-2*s12*s13^2*s23^2 - s13^2*s23^2*(s13 + s23) + 
              s12^3*(9*s13^2 + 10*s23^2) + s12^2*(9*s13^3 + 10*s23^3)) + 
            p2q*p3q*(8*s12*s13^2*s23^2*(s13 + s23) + s12^4*(9*s13^2 - 
                s23^2) + s13^2*s23^2*(-s13^2 + 8*s13*s23 + 9*s23^2) + 
              2*s12^3*(9*s13^3 + 9*s13^2*s23 + 4*s13*s23^2 + 4*s23^3) + 
              s12^2*(9*s13^4 + 18*s13^3*s23 + 8*s13*s23^3 + 9*s23^4))) + 
          p1q^3*s23*(p2q^3*s23*(s12 + s23)*(s13 + s23)*
             (-10*s13^2*(3*s13 - s23)*s23^2*(s13 + s23)^2 + s12^5*(99*s13^2 + 
                10*s13*s23 - s23^2) + s12^4*(216*s13^3 + 250*s13^2*s23 + 
                23*s13*s23^2 - 3*s23^3) + 2*s12*s13^2*s23*(3*s13^3 - 
                7*s13^2*s23 - 3*s13*s23^2 + 7*s23^3) + s12^3*(135*s13^4 + 
                404*s13^3*s23 + 192*s13^2*s23^2 + 16*s13*s23^3 - 3*s23^4) + 
              s12^2*(18*s13^5 + 170*s13^4*s23 + 193*s13^3*s23^2 + 
                45*s13^2*s23^3 + 3*s13*s23^4 - s23^5)) + 
            p3q^3*s23*(s12 + s23)*(s13 + s23)*(-(s13^2*s23^2*(s13 + s23)^3) + 
              s12*s13^2*s23*(s13 + s23)^2*(10*s13 + 3*s23) + 
              6*s12^5*(3*s13^2 + s13*s23 - 5*s23^2) + s12^4*(135*s13^3 + 
                170*s13^2*s23 - 14*s13*s23^2 - 50*s23^3) + s12^3*(216*s13^4 + 
                404*s13^3*s23 + 193*s13^2*s23^2 - 6*s13*s23^3 - 10*s23^4) + 
              s12^2*(99*s13^5 + 250*s13^4*s23 + 192*s13^3*s23^2 + 
                45*s13^2*s23^3 + 14*s13*s23^4 + 10*s23^5)) + 
            p2q^2*p3q*(-(s13^2*s23^3*(s13 + s23)^3*(17*s13^2 + 48*s13*s23 - 
                 19*s23^2)) - s12^7*s23*(9*s13^2 + 18*s13*s23 + 17*s23^2) + 
              s12^6*s23*(279*s13^3 + 303*s13^2*s23 - 38*s13*s23^2 - 
                70*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(18*s13^3 + 
                8*s13^2*s23 + 137*s13*s23^2 + 119*s23^3) + 
              s12^5*(-144*s13^5 + 443*s13^4*s23 + 1697*s13^3*s23^2 + 
                1083*s13^2*s23^3 - 135*s13*s23^4 - 100*s23^5) + 
              s12^4*(144*s13^6 + 812*s13^5*s23 + 3626*s13^4*s23^2 + 
                5026*s13^3*s23^3 + 1757*s13^2*s23^4 - 369*s13*s23^5 - 
                50*s23^6) + s12^3*s23*(504*s13^6 + 2427*s13^5*s23 + 
                5730*s13^4*s23^2 + 5458*s13^3*s23^3 + 1251*s13^2*s23^4 - 
                395*s13*s23^5 + 5*s23^6) + s12^2*s23*(-9*s13^7 + 
                407*s13^6*s23 + 1484*s13^5*s23^2 + 2258*s13^4*s23^3 + 
                1466*s13^3*s23^4 + 127*s13^2*s23^5 - 141*s13*s23^6 + 
                8*s23^7)) + p2q*p3q^2*(-(s13^2*s23^3*(s13 + s23)^3*
                (17*s13^2 + 19*s13*s23 - 8*s23^2)) - s12^7*s23*(9*s13^2 + 
                18*s13*s23 + 17*s23^2) - s12*s13^2*s23^2*(s13 + s23)^2*(
                18*s13^3 + 2*s13^2*s23 + 113*s13*s23^2 + 141*s23^3) + 
              s12^6*(144*s13^4 + 504*s13^3*s23 + 407*s13^2*s23^2 - 
                44*s13*s23^3 - 99*s23^4) + s12^5*(-144*s13^5 + 812*s13^4*
                 s23 + 2427*s13^3*s23^2 + 1484*s13^2*s23^3 - 171*s13*s23^4 - 
                176*s23^5) + s12^4*s23*(443*s13^5 + 3626*s13^4*s23 + 
                5730*s13^3*s23^2 + 2258*s13^2*s23^3 - 401*s13*s23^4 - 
                104*s23^5) + s12^3*s23*(279*s13^6 + 1697*s13^5*s23 + 
                5026*s13^4*s23^2 + 5458*s13^3*s23^3 + 1466*s13^2*s23^4 - 
                375*s13*s23^5 + 9*s23^6) + s12^2*s23*(-9*s13^7 + 
                303*s13^6*s23 + 1083*s13^5*s23^2 + 1757*s13^4*s23^3 + 
                1251*s13^3*s23^4 + 127*s13^2*s23^5 - 119*s13*s23^6 + 
                19*s23^7))) - p1q^2*(p2q^4*s13*(s13 + s23)*
             (-30*s13^2*(s13 - s23)*s23^4*(s13 + s23)^2 + s12^6*(9*s13^3 + 
                90*s13^2*s23 - 81*s13*s23^2 - 10*s23^3) + s12^5*(18*s13^4 + 
                234*s13^3*s23 + 211*s13^2*s23^2 - 281*s13*s23^3 - 36*s23^4) + 
              6*s12*s13*s23^3*(2*s13^4 + s13^3*s23 + 7*s13^2*s23^2 + 
                9*s13*s23^3 + s23^4) + s12^4*(9*s13^5 + 189*s13^4*s23 + 
                699*s13^3*s23^2 + 62*s13^2*s23^3 - 353*s13*s23^4 - 
                48*s23^5) + s12^3*s23*(45*s13^5 + 486*s13^4*s23 + 
                672*s13^3*s23^2 - 162*s13^2*s23^3 - 181*s13*s23^4 - 
                28*s23^5) + s12^2*s23^2*(79*s13^5 + 351*s13^4*s23 + 
                209*s13^3*s23^2 - 79*s13^2*s23^3 - 22*s13*s23^4 - 6*s23^5)) + 
            p3q^4*s12*(-2*s13^2*s23^4*(s13 + s23)^3*(5*s13 + 3*s23) - 
              s12*s13*s23^3*(s13 + s23)^2*(91*s13^3 + 135*s13^2*s23 + 
                40*s13*s23^2 - 6*s23^3) + s12^6*(9*s13^4 + 45*s13^3*s23 + 
                79*s13^2*s23^2 + 12*s13*s23^3 - 30*s23^4) + s12^5*(18*s13^5 + 
                198*s13^4*s23 + 531*s13^3*s23^2 + 430*s13^2*s23^3 + 
                18*s13*s23^4 - 60*s23^5) + s12^4*s13*(9*s13^5 + 252*s13^4*
                 s23 + 888*s13^3*s23^2 + 1158*s13^2*s23^3 + 560*s13*s23^4 + 
                48*s23^5) + s12^2*s23^2*(9*s13^6 - 70*s13^5*s23 - 
                291*s13^4*s23^2 - 343*s13^3*s23^3 - 101*s13^2*s23^4 + 
                60*s13*s23^5 + 30*s23^6) + s12^3*s23*(99*s13^6 + 
                445*s13^5*s23 + 761*s13^4*s23^2 + 510*s13^3*s23^3 + 
                130*s13^2*s23^4 + 96*s13*s23^5 + 60*s23^6)) + 
            p2q*p3q^3*(s13^2*s23^4*(s13 + s23)^4*(18*s13 + s23) + 
              s12^8*(9*s13^3 + 9*s13^2*s23 - 19*s13*s23^2 - 37*s23^3) + 
              s12*s13^2*s23^3*(s13 + s23)^2*(218*s13^3 + 207*s13^2*s23 + 
                301*s13*s23^2 + 162*s23^3) + s12^7*(207*s13^4 + 747*s13^3*
                 s23 + 846*s13^2*s23^2 + 51*s13*s23^3 - 161*s23^4) + 
              s12^6*(189*s13^5 + 1404*s13^4*s23 + 3883*s13^3*s23^2 + 
                3006*s13^2*s23^3 + 54*s13*s23^4 - 194*s23^5) + 
              s12^5*(-27*s13^6 + 1863*s13^5*s23 + 6576*s13^4*s23^2 + 
                9523*s13^3*s23^3 + 4530*s13^2*s23^4 - 169*s13*s23^5 + 
                4*s23^6) + s12^2*s23^2*(550*s13^7 + 1966*s13^6*s23 + 
                3368*s13^5*s23^2 + 2047*s13^4*s23^3 - 569*s13^3*s23^4 - 
                513*s13^2*s23^5 + 141*s13*s23^6 - 10*s23^7) + 
              s12^3*s23*(252*s13^7 + 2100*s13^6*s23 + 6583*s13^5*s23^2 + 
                6197*s13^4*s23^3 + 395*s13^3*s23^4 - 830*s13^2*s23^5 + 
                234*s13*s23^6 + 37*s23^7) + s12^4*(-18*s13^7 + 765*s13^6*
                 s23 + 5630*s13^5*s23^2 + 10334*s13^4*s23^3 + 7945*s13^3*
                 s23^4 + 2205*s13^2*s23^5 - 60*s13*s23^6 + 121*s23^7)) + 
            p2q^3*p3q*(-(s13^2*s23^3*(s13 + s23)^3*(37*s13^3 + 50*s13^2*s23 - 
                 67*s13*s23^2 + 10*s23^3)) - s12*s13^2*s23^2*(s13 + s23)^2*(
                19*s13^4 - 89*s13^3*s23 + 105*s13^2*s23^2 + 48*s13*s23^3 - 
                141*s23^4) + s12^7*(-18*s13^4 + 252*s13^3*s23 + 550*s13^2*
                 s23^2 + 218*s13*s23^3 + 18*s23^4) + s12^6*(-27*s13^5 + 
                765*s13^4*s23 + 2100*s13^3*s23^2 + 1966*s13^2*s23^3 + 
                643*s13*s23^4 + 73*s23^5) + s12^5*(189*s13^6 + 1863*s13^5*
                 s23 + 5630*s13^4*s23^2 + 6583*s13^3*s23^3 + 3368*s13^2*
                 s23^4 + 933*s13*s23^5 + 112*s23^6) + s12^4*(207*s13^7 + 
                1404*s13^6*s23 + 6576*s13^5*s23^2 + 10334*s13^4*s23^3 + 
                6197*s13^3*s23^4 + 2047*s13^2*s23^5 + 971*s13*s23^6 + 
                78*s23^7) + s12^2*s23*(9*s13^8 + 846*s13^7*s23 + 
                3006*s13^6*s23^2 + 4530*s13^5*s23^3 + 2205*s13^4*s23^4 - 
                830*s13^3*s23^5 - 513*s13^2*s23^6 + 162*s13*s23^7 + s23^8) + 
              s12^3*(9*s13^8 + 747*s13^7*s23 + 3883*s13^6*s23^2 + 
                9523*s13^5*s23^3 + 7945*s13^4*s23^4 + 395*s13^3*s23^5 - 
                569*s13^2*s23^6 + 625*s13*s23^7 + 22*s23^8)) + 
            p2q^2*p3q^2*(s12^7*s23*(414*s13^3 + 912*s13^2*s23 + 
                203*s13*s23^2 - 113*s23^3) + s12^8*(9*s13^3 + 9*s13^2*s23 - 
                19*s13*s23^2 - 37*s23^3) - s13^2*s23^3*(s13 + s23)^3*(
                37*s13^3 + 2*s13^2*s23 - 56*s13*s23^2 + 9*s23^3) - 
              s12*s13^2*s23^2*(s13 + s23)^2*(19*s13^4 - 241*s13^3*s23 - 
                64*s13^2*s23^2 - 221*s13*s23^3 - 303*s23^4) + 
              s12^6*(-405*s13^5 + 72*s13^4*s23 + 2932*s13^3*s23^2 + 
                3229*s13^2*s23^3 + 527*s13*s23^4 - 61*s23^5) + 
              s12^5*(-405*s13^6 + 702*s13^5*s23 + 6481*s13^4*s23^2 + 
                11094*s13^3*s23^3 + 5972*s13^2*s23^4 + 590*s13*s23^5 + 
                116*s23^6) + s12^4*s23*(72*s13^6 + 6481*s13^5*s23 + 
                14574*s13^4*s23^2 + 11412*s13^3*s23^3 + 3749*s13^2*s23^4 + 
                809*s13*s23^5 + 139*s23^6) + s12^2*s23*(9*s13^8 + 
                912*s13^7*s23 + 3229*s13^6*s23^2 + 5972*s13^5*s23^3 + 
                3749*s13^4*s23^4 - 1179*s13^3*s23^5 - 970*s13^2*s23^6 + 
                303*s13*s23^7 - 9*s23^8) + s12^3*(9*s13^8 + 414*s13^7*s23 + 
                2932*s13^6*s23^2 + 11094*s13^5*s23^3 + 11412*s13^4*s23^4 + 
                828*s13^3*s23^5 - 1179*s13^2*s23^6 + 827*s13*s23^7 + 
                29*s23^8))) - p1q*(p2q^5*s13^2*(s13 + s23)*
             (10*s13^2*(s13 - 3*s23)*s23^3*(s13 + s23)^2 + 9*s12^6*(s13^2 + 
                10*s13*s23 + s23^2) + s12^5*(9*s13^3 + 144*s13^2*s23 + 
                400*s13*s23^2 + 41*s23^3) - 4*s12*s13*s23^2*(4*s13^4 + 
                s13^3*s23 + 3*s13^2*s23^2 + 9*s13*s23^3 + 3*s23^4) + 
              s12^4*(-9*s13^4 - 36*s13^3*s23 + 596*s13^2*s23^2 + 
                615*s13*s23^3 + 64*s23^4) + s12^2*s23*(-36*s13^5 - 
                110*s13^4*s23 + 195*s13^3*s23^2 + 315*s13^2*s23^3 + 
                55*s13*s23^4 + 9*s23^5) + s12^3*(-9*s13^5 - 126*s13^4*s23 + 
                111*s13^3*s23^2 + 783*s13^2*s23^3 + 372*s13*s23^4 + 
                41*s23^5)) + p3q^5*s12^2*(s13^2*s23^3*(s13 + s23)^2*(
                9*s13^2 + 23*s13*s23 + 9*s23^2) - s12^6*(9*s13^3 + 
                36*s13^2*s23 + 16*s13*s23^2 - 10*s23^3) - s12^5*s13*(
                9*s13^3 + 135*s13^2*s23 + 146*s13*s23^2 + 20*s23^3) + 
              s12^4*(9*s13^5 - 45*s13^4*s23 - 15*s13^3*s23^2 + 85*s13^2*
                 s23^3 - 16*s13*s23^4 - 60*s23^5) + s12*s13*s23^2*(99*s13^5 + 
                441*s13^4*s23 + 679*s13^3*s23^2 + 413*s13^2*s23^3 + 
                64*s13*s23^4 - 12*s23^5) + s12^3*(9*s13^6 + 153*s13^5*s23 + 
                560*s13^4*s23^2 + 894*s13^3*s23^3 + 510*s13^2*s23^4 - 
                48*s13*s23^5 - 80*s23^6) + s12^2*s23*(99*s13^6 + 
                544*s13^5*s23 + 1211*s13^4*s23^2 + 1155*s13^3*s23^3 + 
                370*s13^2*s23^4 - 48*s13*s23^5 - 30*s23^6)) + 
            p2q*p3q^4*s12*(s12^8*(-9*s13^2 + 19*s23^2) - s12^7*(198*s13^3 + 
                387*s13^2*s23 + 82*s13*s23^2 - 49*s23^3) + s13^2*s23^3*
               (s13 + s23)^2*(190*s13^3 + 187*s13^2*s23 + 164*s13*s23^2 - 
                5*s23^3) + s12^6*(27*s13^4 - 711*s13^3*s23 - 922*s13^2*
                 s23^2 - 107*s13*s23^3 - 44*s23^4) + s12^5*(225*s13^5 - 
                45*s13^4*s23 - 189*s13^3*s23^2 + 34*s13^2*s23^3 - 
                15*s13*s23^4 - 216*s23^5) + s12^4*(-18*s13^6 + 999*s13^5*
                 s23 + 3004*s13^4*s23^2 + 5547*s13^3*s23^3 + 3373*s13^2*
                 s23^4 - 213*s13*s23^5 - 179*s23^6) + s12*s13*s23^2*(
                451*s13^6 + 1743*s13^5*s23 + 3722*s13^4*s23^2 + 3243*s13^3*
                 s23^3 + 411*s13^2*s23^4 - 396*s13*s23^5 + 6*s23^6) + 
              s12^3*(-27*s13^7 + 378*s13^6*s23 + 3773*s13^5*s23^2 + 
                8779*s13^4*s23^3 + 9590*s13^3*s23^4 + 4109*s13^2*s23^5 - 
                393*s13*s23^6 - 17*s23^7) + s12^2*s23*(162*s13^7 + 
                1420*s13^6*s23 + 6065*s13^5*s23^2 + 8588*s13^4*s23^3 + 
                4624*s13^3*s23^4 + 923*s13^2*s23^5 - 164*s13*s23^6 + 
                20*s23^7)) + p2q^4*p3q*s13*(s13^2*s23^2*(s13 + s23)^3*(
                19*s13^3 - 8*s13^2*s23 - 77*s13*s23^2 + 20*s23^3) + 
              s12^7*(-27*s13^3 + 162*s13^2*s23 + 451*s13*s23^2 + 190*s23^3) - 
              s12*s13*s23^2*(s13 + s23)^2*(82*s13^4 - 57*s13^3*s23 + 
                47*s13^2*s23^2 + 176*s13*s23^3 - 6*s23^4) + 
              s12^6*(-18*s13^4 + 378*s13^3*s23 + 1420*s13^2*s23^2 + 
                1743*s13*s23^3 + 567*s23^4) + s12^5*(225*s13^5 + 
                999*s13^4*s23 + 3773*s13^3*s23^2 + 6065*s13^2*s23^3 + 
                3722*s13*s23^4 + 728*s23^5) + s12^4*(27*s13^6 - 
                45*s13^5*s23 + 3004*s13^4*s23^2 + 8779*s13^3*s23^3 + 
                8588*s13^2*s23^4 + 3243*s13*s23^5 + 510*s23^6) + 
              s12^3*(-198*s13^7 - 711*s13^6*s23 - 189*s13^5*s23^2 + 
                5547*s13^4*s23^3 + 9590*s13^3*s23^4 + 4624*s13^2*s23^5 + 
                411*s13*s23^6 + 154*s23^7) + s12^2*(-9*s13^8 - 387*s13^7*
                 s23 - 922*s13^6*s23^2 + 34*s13^5*s23^3 + 3373*s13^4*s23^4 + 
                4109*s13^3*s23^5 + 923*s13^2*s23^6 - 396*s13*s23^7 - 
                5*s23^8)) + p2q^3*p3q^2*(s12^8*(27*s13^3 - 261*s13^2*s23 - 
                209*s13*s23^2 - 19*s23^3) + s13^3*s23^2*(s13 + s23)^3*(
                19*s13^3 - 37*s13^2*s23 - 48*s13*s23^2 + 38*s23^3) - 
              s12^7*s23*(135*s13^3 + 295*s13^2*s23 + 206*s13*s23^2 + 
                58*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(248*s13^4 - 
                67*s13^3*s23 + 164*s13^2*s23^2 + 50*s13*s23^3 - 165*s23^4) - 
              s12^6*(621*s13^5 + 810*s13^4*s23 + 128*s13^3*s23^2 - 
                772*s13^2*s23^3 - 315*s13*s23^4 + 42*s23^5) + 
              s12^5*(-18*s13^6 + 432*s13^5*s23 + 3037*s13^4*s23^2 + 
                6719*s13^3*s23^3 + 4749*s13^2*s23^4 + 717*s13*s23^5 + 
                32*s23^6) + s12^4*(603*s13^7 + 495*s13^6*s23 + 3215*s13^5*
                 s23^2 + 9198*s13^4*s23^3 + 10383*s13^3*s23^4 + 5063*s13^2*
                 s23^5 + 864*s13*s23^6 + 53*s23^7) - s12^2*s13*(9*s13^8 + 
                396*s13^7*s23 + 883*s13^6*s23^2 + 707*s13^5*s23^3 - 
                3238*s13^4*s23^4 - 4795*s13^3*s23^5 + 22*s13^2*s23^6 + 
                1214*s13*s23^7 - 154*s23^8) + s12^3*(18*s13^8 + 243*s13^7*
                 s23 - 48*s13^6*s23^2 + 5802*s13^5*s23^3 + 10099*s13^4*
                 s23^4 + 3090*s13^3*s23^5 - 259*s13^2*s23^6 + 613*s13*s23^7 + 
                18*s23^8)) + p2q^2*p3q^3*(-(s13^3*(19*s13 - 18*s23)*s23^3*
                (s13 + s23)^4) + s12^9*(-9*s13^2 + 19*s23^2) + 
              2*s12^8*(9*s13^3 - 198*s13^2*s23 - 124*s13*s23^2 + 10*s23^3) - 
              s12*s13^2*s23^2*(s13 + s23)^2*(209*s13^4 - 212*s13^3*s23 - 
                100*s13^2*s23^2 - 305*s13*s23^3 - 154*s23^4) + 
              s12^7*(603*s13^4 + 243*s13^3*s23 - 883*s13^2*s23^2 - 
                429*s13*s23^3 - 102*s23^4) - s12^6*(18*s13^5 - 495*s13^4*
                 s23 + 48*s13^3*s23^2 + 707*s13^2*s23^3 + 278*s13*s23^4 + 
                198*s23^5) + s12^5*(-621*s13^6 + 432*s13^5*s23 + 
                3215*s13^4*s23^2 + 5802*s13^3*s23^3 + 3238*s13^2*s23^4 - 
                311*s13*s23^5 - 67*s23^6) + s12^4*s23*(-810*s13^6 + 
                3037*s13^5*s23 + 9198*s13^4*s23^2 + 10099*s13^3*s23^3 + 
                4795*s13^2*s23^4 - 99*s13*s23^5 + 66*s23^6) + 
              s12^2*s13*s23*(-261*s13^7 - 295*s13^6*s23 + 772*s13^5*s23^2 + 
                4749*s13^4*s23^3 + 5063*s13^3*s23^4 - 259*s13^2*s23^5 - 
                1214*s13*s23^6 + 165*s23^7) + s12^3*(27*s13^8 - 135*s13^7*
                 s23 - 128*s13^6*s23^2 + 6719*s13^5*s23^3 + 10383*s13^4*
                 s23^4 + 3090*s13^3*s23^5 - 22*s13^2*s23^6 + 280*s13*s23^7 + 
                38*s23^8)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*
         s13^2*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (ep*(p1q^6*(s12 + s13)*s23^3*(s12 + s23)^2*(s13 + s23)^2*
           (s12 + s13 + s23)*(p3q*(s12^2*s13^3*s23^2*(s13 + s23) + 
              40*s13^4*s23^3*(s13 + s23) - s12*s13^3*s23^2*(s13^2 + 
                41*s13*s23 + 40*s23^2) + s12^5*(9*s13^3 - 10*s13*s23^2 - 
                5*s23^3) + s12^4*(18*s13^4 + 28*s13^3*s23 + 10*s13^2*s23^2 - 
                5*s13*s23^3 - 5*s23^4) + s12^3*s13*(9*s13^4 + 100*s13^3*s23 + 
                92*s13^2*s23^2 + 10*s13*s23^3 + 5*s23^4)) + 
            p2q*(10*s12^2*s13^3*s23^2*(s13 + s23) - 5*s13^4*s23^3*(s13 + 
                s23) - 5*s12*s13^3*s23^2*(2*s13^2 + s13*s23 - s23^2) + 
              s12^5*(9*s13^3 - s13*s23^2 + 40*s23^3) + s12^3*s13*(9*s13^4 + 
                28*s13^3*s23 + 92*s13^2*s23^2 + s13*s23^3 - 40*s23^4) + 
              s12^4*(18*s13^4 + 100*s13^3*s23 + s13^2*s23^2 - 41*s13*s23^3 + 
                40*s23^4))) - p1q^5*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
           (s12 + s13 + s23)*(p2q^2*(-15*s13^4*(s13 - s23)*s23^4*(s13 + s23)^
                2 - 5*s12*s13^3*s23^3*(s13 + s23)^2*(6*s13^2 - 13*s13*s23 + 
                3*s23^2) + s12^7*(9*s13^4 + 9*s13^3*s23 - s13^2*s23^2 + 
                39*s13*s23^3 + 40*s23^4) + s12^2*s13^2*s23^2*(-10*s13^5 + 
                123*s13^4*s23 + 337*s13^3*s23^2 + 304*s13^2*s23^3 + 
                99*s13*s23^4 - s23^5) + s12^6*(27*s13^5 + 190*s13^4*s23 + 
                132*s13^3*s23^2 + 130*s13^2*s23^3 + 161*s13*s23^4 + 
                40*s23^5) + s12^5*(27*s13^6 + 363*s13^5*s23 + 606*s13^4*
                 s23^2 + 494*s13^3*s23^3 + 751*s13^2*s23^4 + 447*s13*s23^5 - 
                40*s23^6) + s12^3*s13*s23*(18*s13^6 + 208*s13^5*s23 + 
                859*s13^4*s23^2 + 897*s13^3*s23^3 + 473*s13^2*s23^4 + 
                407*s13*s23^5 + 202*s23^6) + s12^4*(9*s13^7 + 128*s13^6*s23 + 
                932*s13^5*s23^2 + 1042*s13^4*s23^3 + 730*s13^3*s23^4 + 
                1028*s13^2*s23^5 + 527*s13*s23^6 - 40*s23^7)) + 
            p2q*p3q*(5*s13^4*(41*s13 - 5*s23)*s23^4*(s13 + s23)^2 + 
              s12*s13^3*s23^3*(171*s13^4 + 346*s13^3*s23 + 361*s13^2*s23^2 + 
                373*s13*s23^3 + 187*s23^4) + s12^7*(18*s13^4 + 27*s13^3*s23 + 
                7*s13^2*s23^2 + 171*s13*s23^3 + 205*s23^4) + s12^2*s13^2*s23^
                2*(7*s13^5 + 100*s13^4*s23 + 800*s13^3*s23^2 + 1386*s13^2*
                 s23^3 + 677*s13*s23^4 - 2*s23^5) + s12^6*(54*s13^5 + 
                372*s13^4*s23 + 385*s13^3*s23^2 + 100*s13^2*s23^3 + 
                346*s13*s23^4 + 385*s23^5) + s12^5*(54*s13^6 + 258*s13^5*
                 s23 + 845*s13^4*s23^2 + 1227*s13^3*s23^3 + 800*s13^2*s23^4 + 
                361*s13*s23^5 + 155*s23^6) + s12^3*s13*s23*(27*s13^6 + 
                385*s13^5*s23 + 1227*s13^4*s23^2 + 1591*s13^3*s23^3 + 
                1252*s13^2*s23^4 + 677*s13*s23^5 + 187*s23^6) + 
              s12^4*(18*s13^7 + 372*s13^6*s23 + 845*s13^5*s23^2 + 
                1022*s13^4*s23^3 + 1591*s13^3*s23^4 + 1386*s13^2*s23^5 + 
                373*s13*s23^6 - 25*s23^7)) + p3q^2*(40*s13^4*(s13 - s23)*s23^
                4*(s13 + s23)^2 + s12^7*(9*s13^4 + 18*s13^3*s23 - 
                10*s13^2*s23^2 - 30*s13*s23^3 - 15*s23^4) + s12*s13^3*s23^3*(
                39*s13^4 + 161*s13^3*s23 + 447*s13^2*s23^2 + 527*s13*s23^3 + 
                202*s23^4) + s12^6*(27*s13^5 + 128*s13^4*s23 + 208*s13^3*
                 s23^2 + 123*s13^2*s23^3 + 5*s13*s23^4 - 15*s23^5) - 
              s12^2*s13^2*s23^2*(s13^5 - 130*s13^4*s23 - 751*s13^3*s23^2 - 
                1028*s13^2*s23^3 - 407*s13*s23^4 + s23^5) + s12^3*s13*s23*(
                9*s13^6 + 132*s13^5*s23 + 494*s13^4*s23^2 + 730*s13^3*s23^3 + 
                473*s13^2*s23^4 + 99*s13*s23^5 - 15*s23^6) + 
              s12^5*(27*s13^6 + 363*s13^5*s23 + 932*s13^4*s23^2 + 
                859*s13^3*s23^3 + 337*s13^2*s23^4 + 85*s13*s23^5 + 
                15*s23^6) + s12^4*(9*s13^7 + 190*s13^6*s23 + 606*s13^5*
                 s23^2 + 1042*s13^4*s23^3 + 897*s13^3*s23^4 + 304*s13^2*
                 s23^5 + 35*s13*s23^6 + 15*s23^7))) - (s12 + s13)*
           (p2q^7*s13^4*(s12 + s13)*(s13 + s23)*(5*s13^3*s23^3*(s13 + s23)^3*(
                s13 + 2*s23) + 2*s12^2*s13*s23^2*(s13 + s23)^2*(5*s13^3 - 
                30*s13^2*s23 - 101*s13*s23^2 - 76*s23^3) + 5*s12*s13^2*s23^
                2*(s13 + s23)^2*(s13^3 + 5*s13^2*s23 + 3*s13*s23^2 - 
                2*s23^3) + s12^7*(18*s13^3 - 27*s13^2*s23 + 60*s13*s23^2 + 
                65*s23^3) + s12^6*(36*s13^4 - 63*s13^3*s23 - 161*s13^2*
                 s23^2 + 59*s13*s23^3 + 81*s23^4) + s12^5*(18*s13^5 - 
                63*s13^4*s23 - 635*s13^3*s23^2 - 868*s13^2*s23^3 - 
                501*s13*s23^4 - 147*s23^5) - s12^3*s23^2*(110*s13^5 + 
                752*s13^4*s23 + 1609*s13^3*s23^2 + 1596*s13^2*s23^3 + 
                743*s13*s23^4 + 114*s23^5) - s12^4*s23*(27*s13^5 + 
                529*s13^4*s23 + 1562*s13^3*s23^2 + 1834*s13^2*s23^3 + 
                1091*s13*s23^4 + 277*s23^5)) + p3q^7*s12^4*(s12 + s13)*
             (s12 + s23)*(s13 + s23)*(5*s12^7*s23^2 + s13^3*(65*s13 - 
                114*s23)*s23^3*(s13 + s23)^2 + 5*s12^6*s23^2*(2*s13 + 
                5*s23) + s12*s13^2*s23^2*(60*s13^4 - s13^3*s23 - 
                500*s13^2*s23^2 - 591*s13*s23^3 - 152*s23^4) + 
              s12^5*(18*s13^4 - 45*s13^3*s23 - 65*s13^2*s23^2 + 
                25*s13*s23^3 + 45*s23^4) - s12^2*s13*s23*(27*s13^5 + 
                134*s13^4*s23 + 734*s13^3*s23^2 + 1100*s13^2*s23^3 + 
                496*s13*s23^4 + 10*s23^5) + s12^4*(36*s13^5 - 99*s13^4*s23 - 
                430*s13^3*s23^2 - 322*s13^2*s23^3 + 10*s13*s23^4 + 
                35*s23^5) + s12^3*(18*s13^6 - 81*s13^5*s23 - 554*s13^4*
                 s23^2 - 1008*s13^3*s23^3 - 601*s13^2*s23^4 - 15*s13*s23^5 + 
                10*s23^6)) + p2q^6*p3q*s13^3*(5*s13^4*s23^3*(s13 + s23)^4*(
                11*s13^2 + 3*s13*s23 - 2*s23^2) + s12*s13^4*s23^2*(s13 + s23)^
                3*(55*s13^3 + 263*s13^2*s23 + 305*s13*s23^2 + 132*s23^3) + 
              s12^9*(-72*s13^4 + 258*s13^2*s23^2 + 242*s13*s23^3 + 
                16*s23^4) + s12^2*s13^2*s23^2*(s13 + s23)^2*(198*s13^5 + 
                1499*s13^4*s23 + 2822*s13^3*s23^2 + 1870*s13^2*s23^3 + 
                488*s13*s23^4 + 144*s23^5) + s12^8*(-180*s13^5 + 
                468*s13^4*s23 + 3365*s13^3*s23^2 + 5083*s13^2*s23^3 + 
                2763*s13*s23^4 + 397*s23^5) - s12^3*s13*s23*(s13 + s23)^2*(
                27*s13^6 - 1259*s13^5*s23 - 4660*s13^4*s23^2 - 7553*s13^3*
                 s23^3 - 5027*s13^2*s23^4 - 1117*s13*s23^5 - 230*s23^6) + 
              s12^7*(-126*s13^6 + 1962*s13^5*s23 + 13102*s13^4*s23^2 + 
                26528*s13^3*s23^3 + 22867*s13^2*s23^4 + 7884*s13*s23^5 + 
                611*s23^6) + s12^4*(s13 + s23)^2*(18*s13^7 + 207*s13^6*s23 + 
                2587*s13^5*s23^2 + 11456*s13^4*s23^3 + 16297*s13^3*s23^4 + 
                7498*s13^2*s23^5 + 823*s13*s23^6 + 96*s23^7) + 
              s12^6*(18*s13^7 + 1737*s13^6*s23 + 16360*s13^5*s23^2 + 
                47894*s13^4*s23^3 + 61946*s13^3*s23^4 + 37184*s13^2*s23^5 + 
                8682*s13*s23^6 + 191*s23^7) + s12^5*(54*s13^8 + 513*s13^7*
                 s23 + 8142*s13^6*s23^2 + 37235*s13^5*s23^3 + 70844*s13^4*
                 s23^4 + 64314*s13^3*s23^5 + 27029*s13^2*s23^6 + 
                4104*s13*s23^7 + 57*s23^8)) + p2q^5*p3q^2*s13^2*
             (5*s13^5*s23^3*(s13 + s23)^4*(10*s13^2 - 9*s13*s23 - 4*s23^2) + 
              s12*s13^4*s23^2*(s13 + s23)^3*(50*s13^4 + 175*s13^3*s23 + 
                226*s13^2*s23^2 - 26*s13*s23^3 - 172*s23^4) + 
              s12^10*(108*s13^4 - 410*s13^2*s23^2 - 241*s13*s23^3 + 
                11*s23^4) + s12^2*s13^3*s23^2*(s13 + s23)^2*(180*s13^5 + 
                1896*s13^4*s23 + 3390*s13^3*s23^2 + 777*s13^2*s23^3 - 
                1096*s13*s23^4 - 229*s23^5) + s12^9*(180*s13^5 - 
                972*s13^4*s23 - 3840*s13^3*s23^2 - 4613*s13^2*s23^3 - 
                2181*s13*s23^4 - 176*s23^5) - s12^3*s13^2*s23*(s13 + s23)^2*(
                54*s13^6 - 1783*s13^5*s23 - 4587*s13^4*s23^2 - 6993*s13^3*
                 s23^3 - 1851*s13^2*s23^4 + 3849*s13*s23^5 + 566*s23^6) - 
              s12^8*(18*s13^6 + 3735*s13^5*s23 + 16633*s13^4*s23^2 + 
                27486*s13^3*s23^3 + 20967*s13^2*s23^4 + 7171*s13*s23^5 + 
                674*s23^6) - s12^7*(198*s13^7 + 99*s13^6*s23 + 8602*s13^5*
                 s23^2 + 35273*s13^4*s23^3 + 56990*s13^3*s23^4 + 
                43392*s13^2*s23^5 + 13670*s13*s23^6 + 856*s23^7) - 
              s12^6*(126*s13^8 - 2025*s13^7*s23 - 13016*s13^6*s23^2 - 
                14079*s13^5*s23^3 + 24603*s13^4*s23^4 + 64298*s13^3*s23^5 + 
                49997*s13^2*s23^6 + 13915*s13*s23^7 + 449*s23^8) + 
              s12^4*s13*(36*s13^9 + 198*s13^8*s23 + 1213*s13^7*s23^2 + 
                14110*s13^6*s23^3 + 37906*s13^5*s23^4 + 31886*s13^4*s23^5 - 
                7621*s13^3*s23^6 - 23711*s13^2*s23^7 - 9620*s13*s23^8 - 
                569*s23^9) + s12^5*(18*s13^9 - 387*s13^8*s23 + 7183*s13^7*
                 s23^2 + 33690*s13^6*s23^3 + 42164*s13^5*s23^4 - 
                7033*s13^4*s23^5 - 49633*s13^3*s23^6 - 32423*s13^2*s23^7 - 
                6045*s13*s23^8 - 80*s23^9)) + p2q^2*p3q^5*s12^2*
             (50*s12^11*s23^2*(s13 + s23) + s13^5*s23^4*(s13 + s23)^3*(
                11*s13^2 - 209*s13*s23 - 80*s23^2) + s12^10*(36*s13^4 - 
                54*s13^3*s23 + 180*s13^2*s23^2 + 325*s13*s23^3 + 155*s23^4) - 
              s12*s13^4*s23^3*(s13 + s23)^2*(241*s13^4 + 1699*s13^3*s23 + 
                3532*s13^2*s23^2 + 4907*s13*s23^3 + 569*s23^4) + 
              s12^9*(18*s13^5 + 198*s13^4*s23 + 1675*s13^3*s23^2 + 
                2256*s13^2*s23^3 + 901*s13*s23^4 + 100*s23^5) + 
              s12^8*(-126*s13^6 - 387*s13^5*s23 + 1213*s13^4*s23^2 + 
                8099*s13^3*s23^3 + 7362*s13^2*s23^4 + 1227*s13*s23^5 - 
                150*s23^6) + s12^7*(-198*s13^7 + 2025*s13^6*s23 + 
                7183*s13^5*s23^2 + 14110*s13^4*s23^3 + 17950*s13^3*s23^4 + 
                9453*s13^2*s23^5 + 603*s13*s23^6 - 250*s23^7) - 
              s12^3*s13^2*s23^2*(3840*s13^7 + 27486*s13^6*s23 + 56990*s13^5*
                 s23^2 + 64298*s13^4*s23^3 + 49633*s13^3*s23^4 + 
                23711*s13^2*s23^5 + 4981*s13*s23^6 + 229*s23^7) - 
              s12^2*s13^3*s23^2*(410*s13^7 + 4613*s13^6*s23 + 20967*s13^5*
                 s23^2 + 43392*s13^4*s23^3 + 49997*s13^3*s23^4 + 
                32423*s13^2*s23^5 + 9620*s13*s23^6 + 566*s23^7) + 
              s12^6*(-18*s13^8 - 99*s13^7*s23 + 13016*s13^6*s23^2 + 
                33690*s13^5*s23^3 + 37906*s13^4*s23^4 + 20424*s13^3*s23^5 + 
                3848*s13^2*s23^6 - 368*s13*s23^7 - 125*s23^8) + 
              s12^4*s13*(108*s13^9 - 972*s13^8*s23 - 16633*s13^7*s23^2 - 
                35273*s13^6*s23^3 - 24603*s13^5*s23^4 - 7033*s13^4*s23^5 - 
                7621*s13^3*s23^6 - 6413*s13^2*s23^7 - 1554*s13*s23^8 - 
                172*s23^9) + s12^5*(180*s13^9 - 3735*s13^8*s23 - 
                8602*s13^7*s23^2 + 14079*s13^6*s23^3 + 42164*s13^5*s23^4 + 
                31886*s13^4*s23^5 + 6846*s13^3*s23^6 - 1644*s13^2*s23^7 - 
                542*s13*s23^8 - 20*s23^9)) + p2q*p3q^6*s12^3*
             (55*s12^10*s23^2*(s13 + s23) + s13^4*s23^4*(s13 + s23)^2*(
                16*s13^3 + 365*s13^2*s23 - 135*s13*s23^2 + 96*s23^3) + 
              s12^9*(18*s13^4 - 27*s13^3*s23 + 198*s13^2*s23^2 + 
                428*s13*s23^3 + 235*s23^4) + s12^8*(54*s13^5 + 243*s13^4*
                 s23 + 1205*s13^3*s23^2 + 1895*s13^2*s23^3 + 1259*s13*s23^4 + 
                380*s23^5) + s12*s13^3*s23^3*(242*s13^6 + 2763*s13^5*s23 + 
                7884*s13^4*s23^2 + 8682*s13^3*s23^3 + 4104*s13^2*s23^4 + 
                1015*s13*s23^5 + 230*s23^6) + s12^7*(18*s13^6 + 513*s13^5*
                 s23 + 3019*s13^4*s23^2 + 7151*s13^3*s23^3 + 6018*s13^2*
                 s23^4 + 1891*s13*s23^5 + 270*s23^6) + s12^3*s13^2*s23^2*(
                3365*s13^6 + 26528*s13^5*s23 + 61946*s13^4*s23^2 + 
                64314*s13^3*s23^3 + 32116*s13^2*s23^4 + 7491*s13*s23^5 + 
                776*s23^6) + s12^6*(-126*s13^7 + 1737*s13^6*s23 + 
                8142*s13^5*s23^2 + 16837*s13^4*s23^3 + 18132*s13^3*s23^4 + 
                9013*s13^2*s23^5 + 1574*s13*s23^6 + 55*s23^7) + 
              s12^2*s13^2*s23^2*(258*s13^7 + 5083*s13^6*s23 + 22867*s13^5*
                 s23^2 + 37184*s13^4*s23^3 + 27029*s13^3*s23^4 + 
                9240*s13^2*s23^5 + 1577*s13*s23^6 + 144*s23^7) + 
              s12^5*(-180*s13^8 + 1962*s13^7*s23 + 16360*s13^6*s23^2 + 
                37235*s13^5*s23^3 + 41796*s13^4*s23^4 + 24793*s13^3*s23^5 + 
                7050*s13^2*s23^6 + 701*s13*s23^7 - 25*s23^8) + 
              2*s12^4*(-36*s13^9 + 234*s13^8*s23 + 6551*s13^7*s23^2 + 
                23947*s13^6*s23^3 + 35422*s13^5*s23^4 + 25774*s13^4*s23^5 + 
                9362*s13^3*s23^6 + 1495*s13^2*s23^7 + 66*s13*s23^8 - 
                5*s23^9)) + p2q^3*p3q^4*s12*(-2*s13^6*s23^4*(s13 + s23)^3*(
                21*s13^2 + 127*s13*s23 + 86*s23^2) + s12^11*(18*s13^4 - 
                27*s13^3*s23 - 3*s13^2*s23^2 - 58*s13*s23^3 - 50*s23^4) - 
              s12*s13^5*s23^3*(s13 + s23)^2*(118*s13^4 + 1017*s13^3*s23 + 
                2939*s13^2*s23^2 + 2659*s13*s23^3 + 659*s23^4) + 
              2*s12^2*s13^4*s23^2*(s13 + s23)^2*(36*s13^5 - 689*s13^4*s23 - 
                2520*s13^3*s23^2 - 6024*s13^2*s23^3 - 7209*s13*s23^4 - 
                1199*s23^5) - s12^10*(90*s13^5 + 36*s13^4*s23 - 442*s13^3*
                 s23^2 - 253*s13^2*s23^3 + 265*s13*s23^4 + 210*s23^5) - 
              s12^9*(198*s13^6 + 342*s13^5*s23 + 2073*s13^4*s23^2 + 
                937*s13^3*s23^3 + 167*s13^2*s23^4 + 859*s13*s23^5 + 
                340*s23^6) - s12^8*(18*s13^7 - 3204*s13^6*s23 - 6533*s13^5*
                 s23^2 + 1634*s13^4*s23^3 + 8422*s13^3*s23^4 + 5288*s13^2*
                 s23^5 + 1911*s13*s23^6 + 260*s23^7) + s12^3*s13^3*s23*(
                36*s13^8 - 11*s13^7*s23 - 809*s13^6*s23^2 - 28896*s13^5*
                 s23^3 - 100046*s13^4*s23^4 - 145000*s13^3*s23^5 - 
                102376*s13^2*s23^6 - 31817*s13*s23^7 - 2529*s23^8) + 
              s12^5*s13*s23*(2016*s13^8 - 15470*s13^7*s23 - 86685*s13^6*
                 s23^2 - 175368*s13^5*s23^3 - 196328*s13^4*s23^4 - 
                129618*s13^3*s23^5 - 44595*s13^2*s23^6 - 6020*s13*s23^7 - 
                344*s23^8) + s12^7*(252*s13^8 - 2511*s13^7*s23 + 
                229*s13^6*s23^2 + 529*s13^5*s23^3 - 14878*s13^4*s23^4 - 
                24440*s13^3*s23^5 - 13164*s13^2*s23^6 - 2359*s13*s23^7 - 
                90*s23^8) + s12^6*(252*s13^9 - 4626*s13^8*s23 - 30823*s13^7*
                 s23^2 - 60327*s13^6*s23^3 - 76906*s13^5*s23^4 - 
                74643*s13^4*s23^5 - 44612*s13^3*s23^6 - 13367*s13^2*s23^7 - 
                1444*s13*s23^8 - 10*s23^9) - s12^4*s13^2*(72*s13^9 - 
                630*s13^8*s23 - 4648*s13^7*s23^2 + 24776*s13^6*s23^3 + 
                123113*s13^5*s23^4 + 223457*s13^4*s23^5 + 209419*s13^3*
                 s23^6 + 99657*s13^2*s23^7 + 19936*s13*s23^8 + 952*s23^9)) - 
            p2q^4*p3q^3*s13*(10*s13^6*s23^4*(s13 + s23)^4*(5*s13 + s23) + 
              s12*s13^5*s23^3*(s13 + s23)^3*(58*s13^3 + 91*s13^2*s23 + 
                412*s13*s23^2 + 344*s23^3) + 2*s12^11*(36*s13^4 - 
                18*s13^3*s23 - 36*s13^2*s23^2 + 59*s13*s23^3 + 21*s23^4) + 
              s12^10*s23*(-630*s13^4 + 11*s13^3*s23 + 1234*s13^2*s23^2 + 
                1253*s13*s23^3 + 380*s23^4) + s12^2*s13^4*s23^2*(s13 + s23)^
                2*(3*s13^5 - 259*s13^4*s23 + 682*s13^3*s23^2 + 4183*s13^2*
                 s23^3 + 4116*s13*s23^4 + 952*s23^5) + s12^9*(-252*s13^6 - 
                2016*s13^5*s23 - 4648*s13^4*s23^2 + 809*s13^3*s23^3 + 
                7724*s13^2*s23^4 + 5091*s13*s23^5 + 1060*s23^6) + 
              s12^3*s13^3*s23*(s13 + s23)^2*(27*s13^6 - 496*s13^5*s23 + 
                1902*s13^4*s23^2 + 5114*s13^3*s23^3 + 12310*s13^2*s23^4 + 
                14878*s13*s23^5 + 2529*s23^6) + s12^8*(-252*s13^7 + 
                4626*s13^6*s23 + 15470*s13^5*s23^2 + 24776*s13^4*s23^3 + 
                28896*s13^3*s23^4 + 23506*s13^2*s23^5 + 9554*s13*s23^6 + 
                1320*s23^7) + s12^7*(18*s13^8 + 2511*s13^7*s23 + 
                30823*s13^6*s23^2 + 86685*s13^5*s23^3 + 123113*s13^4*s23^4 + 
                100046*s13^3*s23^5 + 43554*s13^2*s23^6 + 8916*s13*s23^7 + 
                770*s23^8) + s12^6*(198*s13^9 - 3204*s13^8*s23 - 
                229*s13^7*s23^2 + 60327*s13^6*s23^3 + 175368*s13^5*s23^4 + 
                223457*s13^4*s23^5 + 145000*s13^3*s23^6 + 43282*s13^2*s23^7 + 
                3977*s13*s23^8 + 172*s23^9) + s12^5*s13*(90*s13^9 + 
                342*s13^8*s23 - 6533*s13^7*s23^2 - 529*s13^6*s23^3 + 
                76906*s13^5*s23^4 + 196328*s13^4*s23^5 + 209419*s13^3*s23^6 + 
                102376*s13^2*s23^7 + 19214*s13*s23^8 + 659*s23^9) + 
              s12^4*s13^2*(-18*s13^9 + 36*s13^8*s23 + 2073*s13^7*s23^2 + 
                1634*s13^6*s23^3 + 14878*s13^5*s23^4 + 74643*s13^4*s23^5 + 
                129618*s13^3*s23^6 + 99657*s13^2*s23^7 + 31817*s13*s23^8 + 
                2398*s23^9))) + p1q*(-(p3q^6*s12^3*(s12 + s13)*(s12 + s23)*
              (5*s12^9*s23^2*(s13 + s23) - s13^4*s23^3*(s13 + s23)^3*
                (65*s13^2 + 48*s13*s23 - 116*s23^2) - s12*s13^3*s23^2*
                (s13 + s23)^2*(60*s13^4 + 51*s13^3*s23 - 20*s13^2*s23^2 - 
                 682*s13*s23^3 - 585*s23^4) + s12^8*(9*s13^4 + 9*s13^3*s23 + 
                 10*s13*s23^3 + 10*s23^4) + s12^7*(54*s13^5 - 222*s13^3*
                  s23^2 - 243*s13^2*s23^3 - 115*s13*s23^4 - 40*s23^5) + s12^6*
                (90*s13^6 - 144*s13^5*s23 - 929*s13^4*s23^2 - 1224*s13^3*
                  s23^3 - 774*s13^2*s23^4 - 375*s13*s23^5 - 130*s23^6) + 
               s12^5*(36*s13^7 - 333*s13^6*s23 - 1163*s13^5*s23^2 - 
                 1214*s13^4*s23^3 - 574*s13^3*s23^4 - 409*s13^2*s23^5 - 
                 380*s13*s23^6 - 125*s23^7) + s12^2*s13^2*s23*(27*s13^7 + 
                 232*s13^6*s23 + 965*s13^5*s23^2 + 2458*s13^4*s23^3 + 
                 4753*s13^3*s23^4 + 5562*s13^2*s23^5 + 3062*s13*s23^6 + 
                 555*s23^7) + s12^4*(-27*s13^8 - 252*s13^7*s23 - 
                 27*s13^6*s23^2 + 1373*s13^5*s23^3 + 3096*s13^4*s23^4 + 
                 3083*s13^3*s23^5 + 1087*s13^2*s23^6 - 115*s13*s23^7 - 
                 40*s23^8) + s12^3*s13*(-18*s13^8 - 27*s13^7*s23 + 
                 716*s13^6*s23^2 + 2682*s13^5*s23^3 + 5342*s13^4*s23^4 + 
                 7016*s13^3*s23^5 + 5141*s13^2*s23^6 + 1520*s13*s23^7 + 
                 10*s23^8))) - p2q^6*s13^3*(s12 + s13)*(s13 + s23)*
             (5*s13^4*s23^3*(s13 + s23)^3*(s13^2 - s13*s23 - 8*s23^2) - 
              s12^2*s13^2*s23^3*(s13 + s23)^2*(243*s13^3 + 288*s13^2*s23 - 
                410*s13*s23^2 - 555*s23^3) - s12^9*(18*s13^3 - 27*s13^2*s23 + 
                60*s13*s23^2 + 65*s23^3) + 5*s12*s13^3*s23^2*(s13 + s23)^2*(
                s13^4 - 24*s13^2*s23^2 - 27*s13*s23^3 + 2*s23^4) - 
              s12^8*(27*s13^4 + 27*s13^3*s23 - 232*s13^2*s23^2 + 
                171*s13*s23^3 + 243*s23^4) + s12^7*(36*s13^5 - 252*s13^4*
                 s23 + 716*s13^3*s23^2 + 965*s13^2*s23^3 - 142*s13*s23^4 - 
                223*s23^5) + s12^6*(90*s13^6 - 333*s13^5*s23 - 27*s13^4*
                 s23^2 + 2682*s13^3*s23^3 + 2458*s13^2*s23^4 + 671*s13*
                 s23^5 + 139*s23^6) + s12^5*(54*s13^7 - 144*s13^6*s23 - 
                1163*s13^5*s23^2 + 1373*s13^4*s23^3 + 5342*s13^3*s23^4 + 
                4753*s13^2*s23^5 + 1969*s13*s23^6 + 300*s23^7) + 
              s12^3*s13*s23*(9*s13^7 - 222*s13^6*s23 - 1224*s13^5*s23^2 - 
                574*s13^4*s23^3 + 3083*s13^3*s23^4 + 5141*s13^2*s23^5 + 
                3062*s13*s23^6 + 585*s23^7) + s12^4*(9*s13^8 - 929*s13^6*
                 s23^2 - 1214*s13^5*s23^3 + 3096*s13^4*s23^4 + 7016*s13^3*
                 s23^5 + 5562*s13^2*s23^6 + 1852*s13*s23^7 + 116*s23^8)) + 
            p2q^4*p3q^2*s13*(-5*s13^6*s23^3*(s13 + s23)^4*(10*s13^3 - 
                47*s13^2*s23 + 29*s13*s23^2 + 10*s23^3) + s12^12*(54*s13^4 - 
                9*s13^3*s23 - 119*s13^2*s23^2 + 126*s13*s23^3 + 92*s23^4) + 
              2*s12^11*s23*(-459*s13^4 - 405*s13^3*s23 + 559*s13^2*s23^2 + 
                723*s13*s23^3 + 233*s23^4) - s12*s13^5*s23^2*(s13 + s23)^3*(
                50*s13^5 + 21*s13^4*s23 - 626*s13^3*s23^2 - 1014*s13^2*
                 s23^3 - 91*s13*s23^4 + 546*s23^5) - 2*s12^10*(171*s13^6 + 
                1422*s13^5*s23 + 2809*s13^4*s23^2 + 727*s13^3*s23^3 - 
                2616*s13^2*s23^4 - 1765*s13*s23^5 - 245*s23^6) - 
              s12^2*s13^4*s23^2*(s13 + s23)^2*(216*s13^6 + 925*s13^5*s23 - 
                4565*s13^4*s23^2 - 12622*s13^3*s23^3 - 5285*s13^2*s23^4 + 
                2702*s13*s23^5 + 799*s23^6) + s12^3*s13^3*s23*(s13 + s23)^2*(
                45*s13^7 - 1272*s13^6*s23 + 5239*s13^5*s23^2 + 20157*s13^4*
                 s23^3 + 32718*s13^3*s23^4 + 15479*s13^2*s23^5 - 
                7399*s13*s23^6 - 1084*s23^7) + s12^9*(171*s13^7 + 
                5013*s13^6*s23 + 13290*s13^5*s23^2 + 20815*s13^4*s23^3 + 
                21977*s13^3*s23^4 + 10123*s13^2*s23^5 + 113*s13*s23^6 - 
                740*s23^7) + s12^8*(1881*s13^8 + 12537*s13^7*s23 + 
                44809*s13^6*s23^2 + 95519*s13^5*s23^3 + 120341*s13^4*s23^4 + 
                75114*s13^3*s23^5 + 8112*s13^2*s23^6 - 9117*s13*s23^7 - 
                1880*s23^8) + s12^7*(2286*s13^9 + 6435*s13^8*s23 + 
                25913*s13^7*s23^2 + 112061*s13^6*s23^3 + 243518*s13^5*s23^4 + 
                245255*s13^4*s23^5 + 91696*s13^3*s23^6 - 10283*s13^2*s23^7 - 
                11893*s13*s23^8 - 1358*s23^9) + s12^4*s13^2*(-45*s13^10 + 
                504*s13^9*s23 + 6203*s13^8*s23^2 + 19697*s13^7*s23^3 + 
                67417*s13^6*s23^4 + 167513*s13^5*s23^5 + 206429*s13^4*s23^6 + 
                100350*s13^3*s23^7 - 6283*s13^2*s23^8 - 15756*s13*s23^9 - 
                1413*s23^10) + s12^5*s13*(-9*s13^10 + 4113*s13^9*s23 + 
                9775*s13^8*s23^2 + 18763*s13^7*s23^3 + 115075*s13^6*s23^4 + 
                293430*s13^5*s23^5 + 294821*s13^4*s23^6 + 93817*s13^3*s23^7 - 
                21881*s13^2*s23^8 - 13588*s13*s23^9 - 966*s23^10) + 
              s12^6*(900*s13^10 + 4500*s13^9*s23 + 1877*s13^8*s23^2 + 
                43565*s13^7*s23^3 + 216536*s13^6*s23^4 + 361225*s13^5*s23^5 + 
                241267*s13^4*s23^6 + 32003*s13^3*s23^7 - 24442*s13^2*s23^8 - 
                5839*s13*s23^9 - 334*s23^10)) + p2q^2*p3q^4*s12*
             (-50*s12^13*s23^2*(s13 + s23) + 2*s13^6*s23^4*(s13 + s23)^3*(
                46*s13^3 + 95*s13^2*s23 - 178*s13*s23^2 - 167*s23^3) + 
              s12^12*(-45*s13^4 + 45*s13^3*s23 - 216*s13^2*s23^2 - 
                171*s13*s23^3 + 35*s23^4) + s12*s13^5*s23^3*(s13 + s23)^2*(
                126*s13^5 + 1194*s13^4*s23 + 1016*s13^3*s23^2 - 3113*s13^2*
                 s23^3 - 3907*s13*s23^4 - 966*s23^5) + s12^11*(-9*s13^5 + 
                504*s13^4*s23 - 1182*s13^3*s23^2 - 1357*s13^2*s23^3 + 
                413*s13*s23^4 + 495*s23^5) + s12^10*(900*s13^6 + 
                4113*s13^5*s23 + 6203*s13^4*s23^2 + 2740*s13^3*s23^3 + 
                2499*s13^2*s23^4 + 2779*s13*s23^5 + 580*s23^6) - 
              s12^2*s13^4*s23^2*(s13 + s23)^2*(119*s13^6 - 1356*s13^5*s23 - 
                2639*s13^4*s23^2 - 3489*s13^3*s23^3 + 1505*s13^2*s23^4 + 
                10762*s13*s23^5 + 1413*s23^6) + s12^9*(2286*s13^7 + 
                4500*s13^6*s23 + 9775*s13^5*s23^2 + 19697*s13^4*s23^3 + 
                29363*s13^3*s23^4 + 20827*s13^2*s23^5 + 4990*s13*s23^6 - 
                180*s23^7) + s12^8*(1881*s13^8 + 6435*s13^7*s23 + 
                1877*s13^6*s23^2 + 18763*s13^5*s23^3 + 67417*s13^4*s23^4 + 
                78271*s13^3*s23^5 + 35094*s13^2*s23^6 + 3395*s13*s23^7 - 
                645*s23^8) + s12^5*s13*s23*(-2844*s13^9 + 13290*s13^8*s23 + 
                95519*s13^7*s23^2 + 243518*s13^6*s23^3 + 361225*s13^5*s23^4 + 
                294821*s13^4*s23^5 + 100350*s13^3*s23^6 - 403*s13^2*s23^7 - 
                4300*s13*s23^8 - 546*s23^9) + s12^7*(171*s13^9 + 
                12537*s13^8*s23 + 25913*s13^7*s23^2 + 43565*s13^6*s23^3 + 
                115075*s13^5*s23^4 + 167513*s13^4*s23^5 + 101072*s13^3*
                 s23^6 + 20490*s13^2*s23^7 - 351*s13*s23^8 - 345*s23^9) - 
              s12^3*s13^3*s23*(9*s13^9 + 810*s13^8*s23 + 1454*s13^7*s23^2 - 
                21977*s13^6*s23^3 - 75114*s13^5*s23^4 - 91696*s13^4*s23^5 - 
                32003*s13^3*s23^6 + 21881*s13^2*s23^7 + 15756*s13*s23^8 + 
                1084*s23^9) + s12^4*s13^2*(54*s13^10 - 918*s13^9*s23 - 
                5618*s13^8*s23^2 + 20815*s13^7*s23^3 + 120341*s13^6*s23^4 + 
                245255*s13^5*s23^5 + 241267*s13^4*s23^6 + 93817*s13^3*s23^7 - 
                6283*s13^2*s23^8 - 9567*s13*s23^9 - 799*s23^10) + 
              s12^6*(-342*s13^10 + 5013*s13^9*s23 + 44809*s13^8*s23^2 + 
                112061*s13^7*s23^3 + 216536*s13^6*s23^4 + 293430*s13^5*
                 s23^5 + 206429*s13^4*s23^6 + 56277*s13^3*s23^7 - 
                918*s13^2*s23^8 - 1547*s13*s23^9 - 50*s23^10)) + 
            p2q*p3q^5*s12^2*(-55*s12^12*s23^2*(s13 + s23) + 
              s13^5*s23^4*(s13 + s23)^3*(81*s13^3 + 120*s13^2*s23 - 
                59*s13*s23^2 + 2*s23^3) + s12^11*(-36*s13^4 + 9*s13^3*s23 - 
                174*s13^2*s23^2 - 154*s13*s23^3 + 15*s23^4) - 
              s12^10*(252*s13^5 + 225*s13^4*s23 + 824*s13^3*s23^2 + 
                377*s13^2*s23^3 - 964*s13*s23^4 - 680*s23^5) + 
              s12*s13^4*s23^3*(s13 + s23)^2*(367*s13^5 + 1687*s13^4*s23 + 
                3898*s13^3*s23^2 + 4240*s13^2*s23^3 + 241*s13*s23^4 + 
                303*s23^5) + s12^9*(-450*s13^6 - 99*s13^5*s23 + 1555*s13^4*
                 s23^2 + 2583*s13^3*s23^3 + 4893*s13^2*s23^4 + 4684*s13*
                 s23^5 + 1440*s23^6) + s12^8*(-126*s13^7 - 1764*s13^6*s23 + 
                2690*s13^5*s23^2 + 15914*s13^4*s23^3 + 26818*s13^3*s23^4 + 
                21533*s13^2*s23^5 + 8136*s13*s23^6 + 1185*s23^7) + 
              s12^7*(288*s13^8 - 3294*s13^7*s23 - 8278*s13^6*s23^2 + 
                18064*s13^5*s23^3 + 66315*s13^4*s23^4 + 72743*s13^3*s23^5 + 
                35342*s13^2*s23^6 + 7079*s13*s23^7 + 335*s23^8) + 
              s12^2*s13^3*s23^2*(291*s13^8 + 4215*s13^7*s23 + 20648*s13^6*
                 s23^2 + 51199*s13^5*s23^3 + 72855*s13^4*s23^4 + 
                56794*s13^3*s23^5 + 21412*s13^2*s23^6 + 3674*s13*s23^7 + 
                676*s23^8) + s12^6*(144*s13^9 - 81*s13^8*s23 - 9962*s13^7*
                 s23^2 + 7223*s13^6*s23^3 + 91625*s13^5*s23^4 + 148461*s13^4*
                 s23^5 + 98028*s13^3*s23^6 + 28119*s13^2*s23^7 + 
                3107*s13*s23^8 - 50*s23^9) + s12^3*s13^2*s23*(-9*s13^9 + 
                2741*s13^8*s23 + 21528*s13^7*s23^2 + 68959*s13^6*s23^3 + 
                140711*s13^5*s23^4 + 170914*s13^4*s23^5 + 110091*s13^3*
                 s23^6 + 33714*s13^2*s23^7 + 4592*s13*s23^8 + 385*s23^9) + 
              s12^5*(-90*s13^10 + 1737*s13^9*s23 + 6104*s13^8*s23^2 + 
                22202*s13^7*s23^3 + 106875*s13^6*s23^4 + 208625*s13^5*s23^5 + 
                179995*s13^4*s23^6 + 70417*s13^3*s23^7 + 11220*s13^2*s23^8 + 
                523*s13*s23^9 - 30*s23^10) + s12^4*s13*(-54*s13^10 + 
                414*s13^9*s23 + 9808*s13^8*s23^2 + 37850*s13^7*s23^3 + 
                109162*s13^6*s23^4 + 211806*s13^5*s23^5 + 222211*s13^4*
                 s23^6 + 114022*s13^3*s23^7 + 25646*s13^2*s23^8 + 
                2391*s13*s23^9 - 20*s23^10)) + p2q^5*p3q*s13^2*
             (-5*s13^5*s23^3*(s13 + s23)^4*(11*s13^3 - 47*s13^2*s23 - 
                14*s13*s23^2 + 6*s23^3) + s12^11*(-54*s13^4 - 9*s13^3*s23 + 
                291*s13^2*s23^2 + 367*s13*s23^3 + 81*s23^4) - 
              s12*s13^4*s23^2*(s13 + s23)^3*(55*s13^5 - 11*s13^4*s23 - 
                1096*s13^3*s23^2 - 1418*s13^2*s23^3 - 583*s13*s23^4 + 
                20*s23^5) + s12^10*(-90*s13^5 + 414*s13^4*s23 + 2741*s13^3*
                 s23^2 + 4215*s13^2*s23^3 + 2421*s13*s23^4 + 363*s23^5) - 
              s12^2*s13^3*s23^2*(s13 + s23)^2*(174*s13^6 + 29*s13^5*s23 - 
                5125*s13^4*s23^2 - 11312*s13^3*s23^3 - 7593*s13^2*s23^4 - 
                1621*s13*s23^5 - 385*s23^6) + s12^9*(144*s13^6 + 
                1737*s13^5*s23 + 9808*s13^4*s23^2 + 21528*s13^3*s23^3 + 
                20648*s13^2*s23^4 + 7639*s13*s23^5 + 544*s23^6) + 
              s12^8*(288*s13^7 - 81*s13^6*s23 + 6104*s13^5*s23^2 + 
                37850*s13^4*s23^3 + 68959*s13^3*s23^4 + 51199*s13^2*s23^5 + 
                13723*s13*s23^6 + 266*s23^7) + s12^3*s13^2*s23*(s13 + s23)^2*(
                9*s13^7 - 842*s13^6*s23 + 4258*s13^5*s23^2 + 19144*s13^4*
                 s23^3 + 30197*s13^3*s23^4 + 18490*s13^2*s23^5 + 
                3240*s13*s23^6 + 676*s23^7) + s12^7*(-126*s13^8 - 
                3294*s13^7*s23 - 9962*s13^6*s23^2 + 22202*s13^5*s23^3 + 
                109162*s13^4*s23^4 + 140711*s13^3*s23^5 + 72855*s13^2*s23^6 + 
                12619*s13*s23^7 - 51*s23^8) + s12^6*(-450*s13^9 - 
                1764*s13^8*s23 - 8278*s13^7*s23^2 + 7223*s13^6*s23^3 + 
                106875*s13^5*s23^4 + 211806*s13^4*s23^5 + 170914*s13^3*
                 s23^6 + 56794*s13^2*s23^7 + 5025*s13*s23^8 - 53*s23^9) + 
              s12^5*(-252*s13^10 - 99*s13^9*s23 + 2690*s13^8*s23^2 + 
                18064*s13^7*s23^3 + 91625*s13^6*s23^4 + 208625*s13^5*s23^5 + 
                222211*s13^4*s23^6 + 110091*s13^3*s23^7 + 21412*s13^2*s23^8 + 
                847*s13*s23^9 + 2*s23^10) + s12^4*s13*(-36*s13^10 - 
                225*s13^9*s23 + 1555*s13^8*s23^2 + 15914*s13^7*s23^3 + 
                66315*s13^6*s23^4 + 148461*s13^5*s23^5 + 179995*s13^4*s23^6 + 
                114022*s13^3*s23^7 + 33714*s13^2*s23^8 + 3674*s13*s23^9 + 
                303*s23^10)) - p2q^3*p3q^3*(-10*s13^7*s23^4*(s13 + s23)^4*(
                5*s13^2 - 13*s13*s23 - 2*s23^2) - s12*s13^6*s23^3*(s13 + s23)^
                3*(8*s13^4 + 3*s13^3*s23 + 218*s13^2*s23^2 - 782*s13*s23^3 - 
                860*s23^4) + s12^13*(18*s13^4 - 27*s13^3*s23 + 47*s13^2*
                 s23^2 - 8*s13*s23^3 - 50*s23^4) - s12^12*(90*s13^5 + 
                414*s13^4*s23 - 408*s13^3*s23^2 - 455*s13^2*s23^3 + 
                27*s13*s23^4 + 70*s23^5) - s12^11*(252*s13^6 + 324*s13^5*
                 s23 + 2052*s13^4*s23^2 + 2660*s13^3*s23^3 + 1461*s13^2*
                 s23^4 + 251*s13*s23^5 - 240*s23^6) + s12^2*s13^5*s23^2*
               (s13 + s23)^2*(47*s13^6 + 361*s13^5*s23 - 2230*s13^4*s23^2 - 
                4067*s13^3*s23^3 + 4963*s13^2*s23^4 + 8333*s13*s23^5 + 
                2152*s23^6) - s12^3*s13^4*s23*(s13 + s23)^2*(27*s13^7 - 
                462*s13^6*s23 + 3557*s13^5*s23^2 + 6345*s13^4*s23^3 + 
                7557*s13^3*s23^4 - 6407*s13^2*s23^5 - 21494*s13*s23^6 - 
                3476*s23^7) + s12^10*(972*s13^7 + 9270*s13^6*s23 + 
                15592*s13^5*s23^2 + 3284*s13^4*s23^3 - 12997*s13^3*s23^4 - 
                8166*s13^2*s23^5 + 111*s13*s23^6 + 660*s23^7) + 
              s12^9*(3384*s13^8 + 13959*s13^7*s23 + 35205*s13^6*s23^2 + 
                29076*s13^5*s23^3 - 11448*s13^4*s23^4 - 23804*s13^3*s23^5 - 
                5401*s13^2*s23^6 + 2549*s13*s23^7 + 590*s23^8) + 
              s12^8*(3384*s13^9 + 9504*s13^8*s23 + 11432*s13^7*s23^2 - 
                9529*s13^6*s23^3 - 63477*s13^5*s23^4 - 75162*s13^4*s23^5 - 
                15052*s13^3*s23^6 + 14192*s13^2*s23^7 + 4708*s13*s23^8 + 
                210*s23^9) + s12^7*(972*s13^10 + 13959*s13^9*s23 + 
                11432*s13^8*s23^2 - 63316*s13^7*s23^3 - 200828*s13^6*s23^4 - 
                234085*s13^5*s23^5 - 89136*s13^4*s23^6 + 26751*s13^3*s23^7 + 
                23781*s13^2*s23^8 + 3362*s13*s23^9 + 20*s23^10) + 
              s12^6*s13*(-252*s13^10 + 9270*s13^9*s23 + 35205*s13^8*s23^2 - 
                9529*s13^7*s23^3 - 200828*s13^6*s23^4 - 346964*s13^5*s23^5 - 
                212782*s13^4*s23^6 + 10390*s13^3*s23^7 + 52871*s13^2*s23^8 + 
                12637*s13*s23^9 + 860*s23^10) + 2*s12^4*s13^3*(9*s13^10 - 
                207*s13^9*s23 - 1026*s13^8*s23^2 + 1642*s13^7*s23^3 - 
                5724*s13^6*s23^4 - 37581*s13^5*s23^5 - 44568*s13^4*s23^6 + 
                5195*s13^3*s23^7 + 37761*s13^2*s23^8 + 19141*s13*s23^9 + 
                1738*s23^10) + s12^5*s13^2*(-90*s13^10 - 324*s13^9*s23 + 
                15592*s13^8*s23^2 + 29076*s13^7*s23^3 - 63477*s13^6*s23^4 - 
                234085*s13^5*s23^5 - 212782*s13^4*s23^6 - 6316*s13^3*s23^7 + 
                75522*s13^2*s23^8 + 28446*s13*s23^9 + 2152*s23^10))) + 
          p1q^4*s23*(-(p3q^3*(s12 + s23)*(s13 + s23)*(40*s13^6*s23^5*
                (s13 + s23)^3 - s12*s13^4*s23^4*(s13 + s23)^2*(83*s13^3 + 
                 83*s13^2*s23 - 202*s13*s23^2 - 162*s23^3) + s12^10*
                (9*s13^4 - 10*s13^2*s23^2 + 10*s23^4) + s12^9*(36*s13^5 - 
                 64*s13^4*s23 - 333*s13^3*s23^2 - 359*s13^2*s23^3 - 
                 140*s13*s23^4 - 25*s23^5) + s12^8*(54*s13^6 - 445*s13^5*
                  s23 - 1913*s13^4*s23^2 - 2380*s13^3*s23^3 - 1319*s13^2*
                  s23^4 - 460*s13*s23^5 - 125*s23^6) + s12^2*s13^3*s23^3*
                (-132*s13^6 - 1157*s13^5*s23 - 2509*s13^4*s23^2 - 
                 1623*s13^3*s23^3 + 394*s13^2*s23^4 + 694*s13*s23^5 + 
                 161*s23^6) - s12^4*s13^2*s23*(54*s13^7 + 292*s13^6*s23 + 
                 2122*s13^5*s23^2 + 5740*s13^4*s23^3 + 5718*s13^3*s23^4 + 
                 1017*s13^2*s23^5 - 1241*s13*s23^6 - 396*s23^7) + s12^7*
                (36*s13^7 - 1005*s13^6*s23 - 4019*s13^5*s23^2 - 5541*s13^4*
                  s23^3 - 3744*s13^3*s23^4 - 1499*s13^2*s23^5 - 465*s13*
                  s23^6 - 125*s23^7) - s12^3*s13^2*s23^2*(23*s13^7 + 
                 816*s13^6*s23 + 3938*s13^5*s23^2 + 6203*s13^4*s23^3 + 
                 3253*s13^3*s23^4 - 360*s13^2*s23^5 - 544*s13*s23^6 + 
                 11*s23^7) + s12^6*(9*s13^8 - 985*s13^7*s23 - 3827*s13^6*
                  s23^2 - 6093*s13^5*s23^3 - 4771*s13^4*s23^4 - 1444*s13^3*
                  s23^5 - 9*s13^2*s23^6 - 110*s13*s23^7 - 25*s23^8) + s12^5*
                s23*(-415*s13^8 - 1667*s13^7*s23 - 4011*s13^6*s23^2 - 
                 5072*s13^5*s23^3 - 2115*s13^4*s23^4 + 1111*s13^3*s23^5 + 
                 927*s13^2*s23^6 + 35*s13*s23^7 + 10*s23^8))) + 
            p2q^3*(s13 + s23)*(-5*s13^5*s23^5*(s13 + s23)^3*(2*s13^2 - 
                11*s13*s23 + 2*s23^2) - 5*s12*s13^5*s23^4*(s13 + s23)^2*(
                2*s13^3 - 37*s13^2*s23 - 45*s13*s23^2 + 9*s23^3) + 
              s12^10*s23*(54*s13^4 + 23*s13^3*s23 + 132*s13^2*s23^2 + 
                83*s13*s23^3 - 40*s23^4) + s12^2*s13^3*s23^3*(s13 + s23)^2*(
                10*s13^5 + 479*s13^4*s23 + 811*s13^3*s23^2 - 137*s13^2*
                 s23^3 - 418*s13*s23^4 + 11*s23^5) + s12^9*(-9*s13^6 + 
                415*s13^5*s23 + 346*s13^4*s23^2 + 839*s13^3*s23^3 + 
                1289*s13^2*s23^4 + 332*s13*s23^5 - 160*s23^6) + 
              s12^8*(-36*s13^7 + 976*s13^6*s23 + 2082*s13^5*s23^2 + 
                2414*s13^4*s23^3 + 4754*s13^3*s23^4 + 3666*s13^2*s23^5 + 
                296*s13*s23^6 - 240*s23^7) + s12^3*s13^2*s23^2*(10*s13^8 + 
                692*s13^7*s23 + 3699*s13^6*s23^2 + 5243*s13^5*s23^3 + 
                1453*s13^4*s23^4 - 2038*s13^3*s23^5 - 1637*s13^2*s23^6 - 
                533*s13*s23^7 - 161*s23^8) + s12^7*(-54*s13^8 + 969*s13^7*
                 s23 + 4812*s13^6*s23^2 + 5678*s13^5*s23^3 + 7862*s13^4*
                 s23^4 + 10141*s13^3*s23^5 + 4132*s13^2*s23^6 - 
                436*s13*s23^7 - 160*s23^8) + s12^5*s13*(-9*s13^9 + 
                28*s13^8*s23 + 2358*s13^7*s23^2 + 9560*s13^6*s23^3 + 
                10864*s13^5*s23^4 + 7187*s13^4*s23^5 + 6735*s13^3*s23^6 + 
                2893*s13^2*s23^7 - 1088*s13*s23^8 - 688*s23^9) + 
              s12^4*s13*s23*(-9*s13^9 + 397*s13^8*s23 + 4293*s13^7*s23^2 + 
                9285*s13^6*s23^3 + 6215*s13^5*s23^4 + 1004*s13^4*s23^5 - 
                224*s13^3*s23^6 - 904*s13^2*s23^7 - 855*s13*s23^8 - 
                162*s23^9) + s12^6*(-36*s13^9 + 391*s13^8*s23 + 5024*s13^7*
                 s23^2 + 9920*s13^6*s23^3 + 9083*s13^5*s23^4 + 11458*s13^4*
                 s23^5 + 9456*s13^3*s23^6 + 1229*s13^2*s23^7 - 1009*s13*
                 s23^8 - 40*s23^9)) + p2q*p3q^2*(5*s13^5*s23^5*(s13 + s23)^4*(
                34*s13^2 - 39*s13*s23 + 6*s23^2) + s12*s13^4*s23^4*
               (s13 + s23)^3*(317*s13^4 + 907*s13^3*s23 + 934*s13^2*s23^2 + 
                225*s13*s23^3 - 324*s23^4) + s12^11*(-9*s13^5 + 
                46*s13^3*s23^2 + 346*s13^2*s23^3 + 739*s13*s23^4 + 
                430*s23^5) + s12^2*s13^3*s23^3*(s13 + s23)^2*(165*s13^6 + 
                2133*s13^5*s23 + 7984*s13^4*s23^2 + 10656*s13^3*s23^3 + 
                3747*s13^2*s23^4 - 1054*s13*s23^5 - 351*s23^6) + 
              s12^10*(-162*s13^6 + 137*s13^5*s23 + 1241*s13^4*s23^2 + 
                2373*s13^3*s23^3 + 3918*s13^2*s23^4 + 4022*s13*s23^5 + 
                1575*s23^6) + s12^3*s13^2*s23^2*(s13 + s23)^2*(27*s13^7 + 
                1718*s13^6*s23 + 11456*s13^5*s23^2 + 25214*s13^4*s23^3 + 
                20928*s13^3*s23^4 + 4367*s13^2*s23^5 - 1577*s13*s23^6 - 
                134*s23^7) + s12^9*(-126*s13^7 + 1359*s13^6*s23 + 
                7552*s13^5*s23^2 + 15397*s13^4*s23^3 + 18514*s13^3*s23^4 + 
                15727*s13^2*s23^5 + 8478*s13*s23^6 + 1975*s23^7) + 
              s12^8*(216*s13^8 + 2518*s13^7*s23 + 15261*s13^6*s23^2 + 
                41606*s13^5*s23^3 + 62256*s13^4*s23^4 + 56873*s13^3*s23^5 + 
                31319*s13^2*s23^6 + 8885*s13*s23^7 + 750*s23^8) + 
              s12^7*(207*s13^9 + 2975*s13^8*s23 + 15677*s13^7*s23^2 + 
                52134*s13^6*s23^3 + 105927*s13^5*s23^4 + 127124*s13^4*s23^5 + 
                88555*s13^3*s23^6 + 33113*s13^2*s23^7 + 4760*s13*s23^8 - 
                300*s23^9) + s12^6*(18*s13^10 + 2220*s13^9*s23 + 
                12418*s13^8*s23^2 + 42658*s13^7*s23^3 + 104239*s13^6*s23^4 + 
                162547*s13^5*s23^5 + 148654*s13^4*s23^6 + 73712*s13^3*s23^7 + 
                17032*s13^2*s23^8 + 939*s13*s23^9 - 245*s23^10) + 
              s12^4*s13*s23*(9*s13^10 + 1254*s13^9*s23 + 11379*s13^8*s23^2 + 
                46495*s13^7*s23^3 + 104499*s13^6*s23^4 + 134251*s13^5*s23^5 + 
                95020*s13^4*s23^6 + 31761*s13^3*s23^7 + 2117*s13^2*s23^8 - 
                899*s13*s23^9 - 162*s23^10) + s12^5*s23*(550*s13^10 + 
                6512*s13^9*s23 + 28712*s13^8*s23^2 + 79945*s13^7*s23^3 + 
                145003*s13^6*s23^4 + 159780*s13^5*s23^5 + 98880*s13^4*s23^6 + 
                29454*s13^3*s23^7 + 2318*s13^2*s23^8 - 293*s13*s23^9 - 
                25*s23^10)) + p2q^2*p3q*(5*s13^5*s23^5*(s13 + s23)^4*(
                86*s13^2 - 29*s13*s23 - 5*s23^2) + s12*s13^4*s23^4*
               (s13 + s23)^3*(739*s13^4 + 1805*s13^3*s23 + 846*s13^2*s23^2 + 
                193*s13*s23^3 - 162*s23^4) + s12^11*s23*(9*s13^4 + 
                27*s13^3*s23 + 165*s13^2*s23^2 + 317*s13*s23^3 + 170*s23^4) + 
              s12^2*s13^3*s23^3*(s13 + s23)^2*(346*s13^6 + 3226*s13^5*s23 + 
                8929*s13^4*s23^2 + 10235*s13^3*s23^3 + 3714*s13^2*s23^4 - 
                631*s13*s23^5 - 134*s23^6) + s12^10*(18*s13^6 + 550*s13^5*
                 s23 + 1254*s13^4*s23^2 + 1772*s13^3*s23^3 + 2463*s13^2*
                 s23^4 + 1858*s13*s23^5 + 485*s23^6) + s12^3*s13^2*s23^2*
               (s13 + s23)^2*(46*s13^7 + 2281*s13^6*s23 + 13906*s13^5*s23^2 + 
                26780*s13^4*s23^3 + 21089*s13^3*s23^4 + 4754*s13^2*s23^5 - 
                1143*s13*s23^6 - 351*s23^7) + s12^9*(207*s13^7 + 
                2220*s13^6*s23 + 6512*s13^5*s23^2 + 11379*s13^4*s23^3 + 
                14919*s13^3*s23^4 + 12415*s13^2*s23^5 + 4606*s13*s23^6 + 
                270*s23^7) + s12^8*(216*s13^8 + 2975*s13^7*s23 + 
                12418*s13^6*s23^2 + 28712*s13^5*s23^3 + 46495*s13^4*s23^4 + 
                49844*s13^3*s23^5 + 28757*s13^2*s23^6 + 6065*s13*s23^7 - 
                370*s23^8) + s12^7*(-126*s13^9 + 2518*s13^8*s23 + 
                15677*s13^7*s23^2 + 42658*s13^6*s23^3 + 79945*s13^5*s23^4 + 
                104499*s13^4*s23^5 + 82812*s13^3*s23^6 + 33043*s13^2*s23^7 + 
                4060*s13*s23^8 - 430*s23^9) + s12^4*s13*s23^2*(1241*s13^9 + 
                15397*s13^8*s23 + 62256*s13^7*s23^2 + 127124*s13^6*s23^3 + 
                148654*s13^5*s23^4 + 98880*s13^4*s23^5 + 31761*s13^3*s23^6 + 
                1079*s13^2*s23^7 - 1756*s13*s23^8 - 324*s23^9) + 
              s12^6*(-162*s13^10 + 1359*s13^9*s23 + 15261*s13^8*s23^2 + 
                52134*s13^7*s23^3 + 104239*s13^6*s23^4 + 145003*s13^5*s23^5 + 
                134251*s13^4*s23^6 + 71437*s13^3*s23^7 + 17096*s13^2*s23^8 + 
                637*s13*s23^9 - 75*s23^10) + s12^5*(-9*s13^11 + 137*s13^10*
                 s23 + 7552*s13^9*s23^2 + 41606*s13^8*s23^3 + 105927*s13^7*
                 s23^4 + 162547*s13^6*s23^5 + 159780*s13^5*s23^6 + 
                95020*s13^4*s23^7 + 28085*s13^3*s23^8 + 1288*s13^2*s23^9 - 
                747*s13*s23^10 + 30*s23^11))) + 
          p1q^2*(-(p3q^5*s12^2*(s12 + s13)*(s12 + s23)*(s13 + s23)*
              (5*s13^4*s23^4*(s13 + s23)^2*(23*s13^2 + 47*s13*s23 + 
                 32*s23^2) + 3*s12^9*(3*s13^3 - 5*s13*s23^2 - 5*s23^3) + 
               s12^8*(27*s13^4 - 27*s13^3*s23 - 103*s13^2*s23^2 - 
                 95*s13*s23^3 - 75*s23^4) - s12^7*s23*(144*s13^4 + 
                 29*s13^3*s23 - 127*s13^2*s23^2 + 60*s13*s23^3 + 75*s23^4) + 
               s12*s13^3*s23^3*(23*s13^5 + 652*s13^4*s23 + 2136*s13^3*s23^2 + 
                 2288*s13^2*s23^3 + 621*s13*s23^4 - 160*s23^5) + s12^2*s13^2*
                s23^2*(-86*s13^6 + 123*s13^5*s23 + 1507*s13^4*s23^2 + 
                 3060*s13^3*s23^3 + 1446*s13^2*s23^4 - 941*s13*s23^5 - 
                 625*s23^6) + s12^6*(-72*s13^6 - 153*s13^5*s23 + 1015*s13^4*
                  s23^2 + 2347*s13^3*s23^3 + 1521*s13^2*s23^4 + 285*s13*
                  s23^5 + 75*s23^6) + s12^3*s13*s23*(99*s13^7 + 349*s13^6*
                  s23 + 1223*s13^5*s23^2 + 2839*s13^4*s23^3 + 2742*s13^3*
                  s23^4 - 224*s13^2*s23^5 - 1153*s13*s23^6 - 30*s23^7) + 
               s12^5*(-81*s13^7 + 117*s13^6*s23 + 2337*s13^5*s23^2 + 
                 5099*s13^4*s23^3 + 5006*s13^3*s23^4 + 2346*s13^2*s23^5 + 
                 415*s13*s23^6 + 150*s23^7) + s12^4*(-27*s13^8 + 252*s13^7*
                  s23 + 1816*s13^6*s23^2 + 4082*s13^5*s23^3 + 5270*s13^4*
                  s23^4 + 3223*s13^3*s23^5 + 527*s13^2*s23^6 + 120*s13*
                  s23^7 + 60*s23^8))) - p2q^5*s13^2*(s12 + s13)*(s13 + s23)*
             (-15*s13^4*s23^4*(s13 + s23)^3*(s13^2 + 2*s13*s23 - 4*s23^2) - 
              5*s12*s13^3*s23^3*(s13 + s23)^2*(6*s13^4 + 22*s13^3*s23 - 
                23*s13^2*s23^2 - 48*s13*s23^3 + 6*s23^4) + s12^9*(-27*s13^4 + 
                99*s13^3*s23 - 86*s13^2*s23^2 + 23*s13*s23^3 + 115*s23^4) + 
              s12^8*(-81*s13^5 + 225*s13^4*s23 + 448*s13^3*s23^2 + 
                37*s13^2*s23^3 + 675*s13*s23^4 + 580*s23^5) - 
              s12^2*s13^2*s23^2*(s13 + s23)^2*(15*s13^5 + 168*s13^4*s23 - 
                418*s13^3*s23^2 - 1138*s13^2*s23^3 - 67*s13*s23^4 + 
                625*s23^5) + 2*s12^7*(-36*s13^6 + 18*s13^5*s23 + 
                1034*s13^4*s23^2 + 786*s13^3*s23^3 + 815*s13^2*s23^4 + 
                1394*s13*s23^5 + 605*s23^6) + s12^6*s23*(-225*s13^6 + 
                2454*s13^5*s23 + 5898*s13^4*s23^2 + 4062*s13^3*s23^3 + 
                4567*s13^2*s23^4 + 4424*s13*s23^5 + 1300*s23^6) + 
              s12^3*s13*s23*(9*s13^8 - 130*s13^7*s23 + 98*s13^6*s23^2 + 
                3868*s13^5*s23^3 + 7352*s13^4*s23^4 + 3750*s13^3*s23^5 - 
                1377*s13^2*s23^6 - 1566*s13*s23^7 - 160*s23^8) + 
              s12^5*(27*s13^8 - 144*s13^7*s23 + 862*s13^6*s23^2 + 
                7436*s13^5*s23^3 + 9352*s13^4*s23^4 + 5581*s13^3*s23^5 + 
                4506*s13^2*s23^6 + 2909*s13*s23^7 + 715*s23^8) + 
              s12^4*(9*s13^9 - 173*s13^7*s23^2 + 3362*s13^6*s23^3 + 
                10105*s13^5*s23^4 + 8493*s13^4*s23^5 + 2518*s13^3*s23^6 + 
                505*s13^2*s23^7 + 461*s13*s23^8 + 160*s23^9)) - 
            p2q^4*p3q*s13*(-10*s13^5*s23^4*(s13 + s23)^4*(25*s13^3 - 
                40*s13^2*s23 - 12*s13*s23^2 + 3*s23^3) - s12*s13^4*s23^3*
               (s13 + s23)^3*(334*s13^5 + 775*s13^4*s23 - 1024*s13^3*s23^2 - 
                1842*s13^2*s23^3 - 917*s13*s23^4 + 10*s23^5) + 
              s12^11*(63*s13^5 + 423*s13^4*s23 + 621*s13^3*s23^2 + 
                371*s13^2*s23^3 + 404*s13*s23^4 + 214*s23^5) + 
              s12^10*(198*s13^6 + 1575*s13^5*s23 + 3358*s13^4*s23^2 + 
                4581*s13^3*s23^3 + 5524*s13^2*s23^4 + 4122*s13*s23^5 + 
                1198*s23^6) - s12^2*s13^3*s23^2*(s13 + s23)^2*(84*s13^7 + 
                1563*s13^6*s23 + 4847*s13^5*s23^2 - 454*s13^4*s23^3 - 
                11920*s13^3*s23^4 - 9174*s13^2*s23^5 - 1278*s13*s23^6 - 
                252*s23^7) + s12^9*(9*s13^7 + 963*s13^6*s23 + 2322*s13^5*
                 s23^2 + 5910*s13^4*s23^3 + 16558*s13^3*s23^4 + 22975*s13^2*
                 s23^5 + 12929*s13*s23^6 + 2370*s23^7) + s12^3*s13^2*s23*
               (s13 + s23)^2*(18*s13^8 - 648*s13^7*s23 - 8240*s13^6*s23^2 - 
                8905*s13^5*s23^3 + 10821*s13^4*s23^4 + 28592*s13^3*s23^5 + 
                17185*s13^2*s23^6 + 1422*s13*s23^7 + 73*s23^8) + 
              s12^8*(-414*s13^8 + 801*s13^7*s23 + 2253*s13^6*s23^2 - 
                1921*s13^5*s23^3 + 12113*s13^4*s23^4 + 46521*s13^3*s23^5 + 
                47342*s13^2*s23^6 + 17793*s13*s23^7 + 1900*s23^8) + 
              s12^7*(-243*s13^9 + 2205*s13^8*s23 + 9319*s13^7*s23^2 - 
                1022*s13^6*s23^3 - 8717*s13^5*s23^4 + 44879*s13^4*s23^5 + 
                91361*s13^3*s23^6 + 55612*s13^2*s23^7 + 10764*s13*s23^8 + 
                250*s23^9) + s12^6*(198*s13^10 + 459*s13^9*s23 + 
                6090*s13^8*s23^2 + 4520*s13^7*s23^3 - 14757*s13^6*s23^4 + 
                23891*s13^5*s23^5 + 112407*s13^4*s23^6 + 108706*s13^3*s23^7 + 
                35422*s13^2*s23^8 + 1358*s13*s23^9 - 426*s23^10) + 
              s12^4*s13*(18*s13^11 - 27*s13^10*s23 - 4893*s13^9*s23^2 - 
                19823*s13^8*s23^3 - 29012*s13^7*s23^4 + 5465*s13^6*s23^5 + 
                87014*s13^5*s23^6 + 130730*s13^4*s23^7 + 82939*s13^3*s23^8 + 
                19906*s13^2*s23^9 - 136*s13*s23^10 - 321*s23^11) + 
              s12^5*(171*s13^11 - 801*s13^10*s23 - 4926*s13^9*s23^2 - 
                9061*s13^8*s23^3 - 14154*s13^7*s23^4 + 16710*s13^6*s23^5 + 
                106938*s13^5*s23^6 + 141175*s13^4*s23^7 + 69858*s13^3*s23^8 + 
                9121*s13^2*s23^9 - 1145*s13*s23^10 - 162*s23^11)) - 
            p2q^2*p3q^3*(10*s13^6*s23^5*(s13 + s23)^4*(14*s13^2 - 
                11*s13*s23 - s23^2) + s12^13*(9*s13^4 + 9*s13^3*s23 - 
                69*s13^2*s23^2 - 259*s13*s23^3 - 190*s23^4) - 
              s12*s13^5*s23^4*(s13 + s23)^3*(7*s13^4 - 227*s13^3*s23 - 
                1171*s13^2*s23^2 - 44*s13*s23^3 + 668*s23^4) - 
              s12^12*(54*s13^5 + 621*s13^4*s23 + 1005*s13^3*s23^2 + 
                1795*s13^2*s23^3 + 1452*s13*s23^4 + 325*s23^5) - 
              s12^11*(666*s13^6 + 2988*s13^5*s23 + 7986*s13^4*s23^2 + 
                13591*s13^3*s23^3 + 10691*s13^2*s23^4 + 2609*s13*s23^5 - 
                415*s23^6) - s12^2*s13^4*s23^3*(s13 + s23)^2*(379*s13^6 + 
                1947*s13^5*s23 - 3099*s13^4*s23^2 - 11822*s13^3*s23^3 - 
                4315*s13^2*s23^4 + 3600*s13*s23^5 + 1225*s23^6) - 
              s12^10*(1062*s13^7 - 297*s13^6*s23 + 4069*s13^5*s23^2 + 
                25368*s13^4*s23^3 + 38524*s13^3*s23^4 + 18785*s13^2*s23^5 + 
                211*s13*s23^6 - 1070*s23^7) - s12^3*s13^3*s23^2*(s13 + s23)^
                2*(385*s13^7 + 3258*s13^6*s23 - 2218*s13^5*s23^2 - 
                18528*s13^4*s23^3 - 27930*s13^3*s23^4 - 14204*s13^2*s23^5 + 
                6027*s13*s23^6 + 833*s23^7) + s12^9*(216*s13^8 + 
                5445*s13^7*s23 + 15944*s13^6*s23^2 - 6155*s13^5*s23^3 - 
                46775*s13^4*s23^4 - 32354*s13^3*s23^5 + 1936*s13^2*s23^6 + 
                5185*s13*s23^7 + 280*s23^8) + s12^8*(1314*s13^9 + 
                6597*s13^8*s23 + 25045*s13^7*s23^2 + 16602*s13^6*s23^3 - 
                36569*s13^5*s23^4 - 29820*s13^4*s23^5 + 33873*s13^3*s23^6 + 
                35915*s13^2*s23^7 + 6556*s13*s23^8 - 545*s23^9) + 
              s12^4*s13^2*s23*(-288*s13^10 - 939*s13^9*s23 + 5271*s13^8*
                 s23^2 + 21354*s13^7*s23^3 + 60635*s13^6*s23^4 + 
                136061*s13^5*s23^5 + 170846*s13^4*s23^6 + 98194*s13^3*s23^7 + 
                12934*s13^2*s23^8 - 5924*s13*s23^9 - 652*s23^10) + 
              s12^7*(630*s13^10 + 10098*s13^9*s23 + 28526*s13^8*s23^2 + 
                29755*s13^7*s23^3 - 18977*s13^6*s23^4 - 20762*s13^5*s23^5 + 
                71821*s13^4*s23^6 + 92530*s13^3*s23^7 + 32569*s13^2*s23^8 + 
                2343*s13*s23^9 - 345*s23^10) + s12^5*s13*(-45*s13^11 + 
                324*s13^10*s23 + 13162*s13^9*s23^2 + 35586*s13^8*s23^3 + 
                44227*s13^7*s23^4 + 74205*s13^6*s23^5 + 171554*s13^5*s23^6 + 
                208053*s13^4*s23^7 + 102146*s13^3*s23^8 + 10607*s13^2*s23^9 - 
                2785*s13*s23^10 - 516*s23^11) + s12^6*(-54*s13^11 + 
                6903*s13^10*s23 + 30160*s13^9*s23^2 + 44817*s13^8*s23^3 + 
                21520*s13^7*s23^4 + 32851*s13^6*s23^5 + 126985*s13^5*s23^6 + 
                155622*s13^4*s23^7 + 67948*s13^3*s23^8 + 6277*s13^2*s23^9 - 
                749*s13*s23^10 - 40*s23^11)) - p2q*p3q^4*s12*
             (2*s13^5*s23^5*(s13 + s23)^3*(107*s13^3 + 278*s13^2*s23 + 
                30*s13*s23^2 - 81*s23^3) + 2*s12^12*(9*s13^4 + 9*s13^3*s23 - 
                42*s13^2*s23^2 - 167*s13*s23^3 - 125*s23^4) + 
              s12^11*(171*s13^5 - 27*s13^4*s23 - 612*s13^3*s23^2 - 
                1731*s13^2*s23^3 - 1777*s13*s23^4 - 600*s23^5) + 
              s12*s13^4*s23^4*(s13 + s23)^2*(404*s13^5 + 3314*s13^4*s23 + 
                5897*s13^3*s23^2 + 2685*s13^2*s23^3 - 503*s13*s23^4 - 
                321*s23^5) + s12^2*s13^3*s23^3*(s13 + s23)^2*(371*s13^6 + 
                4782*s13^5*s23 + 13040*s13^4*s23^2 + 16480*s13^3*s23^3 + 
                9612*s13^2*s23^4 - 282*s13*s23^5 + 73*s23^6) + 
              s12^10*(198*s13^6 - 801*s13^5*s23 - 4893*s13^4*s23^2 - 
                9518*s13^3*s23^3 - 8057*s13^2*s23^4 - 2303*s13*s23^5 + 
                220*s23^6) - s12^9*(243*s13^7 - 459*s13^6*s23 + 4926*s13^5*
                 s23^2 + 19823*s13^4*s23^3 + 26033*s13^3*s23^4 + 
                10803*s13^2*s23^5 - 2255*s13*s23^6 - 1850*s23^7) + 
              s12^8*(-414*s13^8 + 2205*s13^7*s23 + 6090*s13^6*s23^2 - 
                9061*s13^5*s23^3 - 29012*s13^4*s23^4 - 15229*s13^3*s23^5 + 
                7981*s13^2*s23^6 + 8740*s13*s23^7 + 1950*s23^8) + 
              s12^3*s13^2*s23^2*(621*s13^9 + 4581*s13^8*s23 + 16558*s13^7*
                 s23^2 + 46521*s13^6*s23^3 + 91361*s13^5*s23^4 + 
                108706*s13^4*s23^5 + 69858*s13^3*s23^6 + 19906*s13^2*s23^7 + 
                1568*s13*s23^8 + 252*s23^9) + s12^7*(9*s13^9 + 801*s13^8*
                 s23 + 9319*s13^7*s23^2 + 4520*s13^6*s23^3 - 14154*s13^5*
                 s23^4 + 5465*s13^4*s23^5 + 41329*s13^3*s23^6 + 33468*s13^2*
                 s23^7 + 9291*s13*s23^8 + 700*s23^9) + s12^6*s13*(198*s13^9 + 
                963*s13^8*s23 + 2253*s13^7*s23^2 - 1022*s13^6*s23^3 - 
                14757*s13^5*s23^4 + 16710*s13^4*s23^5 + 87014*s13^3*s23^6 + 
                85190*s13^2*s23^7 + 31546*s13*s23^8 + 4563*s23^9) + 
              s12^4*s13*s23*(423*s13^10 + 3358*s13^9*s23 + 5910*s13^8*s23^2 + 
                12113*s13^7*s23^3 + 44879*s13^6*s23^4 + 112407*s13^5*s23^5 + 
                141175*s13^4*s23^6 + 82939*s13^3*s23^7 + 20102*s13^2*s23^8 + 
                1782*s13*s23^9 - 10*s23^10) + s12^5*(63*s13^11 + 
                1575*s13^10*s23 + 2322*s13^9*s23^2 - 1921*s13^8*s23^3 - 
                8717*s13^7*s23^4 + 23891*s13^6*s23^5 + 106938*s13^5*s23^6 + 
                130730*s13^4*s23^7 + 64384*s13^3*s23^8 + 11982*s13^2*s23^9 + 
                887*s13*s23^10 - 30*s23^11)) + p2q^3*p3q^2*
             (5*s13^6*s23^4*(s13 + s23)^4*(38*s13^3 - 87*s13^2*s23 + 
                37*s13*s23^2 + 8*s23^3) + s12^12*(45*s13^5 + 288*s13^4*s23 + 
                385*s13^3*s23^2 + 379*s13^2*s23^3 + 7*s13*s23^4 - 
                140*s23^5) + s12*s13^5*s23^3*(s13 + s23)^3*(259*s13^5 + 
                675*s13^4*s23 - 193*s13^3*s23^2 - 1494*s13^2*s23^3 - 
                799*s13*s23^4 + 516*s23^5) + s12^11*(54*s13^6 - 324*s13^5*
                 s23 + 939*s13^4*s23^2 + 4028*s13^3*s23^3 + 2705*s13^2*
                 s23^4 - 206*s13*s23^5 - 450*s23^6) - s12^10*(630*s13^7 + 
                6903*s13^6*s23 + 13162*s13^5*s23^2 + 5271*s13^4*s23^3 - 
                4683*s13^3*s23^4 - 1174*s13^2*s23^5 + 1831*s13*s23^6 + 
                390*s23^7) + s12^2*s13^4*s23^2*(s13 + s23)^2*(69*s13^7 + 
                1657*s13^6*s23 + 7308*s13^5*s23^2 + 2512*s13^4*s23^3 - 
                14268*s13^3*s23^4 - 9891*s13^2*s23^5 + 1481*s13*s23^6 + 
                652*s23^7) - s12^3*s13^3*s23*(s13 + s23)^2*(9*s13^8 - 
                1023*s13^7*s23 - 11554*s13^6*s23^2 - 14393*s13^5*s23^3 + 
                7986*s13^4*s23^4 + 32294*s13^3*s23^5 + 19956*s13^2*s23^6 - 
                4258*s13*s23^7 - 833*s23^8) - s12^9*(1314*s13^8 + 
                10098*s13^7*s23 + 30160*s13^6*s23^2 + 35586*s13^5*s23^3 + 
                21354*s13^4*s23^4 + 19706*s13^3*s23^5 + 16073*s13^2*s23^6 + 
                4231*s13*s23^7 - 140*s23^8) - s12^8*(216*s13^9 + 
                6597*s13^8*s23 + 28526*s13^7*s23^2 + 44817*s13^6*s23^3 + 
                44227*s13^5*s23^4 + 60635*s13^4*s23^5 + 67204*s13^3*s23^6 + 
                31058*s13^2*s23^7 + 3204*s13*s23^8 - 360*s23^9) + 
              s12^7*(1062*s13^10 - 5445*s13^9*s23 - 25045*s13^8*s23^2 - 
                29755*s13^7*s23^3 - 21520*s13^6*s23^4 - 74205*s13^5*s23^5 - 
                136061*s13^4*s23^6 - 88592*s13^3*s23^7 - 16852*s13^2*s23^8 + 
                701*s13*s23^9 + 150*s23^10) + s12^6*(666*s13^11 - 
                297*s13^10*s23 - 15944*s13^9*s23^2 - 16602*s13^8*s23^3 + 
                18977*s13^7*s23^4 - 32851*s13^6*s23^5 - 171554*s13^5*s23^6 - 
                170846*s13^4*s23^7 - 50311*s13^3*s23^8 + 4110*s13^2*s23^9 + 
                1960*s13*s23^10 + 10*s23^11) + s12^5*s13*(54*s13^11 + 
                2988*s13^10*s23 + 4069*s13^9*s23^2 + 6155*s13^8*s23^3 + 
                36569*s13^7*s23^4 + 20762*s13^6*s23^5 - 126985*s13^5*s23^6 - 
                208053*s13^4*s23^7 - 98194*s13^3*s23^8 - 1317*s13^2*s23^9 + 
                6050*s13*s23^10 + 668*s23^11) + s12^4*s13^2*(-9*s13^11 + 
                621*s13^10*s23 + 7986*s13^9*s23^2 + 25368*s13^8*s23^3 + 
                46775*s13^7*s23^4 + 29820*s13^6*s23^5 - 71821*s13^5*s23^6 - 
                155622*s13^4*s23^7 - 102146*s13^3*s23^8 - 12934*s13^2*s23^9 + 
                7693*s13*s23^10 + 1225*s23^11))) + 
          p1q^3*(p3q^4*s12*(s12 + s23)*(s13 + s23)*(2*s13^5*s23^5*(s13 + s23)^
                2*(61*s13^2 + 162*s13*s23 + 81*s23^2) + s12^10*(9*s13^4 + 
                18*s13^3*s23 - 10*s13^2*s23^2 - 30*s13*s23^3 - 10*s23^4) + 
              s12^9*(45*s13^5 + 63*s13^4*s23 - 181*s13^3*s23^2 - 
                379*s13^2*s23^3 - 250*s13*s23^4 - 100*s23^5) + 
              s12*s13^4*s23^4*(16*s13^5 + 898*s13^4*s23 + 3082*s13^3*s23^2 + 
                3977*s13^2*s23^3 + 2260*s13*s23^4 + 483*s23^5) + 
              s12^8*(90*s13^6 - 18*s13^5*s23 - 923*s13^4*s23^2 - 
                1445*s13^3*s23^3 - 975*s13^2*s23^4 - 540*s13*s23^5 - 
                200*s23^6) + s12^2*s13^3*s23^3*(-56*s13^6 + 19*s13^5*s23 + 
                2333*s13^4*s23^2 + 6631*s13^3*s23^3 + 6786*s13^2*s23^4 + 
                2501*s13*s23^5 + 88*s23^6) + s12^3*s13^2*s23^2*(89*s13^7 + 
                131*s13^6*s23 + 960*s13^5*s23^2 + 4855*s13^4*s23^3 + 
                9028*s13^3*s23^4 + 6424*s13^2*s23^5 + 1070*s13*s23^6 - 
                263*s23^7) + s12^7*(90*s13^7 - 324*s13^6*s23 - 1786*s13^5*
                 s23^2 - 1524*s13^4*s23^3 + 127*s13^3*s23^4 + 129*s13^2*
                 s23^5 - 310*s13*s23^6 - 100*s23^7) + s12^4*s13*s23*(
                -72*s13^8 + 282*s13^7*s23 + 1665*s13^6*s23^2 + 4974*s13^5*
                 s23^3 + 9734*s13^4*s23^4 + 10563*s13^3*s23^5 + 4776*s13^2*
                 s23^6 + 291*s13*s23^7 + 10*s23^8) + s12^6*(45*s13^8 - 
                504*s13^7*s23 - 1373*s13^6*s23^2 + 1156*s13^5*s23^3 + 
                5438*s13^4*s23^4 + 5875*s13^3*s23^5 + 2534*s13^2*s23^6 + 
                160*s13*s23^7 + 50*s23^8) + s12^5*(9*s13^9 - 315*s13^8*s23 - 
                146*s13^7*s23^2 + 3062*s13^6*s23^3 + 8593*s13^5*s23^4 + 
                11742*s13^4*s23^5 + 8296*s13^3*s23^6 + 2353*s13^2*s23^7 + 
                160*s13*s23^8 + 40*s23^9)) + p2q^4*s13*(s13 + s23)*
             (-10*s13^5*s23^5*(s13 + s23)^3*(s13^2 + 7*s13*s23 - 4*s23^2) - 
              10*s12*s13^4*s23^4*(s13 + s23)^2*(4*s13^4 + 27*s13^3*s23 + 
                16*s13^2*s23^2 - 18*s13*s23^3 - s23^4) + s12^10*(9*s13^5 - 
                72*s13^4*s23 + 89*s13^3*s23^2 - 56*s13^2*s23^3 + 
                16*s13*s23^4 + 122*s23^5) - s12^2*s13^3*s23^3*(s13 + s23)^2*(
                40*s13^5 + 549*s13^4*s23 + 377*s13^3*s23^2 - 1122*s13^2*
                 s23^3 - 827*s13*s23^4 + 263*s23^5) + s12^9*(45*s13^6 - 
                306*s13^5*s23 + 210*s13^4*s23^2 + 220*s13^3*s23^3 - 
                37*s13^2*s23^4 + 914*s13*s23^5 + 690*s23^6) + 
              s12^8*(90*s13^7 - 459*s13^6*s23 - 461*s13^5*s23^2 + 
                1947*s13^4*s23^3 + 1091*s13^3*s23^4 + 2352*s13^2*s23^5 + 
                3980*s13*s23^6 + 1500*s23^7) + s12^3*s13^2*s23^2*(8*s13^8 - 
                560*s13^7*s23 - 2420*s13^6*s23^2 + 256*s13^5*s23^3 + 
                8409*s13^4*s23^4 + 10649*s13^3*s23^5 + 5067*s13^2*s23^6 + 
                807*s13*s23^7 + 88*s23^8) + s12^7*(90*s13^8 - 234*s13^7*s23 - 
                1877*s13^6*s23^2 + 2916*s13^5*s23^3 + 6639*s13^4*s23^4 + 
                5815*s13^3*s23^5 + 8964*s13^2*s23^6 + 7059*s13*s23^7 + 
                1580*s23^8) + s12^4*s13*s23*(27*s13^9 - 118*s13^8*s23 - 
                2368*s13^7*s23^2 - 1397*s13^6*s23^3 + 11313*s13^5*s23^4 + 
                20038*s13^4*s23^5 + 15339*s13^3*s23^6 + 7494*s13^2*s23^7 + 
                2589*s13*s23^8 + 483*s23^9) + s12^6*(45*s13^9 + 
                72*s13^8*s23 - 2110*s13^7*s23^2 - 217*s13^6*s23^3 + 
                11655*s13^5*s23^4 + 14708*s13^4*s23^5 + 13883*s13^3*s23^6 + 
                13417*s13^2*s23^7 + 6237*s13*s23^8 + 810*s23^9) + 
              s12^5*(9*s13^10 + 108*s13^9*s23 - 941*s13^8*s23^2 - 
                3310*s13^7*s23^3 + 6594*s13^6*s23^4 + 20335*s13^5*s23^5 + 
                20297*s13^4*s23^6 + 15452*s13^3*s23^7 + 9287*s13^2*s23^8 + 
                2743*s13*s23^9 + 162*s23^10)) + p2q*p3q^3*
             (10*s13^6*(13*s13 - 3*s23)*s23^6*(s13 + s23)^4 - 
              s12*s13^4*s23^5*(s13 + s23)^3*(58*s13^4 - 123*s13^3*s23 - 
                1014*s13^2*s23^2 - 516*s13*s23^3 + 162*s23^4) + 
              s12^12*(18*s13^5 + 45*s13^4*s23 - 2*s13^3*s23^2 - 290*s13^2*
                 s23^3 - 721*s13*s23^4 - 460*s23^5) + s12^11*(216*s13^6 + 
                387*s13^5*s23 - 606*s13^4*s23^2 - 2246*s13^3*s23^3 - 
                4152*s13^2*s23^4 - 4053*s13*s23^5 - 1500*s23^6) - 
              s12^2*s13^3*s23^4*(s13 + s23)^2*(547*s13^6 + 2920*s13^5*s23 + 
                831*s13^4*s23^2 - 6589*s13^3*s23^3 - 5423*s13^2*s23^4 - 
                530*s13*s23^5 + 161*s23^6) + s12^10*(522*s13^7 + 
                81*s13^6*s23 - 5609*s13^5*s23^2 - 16294*s13^4*s23^3 - 
                22782*s13^3*s23^4 - 18553*s13^2*s23^5 - 8117*s13*s23^6 - 
                1310*s23^7) - s12^3*s13^2*s23^3*(s13 + s23)^2*(707*s13^7 + 
                5883*s13^6*s23 + 10237*s13^5*s23^2 - 58*s13^4*s23^3 - 
                12269*s13^3*s23^4 - 8568*s13^2*s23^5 - 66*s13*s23^6 - 
                11*s23^7) + s12^9*(432*s13^8 - 207*s13^7*s23 - 10223*s13^6*
                 s23^2 - 38879*s13^5*s23^3 - 71383*s13^4*s23^4 - 
                71566*s13^3*s23^5 - 36203*s13^2*s23^6 - 6475*s13*s23^7 + 
                550*s23^8) - s12^4*s13^2*s23^2*(667*s13^9 + 6051*s13^8*s23 + 
                24728*s13^7*s23^2 + 56582*s13^6*s23^3 + 66054*s13^5*s23^4 + 
                22096*s13^4*s23^5 - 27298*s13^3*s23^6 - 28200*s13^2*s23^7 - 
                8055*s13*s23^8 - 433*s23^9) + s12^8*(54*s13^9 + 
                27*s13^8*s23 - 8328*s13^7*s23^2 - 40897*s13^6*s23^3 - 
                103640*s13^5*s23^4 - 143580*s13^4*s23^5 - 101718*s13^3*
                 s23^6 - 30207*s13^2*s23^7 + 195*s13*s23^8 + 1400*s23^9) - 
              s12^7*(72*s13^10 + 963*s13^9*s23 + 5091*s13^8*s23^2 + 
                28756*s13^7*s23^3 + 93111*s13^6*s23^4 + 165055*s13^5*s23^5 + 
                153507*s13^4*s23^6 + 62369*s13^3*s23^7 + 2293*s13^2*s23^8 - 
                3919*s13*s23^9 - 640*s23^10) - s12^6*(18*s13^11 + 
                1233*s13^10*s23 + 4782*s13^9*s23^2 + 19946*s13^8*s23^3 + 
                71150*s13^7*s23^4 + 146839*s13^6*s23^5 + 157071*s13^5*s23^6 + 
                71997*s13^4*s23^7 - 1996*s13^3*s23^8 - 11517*s13^2*s23^9 - 
                2667*s13*s23^10 - 50*s23^11) - s12^5*s23*(297*s13^11 + 
                3468*s13^10*s23 + 13790*s13^9*s23^2 + 46905*s13^8*s23^3 + 
                104606*s13^7*s23^4 + 124018*s13^6*s23^5 + 58796*s13^5*s23^6 - 
                13529*s13^4*s23^7 - 21481*s13^3*s23^8 - 5537*s13^2*s23^9 - 
                633*s13*s23^10 + 10*s23^11)) - p2q^3*p3q*
             (10*s13^5*s23^5*(s13 + s23)^4*(46*s13^3 - 34*s13^2*s23 - 
                9*s13*s23^2 + s23^3) + s12*s13^5*s23^4*(s13 + s23)^3*(
                721*s13^4 + 1890*s13^3*s23 + 284*s13^2*s23^2 - 768*s13*
                 s23^3 - 633*s23^4) + s12^11*(18*s13^6 + 297*s13^5*s23 + 
                667*s13^4*s23^2 + 707*s13^3*s23^3 + 547*s13^2*s23^4 + 
                58*s13*s23^5 - 130*s23^6) + s12^10*(72*s13^7 + 1233*s13^6*
                 s23 + 3468*s13^5*s23^2 + 6051*s13^4*s23^3 + 7297*s13^3*
                 s23^4 + 4014*s13^2*s23^5 + 51*s13*s23^6 - 490*s23^7) + 
              s12^2*s13^3*s23^3*(s13 + s23)^2*(290*s13^7 + 3572*s13^6*s23 + 
                11119*s13^5*s23^2 + 10393*s13^4*s23^3 - 1698*s13^3*s23^4 - 
                4704*s13^2*s23^5 - 411*s13*s23^6 - 11*s23^7) + 
              s12^9*(-54*s13^8 + 963*s13^7*s23 + 4782*s13^6*s23^2 + 
                13790*s13^5*s23^3 + 24728*s13^4*s23^4 + 22710*s13^3*s23^5 + 
                7218*s13^2*s23^6 - 1209*s13*s23^7 - 660*s23^8) + 
              s12^3*s13^2*s23^2*(s13 + s23)^2*(2*s13^8 + 2242*s13^7*s23 + 
                18296*s13^6*s23^2 + 32732*s13^5*s23^3 + 17958*s13^4*s23^4 - 
                6279*s13^3*s23^5 - 7396*s13^2*s23^6 - 410*s13*s23^7 + 
                161*s23^8) + s12^8*(-432*s13^9 - 27*s13^8*s23 + 5091*s13^7*
                 s23^2 + 19946*s13^6*s23^3 + 46905*s13^5*s23^4 + 
                56582*s13^4*s23^5 + 26299*s13^3*s23^6 - 2007*s13^2*s23^7 - 
                3869*s13*s23^8 - 340*s23^9) + s12^7*(-522*s13^10 + 
                207*s13^9*s23 + 8328*s13^8*s23^2 + 28756*s13^7*s23^3 + 
                71150*s13^6*s23^4 + 104606*s13^5*s23^5 + 66054*s13^4*s23^6 - 
                2148*s13^3*s23^7 - 17770*s13^2*s23^8 - 4551*s13*s23^9 - 
                10*s23^10) + s12^5*s13*(-18*s13^11 - 387*s13^10*s23 + 
                5609*s13^9*s23^2 + 38879*s13^8*s23^3 + 103640*s13^7*s23^4 + 
                165055*s13^6*s23^5 + 157071*s13^5*s23^6 + 58796*s13^4*s23^7 - 
                27298*s13^3*s23^8 - 29471*s13^2*s23^9 - 6322*s13*s23^10 - 
                30*s23^11) + s12^6*(-216*s13^11 - 81*s13^10*s23 + 
                10223*s13^9*s23^2 + 40897*s13^8*s23^3 + 93111*s13^7*s23^4 + 
                146839*s13^6*s23^5 + 124018*s13^5*s23^6 + 22096*s13^4*s23^7 - 
                33164*s13^3*s23^8 - 17965*s13^2*s23^9 - 2076*s13*s23^10 + 
                30*s23^11) + s12^4*s13*s23*(-45*s13^11 + 606*s13^10*s23 + 
                16294*s13^9*s23^2 + 71383*s13^8*s23^3 + 143580*s13^7*s23^4 + 
                153507*s13^6*s23^5 + 71997*s13^5*s23^6 - 13529*s13^4*s23^7 - 
                28200*s13^3*s23^8 - 8711*s13^2*s23^9 - 208*s13*s23^10 + 
                162*s23^11)) + p2q^2*p3q^2*(-5*s13^5*s23^5*(s13 + s23)^4*(
                54*s13^3 - 81*s13^2*s23 + 23*s13*s23^2 + 2*s23^3) + 
              s12^12*(9*s13^5 + 18*s13^4*s23 - 10*s13^3*s23^2 - 196*s13^2*
                 s23^3 - 447*s13*s23^4 - 270*s23^5) - s12*s13^4*s23^4*
               (s13 + s23)^3*(447*s13^5 + 1309*s13^4*s23 + 897*s13^3*s23^2 - 
                648*s13^2*s23^3 - 941*s13*s23^4 + 162*s23^5) + 
              s12^11*(9*s13^6 - 603*s13^5*s23 - 1848*s13^4*s23^2 - 
                2608*s13^3*s23^3 - 3517*s13^2*s23^4 - 2650*s13*s23^5 - 
                675*s23^6) - s12^10*(369*s13^7 + 4554*s13^6*s23 + 
                13346*s13^5*s23^2 + 21881*s13^4*s23^3 + 25682*s13^3*s23^4 + 
                19022*s13^2*s23^5 + 6165*s13*s23^6 + 115*s23^7) - 
              s12^2*s13^3*s23^3*(s13 + s23)^2*(196*s13^7 + 3125*s13^6*s23 + 
                12576*s13^5*s23^2 + 13261*s13^4*s23^3 - 3364*s13^3*s23^4 - 
                7462*s13^2*s23^5 - 694*s13*s23^6 + 150*s23^7) - 
              s12^9*(1089*s13^8 + 8973*s13^7*s23 + 30628*s13^6*s23^2 + 
                61637*s13^5*s23^3 + 87138*s13^4*s23^4 + 83026*s13^3*s23^5 + 
                41538*s13^2*s23^6 + 6417*s13*s23^7 - 880*s23^8) - 
              2*s12^3*s13^2*s23^2*(s13 + s23)^2*(5*s13^8 + 1294*s13^7*s23 + 
                10248*s13^6*s23^2 + 19723*s13^5*s23^3 + 11238*s13^4*s23^4 - 
                4610*s13^3*s23^5 - 5873*s13^2*s23^6 - 24*s13*s23^7 + 
                75*s23^8) - s12^8*(1089*s13^9 + 10080*s13^8*s23 + 
                42896*s13^7*s23^2 + 102419*s13^6*s23^3 + 166902*s13^5*s23^4 + 
                186233*s13^4*s23^5 + 121864*s13^3*s23^6 + 35734*s13^2*s23^7 + 
                1115*s13*s23^8 - 620*s23^9) - s12^7*(369*s13^10 + 
                8973*s13^9*s23 + 42896*s13^8*s23^2 + 122302*s13^7*s23^3 + 
                238030*s13^6*s23^4 + 303662*s13^5*s23^5 + 226496*s13^4*
                 s23^6 + 75178*s13^3*s23^7 - 929*s13^2*s23^8 - 3708*s13*
                 s23^9 + 115*s23^10) + s12^4*s13*s23*(18*s13^11 - 
                1848*s13^10*s23 - 21881*s13^9*s23^2 - 87138*s13^8*s23^3 - 
                186233*s13^7*s23^4 - 226496*s13^6*s23^5 - 133820*s13^5*
                 s23^6 - 4558*s13^4*s23^7 + 33012*s13^3*s23^8 + 11692*s13^2*
                 s23^9 + 394*s13*s23^10 - 162*s23^11) + s12^6*(9*s13^11 - 
                4554*s13^10*s23 - 30628*s13^9*s23^2 - 102419*s13^8*s23^3 - 
                238030*s13^7*s23^4 - 372306*s13^6*s23^5 - 336308*s13^5*
                 s23^6 - 133820*s13^4*s23^7 + 7710*s13^3*s23^8 + 
                18982*s13^2*s23^9 + 2985*s13*s23^10 - 155*s23^11) + 
              s12^5*(9*s13^12 - 603*s13^11*s23 - 13346*s13^10*s23^2 - 
                61637*s13^9*s23^3 - 166902*s13^8*s23^4 - 303662*s13^7*s23^5 - 
                336308*s13^6*s23^6 - 179928*s13^5*s23^7 - 4558*s13^4*s23^8 + 
                32760*s13^3*s23^9 + 8700*s13^2*s23^10 + 455*s13*s23^11 - 
                10*s23^12)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^3*s13^3*(s12 + s13)^2*s23^2*(s12 + s23)^2*(s13 + s23)^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - 
       (p1q^6*s23^3*(s12 + s23)^2*(s13 + s23)^2*(s12 + s13 + s23)*
          (-(p3q*(-120*s13^5*s23^3*(s13 + s23) - 2*s12*s13^4*s23^2*(
                101*s13^2 + 161*s13*s23 + 60*s23^2) + s12^6*(55*s13^3 + 
                69*s13^2*s23 + 5*s13*s23^2 + 15*s23^3) + s12^2*s13^3*s23*(
                -291*s13^3 - 257*s13^2*s23 + 114*s13*s23^2 + 80*s23^3) + 
              s12^3*s13^2*(-17*s13^4 - 226*s13^3*s23 + 133*s13^2*s23^2 + 
                308*s13*s23^3 - 10*s23^4) + s12^4*s13*(21*s13^4 + 
                184*s13^3*s23 + 169*s13^2*s23^2 - 3*s13*s23^3 + 15*s23^4) + 
              s12^5*(93*s13^4 + 188*s13^3*s23 + 76*s13^2*s23^2 + 
                20*s13*s23^3 + 15*s23^4))) + 
           p2q*(-15*s13^5*s23^3*(s13 + s23) - 5*s12*s13^4*s23^2*
              (s13^2 + 4*s13*s23 + 3*s23^2) + s12^2*s13^3*s23*
              (-69*s13^3 - 76*s13^2*s23 + 3*s13*s23^2 + 10*s23^3) + 
             s12^6*(17*s13^3 + 291*s13^2*s23 + 202*s13*s23^2 + 120*s23^3) - 
             s12^4*s13*(93*s13^4 + 184*s13^3*s23 + 133*s13^2*s23^2 + 114*s13*
                s23^3 - 120*s23^4) - s12^3*s13^2*(55*s13^4 + 188*s13^3*s23 + 
               169*s13^2*s23^2 + 308*s13*s23^3 + 80*s23^4) + 
             s12^5*(-21*s13^4 + 226*s13^3*s23 + 257*s13^2*s23^2 + 322*s13*
                s23^3 + 120*s23^4))) - p1q^5*s23^2*(s12 + s23)*(s13 + s23)*
          (s12 + s13 + s23)*(p2q^2*(-5*s13^5*(11*s13 - 7*s23)*s23^4*
              (s13 + s23)^2 - 5*s12*s13^4*s23^3*(s13 + s23)^2*
              (13*s13^2 + 12*s13*s23 - 9*s23^2) + s12^8*(17*s13^4 + 308*s13^3*
                s23 + 493*s13^2*s23^2 + 322*s13*s23^3 + 120*s23^4) - 
             s12^2*s13^3*s23^2*(95*s13^5 + 115*s13^4*s23 + 84*s13^3*s23^2 + 
               45*s13^2*s23^3 - 137*s13*s23^4 - 118*s23^5) + 
             s12^7*(131*s13^5 + 986*s13^4*s23 + 1064*s13^3*s23^2 + 894*s13^2*
                s23^3 + 765*s13*s23^4 + 120*s23^5) + s12^6*(219*s13^6 + 1105*
                s13^5*s23 + 1547*s13^4*s23^2 + 1166*s13^3*s23^3 + 1352*s13^2*
                s23^4 + 727*s13*s23^5 - 120*s23^6) + s12^3*s13^2*s23*
              (-94*s13^6 + 62*s13^5*s23 + 267*s13^4*s23^2 - 924*s13^3*s23^3 - 
               253*s13^2*s23^4 + 1148*s13*s23^5 + 406*s23^6) + 
             s12^5*(113*s13^7 + 696*s13^6*s23 + 1368*s13^5*s23^2 + 12*s13^4*
                s23^3 + 1058*s13^3*s23^4 + 2198*s13^2*s23^5 + 327*s13*s23^6 - 
               120*s23^7) + s12^4*s13*(8*s13^7 + 175*s13^6*s23 + 639*s13^5*
                s23^2 - 490*s13^4*s23^3 - 894*s13^3*s23^4 + 1678*s13^2*
                s23^5 + 1653*s13*s23^6 + 43*s23^7)) + 
           p3q^2*(120*s13^5*(s13 - s23)*s23^4*(s13 + s23)^2 + 
             s12^8*(8*s13^4 - 94*s13^3*s23 - 95*s13^2*s23^2 - 65*s13*s23^3 - 
               55*s23^4) + s12*s13^4*s23^3*(322*s13^4 + 765*s13^3*s23 + 727*
                s13^2*s23^2 + 327*s13*s23^3 + 43*s23^4) + 
             s12^7*(113*s13^5 + 175*s13^4*s23 + 62*s13^3*s23^2 - 115*s13^2*
                s23^3 - 190*s13*s23^4 - 75*s23^5) + s12^2*s13^3*s23^2*
              (493*s13^5 + 894*s13^4*s23 + 1352*s13^3*s23^2 + 2198*s13^2*
                s23^3 + 1653*s13*s23^4 + 406*s23^5) + 
             s12^6*(219*s13^6 + 696*s13^5*s23 + 639*s13^4*s23^2 + 267*s13^3*
                s23^3 - 84*s13^2*s23^4 - 140*s13*s23^5 + 15*s23^6) + 
             2*s12^3*s13^2*s23*(154*s13^6 + 532*s13^5*s23 + 583*s13^4*s23^2 + 
               529*s13^3*s23^3 + 839*s13^2*s23^4 + 574*s13*s23^5 + 59*
                s23^6) + s12^5*(131*s13^7 + 1105*s13^6*s23 + 1368*s13^5*
                s23^2 - 490*s13^4*s23^3 - 924*s13^3*s23^4 - 45*s13^2*s23^5 + 
               30*s13*s23^6 + 35*s23^7) + s12^4*s13*(17*s13^7 + 986*s13^6*
                s23 + 1547*s13^5*s23^2 + 12*s13^4*s23^3 - 894*s13^3*s23^4 - 
               253*s13^2*s23^5 + 137*s13*s23^6 + 45*s23^7)) + 
           p2q*p3q*(5*s13^5*(121*s13 - 17*s23)*s23^4*(s13 + s23)^2 + 
             s12*s13^4*s23^3*(1328*s13^4 + 3050*s13^3*s23 + 2189*s13^2*
                s23^2 + 555*s13*s23^3 + 88*s23^4) + s12^8*(97*s13^4 + 1006*
                s13^3*s23 + 1496*s13^2*s23^2 + 1328*s13*s23^3 + 605*s23^4) + 
             s12^2*s13^3*s23^2*(1496*s13^5 + 2363*s13^4*s23 + 251*s13^3*
                s23^2 - 34*s13^2*s23^3 + 1106*s13*s23^4 + 524*s23^5) + 
             s12^7*(-44*s13^5 + 693*s13^4*s23 + 1135*s13^3*s23^2 + 2363*s13^2*
                s23^3 + 3050*s13*s23^4 + 1125*s23^5) + 
             s12^6*(-282*s13^6 - 1115*s13^5*s23 - 2710*s13^4*s23^2 - 3652*
                s13^3*s23^3 + 251*s13^2*s23^4 + 2189*s13*s23^5 + 435*s23^6) + 
             s12^3*s13^2*s23*(1006*s13^6 + 1135*s13^5*s23 - 3652*s13^4*
                s23^2 - 5743*s13^3*s23^3 + 246*s13^2*s23^4 + 2692*s13*s23^5 + 
               524*s23^6) - s12^5*(44*s13^7 + 1115*s13^6*s23 + 4158*s13^5*
                s23^2 + 8236*s13^4*s23^3 + 5743*s13^3*s23^4 + 34*s13^2*
                s23^5 - 555*s13*s23^6 + 85*s23^7) + s12^4*s13*
              (97*s13^7 + 693*s13^6*s23 - 2710*s13^5*s23^2 - 8236*s13^4*
                s23^3 - 5838*s13^3*s23^4 + 246*s13^2*s23^5 + 1106*s13*s23^6 + 
               88*s23^7))) - (s12 + s13)*(p2q^7*s13^4*(s12 + s13)*(s13 + s23)*
            (5*s13^3*s23^3*(s13 + s23)^3*(s13 + 4*s23) + 5*s12*s13^2*s23^2*
              (s13 + s23)^2*(2*s13^3 + 11*s13^2*s23 + 22*s13*s23^2 + 10*
                s23^3) + 6*s12^2*s13*s23^2*(s13 + s23)^2*(5*s13^3 + 36*s13^2*
                s23 + 82*s13*s23^2 + 41*s23^3) + s12^7*(27*s13^3 + 135*s13^2*
                s23 + 485*s13*s23^2 + 337*s23^3) + s12^6*(54*s13^4 + 405*
                s13^3*s23 + 1604*s13^2*s23^2 + 2385*s13*s23^3 + 1092*s23^4) + 
             s12^3*s23^2*(202*s13^5 + 1456*s13^4*s23 + 3643*s13^3*s23^2 + 
               3727*s13^2*s23^3 + 1419*s13*s23^4 + 81*s23^5) + 
             s12^4*s23*(108*s13^5 + 1096*s13^4*s23 + 4047*s13^3*s23^2 + 6034*
                s13^2*s23^3 + 3515*s13*s23^4 + 580*s23^5) + 
             s12^5*(27*s13^5 + 378*s13^4*s23 + 2033*s13^3*s23^2 + 4710*s13^2*
                s23^3 + 4242*s13*s23^4 + 1254*s23^5)) + 
           p3q^7*s12^4*(s12 + s13)*(s12 + s23)*(5*s12^7*s23^2*(2*s13 + s23) + 
             s13^3*s23^3*(s13 + s23)^3*(337*s13 + 81*s23) + 
             5*s12^6*s23^2*(6*s13^2 + 15*s13*s23 + 7*s23^2) + 
             s12*s13^2*s23^2*(s13 + s23)^2*(485*s13^3 + 1415*s13^2*s23 + 927*
                s13*s23^2 + 246*s23^3) + s12^5*(27*s13^5 + 108*s13^4*s23 + 
               202*s13^3*s23^2 + 276*s13^2*s23^3 + 230*s13*s23^4 + 75*
                s23^5) + s12^2*s13*s23*(135*s13^6 + 1604*s13^5*s23 + 4710*
                s13^4*s23^2 + 6034*s13^3*s23^3 + 3727*s13^2*s23^4 + 984*s13*
                s23^5 + 50*s23^6) + s12^4*(54*s13^6 + 378*s13^5*s23 + 1096*
                s13^4*s23^2 + 1456*s13^3*s23^3 + 954*s13^2*s23^4 + 325*s13*
                s23^5 + 65*s23^6) + s12^3*(27*s13^7 + 405*s13^6*s23 + 2033*
                s13^5*s23^2 + 4047*s13^4*s23^3 + 3643*s13^3*s23^4 + 1446*
                s13^2*s23^5 + 210*s13*s23^6 + 20*s23^7)) + 
           p2q^6*p3q*s13^3*(5*s13^4*s23^3*(s13 + s23)^4*(29*s13^2 + 7*s13*
                s23 - 4*s23^2) + s12*s13^3*s23^2*(s13 + s23)^3*
              (200*s13^4 + 526*s13^3*s23 + 449*s13^2*s23^2 + 158*s13*s23^3 - 
               70*s23^4) - s12^9*(108*s13^4 + 234*s13^3*s23 + 319*s13^2*
                s23^2 + 178*s13*s23^3 + 25*s23^4) + s12^2*s13^2*s23^2*
              (s13 + s23)^2*(462*s13^5 + 2811*s13^4*s23 + 5637*s13^3*s23^2 + 
               3870*s13^2*s23^3 + 244*s13*s23^4 - 323*s23^5) - 
             s12^8*(270*s13^5 + 1044*s13^4*s23 + 1841*s13^3*s23^2 + 2002*
                s13^2*s23^3 + 1387*s13*s23^4 + 452*s23^5) + 
             s12^7*(81*s13^6 + 1242*s13^5*s23 + 3792*s13^4*s23^2 + 2646*s13^3*
                s23^3 - 2847*s13^2*s23^4 - 4648*s13*s23^5 - 1706*s23^6) + 
             s12^3*s13*s23*(s13 + s23)^2*(63*s13^6 + 3764*s13^5*s23 + 13056*
                s13^4*s23^2 + 15979*s13^3*s23^3 + 5599*s13^2*s23^4 - 1377*s13*
                s23^5 - 381*s23^6) + s12^6*(567*s13^7 + 5472*s13^6*s23 + 
               19223*s13^5*s23^2 + 29693*s13^4*s23^3 + 17344*s13^3*s23^4 - 
               3801*s13^2*s23^5 - 8034*s13*s23^6 - 2264*s23^7) + 
             s12^4*(s13 + s23)^2*(27*s13^7 + 2124*s13^6*s23 + 12237*s13^5*
                s23^2 + 24651*s13^4*s23^3 + 17064*s13^3*s23^4 - 280*s13^2*
                s23^5 - 2621*s13*s23^6 - 108*s23^7) + 
             s12^5*(351*s13^8 + 5535*s13^7*s23 + 26613*s13^6*s23^2 + 58399*
                s13^5*s23^3 + 61646*s13^4*s23^4 + 24303*s13^3*s23^5 - 6371*
                s13^2*s23^6 - 7051*s13*s23^7 - 1093*s23^8)) + 
           p2q^2*p3q^5*s12^2*(10*s12^11*s23^2*(19*s13 + 14*s23) - 
             3*s13^5*s23^4*(s13 + s23)^3*(133*s13^2 + 60*s13*s23 - 21*
                s23^2) + s12^10*(54*s13^4 + 270*s13^3*s23 + 75*s13^2*s23^2 + 
               479*s13*s23^3 + 435*s23^4) - s12*s13^4*s23^3*(s13 + s23)^2*
              (983*s13^4 + 948*s13^3*s23 + 721*s13^2*s23^2 + 3257*s13*s23^3 + 
               497*s23^4) + s12^9*(297*s13^5 + 3600*s13^4*s23 + 6257*s13^3*
                s23^2 + 2625*s13^2*s23^3 + 36*s13*s23^4 + 300*s23^5) + 
             s12^8*(-729*s13^6 + 1269*s13^5*s23 + 15209*s13^4*s23^2 + 23754*
                s13^3*s23^3 + 9934*s13^2*s23^4 - 1024*s13*s23^5 - 350*
                s23^6) - s12^7*(2187*s13^7 + 8910*s13^6*s23 + 5692*s13^5*
                s23^2 - 20554*s13^4*s23^3 - 32720*s13^3*s23^4 - 12136*s13^2*
                s23^5 + 1661*s13*s23^6 + 600*s23^7) - s12^2*s13^3*s23^2*
              (487*s13^7 - 82*s13^6*s23 + 769*s13^5*s23^2 + 14958*s13^4*
                s23^3 + 35131*s13^3*s23^4 + 32862*s13^2*s23^5 + 12985*s13*
                s23^6 + 1634*s23^7) + s12^3*s13^2*s23*(189*s13^8 + 3240*s13^7*
                s23 - 265*s13^6*s23^2 - 28027*s13^5*s23^3 - 73533*s13^4*
                s23^4 - 88361*s13^3*s23^5 - 52822*s13^2*s23^6 - 14350*s13*
                s23^7 - 1347*s23^8) - s12^6*(1107*s13^8 + 13284*s13^7*s23 + 
               37409*s13^6*s23^2 + 41701*s13^5*s23^3 + 12209*s13^4*s23^4 - 
               5896*s13^3*s23^5 - 672*s13^2*s23^6 + 1674*s13*s23^7 + 285*
                s23^8) + s12^4*s13*(162*s13^9 + 1971*s13^8*s23 - 5108*s13^7*
                s23^2 - 39644*s13^6*s23^3 - 95406*s13^5*s23^4 - 122945*s13^4*
                s23^5 - 90025*s13^3*s23^6 - 35758*s13^2*s23^7 - 6617*s13*
                s23^8 - 313*s23^9) + s12^5*(270*s13^9 - 4653*s13^8*s23 - 
               32615*s13^7*s23^2 - 78561*s13^6*s23^3 - 98249*s13^5*s23^4 - 
               70791*s13^4*s23^5 - 32099*s13^3*s23^6 - 9350*s13^2*s23^7 - 
               1097*s13*s23^8 - 40*s23^9)) + p2q*p3q^6*s12^3*
            (5*s12^10*s23^2*(40*s13 + 29*s23) - s13^4*s23^4*(s13 + s23)^2*
              (25*s13^3 + 402*s13^2*s23 + 877*s13*s23^2 + 108*s23^3) + 
             s12^9*(27*s13^4 + 63*s13^3*s23 + 462*s13^2*s23^2 + 1126*s13*
                s23^3 + 615*s23^4) + s12^8*(351*s13^5 + 2178*s13^4*s23 + 3890*
                s13^3*s23^2 + 3735*s13^2*s23^3 + 2627*s13*s23^4 + 990*
                s23^5) - s12*s13^3*s23^3*(178*s13^6 + 1387*s13^5*s23 + 4648*
                s13^4*s23^2 + 8034*s13^3*s23^3 + 7051*s13^2*s23^4 + 2837*s13*
                s23^5 + 381*s23^6) + s12^7*(567*s13^6 + 5535*s13^5*s23 + 
               16512*s13^4*s23^2 + 20647*s13^3*s23^3 + 11721*s13^2*s23^4 + 
               3283*s13*s23^5 + 710*s23^6) + 3*s12^6*(27*s13^7 + 1824*s13^6*
                s23 + 8871*s13^5*s23^2 + 17083*s13^4*s23^3 + 15285*s13^3*
                s23^4 + 5985*s13^2*s23^5 + 759*s13*s23^6 + 55*s23^7) - 
             s12^2*s13^2*s23^2*(319*s13^7 + 2002*s13^6*s23 + 2847*s13^5*
                s23^2 + 3801*s13^4*s23^3 + 6371*s13^3*s23^4 + 5630*s13^2*
                s23^5 + 2139*s13*s23^6 + 323*s23^7) + s12^3*s13*s23*
              (-234*s13^8 - 1841*s13^7*s23 + 2646*s13^6*s23^2 + 17344*s13^5*
                s23^3 + 24303*s13^4*s23^4 + 13883*s13^3*s23^5 + 2464*s13^2*
                s23^6 - 402*s13*s23^7 - 70*s23^8) + s12^5*(-270*s13^8 + 1242*
                s13^7*s23 + 19223*s13^6*s23^2 + 58399*s13^5*s23^3 + 78603*
                s13^4*s23^4 + 50613*s13^3*s23^5 + 13621*s13^2*s23^6 + 713*s13*
                s23^7 - 45*s23^8) + s12^4*(-108*s13^9 - 1044*s13^8*s23 + 3792*
                s13^7*s23^2 + 29693*s13^6*s23^3 + 61646*s13^5*s23^4 + 58499*
                s13^4*s23^5 + 25800*s13^3*s23^6 + 4035*s13^2*s23^7 - 52*s13*
                s23^8 - 20*s23^9)) + p2q^5*p3q^2*s13^2*
            (5*s13^5*s23^3*(s13 + s23)^4*(28*s13^2 - 25*s13*s23 - 8*s23^2) + 
             s12^10*(162*s13^4 + 189*s13^3*s23 - 487*s13^2*s23^2 - 983*s13*
                s23^3 - 399*s23^4) + s12*s13^4*s23^2*(s13 + s23)^3*
              (190*s13^4 - 91*s13^3*s23 - 261*s13^2*s23^2 - 158*s13*s23^3 - 
               313*s23^4) + s12^9*(270*s13^5 + 1971*s13^4*s23 + 3240*s13^3*
                s23^2 + 82*s13^2*s23^3 - 2914*s13*s23^4 - 1377*s23^5) + 
             s12^2*s13^3*s23^2*(s13 + s23)^2*(75*s13^5 + 2475*s13^4*s23 + 
               4909*s13^3*s23^2 - 157*s13^2*s23^3 - 3923*s13*s23^4 - 1347*
                s23^5) + s12^3*s13^2*s23*(s13 + s23)^2*(270*s13^6 + 5717*
                s13^5*s23 + 12050*s13^4*s23^2 + 2903*s13^3*s23^3 - 11960*
                s13^2*s23^4 - 11082*s13*s23^5 - 1634*s23^6) - 
             s12^8*(1107*s13^6 + 4653*s13^5*s23 + 5108*s13^4*s23^2 + 265*
                s13^3*s23^3 + 769*s13^2*s23^4 + 3600*s13*s23^5 + 1674*
                s23^6) - s12^7*(2187*s13^7 + 13284*s13^6*s23 + 32615*s13^5*
                s23^2 + 39644*s13^4*s23^3 + 28027*s13^3*s23^4 + 14958*s13^2*
                s23^5 + 5647*s13*s23^6 + 750*s23^7) - 
             s12^6*(729*s13^8 + 8910*s13^7*s23 + 37409*s13^6*s23^2 + 78561*
                s13^5*s23^3 + 95406*s13^4*s23^4 + 73533*s13^3*s23^5 + 35131*
                s13^2*s23^6 + 7732*s13*s23^7 - 9*s23^8) + 
             s12^4*s13*(54*s13^9 + 3600*s13^8*s23 + 15209*s13^7*s23^2 + 20554*
                s13^6*s23^3 - 12209*s13^5*s23^4 - 70791*s13^4*s23^5 - 90025*
                s13^3*s23^6 - 52822*s13^2*s23^7 - 12985*s13*s23^8 - 497*
                s23^9) + s12^5*(297*s13^9 + 1269*s13^8*s23 - 5692*s13^7*
                s23^2 - 41701*s13^6*s23^3 - 98249*s13^5*s23^4 - 122945*s13^4*
                s23^5 - 88361*s13^3*s23^6 - 32862*s13^2*s23^7 - 4251*s13*
                s23^8 + 63*s23^9)) - p2q^4*p3q^3*s13*
            (20*s13^6*s23^4*(s13 + s23)^4*(7*s13 + s23) + s12*s13^5*s23^3*
              (s13 + s23)^3*(557*s13^3 + 348*s13^2*s23 + 312*s13*s23^2 + 416*
                s23^3) + s12^10*s23*(3024*s13^4 + 7245*s13^3*s23 + 4254*s13^2*
                s23^2 - 667*s13*s23^3 - 615*s23^4) + s12^11*(108*s13^4 + 324*
                s13^3*s23 - 343*s13^2*s23^2 - 756*s13*s23^3 - 227*s23^4) + 
             s12^2*s13^4*s23^2*(s13 + s23)^2*(347*s13^5 - 731*s13^4*s23 + 301*
                s13^3*s23^2 + 7075*s13^2*s23^3 + 7106*s13*s23^4 + 1635*
                s23^5) - s12^3*s13^3*s23*(s13 + s23)^2*(207*s13^6 + 2528*
                s13^5*s23 - 3463*s13^4*s23^2 - 21281*s13^3*s23^3 - 26282*
                s13^2*s23^4 - 16608*s13*s23^5 - 2325*s23^6) + 
             s12^9*(-1998*s13^6 - 5850*s13^5*s23 + 3178*s13^4*s23^2 + 23043*
                s13^3*s23^3 + 21762*s13^2*s23^4 + 5459*s13*s23^5 - 310*
                s23^6) + s12^8*(-2538*s13^7 - 13725*s13^6*s23 - 26065*s13^5*
                s23^2 - 5263*s13^4*s23^3 + 37536*s13^3*s23^4 + 40508*s13^2*
                s23^5 + 13247*s13*s23^6 + 490*s23^7) + 
             s12^7*(567*s13^8 - 3267*s13^7*s23 - 21838*s13^6*s23^2 - 35733*
                s13^5*s23^3 + 3667*s13^4*s23^4 + 54145*s13^3*s23^5 + 44071*
                s13^2*s23^6 + 11777*s13*s23^7 + 585*s23^8) + 
             s12^6*(1377*s13^9 + 9873*s13^8*s23 + 23500*s13^7*s23^2 + 24310*
                s13^6*s23^3 + 29885*s13^5*s23^4 + 64646*s13^4*s23^5 + 71506*
                s13^3*s23^6 + 31799*s13^2*s23^7 + 4448*s13*s23^8 + 173*
                s23^9) + s12^5*s13*(135*s13^9 + 6966*s13^8*s23 + 35427*s13^7*
                s23^2 + 85510*s13^6*s23^3 + 123163*s13^5*s23^4 + 133705*s13^4*
                s23^5 + 113273*s13^3*s23^6 + 57881*s13^2*s23^7 + 12532*s13*
                s23^8 + 548*s23^9) + s12^4*s13^2*(-27*s13^9 - 1206*s13^8*
                s23 + 6655*s13^7*s23^2 + 47197*s13^6*s23^3 + 114123*s13^5*
                s23^4 + 157298*s13^4*s23^5 + 140330*s13^3*s23^6 + 77762*s13^2*
                s23^7 + 21431*s13*s23^8 + 1461*s23^9)) + p2q^3*p3q^4*s12*
            (s13^6*s23^4*(s13 + s23)^3*(227*s13^2 - 66*s13*s23 - 173*s23^2) + 
             s12*s13^5*s23^3*(s13 + s23)^2*(756*s13^4 - 845*s13^3*s23 - 4525*
                s13^2*s23^2 - 3352*s13*s23^3 - 548*s23^4) + 
             s12^11*(27*s13^4 + 207*s13^3*s23 - 347*s13^2*s23^2 - 557*s13*
                s23^3 - 140*s23^4) + s12^2*s13^4*s23^2*(s13 + s23)^2*
              (343*s13^5 - 4940*s13^4*s23 - 12225*s13^3*s23^2 - 11118*s13^2*
                s23^3 - 9610*s13*s23^4 - 1461*s23^5) + 
             s12^10*(-135*s13^5 + 1206*s13^4*s23 + 2942*s13^3*s23^2 + 37*
                s13^2*s23^3 - 2019*s13*s23^4 - 580*s23^5) - 
             s12^9*(1377*s13^6 + 6966*s13^5*s23 + 6655*s13^4*s23^2 - 1800*
                s13^3*s23^3 - 814*s13^2*s23^4 + 3027*s13*s23^5 + 920*s23^6) - 
             s12^8*(567*s13^7 + 9873*s13^6*s23 + 35427*s13^5*s23^2 + 47197*
                s13^4*s23^3 + 25679*s13^3*s23^4 + 6946*s13^2*s23^5 + 2953*s13*
                s23^6 + 680*s23^7) + s12^5*s13*s23*(5850*s13^8 + 26065*s13^7*
                s23 + 35733*s13^6*s23^2 - 29885*s13^5*s23^3 - 133705*s13^4*
                s23^4 - 140330*s13^3*s23^5 - 61823*s13^2*s23^6 - 10376*s13*
                s23^7 - 416*s23^8) + s12^7*(2538*s13^8 + 3267*s13^7*s23 - 
               23500*s13^6*s23^2 - 85510*s13^5*s23^3 - 114123*s13^4*s23^4 - 
               72307*s13^3*s23^5 - 21557*s13^2*s23^6 - 2532*s13*s23^7 - 220*
                s23^8) - s12^3*s13^3*s23*(324*s13^8 + 7245*s13^7*s23 + 23043*
                s13^6*s23^2 + 37536*s13^5*s23^3 + 54145*s13^4*s23^4 + 71506*
                s13^3*s23^5 + 57881*s13^2*s23^6 + 21431*s13*s23^7 + 2325*
                s23^8) + s12^6*(1998*s13^9 + 13725*s13^8*s23 + 21838*s13^7*
                s23^2 - 24310*s13^6*s23^3 - 123163*s13^5*s23^4 - 157298*s13^4*
                s23^5 - 90453*s13^3*s23^6 - 22922*s13^2*s23^7 - 1560*s13*
                s23^8 - 20*s23^9) - s12^4*s13^2*(108*s13^9 + 3024*s13^8*s23 + 
               3178*s13^7*s23^2 - 5263*s13^6*s23^3 + 3667*s13^5*s23^4 + 64646*
                s13^4*s23^5 + 113273*s13^3*s23^6 + 77762*s13^2*s23^7 + 21258*
                s13*s23^8 + 1635*s23^9))) + 
         p1q*(-(p3q^6*s12^3*(s12 + s13)*(s12 + s23)*(5*s12^9*s23^2*(2*s13 + 
                s23) - s13^4*s23^3*(s13 + s23)^3*(337*s13^2 + 763*s13*s23 + 
                250*s23^2) + s12^8*(-18*s13^4 - 9*s13^3*s23 + 44*s13^2*
                 s23^2 + 65*s13*s23^3 + 30*s23^4) - s12*s13^3*s23^2*
               (s13 + s23)^2*(485*s13^4 + 1842*s13^3*s23 + 4405*s13^2*s23^2 + 
                3790*s13*s23^3 + 911*s23^4) + s12^7*(-45*s13^5 + 
                72*s13^4*s23 + 410*s13^3*s23^2 + 423*s13^2*s23^3 + 
                85*s13*s23^4 - 20*s23^5) + s12^6*(-54*s13^6 + 342*s13^5*s23 + 
                2056*s13^4*s23^2 + 2862*s13^3*s23^3 + 1057*s13^2*s23^4 - 
                345*s13*s23^5 - 190*s23^6) + s12^5*(-72*s13^7 + 342*s13^6*
                 s23 + 3720*s13^5*s23^2 + 7254*s13^4*s23^3 + 4572*s13^3*
                 s23^4 - 131*s13^2*s23^5 - 955*s13*s23^6 - 225*s23^7) - 
              s12^2*s13^2*s23*(135*s13^7 + 1166*s13^6*s23 + 5210*s13^5*
                 s23^2 + 14939*s13^4*s23^3 + 22915*s13^3*s23^4 + 
                17695*s13^2*s23^5 + 6404*s13*s23^6 + 864*s23^7) - 
              s12^4*(72*s13^8 + 144*s13^7*s23 - 2583*s13^6*s23^2 - 
                6164*s13^5*s23^3 - 2865*s13^4*s23^4 + 2739*s13^3*s23^5 + 
                2825*s13^2*s23^6 + 800*s13*s23^7 + 80*s23^8) - 
              s12^3*s13*(27*s13^8 + 360*s13^7*s23 + 138*s13^6*s23^2 + 
                1326*s13^5*s23^3 + 8781*s13^4*s23^4 + 14956*s13^3*s23^5 + 
                10361*s13^2*s23^6 + 2880*s13*s23^7 + 220*s23^8))) + 
           p2q^6*s13^3*(s12 + s13)*(s13 + s23)*(-5*s13^4*s23^3*(s13 + s23)^3*
              (s13^2 + 3*s13*s23 - 16*s23^2) + s12^9*(27*s13^3 + 135*s13^2*
                s23 + 485*s13*s23^2 + 337*s23^3) - s12^2*s13^2*s23^2*
              (s13 + s23)^2*(44*s13^4 + 335*s13^3*s23 + 343*s13^2*s23^2 - 
               1152*s13*s23^3 - 864*s23^4) - 5*s12*s13^3*s23^2*(s13 + s23)^2*
              (2*s13^4 + 9*s13^3*s23 - 3*s13^2*s23^2 - 72*s13*s23^3 - 44*
                s23^4) + 2*s12^8*(36*s13^4 + 180*s13^3*s23 + 583*s13^2*
                s23^2 + 1406*s13*s23^3 + 887*s23^4) + 
             2*s12^7*(36*s13^5 + 72*s13^4*s23 + 69*s13^3*s23^2 + 2605*s13^2*
                s23^3 + 4287*s13*s23^4 + 1775*s23^5) + 
             s12^6*(54*s13^6 - 342*s13^5*s23 - 2583*s13^4*s23^2 + 1326*s13^3*
                s23^3 + 14939*s13^2*s23^4 + 14442*s13*s23^5 + 3376*s23^6) + 
             s12^3*s13*s23*(9*s13^7 - 410*s13^6*s23 - 2862*s13^5*s23^2 - 4572*
                s13^4*s23^3 + 2739*s13^3*s23^4 + 10361*s13^2*s23^5 + 6404*s13*
                s23^6 + 911*s23^7) + s12^5*(45*s13^7 - 342*s13^6*s23 - 3720*
                s13^5*s23^2 - 6164*s13^4*s23^3 + 8781*s13^3*s23^4 + 22915*
                s13^2*s23^5 + 12896*s13*s23^6 + 1513*s23^7) + 
             s12^4*(18*s13^8 - 72*s13^7*s23 - 2056*s13^6*s23^2 - 7254*s13^5*
                s23^3 - 2865*s13^4*s23^4 + 14956*s13^3*s23^5 + 17695*s13^2*
                s23^6 + 5612*s13*s23^7 + 250*s23^8)) + p2q^4*p3q^2*s13*
            (-5*s13^6*s23^3*(s13 + s23)^4*(28*s13^3 - 133*s13^2*s23 + 87*s13*
                s23^2 + 20*s23^3) + 3*s12^12*(27*s13^4 + 39*s13^3*s23 - 62*
                s13^2*s23^2 - 113*s13*s23^3 - 29*s23^4) + 
             s12^11*(189*s13^5 + 2313*s13^4*s23 + 6427*s13^3*s23^2 + 6879*
                s13^2*s23^3 + 2555*s13*s23^4 + 89*s23^5) - s12*s13^5*s23^2*
              (s13 + s23)^3*(190*s13^5 - 828*s13^4*s23 - 786*s13^3*s23^2 + 
               216*s13^2*s23^3 + 203*s13*s23^4 + 879*s23^5) + 
             s12^10*(-630*s13^6 - 3132*s13^5*s23 + 3275*s13^4*s23^2 + 23139*
                s13^3*s23^3 + 27430*s13^2*s23^4 + 10608*s13*s23^5 + 510*
                s23^6) - s12^2*s13^4*s23^2*(s13 + s23)^2*(118*s13^6 + 3277*
                s13^5*s23 - 1202*s13^4*s23^2 - 18561*s13^3*s23^3 - 12297*
                s13^2*s23^4 + 4482*s13*s23^5 + 3059*s23^6) - 
             s12^9*(432*s13^7 + 8199*s13^6*s23 + 21651*s13^5*s23^2 + 5363*
                s13^4*s23^3 - 33834*s13^3*s23^4 - 33388*s13^2*s23^5 - 8345*
                s13*s23^6 + 230*s23^7) - s12^3*s13^3*s23*(s13 + s23)^2*
              (297*s13^7 + 9161*s13^6*s23 + 3864*s13^5*s23^2 - 50455*s13^4*
                s23^3 - 77929*s13^3*s23^4 - 24570*s13^2*s23^5 + 16172*s13*
                s23^6 + 4534*s23^7) + s12^8*(2889*s13^8 + 10341*s13^7*s23 - 
               1703*s13^6*s23^2 - 24732*s13^5*s23^3 - 1224*s13^4*s23^4 + 
               22296*s13^3*s23^5 + 375*s13^2*s23^6 - 9093*s13*s23^7 - 1555*
                s23^8) + s12^7*(3789*s13^9 + 29493*s13^8*s23 + 82211*s13^7*
                s23^2 + 114810*s13^6*s23^3 + 106201*s13^5*s23^4 + 62776*s13^4*
                s23^5 - 11879*s13^3*s23^6 - 41813*s13^2*s23^7 - 17073*s13*
                s23^8 - 1347*s23^9) + s12^4*s13^2*(-36*s13^10 - 5625*s13^9*
                s23 - 17605*s13^8*s23^2 + 38054*s13^7*s23^3 + 260751*s13^6*
                s23^4 + 484611*s13^5*s23^5 + 400330*s13^4*s23^6 + 105606*
                s13^3*s23^7 - 50123*s13^2*s23^8 - 32702*s13*s23^9 - 3373*
                s23^10) + s12^5*s13*(-378*s13^10 - 2754*s13^9*s23 + 34052*
                s13^8*s23^2 + 217669*s13^7*s23^3 + 503581*s13^6*s23^4 + 
               583755*s13^5*s23^5 + 316926*s13^4*s23^6 + 7368*s13^3*s23^7 - 
               69742*s13^2*s23^8 - 23354*s13*s23^9 - 1475*s23^10) + 
             s12^6*(864*s13^10 + 18855*s13^9*s23 + 107431*s13^8*s23^2 + 
               280021*s13^7*s23^3 + 401292*s13^6*s23^4 + 321211*s13^5*s23^5 + 
               92464*s13^4*s23^6 - 58744*s13^3*s23^7 - 49146*s13^2*s23^8 - 
               8824*s13*s23^9 - 356*s23^10)) + p2q^5*p3q*s13^2*
            (-5*s13^5*s23^3*(s13 + s23)^4*(29*s13^3 - 129*s13^2*s23 - 32*s13*
                s23^2 + 12*s23^3) + s12^11*(-81*s13^4 - 72*s13^3*s23 + 301*
                s13^2*s23^2 + 644*s13*s23^3 + 312*s23^4) - s12*s13^4*s23^2*
              (s13 + s23)^3*(200*s13^5 - 541*s13^4*s23 - 2627*s13^3*s23^2 - 
               2378*s13^2*s23^3 - 927*s13*s23^4 + 210*s23^5) + 
             s12^10*(-261*s13^5 - 738*s13^4*s23 + 477*s13^3*s23^2 + 2613*
                s13^2*s23^3 + 2504*s13*s23^4 + 765*s23^5) + 
             s12^9*(-81*s13^6 + 1737*s13^5*s23 + 9554*s13^4*s23^2 + 17798*
                s13^3*s23^3 + 15370*s13^2*s23^4 + 4955*s13*s23^5 - 113*
                s23^6) - s12^2*s13^3*s23^2*(s13 + s23)^2*(329*s13^6 + 914*
                s13^5*s23 - 4047*s13^4*s23^2 - 16095*s13^3*s23^3 - 15290*
                s13^2*s23^4 - 3007*s13*s23^5 + 745*s23^6) + 
             s12^8*(27*s13^7 + 4887*s13^6*s23 + 29115*s13^5*s23^2 + 71744*
                s13^4*s23^3 + 84897*s13^3*s23^4 + 45283*s13^2*s23^5 + 5737*
                s13*s23^6 - 1978*s23^7) - s12^3*s13^2*s23*(s13 + s23)^2*
              (81*s13^7 + 6604*s13^6*s23 + 11357*s13^5*s23^2 - 18455*s13^4*
                s23^3 - 56800*s13^3*s23^4 - 36316*s13^2*s23^5 - 1755*s13*
                s23^6 + 1206*s23^7) + s12^7*(-819*s13^8 - 1539*s13^7*s23 + 
               27392*s13^6*s23^2 + 129472*s13^5*s23^3 + 229799*s13^4*s23^4 + 
               190394*s13^3*s23^5 + 64390*s13^2*s23^6 + 509*s13*s23^7 - 2286*
                s23^8) + s12^6*(-1215*s13^9 - 11484*s13^8*s23 - 10565*s13^7*
                s23^2 + 98713*s13^6*s23^3 + 317540*s13^5*s23^4 + 395082*s13^4*
                s23^5 + 221295*s13^3*s23^6 + 39898*s13^2*s23^7 - 5809*s13*
                s23^8 - 1043*s23^9) + s12^4*s13*(9*s13^10 - 4113*s13^9*s23 - 
               28662*s13^8*s23^2 - 50195*s13^7*s23^3 + 48466*s13^6*s23^4 + 
               264033*s13^5*s23^5 + 337594*s13^4*s23^6 + 181209*s13^3*s23^7 + 
               29097*s13^2*s23^8 - 5210*s13*s23^9 - 780*s23^10) + 
             s12^5*(-459*s13^10 - 11493*s13^9*s23 - 40245*s13^8*s23^2 - 2231*
                s13^7*s23^3 + 216914*s13^6*s23^4 + 441284*s13^5*s23^5 + 
               371252*s13^4*s23^6 + 127758*s13^3*s23^7 + 3729*s13^2*s23^8 - 
               4456*s13*s23^9 - 169*s23^10)) + p2q^2*p3q^4*s12*
            (-10*s12^13*s23^2*(19*s13 + 14*s23) - s13^6*s23^4*(s13 + s23)^3*
              (87*s13^3 - 350*s13^2*s23 + 279*s13*s23^2 + 356*s23^3) + 
             s12^12*(-36*s13^4 - 297*s13^3*s23 - 118*s13^2*s23^2 + 258*s13*
                s23^3 + 105*s23^4) - s12^11*(378*s13^5 + 5625*s13^4*s23 + 
               9755*s13^3*s23^2 + 3513*s13^2*s23^3 - 2700*s13*s23^4 - 1385*
                s23^5) - s12*s13^5*s23^3*(s13 + s23)^2*(339*s13^5 - 3233*
                s13^4*s23 - 4481*s13^3*s23^2 + 3850*s13^2*s23^3 + 5874*s13*
                s23^4 + 1475*s23^5) + s12^10*(864*s13^6 - 2754*s13^5*s23 - 
               17605*s13^4*s23^2 - 22483*s13^3*s23^3 - 5470*s13^2*s23^4 + 
               4436*s13*s23^5 + 1590*s23^6) - s12^2*s13^4*s23^2*(s13 + s23)^2*
              (186*s13^6 - 7251*s13^5*s23 - 13114*s13^4*s23^2 + 91*s13^3*
                s23^3 + 12557*s13^2*s23^4 + 16608*s13*s23^5 + 3373*s23^6) + 
             s12^9*(3789*s13^7 + 18855*s13^6*s23 + 34052*s13^5*s23^2 + 38054*
                s13^4*s23^3 + 33566*s13^3*s23^4 + 17688*s13^2*s23^5 + 2335*
                s13*s23^6 - 490*s23^7) + s12^8*(2889*s13^8 + 29493*s13^7*
                s23 + 107431*s13^6*s23^2 + 217669*s13^5*s23^3 + 260751*s13^4*
                s23^4 + 174975*s13^3*s23^5 + 50621*s13^2*s23^6 - 1350*s13*
                s23^7 - 1675*s23^8) + s12^3*s13^3*s23*(117*s13^9 + 6427*s13^8*
                s23 + 23139*s13^7*s23^2 + 33834*s13^6*s23^3 + 22296*s13^5*
                s23^4 - 11879*s13^4*s23^5 - 58744*s13^3*s23^6 - 69742*s13^2*
                s23^7 - 32702*s13*s23^8 - 4534*s23^9) + 
             s12^7*(-432*s13^9 + 10341*s13^8*s23 + 82211*s13^7*s23^2 + 280021*
                s13^6*s23^3 + 503581*s13^5*s23^4 + 484611*s13^4*s23^5 + 
               230883*s13^3*s23^6 + 38673*s13^2*s23^7 - 3462*s13*s23^8 - 835*
                s23^9) + s12^4*s13^2*(81*s13^10 + 2313*s13^9*s23 + 3275*s13^8*
                s23^2 - 5363*s13^7*s23^3 - 1224*s13^6*s23^4 + 62776*s13^5*
                s23^5 + 92464*s13^4*s23^6 + 7368*s13^3*s23^7 - 50123*s13^2*
                s23^8 - 25240*s13*s23^9 - 3059*s23^10) + 
             s12^5*s13*(189*s13^10 - 3132*s13^9*s23 - 21651*s13^8*s23^2 - 
               24732*s13^7*s23^3 + 106201*s13^6*s23^4 + 321211*s13^5*s23^5 + 
               316926*s13^4*s23^6 + 105606*s13^3*s23^7 - 12308*s13^2*s23^8 - 
               10600*s13*s23^9 - 879*s23^10) + s12^6*(-630*s13^10 - 8199*
                s13^9*s23 - 1703*s13^8*s23^2 + 114810*s13^7*s23^3 + 401292*
                s13^6*s23^4 + 583755*s13^5*s23^5 + 400330*s13^4*s23^6 + 
               110897*s13^3*s23^7 + 274*s13^2*s23^8 - 2840*s13*s23^9 - 100*
                s23^10)) + p2q*p3q^5*s12^2*(-5*s12^12*s23^2*(40*s13 + 29*
                s23) + s13^5*s23^4*(s13 + s23)^3*(312*s13^3 - 171*s13^2*s23 - 
               536*s13*s23^2 - 169*s23^3) + s12^11*(9*s13^4 - 81*s13^3*s23 - 
               329*s13^2*s23^2 - 59*s13*s23^3 + 65*s23^4) - 
             s12^10*(459*s13^5 + 4113*s13^4*s23 + 6766*s13^3*s23^2 + 1572*
                s13^2*s23^3 - 3650*s13*s23^4 - 1870*s23^5) + 
             s12*s13^4*s23^3*(s13 + s23)^2*(644*s13^5 + 1216*s13^4*s23 + 1879*
                s13^3*s23^2 + 763*s13^2*s23^3 - 2896*s13*s23^4 - 780*s23^5) + 
             s12^9*(-1215*s13^6 - 11493*s13^5*s23 - 28662*s13^4*s23^2 - 24646*
                s13^3*s23^3 + 1890*s13^2*s23^4 + 11682*s13*s23^5 + 3870*
                s23^6) - s12^8*(819*s13^7 + 11484*s13^6*s23 + 40245*s13^5*
                s23^2 + 50195*s13^4*s23^3 + 10863*s13^3*s23^4 - 23275*s13^2*
                s23^5 - 16483*s13*s23^6 - 3155*s23^7) + s12^2*s13^3*s23^2*
              (301*s13^8 + 2613*s13^7*s23 + 15370*s13^6*s23^2 + 45283*s13^5*
                s23^3 + 64390*s13^4*s23^4 + 39898*s13^3*s23^5 + 3729*s13^2*
                s23^6 - 5210*s13*s23^7 - 1206*s23^8) + 
             s12^7*(27*s13^8 - 1539*s13^7*s23 - 10565*s13^6*s23^2 - 2231*
                s13^5*s23^3 + 48466*s13^4*s23^4 + 82353*s13^3*s23^5 + 51527*
                s13^2*s23^6 + 12332*s13*s23^7 + 925*s23^8) + 
             s12^3*s13^2*s23*(-72*s13^9 + 477*s13^8*s23 + 17798*s13^7*s23^2 + 
               84897*s13^6*s23^3 + 190394*s13^5*s23^4 + 221295*s13^4*s23^5 + 
               127758*s13^3*s23^6 + 29097*s13^2*s23^7 - 657*s13*s23^8 - 745*
                s23^9) + s12^6*(-81*s13^9 + 4887*s13^8*s23 + 27392*s13^7*
                s23^2 + 98713*s13^6*s23^3 + 216914*s13^5*s23^4 + 264033*s13^4*
                s23^5 + 168371*s13^3*s23^6 + 49682*s13^2*s23^7 + 4529*s13*
                s23^8 - 80*s23^9) + s12^4*s13*(-81*s13^10 - 738*s13^9*s23 + 
               9554*s13^8*s23^2 + 71744*s13^7*s23^3 + 229799*s13^6*s23^4 + 
               395082*s13^5*s23^5 + 371252*s13^4*s23^6 + 181209*s13^3*s23^7 + 
               38620*s13^2*s23^8 + 1517*s13*s23^9 - 210*s23^10) + 
             s12^5*(-261*s13^10 + 1737*s13^9*s23 + 29115*s13^8*s23^2 + 129472*
                s13^7*s23^3 + 317540*s13^6*s23^4 + 441284*s13^5*s23^5 + 
               337594*s13^4*s23^6 + 131187*s13^3*s23^7 + 20559*s13^2*s23^8 + 
               297*s13*s23^9 - 60*s23^10)) - p2q^3*p3q^3*
            (-20*s13^7*s23^4*(s13 + s23)^4*(7*s13^2 - 19*s13*s23 - 2*s23^2) - 
             s12*s13^6*s23^3*(s13 + s23)^3*(417*s13^4 - 970*s13^3*s23 - 838*
                s13^2*s23^2 - 911*s13*s23^3 - 1025*s23^4) + 
             s12^13*(27*s13^4 + 207*s13^3*s23 - 157*s13^2*s23^2 - 417*s13*
                s23^3 - 140*s23^4) + s12^12*(-9*s13^5 + 1872*s13^4*s23 + 3980*
                s13^3*s23^2 + 2093*s13^2*s23^3 - 281*s13*s23^4 - 180*s23^5) - 
             s12^2*s13^5*s23^2*(s13 + s23)^2*(157*s13^6 - 2407*s13^5*s23 + 
               2311*s13^4*s23^2 + 11581*s13^3*s23^3 - 1866*s13^2*s23^4 - 
               11277*s13*s23^5 - 3620*s23^6) + s12^11*(-936*s13^6 - 6453*
                s13^5*s23 - 10199*s13^4*s23^2 - 4263*s13^3*s23^3 + 2346*s13^2*
                s23^4 + 2497*s13*s23^5 + 720*s23^6) + 
             s12^10*(144*s13^7 - 10242*s13^6*s23 - 48116*s13^5*s23^2 - 85225*
                s13^4*s23^3 - 65089*s13^3*s23^4 - 13796*s13^2*s23^5 + 5918*
                s13*s23^6 + 1880*s23^7) + s12^3*s13^4*s23*(s13 + s23)^2*
              (207*s13^7 + 3566*s13^6*s23 - 11602*s13^5*s23^2 - 45451*s13^4*
                s23^3 - 32164*s13^3*s23^4 + 12602*s13^2*s23^5 + 28696*s13*
                s23^6 + 5921*s23^7) + s12^9*(4806*s13^8 + 15534*s13^7*s23 - 
               16475*s13^6*s23^2 - 134267*s13^5*s23^3 - 212503*s13^4*s23^4 - 
               134668*s13^3*s23^5 - 23607*s13^2*s23^6 + 7242*s13*s23^7 + 1620*
                s23^8) + s12^8*(4806*s13^9 + 35316*s13^8*s23 + 84159*s13^7*
                s23^2 + 21266*s13^6*s23^3 - 182470*s13^5*s23^4 - 244391*s13^4*
                s23^5 - 97177*s13^3*s23^6 + 3428*s13^2*s23^7 + 6646*s13*
                s23^8 + 540*s23^9) - s12^5*s13^2*(9*s13^10 + 6453*s13^9*s23 + 
               48116*s13^8*s23^2 + 134267*s13^7*s23^3 + 182470*s13^6*s23^4 + 
               136037*s13^5*s23^5 + 6983*s13^4*s23^6 - 123336*s13^3*s23^7 - 
               121195*s13^2*s23^8 - 40538*s13*s23^9 - 3620*s23^10) + 
             s12^7*(144*s13^10 + 15534*s13^9*s23 + 84159*s13^8*s23^2 + 155242*
                s13^7*s23^3 + 44321*s13^6*s23^4 - 136037*s13^5*s23^5 - 96453*
                s13^4*s23^6 + 21736*s13^3*s23^7 + 28040*s13^2*s23^8 + 3986*
                s13*s23^9 + 40*s23^10) + s12^6*s13*(-936*s13^10 - 10242*s13^9*
                s23 - 16475*s13^8*s23^2 + 21266*s13^7*s23^3 + 44321*s13^6*
                s23^4 - 17162*s13^5*s23^5 - 6983*s13^4*s23^6 + 84438*s13^3*
                s23^7 + 75915*s13^2*s23^8 + 18517*s13*s23^9 + 1025*s23^10) + 
             s12^4*s13^3*(27*s13^10 + 1872*s13^9*s23 - 10199*s13^8*s23^2 - 
               85225*s13^7*s23^3 - 212503*s13^6*s23^4 - 244391*s13^5*s23^5 - 
               96453*s13^4*s23^6 + 84438*s13^3*s23^7 + 121195*s13^2*s23^8 + 
               51294*s13*s23^9 + 5921*s23^10))) + 
         p1q^4*s23*(p2q^3*(s13 + s23)*(-5*s13^5*s23^5*(s13 + s23)^3*
              (14*s13^2 - 27*s13*s23 + 4*s23^2) - 5*s12*s13^4*s23^4*
              (s13 + s23)^2*(28*s13^4 + 26*s13^3*s23 - 91*s13^2*s23^2 - 38*
                s13*s23^3 + 6*s23^4) + s12^10*(99*s13^5 + 384*s13^4*s23 - 256*
                s13^3*s23^2 - 500*s13^2*s23^3 - 119*s13*s23^4 - 120*s23^5) - 
             s12^2*s13^3*s23^3*(s13 + s23)^2*(42*s13^5 + 209*s13^4*s23 + 308*
                s13^3*s23^2 - 778*s13^2*s23^3 - 541*s13*s23^4 + 128*s23^5) + 
             s12^9*(477*s13^6 + 1652*s13^5*s23 - 255*s13^4*s23^2 - 1890*s13^3*
                s23^3 - 856*s13^2*s23^4 - 756*s13*s23^5 - 480*s23^6) + 
             s12^8*(918*s13^7 + 3509*s13^6*s23 + 1757*s13^5*s23^2 - 4522*
                s13^4*s23^3 - 826*s13^3*s23^4 + 1185*s13^2*s23^5 - 2117*s13*
                s23^6 - 720*s23^7) + s12^3*s13^2*s23^2*(125*s13^8 + 947*s13^7*
                s23 + 112*s13^6*s23^2 - 4610*s13^5*s23^3 - 1318*s13^4*s23^4 + 
               7813*s13^3*s23^5 + 5461*s13^2*s23^6 - 96*s13*s23^7 - 326*
                s23^8) + 3*s12^7*(294*s13^8 + 1546*s13^7*s23 + 1849*s13^6*
                s23^2 - 2059*s13^5*s23^3 - 1151*s13^4*s23^4 + 3273*s13^3*
                s23^5 + 952*s13^2*s23^6 - 1056*s13*s23^7 - 160*s23^8) + 
             s12^5*s13*(81*s13^9 + 1406*s13^8*s23 + 5693*s13^7*s23^2 + 2590*
                s13^6*s23^3 - 14111*s13^5*s23^4 - 753*s13^4*s23^5 + 27741*
                s13^3*s23^6 + 15083*s13^2*s23^7 - 2250*s13*s23^8 - 1052*
                s23^9) + s12^4*s13*s23*(183*s13^9 + 1888*s13^8*s23 + 3705*
                s13^7*s23^2 - 5279*s13^6*s23^3 - 10797*s13^5*s23^4 + 10803*
                s13^4*s23^5 + 19772*s13^3*s23^6 + 4241*s13^2*s23^7 - 1573*s13*
                s23^8 - 163*s23^9) + s12^6*(423*s13^9 + 3620*s13^8*s23 + 7721*
                s13^7*s23^2 - 3171*s13^6*s23^3 - 11706*s13^5*s23^4 + 13545*
                s13^4*s23^5 + 19885*s13^3*s23^6 + 312*s13^2*s23^7 - 2577*s13*
                s23^8 - 120*s23^9)) + p3q^3*(s12 + s23)*
            (-120*s13^6*s23^5*(s13 + s23)^4 - s12*s13^4*s23^4*(s13 + s23)^3*
              (119*s13^3 + 399*s13^2*s23 + 563*s13*s23^2 + 163*s23^3) + 
             s12^10*(81*s13^5 + 183*s13^4*s23 + 125*s13^3*s23^2 - 42*s13^2*
                s23^3 - 140*s13*s23^4 - 70*s23^5) - s12^2*s13^3*s23^3*
              (s13 + s23)^2*(500*s13^5 - 144*s13^4*s23 - 1397*s13^3*s23^2 + 
               82*s13^2*s23^3 + 921*s13*s23^4 + 326*s23^5) + 
             s12^9*(423*s13^6 + 1406*s13^5*s23 + 1888*s13^4*s23^2 + 947*s13^3*
                s23^3 - 293*s13^2*s23^4 - 410*s13*s23^5 - 75*s23^6) - 
             s12^3*s13^2*s23^2*(s13 + s23)^2*(256*s13^6 + 1378*s13^5*s23 - 
               2186*s13^4*s23^2 - 6825*s13^3*s23^3 - 4049*s13^2*s23^4 - 160*
                s13*s23^5 + 128*s23^6) + s12^4*s13*s23*(s13 + s23)^2*
              (384*s13^7 - 1023*s13^6*s23 - 2860*s13^5*s23^2 + 3290*s13^4*
                s23^3 + 9825*s13^3*s23^4 + 4801*s13^2*s23^5 + 345*s13*s23^6 - 
               30*s23^7) + s12^8*(882*s13^7 + 3620*s13^6*s23 + 5693*s13^5*
                s23^2 + 3705*s13^4*s23^3 + 112*s13^3*s23^4 - 768*s13^2*
                s23^5 + 55*s13*s23^6 + 175*s23^7) + s12^7*(918*s13^8 + 4638*
                s13^7*s23 + 7721*s13^6*s23^2 + 2590*s13^5*s23^3 - 5279*s13^4*
                s23^4 - 4610*s13^3*s23^5 - 47*s13^2*s23^6 + 970*s13*s23^7 + 
               275*s23^8) + s12^6*(477*s13^9 + 3509*s13^8*s23 + 5547*s13^7*
                s23^2 - 3171*s13^6*s23^3 - 14111*s13^5*s23^4 - 10797*s13^4*
                s23^5 - 1318*s13^3*s23^6 + 1789*s13^2*s23^7 + 805*s13*s23^8 + 
               75*s23^9) + s12^5*(99*s13^10 + 1652*s13^9*s23 + 1757*s13^8*
                s23^2 - 6177*s13^7*s23^3 - 11706*s13^6*s23^4 - 753*s13^5*
                s23^5 + 10803*s13^4*s23^6 + 7813*s13^3*s23^7 + 1732*s13^2*
                s23^8 + 130*s13*s23^9 - 20*s23^10)) + 
           p2q*p3q^2*(5*s13^5*s23^5*(s13 + s23)^4*(100*s13^2 - 117*s13*s23 + 
               20*s23^2) + s12*s13^4*s23^4*(s13 + s23)^3*(1526*s13^4 + 1521*
                s13^3*s23 - 187*s13^2*s23^2 + 197*s13*s23^3 - 236*s23^4) + 
             s12^11*(252*s13^5 + 1608*s13^4*s23 + 2987*s13^3*s23^2 + 3708*
                s13^2*s23^3 + 3357*s13*s23^4 + 1240*s23^5) + 
             s12^2*s13^3*s23^3*(s13 + s23)^2*(2139*s13^6 + 4305*s13^5*s23 + 
               7134*s13^4*s23^2 + 13164*s13^3*s23^3 + 8057*s13^2*s23^4 - 429*
                s13*s23^5 - 860*s23^6) + s12^10*(693*s13^6 + 3835*s13^5*s23 + 
               6255*s13^4*s23^2 + 8914*s13^3*s23^3 + 15905*s13^2*s23^4 + 
               14599*s13*s23^5 + 4495*s23^6) + s12^3*s13^2*s23^2*
              (s13 + s23)^2*(2007*s13^7 + 2730*s13^6*s23 + 4150*s13^5*s23^2 + 
               28516*s13^4*s23^3 + 39158*s13^3*s23^4 + 14425*s13^2*s23^5 - 
               1622*s13*s23^6 - 572*s23^7) + s12^9*(1071*s13^7 + 4797*s13^6*
                s23 + 2361*s13^5*s23^2 - 10684*s13^4*s23^3 - 1795*s13^3*
                s23^4 + 25391*s13^2*s23^5 + 23272*s13*s23^6 + 5525*s23^7) + 
             s12^8*(1314*s13^8 + 6161*s13^7*s23 + 3096*s13^6*s23^2 - 30885*
                s13^5*s23^3 - 56696*s13^4*s23^4 - 18465*s13^3*s23^5 + 22872*
                s13^2*s23^6 + 15725*s13*s23^7 + 1950*s23^8) + 
             s12^7*(1098*s13^9 + 7840*s13^8*s23 + 12844*s13^7*s23^2 - 13157*
                s13^6*s23^3 - 51417*s13^5*s23^4 - 31885*s13^4*s23^5 + 17675*
                s13^3*s23^6 + 21172*s13^2*s23^7 + 2940*s13*s23^8 - 950*
                s23^9) + s12^6*(585*s13^10 + 6699*s13^9*s23 + 15804*s13^8*
                s23^2 + 10256*s13^7*s23^3 + 4100*s13^6*s23^4 + 45559*s13^5*
                s23^5 + 96854*s13^4*s23^6 + 74282*s13^3*s23^7 + 18840*s13^2*
                s23^8 - 1298*s13*s23^9 - 685*s23^10) + s12^4*s13*s23*
              (1065*s13^10 + 5815*s13^9*s23 + 6778*s13^8*s23^2 + 16057*s13^7*
                s23^3 + 85570*s13^6*s23^4 + 179985*s13^5*s23^5 + 175410*s13^4*
                s23^6 + 81460*s13^3*s23^7 + 14413*s13^2*s23^8 - 319*s13*
                s23^9 - 238*s23^10) + s12^5*(171*s13^11 + 3515*s13^10*s23 + 
               10411*s13^9*s23^2 + 10771*s13^8*s23^3 + 26776*s13^7*s23^4 + 
               103905*s13^6*s23^5 + 183247*s13^5*s23^6 + 156312*s13^4*s23^7 + 
               62183*s13^3*s23^8 + 7599*s13^2*s23^9 - 781*s13*s23^10 - 55*
                s23^11)) + p2q^2*p3q*(5*s13^5*s23^5*(s13 + s23)^4*
              (248*s13^2 - 93*s13*s23 - 11*s23^2) + s12*s13^4*s23^4*
              (s13 + s23)^3*(3357*s13^4 + 4528*s13^3*s23 - 383*s13^2*s23^2 - 
               67*s13*s23^3 - 238*s23^4) + s12^11*(171*s13^5 + 1065*s13^4*
                s23 + 2007*s13^3*s23^2 + 2139*s13^2*s23^3 + 1526*s13*s23^4 + 
               500*s23^5) + s12^2*s13^3*s23^3*(s13 + s23)^2*(3708*s13^6 + 
               8489*s13^5*s23 + 4705*s13^4*s23^2 + 4973*s13^3*s23^3 + 6521*
                s13^2*s23^4 + 825*s13*s23^5 - 572*s23^6) + 
             s12^10*(585*s13^6 + 3515*s13^5*s23 + 5815*s13^4*s23^2 + 6744*
                s13^3*s23^3 + 8583*s13^2*s23^4 + 6099*s13*s23^5 + 1415*
                s23^6) + s12^3*s13^2*s23^2*(s13 + s23)^2*(2987*s13^7 + 2940*
                s13^6*s23 - 10662*s13^5*s23^2 - 81*s13^4*s23^3 + 28499*s13^3*
                s23^4 + 17365*s13^2*s23^5 - 1046*s13*s23^6 - 860*s23^7) + 
             s12^9*(1098*s13^7 + 6699*s13^6*s23 + 10411*s13^5*s23^2 + 6778*
                s13^4*s23^3 + 11617*s13^3*s23^4 + 17883*s13^2*s23^5 + 8954*
                s13*s23^6 + 760*s23^7) + s12^8*(1314*s13^8 + 7840*s13^7*s23 + 
               15804*s13^6*s23^2 + 10771*s13^5*s23^3 + 16057*s13^4*s23^4 + 
               39546*s13^3*s23^5 + 31737*s13^2*s23^6 + 5725*s13*s23^7 - 1110*
                s23^8) + s12^7*(1071*s13^9 + 6161*s13^8*s23 + 12844*s13^7*
                s23^2 + 10256*s13^6*s23^3 + 26776*s13^5*s23^4 + 85570*s13^4*
                s23^5 + 100340*s13^3*s23^6 + 41519*s13^2*s23^7 + 1315*s13*
                s23^8 - 1240*s23^9) + s12^4*s13*s23*(1608*s13^10 + 6255*s13^9*
                s23 - 10684*s13^8*s23^2 - 56696*s13^7*s23^3 - 31885*s13^6*
                s23^4 + 96854*s13^5*s23^5 + 156312*s13^4*s23^6 + 81460*s13^3*
                s23^7 + 10609*s13^2*s23^8 - 2149*s13*s23^9 - 236*s23^10) + 
             s12^6*(693*s13^10 + 4797*s13^9*s23 + 3096*s13^8*s23^2 - 13157*
                s13^7*s23^3 + 4100*s13^6*s23^4 + 103905*s13^5*s23^5 + 179985*
                s13^4*s23^6 + 121257*s13^3*s23^7 + 28849*s13^2*s23^8 - 304*
                s13*s23^9 - 185*s23^10) + s12^5*(252*s13^11 + 3835*s13^10*
                s23 + 2361*s13^9*s23^2 - 30885*s13^8*s23^3 - 51417*s13^7*
                s23^4 + 45559*s13^6*s23^5 + 183247*s13^5*s23^6 + 175410*s13^4*
                s23^7 + 66386*s13^3*s23^8 + 6339*s13^2*s23^9 - 511*s13*
                s23^10 + 100*s23^11))) + p1q^2*(p2q^5*s13^2*(s13 + s23)*
            (5*s13^5*s23^4*(s13 + s23)^3*(s13^2 + 22*s13*s23 - 24*s23^2) + 
             s12^10*(9*s13^4 + 207*s13^3*s23 + 1031*s13^2*s23^2 + 341*s13*
                s23^3 - 372*s23^4) + 5*s12*s13^4*s23^3*(s13 + s23)^2*
              (3*s13^4 + 41*s13^3*s23 + 101*s13^2*s23^2 - 54*s13*s23^3 - 72*
                s23^4) + s12^9*(36*s13^5 + 765*s13^4*s23 + 4159*s13^3*s23^2 + 
               4867*s13^2*s23^3 - 503*s13*s23^4 - 1860*s23^5) - 
             s12^2*s13^3*s23^2*(s13 + s23)^2*(4*s13^5 + 69*s13^4*s23 - 684*
                s13^3*s23^2 - 2239*s13^2*s23^3 + 508*s13*s23^4 + 1198*
                s23^5) + s12^8*(72*s13^6 + 918*s13^5*s23 + 6768*s13^4*s23^2 + 
               16909*s13^3*s23^3 + 6410*s13^2*s23^4 - 7617*s13*s23^5 - 3680*
                s23^6) + 2*s12^7*(54*s13^7 + 72*s13^6*s23 + 2388*s13^5*
                s23^2 + 13591*s13^4*s23^3 + 14619*s13^3*s23^4 - 3779*s13^2*
                s23^5 - 8897*s13*s23^6 - 1800*s23^7) + s12^3*s13^2*s23*
              (9*s13^8 - 307*s13^7*s23 - 1528*s13^6*s23^2 + 2410*s13^5*
                s23^3 + 16211*s13^4*s23^4 + 14988*s13^3*s23^5 - 4564*s13^2*
                s23^6 - 9045*s13*s23^7 - 2082*s23^8) + 
             s12^6*(117*s13^8 - 522*s13^7*s23 - 504*s13^6*s23^2 + 21495*s13^5*
                s23^3 + 52058*s13^4*s23^4 + 16638*s13^3*s23^5 - 29265*s13^2*
                s23^6 - 17865*s13*s23^7 - 1740*s23^8) + s12^4*s13*
              (18*s13^9 - 63*s13^8*s23 - 1835*s13^7*s23^2 - 2670*s13^6*
                s23^3 + 17415*s13^5*s23^4 + 41155*s13^4*s23^5 + 13178*s13^3*
                s23^6 - 21231*s13^2*s23^7 - 13396*s13*s23^8 - 1411*s23^9) + 
             s12^5*(72*s13^9 - 378*s13^8*s23 - 3172*s13^7*s23^2 + 5462*s13^6*
                s23^3 + 44678*s13^5*s23^4 + 46071*s13^4*s23^5 - 13027*s13^3*
                s23^6 - 30447*s13^2*s23^7 - 8255*s13*s23^8 - 332*s23^9)) + 
           p3q^5*s12^2*(s12 + s23)*(-4*s13^5*s23^4*(s13 + s23)^3*
              (93*s13^2 + 186*s13*s23 + 83*s23^2) + s12*s13^4*s23^3*
              (s13 + s23)^2*(341*s13^4 - 1185*s13^3*s23 - 5588*s13^2*s23^2 - 
               5433*s13*s23^3 - 1411*s23^4) + s12^10*(18*s13^4 + 9*s13^3*
                s23 - 4*s13^2*s23^2 + 15*s13*s23^3 + 5*s23^4) + 
             s12^2*s13^3*s23^2*(s13 + s23)^2*(1031*s13^5 + 2805*s13^4*s23 - 
               231*s13^3*s23^2 - 9901*s13^2*s23^3 - 9232*s13*s23^4 - 2082*
                s23^5) + s12^9*(72*s13^5 - 63*s13^4*s23 - 307*s13^3*s23^2 - 
               77*s13^2*s23^3 + 235*s13*s23^4 + 125*s23^5) + 
             s12^8*(117*s13^6 - 378*s13^5*s23 - 1835*s13^4*s23^2 - 1528*s13^3*
                s23^3 + 542*s13^2*s23^4 + 930*s13*s23^5 + 225*s23^6) + 
             s12^7*(108*s13^7 - 522*s13^6*s23 - 3172*s13^5*s23^2 - 2670*s13^4*
                s23^3 + 2410*s13^3*s23^4 + 3538*s13^2*s23^5 + 945*s13*s23^6 - 
               25*s23^7) + s12^3*s13^2*s23*(207*s13^8 + 4159*s13^7*s23 + 
               16909*s13^6*s23^2 + 29238*s13^5*s23^3 + 16638*s13^4*s23^4 - 
               13027*s13^3*s23^5 - 21231*s13^2*s23^6 - 9045*s13*s23^7 - 1198*
                s23^8) + s12^6*(72*s13^8 + 144*s13^7*s23 - 504*s13^6*s23^2 + 
               5462*s13^5*s23^3 + 17415*s13^4*s23^4 + 16211*s13^3*s23^5 + 
               4654*s13^2*s23^6 - 395*s13*s23^7 - 250*s23^8) + 
             s12^4*s13*(9*s13^9 + 765*s13^8*s23 + 6768*s13^7*s23^2 + 27182*
                s13^6*s23^3 + 52058*s13^5*s23^4 + 46071*s13^4*s23^5 + 13178*
                s13^3*s23^6 - 4564*s13^2*s23^7 - 2904*s13*s23^8 - 360*
                s23^9) + s12^5*(36*s13^9 + 918*s13^8*s23 + 4776*s13^7*s23^2 + 
               21495*s13^6*s23^3 + 44678*s13^5*s23^4 + 41155*s13^4*s23^5 + 
               14988*s13^3*s23^6 + 25*s13^2*s23^7 - 990*s13*s23^8 - 120*
                s23^9)) + p2q*p3q^4*s12*(-(s13^5*s23^5*(s13 + s23)^3*(
                136*s13^3 + 669*s13^2*s23 + 10*s13*s23^2 - 163*s23^3)) + 
             s12^12*(36*s13^4 - 18*s13^3*s23 + 343*s13^2*s23^2 + 1217*s13*
                s23^3 + 680*s23^4) + s12*s13^4*s23^4*(s13 + s23)^2*
              (671*s13^5 - 3549*s13^4*s23 - 9392*s13^3*s23^2 - 4574*s13^2*
                s23^3 + 896*s13*s23^4 + 658*s23^5) + s12^11*(-99*s13^5 - 2457*
                s13^4*s23 - 3500*s13^3*s23^2 + 1347*s13^2*s23^3 + 4049*s13*
                s23^4 + 1570*s23^5) - s12^10*(90*s13^6 + 3996*s13^5*s23 + 
               7262*s13^4*s23^2 + 435*s13^3*s23^3 - 5128*s13^2*s23^4 - 987*
                s13*s23^5 + 790*s23^6) + s12^2*s13^3*s23^3*(s13 + s23)^2*
              (1837*s13^6 - 3206*s13^5*s23 - 21973*s13^4*s23^2 - 30461*s13^3*
                s23^3 - 17222*s13^2*s23^4 - 46*s13*s23^5 + 930*s23^6) + 
             s12^9*(702*s13^7 + 2151*s13^6*s23 + 12169*s13^5*s23^2 + 43577*
                s13^4*s23^3 + 53759*s13^3*s23^4 + 13702*s13^2*s23^5 - 12275*
                s13*s23^6 - 5200*s23^7) + s12^8*(1116*s13^8 + 10188*s13^7*
                s23 + 47474*s13^6*s23^2 + 140540*s13^5*s23^3 + 209702*s13^4*
                s23^4 + 132997*s13^3*s23^5 + 8088*s13^2*s23^6 - 22085*s13*
                s23^7 - 5300*s23^8) + s12^7*(477*s13^9 + 8982*s13^8*s23 + 
               52365*s13^7*s23^2 + 182869*s13^6*s23^3 + 337187*s13^5*s23^4 + 
               297858*s13^4*s23^5 + 90212*s13^3*s23^6 - 25141*s13^2*s23^7 - 
               17763*s13*s23^8 - 1870*s23^9) + s12^3*s13^2*s23^2*
              (1193*s13^9 + 2365*s13^8*s23 - 15245*s13^7*s23^2 - 80305*s13^6*
                s23^3 - 176054*s13^5*s23^4 - 212449*s13^4*s23^5 - 138728*
                s13^3*s23^6 - 41497*s13^2*s23^7 - 2572*s13*s23^8 + 480*
                s23^9) + s12^6*(18*s13^10 + 1611*s13^9*s23 + 24020*s13^8*
                s23^2 + 114693*s13^7*s23^3 + 262069*s13^6*s23^4 + 272524*
                s13^5*s23^5 + 79193*s13^4*s23^6 - 61105*s13^3*s23^7 - 44538*
                s13^2*s23^8 - 7381*s13*s23^9 - 30*s23^10) + 
             s12^5*s23*(-648*s13^10 + 2449*s13^9*s23 + 27238*s13^8*s23^2 + 
               80401*s13^7*s23^3 + 63497*s13^6*s23^4 - 87725*s13^5*s23^5 - 
               183341*s13^4*s23^6 - 112339*s13^3*s23^7 - 25248*s13^2*s23^8 - 
               1123*s13*s23^9 + 60*s23^10) + s12^4*s13*s23*(243*s13^10 + 101*
                s13^9*s23 - 1176*s13^8*s23^2 - 16505*s13^7*s23^3 - 84224*
                s13^6*s23^4 - 211037*s13^5*s23^5 - 268071*s13^4*s23^6 - 
               168685*s13^3*s23^7 - 46809*s13^2*s23^8 - 3881*s13*s23^9 + 150*
                s23^10)) + p2q^4*p3q*s13*(10*s13^5*s23^4*(s13 + s23)^4*
              (68*s13^3 - 115*s13^2*s23 - 27*s13*s23^2 + 6*s23^3) + 
             s12^11*s23*(243*s13^4 + 1193*s13^3*s23 + 1837*s13^2*s23^2 + 671*
                s13*s23^3 - 136*s23^4) + s12*s13^4*s23^3*(s13 + s23)^3*
              (1217*s13^5 + 398*s13^4*s23 - 3858*s13^3*s23^2 - 3112*s13^2*
                s23^3 - 1573*s13*s23^4 + 150*s23^5) + 
             s12^10*(18*s13^6 - 648*s13^5*s23 + 101*s13^4*s23^2 + 2365*s13^3*
                s23^3 + 468*s13^2*s23^4 - 2207*s13*s23^5 - 1077*s23^6) + 
             s12^9*(477*s13^7 + 1611*s13^6*s23 + 2449*s13^5*s23^2 - 1176*
                s13^4*s23^3 - 15245*s13^3*s23^4 - 26548*s13^2*s23^5 - 15819*
                s13*s23^6 - 2425*s23^7) + s12^2*s13^3*s23^2*(s13 + s23)^2*
              (343*s13^7 + 661*s13^6*s23 + 3463*s13^5*s23^2 + 6115*s13^4*
                s23^3 - 7605*s13^3*s23^4 - 16046*s13^2*s23^5 - 4841*s13*
                s23^6 + 480*s23^7) + s12^8*(1116*s13^8 + 8982*s13^7*s23 + 
               24020*s13^6*s23^2 + 27238*s13^5*s23^3 - 16505*s13^4*s23^4 - 
               80305*s13^3*s23^5 - 77613*s13^2*s23^6 - 26907*s13*s23^7 - 2010*
                s23^8) - s12^3*s13^2*s23*(s13 + s23)^2*(18*s13^8 + 3464*s13^7*
                s23 - 6511*s13^6*s23^2 - 44201*s13^5*s23^3 - 38084*s13^4*
                s23^4 + 30157*s13^3*s23^5 + 38875*s13^2*s23^6 + 4432*s13*
                s23^7 - 930*s23^8) + s12^7*(702*s13^9 + 10188*s13^8*s23 + 
               52365*s13^7*s23^2 + 114693*s13^6*s23^3 + 80401*s13^5*s23^4 - 
               84224*s13^4*s23^5 - 176054*s13^3*s23^6 - 100117*s13^2*s23^7 - 
               17644*s13*s23^8 - 210*s23^9) + s12^6*(-90*s13^10 + 2151*s13^9*
                s23 + 47474*s13^8*s23^2 + 182869*s13^7*s23^3 + 262069*s13^6*
                s23^4 + 63497*s13^5*s23^5 - 211037*s13^4*s23^6 - 212449*s13^3*
                s23^7 - 64951*s13^2*s23^8 - 2124*s13*s23^9 + 479*s23^10) + 
             s12^5*(-99*s13^11 - 3996*s13^10*s23 + 12169*s13^9*s23^2 + 140540*
                s13^8*s23^3 + 337187*s13^7*s23^4 + 272524*s13^6*s23^5 - 87725*
                s13^5*s23^6 - 268071*s13^4*s23^7 - 138728*s13^3*s23^8 - 16384*
                s13^2*s23^9 + 2212*s13*s23^10 + 163*s23^11) + 
             s12^4*s13*(36*s13^11 - 2457*s13^10*s23 - 7262*s13^9*s23^2 + 
               43577*s13^8*s23^3 + 209702*s13^7*s23^4 + 297858*s13^6*s23^5 + 
               79193*s13^5*s23^6 - 183341*s13^4*s23^7 - 168685*s13^3*s23^8 - 
               41497*s13^2*s23^9 + 1814*s13*s23^10 + 658*s23^11)) + 
           p2q^2*p3q^3*(-20*s13^6*s23^5*(s13 + s23)^4*(20*s13^2 - 17*s13*
                s23 - s23^2) - s12*s13^5*s23^4*(s13 + s23)^3*
              (1043*s13^4 + 180*s13^3*s23 + 311*s13^2*s23^2 - 233*s13*s23^3 - 
               732*s23^4) + s12^13*(18*s13^4 - 27*s13^3*s23 + 347*s13^2*
                s23^2 + 1022*s13*s23^3 + 540*s23^4) + 
             s12^12*(18*s13^5 - 2196*s13^4*s23 - 3451*s13^3*s23^2 + 213*s13^2*
                s23^3 + 2405*s13*s23^4 + 905*s23^5) - s12^2*s13^4*s23^3*
              (s13 + s23)^2*(1017*s13^6 - 5156*s13^5*s23 - 4338*s13^4*s23^2 + 
               14361*s13^3*s23^3 + 9584*s13^2*s23^4 - 3714*s13*s23^5 - 2167*
                s23^6) + s12^11*(765*s13^6 + 2664*s13^5*s23 + 7897*s13^4*
                s23^2 + 13203*s13^3*s23^3 + 8113*s13^2*s23^4 - 507*s13*
                s23^5 - 1185*s23^6) + s12^10*(1296*s13^7 + 13347*s13^6*s23 + 
               52782*s13^5*s23^2 + 107136*s13^4*s23^3 + 101791*s13^3*s23^4 + 
               32470*s13^2*s23^5 - 5776*s13*s23^6 - 2910*s23^7) - 
             s12^3*s13^3*s23^2*(s13 + s23)^2*(573*s13^7 - 15497*s13^6*s23 - 
               28433*s13^5*s23^2 + 18181*s13^4*s23^3 + 52759*s13^3*s23^4 + 
               26089*s13^2*s23^5 - 6459*s13*s23^6 - 2670*s23^7) + 
             s12^9*(-819*s13^8 + 8946*s13^7*s23 + 73644*s13^6*s23^2 + 211258*
                s13^5*s23^3 + 279935*s13^4*s23^4 + 165797*s13^3*s23^5 + 27366*
                s13^2*s23^6 - 6275*s13*s23^7 - 590*s23^8) + 
             s12^8*(-2502*s13^9 - 6318*s13^8*s23 + 26096*s13^7*s23^2 + 166126*
                s13^6*s23^3 + 314660*s13^5*s23^4 + 230479*s13^4*s23^5 + 26751*
                s13^3*s23^6 - 29770*s13^2*s23^7 - 3133*s13*s23^8 + 1605*
                s23^9) - s12^7*(1233*s13^10 + 8388*s13^9*s23 + 9146*s13^8*
                s23^2 - 45900*s13^7*s23^3 - 141955*s13^6*s23^4 - 77430*s13^5*
                s23^5 + 133800*s13^4*s23^6 + 171061*s13^3*s23^7 + 54775*s13^2*
                s23^8 + 15*s13*s23^9 - 915*s23^10) + s12^4*s13^2*s23*
              (-216*s13^10 + 12771*s13^9*s23 + 69938*s13^8*s23^2 + 121520*
                s13^7*s23^3 + 17771*s13^6*s23^4 - 215042*s13^5*s23^5 - 311872*
                s13^4*s23^6 - 180353*s13^3*s23^7 - 30450*s13^2*s23^8 + 8264*
                s13*s23^9 + 1989*s23^10) + s12^6*(-108*s13^11 + 2151*s13^10*
                s23 + 15082*s13^9*s23^2 + 35538*s13^8*s23^3 + 28504*s13^7*
                s23^4 - 102398*s13^6*s23^5 - 329682*s13^5*s23^6 - 361162*
                s13^4*s23^7 - 162059*s13^3*s23^8 - 21174*s13^2*s23^9 + 1448*
                s13*s23^10 + 80*s23^11) + s12^5*s13*(-27*s13^11 + 3573*s13^10*
                s23 + 31111*s13^9*s23^2 + 90040*s13^8*s23^3 + 84368*s13^7*
                s23^4 - 95373*s13^6*s23^5 - 355051*s13^5*s23^6 - 416470*s13^4*
                s23^7 - 219875*s13^3*s23^8 - 39286*s13^2*s23^9 + 2677*s13*
                s23^10 + 719*s23^11)) + p2q^3*p3q^2*
            (5*s13^6*s23^4*(s13 + s23)^4*(108*s13^3 - 251*s13^2*s23 + 119*s13*
                s23^2 + 16*s23^3) - s12^12*(27*s13^5 + 216*s13^4*s23 + 573*
                s13^3*s23^2 + 1017*s13^2*s23^3 + 1043*s13*s23^4 + 400*
                s23^5) + s12*s13^5*s23^3*(s13 + s23)^3*(1022*s13^5 - 661*
                s13^4*s23 - 1590*s13^3*s23^2 - 45*s13^2*s23^3 - 709*s13*
                s23^4 + 719*s23^5) + s12^11*(-108*s13^6 + 3573*s13^5*s23 + 
               12771*s13^4*s23^2 + 14351*s13^3*s23^3 + 3122*s13^2*s23^4 - 
               3309*s13*s23^5 - 1260*s23^6) + s12^10*(-1233*s13^7 + 2151*
                s13^6*s23 + 31111*s13^5*s23^2 + 69938*s13^4*s23^3 + 58854*
                s13^3*s23^4 + 13633*s13^2*s23^5 - 3980*s13*s23^6 - 1020*
                s23^7) + s12^2*s13^4*s23^2*(s13 + s23)^2*(347*s13^7 - 481*
                s13^6*s23 + 8728*s13^5*s23^2 + 15495*s13^4*s23^3 - 12352*
                s13^3*s23^4 - 20561*s13^2*s23^5 - 1301*s13*s23^6 + 1989*
                s23^7) - s12^3*s13^3*s23*(s13 + s23)^2*(27*s13^8 + 3397*s13^7*
                s23 - 20024*s13^6*s23^2 - 65140*s13^5*s23^3 - 15493*s13^4*
                s23^4 + 69375*s13^3*s23^5 + 47804*s13^2*s23^6 - 2924*s13*
                s23^7 - 2670*s23^8) + s12^9*(-2502*s13^8 - 8388*s13^7*s23 + 
               15082*s13^6*s23^2 + 90040*s13^5*s23^3 + 121520*s13^4*s23^4 + 
               54182*s13^3*s23^5 - 529*s13^2*s23^6 - 2283*s13*s23^7 + 520*
                s23^8) + s12^8*(-819*s13^9 - 6318*s13^8*s23 - 9146*s13^7*
                s23^2 + 35538*s13^6*s23^3 + 84368*s13^5*s23^4 + 17771*s13^4*
                s23^5 - 60688*s13^3*s23^6 - 33968*s13^2*s23^7 + 318*s13*
                s23^8 + 1080*s23^9) + s12^7*(1296*s13^10 + 8946*s13^9*s23 + 
               26096*s13^8*s23^2 + 45900*s13^7*s23^3 + 28504*s13^6*s23^4 - 
               95373*s13^5*s23^5 - 215042*s13^4*s23^6 - 149788*s13^3*s23^7 - 
               29815*s13^2*s23^8 + 2584*s13*s23^9 + 420*s23^10) + 
             s12^6*(765*s13^11 + 13347*s13^10*s23 + 73644*s13^9*s23^2 + 
               166126*s13^8*s23^3 + 141955*s13^7*s23^4 - 102398*s13^6*s23^5 - 
               355051*s13^5*s23^6 - 311872*s13^4*s23^7 - 98478*s13^3*s23^8 + 
               11*s13^2*s23^9 + 2429*s13*s23^10 + 20*s23^11) + 
             s12^5*s13*(18*s13^11 + 2664*s13^10*s23 + 52782*s13^9*s23^2 + 
               211258*s13^8*s23^3 + 314660*s13^7*s23^4 + 77430*s13^6*s23^5 - 
               329682*s13^5*s23^6 - 416470*s13^4*s23^7 - 180353*s13^3*s23^8 - 
               10501*s13^2*s23^9 + 8048*s13*s23^10 + 732*s23^11) + 
             s12^4*s13^2*(18*s13^11 - 2196*s13^10*s23 + 7897*s13^9*s23^2 + 
               107136*s13^8*s23^3 + 279935*s13^7*s23^4 + 230479*s13^6*s23^5 - 
               133800*s13^5*s23^6 - 361162*s13^4*s23^7 - 219875*s13^3*s23^8 - 
               30450*s13^2*s23^9 + 11799*s13*s23^10 + 2167*s23^11))) - 
         p1q^3*(-(p3q^4*s12*(s12 + s23)*(s13^5*s23^5*(s13 + s23)^3*(
                203*s13^2 + 486*s13*s23 + 163*s23^2) - s12*s13^4*s23^4*
               (s13 + s23)^2*(379*s13^4 - 737*s13^3*s23 - 3510*s13^2*s23^2 - 
                3095*s13*s23^3 - 821*s23^4) - s12^10*(18*s13^5 + 
                108*s13^4*s23 + 125*s13^3*s23^2 + 20*s13^2*s23^3 - 
                50*s13*s23^4 - 30*s23^5) + 2*s12^2*s13^3*s23^3*(s13 + s23)^2*(
                28*s13^5 - 899*s13^4*s23 - 782*s13^3*s23^2 + 1983*s13^2*
                 s23^3 + 2467*s13*s23^4 + 628*s23^5) - s12^9*(90*s13^6 + 
                477*s13^5*s23 + 716*s13^4*s23^2 + 201*s13^3*s23^3 - 
                193*s13^2*s23^4 + 50*s13*s23^5 + 100*s23^6) + 
              s12^3*s13^2*s23^2*(s13 + s23)^2*(947*s13^6 + 577*s13^5*s23 - 
                6181*s13^4*s23^2 - 10702*s13^3*s23^3 - 1855*s13^2*s23^4 + 
                2644*s13*s23^5 + 608*s23^6) - s12^8*(180*s13^7 + 
                684*s13^6*s23 + 409*s13^5*s23^2 - 2013*s13^4*s23^3 - 
                3016*s13^3*s23^4 - 438*s13^2*s23^5 + 1070*s13*s23^6 + 
                400*s23^7) + s12^7*(-180*s13^8 - 99*s13^7*s23 + 2774*s13^6*
                 s23^2 + 10468*s13^5*s23^3 + 14066*s13^4*s23^4 + 
                5909*s13^3*s23^5 - 2042*s13^2*s23^6 - 1930*s13*s23^7 - 
                300*s23^8) + s12^6*(-90*s13^9 + 657*s13^8*s23 + 6465*s13^7*
                 s23^2 + 19370*s13^6*s23^3 + 22596*s13^5*s23^4 + 
                5755*s13^4*s23^5 - 7430*s13^3*s23^6 - 5216*s13^2*s23^7 - 
                920*s13*s23^8 + 50*s23^9) + s12^4*s13*s23*(171*s13^9 + 
                3823*s13^8*s23 + 9951*s13^7*s23^2 - 737*s13^6*s23^3 - 
                34679*s13^5*s23^4 - 51270*s13^4*s23^5 - 29242*s13^3*s23^6 - 
                5269*s13^2*s23^7 + 526*s13*s23^8 + 180*s23^9) + 
              s12^5*(-18*s13^10 + 612*s13^9*s23 + 6749*s13^8*s23^2 + 
                18632*s13^7*s23^3 + 13439*s13^6*s23^4 - 16888*s13^5*s23^5 - 
                32748*s13^4*s23^6 - 18120*s13^3*s23^7 - 3031*s13^2*s23^8 + 
                220*s13*s23^9 + 80*s23^10))) - p2q^4*s13*(s13 + s23)*
            (10*s13^5*s23^5*(s13 + s23)^3*(3*s13^2 - 19*s13*s23 + 8*s23^2) + 
             10*s12*s13^4*s23^4*(s13 + s23)^2*(5*s13^4 - 15*s13^3*s23 - 82*
                s13^2*s23^2 - 14*s13*s23^3 + 18*s23^4) - s12^2*s13^3*s23^3*
              (s13 + s23)^2*(20*s13^5 - 233*s13^4*s23 + 8*s13^3*s23^2 + 2259*
                s13^2*s23^3 + 690*s13*s23^4 - 608*s23^5) + 
             s12^10*(-18*s13^5 + 171*s13^4*s23 + 947*s13^3*s23^2 + 56*s13^2*
                s23^3 - 379*s13*s23^4 + 203*s23^5) + s12^9*(-90*s13^6 + 612*
                s13^5*s23 + 3823*s13^4*s23^2 + 2471*s13^3*s23^3 - 1686*s13^2*
                s23^4 - 21*s13*s23^5 + 1095*s23^6) + s12^8*(-180*s13^7 + 657*
                s13^6*s23 + 6749*s13^5*s23^2 + 9951*s13^4*s23^3 - 4080*s13^3*
                s23^4 - 5104*s13^2*s23^5 + 4605*s13*s23^6 + 2230*s23^7) + 
             s12^3*s13^2*s23^2*(-125*s13^8 - 201*s13^7*s23 + 3016*s13^6*
                s23^2 + 5909*s13^5*s23^3 - 7430*s13^4*s23^4 - 18120*s13^3*
                s23^5 - 5269*s13^2*s23^6 + 3860*s13*s23^7 + 1256*s23^8) + 
             s12^7*(-180*s13^8 - 99*s13^7*s23 + 6465*s13^6*s23^2 + 18632*
                s13^5*s23^3 - 737*s13^4*s23^4 - 22487*s13^3*s23^5 - 960*s13^2*
                s23^6 + 10852*s13*s23^7 + 2150*s23^8) + s12^4*s13*s23*
              (-108*s13^9 - 716*s13^8*s23 + 2013*s13^7*s23^2 + 14066*s13^6*
                s23^3 + 5755*s13^5*s23^4 - 32748*s13^4*s23^5 - 29242*s13^3*
                s23^6 + 4041*s13^2*s23^7 + 7446*s13*s23^8 + 821*s23^9) + 
             s12^6*(-90*s13^9 - 684*s13^8*s23 + 2774*s13^7*s23^2 + 19370*
                s13^6*s23^3 + 13439*s13^5*s23^4 - 34679*s13^4*s23^5 - 29440*
                s13^3*s23^6 + 11302*s13^2*s23^7 + 10521*s13*s23^8 + 975*
                s23^9) + s12^5*(-18*s13^10 - 477*s13^9*s23 - 409*s13^8*
                s23^2 + 10468*s13^7*s23^3 + 22596*s13^6*s23^4 - 16888*s13^5*
                s23^5 - 51270*s13^4*s23^6 - 11768*s13^3*s23^7 + 15090*s13^2*
                s23^8 + 4737*s13*s23^9 + 163*s23^10)) + 
           p2q*p3q^3*(-20*s13^6*(19*s13 - 5*s23)*s23^6*(s13 + s23)^4 - 
             s12*s13^4*s23^5*(s13 + s23)^3*(865*s13^4 + 1092*s13^3*s23 + 1164*
                s13^2*s23^2 + 309*s13*s23^3 - 163*s23^4) + 
             s12^12*(36*s13^5 + 594*s13^4*s23 + 1132*s13^3*s23^2 + 2042*s13^2*
                s23^3 + 2883*s13*s23^4 + 1290*s23^5) - s12^2*s13^3*s23^4*
              (s13 + s23)^2*(1667*s13^6 - 1624*s13^5*s23 - 4382*s13^4*s23^2 + 
               5530*s13^3*s23^3 + 7235*s13^2*s23^4 + 1233*s13*s23^5 - 326*
                s23^6) + s12^11*(-72*s13^6 - 18*s13^5*s23 - 2877*s13^4*
                s23^2 - 2665*s13^3*s23^3 + 7837*s13^2*s23^4 + 11751*s13*
                s23^5 + 4130*s23^6) - s12^10*(468*s13^7 + 3366*s13^6*s23 + 
               15946*s13^5*s23^2 + 32330*s13^4*s23^3 + 18468*s13^3*s23^4 - 
               13167*s13^2*s23^5 - 15493*s13*s23^6 - 3420*s23^7) - 
             s12^3*s13^2*s23^3*(s13 + s23)^2*(2804*s13^7 - 3860*s13^6*s23 - 
               27640*s13^5*s23^2 - 20680*s13^4*s23^3 + 9543*s13^3*s23^4 + 
               14848*s13^2*s23^5 + 2552*s13*s23^6 - 128*s23^7) - 
             s12^9*(648*s13^8 + 6345*s13^7*s23 + 25958*s13^6*s23^2 + 54916*
                s13^5*s23^3 + 44263*s13^4*s23^4 - 7099*s13^3*s23^5 - 21852*
                s13^2*s23^6 - 3285*s13*s23^7 + 1800*s23^8) - 
             s12^8*(396*s13^9 + 5760*s13^8*s23 + 22870*s13^7*s23^2 + 39551*
                s13^6*s23^3 - 4997*s13^5*s23^4 - 105793*s13^4*s23^5 - 117259*
                s13^3*s23^6 - 32378*s13^2*s23^7 + 9895*s13*s23^8 + 3950*
                s23^9) + s12^7*(-144*s13^10 - 2862*s13^9*s23 - 14924*s13^8*
                s23^2 - 13482*s13^7*s23^3 + 81698*s13^6*s23^4 + 270071*s13^5*
                s23^5 + 334573*s13^4*s23^6 + 175896*s13^3*s23^7 + 20003*s13^2*
                s23^8 - 10157*s13*s23^9 - 1710*s23^10) + s12^4*s13*s23^2*
              (-2113*s13^10 - 6814*s13^9*s23 + 23012*s13^8*s23^2 + 129213*
                s13^7*s23^3 + 221956*s13^6*s23^4 + 162473*s13^5*s23^5 + 18857*
                s13^4*s23^6 - 41190*s13^3*s23^7 - 20542*s13^2*s23^8 - 2482*
                s13*s23^9 + 30*s23^10) + s12^5*s23*(-567*s13^11 - 5545*s13^10*
                s23 - 5227*s13^9*s23^2 + 67584*s13^8*s23^3 + 251154*s13^7*
                s23^4 + 384404*s13^6*s23^5 + 283574*s13^5*s23^6 + 75282*s13^4*
                s23^7 - 16462*s13^3*s23^8 - 10280*s13^2*s23^9 - 967*s13*
                s23^10 + 20*s23^11) - s12^6*(36*s13^11 + 1260*s13^10*s23 + 
               9507*s13^9*s23^2 + 3341*s13^8*s23^3 - 101071*s13^7*s23^4 - 
               326713*s13^6*s23^5 - 458371*s13^5*s23^6 - 310768*s13^4*s23^7 - 
               81865*s13^3*s23^8 + 5565*s13^2*s23^9 + 4599*s13*s23^10 + 120*
                s23^11)) - p2q^3*p3q*(-10*s13^5*s23^5*(s13 + s23)^4*
              (129*s13^3 - 103*s13^2*s23 - 20*s13*s23^2 + 2*s23^3) - 
             s12*s13^4*s23^4*(s13 + s23)^3*(2883*s13^5 + 3102*s13^4*s23 - 
               2462*s13^3*s23^2 - 1518*s13^2*s23^3 - 1057*s13*s23^4 + 30*
                s23^5) + s12^11*(36*s13^6 + 567*s13^5*s23 + 2113*s13^4*
                s23^2 + 2804*s13^3*s23^3 + 1667*s13^2*s23^4 + 865*s13*s23^5 + 
               380*s23^6) - s12^2*s13^3*s23^3*(s13 + s23)^2*(2042*s13^7 + 
               3753*s13^6*s23 + 3619*s13^5*s23^2 + 10861*s13^4*s23^3 + 7037*
                s13^3*s23^4 - 4932*s13^2*s23^5 - 2738*s13*s23^6 + 128*
                s23^7) + s12^10*(144*s13^7 + 1260*s13^6*s23 + 5545*s13^5*
                s23^2 + 6814*s13^4*s23^3 + 1748*s13^3*s23^4 + 1710*s13^2*
                s23^5 + 3687*s13*s23^6 + 1420*s23^7) - s12^3*s13^2*s23^2*
              (s13 + s23)^2*(1132*s13^8 - 4929*s13^7*s23 - 9742*s13^6*s23^2 + 
               31512*s13^5*s23^3 + 63977*s13^4*s23^4 + 16430*s13^3*s23^5 - 
               14972*s13^2*s23^6 - 2948*s13*s23^7 + 326*s23^8) + 
             s12^9*(396*s13^8 + 2862*s13^7*s23 + 9507*s13^6*s23^2 + 5227*
                s13^5*s23^3 - 23012*s13^4*s23^4 - 32556*s13^3*s23^5 - 5963*
                s13^2*s23^6 + 7035*s13*s23^7 + 1880*s23^8) + 
             s12^8*(648*s13^9 + 5760*s13^8*s23 + 14924*s13^7*s23^2 + 3341*
                s13^6*s23^3 - 67584*s13^5*s23^4 - 129213*s13^4*s23^5 - 79820*
                s13^3*s23^6 - 4858*s13^2*s23^7 + 7942*s13*s23^8 + 920*
                s23^9) + s12^7*(468*s13^10 + 6345*s13^9*s23 + 22870*s13^8*
                s23^2 + 13482*s13^7*s23^3 - 101071*s13^6*s23^4 - 251154*s13^5*
                s23^5 - 221956*s13^4*s23^6 - 59457*s13^3*s23^7 + 13913*s13^2*
                s23^8 + 5348*s13*s23^9 - 20*s23^10) + s12^4*s13*s23*
              (-594*s13^11 + 2877*s13^10*s23 + 32330*s13^9*s23^2 + 44263*
                s13^8*s23^3 - 105793*s13^7*s23^4 - 334573*s13^6*s23^5 - 
               310768*s13^5*s23^6 - 75282*s13^4*s23^7 + 41190*s13^3*s23^8 + 
               19824*s13^2*s23^9 + 581*s13*s23^10 - 163*s23^11) + 
             s12^6*(72*s13^11 + 3366*s13^10*s23 + 25958*s13^9*s23^2 + 39551*
                s13^8*s23^3 - 81698*s13^7*s23^4 - 326713*s13^6*s23^5 - 384404*
                s13^5*s23^6 - 162473*s13^4*s23^7 + 13254*s13^3*s23^8 + 21233*
                s13^2*s23^9 + 1602*s13*s23^10 - 100*s23^11) - 
             s12^5*s13*(36*s13^11 - 18*s13^10*s23 - 15946*s13^9*s23^2 - 54916*
                s13^8*s23^3 + 4997*s13^7*s23^4 + 270071*s13^6*s23^5 + 458371*
                s13^5*s23^6 + 283574*s13^4*s23^7 + 18857*s13^3*s23^8 - 41791*
                s13^2*s23^9 - 9375*s13*s23^10 + 180*s23^11)) + 
           p2q^2*p3q^2*(5*s13^5*s23^5*(s13 + s23)^4*(156*s13^3 - 239*s13^2*
                s23 + 77*s13*s23^2 + 4*s23^3) + s12*s13^4*s23^4*(s13 + s23)^3*
              (1916*s13^5 + 935*s13^4*s23 - 1084*s13^3*s23^2 + 139*s13^2*
                s23^3 - 825*s13*s23^4 + 193*s23^5) + s12^12*(18*s13^5 + 486*
                s13^4*s23 + 1043*s13^3*s23^2 + 1671*s13^2*s23^3 + 1916*s13*
                s23^4 + 780*s23^5) + s12^11*(18*s13^6 - 216*s13^5*s23 - 3078*
                s13^4*s23^2 - 2933*s13^3*s23^3 + 4759*s13^2*s23^4 + 6683*s13*
                s23^5 + 1925*s23^6) + s12^10*(270*s13^7 - 495*s13^6*s23 - 
               8713*s13^5*s23^2 - 17017*s13^4*s23^3 - 3000*s13^3*s23^4 + 
               13343*s13^2*s23^5 + 7469*s13*s23^6 + 285*s23^7) + 
             s12^2*s13^3*s23^3*(s13 + s23)^2*(1671*s13^7 + 1417*s13^6*s23 + 
               8838*s13^5*s23^2 + 22502*s13^4*s23^3 + 5426*s13^3*s23^4 - 
               10359*s13^2*s23^5 - 3001*s13*s23^6 + 454*s23^7) + 
             s12^9*(846*s13^8 + 2268*s13^7*s23 - 1850*s13^6*s23^2 - 1796*
                s13^5*s23^3 + 37130*s13^4*s23^4 + 73531*s13^3*s23^5 + 41595*
                s13^2*s23^6 + 1608*s13*s23^7 - 2490*s23^8) + 
             s12^3*s13^2*s23^2*(s13 + s23)^2*(1043*s13^8 - 5019*s13^7*s23 + 
               5995*s13^6*s23^2 + 66560*s13^5*s23^3 + 66681*s13^4*s23^4 - 
               5085*s13^3*s23^5 - 23873*s13^2*s23^6 - 2772*s13*s23^7 + 454*
                s23^8) + s12^8*(846*s13^9 + 4122*s13^8*s23 + 13346*s13^7*
                s23^2 + 45452*s13^6*s23^3 + 145698*s13^5*s23^4 + 255669*s13^4*
                s23^5 + 205796*s13^3*s23^6 + 59268*s13^2*s23^7 - 2725*s13*
                s23^8 - 1610*s23^9) + s12^7*(270*s13^10 + 2268*s13^9*s23 + 
               13346*s13^8*s23^2 + 71470*s13^7*s23^3 + 238459*s13^6*s23^4 + 
               444084*s13^5*s23^5 + 434665*s13^4*s23^6 + 194837*s13^3*s23^7 + 
               22995*s13^2*s23^8 - 2949*s13*s23^9 + 465*s23^10) + 
             s12^4*s13*s23*(486*s13^11 - 3078*s13^10*s23 - 17017*s13^9*
                s23^2 + 37130*s13^8*s23^3 + 255669*s13^7*s23^4 + 434665*s13^6*
                s23^5 + 292907*s13^5*s23^6 + 17387*s13^4*s23^7 - 72618*s13^3*
                s23^8 - 28963*s13^2*s23^9 - 2093*s13*s23^10 + 193*s23^11) + 
             s12^6*(18*s13^11 - 495*s13^10*s23 - 1850*s13^9*s23^2 + 45452*
                s13^8*s23^3 + 238459*s13^7*s23^4 + 515492*s13^6*s23^5 + 
               568010*s13^5*s23^6 + 292907*s13^4*s23^7 + 32638*s13^3*s23^8 - 
               18293*s13^2*s23^9 - 1757*s13*s23^10 + 465*s23^11) + 
             s12^5*(18*s13^12 - 216*s13^11*s23 - 8713*s13^10*s23^2 - 1796*
                s13^9*s23^3 + 145698*s13^8*s23^4 + 444084*s13^7*s23^5 + 
               568010*s13^6*s23^6 + 320490*s13^5*s23^7 + 17387*s13^4*s23^8 - 
               55603*s13^3*s23^9 - 15907*s13^2*s23^10 - 246*s13*s23^11 + 20*
                s23^12))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*
         s13^3*(s12 + s13)^2*s23^2*(s12 + s23)^2*(s13 + s23)^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((ep^3*s23*(p3q*s12*(19*s12 + s13 - s23) - p2q*(19*s12*s13 + s13^2 + 
            20*s12*s23 + s13*s23) + p1q*(-18*s12*s13 - 19*s12*s23 + s13*s23 + 
            s23^2)))/(54*(p1q + p2q + p3q)*s13) + 
       (ep^2*(-(p2q^5*s13^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23)) - 
          10*p3q^2*(s13 + s23)*(s12 + s13 + s23)*(p3q*s12 - p1q*s23)^2*
           (-(p3q*s12) + p1q*(s13 + s23)) - p2q^4*s13*
           (p1q*s13*(s13 + s23)*(s12 + s13 + s23)*(s12 + 3*s23) + 
            p3q*(-(s12^3*(21*s13 + 20*s23)) - s12^2*(38*s13^2 + 79*s13*s23 + 
                40*s23^2) + s12*(29*s13^3 - 46*s13^2*s23 + 23*s13*s23^2 + 
                100*s23^3) + s13*(10*s13^3 - 129*s13^2*s23 + 38*s13*s23^2 + 
                177*s23^3))) + p2q*p3q*(-(p1q^3*s23^2*(s13 + s23)*
              (-s12^2 + 7*s12*s13 + 8*s13^2 + 8*s12*s23 + 17*s13*s23 + 9*
                s23^2)) + p3q^3*s12*(19*s12^4 - 2*s13^2*(s13 - 163*s23)*s23 + 
              s12^3*(65*s13 + 48*s23) + s12^2*(-20*s13^2 + 81*s13*s23 + 
                19*s23^2) - 2*s12*(15*s13^3 - 25*s13^2*s23 - 58*s13*s23^2 + 
                5*s23^3)) - p1q*p3q^2*(326*s13^2*s23^2*(s13 + s23) + 
              s12^4*(19*s13 + 37*s23) + s12^3*(101*s13^2 + 185*s13*s23 + 
                104*s23^2) + s12^2*(-10*s13^3 + 71*s13^2*s23 + 248*s13*
                 s23^2 + 47*s23^3) + s12*(-20*s13^4 + 64*s13^3*s23 + 
                46*s13^2*s23^2 + 272*s13*s23^3 - 20*s23^4)) + 
            p1q^2*p3q*(s12^3*s23*(18*s13 + 17*s23) + s12*s23*(-2*s13^3 + 
                156*s13^2*s23 + 193*s13*s23^2 + 37*s23^3) + s12^2*(36*s13^3 + 
                108*s13^2*s23 + 135*s13*s23^2 + 64*s23^3) + 2*s23*(10*s13^4 - 
                55*s13^3*s23 + 18*s13^2*s23^2 + 78*s13*s23^3 - 5*s23^4))) + 
          p2q^2*(p1q^3*s23^2*(s13 + s23)*(s12^2 + 3*s12*s13 + 2*s13^2 + 
              2*s12*s23 + 3*s13*s23 + s23^2) + p3q^3*(19*s12^5 + 
              s12^4*(-2*s13 + 19*s23) + 2*s13^2*s23*(s13^2 - 161*s13*s23 - 
                162*s23^2) + s12^2*s23*(-105*s13^2 + 116*s13*s23 - 
                29*s23^2) - s12^3*(159*s13^2 + 90*s13*s23 + 29*s23^2) + 
              2*s12*s13*(15*s13^3 - 101*s13^2*s23 + 140*s13*s23^2 - 
                73*s23^3)) + p1q^2*p3q*(s12^3*s23*(18*s13 + 17*s23) + 
              s12^2*s23*(34*s13^2 + 68*s13*s23 + 35*s23^2) + s23*(18*s13^4 - 
                112*s13^3*s23 + 39*s13^2*s23^2 + 160*s13*s23^3 - 9*s23^4) + 
              s12*(-36*s13^4 - 114*s13^3*s23 + 15*s13^2*s23^2 + 
                100*s13*s23^3 + 9*s23^4)) - p1q*p3q^2*
             (s12^4*(19*s13 + 37*s23) + s12^3*(17*s13^2 + 71*s13*s23 + 
                56*s23^2) - s12^2*(166*s13^3 + 255*s13^2*s23 - 14*s13*s23^2 + 
                19*s23^3) + 2*s13*(5*s13^4 - 75*s13^3*s23 + 231*s13^2*s23^2 + 
                218*s13*s23^3 - 93*s23^4) - 2*s12*(5*s13^4 + 25*s13^2*s23^2 - 
                118*s13*s23^3 + 19*s23^4))) + 
          p2q^3*(p1q^2*s23*(s13 + s23)*(-2*s13^3 + s12^2*s23 + 3*s13*s23^2 + 
              s23^3 + s12*(-2*s13^2 + 3*s13*s23 + 2*s23^2)) - 
            p3q^2*(s12^4*(39*s13 + 19*s23) + s12^3*(54*s13^2 + 95*s13*s23 + 
                38*s23^2) + s12^2*(-123*s13^3 + 3*s13^2*s23 - 58*s13*s23^2 + 
                19*s23^3) + s12*s13*(-20*s13^3 + 115*s13^2*s23 + 
                49*s13*s23^2 + 246*s23^3) + 2*s13^2*(5*s13^3 - 66*s13^2*s23 + 
                179*s13*s23^2 + 250*s23^3)) + p1q*p3q*
             (2*s12^3*(10*s13^2 + 19*s13*s23 + 9*s23^2) + s12^2*(37*s13^3 + 
                113*s13^2*s23 + 110*s13*s23^2 + 36*s23^3) + s12*(-65*s13^4 - 
                67*s13^3*s23 + 2*s13^2*s23^2 + 18*s13*s23^3 + 18*s23^4) + 
              s13*(-10*s13^4 + 147*s13^3*s23 - 142*s13^2*s23^2 - 
                113*s13*s23^3 + 186*s23^4)))))/(108*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(-2*p1q^5*(s12 - s13)*s23^4*(s13 + s23)*(s12 + s13 + s23)*
           (p2q*(s13 - 40*s23) + 5*p3q*(2*s13 + s23)) + 
          p1q^4*s23^3*(s12 + s13 + s23)*(-(p2q^2*(s13 + s23)*
              (-2*s12^2*(s13 - 40*s23) + s12*(247*s13 - 80*s23)*s23 + s13*
                (6*s13^2 + 490*s13*s23 + 405*s23^2))) + 
            10*p3q^2*(s12^2*(2*s13^2 + 6*s13*s23 + 3*s23^2) - 
              s12*(4*s13^3 + 13*s13^2*s23 + 10*s13*s23^2 + 2*s23^3) + 
              s13*(-2*s13^3 + 5*s13*s23^2 + 3*s23^3)) - 
            p2q*p3q*(2*s12^2*(7*s13^2 + 171*s13*s23 + 205*s23^2) + 
              s12*(-32*s13^3 + 107*s13^2*s23 + 87*s13*s23^2 + 30*s23^3) + 
              s13*(62*s13^3 + 766*s13^2*s23 + 989*s13*s23^2 + 285*s23^3))) + 
          (p2q + p3q)*(-10*p3q^5*s12^2*(s12 + s13)*s23*(s12^4 + 
              4*s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 3*s23) - 
              2*s12^2*(s13^2 - s23^2) - s12*s13*(3*s13^2 + 2*s13*s23 + 
                3*s23^2)) + p2q^5*s13^3*s23*(s13*(s13 + s23)^2*(728*s13 + 
                645*s23) + s12^3*(725*s13 + 721*s23) + 2*s12^2*(1089*s13^2 + 
                1608*s13*s23 + 521*s23^2) + 3*s12*(727*s13^3 + 1532*s13^2*
                 s23 + 912*s13*s23^2 + 107*s23^3)) - p2q*p3q^4*s12*
             (100*s12^6*s23 + s12^5*s23*(347*s13 + 110*s23) + 
              2*s12*s13^2*s23*(1701*s13^3 + 3177*s13^2*s23 + 543*s13*s23^2 - 
                25*s23^3) + 16*s13^3*s23*(81*s13^3 + 78*s13^2*s23 + 
                74*s13*s23^2 - 5*s23^3) + 2*s12^4*(648*s13^3 + 1233*s13^2*
                 s23 + 266*s13*s23^2 - 5*s23^3) + s12^2*s13*s23*(6140*s13^3 + 
                6587*s13^2*s23 + 825*s13*s23^2 + 10*s23^3) + 
              s12^3*(1296*s13^4 + 4957*s13^3*s23 + 3199*s13^2*s23^2 + 
                265*s13*s23^3 - 20*s23^4)) + p2q^2*p3q^3*
             (5*s12^6*s23*(-13*s13 + 20*s23) + s12^5*s23*(-1653*s13^2 - 
                13*s13*s23 + 120*s23^2) + 8*s13^4*s23*(162*s13^3 + 
                323*s13^2*s23 + 323*s13*s23^2 + 162*s23^3) + 2*s12*s13^3*s23*(
                729*s13^3 + 4124*s13^2*s23 + 2713*s13*s23^2 + 634*s23^3) + 
              s12^2*s13^2*s23*(3540*s13^3 + 4853*s13^2*s23 + 6100*s13*s23^2 + 
                915*s23^3) + s12^4*(3888*s13^4 + 3129*s13^3*s23 + 
                391*s13^2*s23^2 + 287*s13*s23^3 + 20*s23^4) + 
              s12^3*s13*(3888*s13^4 + 4207*s13^3*s23 + 989*s13^2*s23^2 + 
                2777*s13*s23^3 + 315*s23^4)) + p2q^3*p3q^2*s13*
             (-3*s12^5*(59*s13 - 55*s23)*s23 + s12^4*s23*(1201*s13^2 + 
                2336*s13*s23 + 490*s23^2) + 2*s13^3*s23*(957*s13^3 + 
                1727*s13^2*s23 + 1887*s13*s23^2 + 1117*s23^3) + 
              s12*s13^2*s23*(484*s13^3 + 7923*s13^2*s23 + 7651*s13*s23^2 + 
                1540*s23^3) + s12^3*(-3888*s13^4 - 7323*s13^3*s23 - 
                934*s13^2*s23^2 + 3120*s13*s23^3 + 325*s23^4) + 
              s12^2*s13*(-3888*s13^4 - 6243*s13^3*s23 + 2660*s13^2*s23^2 + 
                7479*s13*s23^3 + 927*s23^4)) + p2q^4*p3q*s13^2*
             (s12^4*s23*(-383*s13 + 382*s23) + s12^3*s23*(-1369*s13^2 + 
                115*s13*s23 + 284*s23^2) + s13^2*s23*(2066*s13^3 + 
                4735*s13^2*s23 + 4576*s13*s23^2 + 1907*s23^3) + 
              s12^2*(1296*s13^4 + 4509*s13^3*s23 + 7669*s13^2*s23^2 + 
                4399*s13*s23^3 + 62*s23^4) + s12*s13*(1296*s13^4 + 
                6265*s13^3*s23 + 11375*s13^2*s23^2 + 7395*s13*s23^3 + 
                997*s23^4))) + p1q*(10*p3q^5*s12*s23*(3*s12^5*(s13 + s23) + 
              4*s13^3*s23^2*(s13 + s23) + s12^4*(9*s13^2 + 19*s13*s23 + 
                11*s23^2) - s12*s13^2*(3*s13^3 + 19*s13^2*s23 + 
                13*s13*s23^2 + s23^3) - s12^2*s13*(3*s13^3 + 25*s13^2*s23 + 
                16*s13*s23^2 + 6*s23^3) + s12^3*(6*s13^3 + 10*s13^2*s23 + 
                15*s13*s23^2 + 8*s23^3)) + p2q^5*s13^2*s23*
             (s13*(s13 + s23)^2*(726*s13^2 - 491*s13*s23 - 643*s23^2) + 
              s12^3*(723*s13^2 + 477*s13*s23 - 238*s23^2) + 
              s12^2*(2172*s13^3 + 1267*s13^2*s23 - 1129*s13*s23^2 - 
                236*s23^3) + s12*(2175*s13^4 + 1751*s13^3*s23 - 2435*s13^2*
                 s23^2 - 2009*s13*s23^3 + 2*s23^4)) + p2q^4*p3q*s13*
             (2*s12^4*s23*(174*s13^2 + 105*s13*s23 - 205*s23^2) + 
              s12^3*s23*(1458*s13^3 + 51*s13^2*s23 - 4288*s13*s23^2 - 
                1060*s23^3) + s13^2*s23*(2772*s13^4 + 2440*s13^3*s23 - 
                1363*s13^2*s23^2 - 2870*s13*s23^3 - 1839*s23^4) + 
              s12*s13*(2592*s13^5 + 10482*s13^4*s23 + 11383*s13^3*s23^2 - 
                5094*s13^2*s23^3 - 9531*s13*s23^4 - 968*s23^5) + 
              s12^2*(2592*s13^5 + 14004*s13^4*s23 + 15408*s13^3*s23^2 - 
                1167*s13^2*s23^3 - 5226*s13*s23^4 - 650*s23^5)) + 
            p2q^2*p3q^3*(2*s12^6*s23*(69*s13 + 190*s23) + s12^5*s23*(
                426*s13^2 + 1721*s13*s23 + 50*s23^2) + 2*s12*s13^2*s23*(
                2919*s13^4 + 11974*s13^3*s23 + 5092*s13^2*s23^2 - 
                2024*s13*s23^3 - 705*s23^4) + 2*s13^3*s23*(1605*s13^4 + 
                2085*s13^3*s23 + 2161*s13^2*s23^2 + 1227*s13*s23^3 - 
                454*s23^4) + s12^4*(5184*s13^4 + 10746*s13^3*s23 + 
                13008*s13^2*s23^2 + 2147*s13*s23^3 - 430*s23^4) + 
              s12^2*s13*(-2592*s13^5 + 10194*s13^4*s23 + 23604*s13^3*s23^2 + 
                17171*s13^2*s23^3 - 4220*s13*s23^4 - 905*s23^5) + 
              s12^3*(2592*s13^5 + 2472*s13^4*s23 + 13765*s13^3*s23^2 + 
                9446*s13^2*s23^3 + 269*s13*s23^4 - 100*s23^5)) + 
            p2q*p3q^4*(4*s12^6*s23*(42*s13 + 125*s23) + 3*s12^4*s23*(
                1670*s13^3 + 3055*s13^2*s23 + 776*s13*s23^2 + 20*s23^3) + 
              8*s13^4*s23*(162*s13^3 + 324*s13^2*s23 + 325*s13*s23^2 + 
                163*s23^3) + s12^5*(-1296*s13^3 + 429*s13^2*s23 + 
                1816*s13*s23^2 + 620*s23^3) + 4*s12*s13^2*s23*(825*s13^4 + 
                2893*s13^3*s23 + 1988*s13^2*s23^2 + 573*s13*s23^3 - 
                5*s23^4) + s12^2*s13*s23*(5784*s13^4 + 13225*s13^3*s23 + 
                15050*s13^2*s23^2 + 2355*s13*s23^3 + 50*s23^4) + 
              s12^3*(1296*s13^5 + 3345*s13^4*s23 + 14542*s13^3*s23^2 + 
                10661*s13^2*s23^3 + 1050*s13*s23^4 - 60*s23^5)) + 
            p2q^3*p3q^2*(s12^5*s23*(87*s13^2 + 257*s13*s23 - 280*s23^2) + 
              s12^4*s23*(2256*s13^3 + 4981*s13^2*s23 - 297*s13*s23^2 - 
                320*s23^3) + s13^3*s23*(3960*s13^4 + 3453*s13^3*s23 + 
                2050*s13^2*s23^2 + 453*s13*s23^3 - 2104*s23^4) + 
              s12*s13^2*(1296*s13^5 + 6957*s13^4*s23 + 18894*s13^3*s23^2 - 
                927*s13^2*s23^3 - 13840*s13*s23^4 - 2360*s23^5) + 
              s12^2*s13*(-5184*s13^5 + 4548*s13^4*s23 + 17688*s13^3*s23^2 + 
                2169*s13^2*s23^3 - 10801*s13*s23^4 - 1605*s23^5) - 
              s12^3*(6480*s13^5 + 11832*s13^4*s23 + 3829*s13^3*s23^2 + 
                3913*s13^2*s23^3 + 1919*s13*s23^4 + 40*s23^5))) + 
          p1q^3*s23*(p2q^3*s23*(s12^3*s23*(247*s13^2 + 167*s13*s23 - 
                80*s23^2) + s13*(s13 + s23)^2*(6*s13^3 + 974*s13^2*s23 - 
                169*s13*s23^2 - 325*s23^3) + s12*s13*(12*s13^4 + 
                2051*s13^3*s23 + 3005*s13^2*s23^2 + 721*s13*s23^3 - 
                245*s23^4) + s12^2*(6*s13^4 + 1312*s13^3*s23 + 1549*s13^2*
                 s23^2 + 167*s13*s23^3 - 80*s23^4)) + 10*p3q^3*s23*
             (-3*s13^2*s23*(s13 + s23)^3 + 2*s12^4*(s13^2 - s23^2) + 
              s12^3*(8*s13^3 + 25*s13^2*s23 + 24*s13*s23^2 + 6*s23^3) + 
              s12*s13*(4*s13^4 + 5*s13^3*s23 - 17*s13^2*s23^2 - 
                28*s13*s23^3 - 10*s23^4) + s12^2*(10*s13^4 + 33*s13^3*s23 + 
                34*s13^2*s23^2 + 24*s13*s23^3 + 8*s23^4)) + 
            p2q*p3q^2*(2*s12^4*s23*(37*s13^2 + 309*s13*s23 + 430*s23^2) + 
              s12^3*(-1296*s13^4 - 1252*s13^3*s23 + 1441*s13^2*s23^2 + 
                2506*s13*s23^3 + 980*s23^4) + s12*s23*(1344*s13^5 + 
                3973*s13^4*s23 + 8438*s13^3*s23^2 + 6931*s13^2*s23^3 + 
                1110*s13*s23^4 - 20*s23^5) + s13*s23*(40*s13^5 + 
                2060*s13^4*s23 + 3241*s13^3*s23^2 + 1796*s13^2*s23^3 + 
                605*s13*s23^4 + 30*s23^5) + s12^2*(1296*s13^5 + 1418*s13^4*
                 s23 + 4768*s13^3*s23^2 + 7193*s13^2*s23^3 + 2248*s13*s23^4 + 
                100*s23^5)) + p2q^2*p3q*(s12^3*s23^2*(1312*s13^2 + 
                1587*s13*s23 + 30*s23^2) + 2*s12^4*s23*(18*s13^2 + 
                147*s13*s23 + 170*s23^2) + s12^2*(1296*s13^5 + 1324*s13^4*
                 s23 + 5012*s13^3*s23^2 + 7628*s13^2*s23^3 + 2121*s13*s23^4 - 
                330*s23^5) + s13*s23*(64*s13^5 + 3634*s13^4*s23 + 
                5926*s13^3*s23^2 + 2215*s13^2*s23^3 - 436*s13*s23^4 - 
                295*s23^5) + s12*(-1296*s13^6 - 2608*s13^5*s23 + 
                1564*s13^4*s23^2 + 8571*s13^3*s23^3 + 6870*s13^2*s23^4 + 
                1163*s13*s23^5 - 20*s23^6))) - 
          p1q^2*(10*p3q^4*s12*s23*(2*s12^4*(s13^2 + 3*s13*s23 + s23^2) - 
              s13^2*s23*(6*s13^3 + 25*s13^2*s23 + 24*s13*s23^2 + 5*s23^3) + 
              s12^3*(6*s13^3 + 27*s13^2*s23 + 36*s13*s23^2 + 14*s23^3) + 
              2*s12*s13*(s13^4 - 16*s13^2*s23^2 - 17*s13*s23^3 - 6*s23^4) + 
              s12^2*(6*s13^4 + 27*s13^3*s23 + 30*s13^2*s23^2 + 28*s13*s23^3 + 
                12*s23^4)) + p2q^4*s13*s23*(s13*(s13 + s23)^2*(2*s13^3 + 
                1130*s13^2*s23 - 337*s13*s23^2 - 323*s23^3) + 
              s12^3*(2*s13^3 + 244*s13^2*s23 - 7*s13*s23^2 - 245*s23^3) + 
              s12^2*(6*s13^4 + 1943*s13^3*s23 + 861*s13^2*s23^2 - 
                1634*s13*s23^3 - 570*s23^4) + s12*(6*s13^5 + 2833*s13^4*s23 + 
                3114*s13^3*s23^2 - 1418*s13^2*s23^3 - 2030*s13*s23^4 - 
                325*s23^5)) + p2q*p3q^3*(2*s12^5*s23*(29*s13^2 + 
                261*s13*s23 + 460*s23^2) + 2*s13^2*s23^2*(942*s13^4 + 
                1053*s13^3*s23 + 599*s13^2*s23^2 + 503*s13*s23^3 + 
                15*s23^4) + s12^4*(-1296*s13^4 - 2530*s13^3*s23 + 
                1405*s13^2*s23^2 + 3184*s13*s23^3 + 1100*s23^4) + 
              s12^2*s23*(-2582*s13^5 + 5274*s13^4*s23 + 16318*s13^3*s23^2 + 
                13139*s13^2*s23^3 + 1620*s13*s23^4 - 60*s23^5) + 
              s12*s13*s23*(-40*s13^5 + 764*s13^4*s23 + 10236*s13^3*s23^2 + 
                10159*s13^2*s23^3 + 2125*s13*s23^4 + 70*s23^5) + 
              s12^3*(-1296*s13^5 + 1350*s13^4*s23 + 7565*s13^3*s23^2 + 
                12551*s13^2*s23^3 + 3532*s13*s23^4 + 120*s23^5)) + 
            p2q^2*p3q^2*(2*s12^5*s23*(19*s13^2 + 177*s13*s23 + 270*s23^2) + 
              s12^4*s23*(-38*s13^3 + 1415*s13^2*s23 + 2571*s13*s23^2 + 
                70*s23^3) + s12*s13*s23*(2500*s13^5 + 7196*s13^4*s23 + 
                21365*s13^3*s23^2 + 13348*s13^2*s23^3 - 2864*s13*s23^4 - 
                895*s23^5) + s12^3*(2592*s13^5 + 9038*s13^4*s23 + 
                13799*s13^3*s23^2 + 15208*s13^2*s23^3 + 3231*s13*s23^4 - 
                550*s23^5) + s13^2*s23*(20*s13^5 + 4704*s13^4*s23 + 
                4244*s13^3*s23^2 + 451*s13^2*s23^3 + 366*s13*s23^4 - 
                525*s23^5) + s12^2*(2592*s13^6 - 1366*s13^5*s23 + 
                5582*s13^4*s23^2 + 18957*s13^3*s23^3 + 12128*s13^2*s23^4 + 
                1049*s13*s23^5 - 80*s23^6)) - p2q^3*p3q*
             (s12^4*s23*(40*s13^3 - 334*s13^2*s23 - 359*s13*s23^2 + 
                260*s23^3) + 2*s12^3*s23*(13*s13^4 - 1772*s13^3*s23 - 
                2330*s13^2*s23^2 - 11*s13*s23^3 + 140*s23^4) + 
              s13^2*s23*(-22*s13^5 - 4332*s13^4*s23 - 4261*s13^3*s23^2 + 
                1352*s13^2*s23^3 + 2181*s13*s23^4 + 878*s23^5) + 
              s12^2*(1296*s13^6 + 6534*s13^5*s23 + 917*s13^4*s23^2 - 
                5970*s13^3*s23^3 + 465*s13^2*s23^4 + 1387*s13*s23^5 + 
                20*s23^6) + s12*s13*(1296*s13^6 + 46*s13^5*s23 - 
                9565*s13^4*s23^2 - 16819*s13^3*s23^3 - 3727*s13^2*s23^4 + 
                6043*s13*s23^5 + 1290*s23^6)))))/(216*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^3*s23*(p3q^2*s12*(s12 + s13) - 
          p2q^2*(s12 + s13)*(s13 + s23) + p1q^2*s23*(s13 + s23) + 
          p2q*(p3q*(s12 + s13)*(s12 - s13 - s23) - p1q*(s12 + s13 - s23)*
             (s13 + s23)) - p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23)))) + 
       (2*p1q^5*s23^3*(s12 + s13 + s23)*
          (-5*p3q*s23*(s13*(6*s13^2 + 5*s13*s23 - s23^2) + 
             s12*(14*s13^2 + 3*s13*s23 + 5*s23^2)) + 
           p2q*(-(s13*(648*s13^3 + 975*s13^2*s23 + 367*s13*s23^2 + 
                40*s23^3)) + s12*(648*s13^3 + 965*s13^2*s23 + 525*s13*s23^2 + 
               200*s23^3))) - p1q^4*s23^2*(s12 + s13 + s23)*
          (-10*p3q^2*s23*(s12^2*(34*s13^2 + 14*s13*s23 + 19*s23^2) + 
             s12*(32*s13^3 + 15*s13^2*s23 + 18*s13*s23^2 - 6*s23^3) + 
             s13*(6*s13^3 + 2*s13^2*s23 - 7*s13*s23^2 - 3*s23^3)) + 
           p2q*p3q*(s12^2*(2592*s13^3 + 5730*s13^2*s23 + 4150*s13*s23^2 + 
               2010*s23^3) - s12*(2592*s13^4 + 9576*s13^3*s23 + 6063*s13^2*
                s23^2 + 523*s13*s23^3 - 110*s23^4) + s13*(2592*s13^4 + 5646*
                s13^3*s23 + 2670*s13^2*s23^2 - 37*s13*s23^3 + 347*s23^4)) + 
           p2q^2*(2*s12^2*(648*s13^3 + 965*s13^2*s23 + 525*s13*s23^2 + 200*
                s23^3) + s12*(5184*s13^4 + 2552*s13^3*s23 - 2331*s13^2*
                s23^2 - 163*s13*s23^3 - 400*s23^4) + s13*(1296*s13^4 + 5814*
                s13^3*s23 + 5012*s13^2*s23^2 + 901*s13*s23^3 + 407*s23^4))) + 
         (p2q + p3q)*(-10*p3q^5*s12^2*(s12 + s13)*s23*
            (s12^4 + 8*s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 7*s23) + 
             s12^2*(4*s13^2 + 26*s13*s23 + 6*s23^2) + 
             s12*s13*(3*s13^2 + 30*s13*s23 + 19*s23^2)) + 
           p2q^5*s13^3*s23*(s13*(s13 + s23)^2*(1376*s13 + 2271*s23) + 
             s12^3*(2351*s13 + 2343*s23) + 2*s12^2*(3039*s13^2 + 5018*s13*
                s23 + 1983*s23^2) + s12*(5103*s13^3 + 12716*s13^2*s23 + 9236*
                s13*s23^2 + 1623*s23^3)) - p2q*p3q^4*s12*(460*s12^6*s23 + 
             s12^5*s23*(497*s13 + 510*s23) + s12^2*s13*s23*(4508*s13^3 + 1829*
                s13^2*s23 - 233*s13*s23^2 - 250*s23^3) + 2*s12*s13^2*s23*
              (1899*s13^3 + 2319*s13^2*s23 + 297*s13*s23^2 - 175*s23^3) + 
             8*s13^3*s23*(324*s13^3 + 313*s13^2*s23 + 133*s13*s23^2 - 20*
                s23^3) + 2*s12^4*(1296*s13^3 + 927*s13^2*s23 + 312*s13*
                s23^2 - 5*s23^3) + s12^3*(2592*s13^4 + 2527*s13^3*s23 + 2401*
                s13^2*s23^2 + 227*s13*s23^3 - 60*s23^4)) + 
           p2q^3*p3q^2*s13*(-3*s12^5*s23*(293*s13 + 171*s23) + 
             s12^4*s23*(-1409*s13^2 + 1852*s13*s23 - 146*s23^2) + 
             2*s13^3*s23*(3255*s13^3 + 7165*s13^2*s23 + 5869*s13*s23^2 + 1959*
                s23^3) + s12*s13^2*s23*(3916*s13^3 + 12593*s13^2*s23 + 10773*
                s13*s23^2 + 3424*s23^3) - s12^2*s13*(7776*s13^4 + 16965*s13^3*
                s23 + 10012*s13^2*s23^2 + 239*s13*s23^3 + 127*s23^4) + 
             s12^3*(-7776*s13^4 - 22677*s13^3*s23 - 8502*s13^2*s23^2 + 2524*
                s13*s23^3 + 367*s23^4)) + p2q^2*p3q^3*
            (s12^6*s23*(973*s13 + 460*s23) + s12^5*s23*(-783*s13^2 + 1173*s13*
                s23 + 520*s23^2) + 8*s13^4*s23*(324*s13^3 + 647*s13^2*s23 + 
               485*s13*s23^2 + 162*s23^3) + 2*s12*s13^3*s23*(-1341*s13^3 + 
               528*s13^2*s23 + 1331*s13*s23^2 + 778*s23^3) + 
             s12^2*s13^2*s23*(-5424*s13^3 - 5877*s13^2*s23 + 148*s13*s23^2 + 
               817*s23^3) + 3*s12^4*(2592*s13^4 + 2085*s13^3*s23 + 455*s13^2*
                s23^2 + 139*s13*s23^3 + 20*s23^4) + s12^3*s13*
              (7776*s13^4 + 85*s13^3*s23 + 1487*s13^2*s23^2 + 3855*s13*
                s23^3 + 617*s23^4)) + p2q^4*p3q*s13^2*
            (s12^4*s23*(-1985*s13 + 446*s23) - s12^3*s23*(3379*s13^2 + 1751*
                s13*s23 + 468*s23^2) + s13^2*s23*(6086*s13^3 + 16409*s13^2*
                s23 + 15864*s13*s23^2 + 5541*s23^3) + 
             s12^2*(2592*s13^4 + 13203*s13^3*s23 + 16283*s13^2*s23^2 + 6053*
                s13*s23^3 - 594*s23^4) + s12*s13*(2592*s13^4 + 18091*s13^3*
                s23 + 32297*s13^2*s23^2 + 21089*s13*s23^3 + 4299*s23^4))) + 
         p1q*(-10*p3q^5*s12*s23*(-8*s13^3*s23^2*(s13 + s23) + 
             s12^5*(5*s13 + s23) + s12^4*(15*s13^2 + 21*s13*s23 - 23*s23^2) + 
             s12^3*(12*s13^3 + 32*s13^2*s23 - 87*s13*s23^2 - 24*s23^3) - 
             s12*s13^2*(3*s13^3 + 7*s13^2*s23 + 69*s13*s23^2 + 57*s23^3) - 
             s12^2*s13*(s13^3 - 5*s13^2*s23 + 128*s13*s23^2 + 78*s23^3)) + 
           p2q^5*s13^2*s23*(s13*(s13 + s23)^2*(4622*s13^2 + 5351*s13*s23 - 
               2925*s23^2) + s12^3*(6893*s13^2 + 5647*s13*s23 - 1214*s23^2) + 
             s12^2*(18408*s13^3 + 24593*s13^2*s23 + 4357*s13*s23^2 - 1868*
                s23^3) + s12*(16137*s13^4 + 33541*s13^3*s23 + 14403*s13^2*
                s23^2 - 3655*s13*s23^3 - 654*s23^4)) + p2q^4*p3q*s13*
            (-2*s12^4*s23*(1446*s13^2 - 1481*s13*s23 + 67*s23^2) - 
             s12^3*s23*(2858*s13^3 - 2641*s13^2*s23 + 3372*s13*s23^2 + 908*
                s23^3) + s13^2*s23*(21136*s13^4 + 55056*s13^3*s23 + 44355*
                s13^2*s23^2 + 4174*s13*s23^3 - 6261*s23^4) + 
             s12*s13*(5184*s13^5 + 53262*s13^4*s23 + 97069*s13^3*s23^2 + 
               51726*s13^2*s23^3 + 1211*s13*s23^4 - 1548*s23^5) + 
             s12^2*(5184*s13^5 + 42528*s13^4*s23 + 54796*s13^3*s23^2 + 14031*
                s13^2*s23^3 - 7562*s13*s23^4 - 774*s23^5)) + 
           p2q*p3q^4*(20*s12^6*s23*(49*s13 + 111*s23) + 8*s13^4*s23*
              (324*s13^3 + 648*s13^2*s23 + 487*s13*s23^2 + 163*s23^3) + 
             s12^4*s23*(3870*s13^3 + 1571*s13^2*s23 + 3236*s13*s23^2 + 260*
                s23^3) + s12^5*(-2592*s13^3 - 3081*s13^2*s23 + 3068*s13*
                s23^2 + 2660*s23^3) + s12^2*s13*s23*(-396*s13^4 + 1591*s13^3*
                s23 + 4178*s13^2*s23^2 + 1461*s13*s23^3 - 530*s23^4) - 
             4*s12*s13^2*s23*(339*s13^4 - 1273*s13^3*s23 - 1696*s13^2*s23^2 - 
               647*s13*s23^3 + 95*s23^4) + s12^3*(2592*s13^5 + 1115*s13^4*
                s23 + 7446*s13^3*s23^2 + 10103*s13^2*s23^3 + 2218*s13*s23^4 - 
               180*s23^5)) + p2q^2*p3q^3*(10*s12^6*s23*(103*s13 + 178*s23) + 
             s12^5*s23*(-5370*s13^2 + 19*s13*s23 + 210*s23^2) + 
             s12^4*(10368*s13^4 + 16458*s13^3*s23 + 7052*s13^2*s23^2 - 1023*
                s13*s23^3 - 1870*s23^4) + 2*s12*s13^2*s23*(1641*s13^4 + 12524*
                s13^3*s23 + 13314*s13^2*s23^2 + 4308*s13*s23^3 - 767*s23^4) + 
             2*s13^3*s23*(7143*s13^4 + 14267*s13^3*s23 + 9687*s13^2*s23^2 + 
               1885*s13*s23^3 - 678*s23^4) + s12^3*(5184*s13^5 - 6704*s13^4*
                s23 + 10939*s13^3*s23^2 + 15718*s13^2*s23^3 + 1027*s13*
                s23^4 - 300*s23^5) - s12^2*s13*(5184*s13^5 + 9462*s13^4*s23 - 
               1664*s13^3*s23^2 - 5401*s13^2*s23^3 + 4528*s13*s23^4 + 2011*
                s23^5)) - p2q^3*p3q^2*(s12^5*s23*(2439*s13^2 + 2269*s13*s23 + 
               1320*s23^2) + s12^4*s23*(-1800*s13^3 - 9023*s13^2*s23 + 2443*
                s13*s23^2 + 1440*s23^3) - s13^3*s23*(28208*s13^4 + 63955*
                s13^3*s23 + 47722*s13^2*s23^2 + 7283*s13*s23^3 - 4692*
                s23^4) - s12*s13^2*(2592*s13^5 + 33987*s13^4*s23 + 74178*
                s13^3*s23^2 + 51307*s13^2*s23^3 + 9156*s13*s23^4 - 2048*
                s23^5) + s12^3*(12960*s13^5 + 40888*s13^4*s23 + 8527*s13^3*
                s23^2 - 5457*s13^2*s23^3 + 1229*s13*s23^4 + 120*s23^5) + 
             s12^2*s13*(10368*s13^5 + 8244*s13^4*s23 - 11572*s13^3*s23^2 - 
               5899*s13^2*s23^3 + 10843*s13*s23^4 + 2255*s23^5))) + 
         p1q^3*s23*(-10*p3q^3*s23*(-3*s13^2*s23*(s13 + s23)^3 + 
             s12^4*(26*s13^2 + 24*s13*s23 + 26*s23^2) + 
             s12^3*(64*s13^3 + 75*s13^2*s23 + 108*s13*s23^2 + 2*s23^3) + 
             s12*s13*(12*s13^4 + 7*s13^3*s23 - 7*s13^2*s23^2 - 36*s13*s23^3 - 
               34*s23^4) + s12^2*(50*s13^4 + 61*s13^3*s23 + 84*s13^2*s23^2 - 
               24*s23^4)) + p2q^3*(s12^3*(3888*s13^4 + 1276*s13^3*s23 - 2647*
                s13^2*s23^2 - 483*s13*s23^3 - 400*s23^4) + s13*(s13 + s23)^2*
              (2592*s13^4 - 666*s13^3*s23 - 7758*s13^2*s23^2 + 1141*s13*
                s23^3 - 327*s23^4) + s12*s13*(9072*s13^5 + 5128*s13^4*s23 - 
               18367*s13^3*s23^2 - 10853*s13^2*s23^3 + 2683*s13*s23^4 - 887*
                s23^5) + s12^2*(10368*s13^5 + 1886*s13^4*s23 - 8036*s13^3*
                s23^2 - 701*s13^2*s23^3 - 1443*s13*s23^4 - 400*s23^5)) + 
           p2q^2*p3q*(2*s12^4*(648*s13^3 + 1970*s13^2*s23 + 1565*s13*s23^2 + 
               830*s23^3) + s12^3*(3888*s13^4 + 3628*s13^3*s23 - 4072*s13^2*
                s23^2 + 3385*s13*s23^3 + 110*s23^4) + 
             s12^2*(14256*s13^5 + 18716*s13^4*s23 + 4468*s13^3*s23^2 - 3048*
                s13^2*s23^3 - 637*s13*s23^4 - 1610*s23^5) + 
             s13*(7776*s13^6 + 12768*s13^5*s23 - 7262*s13^4*s23^2 - 21186*
                s13^3*s23^3 - 7447*s13^2*s23^4 + 1128*s13*s23^5 - 357*
                s23^6) + s12*(14256*s13^6 + 23876*s13^5*s23 + 13176*s13^4*
                s23^2 + 14585*s13^3*s23^3 + 12982*s13^2*s23^4 + 1901*s13*
                s23^5 - 60*s23^6)) + p2q*p3q^2*(2*s12^4*(648*s13^3 + 2875*
                s13^2*s23 + 3065*s13*s23^2 + 2050*s23^3) + 
             s12^3*(-2592*s13^4 - 8368*s13^3*s23 - 2265*s13^2*s23^2 + 9178*
                s13*s23^3 + 4540*s23^4) + s12^2*(3888*s13^5 - 2714*s13^4*
                s23 - 18400*s13^3*s23^2 - 13861*s13^2*s23^3 + 1436*s13*
                s23^4 + 380*s23^5) + s12*(7776*s13^6 + 18916*s13^5*s23 + 
               16587*s13^4*s23^2 + 6878*s13^3*s23^3 + 3441*s13^2*s23^4 + 1958*
                s13*s23^5 - 60*s23^6) + s13*(5184*s13^6 + 10248*s13^5*s23 + 
               3424*s13^4*s23^2 - 4057*s13^3*s23^3 - 2040*s13^2*s23^4 + 347*
                s13*s23^5 - 30*s23^6))) + 
         p1q^2*(10*p3q^4*s12*s23*(2*s12^4*(3*s13^2 + 9*s13*s23 + 7*s23^2) + 
             s12^3*(18*s13^3 + 49*s13^2*s23 + 88*s13*s23^2 - 22*s23^3) - 
             s13^2*s23*(6*s13^3 + 13*s13^2*s23 + 40*s13*s23^2 + 33*s23^3) + 
             2*s12*s13*(3*s13^4 - s13^3*s23 + 5*s13^2*s23^2 - 49*s13*s23^3 - 
               42*s23^4) + s12^2*(18*s13^4 + 35*s13^3*s23 + 100*s13^2*s23^2 - 
               64*s13*s23^3 - 36*s23^4)) + p2q^4*s13*s23*
            (s12^3*(8430*s13^3 + 5876*s13^2*s23 - 1931*s13*s23^2 + 567*
                s23^3) + s13*(s13 + s23)^2*(5838*s13^3 + 3710*s13^2*s23 - 
               7461*s13*s23^2 + 981*s23^3) + s12^2*(22698*s13^4 + 22923*s13^3*
                s23 - 571*s13^2*s23^2 + 10*s13*s23^3 + 894*s23^4) + 
             s12*(20106*s13^5 + 32433*s13^4*s23 + 350*s13^3*s23^2 - 9622*
                s13^2*s23^3 + 2682*s13*s23^4 + 327*s23^5)) - 
           p2q*p3q^3*(10*s12^5*s23*(195*s13^2 + 401*s13*s23 + 424*s23^2) + 
             s12^4*(-2592*s13^4 - 8430*s13^3*s23 - 6917*s13^2*s23^2 + 7452*
                s13*s23^3 + 4900*s23^4) + s12*s13*s23*(120*s13^5 - 5460*s13^4*
                s23 - 7444*s13^3*s23^2 - 1111*s13^2*s23^3 + 1771*s13*s23^4 - 
               310*s23^5) + s12^2*s23*(3606*s13^5 + 7114*s13^4*s23 + 8294*
                s13^3*s23^2 + 10273*s13^2*s23^3 + 3352*s13*s23^4 - 180*
                s23^5) - 2*s13^2*s23*(2592*s13^5 + 4506*s13^4*s23 + 1873*
                s13^3*s23^2 - 693*s13^2*s23^3 - 637*s13*s23^4 + 15*s23^5) + 
             s12^3*(-2592*s13^5 + 882*s13^4*s23 - 7077*s13^3*s23^2 - 8395*
                s13^2*s23^3 + 3704*s13*s23^4 + 480*s23^5)) - 
           p2q^2*p3q^2*(10*s12^5*s23*(201*s13^2 + 311*s13*s23 + 258*s23^2) + 
             s12^4*s23*(-1830*s13^3 - 10331*s13^2*s23 + 2593*s13*s23^2 + 270*
                s23^3) + s12^3*(5184*s13^5 + 26886*s13^4*s23 + 12941*s13^3*
                s23^2 + 2160*s13^2*s23^3 - 955*s13*s23^4 - 2550*s23^5) - 
             s13^2*s23*(20796*s13^5 + 43456*s13^4*s23 + 23460*s13^3*s23^2 - 
               6337*s13^2*s23^3 - 6690*s13*s23^4 + 447*s23^5) - 
             s12*s13*s23*(18264*s13^5 + 44128*s13^4*s23 + 31369*s13^3*s23^2 + 
               5148*s13^2*s23^3 - 208*s13*s23^4 + 1501*s23^5) + 
             s12^2*(5184*s13^6 + 7338*s13^5*s23 + 6990*s13^4*s23^2 + 21219*
                s13^3*s23^3 + 25396*s13^2*s23^4 + 2711*s13*s23^5 - 240*
                s23^6)) + p2q^3*p3q*(s12^4*s23*(-1236*s13^3 + 5326*s13^2*
                s23 + 1779*s13*s23^2 + 1260*s23^3) + 2*s12^3*s23*
              (-921*s13^4 + 1258*s13^3*s23 - 2890*s13^2*s23^2 + 1573*s13*
                s23^3 + 660*s23^4) + s13^2*s23*(21450*s13^5 + 48984*s13^4*
                s23 + 23549*s13^3*s23^2 - 16568*s13^2*s23^3 - 11185*s13*
                s23^4 + 1398*s23^5) + s12^2*(2592*s13^6 + 34578*s13^5*s23 + 
               41027*s13^4*s23^2 + 1958*s13^3*s23^3 - 10477*s13^2*s23^4 + 
               1685*s13*s23^5 + 60*s23^6) + s12*s13*(2592*s13^6 + 43674*s13^5*
                s23 + 74389*s13^4*s23^2 + 27079*s13^3*s23^3 - 3465*s13^2*
                s23^4 + 4257*s13*s23^5 + 1518*s23^6))))/
        (432*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s13^3*s23*
         (p3q^2*s12*(s12 + s13) - p2q^2*(s12 + s13)*(s13 + s23) + 
          p1q^2*s23*(s13 + s23) + p2q*(p3q*(s12 + s13)*(s12 - s13 - s23) - 
            p1q*(s12 + s13 - s23)*(s13 + s23)) - p1q*p3q*(s13*(s13 + s23) + 
            s12*(s13 + 2*s23)))) + ((s12 + s13 + s23)*
         (-(p2q^4*s13^3*(407*s12 + 80*s13 + 327*s23)) + 
          p2q^3*s13^2*(p3q*(1074*s12^2 - 671*s12*s13 + 394*s13^2 + 
              674*s12*s23 - 357*s13*s23) + 2*p1q*(-327*s12*s13 - 327*s13^2 + 
              287*s12*s23 + 40*s13*s23 + 327*s23^2)) - 
          10*p3q*(p3q*s12 - p1q*s23)^2*(p1q*(6*s12*s13 + 6*s13^2 - 
              3*s12*s23 - s13*s23) + p3q*(s12^2 + s12*(s13 - 2*s23) + 
              3*s13*(s13 + s23))) + p2q*(-2*p1q^3*s23^2*(327*s12*s13 + 
              327*s13^2 + 120*s12*s23 + 40*s13*s23) + p3q^3*s12*
             (260*s12^3 + s12*s13*(414*s13 - 397*s23) + 60*s13^2*(s13 + 
                s23) + s12^2*(-811*s13 + 20*s23)) - 2*p1q*p3q^2*
             (-30*s13^2*s23*(s13 + s23) + s12^3*(327*s13 + 380*s23) + 
              s12*s13*(-60*s13^2 + 394*s13*s23 - 337*s23^2) + 
              s12^2*(267*s13^2 - 771*s13*s23 + 20*s23^2)) + 
            p1q^2*p3q*s23*(4*s12^2*(327*s13 + 185*s23) + s13*(120*s13^2 + 
                374*s13*s23 - 357*s23^2) + s12*(1428*s13^2 - 731*s13*s23 + 
                20*s23^2))) + p2q^2*s13*(p1q^2*s23*(1308*s12*s13 + 
              1308*s13^2 + 73*s12*s23 + 80*s13*s23 - 327*s23^2) - 
            p3q^2*(927*s12^3 + 2*s12*s13*(399*s13 - 367*s23) + 
              30*s13^2*(s13 + s23) + s12^2*(-1572*s13 + 367*s23)) + 
            2*p1q*p3q*(s12^2*(654*s13 + 387*s23) + s12*(624*s13^2 + 
                1006*s13*s23 + 307*s23^2) + s13*(-30*s13^2 - 389*s13*s23 + 
                357*s23^2))))*den[-1 + 2*ep])/(432*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^3))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + 
     ((ep^2*(-(p3q^5*s12^3*(s13 - s23)*(s12 + s23)*(s12 + s13 + s23)) - 
          p2q^5*s13^3*(s12 - s23)*(s13 + s23)*(s12 + s13 + s23) - 
          p1q^4*s23^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23)*
           (p2q*(s12 + s23) + p3q*(s13 + s23)) - p2q*p3q^4*s12*
           (s12^5 - 2*s13*(s13 - 3*s23)*s23^3 + s12^4*(s13 + s23) + 
            s12^3*(-4*s13^2 + 3*s13*s23 - 2*s23^2) - 
            s12^2*(4*s13^3 + 4*s13^2*s23 + 7*s13*s23^2 - 3*s23^3) + 
            s12*s23*(-3*s13^3 - 3*s13^2*s23 - 5*s13*s23^2 + 5*s23^3)) + 
          p2q^2*p3q^3*(s12^5*(4*s13 + s23) + 2*s13*s23^3*(-s13^2 + s13*s23 + 
              2*s23^2) + s12^4*(4*s13^2 + 4*s13*s23 + 3*s23^2) + 
            s12^3*(-6*s13^3 + 2*s13^2*s23 + 7*s13*s23^2 - 5*s23^3) - 
            s12*s23*(3*s13^4 + 6*s13^3*s23 + s13^2*s23^2 + 12*s13*s23^3 - 
              4*s23^4) - 3*s12^2*(2*s13^4 + 2*s13^3*s23 + 6*s13^2*s23^2 - 
              s13*s23^3 + s23^4)) - p2q^4*p3q*s13*
           (-(s12^3*s13*(4*s13 + 3*s23)) - s12^2*(4*s13^3 + 4*s13^2*s23 + 
              3*s13*s23^2 + 2*s23^3) + s13*(s13^4 + s13^3*s23 - 
              2*s13^2*s23^2 + 3*s13*s23^3 + 5*s23^4) + 
            s12*(s13^4 + 3*s13^3*s23 - 7*s13^2*s23^2 - 5*s13*s23^3 + 
              6*s23^4)) + p2q^3*p3q^2*(-3*s12^4*s13*(2*s13 + s23) + 
            s13*(s13 - s23)^2*s23*(s13^2 + 5*s13*s23 + 4*s23^2) - 
            2*s12^3*(3*s13^3 + 3*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
            s12^2*(4*s13^4 + 2*s13^3*s23 - 18*s13^2*s23^2 - s13*s23^3 + 
              2*s23^4) + s12*(4*s13^5 + 4*s13^4*s23 + 7*s13^3*s23^2 + 
              3*s13^2*s23^3 - 12*s13*s23^4 + 4*s23^5)) + 
          p1q^3*s23^2*(-(p2q^2*(s12 + s23)*(s13 + s23)*(s12^2 - 2*s12*s13 - 3*
                s13^2 + 2*s12*s23 - 2*s13*s23 + s23^2)) + p3q^2*(s12 + s23)*
             (s13 + s23)*(3*s12^2 + 2*s12*(s13 + s23) - (s13 + s23)^2) + 
            p2q*p3q*(s12^4 + s13^4 + 4*s13^3*s23 + 5*s13^2*s23^2 - 
              4*s13*s23^3 - 6*s23^4 + 2*s12^3*(s13 + 2*s23) + 
              s12^2*(-6*s13^2 - 4*s13*s23 + 5*s23^2) + 2*s12*(s13^3 - 
                2*s13^2*s23 - 6*s13*s23^2 - 2*s23^3))) + 
          p1q^2*(p3q^3*s12*(s12 + s23)*(s12*s13^2*(s13 + s23) + 
              3*s23^2*(s13 + s23)^2 + s12^2*(s13^2 - 3*s23^2)) + 
            p2q^3*s13*(s13 + s23)*(s12^3*s13 - 3*s13^2*s23^2 + 6*s12*s23^3 + 
              3*s23^4 + s12^2*(s13^2 + s13*s23 + 3*s23^2)) + 
            p2q*p3q^2*(s12^5*(s13 + s23) + s12^4*s13*(s13 + 2*s23) + 
              s23^3*(s13^3 + 9*s13^2*s23 + 3*s13*s23^2 - 5*s23^3) - 
              2*s12^3*(s13^3 - 5*s13*s23^2 + s23^3) - s12^2*(2*s13^4 + 
                4*s13^3*s23 + 15*s13^2*s23^2 + s13*s23^3 - 13*s23^4) - 
              s12*s23*(2*s13^4 + 4*s13^3*s23 + 12*s13^2*s23^2 + 
                13*s13*s23^3 - 9*s23^4)) + p2q^2*p3q*(-2*s12^4*s13*(s13 + 
                s23) + s12^3*(-2*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
              s12^2*(s13^4 - 15*s13^2*s23^2 - 12*s13*s23^3 + 9*s23^4) + 
              s23*(s13^5 - 2*s13^3*s23^2 + 13*s13^2*s23^3 + 9*s13*s23^4 - 
                5*s23^5) + s12*(s13^5 + 2*s13^4*s23 + 10*s13^3*s23^2 - 
                s13^2*s23^3 - 13*s13*s23^4 + 3*s23^5))) + 
          p1q*(p2q^4*s13^2*(s13 + s23)*(s12^3 + s12^2*s23 + s23*(s13^2 - 
                2*s13*s23 - 3*s23^2) - s12*(s13^2 + 3*s23^2)) + 
            p3q^4*s12^2*(s12^3*(-s13 + s23) - s12^2*s23*(s13 + s23) + 
              s12*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 5*s23^3) + 
              s23*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3)) - 
            p2q^3*p3q*(s13^6 - s13^4*s23^2 + 10*s13^3*s23^3 - 10*s13*s23^5 + 
              2*s12^3*s13*s23*(s13 + s23) + s12^4*s13*(3*s13 + 2*s23) - 
              2*s12*s23^2*(9*s13^3 + 5*s13^2*s23 - 4*s13*s23^2 + 3*s23^3) + 
              s12^2*(-4*s13^4 - 4*s13^3*s23 + s13^2*s23^2 - 6*s23^4)) - 
            p2q*p3q^3*(s12^6 - 6*s13*s23^4*(s13 + s23) - s12^4*(4*s13^2 + 
                s23^2) + 2*s12^3*s23*(-2*s13^2 - 9*s13*s23 + 5*s23^2) + 
              s12^2*s13*(3*s13^3 + 2*s13^2*s23 + s13*s23^2 - 10*s23^3) + 
              2*s12*s23*(s13^4 + s13^3*s23 + 4*s13*s23^3 - 5*s23^4)) + 
            p2q^2*p3q^2*(s12^4*s23*(s13 + s23) + s12^5*(3*s13 + s23) + 
              s12^2*s23*(-4*s13^3 - 34*s13^2*s23 - 15*s13*s23^2 + 3*s23^3) - 
              s12^3*(6*s13^3 + 4*s13^2*s23 - 3*s13*s23^2 + 9*s23^3) + 
              s23*(s13^5 + s13^4*s23 - 9*s13^3*s23^2 + 3*s13^2*s23^3 + 
                8*s13*s23^4 - 4*s23^5) + s12*(3*s13^5 + s13^4*s23 + 
                3*s13^3*s23^2 - 15*s13^2*s23^3 - 36*s13*s23^4 + 8*s23^5)))))/
        (12*p2q*p3q*(p1q + p2q + p3q)*s23^2*(-(p3q^2*s12*(s12 + s23)) - 
          p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
          p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
           (2*s13 + s23))) + (ep*(2*p1q^5*(s12 + s13)*s23^2*(s12 + s23)*
           (s13 + s23)*(s12 + s13 + s23) + p3q^5*s12^2*
           (s12^3*(5*s13 - 7*s23) + s12^2*(5*s13^2 + 3*s13*s23 - 18*s23^2) + 
            s12*s23*(5*s13^2 - 2*s13*s23 - 15*s23^2) + 
            4*s23^2*(s13^2 - s23^2)) + p2q^5*s13^2*
           (-(s23*(s13 + s23)^2*(7*s13 + 4*s23)) + s12*s13*
             (5*s13^2 + 3*s13*s23 - 2*s23^2) + s12^2*(5*s13^2 + 5*s13*s23 + 
              4*s23^2)) + p2q*p3q^4*s12*(5*s12^5 + s12^4*(5*s13 + 3*s23) + 
            s12^3*(-20*s13^2 + 21*s13*s23 + 18*s23^2) + 
            8*s23^2*(-s13^3 + s13^2*s23 - s13*s23^2 + s23^3) + 
            s12*s23*(-15*s13^3 + 21*s13^2*s23 - 9*s13*s23^2 + 19*s23^3) + 
            s12^2*(-20*s13^3 - 12*s13^2*s23 + 7*s13*s23^2 + 31*s23^3)) + 
          p2q^4*p3q*s13*(5*s13^5 + 3*s13^4*s23 + 18*s13^3*s23^2 + 
            31*s13^2*s23^3 + 19*s13*s23^4 + 8*s23^5 - 
            s12^3*(20*s13^2 + 15*s13*s23 + 8*s23^2) + 
            s12^2*(-20*s13^3 - 12*s13^2*s23 + 21*s13*s23^2 + 8*s23^3) + 
            s12*(5*s13^4 + 21*s13^3*s23 + 7*s13^2*s23^2 - 9*s13*s23^3 - 
              8*s23^4)) + p2q^2*p3q^3*(-5*s12^5*(4*s13 + s23) + 
            s12^4*(-20*s13^2 - 12*s13*s23 + 17*s23^2) + 4*s13*s23^2*
             (s13^3 - 2*s13^2*s23 - s13*s23^2 + 2*s23^3) + 
            s12^3*(30*s13^3 - 14*s13^2*s23 - 65*s13*s23^2 + 9*s23^3) + 
            s12^2*(30*s13^4 + 18*s13^3*s23 + 58*s13^2*s23^2 - 31*s13*s23^3 - 
              5*s23^4) + s12*s23*(15*s13^4 - 36*s13^3*s23 + 15*s13^2*s23^2 + 
              2*s13*s23^3 + 8*s23^4)) + p2q^3*p3q^2*
           (s12^4*(30*s13^2 + 15*s13*s23 + 4*s23^2) + 
            2*s12^3*(15*s13^3 + 9*s13^2*s23 - 18*s13*s23^2 - 4*s23^3) + 
            s12^2*(-20*s13^4 - 14*s13^3*s23 + 58*s13^2*s23^2 + 15*s13*s23^3 - 
              4*s23^4) + s13*s23*(-5*s13^4 + 17*s13^3*s23 + 9*s13^2*s23^2 - 
              5*s13*s23^3 + 8*s23^4) - s12*(20*s13^5 + 12*s13^4*s23 + 
              65*s13^3*s23^2 + 31*s13^2*s23^3 - 2*s13*s23^4 - 8*s23^5)) - 
          p1q^4*s23^2*(s12 + s13 + s23)*(p3q*(s12 + s23)*(2*s12^2 - 
              4*s12*s13 - 9*s13^2 - 6*s12*s23 - 16*s13*s23 - 7*s23^2) - 
            p2q*(s13 + s23)*(9*s12^2 - 2*s13^2 + 6*s13*s23 + 7*s23^2 + 
              4*s12*(s13 + 4*s23))) + p1q^3*
           (-(p3q^2*(2*s12^5*(s13 + s23) - s23^3*(s13 + s23)^2*(19*s13 + 
                 15*s23) + 2*s12^4*(2*s13^2 + 6*s13*s23 + 7*s23^2) + s12^2*
                s23*(4*s13^3 + 10*s13^2*s23 + 17*s13*s23^2 + 5*s23^3) - s12*
                s23^2*(13*s13^3 + 49*s13^2*s23 + 61*s13*s23^2 + 25*s23^3) + 
               s12^3*(2*s13^3 + 14*s13^2*s23 + 39*s13*s23^2 + 27*s23^3))) + 
            p2q*p3q*(s12^4*(4*s13^2 + 2*s13*s23 - 9*s23^2) + s12^3*(8*s13^3 + 
                22*s13^2*s23 - 26*s23^3) + s12^2*(4*s13^4 + 22*s13^3*s23 + 
                110*s13^2*s23^2 + 106*s13*s23^3 + 21*s23^4) + 
              s23^2*(-9*s13^4 - 26*s13^3*s23 + 21*s13^2*s23^2 + 
                60*s13*s23^3 + 22*s23^4) + 2*s12*s23*(s13^4 + 53*s13^2*
                 s23^2 + 80*s13*s23^3 + 30*s23^4)) - 
            p2q^2*(s12^3*(2*s13^3 + 4*s13^2*s23 - 13*s13*s23^2 - 19*s23^3) + 
              s23*(s13 + s23)^2*(2*s13^3 + 10*s13^2*s23 + 5*s13*s23^2 - 
                15*s23^3) + s12^2*(4*s13^4 + 14*s13^3*s23 + 10*s13^2*s23^2 - 
                49*s13*s23^3 - 53*s23^4) + s12*(2*s13^5 + 12*s13^4*s23 + 
                39*s13^3*s23^2 + 17*s13^2*s23^3 - 61*s13*s23^4 - 
                49*s23^5))) + p1q*(p3q^4*s12*(2*s12^5 + s12^4*(9*s13 + s23) + 
              s12^3*(2*s13^2 + 17*s13*s23 + s23^2) - 4*s23^2*(s13^3 + 
                5*s13^2*s23 + 5*s13*s23^2 + s23^3) + s12^2*(-5*s13^3 + 
                s13^2*s23 + 13*s13*s23^2 + 3*s23^3) - s12*s23*(5*s13^3 + 
                9*s13^2*s23 + 15*s13*s23^2 + 3*s23^3)) + 
            p2q^4*s13*(-(s12^3*(5*s13^2 + 5*s13*s23 + 4*s23^2)) + 
              s12^2*(2*s13^3 + s13^2*s23 - 9*s13*s23^2 - 20*s23^3) + 
              (s13 + s23)^2*(2*s13^3 - 3*s13^2*s23 + 5*s13*s23^2 - 4*s23^3) + 
              s12*(9*s13^4 + 17*s13^3*s23 + 13*s13^2*s23^2 - 15*s13*s23^3 - 
                20*s23^4)) + p2q*p3q^3*(5*s12^6 - 2*s12^5*(4*s13 + s23) + 
              s12^4*(-36*s13^2 - 26*s13*s23 + 25*s23^2) - 2*s12^3*(4*s13^3 + 
                29*s13^2*s23 + 63*s13*s23^2 - 5*s23^3) + s12^2*(15*s13^4 - 
                4*s13^3*s23 + 59*s13^2*s23^2 - 70*s13*s23^3 - 8*s23^4) + 
              4*s23^2*(s13^4 + 3*s13^3*s23 + 11*s13^2*s23^2 + 11*s13*s23^3 + 
                2*s23^4) + 2*s12*s23*(5*s13^4 + 7*s13^3*s23 + 56*s13^2*
                 s23^2 + 29*s13*s23^3 + 11*s23^4)) + p2q^3*p3q*
             (5*s13^6 - 2*s13^5*s23 + 25*s13^4*s23^2 + 10*s13^3*s23^3 - 
              8*s13^2*s23^4 + 22*s13*s23^5 + 8*s23^6 + s12^4*(15*s13^2 + 
                10*s13*s23 + 4*s23^2) - 2*s12^3*(4*s13^3 + 2*s13^2*s23 - 
                7*s13*s23^2 - 6*s23^3) + s12^2*(-36*s13^4 - 58*s13^3*s23 + 
                59*s13^2*s23^2 + 112*s13*s23^3 + 44*s23^4) - 2*s12*(4*s13^5 + 
                13*s13^4*s23 + 63*s13^3*s23^2 + 35*s13^2*s23^3 - 
                29*s13*s23^4 - 22*s23^5)) + p2q^2*p3q^2*
             (-5*s12^5*(3*s13 + s23) + s12^4*(12*s13^2 + 5*s13*s23 - 
                5*s23^2) + s12^3*(54*s13^3 + 66*s13^2*s23 - 97*s13*s23^2 - 
                77*s23^3) + s12^2*(12*s13^4 + 66*s13^3*s23 + 250*s13^2*
                 s23^2 + 37*s13*s23^3 - 55*s23^4) + s23*(-5*s13^5 - 
                5*s13^4*s23 - 77*s13^3*s23^2 - 55*s13^2*s23^3 + 
                30*s13*s23^4 + 8*s23^5) + s12*(-15*s13^5 + 5*s13^4*s23 - 
                97*s13^3*s23^2 + 37*s13^2*s23^3 + 88*s13*s23^4 + 
                30*s23^5))) + p1q^2*(p3q^3*(2*s12^6 + 4*s23^3*(s13 + s23)^2*(
                3*s13 + 2*s23) + 2*s12^5*(s13 + 3*s23) + s12^4*(-7*s13^2 + 
                2*s13*s23 + 7*s23^2) + s12*s23^2*(2*s13^3 - s13^2*s23 + 
                3*s23^3) - s12^3*(7*s13^3 + 18*s13^2*s23 + 24*s13*s23^2 + 
                9*s23^3) - s12^2*s23*(9*s13^3 + 32*s13^2*s23 + 52*s13*s23^2 + 
                17*s23^3)) + p2q*p3q^2*(-(s12^5*(11*s13 + 5*s23)) - 
              s12^4*(11*s13^2 + 30*s13*s23 + 2*s23^2) + 2*s12^3*(8*s13^3 - 
                s13^2*s23 - 57*s13*s23^2 - 28*s23^3) + s12^2*(16*s13^4 + 
                42*s13^3*s23 + 155*s13^2*s23^2 + 21*s13*s23^3 - 31*s23^4) + 
              s23^2*(-14*s13^4 - 43*s13^3*s23 + 27*s13^2*s23^2 + 
                79*s13*s23^3 + 23*s23^4) + s12*s23*(14*s13^4 + 6*s13^3*s23 + 
                160*s13^2*s23^2 + 171*s13*s23^3 + 51*s23^4)) + 
            p2q^3*(s12^3*(-7*s13^3 - 9*s13^2*s23 + 2*s13*s23^2 + 12*s23^3) - 
              s12^2*(7*s13^4 + 18*s13^3*s23 + 32*s13^2*s23^2 + s13*s23^3 - 
                32*s23^4) + (s13 + s23)^2*(2*s13^4 + 2*s13^3*s23 + 
                s13^2*s23^2 - 13*s13*s23^3 + 8*s23^4) + 2*s12*(s13^5 + 
                s13^4*s23 - 12*s13^3*s23^2 - 26*s13^2*s23^3 + 14*s23^5)) + 
            p2q^2*p3q*(2*s12^4*(8*s13^2 + 7*s13*s23 - 7*s23^2) + 
              s12^3*(16*s13^3 + 42*s13^2*s23 + 6*s13*s23^2 - 43*s23^3) + 
              s12^2*(-11*s13^4 - 2*s13^3*s23 + 155*s13^2*s23^2 + 
                160*s13*s23^3 + 27*s23^4) + s23*(-5*s13^5 - 2*s13^4*s23 - 
                56*s13^3*s23^2 - 31*s13^2*s23^3 + 51*s13*s23^4 + 23*s23^5) + 
              s12*(-11*s13^5 - 30*s13^4*s23 - 114*s13^3*s23^2 + 
                21*s13^2*s23^3 + 171*s13*s23^4 + 79*s23^5)))))/
        (24*p2q*p3q*(p1q + p2q + p3q)*s23^2*(p3q^2*s12*(s12 + s23) + 
          p2q^2*s13*(s13 + s23) - p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*(p3q*(s12 - s13 - s23)*(s12 + s23) - p2q*(s12 - s13 + s23)*
             (s13 + s23)) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23)))) + 
       (p3q^5*s12^2*(7*s12^3*(s13 + s23) + s12*s23*(7*s13^2 + 14*s13*s23 - 
             9*s23^2) + 8*s23^2*(s13^2 - s23^2) + 
           s12^2*(7*s13^2 + 21*s13*s23 + 6*s23^2)) + 
         p2q^5*s13^2*((7*s13 - 8*s23)*s23*(s13 + s23)^2 + 
           7*s12*s13*(s13^2 + 3*s13*s23 + 2*s23^2) + 
           s12^2*(7*s13^2 + 7*s13*s23 + 8*s23^2)) + p2q*p3q^4*s12*
          (7*s12^5 + 7*s12^4*(s13 + 3*s23) + s12^3*(-28*s13^2 - 21*s13*s23 + 
             46*s23^2) - s12^2*(28*s13^3 + 84*s13^2*s23 + 47*s13*s23^2 - 
             49*s23^3) + 8*s23^2*(-2*s13^3 + s13^2*s23 + s13*s23^2 + 
             2*s23^3) + s12*s23*(-21*s13^3 - 17*s13^2*s23 - 3*s13*s23^2 + 
             33*s23^3)) + 2*p1q^5*s23^2*(2*s12^2*(3*s13 + 5*s23)^2 + 
           s23*(s13 + s23)^2*(17*s13 + 16*s23) + s12^3*(9*s13 + 17*s23) + 
           s12*(9*s13^3 + 60*s13^2*s23 + 100*s13*s23^2 + 49*s23^3)) + 
         p2q^4*p3q*s13*(7*s13^5 + 21*s13^4*s23 + 46*s13^3*s23^2 + 
           49*s13^2*s23^3 + 33*s13*s23^4 + 16*s23^5 - 
           s12^3*(28*s13^2 + 21*s13*s23 + 16*s23^2) - 
           s12^2*(28*s13^3 + 84*s13^2*s23 + 17*s13*s23^2 - 8*s23^3) + 
           s12*(7*s13^4 - 21*s13^3*s23 - 47*s13^2*s23^2 - 3*s13*s23^3 + 
             8*s23^4)) - p2q^2*p3q^3*(7*s12^5*(4*s13 + s23) + 
           s12^4*(28*s13^2 + 84*s13*s23 - 11*s23^2) + 8*s13^2*s23^2*
            (-s13^2 + s13*s23 + 2*s23^2) + s12^3*(-42*s13^3 - 14*s13^2*s23 + 
             127*s13*s23^2 + 5*s23^3) + s12*s13*s23*(-21*s13^3 + 
             8*s13^2*s23 - 17*s13*s23^2 + 26*s23^3) + 
           s12^2*(-42*s13^4 - 126*s13^3*s23 - 122*s13^2*s23^2 + 
             49*s13*s23^3 + 23*s23^4)) + p2q^3*p3q^2*
          (s12^4*(42*s13^2 + 21*s13*s23 + 8*s23^2) + 
           2*s12^3*(21*s13^3 + 63*s13^2*s23 - 4*s13*s23^2 - 4*s23^3) - 
           s13^2*s23*(7*s13^3 - 11*s13^2*s23 + 5*s13*s23^2 + 23*s23^3) + 
           s12^2*(-28*s13^4 + 14*s13^3*s23 + 122*s13^2*s23^2 + 17*s13*s23^3 - 
             16*s23^4) - s12*s13*(28*s13^4 + 84*s13^3*s23 + 127*s13^2*s23^2 + 
             49*s13*s23^3 + 26*s23^4)) + p1q^4*s23*(s12 + s13 + s23)*
          (p3q*(s12^3*(4*s13 - 30*s23) + 4*s12^2*(s13^2 + 4*s13*s23 + 3*
                s23^2) + 3*s23^2*(25*s13^2 + 44*s13*s23 + 19*s23^2) + 
             s12*s23*(31*s13^2 + 80*s13*s23 + 99*s23^2)) + 
           p2q*(s12^2*(4*s13^2 + 31*s13*s23 + 75*s23^2) + 
             3*s23*(-10*s13^3 + 4*s13^2*s23 + 33*s13*s23^2 + 19*s23^3) + 
             4*s12*(s13^3 + 4*s13^2*s23 + 20*s13*s23^2 + 33*s23^3))) + 
         p1q*(-(p3q^4*s12*(10*s12^5 + s12^4*(13*s13 + 37*s23) + 
              s12^3*(10*s13^2 + 61*s13*s23 + 113*s23^2) + 8*s23^2*(s13^3 + 
                5*s13^2*s23 + 5*s13*s23^2 + s23^3) + s12*s23*(7*s13^3 + 
                35*s13^2*s23 + 129*s13*s23^2 + 85*s23^3) + s12^2*(7*s13^3 + 
                45*s13^2*s23 + 137*s13*s23^2 + 163*s23^3))) - 
           p2q^4*s13*(s12^3*(7*s13^2 + 7*s13*s23 + 8*s23^2) + 
             5*s12^2*(2*s13^3 + 9*s13^2*s23 + 7*s13*s23^2 + 8*s23^3) + 
             (s13 + s23)^2*(10*s13^3 + 17*s13^2*s23 + 69*s13*s23^2 + 8*
                s23^3) + s12*(13*s13^4 + 61*s13^3*s23 + 137*s13^2*s23^2 + 129*
                s13*s23^3 + 40*s23^4)) + p2q*p3q^3*(7*s12^6 + 
             10*s12^5*(4*s13 + s23) + s12^4*(52*s13^2 + 130*s13*s23 + 27*
                s23^2) + 2*s12^3*(20*s13^3 + 89*s13^2*s23 + 91*s13*s23^2 + 17*
                s23^3) + 8*s23^2*(s13^4 + 3*s13^3*s23 + 8*s13^2*s23^2 + 8*s13*
                s23^3 + 2*s23^4) + 2*s12*s23*(7*s13^4 + 13*s13^3*s23 + 68*
                s13^2*s23^2 + 69*s13*s23^3 + 43*s23^4) + 
             s12^2*(21*s13^4 + 100*s13^3*s23 + 325*s13^2*s23^2 + 190*s13*
                s23^3 + 80*s23^4)) + p2q^3*p3q*(7*s13^6 + 10*s13^5*s23 + 
             27*s13^4*s23^2 + 34*s13^3*s23^3 + 80*s13^2*s23^4 + 
             86*s13*s23^5 + 16*s23^6 + s12^4*(21*s13^2 + 14*s13*s23 + 8*
                s23^2) + 2*s12^3*(20*s13^3 + 50*s13^2*s23 + 13*s13*s23^2 + 12*
                s23^3) + s12^2*(52*s13^4 + 178*s13^3*s23 + 325*s13^2*s23^2 + 
               136*s13*s23^3 + 64*s23^4) + 2*s12*(20*s13^5 + 65*s13^4*s23 + 
               91*s13^3*s23^2 + 95*s13^2*s23^3 + 69*s13*s23^4 + 32*s23^5)) - 
           p2q^2*p3q^2*(7*s12^5*(3*s13 + s23) + s12^4*(60*s13^2 + 65*s13*
                s23 - 9*s23^2) + s12^3*(78*s13^3 + 210*s13^2*s23 + 215*s13*
                s23^2 + 11*s23^3) + s12^2*(60*s13^4 + 210*s13^3*s23 + 138*
                s13^2*s23^2 + 113*s13*s23^3 - 51*s23^4) + 
             s12*(21*s13^5 + 65*s13^4*s23 + 215*s13^3*s23^2 + 113*s13^2*
                s23^3 - 72*s13*s23^4 - 110*s23^5) - s23*(-7*s13^5 + 9*s13^4*
                s23 - 11*s13^3*s23^2 + 51*s13^2*s23^3 + 110*s13*s23^4 + 32*
                s23^5))) + p1q^3*(p3q^2*(2*s12^5*(5*s13 + 3*s23) + 
             s23^3*(s13 + s23)^2*(65*s13 + 41*s23) + s12^4*(20*s13^2 + 60*s13*
                s23 - 34*s23^2) + s12^3*(10*s13^3 + 82*s13^2*s23 + 67*s13*
                s23^2 - 49*s23^3) + s12^2*s23*(28*s13^3 + 118*s13^2*s23 + 85*
                s13*s23^2 + 69*s23^3) + s12*s23^2*(27*s13^3 + 123*s13^2*s23 + 
               215*s13*s23^2 + 119*s23^3)) + p2q*p3q*
            (-(s12^4*(20*s13^2 + 6*s13*s23 + 7*s23^2)) - 
             2*s12^3*(20*s13^3 + 57*s13^2*s23 - 6*s13*s23^2 - 61*s23^3) + 
             s23^2*(-7*s13^4 + 122*s13^3*s23 + 403*s13^2*s23^2 + 388*s13*
                s23^3 + 114*s23^4) + 2*s12*s23*(-3*s13^4 + 6*s13^3*s23 + 179*
                s13^2*s23^2 + 360*s13*s23^3 + 194*s23^4) + 
             s12^2*(-20*s13^4 - 114*s13^3*s23 + 26*s13^2*s23^2 + 358*s13*
                s23^3 + 403*s23^4)) + p2q^2*(s23*(s13 + s23)^2*
              (6*s13^3 - 46*s13^2*s23 + 37*s13*s23^2 + 41*s23^3) + 
             s12^3*(10*s13^3 + 28*s13^2*s23 + 27*s13*s23^2 + 65*s23^3) + 
             s12^2*(20*s13^4 + 82*s13^3*s23 + 118*s13^2*s23^2 + 123*s13*
                s23^3 + 171*s23^4) + s12*(10*s13^5 + 60*s13^4*s23 + 67*s13^3*
                s23^2 + 85*s13^2*s23^3 + 215*s13*s23^4 + 147*s23^5))) + 
         p1q^2*(p3q^3*(-10*s12^6 + 8*s23^3*(s13 + s23)^2*(3*s13 + 2*s23) - 
             2*s12^5*(5*s13 + 19*s23) + s12^4*(3*s13^2 - 26*s13*s23 - 123*
                s23^2) + s12^3*(3*s13^3 + 22*s13^2*s23 - 56*s13*s23^2 - 151*
                s23^3) + s12^2*s23*(17*s13^3 + 60*s13^2*s23 - 32*s13*s23^2 - 
               19*s23^3) + s12*s23^2*(6*s13^3 + 17*s13^2*s23 + 64*s13*s23^2 + 
               53*s23^3)) + p2q*p3q^2*(s12^5*(23*s13 - 11*s23) + 
             s12^4*(23*s13^2 + 98*s13*s23 - 26*s23^2) + 
             s12^3*(-16*s13^3 + 26*s13^2*s23 + 98*s13*s23^2 + 32*s23^3) + 
             s23^2*(6*s13^4 + 83*s13^3*s23 + 269*s13^2*s23^2 + 265*s13*
                s23^3 + 73*s23^4) + s12^2*(-16*s13^4 - 82*s13^3*s23 + 105*
                s13^2*s23^2 + 211*s13*s23^3 + 243*s23^4) + 
             s12*s23*(-6*s13^4 - 54*s13^3*s23 + 160*s13^2*s23^2 + 429*s13*
                s23^3 + 269*s23^4)) + p2q^3*(s12^3*(3*s13^3 + 17*s13^2*s23 + 
               6*s13*s23^2 + 24*s23^3) - (s13 + s23)^2*(10*s13^4 + 18*s13^3*
                s23 + 77*s13^2*s23^2 - 21*s13*s23^3 - 16*s23^4) + 
             s12^2*(3*s13^4 + 22*s13^3*s23 + 60*s13^2*s23^2 + 17*s13*s23^3 + 
               64*s23^4) - 2*s12*(5*s13^5 + 13*s13^4*s23 + 28*s13^3*s23^2 + 
               16*s13^2*s23^3 - 32*s13*s23^4 - 28*s23^5)) + 
           p2q^2*p3q*(-2*s12^4*(8*s13^2 + 3*s13*s23 - 3*s23^2) - 
             s12^3*(16*s13^3 + 82*s13^2*s23 + 54*s13*s23^2 - 83*s23^3) + 
             s12^2*(23*s13^4 + 26*s13^3*s23 + 105*s13^2*s23^2 + 160*s13*
                s23^3 + 269*s23^4) + s23*(-11*s13^5 - 26*s13^4*s23 + 32*s13^3*
                s23^2 + 243*s13^2*s23^3 + 269*s13*s23^4 + 73*s23^5) + 
             s12*(23*s13^5 + 98*s13^4*s23 + 98*s13^3*s23^2 + 211*s13^2*
                s23^3 + 429*s13*s23^4 + 265*s23^5))))/
        (48*p2q*p3q*(p1q + p2q + p3q)*s23^2*(-(p3q^2*s12*(s12 + s23)) - 
          p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
          p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
           (2*s13 + s23))) - (7*(s12 + s13 + s23)*
         (2*p1q^3*(s12 + s13)*s23^2 + (p3q*s12 - p2q*s13)^2*
           (p2q*(s12 + s23) + p3q*(s13 + s23)) + p1q^2*s23*
           (p2q*(-4*s13^2 + s23^2 + s12*(-4*s13 + s23)) + 
            p3q*(-4*s12^2 - 4*s12*s13 + s23*(s13 + s23))) + 
          2*p1q*(p3q^2*s12*(s12 - s23)*(s12 + s13 + s23) + 
            p2q^2*s13*(s13 - s23)*(s12 + s13 + s23) - 
            p2q*p3q*(s13*s23*(s13 + s23) + s12^2*(2*s13 + s23) + 
              s12*(2*s13^2 + s23^2))))*den[-1 + 2*ep])/
        (48*p2q*p3q*(p1q + p2q + p3q)*s23^2))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]] + 
     ((ep^3*s23*(p2q*s13*(s12 + 19*s13 - s23) + p1q*(-18*s12*s13 + s12*s23 - 
            19*s13*s23 + s23^2) - p3q*(s12^2 + 20*s13*s23 + 
            s12*(19*s13 + s23))))/(54*(p1q + p2q + p3q)*s12) + 
       (ep^2*(10*p2q^5*s13^3*(s12 + s23)*(s12 + s13 + s23) - 
          p3q^5*s12^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23) - 
          p1q^3*(p2q + p3q)*s23^2*(s12 + s23)*(s12 + s13 + s23)*
           (10*p2q*(s12 + s23) - p3q*(2*s12 + s13 + s23)) + 
          p2q*p3q^4*s12*(-10*s12^4 + s12^3*(-29*s13 + 129*s23) + 
            s12^2*(38*s13^2 + 46*s13*s23 - 38*s23^2) + 20*s13*s23*
             (s13^2 + 2*s13*s23 - 5*s23^2) + s12*(21*s13^3 + 79*s13^2*s23 - 
              23*s13*s23^2 - 177*s23^3)) + p2q^4*p3q*s13*
           (-2*s12^3*(15*s13 + s23) + s12*s13*(65*s13^2 + 81*s13*s23 + 
              116*s23^2) + s12^2*(-20*s13^2 + 50*s13*s23 + 326*s23^2) + 
            s13*(19*s13^3 + 48*s13^2*s23 + 19*s13*s23^2 - 10*s23^3)) + 
          p2q^3*p3q^2*(2*s12^4*(15*s13 + s23) - 2*s12^3*s23*
             (101*s13 + 161*s23) + s13^2*(19*s13^3 + 19*s13^2*s23 - 
              29*s13*s23^2 - 29*s23^3) - 2*s12*s13*(s13^3 + 45*s13^2*s23 - 
              58*s13*s23^2 + 73*s23^3) - s12^2*(159*s13^3 + 105*s13^2*s23 - 
              280*s13*s23^2 + 324*s23^3)) - p2q^2*p3q^3*
           (10*s12^5 + 19*s13^2*s23*(s13 + s23)^2 - 
            4*s12^4*(5*s13 + 33*s23) + s12^3*(-123*s13^2 + 115*s13*s23 + 
              358*s23^2) + s12*s13*(39*s13^3 + 95*s13^2*s23 - 58*s13*s23^2 + 
              246*s23^3) + s12^2*(54*s13^3 + 3*s13^2*s23 + 49*s13*s23^2 + 
              500*s23^3)) + p1q^2*(10*p2q^3*s13*s23*(s12 + s13 + s23)*
             (2*s12^2 + 5*s12*s23 + 3*s23^2) + p3q^3*s23*(s12 + s23)*
             (-2*s12^3 - 2*s12^2*s13 + 3*s12*s23*(s13 + s23) + 
              s23*(s13 + s23)^2) + p2q*p3q^2*(18*s12^4*(-2*s13 + s23) - 
              2*s12^3*s23*(57*s13 + 56*s23) + s12^2*s23*(34*s13^2 + 
                15*s13*s23 + 39*s23^2) + s23^2*(17*s13^3 + 35*s13^2*s23 + 
                9*s13*s23^2 - 9*s23^3) + 2*s12*s23*(9*s13^3 + 34*s13^2*s23 + 
                50*s13*s23^2 + 80*s23^3)) + p2q^2*p3q*(20*s12^4*s23 + 
              2*s12^3*(18*s13^2 - s13*s23 - 55*s23^2) + 12*s12^2*s23*(
                9*s13^2 + 13*s13*s23 + 3*s23^2) + s23^2*(17*s13^3 + 
                64*s13^2*s23 + 37*s13*s23^2 - 10*s23^3) + s12*s23*(18*s13^3 + 
                135*s13^2*s23 + 193*s13*s23^2 + 156*s23^3))) - 
          p1q*(p3q^4*s12^2*(s12 + s23)*(s12 + s13 + s23)*(s13 + 3*s23) + 
            10*p2q^4*s13^2*(s12 + s13 + s23)*(s12^2 + 4*s12*s23 + 3*s23^2) + 
            p2q*p3q^3*(10*s12^5 + s12^4*(65*s13 - 147*s23) - 
              18*s13*s23^2*(s13 + s23)^2 + s12^3*(-37*s13^2 + 67*s13*s23 + 
                142*s23^2) - s12^2*(20*s13^3 + 113*s13^2*s23 + 2*s13*s23^2 - 
                113*s23^3) - 2*s12*s23*(19*s13^3 + 55*s13^2*s23 + 
                9*s13*s23^2 + 93*s23^3)) + p2q^3*p3q*(-20*s12^4*s13 + 
              s12^3*(-10*s13^2 + 64*s13*s23 + 326*s23^2) + 
              s13*s23*(37*s13^3 + 104*s13^2*s23 + 47*s13*s23^2 - 20*s23^3) + 
              s12*s13*(19*s13^3 + 185*s13^2*s23 + 248*s13*s23^2 + 
                272*s23^3) + s12^2*(101*s13^3 + 71*s13^2*s23 + 46*s13*s23^2 + 
                326*s23^3)) + p2q^2*p3q^2*(10*s12^5 - 10*s12^4*(s13 + 
                15*s23) + s12^3*(-166*s13^2 + 462*s23^2) + 
              s13*s23*(37*s13^3 + 56*s13^2*s23 - 19*s13*s23^2 - 38*s23^3) + 
              s12^2*(17*s13^3 - 255*s13^2*s23 - 50*s13*s23^2 + 436*s23^3) + 
              s12*(19*s13^4 + 71*s13^3*s23 + 14*s13^2*s23^2 + 236*s13*s23^3 - 
                186*s23^4)))))/(108*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(-2*p1q^5*(s12 - s13)*s23^4*(s12 + s23)*(s12 + s13 + s23)*
           (p3q*(s12 - 40*s23) + 5*p2q*(2*s12 + s23)) + 
          p1q^4*s23^3*(s12 + s13 + s23)*(10*p2q^2*(2*s12^4 + 4*s12^3*s13 + 
              s13*s23^2*(-3*s13 + 2*s23) + s12^2*(-2*s13^2 + 13*s13*s23 - 
                5*s23^2) + s12*s23*(-6*s13^2 + 10*s13*s23 - 3*s23^2)) + 
            p3q^2*(s12 + s23)*(6*s12^3 + 490*s12^2*s23 + 80*s13*(s13 - s23)*
               s23 + s12*(-2*s13^2 + 247*s13*s23 + 405*s23^2)) + 
            p2q*p3q*(62*s12^4 + 10*s13*s23^2*(41*s13 + 3*s23) + 
              s12^3*(-32*s13 + 766*s23) + 3*s12*s23*(114*s13^2 + 29*s13*s23 + 
                95*s23^2) + s12^2*(14*s13^2 + 107*s13*s23 + 989*s23^2))) - 
          p1q^3*s23*(p3q^3*s23*(6*s12^6 - 80*s13^2*s23^3*(s13 + s23) + 
              2*s12^5*(6*s13 + 493*s23) + s12^3*s23*(1312*s13^2 + 
                3005*s13*s23 + 311*s23^2) + s12^4*(6*s13^2 + 2051*s13*s23 + 
                1785*s23^2) + s12^2*s23*(247*s13^3 + 1549*s13^2*s23 + 
                721*s13*s23^2 - 819*s23^3) + s12*s23^2*(167*s13^3 + 
                167*s13^2*s23 - 245*s13*s23^2 - 325*s23^3)) + 
            p2q*p3q^2*(-16*s12^6*(81*s13 - 4*s23) + 2*s12^5*(648*s13^2 - 
                1304*s13*s23 + 1817*s23^2) + s12^3*s23^2*(5012*s13^2 + 
                8571*s13*s23 + 2215*s23^2) + 2*s12^4*s23*(662*s13^2 + 
                782*s13*s23 + 2963*s23^2) + 10*s13*s23^3*(34*s13^3 + 
                3*s13^2*s23 - 33*s13*s23^2 - 2*s23^3) + s12*s23^2*(
                294*s13^4 + 1587*s13^3*s23 + 2121*s13^2*s23^2 + 
                1163*s13*s23^3 - 295*s23^4) + 2*s12^2*s23*(18*s13^4 + 
                656*s13^3*s23 + 3814*s13^2*s23^2 + 3435*s13*s23^3 - 
                218*s23^4)) + 10*p2q^3*s23*(s12^5*(4*s13 - 3*s23) + 
              s12^4*(10*s13^2 + 5*s13*s23 - 9*s23^2) + 2*s12*s13*s23^2*(
                12*s13^2 + 12*s13*s23 - 5*s23^2) - 2*s13^2*s23^2*(s13^2 - 
                3*s13*s23 - 4*s23^2) + s12^3*(8*s13^3 + 33*s13^2*s23 - 
                17*s13*s23^2 - 9*s23^3) + s12^2*(2*s13^4 + 25*s13^3*s23 + 
                34*s13^2*s23^2 - 28*s13*s23^3 - 3*s23^4)) + 
            p2q^2*p3q*(40*s12^6*s23 + 4*s12^5*(324*s13^2 + 336*s13*s23 + 
                515*s23^2) + 20*s13*s23^3*(43*s13^3 + 49*s13^2*s23 + 
                5*s13*s23^2 - s23^3) + 2*s12^3*s23*(-626*s13^3 + 
                2384*s13^2*s23 + 4219*s13*s23^2 + 898*s23^3) + 
              s12^4*(-1296*s13^3 + 1418*s13^2*s23 + 3973*s13*s23^2 + 
                3241*s23^3) + 2*s12*s23^2*(309*s13^4 + 1253*s13^3*s23 + 
                1124*s13^2*s23^2 + 555*s13*s23^3 + 15*s23^4) + 
              s12^2*s23*(74*s13^4 + 1441*s13^3*s23 + 7193*s13^2*s23^2 + 
                6931*s13*s23^3 + 605*s23^4))) - (p2q + p3q)*
           (10*p2q^5*s13^2*(s12 + s13)*s23*(s12^3*(3*s13 - 4*s23) + 
              2*s12^2*(s13^2 + s13*s23 - 2*s23^2) - s13^2*(s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(-2*s13^3 + 3*s13*s23^2)) + 
            p3q^5*s12^3*s23*(728*s12^4 + s12^3*(2181*s13 + 2101*s23) + 
              s13*s23*(721*s13^2 + 1042*s13*s23 + 321*s23^2) + 
              s12^2*(2178*s13^2 + 4596*s13*s23 + 2018*s23^2) + 
              s12*(725*s13^3 + 3216*s13^2*s23 + 2736*s13*s23^2 + 
                645*s23^3)) + p2q*p3q^4*s12^2*(2*s12^5*(648*s13 + 1033*s23) + 
              2*s13^2*s23^2*(191*s13^2 + 142*s13*s23 + 31*s23^2) + 
              s12^3*s23*(4509*s13^2 + 11375*s13*s23 + 4576*s23^2) + 
              s12^4*(1296*s13^2 + 6265*s13*s23 + 4735*s23^2) + 
              s12*s13*s23*(-383*s13^3 + 115*s13^2*s23 + 4399*s13*s23^2 + 
                997*s23^3) + s12^2*s23*(-1369*s13^3 + 7669*s13^2*s23 + 
                7395*s13*s23^2 + 1907*s23^3)) + p2q^2*p3q^3*s12*
             (1914*s12^6*s23 + 5*s13^3*s23^2*(33*s13^2 + 98*s13*s23 + 
                65*s23^2) + s12^5*(-3888*s13^2 + 484*s13*s23 + 3454*s23^2) + 
              s12*s13^2*s23*(-177*s13^3 + 2336*s13^2*s23 + 3120*s13*s23^2 + 
                927*s23^3) + s12^2*s13*s23*(1201*s13^3 - 934*s13^2*s23 + 
                7479*s13*s23^2 + 1540*s23^3) + s12^3*s23*(-7323*s13^3 + 
                2660*s13^2*s23 + 7651*s13*s23^2 + 2234*s23^3) + 
              s12^4*(-3888*s13^3 - 6243*s13^2*s23 + 7923*s13*s23^2 + 
                3774*s23^3)) - p2q^4*p3q*s13*(1296*s12^6*s23 + 
              6*s12^5*s23*(567*s13 + 208*s23) + s12^2*s13*s23*(2466*s13^3 + 
                3199*s13^2*s23 + 825*s13*s23^2 - 50*s23^3) + 10*s13^3*s23*(
                10*s13^3 + 11*s13^2*s23 - s13*s23^2 - 2*s23^3) + 
              s12*s13^2*s23*(347*s13^3 + 532*s13^2*s23 + 265*s13*s23^2 + 
                10*s23^3) + 2*s12^4*(648*s13^3 + 3070*s13^2*s23 + 
                3177*s13*s23^2 + 592*s23^3) + s12^3*(1296*s13^4 + 
                4957*s13^3*s23 + 6587*s13^2*s23^2 + 1086*s13*s23^3 - 
                80*s23^4)) + p2q^3*p3q^2*(1296*s12^7*s23 + 2*s12^6*s23*(
                729*s13 + 1292*s23) + 20*s13^4*s23^2*(5*s13^2 + 6*s13*s23 + 
                s23^2) + s12*s13^3*s23*(-65*s13^3 - 13*s13^2*s23 + 
                287*s13*s23^2 + 315*s23^3) + 4*s12^5*(972*s13^3 + 
                885*s13^2*s23 + 2062*s13*s23^2 + 646*s23^3) + 
              s12^2*s13^2*s23*(-1653*s13^3 + 391*s13^2*s23 + 2777*s13*s23^2 + 
                915*s23^3) + s12^3*s13*s23*(3129*s13^3 + 989*s13^2*s23 + 
                6100*s13*s23^2 + 1268*s23^3) + s12^4*(3888*s13^4 + 
                4207*s13^3*s23 + 4853*s13^2*s23^2 + 5426*s13*s23^3 + 
                1296*s23^4))) + p1q*(-10*p2q^5*s13*s23*(-3*s12^5*s13 + 
              s12^4*(-3*s13^2 - 19*s13*s23 + 4*s23^2) + s13^3*s23*(3*s13^2 + 
                11*s13*s23 + 8*s23^2) + s12*s13^2*(3*s13^3 + 19*s13^2*s23 + 
                15*s13*s23^2 - 6*s23^3) + s12^2*s13*(9*s13^3 + 10*s13^2*s23 - 
                16*s13*s23^2 - s23^3) + s12^3*(6*s13^3 - 25*s13^2*s23 - 
                13*s13*s23^2 + 4*s23^3)) + p3q^5*s12^2*s23*(-726*s12^5 - 
              s12^4*(2175*s13 + 961*s23) + 2*s13*s23^2*(119*s13^2 + 
                118*s13*s23 - s23^2) + s12^3*(-2172*s13^2 - 1751*s13*s23 + 
                899*s23^2) + s12*s23*(-477*s13^3 + 1129*s13^2*s23 + 
                2009*s13*s23^2 + 643*s23^3) + s12^2*(-723*s13^3 - 
                1267*s13^2*s23 + 2435*s13*s23^2 + 1777*s23^3)) + 
            p2q*p3q^4*s12*(-36*s12^6*(72*s13 + 77*s23) + 10*s13^2*s23^3*(
                41*s13^2 + 106*s13*s23 + 65*s23^2) - 2*s12^5*(1296*s13^2 + 
                5241*s13*s23 + 1220*s23^2) + s12^4*s23*(-14004*s13^2 - 
                11383*s13*s23 + 1363*s23^2) + 2*s12*s13*s23^2*(-105*s13^3 + 
                2144*s13^2*s23 + 2613*s13*s23^2 + 484*s23^3) + 
              2*s12^3*s23*(-729*s13^3 - 7704*s13^2*s23 + 2547*s13*s23^2 + 
                1435*s23^3) + 3*s12^2*s23*(-116*s13^4 - 17*s13^3*s23 + 
                389*s13^2*s23^2 + 3177*s13*s23^3 + 613*s23^4)) - 
            p2q^4*p3q*(1296*s12^7*s23 + 12*s12^6*s23*(275*s13 + 216*s23) + 
              20*s13^3*s23^2*(25*s13^3 + 31*s13^2*s23 + 3*s13*s23^2 - 
                3*s23^3) + 4*s12^5*(324*s13^3 + 1446*s13^2*s23 + 
                2893*s13*s23^2 + 650*s23^3) + s12^4*s23*(3345*s13^3 + 
                13225*s13^2*s23 + 7952*s13*s23^2 + 1304*s23^3) + 
              s12^2*s13*s23*(429*s13^4 + 9165*s13^3*s23 + 10661*s13^2*s23^2 + 
                2355*s13*s23^3 - 20*s23^4) + 2*s12*s13^2*s23*(84*s13^4 + 
                908*s13^3*s23 + 1164*s13^2*s23^2 + 525*s13*s23^3 + 
                25*s23^4) + 2*s12^3*s13*(-648*s13^4 + 2505*s13^3*s23 + 
                7271*s13^2*s23^2 + 7525*s13*s23^3 + 1146*s23^4)) - 
            p2q^3*p3q^2*(3210*s12^7*s23 - 6*s12^6*(432*s13^2 - 973*s13*s23 - 
                695*s23^2) + 10*s13^3*s23^2*(38*s13^3 + 5*s13^2*s23 - 
                43*s13*s23^2 - 10*s23^3) + 2*s12^5*(1296*s13^3 + 
                5097*s13^2*s23 + 11974*s13*s23^2 + 2161*s23^3) + 
              s12^3*s23*(10746*s13^4 + 13765*s13^3*s23 + 17171*s13^2*s23^2 - 
                4048*s13*s23^3 - 908*s23^4) + s12*s13^2*s23*(138*s13^4 + 
                1721*s13^3*s23 + 2147*s13^2*s23^2 + 269*s13*s23^3 - 
                905*s23^4) + 2*s12^2*s13*s23*(213*s13^4 + 6504*s13^3*s23 + 
                4723*s13^2*s23^2 - 2110*s13*s23^3 - 705*s23^4) + 
              2*s12^4*(2592*s13^4 + 1236*s13^3*s23 + 11802*s13^2*s23^2 + 
                5092*s13*s23^3 + 1227*s23^4)) + p2q^2*p3q^3*
             (-72*s12^7*(18*s13 + 55*s23) + s12^6*(5184*s13^2 - 
                6957*s13*s23 - 3453*s23^2) + 40*s13^3*s23^3*(7*s13^2 + 
                8*s13*s23 + s23^2) + 2*s12^5*(3240*s13^3 - 2274*s13^2*s23 - 
                9447*s13*s23^2 - 1025*s23^3) + 3*s12^4*s23*(3944*s13^3 - 
                5896*s13^2*s23 + 309*s13*s23^2 - 151*s23^3) + 
              s12*s13^2*s23^2*(-257*s13^3 + 297*s13^2*s23 + 1919*s13*s23^2 + 
                1605*s23^3) + s12^3*s23*(-2256*s13^4 + 3829*s13^3*s23 - 
                2169*s13^2*s23^2 + 13840*s13*s23^3 + 2104*s23^4) + 
              s12^2*s13*s23*(-87*s13^4 - 4981*s13^3*s23 + 3913*s13^2*s23^2 + 
                10801*s13*s23^3 + 2360*s23^4))) + 
          p1q^2*(p3q^4*s12*s23*(2*s12^6 + 6*s12^5*(s13 + 189*s23) - 
              5*s13*s23^3*(49*s13^2 + 114*s13*s23 + 65*s23^2) + 
              s12^4*(6*s13^2 + 2833*s13*s23 + 1925*s23^2) + s12^2*s23*(
                244*s13^3 + 861*s13^2*s23 - 1418*s13*s23^2 - 983*s23^3) + 
              s12^3*(2*s13^3 + 1943*s13^2*s23 + 3114*s13*s23^2 + 133*s23^3) - 
              s12*s23^2*(7*s13^3 + 1634*s13^2*s23 + 2030*s13*s23^2 + 
                323*s23^3)) + 10*p2q^4*s13*s23*(2*s12^5*(s13 - 3*s23) + 
              s12^4*(6*s13^2 - 25*s23^2) + 2*s13^2*s23^2*(s13^2 + 7*s13*s23 + 
                6*s23^2) + s12^3*(6*s13^3 + 27*s13^2*s23 - 32*s13*s23^2 - 
                24*s23^3) + 2*s12*s13*s23*(3*s13^3 + 18*s13^2*s23 + 
                14*s13*s23^2 - 6*s23^3) + s12^2*(2*s13^4 + 27*s13^3*s23 + 
                30*s13^2*s23^2 - 34*s13*s23^3 - 5*s23^4)) - 
            p2q*p3q^3*(2*s12^7*(648*s13 - 11*s23) + s12^5*s23*(6534*s13^2 - 
                9565*s13*s23 - 4261*s23^2) + 2*s12^6*(648*s13^2 + 
                23*s13*s23 - 2166*s23^2) + 20*s13^2*s23^4*(13*s13^2 + 
                14*s13*s23 + s23^2) + s12*s13*s23^3*(-359*s13^3 - 
                22*s13^2*s23 + 1387*s13*s23^2 + 1290*s23^3) + 
              s12^4*s23*(26*s13^3 + 917*s13^2*s23 - 16819*s13*s23^2 + 
                1352*s23^3) + s12^2*s23^2*(-334*s13^4 - 4660*s13^3*s23 + 
                465*s13^2*s23^2 + 6043*s13*s23^3 + 878*s23^4) + 
              s12^3*s23*(40*s13^4 - 3544*s13^3*s23 - 5970*s13^2*s23^2 - 
                3727*s13*s23^3 + 2181*s23^4)) + p2q^2*p3q^2*
             (20*s12^7*s23 + 4*s12^6*(648*s13^2 + 625*s13*s23 + 1176*s23^2) + 
              10*s13^2*s23^3*(54*s13^3 + 7*s13^2*s23 - 55*s13*s23^2 - 
                8*s23^3) + s12^4*s23*(9038*s13^3 + 5582*s13^2*s23 + 
                21365*s13*s23^2 + 451*s23^3) + 2*s12^5*(1296*s13^3 - 
                683*s13^2*s23 + 3598*s13*s23^2 + 2122*s23^3) + 
              s12*s13*s23^2*(354*s13^4 + 2571*s13^3*s23 + 3231*s13^2*s23^2 + 
                1049*s13*s23^3 - 895*s23^4) + s12^3*s23*(-38*s13^4 + 
                13799*s13^3*s23 + 18957*s13^2*s23^2 + 13348*s13*s23^3 + 
                366*s23^4) + s12^2*s23*(38*s13^5 + 1415*s13^4*s23 + 
                15208*s13^3*s23^2 + 12128*s13^2*s23^3 - 2864*s13*s23^4 - 
                525*s23^5)) + p2q^3*p3q*(4*s12^6*s23*(-10*s13 + 471*s23) + 
              20*s13^2*s23^3*(46*s13^3 + 55*s13^2*s23 + 6*s13*s23^2 - 
                3*s23^3) + s12^5*(-1296*s13^3 - 2582*s13^2*s23 + 
                764*s13*s23^2 + 2106*s23^3) + 2*s12*s13*s23^2*(261*s13^4 + 
                1592*s13^3*s23 + 1766*s13^2*s23^2 + 810*s13*s23^3 + 
                35*s23^4) + 2*s12^4*(-648*s13^4 + 675*s13^3*s23 + 
                2637*s13^2*s23^2 + 5118*s13*s23^3 + 599*s23^4) + 
              s12^3*s23*(-2530*s13^4 + 7565*s13^3*s23 + 16318*s13^2*s23^2 + 
                10159*s13*s23^3 + 1006*s23^4) + s12^2*s23*(58*s13^5 + 
                1405*s13^4*s23 + 12551*s13^3*s23^2 + 13139*s13^2*s23^3 + 
                2125*s13*s23^4 + 30*s23^5)))))/(216*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^3*s23*(-(p1q^2*s23*(s12 + s23)) - 
          (p2q + p3q)*(s12 + s13)*(p2q*s13 - p3q*(s12 + s23)) + 
          p1q*(p3q*(s12 + s13 - s23)*(s12 + s23) + p2q*(s12^2 + 2*s13*s23 + 
              s12*(s13 + s23))))) + (-2*p1q^5*s23^3*(s12 + s13 + s23)*
          (5*p2q*s23*(6*s12^3 + s12*(3*s13 - s23)*s23 + 5*s13*s23^2 + 
             s12^2*(14*s13 + 5*s23)) + p3q*(648*s12^4 - 200*s13*s23^3 + 
             5*s12*s23^2*(-105*s13 + 8*s23) + s12^2*s23*(-965*s13 + 367*
                s23) + s12^3*(-648*s13 + 975*s23))) - 
         p1q^4*s23^2*(s12 + s13 + s23)*(-10*p2q^2*s23*(6*s12^4 + 
             s13*(19*s13 - 6*s23)*s23^2 + 2*s12^3*(16*s13 + s23) + 
             s12^2*(34*s13^2 + 15*s13*s23 - 7*s23^2) + 
             s12*s23*(14*s13^2 + 18*s13*s23 - 3*s23^2)) + 
           p2q*p3q*(2592*s12^5 - 6*s12^4*(432*s13 - 941*s23) + 
             10*s13*s23^3*(201*s13 + 11*s23) + s12^2*s23*(5730*s13^2 - 6063*
                s13*s23 - 37*s23^2) + s12*s23^2*(4150*s13^2 - 523*s13*s23 + 
               347*s23^2) + 6*s12^3*(432*s13^2 - 1596*s13*s23 + 445*s23^2)) + 
           p3q^2*(1296*s12^5 + 400*s13*(s13 - s23)*s23^3 + 
             18*s12^4*(288*s13 + 323*s23) + s12*s23^2*(1050*s13^2 - 163*s13*
                s23 + 407*s23^2) + s12^2*s23*(1930*s13^2 - 2331*s13*s23 + 901*
                s23^2) + 4*s12^3*(324*s13^2 + 638*s13*s23 + 1253*s23^2))) + 
         p1q^3*s23*(p3q^3*(2592*s12^7 - 400*s13^2*s23^4*(s13 + s23) + 
             18*s12^6*(504*s13 + 251*s23) + 2*s12^5*(5184*s13^2 + 2564*s13*
                s23 - 3249*s23^2) + s12^4*(3888*s13^3 + 1886*s13^2*s23 - 
               18367*s13*s23^2 - 15041*s23^3) - s12*s23^3*(483*s13^3 + 1443*
                s13^2*s23 + 887*s13*s23^2 + 327*s23^3) + s12^2*s23^2*
              (-2647*s13^3 - 701*s13^2*s23 + 2683*s13*s23^2 + 487*s23^3) - 
             s12^3*s23*(-1276*s13^3 + 8036*s13^2*s23 + 10853*s13*s23^2 + 5803*
                s23^3)) - 10*p2q^3*s23*(3*s12^5*(4*s13 - s23) + 
             2*s13^2*s23^2*(13*s13^2 + s13*s23 - 12*s23^2) + 
             s12^4*(50*s13^2 + 7*s13*s23 - 9*s23^2) + 2*s12*s13*s23*
              (12*s13^3 + 54*s13^2*s23 - 17*s23^3) + s12^3*(64*s13^3 + 61*
                s13^2*s23 - 7*s13*s23^2 - 9*s23^3) + s12^2*(26*s13^4 + 75*
                s13^3*s23 + 84*s13^2*s23^2 - 36*s13*s23^3 - 3*s23^4)) + 
           p2q^2*p3q*(5184*s12^7 + 24*s12^6*(324*s13 + 427*s23) + 
             4*s12^5*(972*s13^2 + 4729*s13*s23 + 856*s23^2) + 
             20*s13*s23^3*(205*s13^3 + 227*s13^2*s23 + 19*s13*s23^2 - 3*
                s23^3) - s12^4*(2592*s13^3 + 2714*s13^2*s23 - 16587*s13*
                s23^2 + 4057*s23^3) + 2*s12^3*(648*s13^4 - 4184*s13^3*s23 - 
               9200*s13^2*s23^2 + 3439*s13*s23^3 - 1020*s23^4) + 
             2*s12*s23^2*(3065*s13^4 + 4589*s13^3*s23 + 718*s13^2*s23^2 + 979*
                s13*s23^3 - 15*s23^4) + s12^2*s23*(5750*s13^4 - 2265*s13^3*
                s23 - 13861*s13^2*s23^2 + 3441*s13*s23^3 + 347*s23^4)) + 
           p2q*p3q^2*(7776*s12^7 + 48*s12^6*(297*s13 + 266*s23) + 
             2*s12^5*(7128*s13^2 + 11938*s13*s23 - 3631*s23^2) + 
             2*s12^4*(1944*s13^3 + 9358*s13^2*s23 + 6588*s13*s23^2 - 10593*
                s23^3) + 10*s13*s23^3*(166*s13^3 + 11*s13^2*s23 - 161*s13*
                s23^2 - 6*s23^3) + s12^3*(1296*s13^4 + 3628*s13^3*s23 + 4468*
                s13^2*s23^2 + 14585*s13*s23^3 - 7447*s23^4) + 
             s12*s23^2*(3130*s13^4 + 3385*s13^3*s23 - 637*s13^2*s23^2 + 1901*
                s13*s23^3 - 357*s23^4) + 2*s12^2*s23*(1970*s13^4 - 2036*s13^3*
                s23 - 1524*s13^2*s23^2 + 6491*s13*s23^3 + 564*s23^4))) - 
         (p2q + p3q)*(10*p2q^5*s13^2*(s12 + s13)*s23*(s12^3*(3*s13 + 8*s23) + 
             s13^2*(s13^2 + 7*s13*s23 + 6*s23^2) + s12^2*(4*s13^2 + 30*s13*
                s23 + 8*s23^2) + s12*s13*(2*s13^2 + 26*s13*s23 + 19*s23^2)) + 
           p2q^2*p3q^3*s12*(-6510*s12^6*s23 + 2*s12^5*(3888*s13^2 - 1958*s13*
                s23 - 7165*s23^2) + s13^3*s23^2*(513*s13^2 + 146*s13*s23 - 
               367*s23^2) + s12^4*(7776*s13^3 + 16965*s13^2*s23 - 12593*s13*
                s23^2 - 11738*s23^3) + s12^3*s23*(22677*s13^3 + 10012*s13^2*
                s23 - 10773*s13*s23^2 - 3918*s23^3) + s12^2*s13*s23*
              (1409*s13^3 + 8502*s13^2*s23 + 239*s13*s23^2 - 3424*s23^3) + 
             s12*s13^2*s23*(879*s13^3 - 1852*s13^2*s23 - 2524*s13*s23^2 + 127*
                s23^3)) - p3q^5*s12^3*s23*(1376*s12^4 + 
             s12^3*(5103*s13 + 5023*s23) + 3*s13*s23*(781*s13^2 + 1322*s13*
                s23 + 541*s23^2) + 2*s12^2*(3039*s13^2 + 6358*s13*s23 + 2959*
                s23^2) + s12*(2351*s13^3 + 10036*s13^2*s23 + 9236*s13*s23^2 + 
               2271*s23^3)) - p2q*p3q^4*s12^2*(s12^5*(2592*s13 + 6086*s23) + 
             2*s13^2*s23^2*(223*s13^2 - 234*s13*s23 - 297*s23^2) + 
             s12^3*s23*(13203*s13^2 + 32297*s13*s23 + 15864*s23^2) + 
             s12^4*(2592*s13^2 + 18091*s13*s23 + 16409*s23^2) + 
             s12*s13*s23*(-1985*s13^3 - 1751*s13^2*s23 + 6053*s13*s23^2 + 
               4299*s23^3) + s12^2*s23*(-3379*s13^3 + 16283*s13^2*s23 + 21089*
                s13*s23^2 + 5541*s23^3)) + p2q^4*p3q*s13*(2592*s12^6*s23 + 
             2*s12^5*s23*(1899*s13 + 1252*s23) + s12^2*s13*s23*
              (1854*s13^3 + 2401*s13^2*s23 - 233*s13*s23^2 - 350*s23^3) + 
             s12*s13^2*s23*(497*s13^3 + 624*s13^2*s23 + 227*s13*s23^2 - 250*
                s23^3) + 10*s13^3*s23*(46*s13^3 + 51*s13^2*s23 - s13*s23^2 - 
               6*s23^3) + 2*s12^4*(1296*s13^3 + 2254*s13^2*s23 + 2319*s13*
                s23^2 + 532*s23^3) + s12^3*(2592*s13^4 + 2527*s13^3*s23 + 
               1829*s13^2*s23^2 + 594*s13*s23^3 - 160*s23^4)) - 
           p2q^3*p3q^2*(2592*s12^7*s23 + 20*s13^4*s23^2*(23*s13^2 + 26*s13*
                s23 + 3*s23^2) + s12^6*(-2682*s13*s23 + 5176*s23^2) + 
             8*s12^5*(972*s13^3 - 678*s13^2*s23 + 132*s13*s23^2 + 485*
                s23^3) + s12*s13^3*s23*(973*s13^3 + 1173*s13^2*s23 + 417*s13*
                s23^2 + 617*s23^3) + s12^2*s13^2*s23*(-783*s13^3 + 1365*s13^2*
                s23 + 3855*s13*s23^2 + 817*s23^3) + s12^3*s13*s23*
              (6255*s13^3 + 1487*s13^2*s23 + 148*s13*s23^2 + 1556*s23^3) + 
             s12^4*(7776*s13^4 + 85*s13^3*s23 - 5877*s13^2*s23^2 + 2662*s13*
                s23^3 + 1296*s23^4))) + 
         p1q*(p3q^5*s12^2*s23*(4622*s12^5 + 3*s12^4*(5379*s13 + 4865*s23) - 
             2*s13*s23^2*(607*s13^2 + 934*s13*s23 + 327*s23^2) + 
             s12^3*(18408*s13^2 + 33541*s13*s23 + 12399*s23^2) + 
             s12*s23*(5647*s13^3 + 4357*s13^2*s23 - 3655*s13*s23^2 - 2925*
                s23^3) + s12^2*(6893*s13^3 + 24593*s13^2*s23 + 14403*s13*
                s23^2 - 499*s23^3)) + 10*p2q^5*s13*s23*(3*s12^5*s13 + 
             s12^4*(s13^2 + 7*s13*s23 + 8*s23^2) + s13^3*s23*(-s13^2 + 23*s13*
                s23 + 24*s23^2) + s12^3*(-12*s13^3 - 5*s13^2*s23 + 69*s13*
                s23^2 + 8*s23^3) + s12^2*s13*(-15*s13^3 - 32*s13^2*s23 + 128*
                s13*s23^2 + 57*s23^3) + s12*s13^2*(-5*s13^3 - 21*s13^2*s23 + 
               87*s13*s23^2 + 78*s23^3)) + p2q^2*p3q^3*
            (16*s12^7*(162*s13 + 1763*s23) - 120*s13^3*s23^3*(11*s13^2 + 12*
                s13*s23 + s23^2) + s12^6*(-10368*s13^2 + 33987*s13*s23 + 
               63955*s23^2) - s12*s13^2*s23^2*(2269*s13^3 + 2443*s13^2*s23 + 
               1229*s13*s23^2 + 2255*s23^3) + s12^4*s23*(-40888*s13^3 + 11572*
                s13^2*s23 + 51307*s13*s23^2 + 7283*s23^3) + 
             s12^5*(-12960*s13^3 - 8244*s13^2*s23 + 74178*s13*s23^2 + 47722*
                s23^3) + s12^3*s23*(1800*s13^4 - 8527*s13^3*s23 + 5899*s13^2*
                s23^2 + 9156*s13*s23^3 - 4692*s23^4) + s12^2*s13*s23*
              (-2439*s13^4 + 9023*s13^3*s23 + 5457*s13^2*s23^2 - 10843*s13*
                s23^3 - 2048*s23^4)) + p2q^3*p3q^2*(14286*s12^7*s23 + 
             s12^6*(-5184*s13^2 + 3282*s13*s23 + 28534*s23^2) + 
             10*s13^3*s23^2*(178*s13^3 + 21*s13^2*s23 - 187*s13*s23^2 - 30*
                s23^3) + 2*s12^5*(2592*s13^3 - 4731*s13^2*s23 + 12524*s13*
                s23^2 + 9687*s23^3) + s12*s13^2*s23*(1030*s13^4 + 19*s13^3*
                s23 - 1023*s13^2*s23^2 + 1027*s13*s23^3 - 2011*s23^4) + 
             s12^3*s23*(16458*s13^4 + 10939*s13^3*s23 + 5401*s13^2*s23^2 + 
               8616*s13*s23^3 - 1356*s23^4) - 2*s12^2*s13*s23*
              (2685*s13^4 - 3526*s13^3*s23 - 7859*s13^2*s23^2 + 2264*s13*
                s23^3 + 767*s23^4) + 2*s12^4*(5184*s13^4 - 3352*s13^3*s23 + 
               832*s13^2*s23^2 + 13314*s13*s23^3 + 1885*s23^4)) + 
           p2q*p3q^4*s12*(16*s12^6*(324*s13 + 1321*s23) - 2*s13^2*s23^3*
              (67*s13^2 + 454*s13*s23 + 387*s23^2) + 6*s12^5*
              (864*s13^2 + 8877*s13*s23 + 9176*s23^2) + s12^4*s23*
              (42528*s13^2 + 97069*s13*s23 + 44355*s23^2) + 
             2*s12*s13*s23^2*(1481*s13^3 - 1686*s13^2*s23 - 3781*s13*s23^2 - 
               774*s23^3) + s12^2*s23*(-2892*s13^4 + 2641*s13^3*s23 + 14031*
                s13^2*s23^2 + 1211*s13*s23^3 - 6261*s23^4) + 
             s12^3*(-2858*s13^3*s23 + 54796*s13^2*s23^2 + 51726*s13*s23^3 + 
               4174*s23^4)) + p2q^4*p3q*(2592*s12^7*s23 + 12*s12^6*s23*
              (-113*s13 + 432*s23) + 20*s13^3*s23^2*(111*s13^3 + 133*s13^2*
                s23 + 13*s13*s23^2 - 9*s23^3) + 4*s12^5*(648*s13^3 - 99*s13^2*
                s23 + 1273*s13*s23^2 + 974*s23^3) + s12^4*s23*
              (1115*s13^3 + 1591*s13^2*s23 + 6784*s13*s23^2 + 1304*s23^3) + 
             s12^2*s13*s23*(-3081*s13^4 + 1571*s13^3*s23 + 10103*s13^2*
                s23^2 + 1461*s13*s23^3 - 380*s23^4) + 2*s12*s13^2*s23*
              (490*s13^4 + 1534*s13^3*s23 + 1618*s13^2*s23^2 + 1109*s13*
                s23^3 - 265*s23^4) + s12^3*(-2592*s13^5 + 3870*s13^4*s23 + 
               7446*s13^3*s23^2 + 4178*s13^2*s23^3 + 2588*s13*s23^4))) + 
         p1q^2*(p3q^4*s12*s23*(5838*s12^6 + 2*s12^5*(10053*s13 + 7693*s23) + 
             3*s13*s23^3*(189*s13^2 + 298*s13*s23 + 109*s23^2) + 
             s12^4*(22698*s13^2 + 32433*s13*s23 + 5797*s23^2) + 
             s12^3*(8430*s13^3 + 22923*s13^2*s23 + 350*s13*s23^2 - 10231*
                s23^3) + s12*s23^2*(-1931*s13^3 + 10*s13^2*s23 + 2682*s13*
                s23^2 + 981*s23^3) - s12^2*s23*(-5876*s13^3 + 571*s13^2*s23 + 
               9622*s13*s23^2 + 5499*s23^3)) + 10*p2q^4*s13*s23*
            (6*s12^5*(s13 - s23) + 2*s13^2*s23^2*(7*s13^2 - 11*s13*s23 - 18*
                s23^2) + s12^4*(18*s13^2 - 2*s13*s23 - 13*s23^2) + 
             2*s12*s13*s23*(9*s13^3 + 44*s13^2*s23 - 32*s13*s23^2 - 42*
                s23^3) + s12^3*(18*s13^3 + 35*s13^2*s23 + 10*s13*s23^2 - 40*
                s23^3) + s12^2*(6*s13^4 + 49*s13^3*s23 + 100*s13^2*s23^2 - 98*
                s13*s23^3 - 33*s23^4)) + p2q*p3q^3*
            (6*s12^7*(432*s13 + 3575*s23) + 60*s13^2*s23^4*(21*s13^2 + 22*s13*
                s23 + s23^2) + 6*s12^6*(432*s13^2 + 7279*s13*s23 + 8164*
                s23^2) + s12^5*s23*(34578*s13^2 + 74389*s13*s23 + 23549*
                s23^2) + s12^4*s23*(-1842*s13^3 + 41027*s13^2*s23 + 27079*s13*
                s23^2 - 16568*s23^3) + s12*s13*s23^3*(1779*s13^3 + 3146*s13^2*
                s23 + 1685*s13*s23^2 + 1518*s23^3) + s12^3*s23*
              (-1236*s13^4 + 2516*s13^3*s23 + 1958*s13^2*s23^2 - 3465*s13*
                s23^3 - 11185*s23^4) + s12^2*s23^2*(5326*s13^4 - 5780*s13^3*
                s23 - 10477*s13^2*s23^2 + 4257*s13*s23^3 + 1398*s23^4)) + 
           p2q^3*p3q*(5184*s12^7*s23 + 12*s12^6*s23*(-10*s13 + 751*s23) - 
             20*s13^2*s23^3*(212*s13^3 + 245*s13^2*s23 + 24*s13*s23^2 - 9*
                s23^3) + s12^5*(2592*s13^3 - 3606*s13^2*s23 + 5460*s13*
                s23^2 + 3746*s23^3) + s12^3*s23*(8430*s13^4 + 7077*s13^3*
                s23 - 8294*s13^2*s23^2 + 1111*s13*s23^3 - 1274*s23^4) + 
             2*s12^4*(1296*s13^4 - 441*s13^3*s23 - 3557*s13^2*s23^2 + 3722*
                s13*s23^3 - 693*s23^4) - 2*s12*s13*s23^2*(2005*s13^4 + 3726*
                s13^3*s23 + 1852*s13^2*s23^2 + 1676*s13*s23^3 - 155*s23^4) + 
             s12^2*s23*(-1950*s13^5 + 6917*s13^4*s23 + 8395*s13^3*s23^2 - 
               10273*s13^2*s23^3 - 1771*s13*s23^4 + 30*s23^5)) + 
           p2q^2*p3q^2*(20796*s12^7*s23 - 8*s12^6*(648*s13^2 - 2283*s13*s23 - 
               5432*s23^2) - 30*s13^2*s23^3*(86*s13^3 + 9*s13^2*s23 - 85*s13*
                s23^2 - 8*s23^3) - s12^4*s23*(26886*s13^3 + 6990*s13^2*s23 - 
               31369*s13*s23^2 + 6337*s23^3) + s12^5*(-5184*s13^3 - 7338*
                s13^2*s23 + 44128*s13*s23^2 + 23460*s23^3) + 
             s12^3*s23*(1830*s13^4 - 12941*s13^3*s23 - 21219*s13^2*s23^2 + 
               5148*s13*s23^3 - 6690*s23^4) + s12*s13*s23^2*(-3110*s13^4 - 
               2593*s13^3*s23 + 955*s13^2*s23^2 - 2711*s13*s23^3 + 1501*
                s23^4) + s12^2*s23*(-2010*s13^5 + 10331*s13^4*s23 - 2160*
                s13^3*s23^2 - 25396*s13^2*s23^3 - 208*s13*s23^4 + 447*
                s23^5))))/(432*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*
         s23*(p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       ((s12 + s13 + s23)*(2*p1q^3*s23^2*(5*p2q*(6*s12^2 + 6*s12*s13 - 
              s12*s23 - 3*s13*s23) + p3q*(327*s12^2 + 327*s12*s13 + 
              40*s12*s23 + 120*s13*s23)) + (p3q*s12 - p2q*s13)^2*
           (p3q^2*s12*(80*s12 + 407*s13 + 327*s23) + 10*p2q^2*
             (3*s12^2 + s13*(s13 - 2*s23) + s12*(s13 + 3*s23)) + 
            p2q*p3q*(-394*s12^2 - 20*s13*(13*s13 + s23) + s12*(831*s13 + 
                357*s23))) + p1q^2*s23*(-(p3q^2*s12*(1308*s12^2 + 1308*s12*
                s13 + 80*s12*s23 + 73*s13*s23 - 327*s23^2)) - 
            p2q*p3q*(120*s12^3 + 20*s13*s23*(37*s13 + s23) + 
              34*s12^2*(42*s13 + 11*s23) + s12*(1308*s13^2 - 731*s13*s23 - 
                357*s23^2)) - 10*p2q^2*(3*s12^2*(4*s13 - s23) + 
              s13*s23*(-7*s13 + 2*s23) + 3*s12*(4*s13^2 - s13*s23 - 
                s23^2))) + 2*p1q*(p3q^3*s12^2*(327*s12^2 + 327*s12*s13 - 
              40*s12*s23 - 287*s13*s23 - 327*s23^2) + p2q^2*p3q*
             (-30*s12^3*(2*s13 + s23) + 20*s13^2*s23*(19*s13 + s23) + 
              s12*s13*(327*s13^2 - 771*s13*s23 - 337*s23^2) + 
              s12^2*(267*s13^2 + 394*s13*s23 - 30*s23^2)) + 
            5*p2q^3*s13*(6*s12^2*(s13 - s23) + s13*s23*(-5*s13 + 4*s23) + 
              s12*(6*s13^2 - 3*s13*s23 - 6*s23^2)) + p2q*p3q^2*s12*
             (30*s12^3 - s13*s23*(387*s13 + 307*s23) + s12^2*(-624*s13 + 
                389*s23) - s12*(654*s13^2 + 1006*s13*s23 + 357*s23^2))))*
         den[-1 + 2*ep])/(432*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]] + 
     (-1/54*(ep^2*p1q*(s12 + s13 + s23)*(p3q^2*s12*(10*s12 + s13) + 
           (p1q + p2q)*(9*s13 + 10*s23)*(-(p2q*s13) + p1q*s23) - 
           p3q*(p2q*s13*(s13 + 2*s23) + p2q*s12*(s13 + 10*s23) + 
             p1q*(9*s12*s13 + 20*s12*s23 + s13*s23))))/((p1q + p2q + p3q)*s13*
          (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*p1q*(s12 + s13 + s23)*(p2q^5*s13*(17*s12*s13 + 8*s13^2 + 
            16*s12*s23 + 14*s13*s23 + 6*s23^2) + 
          p2q^4*(p3q*s12^2*(-7*s13 + 20*s23) + p1q*s12*(17*s13^2 - 
              5*s13*s23 - 20*s23^2) + 2*p3q*s13*(13*s13^2 + 20*s13*s23 + 
              6*s23^2) + p3q*s12*(37*s13^2 + 56*s13*s23 + 10*s23^2) + 
            2*p1q*(4*s13^3 + s13^2*s23 - 8*s13*s23^2 - 5*s23^3)) - 
          p2q*p3q^2*(p3q^2*s12*(10*s12^2 + 8*s12*s13 + 16*s13^2 - 
              10*s12*s23 + 7*s13*s23 - 10*s23^2) + 2*p1q^2*s23*
             (6*s12*s13 + 15*s13^2 + 10*s12*s23 + 26*s13*s23 + 10*s23^2) + 
            p1q*p3q*(-17*s13^3 + s12^2*(8*s13 - 30*s23) - 6*s13^2*s23 + 
              23*s13*s23^2 + 10*s23^3 - 10*s12*s23*(s13 + s23))) - 
          p3q^3*(p3q^2*s12^2*(10*s12 + s13) + p1q^2*s23*(30*s12*s13 + 
              21*s13^2 + 20*s12*s23 + 31*s13*s23 + 10*s23^2) - 
            p1q*p3q*s12*(s13^2 + 12*s13*s23 + 10*s23^2 + 10*s12*(s13 + 
                3*s23))) + p2q^3*(-(p1q^2*s23*(21*s12*s13 + 12*s13^2 + 20*s12*
                s23 + 22*s13*s23 + 10*s23^2)) + p1q*p3q*(26*s13^3 + 
              10*s13^2*s23 - 40*s13*s23^2 - 20*s23^3 + s12^2*(s13 + 30*s23) + 
              s12*(36*s13^2 + 43*s13*s23 - 10*s23^2)) + 
            p3q^2*(-10*s12^3 - 5*s12^2*(7*s13 - 4*s23) + 2*s13*(13*s13^2 + 
                21*s13*s23 + 6*s23^2) + 2*s12*(5*s13^2 + 29*s13*s23 + 
                10*s23^2))) + p2q^2*p3q*(-2*p1q^2*s23*(6*s12*s13 + 15*s13^2 + 
              10*s12*s23 + 26*s13*s23 + 10*s23^2) + 2*p1q*p3q*
             (13*s13^3 + 7*s13^2*s23 - 19*s13*s23^2 - 10*s23^3 + 
              s12^2*(-4*s13 + 15*s23) + s12*(9*s13^2 + 32*s13*s23 + 
                5*s23^2)) + p3q^2*(-10*s12^3 + s12^2*(-26*s13 + 10*s23) + 
              s13*(17*s13^2 + 25*s13*s23 + 6*s23^2) + s12*(-8*s13^2 + 
                20*s13*s23 + 20*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (p1q*(s12 + s13 + s23)*(p3q^5*s12^2*(10*s12 + s13) + 
          2*p2q*p3q^4*s12*(15*s12^2 + 5*s12*s13 + 8*s13^2 + 4*s13*s23 - 
            5*s23^2) - p2q^5*s13*(17*s12*s13 + 8*s13^2 + 16*s12*s23 + 
            14*s13*s23 + 6*s23^2) + p2q^2*p3q^3*(30*s12^3 + 
            s12^2*(6*s13 - 20*s23) + s12*(22*s13^2 - 4*s13*s23 - 30*s23^2) - 
            s13*(17*s13^2 + 26*s13*s23 + 8*s23^2)) + 2*p1q^4*s23*
           (p2q*(21*s12*s13 + 12*s13^2 + 20*s12*s23 + 22*s13*s23 + 
              10*s23^2) + p3q*(30*s12*s13 + 21*s13^2 + 20*s12*s23 + 
              31*s13*s23 + 10*s23^2)) + p2q^3*p3q^2*(10*s12^3 + 
            s12^2*(13*s13 - 40*s23) + s12*(6*s13^2 - 23*s13*s23 - 30*s23^2) - 
            2*s13*(21*s13^2 + 34*s13*s23 + 12*s23^2)) + 
          p2q^4*p3q*(s12^2*(7*s13 - 20*s23) - s12*(35*s13^2 + 36*s13*s23 + 
              10*s23^2) - s13*(42*s13^2 + 65*s13*s23 + 22*s23^2)) - 
          p1q*(p3q^4*s12*(-20*s12^2 + 8*s12*s13 + s13^2 + 30*s12*s23 + 
              12*s13*s23 + 10*s23^2) + p2q^4*(24*s13^3 + 30*s13^2*s23 - 
              4*s13*s23^2 - 10*s23^3 + s12*(51*s13^2 + 27*s13*s23 - 
                20*s23^2)) + p2q^3*p3q*(110*s13^3 + 111*s13^2*s23 - 
              31*s13*s23^2 - 30*s23^3 + s12^2*(-13*s13 + 70*s23) + 
              s12*(88*s13^2 + 21*s13*s23 - 10*s23^2)) + p2q^2*p3q^2*
             (-20*s12^3 + 76*s13^3 + 150*s12^2*s23 + 69*s13^2*s23 - 
              40*s13*s23^2 - 30*s23^3 + s12*(-12*s13^2 + 9*s13*s23 + 
                50*s23^2)) + p2q*p3q^3*(-40*s12^3 + 17*s13^3 + 6*s13^2*s23 - 
              22*s13*s23^2 - 10*s23^3 + 10*s12^2*(3*s13 + 11*s23) + 
              s12*(-12*s13^2 + 27*s13*s23 + 50*s23^2))) + 
          2*p1q^3*(p3q^2*(-10*s12^2*(s13 + 3*s23) + s12*(-s13^2 + 
                18*s13*s23 + 10*s23^2) + s23*(21*s13^2 + 31*s13*s23 + 
                10*s23^2)) + p2q^2*(-8*s13^3 + 10*s13^2*s23 + 38*s13*s23^2 + 
              20*s23^3 + s12*(-17*s13^2 + 26*s13*s23 + 40*s23^2)) + 
            p2q*p3q*(-17*s13^3 + 40*s13^2*s23 + 87*s13*s23^2 + 30*s23^3 - 
              s12^2*(s13 + 30*s23) + s12*(-18*s13^2 + 71*s13*s23 + 
                50*s23^2))) + p1q^2*(-(p2q^3*(32*s13^3 + 20*s13^2*s23 - 42*
                s13*s23^2 - 30*s23^3 + s12*(68*s13^2 + s13*s23 - 
                 60*s23^2))) + p2q*p3q^2*(20*s12^3 - 34*s13^3 + 
              42*s13^2*s23 + 127*s13*s23^2 + 50*s23^3 - 2*s12^2*(3*s13 + 
                80*s23) + 4*s12*(3*s13^2 + 19*s13*s23 + 5*s23^2)) + 
            p3q^3*(20*s12^3 - 2*s12*s13*(s13 - 3*s23) - 6*s12^2*(3*s13 + 
                10*s23) + s23*(21*s13^2 + 31*s13*s23 + 10*s23^2)) + 
            p2q^2*p3q*(-102*s13^3 + 4*s12^2*(3*s13 - 25*s23) - 8*s13^2*s23 + 
              165*s13*s23^2 + 70*s23^3 + s12*(-90*s13^2 + 96*s13*s23 + 
                80*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s13*
         s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(p3q^2*s12*(s12 + s13) + 
          (p1q + p2q)*s23*(-(p2q*s13) + p1q*s23) - 
          p3q*(p1q*(2*s12 + s13)*s23 + p2q*s12*(s13 + s23) + 
            p2q*s13*(s13 + 2*s23))))/(6*(p1q + p2q + p3q)*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*(s12 + s13 + s23)*(-(p3q^4*s12^2) + p2q*p3q^3*s12*s13 + 
          p2q^4*s13*(s12 + 2*(s13 + s23)) - p2q^2*p3q^2*(s12^2 - 2*s13*s23 + 
            s12*(s13 + s23)) + p2q^3*p3q*(-s12^2 - s12*s13 + 
            s13*(s13 + 3*s23)) + p1q^2*(p2q*p3q*s23*(3*s13 + s23) + 
            p2q^2*(4*s12*s13 + 4*s13^2 + 3*s12*s23 + 6*s13*s23 + 2*s23^2) + 
            p3q^2*(4*s12*s13 + 4*s13^2 + 3*s12*s23 + 6*s13*s23 + 2*s23^2)) + 
          p1q*(-(p3q^3*s12*(3*s12 + 2*s13 + s23)) + 
            p2q^3*(5*s12*s13 + 6*s13^2 + 3*s12*s23 + 8*s13*s23 + 2*s23^2) + 
            p2q^2*p3q*(-3*s12^2 + s13^2 + 6*s13*s23 + s23^2 - 
              s12*(2*s13 + s23)) + p2q*p3q^2*(s12*(2*s13 + s23) + 
              2*(s13^2 + 3*s13*s23 + s23^2)))))/(6*p3q*(p1q + p2q + p3q)*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (p3q^4*s12^2*(s12 + s13 + s23) + p2q*p3q^3*s12*(s12 - 2*s13)*
          (s12 + s13 + s23) + p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23) + 
         p2q^3*p3q*(s12^2 + s12*s13 + s13^2)*(s12 + s13 + s23) - 
         p2q^4*s13*(s12^2 + 3*s12*(s13 + s23) + 2*(s13 + s23)^2) - 
         2*p1q^4*(2*(s13 + s23)^2*(2*s13 + s23) + s12^2*(4*s13 + 3*s23) + 
           s12*(8*s13^2 + 13*s13*s23 + 5*s23^2)) - p1q^2*(s12 + s13 + s23)*
          (p3q^2*(-8*s12^2 + 4*s13^2 + s12*s23 + 6*s13*s23 + 2*s23^2) + 
           p2q^2*(16*s12*s13 + 20*s13^2 + 9*s12*s23 + 26*s13*s23 + 6*s23^2) + 
           p2q*p3q*(-8*s12^2 + 12*s13^2 + 21*s13*s23 + 8*s23^2 + 
             8*s12*(s13 + s23))) + 2*p1q^3*(s12 + s13 + s23)*
          (-(p2q*(9*s12*s13 + 10*s13^2 + 6*s12*s23 + 14*s13*s23 + 4*s23^2)) + 
           p3q*(3*s12^2 - 2*s12*(s13 + s23) - 2*(2*s13^2 + 3*s13*s23 + s23^
                2))) - p1q*(s12 + s13 + s23)*
          (-(p3q^3*s12*(5*s12 + 2*s13 + s23)) + p2q*p3q^2*
            (-8*s12^2 + 2*s12*s13 + 2*s13^2 - s12*s23 + 5*s13*s23 + 
             2*s23^2) + p2q^2*p3q*(-5*s12^2 + 2*s12*s13 + 3*s13^2 + 
             3*s12*s23 + 9*s13*s23 + 4*s23^2) + p2q^3*(s12*(7*s13 + 3*s23) + 
             2*(5*s13^2 + 6*s13*s23 + s23^2))))/(6*p3q*(p1q + p2q + p3q)*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k]] + 
     ((ep^2*p1q*(s12 + s13 + s23)*(-(p2q^2*s13*(s12 + 10*s13)) + 
          p3q^2*s12*(9*s12 + 10*s23) - p1q^2*s23*(9*s12 + 10*s23) + 
          p1q*p3q*(9*s12^2 + s12*s23 - 10*s23^2) + 
          p1q*p2q*(20*s13*s23 + s12*(9*s13 + s23)) + 
          p2q*p3q*(s12^2 + 10*s13*s23 + s12*(s13 + 2*s23))))/
        (54*(p1q + p2q + p3q)*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep*p1q*(s12 + s13 + s23)*
         (-(p2q^5*s13^2*(s12 + 10*s13)) + p3q^5*s12*(8*s12^2 + 17*s12*s13 + 
            14*s12*s23 + 16*s13*s23 + 6*s23^2) - p2q^4*p3q*s13*
           (16*s12^2 + s12*(8*s13 + 7*s23) + 10*(s13^2 - s13*s23 - s23^2)) + 
          p2q^3*p3q^2*(17*s12^3 + s12^2*(-8*s13 + 25*s23) + 
            10*s13*(-s13^2 + s13*s23 + 2*s23^2) + 
            s12*(-26*s13^2 + 20*s13*s23 + 6*s23^2)) + 
          p2q*p3q^4*(26*s12^3 + 10*s13*s23*(2*s13 + s23) + 
            s12^2*(37*s13 + 40*s23) + s12*(-7*s13^2 + 56*s13*s23 + 
              12*s23^2)) + p2q^2*p3q^3*(26*s12^3 + 2*s12^2*(5*s13 + 21*s23) - 
            10*s13*(s13^2 - 2*s13*s23 - 2*s23^2) + 
            s12*(-35*s13^2 + 58*s13*s23 + 12*s23^2)) - 
          p1q^2*s23*(p3q^3*(12*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(21*s13 + 22*s23)) + 2*p2q^2*p3q*(15*s12^2 + 
              10*s23*(s13 + s23) + s12*(6*s13 + 26*s23)) + 
            2*p2q*p3q^2*(15*s12^2 + 10*s23*(s13 + s23) + s12*(6*s13 + 
                26*s23)) + p2q^3*(21*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(30*s13 + 31*s23))) + 
          p1q*(p2q^4*s13*(s12^2 + 10*s23*(3*s13 + s23) + 2*s12*(5*s13 + 
                6*s23)) + p3q^4*(8*s12^3 - 10*s23^2*(2*s13 + s23) + 
              s12^2*(17*s13 + 2*s23) - s12*s23*(5*s13 + 16*s23)) + 
            2*p2q^2*p3q^2*(13*s12^3 + s12^2*(9*s13 + 7*s23) + 
              s12*(-4*s13^2 + 32*s13*s23 - 19*s23^2) + 5*s23*(3*s13^2 + 
                s13*s23 - 2*s23^2)) + p2q^3*p3q*(17*s12^3 + 6*s12^2*s23 + 
              s12*(-8*s13^2 + 10*s13*s23 - 23*s23^2) + 10*s23*(3*s13^2 + 
                s13*s23 - s23^2)) + p2q*p3q^3*(26*s12^3 + 2*s12^2*(18*s13 + 
                5*s23) + s12*(s13^2 + 43*s13*s23 - 40*s23^2) - 
              10*s23*(-3*s13^2 + s13*s23 + 2*s23^2)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p1q*(s12 + s13 + s23)*(p2q^5*s13^2*(s12 + 10*s13) + 
          2*p2q^4*p3q*s13*(8*s12^2 + 5*s12*s13 + 15*s13^2 + 4*s12*s23 - 
            5*s23^2) - p3q^5*s12*(8*s12^2 + 17*s12*s13 + 14*s12*s23 + 
            16*s13*s23 + 6*s23^2) - p2q^3*p3q^2*(17*s12^3 + 
            s12^2*(-22*s13 + 26*s23) + 10*s13*(-3*s13^2 + 2*s13*s23 + 
              3*s23^2) + s12*(-6*s13^2 + 4*s13*s23 + 8*s23^2)) - 
          p2q*p3q^4*(42*s12^3 + 10*s13*s23*(2*s13 + s23) + 
            5*s12^2*(7*s13 + 13*s23) + s12*(-7*s13^2 + 36*s13*s23 + 
              22*s23^2)) - p2q^2*p3q^3*(42*s12^3 + s12^2*(-6*s13 + 68*s23) - 
            10*s13*(s13^2 - 4*s13*s23 - 3*s23^2) + 
            s12*(-13*s13^2 + 23*s13*s23 + 24*s23^2)) + 
          2*p1q^4*s23*(p3q*(12*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(21*s13 + 22*s23)) + p2q*(21*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(30*s13 + 31*s23))) + 2*p1q^3*
           (p3q^2*(-8*s12^3 + 20*s23^2*(2*s13 + s23) + s12^2*(-17*s13 + 
                10*s23) + 2*s12*s23*(13*s13 + 19*s23)) + 
            p2q^2*(-(s12^2*(s13 - 21*s23)) + 10*s23*(-3*s13^2 + s13*s23 + 
                s23^2) + s12*(-10*s13^2 + 18*s13*s23 + 31*s23^2)) + 
            p2q*p3q*(-17*s12^3 + s12^2*(-18*s13 + 40*s23) + 
              10*s23*(-3*s13^2 + 5*s13*s23 + 3*s23^2) + s12*(-s13^2 + 
                71*s13*s23 + 87*s23^2))) - 
          p1q*(p3q^4*(24*s12^3 + s12*(27*s13 - 4*s23)*s23 - 10*s23^2*(2*s13 + 
                s23) + s12^2*(51*s13 + 30*s23)) + p2q^4*s13*
             (s12^2 + 4*s12*(2*s13 + 3*s23) + 10*(-2*s13^2 + 3*s13*s23 + 
                s23^2)) + p2q*p3q^3*(110*s12^3 + s12^2*(88*s13 + 111*s23) + 
              s12*(-13*s13^2 + 21*s13*s23 - 31*s23^2) - 10*s23*(-7*s13^2 + 
                s13*s23 + 3*s23^2)) + p2q^2*p3q^2*(76*s12^3 + 
              s12*(9*s13 - 40*s23)*s23 + s12^2*(-12*s13 + 69*s23) + 
              10*(-2*s13^3 + 15*s13^2*s23 + 5*s13*s23^2 - 3*s23^3)) + 
            p2q^3*p3q*(17*s12^3 + 6*s12^2*(-2*s13 + s23) + s12*(30*s13^2 + 
                27*s13*s23 - 22*s23^2) - 10*(4*s13^3 - 11*s13^2*s23 - 
                5*s13*s23^2 + s23^3))) + 
          p1q^2*(-(p3q^3*(32*s12^3 + s12*(s13 - 42*s23)*s23 - 30*s23^2*
                (2*s13 + s23) + 4*s12^2*(17*s13 + 5*s23))) + 
            p2q*p3q^2*(-102*s12^3 - 2*s12^2*(45*s13 + 4*s23) + 
              10*s23*(-10*s13^2 + 8*s13*s23 + 7*s23^2) + 3*s12*(4*s13^2 + 
                32*s13*s23 + 55*s23^2)) + p2q^3*(s12^2*(-2*s13 + 21*s23) + 
              s12*(-18*s13^2 + 6*s13*s23 + 31*s23^2) + 10*(2*s13^3 - 
                6*s13^2*s23 + s23^3)) + p2q^2*p3q*(-34*s12^3 + 
              6*s12^2*(2*s13 + 7*s23) + s12*(-6*s13^2 + 76*s13*s23 + 
                127*s23^2) + 10*(2*s13^3 - 16*s13^2*s23 + 2*s13*s23^2 + 
                5*s23^3)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k]] + 
     (-1/6*(ep^2*p3q*(s12 + s13 + s23)*(-(p2q^2*s13*(s12 + s13)) + 
           p1q*p2q*(s12 + 2*s13)*s23 - (p1q + p3q)*s23*(-(p3q*s12) + 
             p1q*s23) + p2q*p3q*(s12^2 + s13*s23 + s12*(s13 + 2*s23))))/
         ((p1q + p2q + p3q)*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
           p3q*(s12 + s23))) - 
       (-(p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23)) + 
         p2q^3*p3q*(2*s12 - s13)*s13*(s12 + s13 + s23) - 
         p2q^4*s13^2*(s12 + s13 + s23) - p2q*p3q^3*(s12^2 + s12*s13 + s13^2)*
          (s12 + s13 + s23) + p3q^4*s12*(2*s12^2 + 3*s12*s13 + s13^2 + 
           4*s12*s23 + 3*s13*s23 + 2*s23^2) + p1q*(s12 + s13 + s23)*
          (-(p2q^3*s13*(2*s12 + 5*s13 + s23)) + p2q^2*p3q*
            (2*s12^2 + 2*s12*s13 - 8*s13^2 + 5*s12*s23 - s13*s23 + 2*s23^2) + 
           p3q^3*(10*s12^2 + 7*s12*s13 + 12*s12*s23 + 3*s13*s23 + 2*s23^2) + 
           p2q*p3q^2*(3*s12^2 + 2*s12*s13 - 5*s13^2 + 9*s12*s23 + 3*s13*s23 + 
             4*s23^2)) + p1q^2*(s12 + s13 + s23)*
          (p2q^2*(4*s12^2 - 8*s13^2 + 6*s12*s23 + s13*s23 + 2*s23^2) + 
           p3q^2*(20*s12^2 + 16*s12*s13 + 26*s12*s23 + 9*s13*s23 + 6*s23^2) + 
           p2q*p3q*(12*s12^2 + 8*s12*s13 - 8*s13^2 + 21*s12*s23 + 8*s13*s23 + 
             8*s23^2)) + 2*p1q^4*(4*s12^3 + 2*s12^2*(4*s13 + 5*s23) + 
           s23*(3*s13^2 + 5*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 13*s13*s23 + 
             8*s23^2)) + 2*p1q^3*(s12 + s13 + s23)*
          (p3q*(10*s12^2 + 9*s12*s13 + 14*s12*s23 + 6*s13*s23 + 4*s23^2) + 
           p2q*(4*s12^2 - 3*s13^2 + 2*s13*s23 + 2*s23^2 + 
             2*s12*(s13 + 3*s23))))/(6*p2q*(p1q + p2q + p3q)*s12*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(s12 + s13 + s23)*(p2q^3*p3q*s12*s13 - p2q^4*s13^2 + 
          p3q^4*s12*(2*s12 + s13 + 2*s23) + p2q*p3q^3*(s12^2 - s12*s13 - 
            s13^2 + 3*s12*s23) - p2q^2*p3q^2*(s12*(s13 - 2*s23) + 
            s13*(s13 + s23)) + p1q^2*(p2q*p3q*s23*(3*s12 + s23) + 
            p2q^2*(4*s12^2 + 4*s12*s13 + 6*s12*s23 + 3*s13*s23 + 2*s23^2) + 
            p3q^2*(4*s12^2 + 4*s12*s13 + 6*s12*s23 + 3*s13*s23 + 2*s23^2)) + 
          p1q*(-(p2q^3*s13*(2*s12 + 3*s13 + s23)) + p2q*p3q^2*
             (s12^2 - 2*s12*s13 - 3*s13^2 + 6*s12*s23 - s13*s23 + s23^2) + 
            p3q^3*(6*s12^2 + 5*s12*s13 + 8*s12*s23 + 3*s13*s23 + 2*s23^2) + 
            p2q^2*p3q*(2*s12^2 + s23*(s13 + 2*s23) + 2*s12*(s13 + 3*s23)))))/
        (6*p2q*(p1q + p2q + p3q)*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k]] + 
     ((-3*ep*(s12 + s13 + s23)*(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + 
            p3q^3*s23^2 + 2*p2q*p3q^2*(2*s12*s13 + s23^2) + 
            2*p2q^2*p3q*(-2*s13^2 - 2*s13*s23 + s23^2)) - 
          p1q*(p2q + p3q)*(p2q^4*(s12 + 2*s13)*s23^2 + p3q^4*s23^2*
             (s12 + 2*s13 + 3*s23) + 2*p2q^2*p3q^2*(4*s12*s13^2 - 
              2*s13^2*s23 + 3*s12*s23^2 + s13*s23^2 + 3*s23^3) + 
            p2q^3*p3q*(-4*s13^3 + 6*s12*s23^2 + 9*s13*s23^2 + 4*s23^3) + 
            p2q*p3q^3*(-4*s12^2*s13 + 4*s12*s23*(s13 + s23) + 
              s23^2*(3*s13 + 5*s23))) + (p2q + p3q)^2*
           (p2q^4*s13*(s12 + s13)*s23 + p3q^4*s23*(2*s12^2 + 4*s13*(s13 + 
                s23) + 3*s12*(2*s13 + s23)) + p2q^3*p3q*(4*s13^3 + 
              8*s13^2*s23 + s12*s23*(3*s12 + 2*s23) + s13*s23*(7*s12 + 
                4*s23)) + p2q*p3q^3*(4*s12^2*(s13 + s23) + 2*s12*s23*(5*s13 + 
                2*s23) + s13*s23*(6*s13 + 7*s23)) + 4*p2q^2*p3q^2*
             (s12^2*s23 + 2*s13*s23*(s13 + s23) + s12*(-2*s13^2 + 2*s13*s23 + 
                s23^2)))))/(2*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (3*(2*p1q^4*(p2q^2 - p3q^2)*s23^3*(s12 + s13 + s23) - 
          2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*
           (p2q^2*(s12 + 2*s13 - s23) + p2q*p3q*(4*s12 - 2*s13 + s23) + 
            p3q^2*(s12 + 2*s13 + 4*s23)) + p1q^2*s23*
           (p2q^3*p3q*(6*s12^3 + 4*s12^2*(3*s13 - s23) - (s13 + s23)*
               (2*s13 + s23)^2 + s12*(2*s13^2 - 8*s13*s23 - 11*s23^2)) + 
            2*p2q^2*p3q^2*(8*s12^3 + 3*s13^3 + 11*s13^2*s23 + 3*s13*s23^2 - 
              5*s23^3 + s12^2*(19*s13 + s23) + 2*s12*(7*s13^2 + 6*s13*s23 - 
                6*s23^2)) + p3q^4*(4*s12^3 + 8*s13^3 + 12*s13^2*s23 - 
              3*s13*s23^2 - 7*s23^3 + 8*s12^2*(2*s13 + s23) + 
              s12*(20*s13^2 + 20*s13*s23 - 3*s23^2)) + 
            p2q^4*(2*s13^3 + 2*s12^2*(s13 - s23) - 2*s13^2*s23 - 
              3*s13*s23^2 + s23^3 + s12*(4*s13^2 - 4*s13*s23 - s23^2)) + 
            p2q*p3q^3*(14*s12^3 + 12*s12^2*(3*s13 + s23) + s12*(34*s13^2 + 
                32*s13*s23 - 17*s23^2) + 3*(4*s13^3 + 8*s13^2*s23 - 
                s13*s23^2 - 5*s23^3))) + p1q*(p2q + p3q)*
           (-(p2q^4*s23*(-2*s13^3 + 2*s13*s23^2 + s12^2*(-2*s13 + s23) + s12*
                (-4*s13^2 + s13*s23 + s23^2))) + p3q^4*s23*
             (4*s12^3 + 8*s13^3 + 14*s13^2*s23 + 3*s13*s23^2 - 3*s23^3 + 
              s12^2*(16*s13 + 9*s23) + s12*(20*s13^2 + 23*s13*s23 + 
                2*s23^2)) + p2q*p3q^3*(4*s12^3*(s13 + 4*s23) - 
              3*s12*s23*(-12*s13^2 - 13*s13*s23 + s23^2) + 4*s12^2*(s13^2 + 
                11*s13*s23 + 5*s23^2) + s23*(12*s13^3 + 23*s13^2*s23 + 
                4*s13*s23^2 - 7*s23^3)) + p2q^3*p3q*(4*s13^4 + 6*s12^3*s23 + 
              2*s13^3*s23 - 5*s13^2*s23^2 - 5*s13*s23^3 - 2*s23^4 + 
              2*s12^2*s23*(5*s13 + 2*s23) + s12*(4*s13^3 + 2*s13^2*s23 - 
                s13*s23^2 - 4*s23^3)) + 2*p2q^2*p3q^2*(9*s12^3*s23 + 
              s12^2*(-4*s13^2 + 18*s13*s23 + 9*s23^2) + s23*(2*s13^3 + 
                7*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s12*(-4*s13^3 + 
                7*s13^2*s23 + 14*s13*s23^2 - 3*s23^3))) + 
          (p2q + p3q)^2*(p2q^4*s13*(s12 + s13)*s23*(s12 + s13 + s23) + 
            p3q^4*s23*(2*s12^3 + 4*s13*(s13 + s23)^2 + s12^2*(8*s13 + 
                5*s23) + s12*(10*s13^2 + 13*s13*s23 + 3*s23^2)) + 
            p2q*p3q^3*(4*s12^3*(s13 + 2*s23) + s12*s23*(20*s13^2 + 
                27*s13*s23 + 6*s23^2) + 2*s12^2*(2*s13^2 + 13*s13*s23 + 
                7*s23^2) + s13*s23*(6*s13^2 + 13*s13*s23 + 7*s23^2)) + 
            p2q^3*p3q*(3*s12^3*s23 + s12^2*s23*(6*s13 + 5*s23) + 
              2*s13*(2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
              s12*(4*s13^3 + 7*s13^2*s23 + 7*s13*s23^2 + 2*s23^3)) + 
            2*p2q^2*p3q^2*(4*s12^3*s23 + s13*s23*(2*s13^2 + 5*s13*s23 + 
                3*s23^2) + s12^2*(-4*s13^2 + 8*s13*s23 + 7*s23^2) + 
              s12*(-4*s13^3 + 2*s13^2*s23 + 10*s13*s23^2 + 3*s23^3)))))/
        (2*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        Eik[k]] + ((-3*ep*(s12 + s13 + s23)*
         (-(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + p3q^3*s23^2 + 
             2*p2q^2*p3q*(2*s12*s13 + s23^2) + 2*p2q*p3q^2*(-2*s12^2 - 2*s12*
                s23 + s23^2))) - p1q*(p2q + p3q)*(p3q^4*(2*s12 + s13)*s23^2 + 
            p2q^4*s23^2*(2*s12 + s13 + 3*s23) + p2q*p3q^3*(-4*s12^3 + 
              9*s12*s23^2 + 6*s13*s23^2 + 4*s23^3) + 2*p2q^2*p3q^2*
             (s12^2*(4*s13 - 2*s23) + s12*s23^2 + 3*s23^2*(s13 + s23)) + 
            p2q^3*p3q*(s23^2*(4*s13 + 5*s23) + s12*(-4*s13^2 + 4*s13*s23 + 
                3*s23^2))) + (p2q + p3q)^2*(p3q^4*s12*(s12 + s13)*s23 + 
            p2q^4*s23*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 4*s12*s23 + 
              3*s13*s23) + 4*p2q^2*p3q^2*(-2*s12^2*(s13 - s23) + 
              2*s12*s23*(s13 + s23) + s13*s23*(s13 + s23)) + 
            p2q*p3q^3*(4*s12^3 + 8*s12^2*s23 + s13*s23*(3*s13 + 2*s23) + 
              s12*s23*(7*s13 + 4*s23)) + p2q^3*p3q*(6*s12^2*s23 + 
              4*s13*s23*(s13 + s23) + s12*(4*s13^2 + 10*s13*s23 + 
                7*s23^2)))))/(2*p2q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (3*(-2*p1q^4*(p2q^2 - p3q^2)*s23^3*(s12 + s13 + s23) - 
          2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*
           (p3q^2*(2*s12 + s13 - s23) + p2q*p3q*(-2*s12 + 4*s13 + s23) + 
            p2q^2*(2*s12 + s13 + 4*s23)) + p1q^2*s23*
           (p2q^4*(8*s12^3 + 4*s13^3 + 8*s13^2*s23 - 3*s13*s23^2 - 7*s23^3 + 
              4*s12^2*(5*s13 + 3*s23) + s12*(16*s13^2 + 20*s13*s23 - 
                3*s23^2)) + p2q^3*p3q*(12*s12^3 + 14*s13^3 + 12*s13^2*s23 - 
              17*s13*s23^2 - 15*s23^3 + s12^2*(34*s13 + 24*s23) + 
              s12*(36*s13^2 + 32*s13*s23 - 3*s23^2)) + 
            p3q^4*(2*s12^3 + s12^2*(4*s13 - 2*s23) + s12*(2*s13^2 - 
                4*s13*s23 - 3*s23^2) + s23*(-2*s13^2 - s13*s23 + s23^2)) + 
            2*p2q^2*p3q^2*(3*s12^3 + 8*s13^3 + s13^2*s23 - 12*s13*s23^2 - 
              5*s23^3 + s12^2*(14*s13 + 11*s23) + s12*(19*s13^2 + 
                12*s13*s23 + 3*s23^2)) - p2q*p3q^3*(4*s12^3 - 6*s13^3 - 
              2*s12^2*(s13 - 4*s23) + 4*s13^2*s23 + 11*s13*s23^2 + s23^3 + 
              s12*(-12*s13^2 + 8*s13*s23 + 5*s23^2))) + p1q*(p2q + p3q)*
           (-(p3q^4*s23*(-2*s12^3 - 4*s12^2*s13 + s13*s23*(s13 + s23) + s12*
                (-2*s13^2 + s13*s23 + 2*s23^2))) + p2q^4*s23*
             (8*s12^3 + 4*s13^3 + 9*s13^2*s23 + 2*s13*s23^2 - 3*s23^3 + 
              2*s12^2*(10*s13 + 7*s23) + s12*(16*s13^2 + 23*s13*s23 + 
                3*s23^2)) + 2*p2q^2*p3q^2*(s12^3*(-4*s13 + 2*s23) + 
              2*s12*s23*(9*s13^2 + 7*s13*s23 + s23^2) + s12^2*(-4*s13^2 + 
                7*s13*s23 + 7*s23^2) - 3*s23*(-3*s13^3 - 3*s13^2*s23 + 
                s13*s23^2 + s23^3)) + p2q*p3q^3*(4*s12^4 + s12^2*(2*s13 - 
                5*s23)*s23 + 2*s12^3*(2*s13 + s23) - s12*s23*(-10*s13^2 + 
                s13*s23 + 5*s23^2) - 2*s23*(-3*s13^3 - 2*s13^2*s23 + 
                2*s13*s23^2 + s23^3)) + p2q^3*p3q*(12*s12^3*s23 + 
              s12^2*(4*s13^2 + 36*s13*s23 + 23*s23^2) + s23*(16*s13^3 + 
                20*s13^2*s23 - 3*s13*s23^2 - 7*s23^3) + s12*(4*s13^3 + 
                44*s13^2*s23 + 39*s13*s23^2 + 4*s23^3))) + 
          (p2q + p3q)^2*(p3q^4*s12*(s12 + s13)*s23*(s12 + s13 + s23) + 
            p2q*p3q^3*(4*s12^4 + 4*s12^3*(s13 + 2*s23) + s12^2*s23*(7*s13 + 
                6*s23) + s13*s23*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 
              s12*s23*(6*s13^2 + 7*s13*s23 + 2*s23^2)) + 
            p2q^4*s23*(4*s12^3 + 2*s12^2*(5*s13 + 4*s23) + s13*(2*s13^2 + 
                5*s13*s23 + 3*s23^2) + s12*(8*s13^2 + 13*s13*s23 + 
                4*s23^2)) + 2*p2q^2*p3q^2*(s12^3*(-4*s13 + 2*s23) + 
              s13*s23*(4*s13^2 + 7*s13*s23 + 3*s23^2) + s12*s23*(8*s13^2 + 
                10*s13*s23 + 3*s23^2) + s12^2*(-4*s13^2 + 2*s13*s23 + 
                5*s23^2)) + p2q^3*p3q*(6*s12^3*s23 + 2*s13*s23*(4*s13^2 + 
                7*s13*s23 + 3*s23^2) + s12^2*(4*s13^2 + 20*s13*s23 + 
                13*s23^2) + s12*(4*s13^3 + 26*s13^2*s23 + 27*s13*s23^2 + 
                7*s23^3)))))/(2*p2q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k]] + 
     (-1/54*(ep^2*p1q*(s12 + s13 + s23)*(p3q^3*s12*(17*s12^3 - 
             s13*(s13 - 3*s23)*s23 + s12^2*(-56*s13 + 37*s23) - 
             s12*(s13^2 + 54*s13*s23 - 20*s23^2)) + p2q^3*s13*
            (-(s12^2*(s13 + s23)) + s12*(-56*s13^2 - 54*s13*s23 + 3*s23^2) + 
             s13*(17*s13^2 + 37*s13*s23 + 20*s23^2)) + 
           p1q^3*(s12^2*(72*s13^2 + 90*s13*s23 + 17*s23^2) + 
             s23^2*(17*s13^2 + 37*s13*s23 + 20*s23^2) + 
             s12*s23*(90*s13^2 + 128*s13*s23 + 37*s23^2)) - 
           p2q*p3q^2*(s12^4 + 2*s12^3*(45*s13 + 8*s23) + 
             s13*s23*(-s13^2 + s13*s23 + 2*s23^2) + s12^2*(-129*s13^2 + 37*
                s13*s23 + 35*s23^2) - s12*(2*s13^3 + 70*s13^2*s23 + 57*s13*
                s23^2 - 20*s23^3)) + p2q^2*p3q*(s12^3*(2*s13 + s23) + 
             s12^2*(129*s13^2 + 70*s13*s23 - s23^2) - 
             s12*(90*s13^3 + 37*s13^2*s23 - 57*s13*s23^2 + 2*s23^3) - 
             s13*(s13^3 + 16*s13^2*s23 + 35*s13*s23^2 + 20*s23^3)) + 
           p1q*(p3q^2*(17*s12^4 - 3*s13*s23^2*(s13 + s23) + s12^3*
                (-146*s13 + 3*s23) + s12^2*(53*s13^2 - 126*s13*s23 - 
                 54*s23^2) + s12*s23*(51*s13^2 + 20*s13*s23 - 40*s23^2)) + 
             p2q^2*(s12^2*(53*s13^2 + 51*s13*s23 - 3*s23^2) + s13*
                (17*s13^3 + 3*s13^2*s23 - 54*s13*s23^2 - 40*s23^3) - s12*
                (146*s13^3 + 126*s13^2*s23 - 20*s13*s23^2 + 3*s23^3)) + 
             p2q*p3q*(-(s12^3*(70*s13 + 13*s23)) + s12^2*(292*s13^2 + 
                 165*s13*s23 - 18*s23^2) + s12*(-70*s13^3 + 165*s13^2*s23 + 
                 262*s13*s23^2 + 15*s23^3) + s23*(-13*s13^3 - 18*s13^2*s23 + 
                 15*s13*s23^2 + 20*s23^3))) + 
           p1q^2*(p3q*(-2*s12^3*(45*s13 + 17*s23) + 3*s12^2*(42*s13^2 + 
                 6*s13*s23 - 19*s23^2) + s12*s23*(142*s13^2 + 145*s13*s23 - 
                 3*s23^2) + 2*s23^2*(7*s13^2 + 17*s13*s23 + 10*s23^2)) + 
             p2q*(2*s12^2*(63*s13^2 + 71*s13*s23 + 7*s23^2) + s23*
                (-34*s13^3 - 57*s13^2*s23 - 3*s13*s23^2 + 20*s23^3) + s12*
                (-90*s13^3 + 18*s13^2*s23 + 145*s13*s23^2 + 34*s23^3)))))/
         ((p1q + p2q + p3q)*s12*s13*(-(p3q^2*s12*(s12 + s23)) - 
           p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
           p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
           p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
            (2*s13 + s23))) + (p1q*(s12 + s13 + s23)*
         (2*p1q^6*s23^3*(s12 + s13 + s23)*(p3q*(s12^2*(-9*s13 + s23) + 
              10*s13*s23*(s13 + s23) + s12*(9*s13^2 + s23^2)) + 
            p2q*(s13*s23*(s13 + s23) + s12^2*(9*s13 + 10*s23) + 
              s12*(-9*s13^2 + 10*s23^2))) - 2*p1q^5*s23^2*(s12 + s13 + s23)*
           (p2q^2*(s12^3*(9*s13 + 10*s23) + s12^2*(18*s13^2 + 11*s13*s23 - 
                10*s23^2) + s13*s23*(2*s13^2 - s13*s23 - 3*s23^2) + 
              s12*(-9*s13^3 + 55*s13^2*s23 + 49*s13*s23^2 - 20*s23^3)) + 
            2*p2q*p3q*(3*s12^3*(3*s13 + 5*s23) + s13*s23*(15*s13^2 - 
                s13*s23 - 16*s23^2) - s12^2*(36*s13^2 + 21*s13*s23 + s23^2) + 
              s12*(9*s13^3 - 21*s13^2*s23 - 14*s13*s23^2 - 16*s23^3)) + 
            p3q^2*(s12^3*(-9*s13 + 2*s23) + 10*s13*s23*(s13^2 - s13*s23 - 
                2*s23^2) + s12^2*(18*s13^2 + 55*s13*s23 - s23^2) + 
              s12*(9*s13^3 + 11*s13^2*s23 + 49*s13*s23^2 - 3*s23^3))) - 
          (p2q + p3q)*(p2q^6*s13^2*s23*(s12*(9*s13 - 10*s23)*(s13 + s23)^2 - 
              s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 10*s23) + 
              s12^2*s13*(18*s13 + 19*s23)) + p3q^6*s12^2*s23*
             (s12^3*(9*s13 - s23) + 10*s13*s23*(s13^2 - s23^2) + 
              2*s12^2*(9*s13^2 + 4*s13*s23 - s23^2) + s12*(9*s13^3 + 
                19*s13^2*s23 - 11*s13*s23^2 - s23^3)) + p2q*p3q^5*s12*
             (36*s12^5*(2*s13 + s23) + 3*s12^4*(24*s13^2 + 45*s13*s23 + 
                31*s23^2) + 2*s12^3*s23*(63*s13^2 + 61*s13*s23 + 43*s23^2) + 
              5*s12^2*s23*(-9*s13^3 + 23*s13^2*s23 + 18*s13*s23^2 + 
                8*s23^3) + s12*s23^2*(-24*s13^3 + 68*s13^2*s23 + 
                50*s13*s23^2 + 11*s23^3) + s13*s23^2*(-2*s13^3 + s13^2*s23 + 
                19*s13*s23^2 + 20*s23^3)) + p2q^3*p3q^3*(18*s12^6*s23 + 
              s12^5*s23*(-81*s13 + 23*s23) + s12^2*s13*s23*(540*s13^3 + 
                539*s13^2*s23 + 86*s13*s23^2 - 41*s23^3) + s12*s13^2*s23*(
                -81*s13^3 + 70*s13^2*s23 + 125*s13*s23^2 - 41*s23^3) + 
              s13^3*s23*(18*s13^3 + 23*s13^2*s23 - 17*s13*s23^2 - 22*s23^3) + 
              s12^4*(432*s13^3 + 540*s13^2*s23 + 70*s13*s23^2 - 17*s23^3) + 
              s12^3*(432*s13^4 + 846*s13^3*s23 + 539*s13^2*s23^2 + 
                125*s13*s23^3 - 22*s23^4)) + p2q^2*p3q^4*(36*s12^6*s23 - 
              s13^3*s23^2*(8*s13^2 + 19*s13*s23 + 11*s23^2) + 
              s12^5*(-288*s13^2 - 252*s13*s23 + 62*s23^2) - 
              s12^4*(288*s13^3 + 558*s13^2*s23 + 331*s13*s23^2 - 9*s23^3) - 
              s12^3*s23*(459*s13^3 + 422*s13^2*s23 + 111*s13*s23^2 + 
                15*s23^3) - s12*s13*s23*(27*s13^4 + 18*s13^3*s23 + 
                58*s13^2*s23^2 + 69*s13*s23^3 - 11*s23^4) + s12^2*s23*(
                72*s13^4 - 255*s13^3*s23 - 204*s13^2*s23^2 - 28*s13*s23^3 + 
                2*s23^4)) - p2q^4*p3q^2*(s12^5*s23*(27*s13 + 8*s23) + 
              s12^4*s23*(-72*s13^2 + 18*s13*s23 + 19*s23^2) + 
              s12*s13*s23*(252*s13^4 + 331*s13^3*s23 + 111*s13^2*s23^2 + 
                28*s13*s23^3 - 11*s23^4) - s13^2*s23*(36*s13^4 + 
                62*s13^3*s23 + 9*s13^2*s23^2 - 15*s13*s23^3 + 2*s23^4) + 
              s12^3*(288*s13^4 + 459*s13^3*s23 + 255*s13^2*s23^2 + 
                58*s13*s23^3 + 11*s23^4) + s12^2*s13*(288*s13^4 + 
                558*s13^3*s23 + 422*s13^2*s23^2 + 204*s13*s23^3 + 
                69*s23^4)) + p2q^5*p3q*s13*(-2*s12^4*s23^2 + 
              s12^3*s23*(-45*s13^2 - 24*s13*s23 + s23^2) + 
              s13*s23*(36*s13^4 + 93*s13^3*s23 + 86*s13^2*s23^2 + 
                40*s13*s23^3 + 11*s23^4) + s12^2*(72*s13^4 + 126*s13^3*s23 + 
                115*s13^2*s23^2 + 68*s13*s23^3 + 19*s23^4) + s12*(72*s13^5 + 
                135*s13^4*s23 + 122*s13^3*s23^2 + 90*s13^2*s23^3 + 
                50*s13*s23^4 + 20*s23^5))) + 
          p1q^3*(p2q^4*s23*(s12^4*(36*s13^2 + 13*s13*s23 - 30*s23^2) + 
              2*s13*s23*(s13 + s23)^2*(3*s13^2 - 7*s13*s23 + 2*s23^2) + 
              s12^3*(54*s13^3 + 87*s13^2*s23 - 15*s13*s23^2 - 50*s23^3) + 
              s12^2*s23*(267*s13^3 + 96*s13^2*s23 - 205*s13*s23^2 - 
                10*s23^3) - s12*(s13 + s23)^2*(18*s13^3 - 235*s13^2*s23 + 
                193*s13*s23^2 - 10*s23^3)) + p3q^4*s23*
             (s12^4*(199*s13 - 2*s23)*s23 + 6*s12^5*(-3*s13 + s23) - 
              10*s13*(3*s13 - s23)*s23^2*(s13 + s23)^2 + s12^3*(54*s13^3 + 
                267*s13^2*s23 + 259*s13*s23^2 - 18*s23^3) + 
              3*s12^2*(12*s13^4 + 29*s13^3*s23 + 32*s13^2*s23^2 - 
                47*s13*s23^3 - 2*s23^4) + s12*s23*(13*s13^4 - 15*s13^3*s23 - 
                205*s13^2*s23^2 - 173*s13*s23^3 + 4*s23^4)) - 
            p2q*p3q^3*(36*s12^6*s23 - 6*s12^5*(12*s13^2 + 57*s13*s23 + 
                23*s23^2) + s12^3*s23*(-54*s13^3 + 20*s13^2*s23 + 
                328*s13*s23^2 + 25*s23^3) - 2*s12^4*(36*s13^3 + 
                81*s13^2*s23 + 219*s13*s23^2 + 121*s23^3) + s13*s23^2*(
                -72*s13^4 + 22*s13^3*s23 + 217*s13^2*s23^2 + 71*s13*s23^3 - 
                52*s23^4) + s12^2*s23*(162*s13^4 + 56*s13^3*s23 - 
                30*s13^2*s23^2 + 783*s13*s23^3 + 32*s23^4) + 
              s12*s23*(-72*s13^5 + 60*s13^4*s23 + 112*s13^3*s23^2 + 
                345*s13^2*s23^3 + 311*s13*s23^4 - 61*s23^5)) - 
            p2q^2*p3q^2*(36*s12^6*s23 - 24*s12^5*s23*(12*s13 + 7*s23) + 
              2*s12^4*(72*s13^3 + 234*s13^2*s23 + 16*s13*s23^2 - 99*s23^3) + 
              s12^2*s23*(468*s13^4 + 412*s13^3*s23 - 768*s13^2*s23^2 + 
                224*s13*s23^3 + 33*s23^4) + 4*s12^3*(36*s13^4 + 144*s13^3*
                 s23 + 103*s13^2*s23^2 + 99*s13*s23^3 + 39*s23^4) + 
              s12*s23*(-288*s13^5 + 32*s13^4*s23 + 396*s13^3*s23^2 + 
                224*s13^2*s23^3 + 42*s13*s23^4 - 117*s23^5) + 
              3*s13*s23*(12*s13^5 - 56*s13^4*s23 - 66*s13^3*s23^2 + 
                52*s13^2*s23^3 + 11*s13*s23^4 - 39*s23^5)) + 
            p2q^3*p3q*(72*s12^5*s23*(s13 + s23) - 2*s12^4*s23*(81*s13^2 + 
                30*s13*s23 + 11*s23^2) + s12^3*(72*s13^4 + 54*s13^3*s23 - 
                56*s13^2*s23^2 - 112*s13*s23^3 - 217*s23^4) + 
              s12^2*(72*s13^5 + 162*s13^4*s23 - 20*s13^3*s23^2 + 
                30*s13^2*s23^3 - 345*s13*s23^4 - 71*s23^5) + 
              s12*s23*(342*s13^5 + 438*s13^4*s23 - 328*s13^3*s23^2 - 
                783*s13^2*s23^3 - 311*s13*s23^4 + 52*s23^5) + 
              s13*s23*(-36*s13^5 + 138*s13^4*s23 + 242*s13^3*s23^2 - 
                25*s13^2*s23^3 - 32*s13*s23^4 + 61*s23^5))) + 
          p1q*(p2q^6*s13*s23*(2*s13*(2*s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + 10*s23) - s12*(s13 + s23)^2*(27*s13^2 - 
                77*s13*s23 + 10*s23^2) + s12^3*(-9*s13^2 + 17*s13*s23 + 
                30*s23^2) + s12^2*(-45*s13^3 + 26*s13^2*s23 + 87*s13*s23^2 + 
                10*s23^3)) + p3q^6*s12*s23*(s12^4*(-27*s13 + 4*s23) + 
              s12^3*(-45*s13^2 + 23*s13*s23 + 6*s23^2) + s12^2*s13*(
                -9*s13^2 + 26*s13*s23 + 117*s23^2) + 10*s13*s23*(s13^3 + 
                3*s13^2*s23 + s13*s23^2 - s23^3) + s12*(9*s13^4 + 
                17*s13^3*s23 + 87*s13^2*s23^2 + 57*s13*s23^3 - 2*s23^4)) + 
            p2q^2*p3q^4*(-36*s12^6*(2*s13 + 5*s23) + s12^5*(504*s13^2 + 
                720*s13*s23 - 250*s23^2) + s12^4*(360*s13^3 + 765*s13^2*s23 + 
                897*s13*s23^2 + 16*s23^3) + s12^2*s23*(-675*s13^4 + 
                41*s13^3*s23 + 514*s13^2*s23^2 - 104*s13*s23^3 - 41*s23^4) + 
              s12^3*(-216*s13^4 + 477*s13^3*s23 + 426*s13^2*s23^2 + 
                138*s13*s23^3 + 34*s23^4) - s13^2*s23*(18*s13^4 - 
                30*s13^3*s23 - 91*s13^2*s23^2 + s13*s23^3 + 44*s23^4) + 
              s12*s23*(135*s13^5 - 144*s13^4*s23 - 35*s13^3*s23^2 + 
                114*s13^2*s23^3 - 162*s13*s23^4 + 11*s23^5)) + 
            p2q*p3q^5*(-36*s12^6*(4*s13 + 3*s23) - 9*s12^5*(8*s13^2 + 
                9*s13*s23 + 22*s23^2) + s12^4*(72*s13^3 + 187*s13*s23^2 - 
                78*s23^3) + s13^2*s23^2*(8*s13^3 + 8*s13^2*s23 - 
                11*s13*s23^2 - 11*s23^3) + s12^3*s23*(288*s13^3 + 
                107*s13^2*s23 + 177*s13*s23^2 + 5*s23^3) + s12^2*s23*(
                -36*s13^4 + 171*s13^3*s23 + 132*s13^2*s23^2 - 34*s13*s23^3 + 
                4*s23^4) + s12*s23*(9*s13^5 - 11*s13^4*s23 + 57*s13^3*s23^2 - 
                12*s13^2*s23^3 - 91*s13*s23^4 + 11*s23^5)) + 
            p2q^4*p3q^2*(-18*s12^6*s23 + 15*s12^5*s23*(9*s13 + 2*s23) - 
              s12^4*(216*s13^3 + 675*s13^2*s23 + 144*s13*s23^2 - 91*s23^3) + 
              s12^3*(360*s13^4 + 477*s13^3*s23 + 41*s13^2*s23^2 - 
                35*s13*s23^3 - s23^4) + s12*s13*(-72*s13^5 + 720*s13^4*s23 + 
                897*s13^3*s23^2 + 138*s13^2*s23^3 - 104*s13*s23^4 - 
                162*s23^5) + s12^2*(504*s13^5 + 765*s13^4*s23 + 426*s13^3*
                 s23^2 + 514*s13^2*s23^3 + 114*s13*s23^4 - 44*s23^5) + 
              s13*s23*(-180*s13^5 - 250*s13^4*s23 + 16*s13^3*s23^2 + 
                34*s13^2*s23^3 - 41*s13*s23^4 + 11*s23^5)) - 
            p2q^3*p3q^3*(90*s12^6*s23 + s12^5*(-216*s13^2 - 612*s13*s23 + 
                17*s23^2) + s12^4*(648*s13^3 + 1062*s13^2*s23 - 
                151*s13*s23^2 - 210*s23^3) + 2*s12^3*(324*s13^4 + 
                684*s13^3*s23 + 595*s13^2*s23^2 + 190*s13*s23^3 - 33*s23^4) + 
              s13^2*s23*(90*s13^4 + 17*s13^3*s23 - 210*s13^2*s23^2 - 
                66*s13*s23^3 + 71*s23^4) + s12*s13*s23*(-612*s13^4 - 
                151*s13^3*s23 + 380*s13^2*s23^2 + 84*s13*s23^3 + 216*s23^4) + 
              s12^2*(-216*s13^5 + 1062*s13^4*s23 + 1190*s13^3*s23^2 - 
                92*s13^2*s23^3 + 84*s13*s23^4 + 71*s23^5)) + 
            p2q^5*p3q*(s12^5*s23*(9*s13 + 8*s23) + s12^4*s23*(-36*s13^2 - 
                11*s13*s23 + 8*s23^2) + s12^3*(72*s13^4 + 288*s13^3*s23 + 
                171*s13^2*s23^2 + 57*s13*s23^3 - 11*s23^4) + 
              s12^2*(-72*s13^5 + 107*s13^3*s23^2 + 132*s13^2*s23^3 - 
                12*s13*s23^4 - 11*s23^5) + s13*s23*(-108*s13^5 - 
                198*s13^4*s23 - 78*s13^3*s23^2 + 5*s13^2*s23^3 + 
                4*s13*s23^4 + 11*s23^5) - s12*s13*(144*s13^5 + 81*s13^4*s23 - 
                187*s13^3*s23^2 - 177*s13^2*s23^3 + 34*s13*s23^4 + 
                91*s23^5))) + p1q^4*s23*(p3q^3*(2*s12^5*s23 - 
              10*s13*(4*s13 - 3*s23)*s23^2*(s13 + s23)^2 + 2*s12^4*(9*s13^2 + 
                65*s13*s23 - 4*s23^2) + s12^3*(36*s13^3 + 130*s13^2*s23 + 
                21*s13*s23^2 - 15*s23^3) - s12*s23*(16*s13^4 + 105*s13^3*
                 s23 + 275*s13^2*s23^2 + 179*s13*s23^3 - 7*s23^4) + 
              2*s12^2*(9*s13^4 - 7*s13^3*s23 - 81*s13^2*s23^2 - 
                159*s13*s23^3 + s23^4)) + p2q^3*(2*s12^4*(9*s13^2 - 
                8*s13*s23 - 20*s23^2) + s13*s23*(s13 + s23)^2*(2*s13^2 - 
                12*s13*s23 + 7*s23^2) + s12*s23*(s13 + s23)^2*(130*s13^2 - 
                239*s13*s23 + 30*s23^2) + s12^3*(36*s13^3 - 14*s13^2*s23 - 
                105*s13*s23^2 - 50*s23^3) + s12^2*(18*s13^4 + 130*s13^3*s23 - 
                162*s13^2*s23^2 - 275*s13*s23^3 + 20*s23^4)) + 
            p2q*p3q^2*(s12^5*(54*s13 + 76*s23) - 2*s12^4*(45*s13^2 + 
                58*s13*s23 + 7*s23^2) - 2*s12^3*(36*s13^3 + 48*s13^2*s23 + 
                241*s13*s23^2 + 89*s23^3) + s12^2*(-18*s13^4 + 156*s13^3*
                 s23 + 328*s13^2*s23^2 - 354*s13*s23^3 - 7*s23^4) + 
              s13*s23*(56*s13^4 - 28*s13^3*s23 - 114*s13^2*s23^2 + 
                83*s13*s23^3 + 113*s23^4) + s12*(54*s13^5 + 44*s13^4*s23 + 
                94*s13^3*s23^2 + 94*s13^2*s23^3 + 70*s13*s23^4 + 81*s23^5)) + 
            p2q^2*p3q*(s12^5*(54*s13 + 56*s23) - 2*s12^4*(9*s13^2 - 
                22*s13*s23 + 14*s23^2) - 2*s12^3*(36*s13^3 - 78*s13^2*s23 - 
                47*s13*s23^2 + 57*s23^3) + s13*s23*(76*s13^4 - 14*s13^3*s23 - 
                178*s13^2*s23^2 - 7*s13*s23^3 + 81*s23^4) + 
              s12^2*(-90*s13^4 - 96*s13^3*s23 + 328*s13^2*s23^2 + 
                94*s13*s23^3 + 83*s23^4) + s12*(54*s13^5 - 116*s13^4*s23 - 
                482*s13^3*s23^2 - 354*s13^2*s23^3 + 70*s13*s23^4 + 
                113*s23^5))) + p1q^2*(p2q^5*s23*(s12^4*(27*s13^2 + 
                21*s13*s23 - 10*s23^2) + s13*s23*(s13 + s23)^2*(7*s13^2 - 
                8*s13*s23 + s23^2) - 2*s12*s13*(s13 + s23)^2*(18*s13^2 - 
                95*s13*s23 + 39*s23^2) + 2*s12^3*(9*s13^3 + 37*s13^2*s23 + 
                21*s13*s23^2 - 10*s23^3) + s12^2*(-45*s13^4 + 164*s13^3*s23 + 
                177*s13^2*s23^2 - 58*s13*s23^3 - 10*s23^4)) + 
            p3q^5*s23*(-10*s13^2*s23^2*(s13 + s23)^2 + s12^5*(-36*s13 + 
                7*s23) + s12^4*(-45*s13^2 + 118*s13*s23 + 6*s23^2) + 
              2*s12^3*(9*s13^3 + 82*s13^2*s23 + 133*s13*s23^2 - 4*s23^3) + 
              s12^2*(27*s13^4 + 74*s13^3*s23 + 177*s13^2*s23^2 + 
                34*s13*s23^3 - 6*s23^4) + s12*s23*(21*s13^4 + 42*s13^3*s23 - 
                58*s13^2*s23^2 - 78*s13*s23^3 + s23^4)) - 
            p2q^2*p3q^3*(144*s12^6*s23 - 2*s12^5*(144*s13^2 + 423*s13*s23 + 
                8*s23^2) + s12^4*(72*s13^3 + 126*s13^2*s23 - 608*s13*s23^2 - 
                313*s23^3) + s12^3*(360*s13^4 + 603*s13^3*s23 + 627*s13^2*
                 s23^2 + 465*s13*s23^3 - 11*s23^4) + s12^2*s23*(1044*s13^4 + 
                860*s13^3*s23 - 329*s13^2*s23^2 + 590*s13*s23^3 + 88*s23^4) + 
              s12*s23*(-351*s13^5 + 187*s13^4*s23 + 470*s13^3*s23^2 + 
                318*s13^2*s23^3 + 368*s13*s23^4 - 54*s23^5) + 
              2*s13*s23*(18*s13^5 - 69*s13^4*s23 - 107*s13^3*s23^2 + 
                72*s13^2*s23^3 + 81*s13*s23^4 - 11*s23^5)) + 
            p2q*p3q^4*(-36*s12^6*(2*s13 + 3*s23) + 4*s12^5*(18*s13^2 + 
                90*s13*s23 - 11*s23^2) + s12^3*s23*(459*s13^3 + 610*s13^2*
                 s23 + 474*s13*s23^2 + 121*s23^3) + s12^4*(144*s13^3 + 
                441*s13^2*s23 + 881*s13*s23^2 + 202*s23^3) + 
              s13*s23^2*(44*s13^4 + 24*s13^3*s23 - 82*s13^2*s23^2 - 
                51*s13*s23^3 + 11*s23^4) + s12^2*s23*(-117*s13^4 + 
                305*s13^3*s23 + 499*s13^2*s23^2 - 221*s13*s23^3 + 18*s23^4) + 
              s12*s23*(45*s13^5 - 20*s13^4*s23 + 119*s13^3*s23^2 - 
                77*s13^2*s23^3 - 241*s13*s23^4 + 35*s23^5)) - 
            p2q^3*p3q^2*(36*s12^6*s23 - 3*s12^5*s23*(117*s13 + 46*s23) + 
              s12^4*(360*s13^3 + 1044*s13^2*s23 + 187*s13*s23^2 - 
                214*s23^3) + s12^3*(72*s13^4 + 603*s13^3*s23 + 860*s13^2*
                 s23^2 + 470*s13*s23^3 + 144*s23^4) + s13*s23*(144*s13^5 - 
                16*s13^4*s23 - 313*s13^3*s23^2 - 11*s13^2*s23^3 + 
                88*s13*s23^4 - 54*s23^5) + s12*s23*(-846*s13^5 - 
                608*s13^4*s23 + 465*s13^3*s23^2 + 590*s13^2*s23^3 + 
                368*s13*s23^4 - 22*s23^5) + s12^2*(-288*s13^5 + 126*s13^4*
                 s23 + 627*s13^3*s23^2 - 329*s13^2*s23^3 + 318*s13*s23^4 + 
                162*s23^5)) + p2q^4*p3q*(s12^5*s23*(45*s13 + 44*s23) + 
              s12^4*s23*(-117*s13^2 - 20*s13*s23 + 24*s23^2) + 
              s12^3*(144*s13^4 + 459*s13^3*s23 + 305*s13^2*s23^2 + 
                119*s13*s23^3 - 82*s23^4) + s12^2*(72*s13^5 + 441*s13^4*s23 + 
                610*s13^3*s23^2 + 499*s13^2*s23^3 - 77*s13*s23^4 - 
                51*s23^5) + s13*s23*(-108*s13^5 - 44*s13^4*s23 + 
                202*s13^3*s23^2 + 121*s13^2*s23^3 + 18*s13*s23^4 + 
                35*s23^5) + s12*(-72*s13^6 + 360*s13^5*s23 + 881*s13^4*
                 s23^2 + 474*s13^3*s23^3 - 221*s13^2*s23^4 - 241*s13*s23^5 + 
                11*s23^6)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - (ep*p1q*(s12 + s13 + s23)*
         (p1q^4*s23*(p3q^3*s23^2*(s12^3*(-9*s13 + s23) + 2*s12^2*s23*(
                -4*s13 + s23) + 10*s13*s23*(s13 + s23)^2 + s12*(s13 + s23)^2*(
                9*s13 + s23)) + p2q^3*s23^2*(-(s12*(9*s13 - 10*s23)*
                (s13 + s23)^2) + s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 
                10*s23) + s12^2*s23*(19*s13 + 20*s23)) + 2*p2q*p3q^2*
             (-36*s12^4*s13*(s13 + s23) + s23^3*(23*s13^3 + 59*s13^2*s23 + 
                46*s13*s23^2 + 10*s23^3) + s12^3*(36*s13^3 - 18*s13^2*s23 - 
                27*s13*s23^2 + 23*s23^3) + s12*s23^2*(45*s13^3 + 
                84*s13^2*s23 + 84*s13*s23^2 + 46*s23^3) + s12^2*s23*(
                54*s13^3 + 40*s13^2*s23 + 48*s13*s23^2 + 59*s23^3)) + 
            2*p2q^2*p3q*(s23^3*(23*s13^3 + 59*s13^2*s23 + 46*s13*s23^2 + 
                10*s23^3) + s12^3*(36*s13^3 + 54*s13^2*s23 + 45*s13*s23^2 + 
                23*s23^3) + s12*s23*(-36*s13^4 - 27*s13^3*s23 + 
                48*s13^2*s23^2 + 84*s13*s23^3 + 46*s23^4) + 
              s12^2*(-36*s13^4 - 18*s13^3*s23 + 40*s13^2*s23^2 + 
                84*s13*s23^3 + 59*s23^4))) - 
          p1q^3*(p2q^4*s23^2*(2*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + 10*s23) - s12*(s13 + s23)^2*(9*s13^2 - 
                57*s13*s23 + 10*s23^2) + s12^3*(27*s13^2 + 39*s13*s23 + 
                10*s23^2) + s12^2*(9*s13^3 + 84*s13^2*s23 + 69*s13*s23^2 - 
                10*s23^3)) + 2*p2q*p3q^3*(-36*s12^5*s13*(s13 + 2*s23) + 
              2*s12^2*s23^2*(-61*s13^3 + 78*s13^2*s23 + 139*s13*s23^2 + 
                23*s23^3) + s12^4*(-36*s13^3 + 18*s13^2*s23 + 9*s13*s23^2 + 
                60*s23^3) + s12^3*s23*(-162*s13^3 + 49*s13^2*s23 + 
                213*s13*s23^2 + 124*s23^3) + s12*s23^2*(36*s13^4 + 
                39*s13^3*s23 + 127*s13^2*s23^2 + 103*s13*s23^3 - 28*s23^4) + 
              s23^3*(33*s13^4 + 48*s13^3*s23 - 22*s13^2*s23^2 - 
                47*s13*s23^3 - 10*s23^4)) + p3q^4*s23^2*
             (10*s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^4*(-9*s13 + 2*s23) + 
              s12^3*(9*s13^2 + 39*s13*s23 + 2*s23^2) + s12^2*(27*s13^3 + 
                84*s13^2*s23 + 95*s13*s23^2 - 2*s23^3) + s12*(9*s13^4 + 
                39*s13^3*s23 + 69*s13^2*s23^2 + 37*s13*s23^3 - 2*s23^4)) + 
            2*p2q^2*p3q^2*(6*s12^4*(12*s13^3 + 39*s13^2*s23 + 36*s13*s23^2 + 
                13*s23^3) + s12*s23^2*(216*s13^4 + 357*s13^3*s23 + 
                395*s13^2*s23^2 + 196*s13*s23^3 - 69*s23^4) + 
              s23^3*(78*s13^4 + 148*s13^3*s23 + 21*s13^2*s23^2 - 
                69*s13*s23^3 - 20*s23^4) + s12^2*s23*(234*s13^4 + 
                206*s13^3*s23 + 426*s13^2*s23^2 + 395*s13*s23^3 + 21*s23^4) + 
              s12^3*(72*s13^4 - 36*s13^3*s23 + 206*s13^2*s23^2 + 
                357*s13*s23^3 + 148*s23^4)) + 2*p2q^3*p3q*
             (3*s12^4*s23^2*(12*s13 + 11*s23) + 2*s23^3*(30*s13^4 + 
                62*s13^3*s23 + 23*s13^2*s23^2 - 14*s13*s23^3 - 5*s23^4) + 
              s12^3*(-36*s13^4 - 162*s13^3*s23 - 122*s13^2*s23^2 + 
                39*s13*s23^3 + 48*s23^4) + s12*s23*(-72*s13^5 + 9*s13^4*s23 + 
                213*s13^3*s23^2 + 278*s13^2*s23^3 + 103*s13*s23^4 - 
                47*s23^5) + s12^2*(-36*s13^5 + 18*s13^4*s23 + 49*s13^3*
                 s23^2 + 156*s13^2*s23^3 + 127*s13*s23^4 - 22*s23^5))) - 
          (p2q + p3q)*(p2q^6*s13^2*s23*(s12*(9*s13 - 10*s23)*(s13 + s23)^2 - 
              s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 10*s23) + 
              s12^2*s13*(18*s13 + 19*s23)) + p3q^6*s12^2*s23*
             (s12^3*(9*s13 - s23) + 10*s13*s23*(s13^2 - s23^2) + 
              2*s12^2*(9*s13^2 + 4*s13*s23 - s23^2) + s12*(9*s13^3 + 
                19*s13^2*s23 - 11*s13*s23^2 - s23^3)) + p2q*p3q^5*s12*
             (36*s12^5*(2*s13 + s23) + s12^3*s23*(198*s13^2 + 215*s13*s23 + 
                85*s23^2) + s12^4*(72*s13^2 + 171*s13*s23 + 94*s23^2) + 
              2*s13*s23^2*(-s13^3 + s13^2*s23 + 8*s13*s23^2 + 10*s23^3) + 
              s12*s23^2*(-5*s13^3 + 123*s13^2*s23 + 9*s13*s23^2 + 11*s23^3) + 
              s12^2*s23*(-9*s13^3 + 226*s13^2*s23 + 107*s13*s23^2 + 
                38*s23^3)) + p2q^2*p3q^4*(36*s12^6*s23 - 4*s12^5*(72*s13^2 + 
                45*s13*s23 - 16*s23^2) - 3*s12^4*(96*s13^3 + 162*s13^2*s23 + 
                55*s13*s23^2 - 2*s23^3) + 2*s13^2*s23^2*(-4*s13^3 - 
                10*s13^2*s23 - 5*s13*s23^2 + s23^3) + s12^2*s23^2*(
                -421*s13^3 - 128*s13^2*s23 - 109*s13*s23^2 + 4*s23^3) - 
              s12^3*s23*(531*s13^3 + 404*s13^2*s23 + 131*s13*s23^2 + 
                18*s23^3) - s12*s13*s23*(27*s13^4 + 38*s13^3*s23 + 
                110*s13^2*s23^2 + 74*s13*s23^3 - 51*s23^4)) + 
            p2q^3*p3q^3*(18*s12^6*s23 + 3*s12^5*s23*(-15*s13 + 8*s23) + 
              s12^4*(432*s13^3 + 468*s13^2*s23 + 123*s13*s23^2 - 20*s23^3) + 
              s12^3*(432*s13^4 + 630*s13^3*s23 + 261*s13^2*s23^2 + 
                35*s13*s23^3 - 22*s23^4) + 2*s13^2*s23*(9*s13^4 + 
                12*s13^3*s23 - 10*s13^2*s23^2 - 11*s13*s23^3 + 2*s23^4) + 
              s12^2*s23*(468*s13^4 + 261*s13^3*s23 + 128*s13^2*s23^2 - 
                83*s13*s23^3 + 4*s23^4) + s12*s13*s23*(-45*s13^4 + 
                123*s13^3*s23 + 35*s13^2*s23^2 - 83*s13*s23^3 + 80*s23^4)) - 
            p2q^4*p3q^2*(s12^5*s23*(27*s13 + 8*s23) + 2*s12^4*s23^2*(19*s13 + 
                10*s23) + s12*s13*s23*(180*s13^4 + 165*s13^3*s23 + 
                131*s13^2*s23^2 + 109*s13*s23^3 - 51*s23^4) - 
              2*s13^2*s23*(18*s13^4 + 32*s13^3*s23 + 3*s13^2*s23^2 - 
                9*s13*s23^3 + 2*s23^4) + s12^3*(288*s13^4 + 531*s13^3*s23 + 
                421*s13^2*s23^2 + 110*s13*s23^3 + 10*s23^4) + 
              2*s12^2*(144*s13^5 + 243*s13^4*s23 + 202*s13^3*s23^2 + 
                64*s13^2*s23^3 + 37*s13*s23^4 - s23^5)) + p2q^5*p3q*s13*
             (-2*s12^4*s23^2 + s12^3*s23*(-9*s13^2 - 5*s13*s23 + 2*s23^2) + 
              s13*s23*(36*s13^4 + 94*s13^3*s23 + 85*s13^2*s23^2 + 
                38*s13*s23^3 + 11*s23^4) + s12^2*(72*s13^4 + 198*s13^3*s23 + 
                226*s13^2*s23^2 + 123*s13*s23^3 + 16*s23^4) + 
              s12*(72*s13^5 + 171*s13^4*s23 + 215*s13^3*s23^2 + 107*s13^2*
                 s23^3 + 9*s13*s23^4 + 20*s23^5))) + 
          p1q*(p2q^6*s13*s23*(2*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + 10*s23) - s12*(s13 + s23)^2*(9*s13^2 - 
                57*s13*s23 + 10*s23^2) + s12^3*(9*s13^2 + 37*s13*s23 + 
                30*s23^2) + s12^2*(-9*s13^3 + 64*s13^2*s23 + 87*s13*s23^2 + 
                10*s23^3)) + p3q^6*s12*s23*(s12^4*(-9*s13 + 2*s23) + 
              s12^3*(-9*s13^2 + 39*s13*s23 + 2*s23^2) + s12^2*(9*s13^3 + 
                64*s13^2*s23 + 95*s13*s23^2 - 2*s23^3) + 10*s13*s23*(s13^3 + 
                3*s13^2*s23 + s13*s23^2 - s23^3) + s12*(9*s13^4 + 
                37*s13^3*s23 + 87*s13^2*s23^2 + 37*s13*s23^3 - 2*s23^4)) + 
            p2q^2*p3q^4*(-72*s12^6*(s13 + s23) + s12^5*(504*s13^2 + 
                378*s13*s23 + 26*s23^2) + s12^4*(360*s13^3 + 297*s13^2*s23 + 
                449*s13*s23^2 + 295*s23^3) + s12^2*s23*(-351*s13^4 + 
                757*s13^3*s23 + 354*s13^2*s23^2 + 309*s13*s23^3 - 65*s23^4) - 
              2*s13^2*s23*(9*s13^4 - 7*s13^3*s23 - 32*s13^2*s23^2 + 
                14*s13*s23^3 + 30*s23^4) + s12^3*(-216*s13^4 + 891*s13^3*
                 s23 + 432*s13^2*s23^2 + 680*s13*s23^3 + 139*s23^4) + 
              s12*s23*(27*s13^5 - 174*s13^4*s23 + 253*s13^3*s23^2 + 
                125*s13^2*s23^3 - 422*s13*s23^4 - 7*s23^5)) + 
            p2q^4*p3q^2*(-18*s12^6*s23 + s12^5*s23*(27*s13 + 14*s23) - 
              s12^4*(216*s13^3 + 351*s13^2*s23 + 174*s13*s23^2 - 64*s23^3) + 
              s12^3*(360*s13^4 + 891*s13^3*s23 + 757*s13^2*s23^2 + 
                253*s13*s23^3 - 28*s23^4) + s12*s13*(-72*s13^5 + 
                378*s13^4*s23 + 449*s13^3*s23^2 + 680*s13^2*s23^3 + 
                309*s13*s23^4 - 422*s23^5) + s12^2*(504*s13^5 + 297*s13^4*
                 s23 + 432*s13^3*s23^2 + 354*s13^2*s23^3 + 125*s13*s23^4 - 
                60*s23^5) + s13*s23*(-72*s13^5 + 26*s13^4*s23 + 295*s13^3*
                 s23^2 + 139*s13^2*s23^3 - 65*s13*s23^4 - 7*s23^5)) + 
            p2q*p3q^5*(-36*s12^6*(4*s13 + s23) + s12^5*(-72*s13^2 - 
                99*s13*s23 + 17*s23^2) + 2*s13^2*s23^2*(4*s13^3 + 
                4*s13^2*s23 - 7*s13*s23^2 - 7*s23^3) + 2*s12^3*s23*(
                117*s13^3 + 26*s13^2*s23 + 294*s13*s23^2 + 82*s23^3) + 
              2*s12^4*(36*s13^3 - 99*s13^2*s23 + 125*s13*s23^2 + 93*s23^3) + 
              2*s12^2*s23*(9*s13^4 + 150*s13^3*s23 + 109*s13^2*s23^2 + 
                149*s13*s23^3 + 21*s23^4) + s12*s23*(9*s13^5 + 21*s13^4*s23 + 
                140*s13^3*s23^2 + 50*s13^2*s23^3 - 93*s13*s23^4 + 
                11*s23^5)) + p2q^5*p3q*(s12^5*s23*(9*s13 + 8*s23) + 
              s12^4*s23*(18*s13^2 + 21*s13*s23 + 8*s23^2) + 
              2*s12^3*(36*s13^4 + 117*s13^3*s23 + 150*s13^2*s23^2 + 
                70*s13*s23^3 - 7*s23^4) + s12*s13*(-144*s13^5 - 
                99*s13^4*s23 + 250*s13^3*s23^2 + 588*s13^2*s23^3 + 
                298*s13*s23^4 - 93*s23^5) - 2*s12^2*(36*s13^5 + 
                99*s13^4*s23 - 26*s13^3*s23^2 - 109*s13^2*s23^3 - 
                25*s13*s23^4 + 7*s23^5) + s13*s23*(-36*s13^5 + 17*s13^4*s23 + 
                186*s13^3*s23^2 + 164*s13^2*s23^3 + 42*s13*s23^4 + 
                11*s23^5)) - 2*p2q^3*p3q^3*(27*s12^6*s23 - s12^5*(108*s13^2 + 
                99*s13*s23 + 13*s23^2) + s12^4*(324*s13^3 + 513*s13^2*s23 + 
                203*s13*s23^2 - 97*s23^3) + s12^3*(324*s13^4 + 198*s13^3*
                 s23 + 242*s13^2*s23^2 + 33*s13*s23^3 + 7*s23^4) + 
              s13*s23*(27*s13^5 - 13*s13^4*s23 - 97*s13^3*s23^2 + 
                7*s13^2*s23^3 + 73*s13*s23^4 + 9*s23^5) + s12*s23*(
                -99*s13^5 + 203*s13^4*s23 + 33*s13^3*s23^2 + 37*s13^2*s23^3 + 
                366*s13*s23^4 + 9*s23^5) + s12^2*(-108*s13^5 + 513*s13^4*
                 s23 + 242*s13^3*s23^2 + 200*s13^2*s23^3 + 37*s13*s23^4 + 
                73*s23^5))) + p1q^2*(p2q^5*s23*(2*s12*s13*(28*s13 - 29*s23)*
               s23*(s13 + s23)^2 + s12^4*(9*s13^2 + s13*s23 - 10*s23^2) + 
              s13*s23*(s13 + s23)^2*(s13^2 - 4*s13*s23 + s23^2) + 
              2*s12^3*(9*s13^3 + 10*s13^2*s23 - 9*s13*s23^2 - 10*s23^3) + 
              s12^2*(9*s13^4 + 74*s13^3*s23 + 3*s13^2*s23^2 - 78*s13*s23^3 - 
                10*s23^4)) + p3q^5*s23*(s12^5*s23 - 10*s13^2*s23^2*
               (s13 + s23)^2 + s12^4*(9*s13^2 + 56*s13*s23 - 2*s23^2) + 
              2*s12^3*(9*s13^3 + 37*s13^2*s23 + 27*s13*s23^2 - 3*s23^3) + 
              s12^2*(9*s13^4 + 20*s13^3*s23 + 3*s13^2*s23^2 - 60*s13*s23^3 - 
                2*s23^4) + s12*s23*(s13^4 - 18*s13^3*s23 - 78*s13^2*s23^2 - 
                58*s13*s23^3 + s23^4)) + p2q*p3q^4*(-72*s12^6*s13 + 
              2*s12^5*(36*s13^2 + 117*s13*s23 + 55*s23^2) + s12^3*s23*(
                567*s13^3 + 420*s13^2*s23 + 406*s13*s23^2 - 93*s23^3) + 
              s12^4*(144*s13^3 + 99*s13^2*s23 + 573*s13*s23^2 + 149*s23^3) + 
              s12^2*s23*(81*s13^4 + 693*s13^3*s23 + 234*s13^2*s23^2 - 
                259*s13*s23^3 - 157*s23^4) + 2*s13*s23^2*(14*s13^4 + 
                6*s13^3*s23 - 33*s13^2*s23^2 - 19*s13*s23^3 + 6*s23^4) + 
              s12*s23*(27*s13^5 + 80*s13^4*s23 + 235*s13^3*s23^2 - 
                161*s13^2*s23^3 - 398*s13*s23^4 - 25*s23^5)) + 
            p2q^2*p3q^3*(2*s12^5*(144*s13^2 + 216*s13*s23 + 91*s23^2) - 
              6*s12^4*(12*s13^3 + 39*s13^2*s23 - 56*s13*s23^2 - 37*s23^3) + 
              s12^3*(-360*s13^4 + 657*s13^3*s23 + 515*s13^2*s23^2 + 
                301*s13*s23^3 - 195*s23^4) - 2*s12^2*s23*(270*s13^4 - 
                394*s13^3*s23 - 202*s13^2*s23^2 + 193*s13*s23^3 + 
                109*s23^4) + 2*s23^2*(55*s13^5 + 51*s13^4*s23 - 
                86*s13^3*s23^2 - 59*s13^2*s23^3 + 33*s13*s23^4 + 10*s23^5) + 
              s12*s23*(81*s13^5 - 147*s13^4*s23 + 220*s13^3*s23^2 - 
                288*s13^2*s23^3 - 771*s13*s23^4 + 37*s23^5)) + 
            p2q^3*p3q^2*(s12^5*s23*(81*s13 + 110*s23) - 3*s12^4*(120*s13^3 + 
                180*s13^2*s23 + 49*s13*s23^2 - 34*s23^3) + s12^3*(-72*s13^4 + 
                657*s13^3*s23 + 788*s13^2*s23^2 + 220*s13*s23^3 - 
                172*s23^4) + s12^2*(288*s13^5 - 234*s13^4*s23 + 515*s13^3*
                 s23^2 + 404*s13^2*s23^3 - 288*s13*s23^4 - 118*s23^5) + 
              s23^2*(182*s13^5 + 222*s13^4*s23 - 195*s13^3*s23^2 - 
                218*s13^2*s23^3 + 37*s13*s23^4 + 20*s23^5) + 
              s12*s23*(432*s13^5 + 336*s13^4*s23 + 301*s13^3*s23^2 - 
                386*s13^2*s23^3 - 771*s13*s23^4 + 66*s23^5)) + 
            p2q^4*p3q*(s12^5*s23*(27*s13 + 28*s23) + s12^4*s23*(81*s13^2 + 
                80*s13*s23 + 12*s23^2) + s12^3*(144*s13^4 + 567*s13^3*s23 + 
                693*s13^2*s23^2 + 235*s13*s23^3 - 66*s23^4) + 
              s13*s23^2*(110*s13^4 + 149*s13^3*s23 - 93*s13^2*s23^2 - 
                157*s13*s23^3 - 25*s23^4) + s12^2*(72*s13^5 + 99*s13^4*s23 + 
                420*s13^3*s23^2 + 234*s13^2*s23^3 - 161*s13*s23^4 - 
                38*s23^5) + s12*(-72*s13^6 + 234*s13^5*s23 + 573*s13^4*
                 s23^2 + 406*s13^3*s23^3 - 259*s13^2*s23^4 - 398*s13*s23^5 + 
                12*s23^6)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(p3q^3*s12*(26*s12^3 - s13*(s13 - 3*s23)*
             s23 + s12^2*(-11*s13 + 28*s23) - s12*(s13^2 - 2*s23^2)) + 
          p2q^3*s13*(8*s12^2*(s13 + s23) + s13*(-s13^2 + s13*s23 + 2*s23^2) - 
            s12*(29*s13^2 + 54*s13*s23 + 24*s23^2)) + 
          p1q^3*(s23^2*(-s13^2 + s13*s23 + 2*s23^2) + 
            s12^2*(36*s13^2 + 63*s13*s23 + 26*s23^2) + 
            s12*s23*(27*s13^2 + 56*s13*s23 + 28*s23^2)) + 
          p2q*p3q^2*(8*s12^4 - s12^3*(81*s13 + 34*s23) + 
            s12^2*(21*s13^2 - 28*s13*s23 - 44*s23^2) + 
            s13*s23*(s13^2 - s13*s23 - 2*s23^2) + 
            s12*(2*s13^3 - 2*s13^2*s23 + 3*s13*s23^2 - 2*s23^3)) + 
          p2q^2*p3q*(-8*s12^3*(2*s13 + s23) + s12^2*(84*s13^2 + 88*s13*s23 + 
              8*s23^2) + s13*(-s13^3 + 2*s13^2*s23 + s13*s23^2 - 2*s23^3) + 
            s12*(-9*s13^3 - s13^2*s23 + 30*s13*s23^2 + 16*s23^3)) + 
          p1q*(p3q^2*(26*s12^4 - 3*s13*s23^2*(s13 + s23) - 2*s12^3*(37*s13 + 
                12*s23) + s12^2*(8*s13^2 - 45*s13*s23 - 54*s23^2) + 
              s12*s23*(-3*s13^2 + 2*s13*s23 - 4*s23^2)) + 
            p2q^2*(-(s13*(s13 - 2*s23)^2*(s13 + s23)) + s12^2*(53*s13^2 + 
                78*s13*s23 + 24*s23^2) + s12*(-56*s13^3 - 81*s13^2*s23 + 
                2*s13*s23^2 + 24*s23^3)) + p2q*p3q*(5*s13^3*s23 - 
              3*s13*s23^3 + 2*s23^4 - s12^3*(79*s13 + 58*s23) + 
              s12^2*(130*s13^2 + 111*s13*s23 - 18*s23^2) + s12*(-7*s13^3 + 
                30*s13^2*s23 + 91*s13*s23^2 + 42*s23^3))) + 
          p1q^2*(p3q*(-(s12^3*(63*s13 + 52*s23)) + 3*s12^2*(15*s13^2 + 
                6*s13*s23 - 10*s23^2) + 2*s23^2*(-2*s13^2 - s13*s23 + 
                s23^2) + s12*s23*(25*s13^2 + 55*s13*s23 + 24*s23^2)) + 
            p2q*(s12^2*(81*s13^2 + 133*s13*s23 + 50*s23^2) + s23*(2*s13^3 - 
                3*s13^2*s23 - 3*s13*s23^2 + 2*s23^3) + s12*(-27*s13^3 + 
                82*s13*s23^2 + 52*s23^3)))))/(6*(p1q + p2q + p3q)*s12*s13*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (ep*(s12 + s13 + s23)*(p1q^4*s23*(p2q^3*s23^3*(s12^3 + 
              s12*(s13 + s23)^2 + s13*(s13 + s23)^2 + s12^2*(s13 + 2*s23)) + 
            p3q^3*s23^2*(s12*(9*s13 - 8*s23)*(s13 + s23)^2 + 
              s13*s23*(s13 + s23)^2 - s12^3*(9*s13 + 8*s23) - 
              s12^2*s23*(17*s13 + 16*s23)) + p2q*p3q^2*
             (-36*s12^4*s13*(s13 + s23) + s12*s23^2*(18*s13^3 + 
                33*s13^2*s23 + 6*s13*s23^2 - 7*s23^3) + s23^3*(s13^3 + 
                10*s13^2*s23 + 11*s13*s23^2 + 2*s23^3) + s12^2*s23*(
                36*s13^3 + 62*s13^2*s23 + 51*s13*s23^2 + 28*s23^3) + 
              s12^3*(36*s13^3 + 36*s13^2*s23 + 36*s13*s23^2 + 37*s23^3)) + 
            p2q^2*p3q*(s23^3*(s13^3 + 10*s13^2*s23 + 11*s13*s23^2 + 
                2*s23^3) + s12^3*(36*s13^3 + 72*s13^2*s23 + 72*s13*s23^2 + 
                37*s23^3) - s12*s23*(36*s13^4 + 90*s13^3*s23 + 75*s13^2*
                 s23^2 + 30*s13*s23^3 + 7*s23^4) + s12^2*(-36*s13^4 - 
                72*s13^3*s23 - 46*s13^2*s23^2 + 15*s13*s23^3 + 28*s23^4))) - 
          (p2q + p3q)*(p2q^6*s13^2*(s12 + s13)*s23^2*(s12^2 - 
              (s13 + s23)^2) + p3q^6*s12^2*s23*(s12^3*(9*s13 + 8*s23) + 
              s13*s23*(s13^2 - s23^2) + s12^2*(18*s13^2 + 17*s13*s23 + 
                16*s23^2) + s12*(9*s13^3 + 10*s13^2*s23 + 7*s13*s23^2 + 
                8*s23^3)) + p2q^2*p3q^4*(36*s12^6*s23 - 2*s12^5*(72*s13^2 + 
                72*s13*s23 + 13*s23^2) + s13^2*s23^2*(s13^3 - 2*s13^2*s23 - 
                s13*s23^2 + 2*s23^3) - 3*s12^4*(48*s13^3 + 78*s13^2*s23 + 
                61*s13*s23^2 + 16*s23^3) - s12^3*s23*(207*s13^3 + 
                233*s13^2*s23 + 203*s13*s23^2 + 18*s23^3) - s12^2*s23^2*(
                88*s13^3 + 92*s13^2*s23 + 55*s13*s23^2 + 32*s23^3) + 
              s12*s13*s23*(9*s13^4 + 25*s13^3*s23 + 34*s13^2*s23^2 - 
                11*s13*s23^3 - 3*s23^4)) + p2q*p3q^5*s12*
             (36*s12^5*(s13 + s23) + s12^3*s23*(72*s13^2 + 53*s13*s23 + 
                49*s23^2) + s12^4*(36*s13^2 + 81*s13*s23 + 58*s23^2) + 
              2*s13*s23^2*(-s13^3 + s13^2*s23 - s13*s23^2 + s23^3) + 
              s12^2*s23*(-27*s13^3 - 8*s13^2*s23 - 19*s13*s23^2 + 20*s23^3) - 
              s12*s23*(18*s13^4 + 41*s13^3*s23 + 21*s13^2*s23^2 + 
                9*s13*s23^3 + 7*s23^4)) + p2q^3*p3q^3*(18*s12^6*s23 - 
              6*s12^5*s23*(9*s13 + 5*s23) + 2*s12^4*(108*s13^3 + 
                153*s13^2*s23 + 75*s13*s23^2 - s23^3) + 2*s13^2*s23^2*(
                3*s13^3 - s13^2*s23 - 2*s13*s23^2 + 2*s23^3) + 
              2*s12^2*s23*(81*s13^4 + 99*s13^3*s23 + 64*s13^2*s23^2 + 
                17*s13*s23^3 - 16*s23^4) + s12*s13*s23*(9*s13^4 + 
                69*s13^3*s23 + 125*s13^2*s23^2 + 43*s13*s23^3 + 8*s23^4) + 
              s12^3*(216*s13^4 + 315*s13^3*s23 + 207*s13^2*s23^2 - 
                10*s13*s23^3 + 14*s23^4)) + 2*p2q^5*p3q*s13*
             (s12^4*s23*(9*s13 + 8*s23) + s12^3*s23*(9*s13^2 + 2*s13*s23 - 
                8*s23^2) + s13*s23^2*(2*s13^3 + 2*s13^2*s23 + s13*s23^2 + 
                s23^3) + s12^2*(18*s13^4 + 63*s13^3*s23 + 77*s13^2*s23^2 + 
                48*s13*s23^3 + 17*s23^4) + s12*(18*s13^5 + 45*s13^4*s23 + 
                49*s13^3*s23^2 + 31*s13^2*s23^3 + 9*s13*s23^4 + s23^5)) - 
            p2q^4*p3q^2*(s12^4*s23^2*(-25*s13 + 2*s23) + s12^5*s23*(36*s13 + 
                17*s23) - 2*s13^2*s23^2*(5*s13^3 + 3*s13^2*s23 + 2*s23^3) + 
              2*s12*s13*s23*(18*s13^4 + 15*s13^3*s23 - 20*s13^2*s23^2 - 
                13*s13*s23^3 - 3*s23^4) + s12^3*(144*s13^4 + 324*s13^3*s23 + 
                277*s13^2*s23^2 + 128*s13*s23^3 + s23^4) + s12^2*(144*s13^5 + 
                252*s13^4*s23 + 179*s13^3*s23^2 + 20*s13^2*s23^3 - 
                25*s13*s23^4 + 16*s23^5))) - 
          p1q^3*(p2q^4*s23^3*(s12^4 + 2*s13*(s13 - s23)*(s13 + s23)^2 + 
              s12*(3*s13 - s23)*(s13 + s23)^2 + s12^3*(3*s13 + s23) + 
              s12^2*(3*s13^2 + 6*s13*s23 - s23^2)) + p3q^4*s23^2*
             (s13*(s13 - s23)*s23*(s13 + s23)^2 - s12^4*(9*s13 + 16*s23) + 
              s12^3*(9*s13^2 + 12*s13*s23 - 16*s23^2) + s12^2*(27*s13^3 + 
                57*s13^2*s23 + 50*s13*s23^2 + 16*s23^3) + s12*(9*s13^4 + 
                12*s13^3*s23 + 15*s13^2*s23^2 + 28*s13*s23^3 + 16*s23^4)) + 
            p2q*p3q^3*(-36*s12^5*s13*(s13 + 2*s23) + s12^2*s23^2*(-10*s13^3 + 
                78*s13^2*s23 + 97*s13*s23^2 - 7*s23^3) + s12^3*s23*(
                -108*s13^3 + 44*s13^2*s23 + 156*s13*s23^2 + 41*s23^3) + 
              s12^4*(-36*s13^3 + 72*s13^2*s23 + 126*s13*s23^2 + 93*s23^3) + 
              s23^3*(3*s13^4 + 15*s13^3*s23 + s13^2*s23^2 - 13*s13*s23^3 - 
                2*s23^4) + s12*s23^2*(36*s13^4 + 42*s13^3*s23 + 
                11*s13^2*s23^2 + 62*s13*s23^3 + 43*s23^4)) + 
            p2q^2*p3q^2*(3*s12^4*(24*s13^3 + 96*s13^2*s23 + 102*s13*s23^2 + 
                43*s23^3) + s12^2*s23*(180*s13^4 + 286*s13^3*s23 + 
                258*s13^2*s23^2 + 79*s13*s23^3 - 93*s23^4) + 
              s12^3*(72*s13^4 - 36*s13^3*s23 - 2*s13^2*s23^2 + 48*s13*s23^3 - 
                19*s23^4) + s23^3*(3*s13^4 + 35*s13^3*s23 + 15*s13^2*s23^2 - 
                21*s13*s23^3 - 4*s23^4) + s12*s23^2*(126*s13^4 + 
                282*s13^3*s23 + 223*s13^2*s23^2 + 140*s13*s23^3 + 
                51*s23^4)) + p2q^3*p3q*(3*s12^4*s23^2*(12*s13 + 13*s23) + 
              s23^3*(3*s13^4 + 23*s13^3*s23 + 11*s13^2*s23^2 - 11*s13*s23^3 - 
                2*s23^4) - s12^3*(36*s13^4 + 216*s13^3*s23 + 298*s13^2*
                 s23^2 + 156*s13*s23^3 + 39*s23^4) + s12*s23*(-72*s13^5 - 
                108*s13^4*s23 + 30*s13^3*s23^2 + 115*s13^2*s23^3 + 
                80*s13*s23^4 + 23*s23^5) - s12^2*(36*s13^5 + 36*s13^4*s23 + 
                10*s13^3*s23^2 - 42*s13^2*s23^3 - 11*s13*s23^4 + 
                53*s23^5))) + p1q*(p2q^6*s13*s23^2*(s12^4 + 2*s13*(s13 - s23)*
               (s13 + s23)^2 + s12*(3*s13 - s23)*(s13 + s23)^2 + 
              s12^3*(s13 + 3*s23) + s12^2*(s13^2 + 6*s13*s23 + s23^2)) + 
            p3q^6*s12*s23*(-(s12^4*(9*s13 + 16*s23)) + s12^3*(-9*s13^2 + 
                12*s13*s23 - 16*s23^2) + s13*s23*(s13^3 + 3*s13^2*s23 + 
                s13*s23^2 - s23^3) + s12^2*(9*s13^3 + 55*s13^2*s23 + 
                50*s13*s23^2 + 16*s23^3) + s12*(9*s13^4 + 28*s13^3*s23 + 
                33*s13^2*s23^2 + 28*s13*s23^3 + 16*s23^4)) - 
            p2q*p3q^5*(36*s12^6*(2*s13 + s23) + s12^5*(36*s13^2 - 9*s13*s23 - 
                26*s23^2) + s13^2*s23^2*(s13^3 + s13^2*s23 + 5*s13*s23^2 + 
                5*s23^3) - s12^4*(36*s13^3 - 72*s13^2*s23 + 187*s13*s23^2 + 
                51*s23^3) - s12^3*s23*(72*s13^3 + 124*s13^2*s23 + 
                246*s13*s23^2 + 65*s23^3) - s12^2*s23^2*(30*s13^3 + 
                20*s13^2*s23 + 55*s13*s23^2 + 69*s23^3) + s12*s23*(9*s13^5 + 
                42*s13^4*s23 + 58*s13^3*s23^2 + 13*s13^2*s23^3 + 
                21*s13*s23^4 + 7*s23^5)) - 2*p2q^3*p3q^3*(27*s12^6*s23 - 
              2*s12^5*(27*s13^2 + 36*s13*s23 + 29*s23^2) + s13^2*s23^2*(
                5*s13^3 - 16*s13^2*s23 - 2*s13*s23^2 + 19*s23^3) + 
              s12^4*(162*s13^3 + 414*s13^2*s23 + 275*s13*s23^2 + 47*s23^3) + 
              s12^3*(162*s13^4 + 99*s13^3*s23 + 53*s13^2*s23^2 - 
                66*s13*s23^3 + 25*s23^4) + s12^2*(-54*s13^5 + 99*s13^4*s23 + 
                125*s13^3*s23^2 + 92*s13^2*s23^3 + 10*s13*s23^4 - 98*s23^5) + 
              s12*s23*(-27*s13^5 + 32*s13^4*s23 + 123*s13^3*s23^2 + 
                19*s13^2*s23^3 + 15*s13*s23^4 + 9*s23^5)) - 
            p2q^2*p3q^4*(36*s12^6*(s13 + 2*s23) - 4*s12^5*(63*s13^2 + 
                72*s13*s23 + 29*s23^2) + s12^4*(-180*s13^3 + 63*s13^2*s23 - 
                62*s13*s23^2 + 11*s23^3) + 2*s13^2*s23^2*(2*s13^3 - 
                5*s13^2*s23 + 5*s13*s23^2 + 12*s23^3) + s12^2*s23*(
                117*s13^4 + 26*s13^3*s23 + 78*s13^2*s23^2 + 42*s13*s23^3 - 
                115*s23^4) + s12^3*(108*s13^4 - 189*s13^3*s23 - 
                63*s13^2*s23^2 - 149*s13*s23^3 + 59*s23^4) + 
              s12*s23*(9*s13^5 + 111*s13^4*s23 + 188*s13^3*s23^2 + 
                28*s13^2*s23^3 + 53*s13*s23^4 + 25*s23^5)) + 
            p2q^5*p3q*(s12^5*s23*(18*s13 + 17*s23) + s12^4*s23*(18*s13^2 + 
                39*s13*s23 + 17*s23^2) + s13*s23^2*(-s13^4 + 15*s13^3*s23 + 
                11*s13^2*s23^2 - 3*s13*s23^3 + 2*s23^4) + s12^3*(36*s13^4 + 
                162*s13^3*s23 + 318*s13^2*s23^2 + 230*s13*s23^3 + 31*s23^4) + 
              s12*s13*(-72*s13^5 - 108*s13^4*s23 + 7*s13^3*s23^2 + 
                102*s13^2*s23^3 + 91*s13*s23^4 + 24*s23^5) + 
              s12^2*(-36*s13^5 - 126*s13^4*s23 - 56*s13^3*s23^2 + 
                38*s13^2*s23^3 + 23*s13*s23^4 + 31*s23^5)) + 
            p2q^4*p3q^2*(-18*s12^6*s23 + 2*s12^5*s23*(18*s13 + 25*s23) - 
              s12^4*(108*s13^3 + 234*s13^2*s23 + 183*s13*s23^2 + 26*s23^3) + 
              2*s13*s23^2*(-5*s13^4 + 17*s13^3*s23 + 11*s13^2*s23^2 - 
                10*s13*s23^3 + s23^4) + s12^3*(180*s13^4 + 702*s13^3*s23 + 
                919*s13^2*s23^2 + 577*s13*s23^3 + 62*s23^4) + 
              s12*s13*(-36*s13^5 + 90*s13^4*s23 + 251*s13^3*s23^2 + 
                203*s13^2*s23^3 + 183*s13*s23^4 + 55*s23^5) + 
              s12^2*(252*s13^5 + 360*s13^4*s23 + 441*s13^3*s23^2 + 
                336*s13^2*s23^3 + 161*s13*s23^4 + 156*s23^5))) + 
          p1q^2*(p2q^5*s23^2*(s12^4*(s13 - s23) + 2*s12*s13*(s13 - 2*s23)*
               (s13 + s23)^2 + 2*s12^3*(s13^2 - s23^2) + s13*(s13 + s23)^2*(
                s13^2 - 4*s13*s23 + s23^2) + s12^2*(2*s13^3 + 3*s13^2*s23 - 
                6*s13*s23^2 - s23^3)) - p3q^5*s23*(8*s12^5*s23 + 
              s13^2*s23^2*(s13 + s23)^2 - s12^4*(9*s13^2 + 38*s13*s23 + 
                16*s23^2) - 2*s12^3*(9*s13^3 + 28*s13^2*s23 + 27*s13*s23^2 + 
                24*s23^3) + s12^2*(-9*s13^4 - 2*s13^3*s23 + 24*s13^2*s23^2 + 
                6*s13*s23^3 - 16*s23^4) + 2*s12*s23*(4*s13^4 + 9*s13^3*s23 + 
                12*s13^2*s23^2 + 11*s13*s23^3 + 4*s23^4)) + 
            p2q*p3q^4*(-36*s12^6*s13 + 4*s12^5*(9*s13^2 + 45*s13*s23 + 
                23*s23^2) + s12^3*s23*(207*s13^3 + 186*s13^2*s23 + 
                100*s13*s23^2 + 15*s23^3) + s12^4*(72*s13^3 + 27*s13^2*s23 + 
                204*s13*s23^2 + 23*s23^3) + s13*s23^2*(s13^4 + 3*s13^3*s23 - 
                12*s13^2*s23^2 - 11*s13*s23^3 + 3*s23^4) + s12^2*s23*(
                45*s13^4 + 135*s13^3*s23 + 9*s13^2*s23^2 - 61*s13*s23^3 + 
                41*s23^4) + s12*s23*(9*s13^5 - 10*s13^4*s23 - 17*s13^3*
                 s23^2 + s13^2*s23^3 - 74*s13*s23^4 - 43*s23^5)) + 
            p2q^2*p3q^3*(4*s12^5*(36*s13^2 + 72*s13*s23 + 41*s23^2) - 
              3*s12^4*(12*s13^3 + 96*s13^2*s23 + 32*s13*s23^2 + 25*s23^3) + 
              s12^3*(-180*s13^4 + 243*s13^3*s23 + 389*s13^2*s23^2 + 
                265*s13*s23^3 + 21*s23^4) + s12^2*s23*(-126*s13^4 + 
                122*s13^3*s23 + 206*s13^2*s23^2 + 136*s13*s23^3 + 
                205*s23^4) + s23^2*(2*s13^5 + 21*s13^4*s23 - 28*s13^3*s23^2 - 
                37*s13^2*s23^3 + 12*s13*s23^4 + 2*s23^5) - 
              s12*s23*(-27*s13^5 + 57*s13^4*s23 + 122*s13^3*s23^2 - 
                18*s13^2*s23^3 + 69*s13*s23^4 + 53*s23^5)) + 
            p2q^3*p3q^2*(2*s12^5*s23*(27*s13 + 46*s23) - 3*s12^4*(60*s13^3 + 
                138*s13^2*s23 + 94*s13*s23^2 + 29*s23^3) + s12^3*(-36*s13^4 + 
                414*s13^3*s23 + 698*s13^2*s23^2 + 454*s13*s23^3 + 80*s23^4) + 
              2*s12*s23*(72*s13^5 + 96*s13^4*s23 + 2*s13^3*s23^2 - 
                13*s13^2*s23^3 - 39*s13*s23^4 - 21*s23^5) + s23^2*(2*s13^5 + 
                33*s13^4*s23 - 24*s13^3*s23^2 - 47*s13^2*s23^3 + 
                10*s13*s23^4 + 2*s23^5) + s12^2*(144*s13^5 + 54*s13^4*s23 + 
                110*s13^3*s23^2 + 134*s13^2*s23^3 + 126*s13*s23^4 + 
                215*s23^5)) + p2q^4*p3q*(s12^5*s23*(18*s13 + 19*s23) + 
              s12^4*s23*(36*s13^2 + 26*s13*s23 - 15*s23^2) + 2*s13*s23^2*(
                s13^4 + 7*s13^3*s23 - 6*s13^2*s23^2 - 11*s13*s23^3 + s23^4) + 
              s12^3*(72*s13^4 + 360*s13^3*s23 + 558*s13^2*s23^2 + 
                316*s13*s23^3 + 42*s23^4) + s12^2*(36*s13^5 + 72*s13^4*s23 + 
                186*s13^3*s23^2 + 153*s13^2*s23^3 + 46*s13*s23^4 + 
                61*s23^5) + s12*(-36*s13^6 + 54*s13^5*s23 + 249*s13^4*s23^2 + 
                226*s13^3*s23^3 + 74*s13^2*s23^4 - 20*s13*s23^5 - 
                15*s23^6)))))/(6*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
         s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - ((s12 + s13 + s23)*
         (-2*p1q^6*s23^3*(s12 + s13 + s23)*
           (-(p2q*s23*(s12^2 + s12*s23 + s13*(s13 + s23))) + 
            p3q*(-(s13*s23*(s13 + s23)) + s12^2*(9*s13 + 8*s23) + 
              s12*(-9*s13^2 + 8*s23^2))) + 2*p1q^5*s23^2*(s12 + s13 + s23)*
           (p2q^2*s23*(-s12^3 + s12^2*(-2*s13 + s23) - s12*(s13^2 + 
                4*s13*s23 - 2*s23^2) + s13*(-2*s13^2 + s13*s23 + 3*s23^2)) + 
            p2q*p3q*(-3*s12^3*s23 + s12^2*(36*s13^2 + 15*s13*s23 - 
                16*s23^2) + s13*s23*(-3*s13^2 + 2*s13*s23 + 5*s23^2) + 
              s12*(-18*s13^3 + 51*s13^2*s23 + 46*s13*s23^2 - 13*s23^3)) + 
            p3q^2*(s12^3*(9*s13 + 16*s23) + s13*s23*(-s13^2 + s13*s23 + 
                2*s23^2) - 2*s12^2*(9*s13^2 + 23*s13*s23 + 4*s23^2) - 
              s12*(9*s13^3 - 7*s13^2*s23 + 13*s13*s23^2 + 24*s23^3))) + 
          p1q^4*s23*(p2q^3*s23*(2*s12^4*(s13 - 2*s23) + s12^3*(4*s13^2 - 
                6*s13*s23 - 5*s23^2) + s12*(s13 + s23)^2*(4*s13^2 - 
                14*s13*s23 + 3*s23^2) + s13*(s13 + s23)^2*(2*s13^2 - 
                12*s13*s23 + 7*s23^2) + s12^2*(4*s13^3 - 23*s13*s23^2 + 
                2*s23^3)) - p3q^3*(16*s12^5*s23 + s13*(4*s13 - 3*s23)*s23^
                2*(s13 + s23)^2 - 2*s12^4*(9*s13^2 + 47*s13*s23 + 32*s23^2) - 
              s12^3*(36*s13^3 + 94*s13^2*s23 + 75*s13*s23^2 + 120*s23^3) + 
              s12^2*(-18*s13^4 + 50*s13^3*s23 + 162*s13^2*s23^2 + 
                129*s13*s23^3 + 16*s23^4) + s12*s23*(34*s13^4 + 
                51*s13^3*s23 + 68*s13^2*s23^2 + 107*s13*s23^3 + 56*s23^4)) + 
            p2q*p3q^2*(4*s12^5*(9*s13 + 10*s23) + s12^4*(-18*s13^2 + 
                28*s13*s23 + 112*s23^2) + s12^3*(-18*s13^3 + 48*s13^2*s23 - 
                68*s13*s23^2 + 47*s23^3) + s13*s23*(2*s13^4 - 10*s13^3*s23 - 
                15*s13^2*s23^2 + 11*s13*s23^3 + 14*s23^4) - 
              2*s12^2*(9*s13^4 + 39*s13^3*s23 - 47*s13^2*s23^2 + 
                6*s13*s23^3 + 53*s23^4) + s12*(18*s13^5 - 100*s13^4*s23 + 
                4*s13^3*s23^2 + 274*s13^2*s23^3 + 70*s13*s23^4 - 81*s23^5)) + 
            p2q^2*p3q*(2*s12^4*s23*(40*s13 + 31*s23) + s12^5*(36*s13 + 
                38*s23) + s12^3*(-54*s13^3 + 138*s13^2*s23 + 202*s13*s23^2 + 
                21*s23^3) - 2*s12^2*(36*s13^4 + 120*s13^3*s23 - 101*s13^2*
                 s23^2 - 146*s13*s23^3 + 8*s23^4) + s13*s23*(4*s13^4 - 
                14*s13^3*s23 - 25*s13^2*s23^2 + 11*s13*s23^3 + 18*s23^4) + 
              s12*(18*s13^5 - 224*s13^4*s23 - 302*s13^3*s23^2 + 114*s13^2*
                 s23^3 + 160*s13*s23^4 - 13*s23^5))) - 
          (p2q + p3q)*(p2q^6*s13^2*(s12 + s13)*s23^2*(s12^2 - 
              (s13 + s23)^2) + p3q^6*s12^2*s23*(s12^3*(9*s13 + 8*s23) + 
              s13*s23*(s13^2 - s23^2) + s12^2*(18*s13^2 + 17*s13*s23 + 
                16*s23^2) + s12*(9*s13^3 + 10*s13^2*s23 + 7*s13*s23^2 + 
                8*s23^3)) + p2q*p3q^5*s12*(36*s12^5*(s13 + s23) + 
              s12^3*s23*(36*s13^2 + 32*s13*s23 + 41*s23^2) + 
              s12^4*(36*s13^2 + 63*s13*s23 + 66*s23^2) + s13*s23^2*(
                -2*s13^3 + s13^2*s23 + s13*s23^2 + 2*s23^3) + 
              s12^2*s23*(-45*s13^3 - 38*s13^2*s23 - 9*s13*s23^2 + 4*s23^3) - 
              s12*s23*(18*s13^4 + 42*s13^3*s23 + 22*s13^2*s23^2 + 
                4*s13*s23^3 + 7*s23^4)) + p2q^3*p3q^3*(18*s12^6*s23 - 
              2*s12^5*s23*(36*s13 + 11*s23) + s13^3*s23^2*(5*s13^2 + 
                s13*s23 - 4*s23^2) + s12^4*(216*s13^3 + 342*s13^2*s23 + 
                133*s13*s23^2 - 26*s23^3) + s12^2*s13*s23*(198*s13^3 + 
                296*s13^2*s23 + 131*s13*s23^2 + 31*s23^3) + s12*s13^2*s23*(
                -9*s13^3 + 25*s13^2*s23 + 89*s13*s23^2 + 40*s23^3) + 
              s12^3*(216*s13^4 + 423*s13^3*s23 + 323*s13^2*s23^2 + 
                116*s13*s23^3 + 14*s23^4)) - p2q^4*p3q^2*
             (s12^5*s23*(36*s13 + 17*s23) + s12^4*s23*(-36*s13^2 - 
                27*s13*s23 + 10*s23^2) - s13^2*s23^2*(8*s13^3 + 9*s13^2*s23 + 
                3*s13*s23^2 + 2*s23^3) + s12^3*(144*s13^4 + 288*s13^3*s23 + 
                219*s13^2*s23^2 + 58*s13*s23^3 - 7*s23^4) + s12*s13*s23*(
                72*s13^4 + 124*s13^3*s23 + 30*s13^2*s23^2 - 17*s13*s23^3 - 
                2*s23^4) + s12^2*s13*(144*s13^4 + 288*s13^3*s23 + 
                215*s13^2*s23^2 + 87*s13*s23^3 + 15*s23^4)) + 
            p2q^2*p3q^4*(36*s12^6*s23 + s13^3*s23^2*(s13^2 - s13*s23 - 
                2*s23^2) - 2*s12^5*(72*s13^2 + 90*s13*s23 + 5*s23^2) - 
              s12^3*s23*(171*s13^3 + 215*s13^2*s23 + 129*s13*s23^2 + 
                42*s23^3) - s12^4*(144*s13^3 + 270*s13^2*s23 + 223*s13*
                 s23^2 + 72*s23^3) + s12*s13*s23*(9*s13^4 + 27*s13^3*s23 + 
                32*s13^2*s23^2 - 6*s13*s23^3 - 7*s23^4) - s12^2*s23*(
                -36*s13^4 + 12*s13^3*s23 + 69*s13^2*s23^2 + 37*s13*s23^3 + 
                16*s23^4)) + p2q^5*p3q*s13*(-2*s12^3*s23^2*(3*s13 + 4*s23) + 
              2*s12^4*s23*(9*s13 + 8*s23) + s13*s23^2*(3*s13^3 + 
                5*s13^2*s23 + 4*s13*s23^2 + 2*s23^3) + s12^2*(36*s13^4 + 
                90*s13^3*s23 + 97*s13^2*s23^2 + 50*s13*s23^3 + 10*s23^4) + 
              s12*(36*s13^5 + 72*s13^4*s23 + 50*s13^3*s23^2 + 27*s13^2*
                 s23^3 + 14*s13*s23^4 + 2*s23^5))) + 
          p1q^3*(p2q^4*s23^2*(s12^4*(4*s13 - 3*s23) + s12^3*(6*s13^2 + 
                3*s13*s23 - 5*s23^2) + s12*(s13 + s23)^2*(10*s13^2 - 
                13*s13*s23 + s23^2) + 2*s13*(s13 + s23)^2*(3*s13^2 - 
                7*s13*s23 + 2*s23^2) + s12^2*(6*s13^3 + 15*s13^2*s23 - 
                16*s13*s23^2 - s23^3)) - p3q^4*s23*(s13*(3*s13 - s23)*s23^
                2*(s13 + s23)^2 + 6*s12^5*(3*s13 + 8*s23) - s12^4*s23*(
                109*s13 + 16*s23) - s12^3*(54*s13^3 + 213*s13^2*s23 + 
                196*s13*s23^2 + 144*s23^3) + s12^2*(-36*s13^4 - 
                33*s13^3*s23 + 39*s13^2*s23^2 + 6*s13*s23^3 - 48*s23^4) + 
              s12*s23*(23*s13^4 + 42*s13^3*s23 + 61*s13^2*s23^2 + 
                74*s13*s23^3 + 32*s23^4)) + p2q*p3q^3*(-36*s12^6*s23 + 
              6*s12^5*(6*s13^2 + 27*s13*s23 + 5*s23^2) - s13*s23^3*(
                13*s13^3 + 28*s13^2*s23 + 8*s13*s23^2 - 7*s23^3) + 
              s12^4*(36*s13^3 + 126*s13^2*s23 + 294*s13*s23^2 + 251*s23^3) + 
              s12^3*s23*(90*s13^3 + 286*s13^2*s23 + 104*s13*s23^2 + 
                281*s23^3) - s12^2*s23*(90*s13^4 + 218*s13^3*s23 + 
                159*s13^2*s23^2 + 99*s13*s23^3 - 13*s23^4) - 
              s12*s23^2*(204*s13^4 + 229*s13^3*s23 - 33*s13^2*s23^2 + 
                32*s13*s23^3 + 83*s23^4)) + p2q^2*p3q^2*(-36*s12^6*s23 + 
              6*s12^5*s23*(30*s13 + 19*s23) + s12^4*(-72*s13^3 - 
                162*s13^2*s23 + 112*s13*s23^2 + 279*s23^3) + 3*s13*s23^2*(
                2*s13^4 - 3*s13^3*s23 - 13*s13^2*s23^2 - 2*s13*s23^3 + 
                6*s23^4) + s12^2*s23*(-306*s13^4 - 682*s13^3*s23 + 
                120*s13^2*s23^2 + 388*s13*s23^3 + 21*s23^4) + 
              s12^3*(-72*s13^4 - 288*s13^3*s23 + 110*s13^2*s23^2 + 
                207*s13*s23^3 + 195*s23^4) + s12*s23*(108*s13^5 - 
                320*s13^4*s23 - 603*s13^3*s23^2 + 100*s13^2*s23^3 + 
                219*s13*s23^4 - 45*s23^5)) + p2q^3*p3q*
             (72*s12^5*s23*(s13 + s23) + s12^4*s23*(-72*s13^2 + 48*s13*s23 + 
                95*s23^2) + s13*s23^2*(12*s13^4 - s13^3*s23 - 34*s13^2*
                 s23^2 - 5*s13*s23^3 + 16*s23^4) + s12^3*(36*s13^4 - 
                36*s13^3*s23 + 34*s13^2*s23^2 + 149*s13*s23^3 + 35*s23^4) + 
              s12^2*(36*s13^5 + 36*s13^4*s23 - 434*s13^3*s23^2 - 
                195*s13^2*s23^3 + 150*s13*s23^4 + s23^5) - 
              s12*s23*(-180*s13^5 + 48*s13^4*s23 + 544*s13^3*s23^2 + 
                252*s13^2*s23^3 - 49*s13*s23^4 + 11*s23^5))) + 
          p1q*(p2q^6*s13*s23^2*(s12^4 - s12^3*(s13 - 3*s23) + 
              2*s13*(2*s13 - s23)*(s13 + s23)^2 + s12*(5*s13 - s23)*
               (s13 + s23)^2 + s12^2*(-s13^2 + 6*s13*s23 + s23^2)) + 
            p3q^6*s12*s23*(-(s12^4*(27*s13 + 32*s23)) + s12^2*s13*(-9*s13^2 + 
                35*s13*s23 + 36*s23^2) - s12^3*(45*s13^2 + 22*s13*s23 + 
                48*s23^2) + s13*s23*(s13^3 + 3*s13^2*s23 + s13*s23^2 - 
                s23^3) + s12*(9*s13^4 + 26*s13^3*s23 + 33*s13^2*s23^2 + 
                30*s13*s23^3 + 16*s23^4)) - p2q^3*p3q^3*(90*s12^6*s23 - 
              2*s12^5*(54*s13^2 + 243*s13*s23 + 68*s23^2) + 
              s12^4*(324*s13^3 + 522*s13^2*s23 - 52*s13*s23^2 - 264*s23^3) + 
              s13^2*s23^2*(17*s13^3 + 6*s13^2*s23 + 6*s13*s23^2 + 17*s23^3) + 
              s12^3*(324*s13^4 + 684*s13^3*s23 + 281*s13^2*s23^2 - 
                34*s13*s23^3 - 120*s23^4) + s12*s13*s23*(-126*s13^4 + 
                101*s13^3*s23 + 542*s13^2*s23^2 + 228*s13*s23^3 - 36*s23^4) + 
              s12^2*(-108*s13^5 + 540*s13^4*s23 + 1037*s13^3*s23^2 + 
                322*s13^2*s23^3 - 96*s13*s23^4 - 82*s23^5)) + 
            p2q^2*p3q^4*(-36*s12^6*(s13 + 5*s23) + 2*s12^5*(126*s13^2 + 
                225*s13*s23 - 53*s23^2) - s13^2*s23^2*(6*s13^3 - s13^2*s23 + 
                s13*s23^2 + 8*s23^3) + s12^4*(180*s13^3 + 459*s13^2*s23 + 
                483*s13*s23^2 + 115*s23^3) + s12^2*s23*(-243*s13^4 - 
                85*s13^3*s23 + 253*s13^2*s23^2 + 139*s13*s23^3 + 85*s23^4) + 
              s12^3*(-108*s13^4 + 315*s13^3*s23 + 678*s13^2*s23^2 + 
                300*s13*s23^3 + 133*s23^4) - s12*s23*(9*s13^5 + 144*s13^4*
                 s23 + 215*s13^3*s23^2 - 6*s13^2*s23^3 - 36*s13*s23^4 + 
                7*s23^5)) - p2q*p3q^5*(36*s12^6*(2*s13 + 3*s23) + 
              9*s12^5*(4*s13^2 + 9*s13*s23 + 22*s23^2) + s13^2*s23^2*(s13^3 + 
                s13^2*s23 + 2*s13*s23^2 + 2*s23^3) - s12^3*s23*(162*s13^3 + 
                224*s13^2*s23 + 78*s13*s23^2 + 41*s23^3) + s12^4*(-36*s13^3 + 
                18*s13^2*s23 - 7*s13*s23^2 + 105*s23^3) - s12^2*s23*(
                18*s13^4 + 90*s13^3*s23 + 51*s13^2*s23^2 + 11*s13*s23^3 + 
                49*s23^4) + s12*s23*(9*s13^5 + 38*s13^4*s23 + 51*s13^3*
                 s23^2 + 21*s13^2*s23^3 + 19*s13*s23^4 + 7*s23^5)) + 
            p2q^5*p3q*(s12^5*s23*(18*s13 + 17*s23) + s12^4*s23*(-54*s13^2 - 
                29*s13*s23 + 17*s23^2) + s13*s23^3*(3*s13^3 - 4*s13^2*s23 - 
                5*s13*s23^2 + 2*s23^3) + s12^3*(36*s13^4 + 126*s13^3*s23 + 
                153*s13^2*s23^2 + 84*s13*s23^3 + 7*s23^4) + 
              s12^2*(-36*s13^5 + 18*s13^4*s23 + 35*s13^3*s23^2 + 
                33*s13^2*s23^3 + 33*s13*s23^4 + 7*s23^5) + 
              s12*s13*(-72*s13^5 + 196*s13^3*s23^2 + 123*s13^2*s23^3 + 
                11*s13*s23^4 + 8*s23^5)) + p2q^4*p3q^2*(-18*s12^6*s23 + 
              12*s12^5*s23*(12*s13 + 7*s23) - 2*s12^4*(54*s13^3 + 
                216*s13^2*s23 + 108*s13*s23^2 - 41*s23^3) - s13*s23^2*(
                16*s13^4 + 11*s13^3*s23 + 11*s13^2*s23^2 + 14*s13*s23^3 - 
                2*s23^4) + 2*s12^3*(90*s13^4 + 81*s13^3*s23 + 43*s13^2*
                 s23^2 + 14*s13*s23^3 + 4*s23^4) + s12*s13*(-36*s13^5 + 
                270*s13^4*s23 + 438*s13^3*s23^2 - 42*s13^2*s23^3 - 
                131*s13*s23^4 + 18*s23^5) + s12^2*(252*s13^5 + 306*s13^4*
                 s23 - 132*s13^3*s23^2 - 107*s13^2*s23^3 + 60*s13*s23^4 + 
                28*s23^5))) + p1q^2*(p2q^5*s23^2*(s12^4*(3*s13 - s23) + 
              2*s12*s13*(5*s13 - 3*s23)*(s13 + s23)^2 + 2*s12^3*(s13^2 + 
                3*s13*s23 - s23^2) + s13*(s13 + s23)^2*(7*s13^2 - 8*s13*s23 + 
                s23^2) + s12^2*(2*s13^3 + 15*s13^2*s23 - 4*s13*s23^2 - 
                s23^3)) - p3q^5*s23*(s13^2*s23^2*(s13 + s23)^2 + 
              4*s12^5*(9*s13 + 14*s23) + s12^4*(45*s13^2 - 28*s13*s23 + 
                48*s23^2) - 2*s12^3*(9*s13^3 + 73*s13^2*s23 + 70*s13*s23^2 + 
                32*s23^3) + 2*s12*s23*(3*s13^4 + 6*s13^3*s23 + 11*s13^2*
                 s23^2 + 12*s13*s23^3 + 4*s23^4) - s12^2*(27*s13^4 + 
                56*s13^3*s23 + 42*s13^2*s23^2 + 52*s13*s23^3 + 48*s23^4)) - 
            p2q^3*p3q^2*(36*s12^6*s23 - 6*s12^5*s23*(51*s13 + 32*s23) + 
              s12^4*(180*s13^3 + 468*s13^2*s23 - 29*s13*s23^2 - 313*s23^3) + 
              s12^3*(36*s13^4 + 378*s13^3*s23 + 50*s13^2*s23^2 - 
                223*s13*s23^3 - 180*s23^4) + s13*s23^2*(2*s13^4 + 
                2*s13^3*s23 + 34*s13^2*s23^2 + 25*s13*s23^3 - 9*s23^4) + 
              s12^2*(-144*s13^5 + 180*s13^4*s23 + 915*s13^3*s23^2 + 
                256*s13^2*s23^3 - 294*s13*s23^4 - 81*s23^5) + 
              s12*s23*(-360*s13^5 - 122*s13^4*s23 + 672*s13^3*s23^2 + 
                302*s13^2*s23^3 - 91*s13*s23^4 + 14*s23^5)) + 
            p2q^2*p3q^3*(-144*s12^6*s23 + 2*s12^5*(72*s13^2 + 243*s13*s23 + 
                17*s23^2) + s12^4*(-36*s13^3 + 54*s13^2*s23 + 374*s13*s23^2 + 
                331*s23^3) - s13*s23^2*(6*s13^4 + 11*s13^3*s23 + 
                36*s13^2*s23^2 + 27*s13*s23^3 - 4*s23^4) + s12^2*s23*(
                -576*s13^4 - 842*s13^3*s23 - 31*s13^2*s23^2 + 256*s13*s23^3 + 
                137*s23^4) + s12^3*(-180*s13^4 - 225*s13^3*s23 + 
                336*s13^2*s23^2 + 255*s13*s23^3 + 317*s23^4) - 
              s12*s23*(-45*s13^5 + 376*s13^4*s23 + 677*s13^3*s23^2 + 
                84*s13^2*s23^3 - 109*s13*s23^4 + 27*s23^5)) + 
            p2q*p3q^4*(-36*s12^6*(s13 + 3*s23) + 2*s12^5*(18*s13^2 + 
                63*s13*s23 - 67*s23^2) + s12^4*(72*s13^3 + 225*s13^2*s23 + 
                359*s13*s23^2 + 85*s23^3) + s12^3*s23*(315*s13^3 + 
                646*s13^2*s23 + 330*s13*s23^2 + 247*s23^3) - 
              s13*s23^2*(s13^4 + 3*s13^3*s23 + 10*s13^2*s23^2 + 6*s13*s23^3 - 
                2*s23^4) + s12^2*s23*(-9*s13^4 + 116*s13^3*s23 + 
                130*s13^2*s23^2 + 49*s13*s23^3 + 99*s23^4) - 
              s12*s23*(9*s13^5 + 110*s13^4*s23 + 124*s13^3*s23^2 + 
                5*s13^2*s23^3 + 34*s13*s23^4 + 37*s23^5)) + 
            p2q^4*p3q*(s12^5*s23*(54*s13 + 53*s23) + s12^4*s23*(-108*s13^2 - 
                38*s13*s23 + 51*s23^2) + s13*s23^2*(10*s13^4 + 13*s13^3*s23 - 
                14*s13^2*s23^2 - 9*s13*s23^3 + 8*s23^4) + s12^3*(72*s13^4 + 
                144*s13^3*s23 + 125*s13^2*s23^2 + 83*s13*s23^3 + 8*s23^4) + 
              s12^2*(36*s13^5 + 216*s13^4*s23 - 20*s13^3*s23^2 - 
                95*s13^2*s23^3 + 40*s13*s23^4 + 3*s23^5) - s12*(36*s13^6 - 
                234*s13^5*s23 - 386*s13^4*s23^2 + 48*s13^3*s23^3 + 
                158*s13^2*s23^4 + 7*s13*s23^5 + 7*s23^6)))))/
        (6*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p2]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*(p2q^2 + p3q^2)*(s12 + s13 + s23)^2*(-5*p3q^2*s12^2 + 
          4*(p1q + p2q)*(s13 + s23)*(p2q*s13 + p1q*s23) + 
          p3q*s12*(p1q*(5*s13 + s23) + p2q*(s13 + 5*s23))))/
        (27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23) - 
       ((2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(s12 + s13 + s23)^2*
         (-5*p3q^2*s12^2 + 4*(p1q + p2q)*(s13 + s23)*(p2q*s13 + p1q*s23) + 
          p3q*s12*(p1q*(5*s13 + s23) + p2q*(s13 + 5*s23))))/
        (27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (-1/6*(ep^2*p3q*(s12 + s13 + s23)*
          (p3q^3*s12*(s12^3 + s12^2*(29*s13 - s23) - 8*s13*(s13 - 3*s23)*
              s23 - 2*s12*(4*s13^2 - 27*s13*s23 + s23^2)) + 
           p2q^3*s13*(s12^2*(s13 + s23) + s12*(11*s13^2 - 3*s23^2) - 
             2*s13*(13*s13^2 + 14*s13*s23 + s23^2)) - 
           p1q^3*(s12^2*(36*s13^2 + 27*s13*s23 - s23^2) + 
             2*s23^2*(13*s13^2 + 14*s13*s23 + s23^2) + 
             s12*s23*(63*s13^2 + 56*s13*s23 + s23^2)) + 
           p2q*p3q^2*(s12^4 + s12^3*(9*s13 - 2*s23) + 8*s13*s23*
              (s13^2 - s13*s23 - 2*s23^2) - s12^2*(84*s13^2 - s13*s23 + s23^
                2) + 2*s12*(8*s13^3 - 44*s13^2*s23 - 15*s13*s23^2 + s23^3)) + 
           p2q^2*p3q*(-(s12^3*(2*s13 + s23)) + s12^2*(-21*s13^2 + 2*s13*s23 + 
               s23^2) + 2*s13*(-4*s13^3 + 17*s13^2*s23 + 22*s13*s23^2 + s23^
                3) + s12*(81*s13^3 + 28*s13^2*s23 - 3*s13*s23^2 + 2*s23^3)) + 
           p1q^2*(p3q*(s12^3*(27*s13 - 2*s23) - 2*s23^2*(25*s13^2 + 
                 26*s13*s23 + s23^2) + s12^2*(-81*s13^2 + 3*s23^2) + s12*s23*
                (-133*s13^2 - 82*s13*s23 + 3*s23^2)) + 
             p2q*(s12^2*(-45*s13^2 - 25*s13*s23 + 4*s23^2) - 2*s23*
                (-26*s13^3 - 15*s13^2*s23 + 12*s13*s23^2 + s23^3) + s12*
                (63*s13^3 - 18*s13^2*s23 - 55*s13*s23^2 + 2*s23^3))) + 
           p1q*(p3q^2*(s12^4 + s12^3*(56*s13 - 3*s23) - 24*s13*s23^2*
                (s13 + s23) + s12^2*s13*(-53*s13 + 81*s23) - 2*s12*s23*
                (39*s13^2 + s13*s23 - 2*s23^2)) + p2q*p3q*
              (s12^3*(7*s13 - 5*s23) - 10*s12^2*s13*(13*s13 + 3*s23) - 2*s23*
                (-29*s13^3 - 9*s13^2*s23 + 21*s13*s23^2 + s23^3) + s12*
                (79*s13^3 - 111*s13^2*s23 - 91*s13*s23^2 + 3*s23^3)) + 
             p2q^2*(-26*s13^4 + 24*s13^3*s23 + 54*s13^2*s23^2 + 4*s13*s23^3 + 
               s12^2*(-8*s13^2 + 3*s13*s23 + 3*s23^2) + s12*(74*s13^3 + 
                 45*s13^2*s23 - 2*s13*s23^2 + 3*s23^3)))))/
         ((p1q + p2q + p3q)*s12*s13*(-(p3q^2*s12*(s12 + s23)) - 
           p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
           p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
           p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
            (2*s13 + s23))) - ((s12 + s13 + s23)*
         (2*p1q^6*s23^3*(s12 + s13 + s23)*(p3q*s23*(s12^2 + s12*s23 + 
              s13*(s13 + s23)) + p2q*(-8*s13*s23*(s13 + s23) + 
              s12^2*(9*s13 + s23) + s12*(-9*s13^2 + s23^2))) - 
          2*p1q^5*s23^2*(s12 + s13 + s23)*(p3q^2*s23*(2*s12^3 + 
              s12^2*(s13 - s23) + s12*(2*s13^2 + 4*s13*s23 - 3*s23^2) + 
              s13*(s13^2 - s13*s23 - 2*s23^2)) + p2q*p3q*
             (3*s12^3*(6*s13 + s23) - s12^2*(36*s13^2 + 51*s13*s23 + 
                2*s23^2) - s12*s23*(15*s13^2 + 46*s13*s23 + 5*s23^2) + 
              s13*s23*(3*s13^2 + 16*s13*s23 + 13*s23^2)) + 
            p2q^2*(s12^3*(9*s13 + s23) + s12^2*(18*s13^2 - 7*s13*s23 - 
                s23^2) + 8*s13*s23*(-2*s13^2 + s13*s23 + 3*s23^2) + 
              s12*(-9*s13^3 + 46*s13^2*s23 + 13*s13*s23^2 - 2*s23^3))) - 
          (p2q + p3q)*(-(p3q^6*s12^2*(s12 + s13)*s23^2*(s12^2 - s13^2 + 2*s12*
                s23 + s23^2)) + p2q^6*s13^2*s23*(s12*(9*s13 - s23)*
               (s13 + s23)^2 + 8*s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 
                s23) + 2*s12^2*s13*(9*s13 + 5*s23)) + p2q^3*p3q^3*
             (s12^5*s23*(-9*s13 + 5*s23) + s12^4*(216*s13^3 + 198*s13^2*s23 + 
                25*s13*s23^2 + s23^3) + 2*s13^3*s23*(9*s13^3 - 11*s13^2*s23 - 
                13*s13*s23^2 + 7*s23^3) + s12*s13^2*s23*(-72*s13^3 + 
                133*s13^2*s23 + 116*s13*s23^2 + 31*s23^3) + s12^2*s13*s23*(
                342*s13^3 + 323*s13^2*s23 + 131*s13*s23^2 + 40*s23^3) + 
              s12^3*(216*s13^4 + 423*s13^3*s23 + 296*s13^2*s23^2 + 
                89*s13*s23^3 - 4*s23^4)) - p2q^2*p3q^4*
             (s13^3*s23^2*(17*s13^2 + 10*s13*s23 - 7*s23^2) + 
              8*s12^5*(18*s13^2 + 9*s13*s23 - s23^2) + s12^4*(144*s13^3 + 
                288*s13^2*s23 + 124*s13*s23^2 - 9*s23^3) + s12^3*s23*(
                288*s13^3 + 215*s13^2*s23 + 30*s13*s23^2 - 3*s23^3) + 
              s12^2*s23*(-36*s13^4 + 219*s13^3*s23 + 87*s13^2*s23^2 - 
                17*s13*s23^3 - 2*s23^4) + s12*s13*s23*(36*s13^4 - 
                27*s13^3*s23 + 58*s13^2*s23^2 + 15*s13*s23^3 - 2*s23^4)) + 
            p2q*p3q^5*s12*(36*s12^5*s13 + 5*s12^3*s23*(18*s13^2 + 
                10*s13*s23 + s23^2) + 3*s12^4*(12*s13^2 + 24*s13*s23 + 
                s23^2) + s12^2*s23^2*(97*s13^2 + 27*s13*s23 + 4*s23^2) + 
              2*s13*s23^2*(8*s13^3 - 4*s13^2*s23 + 5*s13*s23^2 + s23^3) + 
              2*s12*s23*(9*s13^4 - 3*s13^3*s23 + 25*s13^2*s23^2 + 
                7*s13*s23^3 + s23^4)) + p2q^4*p3q^2*(s12^5*s23*(9*s13 + 
                s23) + s12^4*s23*(36*s13^2 + 27*s13*s23 - s23^2) + 
              2*s13^2*s23*(18*s13^4 - 5*s13^3*s23 - 36*s13^2*s23^2 - 
                21*s13*s23^3 - 8*s23^4) - s12^3*(144*s13^4 + 171*s13^3*s23 + 
                12*s13^2*s23^2 - 32*s13*s23^3 + 2*s23^4) - s12^2*s13*(
                144*s13^4 + 270*s13^3*s23 + 215*s13^2*s23^2 + 69*s13*s23^3 + 
                6*s23^4) - s12*s13*s23*(180*s13^4 + 223*s13^3*s23 + 
                129*s13^2*s23^2 + 37*s13*s23^3 + 7*s23^4)) + 
            p2q^5*p3q*s13*(-2*s12^4*s23*(9*s13 + s23) + s12^3*s23*(
                -45*s13^2 - 42*s13*s23 + s23^2) + s13*s23*(36*s13^4 + 
                66*s13^3*s23 + 41*s13^2*s23^2 + 4*s13*s23^3 - 7*s23^4) + 
              s12^2*(36*s13^4 + 36*s13^3*s23 - 38*s13^2*s23^2 - 
                22*s13*s23^3 + s23^4) + s12*(36*s13^5 + 63*s13^4*s23 + 
                32*s13^3*s23^2 - 9*s13^2*s23^3 - 4*s13*s23^4 + 2*s23^5))) + 
          p1q^4*s23*(p2q^3*(2*s12^4*(9*s13^2 - 17*s13*s23 - 2*s23^2) + 
              s12*s23*(s13 + s23)^2*(94*s13^2 - 113*s13*s23 + 3*s23^2) - 
              8*s13*s23*(s13 + s23)^2*(2*s13^2 - 12*s13*s23 + 7*s23^2) + 
              s12^3*(36*s13^3 - 50*s13^2*s23 - 51*s13*s23^2 - 5*s23^3) + 
              2*s12^2*(9*s13^4 + 47*s13^3*s23 - 81*s13^2*s23^2 - 
                34*s13*s23^3 + s23^4)) + p3q^3*s23*(2*s12^5 + 
              4*s12^4*(s13 - 2*s23) - s13*(4*s13 - 3*s23)*s23*(s13 + s23)^2 + 
              s12^3*(4*s13^2 - 6*s13*s23 - 15*s23^2) + s12^2*(4*s13^3 - 
                21*s13*s23^2 + 2*s23^3) + s12*(2*s13^4 - 6*s13^3*s23 - 
                23*s13^2*s23^2 - 8*s13*s23^3 + 7*s23^4)) + 
            p2q^2*p3q*(2*s12^5*(9*s13 + s23) - 2*s12^4*(9*s13^2 + 
                50*s13*s23 + 5*s23^2) - s12^3*(18*s13^3 + 78*s13^2*s23 - 
                4*s13*s23^2 + 15*s23^3) + s13*s23*(40*s13^4 + 112*s13^3*s23 + 
                47*s13^2*s23^2 - 106*s13*s23^3 - 81*s23^4) + 
              s12^2*(-18*s13^4 + 48*s13^3*s23 + 94*s13^2*s23^2 + 
                274*s13*s23^3 + 11*s23^4) + 2*s12*(18*s13^5 + 14*s13^4*s23 - 
                34*s13^3*s23^2 - 6*s13^2*s23^3 + 35*s13*s23^4 + 7*s23^5)) + 
            p2q*p3q^2*(2*s12^5*(9*s13 + 2*s23) - 2*s12^4*(36*s13^2 + 
                112*s13*s23 + 7*s23^2) + s12^2*s23*(138*s13^3 + 202*s13^2*
                 s23 + 114*s13*s23^2 + 11*s23^3) - s12^3*(54*s13^3 + 
                240*s13^2*s23 + 302*s13*s23^2 + 25*s23^3) + 
              s13*s23*(38*s13^4 + 62*s13^3*s23 + 21*s13^2*s23^2 - 
                16*s13*s23^3 - 13*s23^4) + 2*s12*(18*s13^5 + 40*s13^4*s23 + 
                101*s13^3*s23^2 + 146*s13^2*s23^3 + 80*s13*s23^4 + 
                9*s23^5))) + p1q^3*(p2q^4*s23*(s12^4*(36*s13^2 - 23*s13*s23 - 
                3*s23^2) - 16*s13*s23*(s13 + s23)^2*(3*s13^2 - 7*s13*s23 + 
                2*s23^2) + s12^3*(54*s13^3 + 33*s13^2*s23 - 42*s13*s23^2 - 
                5*s23^3) - s12*(s13 + s23)^2*(18*s13^3 - 145*s13^2*s23 + 
                76*s13*s23^2 - s23^3) - s12^2*s23*(-213*s13^3 + 
                39*s13^2*s23 + 61*s13*s23^2 + s23^3)) + p3q^4*s23^2*
             (6*s12^5 + 2*s12^4*(5*s13 - s23) - s13*(3*s13 - s23)*s23*
               (s13 + s23)^2 + s12^3*(6*s13^2 + 7*s13*s23 - 18*s23^2) + 
              3*s12^2*(2*s13^3 + 5*s13^2*s23 - 5*s13*s23^2 - 2*s23^3) + 
              s12*(4*s13^4 + 3*s13^3*s23 - 16*s13^2*s23^2 - 11*s13*s23^3 + 
                4*s23^4)) + p2q^3*p3q*(-(s12^4*s23*(90*s13^2 + 204*s13*s23 + 
                 13*s23^2)) + s12^3*(36*s13^4 + 90*s13^3*s23 - 218*s13^2*
                 s23^2 - 229*s13*s23^3 - 28*s23^4) + s13*s23*(-36*s13^5 + 
                30*s13^4*s23 + 251*s13^3*s23^2 + 281*s13^2*s23^3 + 
                13*s13*s23^4 - 83*s23^5) + s12^2*(36*s13^5 + 126*s13^4*s23 + 
                286*s13^3*s23^2 - 159*s13^2*s23^3 + 33*s13*s23^4 - 8*s23^5) + 
              s12*s23*(162*s13^5 + 294*s13^4*s23 + 104*s13^3*s23^2 - 
                99*s13^2*s23^3 - 32*s13*s23^4 + 7*s23^5)) + 
            p2q*p3q^3*(12*s12^5*(3*s13^2 + 15*s13*s23 + s23^2) + 
              s12^4*(36*s13^3 + 36*s13^2*s23 - 48*s13*s23^2 - s23^3) - 
              2*s12^3*s23*(18*s13^3 + 217*s13^2*s23 + 272*s13*s23^2 + 
                17*s23^3) + s13*s23^2*(72*s13^4 + 95*s13^3*s23 + 
                35*s13^2*s23^2 + s13*s23^3 - 11*s23^4) - s12^2*s23*(
                72*s13^4 - 34*s13^3*s23 + 195*s13^2*s23^2 + 252*s13*s23^3 + 
                5*s23^4) + s12*s23*(72*s13^5 + 48*s13^4*s23 + 149*s13^3*
                 s23^2 + 150*s13^2*s23^3 + 49*s13*s23^4 + 16*s23^5)) + 
            p2q^2*p3q^2*(6*s12^5*s23*(18*s13 + s23) - s12^4*(72*s13^3 + 
                306*s13^2*s23 + 320*s13*s23^2 + 9*s23^3) - 2*s12^2*s23*(
                81*s13^4 - 55*s13^3*s23 - 60*s13^2*s23^2 - 50*s13*s23^3 + 
                3*s23^4) - s12^3*(72*s13^4 + 288*s13^3*s23 + 682*s13^2*
                 s23^2 + 603*s13*s23^3 + 39*s23^4) + 3*s13*s23*(-12*s13^5 + 
                38*s13^4*s23 + 93*s13^3*s23^2 + 65*s13^2*s23^3 + 
                7*s13*s23^4 - 15*s23^5) + s12*s23*(180*s13^5 + 112*s13^4*
                 s23 + 207*s13^3*s23^2 + 388*s13^2*s23^3 + 219*s13*s23^4 + 
                18*s23^5))) + p1q*(p2q^6*s13*s23*(-16*s13*(2*s13 - s23)*s23*
               (s13 + s23)^2 + s12^4*(9*s13 + s23) - s12*(s13 + s23)^2*(
                27*s13^2 - 32*s13*s23 + s23^2) + s12^3*(-9*s13^2 + 
                26*s13*s23 + 3*s23^2) + s12^2*(-45*s13^3 + 35*s13^2*s23 + 
                33*s13*s23^2 + s23^3)) + p3q^6*s12*s23^2*(4*s12^4 - 
              s12^2*s13*(s13 - 9*s23) + s12^3*(5*s13 + 6*s23) + 
              s13*(s13^3 + 3*s13^2*s23 + s13*s23^2 - s23^3) - 
              s12*(s13^3 - 6*s13^2*s23 - 3*s13*s23^2 + 2*s23^3)) + 
            p2q^3*p3q^3*(s12^5*(108*s13^2 + 126*s13*s23 - 17*s23^2) - 
              s12^4*(324*s13^3 + 540*s13^2*s23 + 101*s13*s23^2 + 6*s23^3) - 
              s12^3*(324*s13^4 + 684*s13^3*s23 + 1037*s13^2*s23^2 + 
                542*s13*s23^3 + 6*s23^4) + 2*s12*s13*s23*(243*s13^4 + 
                26*s13^3*s23 + 17*s13^2*s23^2 + 48*s13*s23^3 + 18*s23^4) + 
              2*s13^2*s23*(-45*s13^4 + 68*s13^3*s23 + 132*s13^2*s23^2 + 
                60*s13*s23^3 + 41*s23^4) + s12^2*(108*s13^5 - 522*s13^4*s23 - 
                281*s13^3*s23^2 - 322*s13^2*s23^3 - 228*s13*s23^4 - 
                17*s23^5)) + p2q^2*p3q^4*(-36*s12^6*s13 + 2*s12^5*(
                126*s13^2 + 135*s13*s23 - 8*s23^2) + s12^4*(180*s13^3 + 
                306*s13^2*s23 + 438*s13*s23^2 - 11*s23^3) - 
              s12^3*(108*s13^4 - 162*s13^3*s23 + 132*s13^2*s23^2 + 
                42*s13*s23^3 + 11*s23^4) + 2*s13^2*s23*(-9*s13^4 + 
                42*s13^3*s23 + 41*s13^2*s23^2 + 4*s13*s23^3 + 14*s23^4) - 
              s12^2*s23*(432*s13^4 - 86*s13^3*s23 + 107*s13^2*s23^2 + 
                131*s13*s23^3 + 14*s23^4) + 2*s12*s23*(72*s13^5 - 
                108*s13^4*s23 + 14*s13^3*s23^2 + 30*s13^2*s23^3 + 
                9*s13*s23^4 + s23^5)) + p2q*p3q^5*(-72*s12^6*s13 - 
              36*s12^5*s13^2 + s12^3*s23*(126*s13^3 + 35*s13^2*s23 + 
                123*s13*s23^2 - 4*s23^3) + s12^4*(36*s13^3 + 18*s13^2*s23 + 
                196*s13*s23^2 + 3*s23^3) + s13^2*s23^2*(17*s13^3 + 
                17*s13^2*s23 + 7*s13*s23^2 + 7*s23^3) + s12^2*s23*(
                -54*s13^4 + 153*s13^3*s23 + 33*s13^2*s23^2 + 11*s13*s23^3 - 
                5*s23^4) + s12*s23*(18*s13^5 - 29*s13^4*s23 + 84*s13^3*
                 s23^2 + 33*s13^2*s23^3 + 8*s13*s23^4 + 2*s23^5)) - 
            p2q^5*p3q*(s12^5*s23*(9*s13 + s23) + s12^4*s23*(-18*s13^2 + 
                38*s13*s23 + s23^2) + s12^3*(-36*s13^4 - 162*s13^3*s23 - 
                90*s13^2*s23^2 + 51*s13*s23^3 + 2*s23^4) + s12^2*(36*s13^5 + 
                18*s13^4*s23 - 224*s13^3*s23^2 - 51*s13^2*s23^3 + 
                21*s13*s23^4 + 2*s23^5) + s13*s23*(108*s13^5 + 198*s13^4*
                 s23 + 105*s13^3*s23^2 - 41*s13^2*s23^3 - 49*s13*s23^4 + 
                7*s23^5) + s12*s13*(72*s13^5 + 81*s13^4*s23 - 7*s13^3*s23^2 - 
                78*s13^2*s23^3 - 11*s13*s23^4 + 19*s23^5)) + 
            p2q^4*p3q^2*(-3*s12^5*s23*(3*s13 + 2*s23) + s12^4*(-108*s13^3 - 
                243*s13^2*s23 - 144*s13*s23^2 + s23^3) + s12^3*(180*s13^4 + 
                315*s13^3*s23 - 85*s13^2*s23^2 - 215*s13*s23^3 - s23^4) + 
              s12^2*(252*s13^5 + 459*s13^4*s23 + 678*s13^3*s23^2 + 
                253*s13^2*s23^3 + 6*s13*s23^4 - 8*s23^5) + 
              s13*s23*(-180*s13^5 - 106*s13^4*s23 + 115*s13^3*s23^2 + 
                133*s13^2*s23^3 + 85*s13*s23^4 - 7*s23^5) + 
              s12*s13*(-36*s13^5 + 450*s13^4*s23 + 483*s13^3*s23^2 + 
                300*s13^2*s23^3 + 139*s13*s23^4 + 36*s23^5))) + 
          p1q^2*(p3q^5*s23^2*(7*s12^5 - s13^2*s23*(s13 + s23)^2 + 
              2*s12^4*(5*s13 + 3*s23) + 2*s12^3*(s13^2 + 7*s13*s23 - 
                4*s23^2) + s12^2*(2*s13^3 + 15*s13^2*s23 - 2*s13*s23^2 - 
                6*s23^3) + s12*(3*s13^4 + 6*s13^3*s23 - 4*s13^2*s23^2 - 
                6*s13*s23^3 + s23^4)) - p2q^5*s23*(8*s13*s23*(s13 + s23)^2*(
                7*s13^2 - 8*s13*s23 + s23^2) + s12^4*(-27*s13^2 + 6*s13*s23 + 
                s23^2) + 4*s12*s13*(s13 + s23)^2*(9*s13^2 - 25*s13*s23 + 
                6*s23^2) - 2*s12^3*(9*s13^3 + 28*s13^2*s23 - 6*s13*s23^2 - 
                s23^3) + s12^2*(45*s13^4 - 146*s13^3*s23 - 42*s13^2*s23^2 + 
                22*s13*s23^3 + s23^4)) + p2q^3*p3q^2*(3*s12^5*(15*s13 - 
                2*s23)*s23 - s12^4*(180*s13^3 + 576*s13^2*s23 + 
                376*s13*s23^2 + 11*s23^3) - s12^3*(36*s13^4 + 225*s13^3*s23 + 
                842*s13^2*s23^2 + 677*s13*s23^3 + 36*s23^4) + 
              s12^2*(144*s13^5 + 54*s13^4*s23 + 336*s13^3*s23^2 - 
                31*s13^2*s23^3 - 84*s13*s23^4 - 27*s23^5) + 
              s13*s23*(-144*s13^5 + 34*s13^4*s23 + 331*s13^3*s23^2 + 
                317*s13^2*s23^3 + 137*s13*s23^4 - 27*s23^5) + 
              s12*s23*(486*s13^5 + 374*s13^4*s23 + 255*s13^3*s23^2 + 
                256*s13^2*s23^3 + 109*s13*s23^4 + 4*s23^5)) + 
            p2q*p3q^4*(-36*s12^6*s13 + 2*s12^5*(18*s13^2 + 117*s13*s23 + 
                5*s23^2) - 2*s12^3*s23*(-72*s13^3 + 10*s13^2*s23 + 
                24*s13*s23^2 + 7*s23^3) + s12^4*(72*s13^3 + 216*s13^2*s23 + 
                386*s13*s23^2 + 13*s23^3) + s13*s23^2*(53*s13^4 + 
                51*s13^3*s23 + 8*s13^2*s23^2 + 3*s13*s23^3 - 7*s23^4) - 
              s12^2*s23*(108*s13^4 - 125*s13^3*s23 + 95*s13^2*s23^2 + 
                158*s13*s23^3 + 9*s23^4) + s12*s23*(54*s13^5 - 38*s13^4*s23 + 
                83*s13^3*s23^2 + 40*s13^2*s23^3 - 7*s13*s23^4 + 8*s23^5)) + 
            p2q^2*p3q^3*(2*s12^5*(72*s13^2 + 180*s13*s23 - s23^2) - 
              2*s12^4*(18*s13^3 + 90*s13^2*s23 - 61*s13*s23^2 + s23^3) - 
              s12^2*s23*(468*s13^4 + 50*s13^3*s23 + 256*s13^2*s23^2 + 
                302*s13*s23^3 + 25*s23^4) - s12^3*(180*s13^4 + 378*s13^3*
                 s23 + 915*s13^2*s23^2 + 672*s13*s23^3 + 34*s23^4) + 
              s13*s23*(-36*s13^5 + 192*s13^4*s23 + 313*s13^3*s23^2 + 
                180*s13^2*s23^3 + 81*s13*s23^4 - 14*s23^5) + 
              s12*s23*(306*s13^5 + 29*s13^4*s23 + 223*s13^3*s23^2 + 
                294*s13^2*s23^3 + 91*s13*s23^4 + 9*s23^5)) + 
            p2q^4*p3q*(-(s12^5*s23*(9*s13 + s23)) - s12^4*s23*(9*s13^2 + 
                110*s13*s23 + 3*s23^2) + s12^3*(72*s13^4 + 315*s13^3*s23 + 
                116*s13^2*s23^2 - 124*s13*s23^3 - 10*s23^4) + 
              s13*s23*(-108*s13^5 - 134*s13^4*s23 + 85*s13^3*s23^2 + 
                247*s13^2*s23^3 + 99*s13*s23^4 - 37*s23^5) + 
              s12^2*(36*s13^5 + 225*s13^4*s23 + 646*s13^3*s23^2 + 
                130*s13^2*s23^3 - 5*s13*s23^4 - 6*s23^5) + s12*(-36*s13^6 + 
                126*s13^5*s23 + 359*s13^4*s23^2 + 330*s13^3*s23^3 + 
                49*s13^2*s23^4 - 34*s13*s23^5 + 2*s23^6)))))/
        (6*p2q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + (ep*(s12 + s13 + s23)*
         (p1q^4*s23*(p2q^3*s23^2*(-(s12*(9*s13 - s23)*(s13 + s23)^2) - 
              8*s13*s23*(s13 + s23)^2 + 2*s12^2*s23*(5*s13 + s23) + 
              s12^3*(9*s13 + s23)) + p3q^3*s23^3*(s12^3 + s12*(s13 + s23)^2 + 
              s13*(s13 + s23)^2 + s12^2*(s13 + 2*s23)) + 
            p2q*p3q^2*(-36*s12^4*s13*(s13 + s23) + s12^3*(36*s13^3 - 
                72*s13^2*s23 - 90*s13*s23^2 + s23^3) + s23^3*(37*s13^3 + 
                28*s13^2*s23 - 7*s13*s23^2 + 2*s23^3) + s12^2*s23*(72*s13^3 - 
                46*s13^2*s23 - 75*s13*s23^2 + 10*s23^3) + s12*s23^2*(
                72*s13^3 + 15*s13^2*s23 - 30*s13*s23^2 + 11*s23^3)) + 
            p2q^2*p3q*(s12^3*(36*s13^3 + 36*s13^2*s23 + 18*s13*s23^2 + 
                s23^3) + s23^3*(37*s13^3 + 28*s13^2*s23 - 7*s13*s23^2 + 
                2*s23^3) + s12^2*(-36*s13^4 + 36*s13^3*s23 + 62*s13^2*s23^2 + 
                33*s13*s23^3 + 10*s23^4) + s12*s23*(-36*s13^4 + 
                36*s13^3*s23 + 51*s13^2*s23^2 + 6*s13*s23^3 + 11*s23^4))) - 
          p1q^3*(p3q^4*s23^3*(2*s12^4 + s13*(s13 - s23)*(s13 + s23)^2 + 
              s12^3*(3*s13 + 2*s23) + s12^2*(3*s13^2 + 5*s13*s23 - 2*s23^2) + 
              s12*(3*s13^3 + 6*s13^2*s23 + s13*s23^2 - 2*s23^3)) + 
            p2q^4*s23^2*(-16*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + s23) - s12*(s13 + s23)^2*(9*s13^2 - 30*s13*s23 + 
                s23^2) + s12^3*(27*s13^2 + 12*s13*s23 + s23^2) + 
              s12^2*(9*s13^3 + 57*s13^2*s23 + 15*s13*s23^2 - s23^3)) - 
            p2q*p3q^3*(36*s12^5*s13*(s13 + 2*s23) + s12^3*s23*(216*s13^3 + 
                10*s13^2*s23 - 30*s13*s23^2 - 23*s23^3) + 3*s12^4*(12*s13^3 + 
                12*s13^2*s23 + 36*s13*s23^2 - s23^3) - s12^2*s23^2*(
                -298*s13^3 + 42*s13^2*s23 + 115*s13*s23^2 + 11*s23^3) + 
              s23^3*(-39*s13^4 + 39*s13^3*s23 + 53*s13^2*s23^2 - 
                23*s13*s23^3 + 2*s23^4) + s12*s23^2*(-36*s13^4 + 
                156*s13^3*s23 - 11*s13^2*s23^2 - 80*s13*s23^3 + 11*s23^4)) + 
            p2q^2*p3q^2*(3*s12^4*(24*s13^3 + 60*s13^2*s23 + 42*s13*s23^2 + 
                s23^3) + s12*s23^2*(306*s13^4 + 48*s13^3*s23 + 79*s13^2*
                 s23^2 + 140*s13*s23^3 - 21*s23^4) + s23^3*(129*s13^4 - 
                19*s13^3*s23 - 93*s13^2*s23^2 + 51*s13*s23^3 - 4*s23^4) + 
              s12^2*s23*(288*s13^4 - 2*s13^3*s23 + 258*s13^2*s23^2 + 
                223*s13*s23^3 + 15*s23^4) + s12^3*(72*s13^4 - 36*s13^3*s23 + 
                286*s13^2*s23^2 + 282*s13*s23^3 + 35*s23^4)) + 
            p2q^3*p3q*(3*s12^4*s23^2*(12*s13 + s23) + s23^3*(93*s13^4 + 
                41*s13^3*s23 - 7*s13^2*s23^2 + 43*s13*s23^3 - 2*s23^4) + 
              s12^3*(-36*s13^4 - 108*s13^3*s23 - 10*s13^2*s23^2 + 
                42*s13*s23^3 + 15*s23^4) + s12*s23*(-72*s13^5 + 126*s13^4*
                 s23 + 156*s13^3*s23^2 + 97*s13^2*s23^3 + 62*s13*s23^4 - 
                13*s23^5) + s12^2*(-36*s13^5 + 72*s13^4*s23 + 44*s13^3*
                 s23^2 + 78*s13^2*s23^3 + 11*s13*s23^4 + s23^5))) - 
          (p2q + p3q)*(-(p3q^6*s12^2*(s12 + s13)*s23^2*(s12^2 - s13^2 + 2*s12*
                s23 + s23^2)) + p2q^6*s13^2*s23*(s12*(9*s13 - s23)*
               (s13 + s23)^2 + 8*s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 
                s23) + 2*s12^2*s13*(9*s13 + 5*s23)) - p2q^2*p3q^4*
             (s12^3*s13*s23*(324*s13^2 + 179*s13*s23 - 40*s23^2) + 
              2*s12^5*(72*s13^2 + 18*s13*s23 - 5*s23^2) + s12^2*s23^2*(
                277*s13^3 + 20*s13^2*s23 - 26*s13*s23^2 - 4*s23^3) + 
              6*s12^4*(24*s13^3 + 42*s13^2*s23 + 5*s13*s23^2 - s23^3) + 
              s13^2*s23^2*(17*s13^3 + 2*s13^2*s23 + s13*s23^2 + 16*s23^3) + 
              s12*s13*s23*(36*s13^4 - 25*s13^3*s23 + 128*s13^2*s23^2 - 
                25*s13*s23^3 - 6*s23^4)) + 2*p2q*p3q^5*s12*(18*s12^5*s13 + 
              s12^4*(18*s13^2 + 45*s13*s23 + 2*s23^2) + s12^3*s23*(63*s13^2 + 
                49*s13*s23 + 2*s23^2) + s13*s23^2*(8*s13^3 - 8*s13^2*s23 + 
                17*s13*s23^2 + s23^3) + s12^2*s23*(9*s13^3 + 77*s13^2*s23 + 
                31*s13*s23^2 + s23^3) + s12*s23*(9*s13^4 + 2*s13^3*s23 + 
                48*s13^2*s23^2 + 9*s13*s23^3 + s23^4)) + p2q^3*p3q^3*
             (3*s12^5*s23*(3*s13 + 2*s23) + s12^4*(216*s13^3 + 162*s13^2*
                 s23 + 69*s13*s23^2 - 2*s23^3) + 2*s13^2*s23*(9*s13^4 - 
                15*s13^3*s23 - s13^2*s23^2 + 7*s13*s23^3 - 16*s23^4) + 
              s12^3*(216*s13^4 + 315*s13^3*s23 + 198*s13^2*s23^2 + 
                125*s13*s23^3 - 4*s23^4) + 2*s12*s13*s23*(-27*s13^4 + 
                75*s13^3*s23 - 5*s13^2*s23^2 + 17*s13*s23^3 + 4*s23^4) + 
              s12^2*s23*(306*s13^4 + 207*s13^3*s23 + 128*s13^2*s23^2 + 
                43*s13*s23^3 + 4*s23^4)) + p2q^4*p3q^2*
             (s12^4*(25*s13 - 2*s23)*s23^2 + s12^5*s23*(9*s13 + s23) + 
              2*s13^2*s23*(18*s13^4 - 13*s13^3*s23 - 24*s13^2*s23^2 - 
                9*s13*s23^3 - 16*s23^4) - s12^3*(144*s13^4 + 207*s13^3*s23 + 
                88*s13^2*s23^2 - 34*s13*s23^3 + s23^4) - s12*s13*s23*(
                144*s13^4 + 183*s13^3*s23 + 203*s13^2*s23^2 + 55*s13*s23^3 + 
                3*s23^4) - s12^2*(144*s13^5 + 234*s13^4*s23 + 233*s13^3*
                 s23^2 + 92*s13^2*s23^3 + 11*s13*s23^4 - 2*s23^5)) + 
            p2q^5*p3q*s13*(-2*s12^4*s23*(9*s13 + s23) + s12^3*s23*(
                -27*s13^2 - 41*s13*s23 + 2*s23^2) + s13*s23*(36*s13^4 + 
                58*s13^3*s23 + 49*s13^2*s23^2 + 20*s13*s23^3 - 7*s23^4) + 
              s12^2*(36*s13^4 + 72*s13^3*s23 - 8*s13^2*s23^2 - 21*s13*s23^3 - 
                2*s23^4) + s12*(36*s13^5 + 81*s13^4*s23 + 53*s13^3*s23^2 - 
                19*s13^2*s23^3 - 9*s13*s23^4 + 2*s23^5))) + 
          p1q*(p3q^6*s12*s23^2*(2*s12^4 + s12^3*(3*s13 + 2*s23) + 
              s12^2*(s13^2 + 5*s13*s23 - 2*s23^2) + s12*(s13^3 + 
                6*s13^2*s23 + s13*s23^2 - 2*s23^3) + s13*(s13^3 + 
                3*s13^2*s23 + s13*s23^2 - s23^3)) + p2q^6*s13*s23*
             (-16*s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^4*(9*s13 + s23) - 
              s12*(s13 + s23)^2*(9*s13^2 - 30*s13*s23 + s23^2) + 
              s12^3*(9*s13^2 + 28*s13*s23 + 3*s23^2) + s12^2*(-9*s13^3 + 
                55*s13^2*s23 + 33*s13*s23^2 + s23^3)) + 
            p2q*p3q^5*(-72*s12^6*s13 - s12^5*(36*s13^2 + 108*s13*s23 + 
                s23^2) + s12^3*s23*(162*s13^3 - 56*s13^2*s23 + 102*s13*
                 s23^2 + 11*s23^3) + s12^4*(36*s13^3 - 126*s13^2*s23 + 
                7*s13*s23^2 + 15*s23^3) + s13^2*s23^2*(17*s13^3 + 
                17*s13^2*s23 + 31*s13*s23^2 + 31*s23^3) + s12^2*s23*(
                18*s13^4 + 318*s13^3*s23 + 38*s13^2*s23^2 + 91*s13*s23^3 - 
                3*s23^4) + s12*s23*(18*s13^5 + 39*s13^4*s23 + 230*s13^3*
                 s23^2 + 23*s13^2*s23^3 + 24*s13*s23^4 + 2*s23^5)) + 
            p2q^2*p3q^4*(-36*s12^6*s13 + 2*s12^5*(126*s13^2 + 45*s13*s23 - 
                5*s23^2) + s12^4*(180*s13^3 + 360*s13^2*s23 + 251*s13*s23^2 + 
                34*s23^3) + s12^2*s23*(-234*s13^4 + 919*s13^3*s23 + 
                336*s13^2*s23^2 + 183*s13*s23^3 - 20*s23^4) + 
              s12^3*(-108*s13^4 + 702*s13^3*s23 + 441*s13^2*s23^2 + 
                203*s13*s23^3 + 22*s23^4) + 2*s13^2*s23*(-9*s13^4 + 
                25*s13^3*s23 - 13*s13^2*s23^2 + 31*s13*s23^3 + 78*s23^4) + 
              s12*s23*(36*s13^5 - 183*s13^4*s23 + 577*s13^3*s23^2 + 
                161*s13^2*s23^3 + 55*s13*s23^4 + 2*s23^5)) + 
            2*p2q^3*p3q^3*(s12^5*(54*s13^2 + 27*s13*s23 - 5*s23^2) - 
              s12^4*(162*s13^3 + 99*s13^2*s23 + 32*s13*s23^2 - 16*s23^3) + 
              s12*s13*s23*(72*s13^4 - 275*s13^3*s23 + 66*s13^2*s23^2 - 
                10*s13*s23^3 - 15*s23^4) - s12^3*(162*s13^4 + 99*s13^3*s23 + 
                125*s13^2*s23^2 + 123*s13*s23^3 - 2*s23^4) + 
              s12^2*(54*s13^5 - 414*s13^4*s23 - 53*s13^3*s23^2 - 
                92*s13^2*s23^3 - 19*s13*s23^4 - 19*s23^5) - 
              s13*s23*(27*s13^5 - 58*s13^4*s23 + 47*s13^3*s23^2 + 
                25*s13^2*s23^3 - 98*s13*s23^4 + 9*s23^5)) - 
            p2q^5*p3q*(s12^5*s23*(9*s13 + s23) + s12^4*s23^2*(42*s13 + s23) + 
              s12^3*(-36*s13^4 - 72*s13^3*s23 - 30*s13^2*s23^2 + 
                58*s13*s23^3 + 5*s23^4) + s12^2*(36*s13^5 + 72*s13^4*s23 - 
                124*s13^3*s23^2 - 20*s13^2*s23^3 + 13*s13*s23^4 + 5*s23^5) + 
              s13*s23*(36*s13^5 - 26*s13^4*s23 - 51*s13^3*s23^2 - 
                65*s13^2*s23^3 - 69*s13*s23^4 + 7*s23^5) + 
              s12*s13*(72*s13^5 - 9*s13^4*s23 - 187*s13^3*s23^2 - 
                246*s13^2*s23^3 - 55*s13*s23^4 + 21*s23^5)) - 
            p2q^4*p3q^2*(s12^5*s23*(9*s13 + 4*s23) + s12^4*(108*s13^3 + 
                117*s13^2*s23 + 111*s13*s23^2 - 10*s23^3) + 
              s12^3*(-180*s13^4 - 189*s13^3*s23 + 26*s13^2*s23^2 + 
                188*s13*s23^3 + 10*s23^4) + s12^2*(-252*s13^5 + 
                63*s13^4*s23 - 63*s13^3*s23^2 + 78*s13^2*s23^3 + 
                28*s13*s23^4 + 24*s23^5) + s13*s23*(72*s13^5 - 116*s13^4*
                 s23 + 11*s13^3*s23^2 + 59*s13^2*s23^3 - 115*s13*s23^4 + 
                25*s23^5) + s12*s13*(36*s13^5 - 288*s13^4*s23 - 
                62*s13^3*s23^2 - 149*s13^2*s23^3 + 42*s13*s23^4 + 
                53*s23^5))) + p1q^2*(p3q^5*s23^2*(s12^5 + 2*s12^4*(s13 - 
                s23) - s13^2*s23*(s13 + s23)^2 + 2*s12^3*(s13^2 - 3*s23^2) + 
              s12^2*(2*s13^3 + 3*s13^2*s23 - 6*s13*s23^2 - 2*s23^3) + 
              s12*(s13^4 - 6*s13^2*s23^2 - 4*s13*s23^3 + s23^4)) - 
            p2q^5*s23*(-2*s12*s13*(19*s13 - 11*s23)*s23*(s13 + s23)^2 + 
              8*s13*s23*(s13 + s23)^2*(s13^2 - 4*s13*s23 + s23^2) + 
              s12^4*(-9*s13^2 + 8*s13*s23 + s23^2) - 2*s12^3*(9*s13^3 + 
                s13^2*s23 - 9*s13*s23^2 - s23^3) + s12^2*(-9*s13^4 - 
                56*s13^3*s23 + 24*s13^2*s23^2 + 24*s13*s23^3 + s23^4)) + 
            p2q*p3q^4*(-36*s12^6*s13 + 2*s12^5*(18*s13^2 + 27*s13*s23 + 
                s23^2) + 2*s12^3*s23*(180*s13^3 + 93*s13^2*s23 + 
                113*s13*s23^2 - 6*s23^3) + s12^4*(72*s13^3 + 72*s13^2*s23 + 
                249*s13*s23^2 + 14*s23^3) + s12^2*s23*(36*s13^4 + 
                558*s13^3*s23 + 153*s13^2*s23^2 + 74*s13*s23^3 - 22*s23^4) + 
              s13*s23^2*(19*s13^4 - 15*s13^3*s23 + 42*s13^2*s23^2 + 
                61*s13*s23^3 - 15*s23^4) + 2*s12*s23*(9*s13^5 + 
                13*s13^4*s23 + 158*s13^3*s23^2 + 23*s13^2*s23^3 - 
                10*s13*s23^4 + s23^5)) + p2q^2*p3q^3*(2*s12^5*(72*s13^2 + 
                72*s13*s23 + s23^2) + s12^4*(-36*s13^3 + 54*s13^2*s23 + 
                192*s13*s23^2 + 33*s23^3) + s12^2*s23*(-414*s13^4 + 
                698*s13^3*s23 + 134*s13^2*s23^2 - 26*s13*s23^3 - 47*s23^4) + 
              s12^3*(-180*s13^4 + 414*s13^3*s23 + 110*s13^2*s23^2 + 
                4*s13*s23^3 - 24*s23^4) + s23^2*(92*s13^5 - 87*s13^4*s23 + 
                80*s13^3*s23^2 + 215*s13^2*s23^3 - 42*s13*s23^4 + 2*s23^5) + 
              2*s12*s23*(27*s13^5 - 141*s13^4*s23 + 227*s13^3*s23^2 + 
                63*s13^2*s23^3 - 39*s13*s23^4 + 5*s23^5)) + 
            p2q^3*p3q^2*(s12^5*s23*(27*s13 + 2*s23) - 3*s12^4*(60*s13^3 + 
                42*s13^2*s23 + 19*s13*s23^2 - 7*s23^3) + s12^3*(-36*s13^4 + 
                243*s13^3*s23 + 122*s13^2*s23^2 - 122*s13*s23^3 - 28*s23^4) + 
              s12^2*(144*s13^5 - 288*s13^4*s23 + 389*s13^3*s23^2 + 
                206*s13^2*s23^3 + 18*s13*s23^4 - 37*s23^5) + 
              s23^2*(164*s13^5 - 75*s13^4*s23 + 21*s13^3*s23^2 + 
                205*s13^2*s23^3 - 53*s13*s23^4 + 2*s23^5) + 
              s12*s23*(288*s13^5 - 96*s13^4*s23 + 265*s13^3*s23^2 + 
                136*s13^2*s23^3 - 69*s13*s23^4 + 12*s23^5)) + 
            p2q^4*p3q*(s12^5*s23*(9*s13 + s23) + s12^4*s23*(45*s13^2 - 
                10*s13*s23 + 3*s23^2) + s13*s23^2*(92*s13^4 + 23*s13^3*s23 + 
                15*s13^2*s23^2 + 41*s13*s23^3 - 43*s23^4) + s12^3*(72*s13^4 + 
                207*s13^3*s23 + 135*s13^2*s23^2 - 17*s13*s23^3 - 12*s23^4) + 
              s12^2*(36*s13^5 + 27*s13^4*s23 + 186*s13^3*s23^2 + 
                9*s13^2*s23^3 + s13*s23^4 - 11*s23^5) + s12*(-36*s13^6 + 
                180*s13^5*s23 + 204*s13^4*s23^2 + 100*s13^3*s23^3 - 
                61*s13^2*s23^4 - 74*s13*s23^5 + 3*s23^6)))))/
        (6*p2q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p3]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*(p2q^2 + p3q^2)*(s12 + s13 + s23)^2*(4*p1q^2*s23*(s12 + s23) + 
          (4*p3q*s12 + 5*p2q*s13)*(-(p2q*s13) + p3q*(s12 + s23)) + 
          p1q*(4*p3q*(s12 + s23)^2 + p2q*s13*(5*s12 + s23))))/
        (27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23) - 
       ((2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(s12 + s13 + s23)^2*
         (4*p1q^2*s23*(s12 + s23) + (4*p3q*s12 + 5*p2q*s13)*
           (-(p2q*s13) + p3q*(s12 + s23)) + p1q*(4*p3q*(s12 + s23)^2 + 
            p2q*s13*(5*s12 + s23))))/(27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*
         s23))*Int[DS[k]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-3*ep*(p2q^2 + p3q^2)*(p3q*s12 + p2q*s13)*(s12 + s13 + s23)^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
        (p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23) + 
       (3*(2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(p3q*s12 + p2q*s13)*
         (s12 + s13 + s23)^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
        (p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (((s12 + s13 + s23)*(2*p1q^4*(p2q^2 - p3q^2)*(s12 - s13)*s23^3 - 
          2*p1q^3*(p2q + p3q)*s23^2*(p2q^2*(s12^2 + 2*s12*s13 - s13^2 - 
              s12*s23 + 2*s13*s23) + p3q^2*(-s12^2 + s13*(s13 - s23) + 
              2*s12*(s13 + s23)) + p2q*p3q*(2*s12^2 + s13*(2*s13 - s23) - 
              s12*(8*s13 + s23))) + (p2q + p3q)^2*
           (p2q^4*s13*s23*(3*s12^2 + 3*s12*s13 + 2*s12*s23 + s13*s23) + 
            p2q*p3q^3*(4*s12^2*s13*s23 + s13^3*s23 + s12*s13*s23*(-s13 + 
                s23) + 2*s12^3*(4*s13 + s23)) + p3q^4*s12*s23*
             (s12*(3*s13 + s23) + s13*(3*s13 + 2*s23)) + 2*p2q^2*p3q^2*
             (s12^3*s23 - 3*s12*s13^2*s23 + s13^3*s23 - s12^2*s13*(8*s13 + 
                3*s23)) + p2q^3*p3q*(s12^3*s23 - s12^2*s13*s23 + 
              2*s13^3*s23 + s12*s13*(8*s13^2 + 4*s13*s23 + s23^2))) + 
          p1q^2*s23*(p3q^4*(s13*s23*(-2*s13 + s23) + s12^2*(6*s13 + 4*s23) + 
              s12*(6*s13^2 - 3*s23^2)) + p2q^4*(s12^2*(6*s13 - 2*s23) + 
              s13*(4*s13 - 3*s23)*s23 + s12*(6*s13^2 + s23^2)) + 
            2*p2q^2*p3q^2*(2*s12^3 - s12^2*(4*s13 + 7*s23) + s13*(2*s13^2 - 
                7*s13*s23 + s23^2) + s12*(-4*s13^2 + 16*s13*s23 + s23^2)) + 
            p2q*p3q^3*(2*s12^3 - 2*s12^2*(5*s13 + s23) + s12*(-2*s13^2 + 
                8*s13*s23 - 3*s23^2) + s13*(2*s13^2 - 10*s13*s23 + 
                3*s23^2)) + p2q^3*p3q*(2*s12^3 - 2*s12^2*(s13 + 5*s23) + 
              s13*(2*s13^2 - 2*s13*s23 - 3*s23^2) + s12*(-10*s13^2 + 
                8*s13*s23 + 3*s23^2))) + p1q*(p2q + p3q)*
           (p2q^4*s23*(s12^2*(6*s13 - s23) + s13*(3*s13 - s23)*s23 + 
              2*s12*s13*(3*s13 + s23)) + p2q^3*p3q*(2*s12*s13^2*(4*s13 - 
                3*s23) + 2*s12^3*s23 - 4*s12^2*s23*(s13 + s23) + 
              s13*s23*(4*s13^2 - 2*s13*s23 - s23^2)) + p3q^4*s23*
             (-(s13^2*s23) + 3*s12^2*(2*s13 + s23) + s12*(6*s13^2 + 
                2*s13*s23 - s23^2)) + 2*p2q^2*p3q^2*(3*s12^3*s23 + 
              3*s13^2*(s13 - s23)*s23 + s12*s13*s23*(-7*s13 + 4*s23) - 
              s12^2*(8*s13^2 + 7*s13*s23 + 3*s23^2)) + p2q*p3q^3*
             (2*s13^2*(s13 - 2*s23)*s23 + 4*s12^3*(2*s13 + s23) - 
              2*s12^2*s23*(3*s13 + s23) - s12*(4*s13^2*s23 + s23^3)))))/
        (6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (ep*(s12 + s13 + s23)*(p1q^2*(p2q - p3q)*s23*
           (p2q^3*(s12 - s13)*s23^2 + p3q^3*(s12 - s13)*s23^2 + 
            2*p2q*p3q^2*(4*s12^2*s13 - s13*s23^2 + s12*s23*(2*s13 + s23)) - 
            2*p2q^2*p3q*(s13*s23^2 + s12*(4*s13^2 + 2*s13*s23 - s23^2))) + 
          (p2q + p3q)^2*(p2q^4*s13*s23*(3*s12^2 + 3*s12*s13 + 2*s12*s23 + 
              s13*s23) + p2q*p3q^3*(s13^3*s23 + 7*s12*s13*s23*(s13 + s23) + 
              2*s12^3*(4*s13 + s23) + 2*s12^2*s23*(6*s13 + s23)) + 
            p3q^4*s12*s23*(s12*(3*s13 + s23) + s13*(3*s13 + 2*s23)) + 
            2*p2q^2*p3q^2*(s12^3*s23 + s13^2*s23*(s13 + s23) + 
              s12*s13*s23*(5*s13 + 6*s23) + s12^2*(-8*s13^2 + 5*s13*s23 + 
                s23^2)) + p2q^3*p3q*(s12^3*s23 + 7*s12^2*s13*s23 + 
              2*s13^2*s23*(s13 + s23) + s12*s13*(8*s13^2 + 12*s13*s23 + 
                7*s23^2))) - p1q*(p2q + p3q)*
           (p2q^4*s23^2*(s12^2 + 2*s12*s13 + s13*(-s13 + s23)) + 
            p3q^4*s23^2*(-s12^2 + s13^2 + s12*(2*s13 + s23)) + 
            p2q*p3q^3*(-8*s12^3*s13 + 2*s12^2*s23*(2*s13 + s23) + 
              2*s13*s23^2*(2*s13 + s23) + s12*s23^2*(8*s13 + 3*s23)) + 
            4*p2q^2*p3q^2*(s13*s23^2*(s13 + s23) + s12^2*(4*s13^2 - s13*s23 + 
                s23^2) + s12*(-(s13^2*s23) + s23^3)) + p2q^3*p3q*
             (4*s12^2*s23^2 + s13*s23^2*(2*s13 + 3*s23) + s12*(-8*s13^3 + 
                4*s13^2*s23 + 8*s13*s23^2 + 2*s23^3)))))/
        (6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p2 + p3]*Eik[k - p1]] + 
     (-1/54*(ep^2*(p1q + p2q)*s23*(s12 + s13 + s23)*
          (p3q^2*s12*(10*s12 + s13) + (p1q + p2q)*(9*s13 + 10*s23)*
            (-(p2q*s13) + p1q*s23) - p3q*(p2q*s13*(s13 + 2*s23) + 
             p2q*s12*(s13 + 10*s23) + p1q*(9*s12*s13 + 20*s12*s23 + s13*
                s23))))/((p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
           (p1q + p2q)*(s13 + s23))) - (ep*(p1q + p2q)*(s12 + s13 + s23)*
         (-(p3q^5*s12^2*(9*s13 + 10*s23)) + p2q*p3q^4*s12*
           (18*s13^2 - 10*s12*s23 + 19*s13*s23) + p2q^5*s13*
           (2*s23*(s13 + s23) - s12*(9*s13 + 8*s23)) + 
          p2q^2*p3q^3*(2*s12^2*(9*s13 - 5*s23) + 2*s12*(9*s13^2 - 5*s23^2) + 
            s13*(-9*s13^2 - 9*s13*s23 + 2*s23^2)) + 
          p2q^4*p3q*(s12^2*(9*s13 - 10*s23) - 9*s12*s13*(3*s13 + 4*s23) - 
            2*s13*(9*s13^2 + 12*s13*s23 + 2*s23^2)) + p2q^3*p3q^2*
           (s12^2*(27*s13 - 20*s23) - 2*s12*s23*(19*s13 + 5*s23) - 
            2*s13*(9*s13^2 + 13*s13*s23 + 2*s23^2)) + 
          p1q^2*s23*(p3q^3*(11*s13*(s13 + s23) + 10*s12*(2*s13 + s23)) + 
            2*p2q^2*p3q*(10*s13^2 + 16*s13*s23 + 5*s23^2 + s12*(s13 + 
                5*s23)) + 2*p2q*p3q^2*(10*s13^2 + 16*s13*s23 + 5*s23^2 + 
              s12*(s13 + 5*s23)) + p2q^3*(2*s13*(s13 + s23) + 
              s12*(11*s13 + 10*s23))) + 
          p1q*(2*p2q^2*p3q^2*(-9*s13^3 + s12^2*(9*s13 - 5*s23) - 
              18*s12*s13*s23 - 4*s13^2*s23 + 13*s13*s23^2 + 5*s23^3) + 
            p3q^4*s12*(9*s13^2 + 18*s13*s23 + 10*s23*(-s12 + s23)) + 
            p2q*p3q^3*(-9*s13^3 + 2*s12^2*(9*s13 - 5*s23) + 11*s13*s23^2 + 
              18*s12*s13*(s13 + s23)) + p2q^4*(4*s13*s23*(s13 + s23) + 
              s12*(-9*s13^2 + 3*s13*s23 + 10*s23^2)) + p2q^3*p3q*
             (-18*s13^3 + s12^2*(9*s13 - 10*s23) - 4*s13^2*s23 + 
              28*s13*s23^2 + 10*s23^3 + s12*(-18*s13^2 - 15*s13*s23 + 
                20*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       ((p1q + p2q)*(-(p3q^5*s12^2*(s12 + s13 + s23)*(9*s13 + 10*s23)) - 
          2*p2q*p3q^4*s12*(s12 - s13)*(s12 + s13 + s23)*(9*s13 + 10*s23) - 
          p2q^2*p3q^3*(2*s12^2 - 4*s12*s13 + s13^2)*(s12 + s13 + s23)*
           (9*s13 + 10*s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (2*p2q*s13*(s13 + s23) + 11*p3q*s13*(s13 + s23) + 
            10*p3q*s12*(2*s13 + s23) + p2q*s12*(11*s13 + 10*s23)) - 
          p2q^5*s13*(-2*s23*(s13 + s23)^2 + s12^2*(9*s13 + 8*s23) + 
            3*s12*(3*s13^2 + 5*s13*s23 + 2*s23^2)) + p2q^3*p3q^2*
           (s12^3*(9*s13 - 20*s23) + s12^2*(45*s13^2 + 26*s13*s23 - 
              20*s23^2) - 2*s13^2*(9*s13^2 + 19*s13*s23 + 10*s23^2) + 
            s12*s13*(18*s13^2 + 53*s13*s23 + 37*s23^2)) + 
          p2q^4*p3q*(s12^3*(9*s13 - 10*s23) - s12^2*s23*(s13 + 10*s23) + 
            s12*s13*(-27*s13^2 - 26*s13*s23 + 2*s23^2) - 
            s13*(18*s13^3 + 35*s13^2*s23 + 15*s13*s23^2 - 2*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p2q^2*(6*s13*s23*(s13 + s23) + 
              s12*(-9*s13^2 + 14*s13*s23 + 20*s23^2)) + 
            p3q^2*(-10*s12^2*s23 + 11*s13*s23*(s13 + s23) + s12*(9*s13^2 + 
                38*s13*s23 + 20*s23^2)) + p2q*p3q*(s12^2*(9*s13 - 10*s23) + 
              s12*s23*(79*s13 + 40*s23) + s13*(-9*s13^2 + 26*s13*s23 + 
                35*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p3q^3*(11*s13*s23*(s13 + s23) - 2*s12^2*(9*s13 + 20*s23) + 
              2*s12*(9*s13^2 + 28*s13*s23 + 15*s23^2)) + 
            p2q^3*(14*s13*s23*(s13 + s23) + s12*(-36*s13^2 + s13*s23 + 
                30*s23^2)) + p2q*p3q^2*(2*s12^2*(9*s13 - 40*s23) + 
              2*s12*(36*s13^2 + 93*s13*s23 + 35*s23^2) + s13*(-18*s13^2 + 
                24*s13*s23 + 43*s23^2)) + p2q^2*p3q*(4*s12^2*(9*s13 - 
                10*s23) + s12*(-18*s13^2 + 158*s13*s23 + 70*s23^2) + 
              s13*(-54*s13^2 + 18*s13*s23 + 73*s23^2))) + 
          p1q*(p3q^4*s12*(9*s13^3 + 27*s13^2*s23 + 28*s13*s23^2 + 10*s23^3 - 
              6*s12^2*(3*s13 + 5*s23) - s12*(9*s13^2 + 30*s13*s23 + 
                20*s23^2)) + p2q^4*(8*s13*s23*(s13 + s23)^2 + 
              s12^2*(-27*s13^2 - 13*s13*s23 + 10*s23^2) + s12*(-27*s13^3 - 
                32*s13^2*s23 + 5*s13*s23^2 + 10*s23^3)) + 
            p2q^3*p3q*(3*s12^3*(9*s13 - 10*s23) + s12^2*(9*s13^2 + 
                56*s13*s23 - 10*s23^2) - s13*(54*s13^3 + 83*s13^2*s23 + 
                2*s13*s23^2 - 27*s23^3) + s12*(-72*s13^3 + 12*s13^2*s23 + 
                106*s13*s23^2 + 20*s23^3)) + p2q*p3q^3*
             (-2*s12^3*(18*s13 + 35*s23) + s12^2*(18*s13^2 - 21*s13*s23 - 
                50*s23^2) + s13*(-9*s13^3 - 9*s13^2*s23 + 10*s13*s23^2 + 
                10*s23^3) + s12*(45*s13^3 + 139*s13^2*s23 + 115*s13*s23^2 + 
                20*s23^3)) + p2q^2*p3q^2*(2*s12^3*(9*s13 - 35*s23) + 
              s12^2*(108*s13^2 + 87*s13*s23 - 50*s23^2) + s13*(-36*s13^3 - 
                55*s13^2*s23 + s13*s23^2 + 20*s23^3) + s12*(54*s13^3 + 
                210*s13^2*s23 + 179*s13*s23^2 + 20*s23^3)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*Eik[k - p1]] + 
     (-1/54*(ep^2*(p1q + p3q)*s23*(s12 + s13 + s23)*
          (p2q^2*s13*(s12 + 10*s13) - p3q^2*s12*(9*s12 + 10*s23) + 
           p1q^2*s23*(9*s12 + 10*s23) - p2q*p3q*(s12^2 + 10*s13*s23 + 
             s12*(s13 + 2*s23)) - p1q*(20*p2q*s13*s23 + 
             p2q*s12*(9*s13 + s23) + p3q*(9*s12^2 + s12*s23 - 10*s23^2))))/
         ((p1q + p2q + p3q)*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
           p3q*(s12 + s23))) - (ep*(p1q + p3q)*(s12 + s13 + s23)*
         (-(p2q^5*s13^2*(9*s12 + 10*s23)) + p2q^4*p3q*s13*
           (18*s12^2 + 19*s12*s23 - 10*s13*s23) + p3q^5*s12*
           (2*s23*(-4*s13 + s23) + s12*(-9*s13 + 2*s23)) + 
          p2q^3*p3q^2*(-9*s12^3 + 9*s12^2*(2*s13 - s23) - 
            10*s13*s23*(s13 + s23) + 2*s12*(9*s13^2 + s23^2)) - 
          p2q*p3q^4*(18*s12^3 + 10*s13^2*s23 + 3*s12^2*(9*s13 + 8*s23) + 
            s12*(-9*s13^2 + 36*s13*s23 + 4*s23^2)) - p2q^2*p3q^3*
           (18*s12^3 + 26*s12^2*s23 + 10*s13*s23*(2*s13 + s23) + 
            s12*(-27*s13^2 + 38*s13*s23 + 4*s23^2)) + 
          p1q^2*s23*(p3q^3*(2*s12^2 + 11*s12*s13 + 2*s12*s23 + 10*s13*s23) + 
            p2q^3*(11*s12^2 + 20*s12*s13 + 11*s12*s23 + 10*s13*s23) + 
            2*p2q^2*p3q*(10*s12^2 + 5*s23*(s13 + s23) + s12*(s13 + 16*s23)) + 
            2*p2q*p3q^2*(10*s12^2 + 5*s23*(s13 + s23) + s12*(s13 + 
                16*s23))) + p1q*(-2*p2q^2*p3q^2*(9*s12^3 - 9*s12*s13^2 + 
              4*s12^2*s23 + 18*s12*s13*s23 + 5*s13^2*s23 - 13*s12*s23^2 - 
              5*s23^3) + p2q^4*s13*(9*s12^2 + 18*s12*s23 + 10*s23*(-s13 + 
                s23)) + p3q^4*(10*s13*s23^2 + s12^2*(-9*s13 + 4*s23) + 
              s12*s23*(3*s13 + 4*s23)) + p2q^3*p3q*(-9*s12^3 + 18*s12^2*s13 - 
              10*s13^2*s23 + s12*(18*s13^2 + 18*s13*s23 + 11*s23^2)) + 
            p2q*p3q^3*(-18*s12^3 - 2*s12^2*(9*s13 + 2*s23) + 10*s23*(-s13^2 + 
                2*s13*s23 + s23^2) + s12*(9*s13^2 - 15*s13*s23 + 
                28*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((p1q + p3q)*(2*p2q^4*p3q*(s12 - s13)*s13*(s12 + s13 + s23)*
           (9*s12 + 10*s23) - p2q^5*s13^2*(s12 + s13 + s23)*
           (9*s12 + 10*s23) - p2q^3*p3q^2*(s12^2 - 4*s12*s13 + 2*s13^2)*
           (s12 + s13 + s23)*(9*s12 + 10*s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p3q*(2*s12^2 + 11*s12*s13 + 2*s12*s23 + 10*s13*s23) + 
            p2q*(11*s12^2 + 20*s12*s13 + 11*s12*s23 + 10*s13*s23)) - 
          p3q^5*s12*(s12^2*(9*s13 - 2*s23) + s12*(9*s13^2 + 15*s13*s23 - 
              4*s23^2) - 2*s23*(-4*s13^2 - 3*s13*s23 + s23^2)) + 
          p2q^2*p3q^3*(-18*s12^4 + 2*s12^3*(9*s13 - 19*s23) - 
            20*s13^2*s23*(s13 + s23) + s12^2*(45*s13^2 + 53*s13*s23 - 
              20*s23^2) + s12*s13*(9*s13^2 + 26*s13*s23 + 37*s23^2)) - 
          p2q*p3q^4*(18*s12^4 + 10*s13^2*s23*(s13 + s23) + 
            s12^2*s23*(26*s13 + 15*s23) + s12^3*(27*s13 + 35*s23) + 
            s12*(-9*s13^3 + s13^2*s23 - 2*s13*s23^2 - 2*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p3q^2*(20*s13*s23^2 + 2*s12*s23*(7*s13 + 
                3*s23) + s12^2*(-9*s13 + 6*s23)) + 
            p2q^2*(-10*s13*(s13 - 2*s23)*s23 + s12^2*(9*s13 + 11*s23) + 
              s12*s23*(38*s13 + 11*s23)) + p2q*p3q*(-9*s12^3 + 26*s12^2*s23 - 
              10*s13*(s13 - 4*s23)*s23 + s12*(9*s13^2 + 79*s13*s23 + 
                35*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p3q^3*(30*s13*s23^2 + s12^2*(-36*s13 + 14*s23) + s12*s23*(s13 + 
                14*s23)) + p2q^3*(10*s13*s23*(-4*s13 + 3*s23) + 
              s12^2*(18*s13 + 11*s23) + s12*(-18*s13^2 + 56*s13*s23 + 
                11*s23^2)) + p2q^2*p3q*(-18*s12^3 + 24*s12^2*(3*s13 + s23) + 
              10*s13*s23*(-8*s13 + 7*s23) + s12*(18*s13^2 + 186*s13*s23 + 
                43*s23^2)) + p2q*p3q^2*(-54*s12^3 - 18*s12^2*(s13 - s23) + 
              10*s13*s23*(-4*s13 + 7*s23) + s12*(36*s13^2 + 158*s13*s23 + 
                73*s23^2))) + p1q*(p2q^4*s13*(9*s12^3 - 9*s12^2*(s13 - 
                3*s23) - 2*s12*(9*s13^2 + 15*s13*s23 - 14*s23^2) + 
              10*s23*(-3*s13^2 - 2*s13*s23 + s23^2)) + 
            p3q^4*(10*s13*s23^2*(s13 + s23) + s12^3*(-27*s13 + 8*s23) + 
              s12*s23*(-13*s13^2 + 5*s13*s23 + 8*s23^2) + s12^2*(-27*s13^2 - 
                32*s13*s23 + 16*s23^2)) + p2q^3*p3q*(-9*s12^4 + 
              9*s12^3*(5*s13 - s23) - 10*s13*s23*(7*s13^2 + 5*s13*s23 - 
                2*s23^2) + s12^2*(18*s13^2 + 139*s13*s23 + 10*s23^2) + 
              s12*(-36*s13^3 - 21*s13^2*s23 + 115*s13*s23^2 + 10*s23^3)) + 
            p2q^2*p3q^2*(-36*s12^4 + s12^3*(54*s13 - 55*s23) - 
              10*s13*s23*(7*s13^2 + 5*s13*s23 - 2*s23^2) + s12^2*(108*s13^2 + 
                210*s13*s23 + s23^2) + s12*(18*s13^3 + 87*s13^2*s23 + 
                179*s13*s23^2 + 20*s23^3)) + p2q*p3q^3*(-54*s12^4 - 
              s12^3*(72*s13 + 83*s23) - 10*s13*s23*(3*s13^2 + s13*s23 - 
                2*s23^2) + s12^2*(9*s13^2 + 12*s13*s23 - 2*s23^2) + 
              s12*(27*s13^3 + 56*s13^2*s23 + 106*s13*s23^2 + 27*s23^3)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k - p1]] + 
     ((ep^2*(p1q + p3q)*(s12 + s13 + s23)*(p2q^2*s13*(-8*s12 + s13) - 
          p3q^2*s12*(9*s12 + s23) + p1q^2*s23*(9*s12 + s23) + 
          p2q*p3q*(8*s12^2 - s13*s23 + 8*s12*(s13 + 2*s23)) + 
          p1q*(p2q*(-9*s12*s13 + 8*s12*s23 - 2*s13*s23) + 
            p3q*(-9*s12^2 + 8*s12*s23 + s23^2))))/(6*(p1q + p2q + p3q)*s12*
         s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(p1q + p3q)*(s12 + s13 + s23)*(p2q^5*s13^2*(9*s12 + s23) + 
          p2q^4*p3q*s13*(-18*s12^2 - 10*s12*s23 + s13*s23) + 
          p3q^5*s12*(9*s12*s13 + 16*s12*s23 + 17*s13*s23 + 16*s23^2) + 
          p2q^3*p3q^2*(9*s12^3 + 9*s12^2*(-2*s13 + s23) + 
            s13*s23*(s13 + s23) - 2*s12*(9*s13^2 - 8*s23^2)) - 
          p1q^2*s23*(p3q^3*(-16*s12^2 - 7*s12*s13 - 16*s12*s23 + s13*s23) + 
            p2q^3*(-7*s12^2 + 2*s12*s13 - 7*s12*s23 + s13*s23) + 
            p2q^2*p3q*(2*s12^2 - 16*s12*s13 - 13*s12*s23 + s13*s23 + s23^2) + 
            p2q*p3q^2*(2*s12^2 - 16*s12*s13 - 13*s12*s23 + s13*s23 + 
              s23^2)) + p2q^2*p3q^3*(18*s12^3 + 35*s12^2*s23 + 
            s13*s23*(2*s13 + s23) + s12*(-27*s13^2 + 20*s13*s23 + 
              49*s23^2)) + p2q*p3q^4*(18*s12^3 + s13^2*s23 + 
            3*s12^2*(9*s13 + 17*s23) + s12*(-9*s13^2 + 36*s13*s23 + 
              49*s23^2)) + p1q*(p2q^2*p3q^2*(18*s12^3 - 18*s12*s13^2 + 
              17*s12^2*s23 + 36*s12*s13*s23 + s13^2*s23 + 46*s12*s23^2 - 
              s23^3) - p2q^4*s13*(9*s12^2 + 18*s12*s23 + s23*(-s13 + s23)) + 
            p3q^4*(-(s13*s23^2) + 8*s12*s23*(3*s13 + 4*s23) + 
              s12^2*(9*s13 + 32*s23)) + p2q^3*p3q*(9*s12^3 - 18*s12^2*s13 + 
              s13^2*s23 + s12*(-18*s13^2 - 18*s13*s23 + 7*s23^2)) + 
            p2q*p3q^3*(18*s12^3 + s12^2*(18*s13 + 49*s23) + s23*(s13^2 - 
                2*s13*s23 - s23^2) + s12*(-9*s13^2 + 42*s13*s23 + 
                62*s23^2)))))/(6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((p1q + p3q)*(-2*p2q^4*p3q*(s12 - s13)*s13*(9*s12 + s23)*
           (s12 + s13 + s23) + p2q^5*s13^2*(9*s12 + s23)*(s12 + s13 + s23) + 
          p2q^3*p3q^2*(s12^2 - 4*s12*s13 + 2*s13^2)*(9*s12 + s23)*
           (s12 + s13 + s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p2q*(7*s12^2 - 2*s12*s13 + 7*s12*s23 - s13*s23) + 
            p3q*(16*s12^2 + 7*s12*s13 + 16*s12*s23 - s13*s23)) + 
          p2q^2*p3q^3*(18*s12^4 + 2*s13^2*s23*(s13 + s23) + 
            s12^3*(-18*s13 + 20*s23) + s12^2*(-45*s13^2 - 62*s13*s23 + 
              2*s23^2) - s12*s13*(9*s13^2 + 35*s13*s23 + 28*s23^2)) + 
          p3q^5*s12*(s12^2*(9*s13 + 16*s23) + s23*(17*s13^2 + 33*s13*s23 + 
              16*s23^2) + s12*(9*s13^2 + 42*s13*s23 + 32*s23^2)) + 
          p2q*p3q^4*(18*s12^4 + s13^2*s23*(s13 + s23) + 7*s12^2*s23*
             (5*s13 + 6*s23) + s12^3*(27*s13 + 44*s23) + 
            s12*(-9*s13^3 - 8*s13^2*s23 + 16*s13*s23^2 + 16*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p2q^2*(s13*(s13 - 2*s23)*s23 + 
              s12*s23*(-20*s13 + 7*s23) + s12^2*(-9*s13 + 7*s23)) + 
            p3q^2*(-2*s13*s23^2 + s12^2*(9*s13 + 48*s23) + s12*s23*(31*s13 + 
                48*s23)) + p2q*p3q*(9*s12^3 + 46*s12^2*s23 + 
              s13*(s13 - 4*s23)*s23 + s12*(-9*s13^2 - 16*s13*s23 + 
                37*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p3q^3*(-3*s13*s23^2 + 4*s12^2*(9*s13 + 28*s23) + 
              s12*s23*(89*s13 + 112*s23)) + p2q^2*p3q*(18*s12^3 + 
              s13*(8*s13 - 7*s23)*s23 + s12^2*(-72*s13 + 30*s23) - 
              2*s12*(9*s13^2 + 66*s13*s23 - 10*s23^2)) + 
            p2q^3*(s13*(4*s13 - 3*s23)*s23 + s12^2*(-18*s13 + 7*s23) + 
              s12*(18*s13^2 - 38*s13*s23 + 7*s23^2)) + p2q*p3q^2*
             (54*s12^3 + s13*(4*s13 - 7*s23)*s23 + 18*s12^2*(s13 + 8*s23) + 
              s12*(-36*s13^2 - 32*s13*s23 + 98*s23^2))) + 
          p1q*(p2q^4*s13*(-9*s12^3 + 9*s12^2*(s13 - 3*s23) + s12*(18*s13^2 + 
                3*s13*s23 - 19*s23^2) + s23*(3*s13^2 + 2*s13*s23 - s23^2)) + 
            p3q^4*(-(s13*s23^2*(s13 + s23)) + s12^3*(27*s13 + 64*s23) + 
              s12*s23*(58*s13^2 + 121*s13*s23 + 64*s23^2) + s12^2*(27*s13^2 + 
                149*s13*s23 + 128*s23^2)) + p2q^3*p3q*(9*s12^4 + 
              9*s12^3*(-5*s13 + s23) + s13*s23*(7*s13^2 + 5*s13*s23 - 
                2*s23^2) - s12^2*(18*s13^2 + 103*s13*s23 + s23^2) + 
              s12*(36*s13^3 - 6*s13^2*s23 - 52*s13*s23^2 - s23^3)) + 
            p2q^2*p3q^2*(36*s12^4 + s12^3*(-54*s13 + 46*s23) + 
              s13*s23*(7*s13^2 + 5*s13*s23 - 2*s23^2) + s12^2*(-108*s13^2 - 
                183*s13*s23 + 8*s23^2) - s12*(18*s13^3 + 114*s13^2*s23 + 
                107*s13*s23^2 + 2*s23^3)) + p2q*p3q^3*(54*s12^4 + 
              2*s12^3*(36*s13 + 73*s23) + s13*s23*(3*s13^2 + s13*s23 - 
                2*s23^2) + s12^2*(-9*s13^2 + 96*s13*s23 + 146*s23^2) + 
              s12*(-27*s13^3 - 38*s13^2*s23 + 38*s13*s23^2 + 54*s23^3)))))/
        (6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((ep^2*(p1q + p2q)*(s12 + s13 + s23)*(p3q^2*s12*(s12 + s13) + 
          (p1q + p2q)*s23*(-(p2q*s13) + p1q*s23) - 
          p3q*(p1q*(2*s12 + s13)*s23 + p2q*s12*(s13 + s23) + 
            p2q*s13*(s13 + 2*s23))))/(6*(p1q + p2q + p3q)*s12*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*(p1q + p2q)*(s12 + s13 + s23)*(-(p3q^4*s12^2) + 
          p2q*p3q^3*s12*s13 + p2q^4*s13*(s12 + 2*(s13 + s23)) - 
          p2q^2*p3q^2*(s12^2 - 2*s13*s23 + s12*(s13 + s23)) + 
          p2q^3*p3q*(-s12^2 - s12*s13 + s13*(s13 + 3*s23)) + 
          p1q^2*(p2q*p3q*s23*(3*s13 + s23) + p2q^2*(2*s13*(s13 + s23) + 
              s12*(2*s13 + s23)) + p3q^2*(2*s13*(s13 + s23) + 
              s12*(2*s13 + s23))) + p1q*(-(p2q*p3q^2*(s12 - 2*s13)*s23) + 
            p3q^3*s12*(-s12 + s23) + p2q^2*p3q*(-s12^2 + s13^2 + s12*s23 + 
              6*s13*s23 + s23^2) + p2q^3*(4*s13*(s13 + s23) + 
              s12*(3*s13 + s23)))))/(6*p2q*p3q*(p1q + p2q + p3q)*s12*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       ((p1q + p2q)*(-(p3q^4*s12^2*(s12 + s13 + s23)) - 
          p2q*p3q^3*s12*(s12 - 2*s13)*(s12 + s13 + s23) - 
          p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23) - 
          p2q^3*p3q*(s12^2 + s12*s13 + s13^2)*(s12 + s13 + s23) + 
          p2q^4*s13*(s12^2 + 3*s12*(s13 + s23) + 2*(s13 + s23)^2) + 
          2*p1q^4*(2*s13*(s13 + s23)^2 + s12^2*(2*s13 + s23) + 
            s12*(4*s13^2 + 5*s13*s23 + s23^2)) - 2*p1q^3*(s12 + s13 + s23)*
           (p3q*(s12^2 - 2*s12*(s13 + s23) - 2*s13*(s13 + s23)) - 
            p2q*(6*s13*(s13 + s23) + s12*(5*s13 + 2*s23))) + 
          p1q^2*(s12 + s13 + s23)*(p3q^2*(-4*s12^2 + 2*s13*(s13 + s23) + 
              s12*(2*s13 + 3*s23)) + p2q^2*(14*s13*(s13 + s23) + 
              s12*(10*s13 + 3*s23)) + p2q*p3q*(-4*s12^2 + 4*s12*(s13 + s23) + 
              s13*(4*s13 + 5*s23))) + p1q*(-(p3q^3*s12*(3*s12 - s23)*
              (s12 + s13 + s23)) - p2q^2*p3q*(3*s12^3 + s13^3 - s13*s23^2 + 
              s12^2*(3*s13 + 2*s23) + s12*(s13^2 - 2*s13*s23 - s23^2)) + 
            p2q*p3q^2*(-4*s12^3 - 3*s12^2*s23 + s13*s23*(s13 + s23) + 
              s12*(4*s13^2 + 6*s13*s23 + s23^2)) + 
            p2q^3*(8*s13*(s13 + s23)^2 + s12^2*(5*s13 + s23) + 
              s12*(13*s13^2 + 14*s13*s23 + s23^2)))))/
        (6*p2q*p3q*(p1q + p2q + p3q)*s12*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*
        Eik[k - p2]] + 
     ((-3*ep*(s12 + s13 + s23)*(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + 
            p3q^3*s23^2 + 2*p2q*p3q^2*(2*s12*s13 + s23^2) + 
            2*p2q^2*p3q*(-2*s13^2 - 2*s13*s23 + s23^2)) - 
          p1q*(p2q + p3q)*(p2q^4*(s12 + 2*s13)*s23^2 + p3q^4*s23^2*
             (-s12 + s23) + p2q^3*p3q*(-4*s13^3 + 7*s13*s23^2 + 
              2*s23^2*(2*s12 + s23)) + p2q*p3q^3*(-4*s12^2*s13 + 
              2*s12*s23*(2*s13 + s23) + s23^2*(s13 + 3*s23)) + 
            4*p2q^2*p3q^2*(-(s13^2*s23) + s23^3 + s12*(2*s13^2 + s23^2))) + 
          (p2q + p3q)^2*(p2q^4*s13*(s12 + s13)*s23 + p3q^4*s23*
             (2*s13*(s13 + s23) + s12*(2*s13 + s23)) + p2q^3*p3q*
             (4*s13^3 + s12^2*s23 + 6*s13^2*s23 + s13*s23*(3*s12 + 2*s23)) + 
            p2q*p3q^3*(2*s12^2*(2*s13 + s23) + 2*s12*s23*(3*s13 + s23) + 
              s13*s23*(4*s13 + 5*s23)) + 2*p2q^2*p3q^2*(s12^2*s23 + 
              3*s13*s23*(s13 + s23) + s12*(-4*s13^2 + 2*s13*s23 + s23^2)))))/
        (2*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) + 
       (3*(-2*p1q^3*(p2q + p3q)*(-(p3q^2*(s12 - 2*s23)) + 
            p2q*p3q*(2*s12 - 4*s13 - s23) + p2q^2*(s12 + 2*s13 - s23))*s23^2*
           (s12 + s13 + s23) + 2*p1q^4*(p2q^2 - p3q^2)*s23^3*
           (s12 + s13 + s23) + (p2q + p3q)^2*(p2q^4*s13*(s12 + s13)*s23*
             (s12 + s13 + s23) + p2q^3*p3q*(s12^3*s23 + s12^2*s23^2 + 
              s12*s13*(4*s13^2 + s13*s23 - s23^2) + 2*s13^2*(2*s13^2 + 
                3*s13*s23 + s23^2)) + p2q*p3q^3*(s13*s23^2*(s13 + s23) + 
              2*s12^3*(2*s13 + s23) + s12*s13*s23*(2*s13 + 3*s23) + 
              2*s12^2*(2*s13^2 + 4*s13*s23 + s23^2)) + p3q^4*s23*
             (2*s13*(s13 + s23)^2 + s12^2*(2*s13 + s23) + s12*(4*s13^2 + 
                5*s13*s23 + s23^2)) + 2*p2q^2*p3q^2*(s12^3*s23 - 
              s13^2*s23*(s13 + s23) + s12^2*(-4*s13^2 - s13*s23 + s23^2) - 
              s12*s13*(4*s13^2 + 7*s13*s23 + 2*s23^2))) + 
          p1q^2*s23*(p2q^4*(2*s13^3 + 2*s12^2*(s13 - s23) - 2*s13^2*s23 - 
              3*s13*s23^2 + s23^3 + s12*(4*s13^2 - 4*s13*s23 - s23^2)) + 
            p2q*p3q^3*(2*s12^3 + s12*(-2*s13^2 + 8*s13*s23 - 5*s23^2) - 
              3*s23*(-4*s13^2 - 3*s13*s23 + s23^2)) + 
            p3q^4*(4*s13^3 + 8*s13^2*s23 + s13*s23^2 - 3*s23^3 + 
              4*s12^2*(s13 + s23) + s12*(8*s13^2 + 12*s13*s23 + s23^2)) + 
            2*p2q^2*p3q^2*(2*s12^3 - 3*s13^3 + s12^2*(s13 - 5*s23) + 
              5*s13^2*s23 + 9*s13*s23^2 + s23^3 - 2*s12*(2*s13^2 + 
                3*s23^2)) + p2q^3*p3q*(2*s12^3 - 8*s13^3 - 8*s12^2*s23 - 
              12*s13^2*s23 - s13*s23^2 + 3*s23^3 - s12*(10*s13^2 + 
                16*s13*s23 + 7*s23^2))) + p1q*(p2q + p3q)*
           (-(p2q^4*s23*(-2*s13^3 + 2*s13*s23^2 + s12^2*(-2*s13 + s23) + s12*
                (-4*s13^2 + s13*s23 + s23^2))) + p2q*p3q^3*
             (3*s12*(s13 - s23)*s23^2 + 4*s12^3*(s13 + s23) + 
              s23^2*(5*s13^2 + 4*s13*s23 - s23^2) + 2*s12^2*(2*s13^2 + 
                4*s13*s23 + s23^2)) + p3q^4*s23*(4*s13^3 + 8*s13^2*s23 + 
              3*s13*s23^2 - s23^3 + s12^2*(4*s13 + 3*s23) + s12*(8*s13^2 + 
                11*s13*s23 + 2*s23^2)) + p2q^3*p3q*(2*s12^3*s23 - 
              2*s12^2*s23*(s13 + s23) + s13*(4*s13^3 - 2*s13^2*s23 - 
                11*s13*s23^2 - 5*s23^3) + s12*(4*s13^3 - 10*s13^2*s23 - 
                13*s13*s23^2 - 4*s23^3)) + 2*p2q^2*p3q^2*(-4*s12^2*s13^2 + 
              3*s12^3*s23 + 2*s13*s23*(-2*s13^2 - s13*s23 + s23^2) - 
              s12*(4*s13^3 + 11*s13^2*s23 + 4*s13*s23^2 + 3*s23^3)))))/
        (2*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*
        Eik[k - p2]] + ((ep^2*(p1q + p2q)*(s12 + s13 + s23)*
         (p3q^2*s12*(s12 - 8*s13) + (p1q + p2q)*(9*s13 + s23)*
           (-(p2q*s13) + p1q*s23) + p3q*(p2q*s12*(8*s13 - s23) + 
            8*p2q*s13*(s13 + 2*s23) + p1q*(-9*s12*s13 - 2*s12*s23 + 
              8*s13*s23))))/(6*(p1q + p2q + p3q)*s12*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(p1q + p2q)*(s12 + s13 + s23)*(p3q^5*s12^2*(9*s13 + s23) + 
          p2q*p3q^4*s12*(-18*s13^2 + s12*s23 - 10*s13*s23) + 
          p2q^5*s13*(16*s23*(s13 + s23) + s12*(9*s13 + 17*s23)) + 
          p2q^2*p3q^3*(s12^2*(-18*s13 + s23) + s12*(-18*s13^2 + s23^2) + 
            s13*(9*s13^2 + 9*s13*s23 + 16*s23^2)) + p2q^3*p3q^2*
           (s12*s23*(20*s13 + s23) + s12^2*(-27*s13 + 2*s23) + 
            s13*(18*s13^2 + 35*s13*s23 + 49*s23^2)) + 
          p2q^4*p3q*(s12^2*(-9*s13 + s23) + 9*s12*s13*(3*s13 + 4*s23) + 
            s13*(18*s13^2 + 51*s13*s23 + 49*s23^2)) - 
          p1q^2*s23*(p2q^2*p3q*(2*s13^2 - 13*s13*s23 + s23^2 + 
              s12*(-16*s13 + s23)) + p2q*p3q^2*(2*s13^2 - 13*s13*s23 + 
              s23^2 + s12*(-16*s13 + s23)) + p2q^3*(s12*(-7*s13 + s23) - 
              16*s13*(s13 + s23)) + p3q^3*(-7*s13*(s13 + s23) + 
              s12*(2*s13 + s23))) + p1q*(p3q^4*s12*(-9*s13^2 - 18*s13*s23 + 
              (s12 - s23)*s23) + p2q^2*p3q^2*(18*s13^3 + 36*s12*s13*s23 + 
              17*s13^2*s23 + 46*s13*s23^2 - s23^3 + s12^2*(-18*s13 + s23)) + 
            p2q*p3q^3*(9*s13^3 + 7*s13*s23^2 + s12^2*(-18*s13 + s23) - 
              18*s12*s13*(s13 + s23)) + p2q^3*p3q*(18*s13^3 + 49*s13^2*s23 + 
              62*s13*s23^2 - s23^3 + s12^2*(-9*s13 + s23) + 2*s12*(9*s13^2 + 
                21*s13*s23 - s23^2)) + p2q^4*(32*s13*s23*(s13 + s23) + 
              s12*(9*s13^2 + 24*s13*s23 - s23^2)))))/(6*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12*s13*s23*(-(p3q*s12) + (p1q + p2q)*
           (s13 + s23))) + ((p1q + p2q)*(p3q^5*s12^2*(s12 + s13 + s23)*
           (9*s13 + s23) + 2*p2q*p3q^4*s12*(s12 - s13)*(s12 + s13 + s23)*
           (9*s13 + s23) + p2q^2*p3q^3*(2*s12^2 - 4*s12*s13 + s13^2)*
           (s12 + s13 + s23)*(9*s13 + s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p2q*s12*(7*s13 - s23) + 16*p2q*s13*(s13 + s23) + 
            7*p3q*s13*(s13 + s23) - p3q*s12*(2*s13 + s23)) + 
          p2q^3*p3q^2*(s12^3*(-9*s13 + 2*s23) + 2*s13^2*(9*s13^2 + 
              10*s13*s23 + s23^2) + s12^2*(-45*s13^2 - 35*s13*s23 + 
              2*s23^2) - 2*s12*s13*(9*s13^2 + 31*s13*s23 + 14*s23^2)) + 
          p2q^5*s13*(16*s23*(s13 + s23)^2 + s12^2*(9*s13 + 17*s23) + 
            s12*(9*s13^2 + 42*s13*s23 + 33*s23^2)) + 
          p2q^4*p3q*(s12^3*(-9*s13 + s23) + s12^2*s23*(-8*s13 + s23) + 
            s12*s13*(27*s13^2 + 35*s13*s23 + 16*s23^2) + 
            2*s13*(9*s13^3 + 22*s13^2*s23 + 21*s13*s23^2 + 8*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p2q^2*(48*s13*s23*(s13 + s23) + 
              s12*(9*s13^2 + 31*s13*s23 - 2*s23^2)) + 
            p3q^2*(s12^2*s23 + 7*s13*s23*(s13 + s23) - s12*(9*s13^2 + 
                20*s13*s23 + 2*s23^2)) + p2q*p3q*(s12^2*(-9*s13 + s23) - 
              4*s12*s23*(4*s13 + s23) + s13*(9*s13^2 + 46*s13*s23 + 
                37*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*(112*s13*s23*(s13 + s23) + s12*(36*s13^2 + 89*s13*s23 - 
                3*s23^2)) + p3q^3*(7*s13*s23*(s13 + s23) + 2*s12^2*(9*s13 + 
                2*s23) - s12*(18*s13^2 + 38*s13*s23 + 3*s23^2)) + 
            p2q*p3q^2*(s12^2*(-18*s13 + 8*s23) - s12*(72*s13^2 + 
                132*s13*s23 + 7*s23^2) + 2*s13*(9*s13^2 + 15*s13*s23 + 
                10*s23^2)) + p2q^2*p3q*(4*s12^2*(-9*s13 + s23) + 
              s12*(18*s13^2 - 32*s13*s23 - 7*s23^2) + 2*s13*(27*s13^2 + 
                72*s13*s23 + 49*s23^2))) + 
          p1q*(p3q^4*s12*(-9*s13^3 - 27*s13^2*s23 - 19*s13*s23^2 - s23^3 + 
              3*s12^2*(6*s13 + s23) + s12*(9*s13^2 + 3*s13*s23 + 2*s23^2)) + 
            p2q^4*(64*s13*s23*(s13 + s23)^2 + s12^2*(27*s13^2 + 58*s13*s23 - 
                s23^2) + s12*(27*s13^3 + 149*s13^2*s23 + 121*s13*s23^2 - 
                s23^3)) + p2q*p3q^3*(s12^3*(36*s13 + 7*s23) + 
              s12^2*(-18*s13^2 - 6*s13*s23 + 5*s23^2) + s13*(9*s13^3 + 
                9*s13^2*s23 - s13*s23^2 - s23^3) - s12*(45*s13^3 + 
                103*s13^2*s23 + 52*s13*s23^2 + 2*s23^3)) - 
            p2q^2*p3q^2*(s12^3*(18*s13 - 7*s23) + s12^2*(108*s13^2 + 
                114*s13*s23 - 5*s23^2) + 2*s13*(-18*s13^3 - 23*s13^2*s23 - 
                4*s13*s23^2 + s23^3) + s12*(54*s13^3 + 183*s13^2*s23 + 
                107*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*
             (3*s12^3*(-9*s13 + s23) + s12^2*(-9*s13^2 - 38*s13*s23 + 
                s23^2) + s12*(72*s13^3 + 96*s13^2*s23 + 38*s13*s23^2 - 
                2*s23^3) + 2*s13*(27*s13^3 + 73*s13^2*s23 + 73*s13*s23^2 + 
                27*s23^3)))))/(6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep^2*(p1q + p3q)*(s12 + s13 + s23)*(p2q^2*s13*(s12 + s13) + 
          (p1q + p3q)*s23*(-(p3q*s12) + p1q*s23) - 
          p2q*(p1q*(s12 + 2*s13)*s23 + p3q*(s12^2 + s12*s13 + 2*s12*s23 + 
              s13*s23))))/(6*(p1q + p2q + p3q)*s13*(-(p2q*s13) + 
          p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(p1q + p3q)*(s12 + s13 + s23)*(p2q^3*p3q*s12*s13 - p2q^4*s13^2 + 
          p3q^4*s12*(2*s12 + s13 + 2*s23) + p2q*p3q^3*(s12^2 - s12*s13 - 
            s13^2 + 3*s12*s23) - p2q^2*p3q^2*(s12*(s13 - 2*s23) + 
            s13*(s13 + s23)) + p1q*(p2q^2*p3q*(2*s12 - s13)*s23 + 
            p2q^3*s13*(-s13 + s23) + p3q^3*(4*s12^2 + 3*s12*s13 + 4*s12*s23 + 
              s13*s23) + p2q*p3q^2*(s12^2 - s13^2 + 6*s12*s23 + s13*s23 + 
              s23^2)) + p1q^2*(p2q*p3q*s23*(3*s12 + s23) + 
            p2q^2*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23)) + 
            p3q^2*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23)))))/
        (6*p2q*p3q*(p1q + p2q + p3q)*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - 
       ((p1q + p3q)*(-(p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23)) + 
          p2q^3*p3q*(2*s12 - s13)*s13*(s12 + s13 + s23) - 
          p2q^4*s13^2*(s12 + s13 + s23) - p2q*p3q^3*(s12^2 + s12*s13 + s13^2)*
           (s12 + s13 + s23) + p3q^4*s12*(2*s12^2 + 3*s12*s13 + s13^2 + 
            4*s12*s23 + 3*s13*s23 + 2*s23^2) + 2*p1q^4*
           (2*s12^3 + 4*s12^2*(s13 + s23) + s13*s23*(s13 + s23) + 
            s12*(2*s13^2 + 5*s13*s23 + 2*s23^2)) + 2*p1q^3*(s12 + s13 + s23)*
           (p3q*(6*s12^2 + 5*s12*s13 + 6*s12*s23 + 2*s13*s23) + 
            p2q*(2*s12^2 - s13*(s13 - 2*s23) + 2*s12*(s13 + s23))) + 
          p1q^2*(s12 + s13 + s23)*(p2q^2*(2*s12^2 + 2*s12*(s13 + s23) + 
              s13*(-4*s13 + 3*s23)) + p2q*p3q*(4*s12^2 + 4*s13*(-s13 + s23) + 
              s12*(4*s13 + 5*s23)) + p3q^2*(14*s12^2 + 3*s13*s23 + 
              2*s12*(5*s13 + 7*s23))) + 
          p1q*(-(p2q^3*s13*(3*s13 - s23)*(s12 + s13 + s23)) - 
            p2q*p3q^2*(s12^3 + s12^2*s13 + s12*(3*s13^2 - 2*s13*s23 - 
                s23^2) + s13*(3*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*p3q*(s12^2*(4*s13 + s23) + s12*s23*(6*s13 + s23) + 
              s13*(-4*s13^2 - 3*s13*s23 + s23^2)) + 
            p3q^3*(8*s12^3 + s13*s23*(s13 + s23) + s12^2*(13*s13 + 16*s23) + 
              s12*(5*s13^2 + 14*s13*s23 + 8*s23^2)))))/
        (6*p2q*p3q*(p1q + p2q + p3q)*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*
        Eik[k - p3]] + 
     ((-3*ep*(s12 + s13 + s23)*(-(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + 
             p3q^3*s23^2 + 2*p2q^2*p3q*(2*s12*s13 + s23^2) + 
             2*p2q*p3q^2*(-2*s12^2 - 2*s12*s23 + s23^2))) + 
          p1q*(p2q + p3q)*(-(p3q^4*(2*s12 + s13)*s23^2) + p2q^4*(s13 - s23)*
             s23^2 - 4*p2q^2*p3q^2*(s12^2*(2*s13 - s23) + s23^2*(s13 + 
                s23)) + p2q*p3q^3*(4*s12^3 - 7*s12*s23^2 - 2*s23^2*(2*s13 + 
                s23)) - p2q^3*p3q*(s23^2*(2*s13 + 3*s23) + s12*(-4*s13^2 + 
                4*s13*s23 + s23^2))) + (p2q + p3q)^2*
           (p3q^4*s12*(s12 + s13)*s23 + p2q^4*s23*(2*s12^2 + s13*s23 + 
              2*s12*(s13 + s23)) + p2q*p3q^3*(4*s12^3 + 6*s12^2*s23 + 
              s13^2*s23 + s12*s23*(3*s13 + 2*s23)) + 2*p2q^2*p3q^2*
             (s13*s23*(s13 + s23) + s12^2*(-4*s13 + 3*s23) + s12*s23*(2*s13 + 
                3*s23)) + p2q^3*p3q*(4*s12^2*s23 + 2*s13*s23*(s13 + s23) + 
              s12*(4*s13^2 + 6*s13*s23 + 5*s23^2)))))/(2*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23)) + (3*(-2*p1q^4*(p2q^2 - p3q^2)*s23^3*(s12 + s13 + s23) + 
          2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*(p2q^2*(s13 - 2*s23) + 
            p2q*p3q*(4*s12 - 2*s13 + s23) + p3q^2*(-2*s12 - s13 + s23)) + 
          p1q^2*s23*(-(p2q*p3q^3*(8*s12^3 - 2*s13^3 + 8*s13^2*s23 + 7*s13*
                s23^2 - 3*s23^3 + s12*s23*(16*s13 + s23) + 2*s12^2*
                (5*s13 + 6*s23))) + p2q^3*p3q*(2*s13^3 - 2*s12^2*(s13 - 
                6*s23) - 5*s13*s23^2 - 3*s23^3 + s12*s23*(8*s13 + 9*s23)) + 
            p3q^4*(2*s12^3 + s12^2*(4*s13 - 2*s23) + s12*(2*s13^2 - 
                4*s13*s23 - 3*s23^2) + s23*(-2*s13^2 - s13*s23 + s23^2)) + 
            p2q^4*(4*s12^3 + 8*s12^2*(s13 + s23) + s23*(4*s13^2 + s13*s23 - 
                3*s23^2) + s12*(4*s13^2 + 12*s13*s23 + s23^2)) - 
            2*p2q^2*p3q^2*(3*s12^3 - 2*s13^3 + s12^2*(4*s13 - 5*s23) + 
              5*s13^2*s23 + 6*s13*s23^2 - s23^3 - s12*(s13^2 + 9*s23^2))) + 
          (p2q + p3q)^2*(p3q^4*s12*(s12 + s13)*s23*(s12 + s13 + s23) + 
            p2q*p3q^3*(4*s12^4 - s12*s13*s23^2 + s13^2*s23*(s13 + s23) + 
              s12^2*s23*(s13 + 2*s23) + s12^3*(4*s13 + 6*s23)) - 
            2*p2q^2*p3q^2*(-(s13^2*s23*(s13 + s23)) + s12^3*(4*s13 + s23) + 
              s12*s13*s23*(s13 + 2*s23) + s12^2*(4*s13^2 + 7*s13*s23 + 
                s23^2)) + p2q^4*s23*(2*s12^3 + 4*s12^2*(s13 + s23) + 
              s13*s23*(s13 + s23) + s12*(2*s13^2 + 5*s13*s23 + 2*s23^2)) + 
            p2q^3*p3q*(2*s13^2*s23*(s13 + s23) + s12^2*(4*s13^2 + 2*s13*s23 + 
                s23^2) + s12*(4*s13^3 + 8*s13^2*s23 + 3*s13*s23^2 + 
                s23^3))) + p1q*(p2q + p3q)*
           (-(p3q^4*s23*(-2*s12^3 - 4*s12^2*s13 + s13*s23*(s13 + s23) + s12*
                (-2*s13^2 + s13*s23 + 2*s23^2))) - 2*p2q^2*p3q^2*
             (-3*s13^3*s23 + 2*s12*(2*s13 - s23)*s23^2 + 3*s13*s23^3 + 
              4*s12^3*(s13 + s23) + s12^2*(4*s13^2 + 11*s13*s23 + 2*s23^2)) + 
            p2q^4*s23*(4*s12^3 + 8*s12^2*(s13 + s23) + s23*(3*s13^2 + 
                2*s13*s23 - s23^2) + s12*(4*s13^2 + 11*s13*s23 + 3*s23^2)) + 
            p2q*p3q^3*(4*s12^4 + s12^3*(4*s13 - 2*s23) - s12^2*s23*(10*s13 + 
                11*s23) + 2*s13*s23*(s13^2 - s13*s23 - 2*s23^2) - 
              s12*s23*(2*s13^2 + 13*s13*s23 + 5*s23^2)) + 
            p2q^3*p3q*(s12^2*(4*s13^2 + 5*s23^2) - s23*(-4*s13^3 - 
                2*s13^2*s23 + 3*s13*s23^2 + s23^3) + s12*(4*s13^3 + 
                8*s13^2*s23 + 3*s13*s23^2 + 4*s23^3)))))/
        (2*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        Eik[k - p3]] + 
     (-1/27*(ep^3*(s12 + s13 + s23)*(p3q^3*s12^2*(10*s12 + s13) - 
           (p1q + p2q)*(9*s13 + 10*s23)*(p2q*s13 - p1q*s23)^2 - 
           p3q^2*s12*(p2q*(29*s12*s13 + 2*s13^2 + 10*s12*s23) + 
             p1q*(9*s12*s13 + 30*s12*s23 + 2*s13*s23)) + 
           p3q*(p2q^2*s13*(28*s12*s13 + s13^2 + 20*s12*s23) + 
             p1q^2*s23*(18*s12*s13 + 30*s12*s23 + s13*s23) + 
             2*p1q*p2q*(9*s12*s13^2 + 9*s12*s13*s23 - s13^2*s23 + 10*s12*
                s23^2))))/((p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
           (p1q + p2q)*(s13 + s23))) + (ep^2*(s12 + s13 + s23)*
         (p2q^6*s13^3*(s12 + s13 + s23) - 10*p3q^3*(p3q*s12 - p1q*s13)*
           (s12 + s13 + s23)*(p3q*s12 - p1q*s23)^2 + p2q^5*s13^2*
           (p1q*(s13 - 2*s23)*(s12 + s13 + s23) + p3q*(-12*s12^2 + 19*s13^2 + 
              31*s13*s23 + 10*s23^2 - 4*s12*(5*s13 + 3*s23))) + 
          p2q^4*s13*(-(p1q^2*(2*s13 - s23)*s23*(s12 + s13 + s23)) + 
            p1q*p3q*(19*s13^3 - 2*s12^2*(s13 - 9*s23) - 7*s13^2*s23 - 
              52*s13*s23^2 - 20*s23^3 + s12*(-10*s13^2 + 32*s13*s23 + 
                18*s23^2)) + p3q^2*(21*s12^3 + 3*s12^2*(9*s13 + 7*s23) + 
              s13*(19*s13^2 + 33*s13*s23 + 10*s23^2) - s12*(83*s13^2 + 
                82*s13*s23 + 20*s23^2))) - p2q*p3q^2*
           (p3q^3*s12^2*(10*s12^2 + 7*s12*s13 - 30*s13^2 + 20*s12*s23 - 
              32*s13*s23) - p1q^3*s23^2*(-8*s12*s13 + 19*s13^2 + 31*s13*s23 + 
              10*s23^2) + p1q*p3q^2*s12*(4*s12^2*(2*s13 - 5*s23) + 
              s12*(s13^2 - 105*s13*s23 - 50*s23^2) + 4*s13*(5*s13^2 + 
                5*s13*s23 + s23^2)) + p1q^2*p3q*s23*(-2*s12^2*(8*s13 - 
                5*s23) + 2*s13*(10*s13^2 + 5*s13*s23 - 6*s23^2) + 
              s12*(58*s13^2 + 89*s13*s23 + 40*s23^2))) + 
          p2q^3*(p1q^3*s13*s23^2*(s12 + s13 + s23) - p1q^2*p3q*s23*
             (38*s13^3 + 43*s13^2*s23 - 11*s13*s23^2 - 10*s23^3 + 
              2*s12^2*(s13 + 5*s23) + s12*(-14*s13^2 + 20*s13*s23 + 
                10*s23^2)) + p3q^3*(-10*s12^4 + 2*s12^3*(s13 - 5*s23) + 
              2*s13^3*(5*s13 + 6*s23) + s12^2*(99*s13^2 + 71*s13*s23 + 
                10*s23^2) - s12*s13*(65*s13^2 + 86*s13*s23 + 20*s23^2)) + 
            p1q*p3q^2*(s12^3*(s13 + 20*s23) + s12^2*(17*s13^2 + 57*s13*s23 + 
                20*s23^2) + s13*(19*s13^3 - 7*s13^2*s23 - 56*s13*s23^2 - 
                20*s23^3) - 2*s12*(23*s13^3 + 5*s13^2*s23 + 21*s13*s23^2 + 
                10*s23^3))) - p2q^2*p3q*(-(p1q^3*s23^2*(-8*s12*s13 + 19*
                s13^2 + 31*s13*s23 + 10*s23^2)) + p3q^3*s12*
             (10*s12^3 + 5*s12^2*(5*s13 + 4*s23) + 2*s13^2*(15*s13 + 
                17*s23) - s12*(63*s13^2 + 73*s13*s23 + 10*s23^2)) + 
            p1q^2*p3q*s23*(38*s13^3 - 2*s12^2*(8*s13 - 5*s23) + 
              43*s13^2*s23 - 13*s13*s23^2 - 10*s23^3 + s12*(22*s13^2 + 
                107*s13*s23 + 40*s23^2)) + p1q*p3q^2*
             (4*s12^3*(2*s13 - 5*s23) + 2*s13^2*(-5*s13^2 + 5*s13*s23 + 
                12*s23^2) - s12^2*(35*s13^2 + 141*s13*s23 + 50*s23^2) + 
              s12*(28*s13^3 + 46*s13^2*s23 + 46*s13*s23^2 + 20*s23^3)))))/
        (27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(2*p1q^5*(p2q + 10*p3q)*s13*s23^2*(s12 + s13 + s23)^2 - 
          4*p1q^4*s23*(s12 + s13 + s23)^2*(p2q^2*s13*(s13 - s23) + 
            5*p3q^2*(-(s13*s23) + s12*(2*s13 + s23)) + 
            p2q*p3q*(5*s13*(2*s13 - 3*s23) + s12*(s13 + 5*s23))) + 
          (p3q*s12 - p2q*s13)^2*(-10*p3q^4*s12*(s12 + s13 + s23)^2 + 
            p2q^4*s13*(s12 + s13 + s23)^2 - p2q*p3q^3*(30*s12^3 + 
              s12^2*(41*s13 + 40*s23) + s12*(s13^2 + 10*s13*s23 + 10*s23^2) - 
              s13*(10*s13^2 + 21*s13*s23 + 11*s23^2)) + 
            p2q^3*p3q*(-10*s12^3 + 10*s12^2*s13 + s12*(41*s13^2 + 
                52*s13*s23 + 10*s23^2) + s13*(21*s13^2 + 43*s13*s23 + 
                22*s23^2)) + p2q^2*p3q^2*(-30*s12^3 - s12^2*(21*s13 + 
                20*s23) + 2*s12*(15*s13^2 + 21*s13*s23 + 5*s23^2) + 
              s13*(21*s13^2 + 44*s13*s23 + 23*s23^2))) + 
          p1q^2*(s12 + s13 + s23)*(p2q^4*s13*(s12 + s13 + s23)*
             (4*s13^2 - 6*s13*s23 + s23^2) - 10*p3q^4*s12*
             (2*s12^3 - 2*s12^2*s23 + s23*(2*s13^2 + 3*s13*s23 + s23^2) - 
              s12*(2*s13^2 + 4*s13*s23 + 3*s23^2)) + p2q*p3q^3*
             (-20*s12^4 + 20*s12^3*(4*s13 + 3*s23) + 10*s12^2*(6*s13^2 + 
                12*s13*s23 + s23^2) + s13*s23*(-20*s13^2 - 10*s13*s23 + 
                11*s23^2) - s12*(40*s13^3 + 102*s13^2*s23 + 55*s13*s23^2 + 
                10*s23^3)) + p2q^3*p3q*(-2*s12^2*(14*s13^2 - 17*s13*s23 + 
                5*s23^2) + 2*s12*(16*s13^3 - 67*s13^2*s23 + 7*s13*s23^2 + 
                5*s23^3) + s13*(60*s13^3 - 62*s13^2*s23 - 103*s13*s23^2 + 
                22*s23^3)) + p2q^2*p3q^2*(s12^3*(44*s13 + 40*s23) - 
              6*s12^2*(16*s13^2 - 4*s13*s23 + 5*s23^2) - s12*(120*s13^3 + 
                282*s13^2*s23 + 75*s13*s23^2 - 10*s23^3) + s13*(20*s13^3 - 
                62*s13^2*s23 - 63*s13*s23^2 + 23*s23^3))) + 
          p1q^3*(s12 + s13 + s23)*(p2q^3*s13*(s12 + s13 + s23)*
             (2*s13^2 - 8*s13*s23 + 3*s23^2) + 10*p3q^3*
             (s13*s23^2*(s13 + s23) + 2*s12^3*(s13 + 2*s23) + 
              2*s12^2*(s13^2 + s13*s23 + s23^2) - s12*s23*(4*s13^2 + 
                5*s13*s23 + 2*s23^2)) + p2q*p3q^2*(-38*s12^2*s13*(s13 + 
                s23) + 2*s12^3*(s13 + 20*s23) + s13*s23*(-40*s13^2 + 
                s13*s23 + 42*s23^2) - 10*s12*(4*s13^3 + 16*s13^2*s23 + 
                7*s13*s23^2 + 2*s23^3)) + p2q^2*p3q*(-4*s12^2*(s13^2 - 
                8*s13*s23 + 5*s23^2) + 2*s12*s13*(8*s13^2 - 46*s13*s23 + 
                41*s23^2) + s13*(20*s13^3 - 100*s13^2*s23 - 59*s13*s23^2 + 
                62*s23^3))) - p1q*(10*p3q^5*s12^2*(2*s12 - s13 - 2*s23)*
             (s12 + s13 + s23)^2 - p2q^5*s13^2*(3*s13 - 2*s23)*
             (s12 + s13 + s23)^2 + p2q^2*p3q^3*(20*s12^5 - 10*s12^4*(11*s13 + 
                4*s23) - s12^3*(151*s13^2 + 334*s13*s23 + 40*s23^2) + 
              2*s13^2*(-5*s13^3 + 16*s13*s23^2 + 11*s23^3) + 
              2*s12*s13*(41*s13^3 + 113*s13^2*s23 + 86*s13*s23^2 + 
                13*s23^3) + s12^2*(71*s13^3 - 41*s13^2*s23 - 98*s13*s23^2 + 
                20*s23^3)) + p2q*p3q^4*s12*(40*s12^4 - 10*s12^3*s13 - 
              s12^2*(111*s13^2 + 214*s13*s23 + 60*s23^2) + 2*s13*(10*s13^3 + 
                20*s13^2*s23 + 11*s13*s23^2 + s23^3) - s12*(41*s13^3 + 
                165*s13^2*s23 + 142*s13*s23^2 + 20*s23^3)) + 
            p2q^4*p3q*s13*(2*s12^3*(13*s13 - 9*s23) + s12^2*(-18*s13^2 + 
                56*s13*s23 + 4*s23^2) + s12*(-105*s13^3 - 16*s13^2*s23 + 
                114*s13*s23^2 + 22*s23^3) + s13*(-61*s13^3 - 81*s13^2*s23 + 
                24*s13*s23^2 + 44*s23^3)) + p2q^3*p3q^2*
             (2*s12^3*s13*(47*s13 - 43*s23) - s12^4*(43*s13 + 20*s23) + 
              s12^2*(249*s13^3 + 318*s13^2*s23 + 61*s13*s23^2 + 20*s23^3) + 
              s13^2*(-41*s13^3 - 41*s13^2*s23 + 46*s13*s23^2 + 46*s23^3) + 
              s12*s13*(71*s13^3 + 316*s13^2*s23 + 314*s13*s23^2 + 
                64*s23^3)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((ep^3*(s12 + s13 + s23)*(-(p3q^3*s12^2*(s12 + s13)) + 
          (p1q + p2q)*s23*(p2q*s13 - p1q*s23)^2 + p3q^2*s12*
           (2*p2q*s13^2 + p1q*(3*s12 + 2*s13)*s23 + p2q*s12*(2*s13 + s23)) - 
          p3q*(p1q^2*(3*s12 + s13)*s23^2 + 2*p1q*p2q*s23*(-s13^2 + s12*s23) + 
            p2q^2*(s13^3 + s12*s13*(s13 + 2*s23)))))/(3*(p1q + p2q + p3q)*s12*
         s13*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep^2*(s12 + s13 + s23)*(p2q*(p3q*s12 - p2q*s13)^2*
           (p3q^2*(2*s12 - s13 + s23) + p2q^2*(s12 + s13 + s23) - 
            p2q*p3q*(3*s13 + s23)) + p1q^3*s23^2*(p2q^2*(s12 + s13 + s23) + 
            p3q^2*(s12 + s13 + s23) - p2q*p3q*(3*s13 + s23)) + 
          p1q^2*s23*(-2*p3q^3*s12*(s12 + s13 + s23) - p2q^3*(2*s13 - s23)*
             (s12 + s13 + s23) - p2q^2*p3q*(2*s12^2 - 6*s13^2 + s13*s23 + 
              s23^2 + 2*s12*(s13 + s23)) + p2q*p3q^2*(-2*s13^2 - 3*s13*s23 + 
              s23^2 + 4*s12*(s13 + s23))) + 
          p1q*(p3q^4*s12^2*(s12 + s13 + s23) + p2q^4*s13*(s13 - 2*s23)*
             (s12 + s13 + s23) - p2q^3*p3q*(2*s12^2*(s13 + s23) + 
              2*s12*(s13 + s23)^2 + s13*(3*s13^2 - 5*s13*s23 - 2*s23^2)) - 
            p2q*p3q^3*s12*(5*s12*(s13 + s23) + 2*(s13^2 + s23^2)) + 
            p2q^2*p3q^2*(s12^3 + s12^2*(s13 + s23) + s13*(s13^2 + 3*s13*s23 - 
                2*s23^2) + s12*(7*s13^2 + 4*s13*s23 + 2*s23^2)))))/
        (3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) + (ep*(s12 + s13 + s23)*
         (2*p1q^5*s23^2*(s12 + s13 + s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p3q*(-2*s12 + s23) + 2*p2q*(-s13 + s23)) + p2q*(p2q + p3q)*
           (p3q*s12 - p2q*s13)^2*(p3q*(-s12 + s23) + p2q*(s12 + s13 + s23)) + 
          p1q^2*(2*p3q^3*s12*(s12 - s23)*(s12 + s13 + s23) + 
            p2q^3*(s12 + s13 + s23)*(4*s13^2 - 6*s13*s23 + s23^2) + 
            p2q*p3q^2*(4*s12^3 - s12*(2*s13 + 3*s23)^2 + s23*(-2*s13^2 - 
                2*s13*s23 + s23^2)) - p2q^2*p3q*(-2*s13^3 + 4*s13^2*s23 + 
              7*s13*s23^2 - 2*s23^3 + s12^2*(8*s13 + 6*s23) + 
              6*s12*(s13^2 + 3*s13*s23 + s23^2))) + 
          p1q^3*(p3q^2*(s12 + s13 + s23)*(2*s12^2 - 4*s12*s23 + s23^2) + 
            p2q^2*(s12 + s13 + s23)*(2*s13^2 - 8*s13*s23 + 3*s23^2) - 
            p2q*p3q*(4*s12^2*(s13 + 2*s23) + s23*(4*s13^2 + s13*s23 - 
                4*s23^2) + 2*s12*(2*s13^2 + 8*s13*s23 + 3*s23^2))) + 
          p1q*(p3q^4*s12^2*(s12 + s13 + s23) + p2q^4*s13*(3*s13 - 2*s23)*
             (s12 + s13 + s23) + p2q*p3q^3*s12*(2*s12^2 + s12*(s13 + 6*s23) - 
              2*(s13^2 + s13*s23 + s23^2)) - p2q^3*p3q*
             (2*s12^2*(3*s13 + s23) + 2*s12*(2*s13^2 + 4*s13*s23 + s23^2) + 
              s13*(-3*s13^2 - 2*s13*s23 + 4*s23^2)) + p2q^2*p3q^2*
             (3*s12^3 - s12^2*(s13 - 3*s23) + s13*(s13^2 + s13*s23 - 
                2*s23^2) - s12*(5*s13^2 + 8*s13*s23 + 4*s23^2)))))/
        (3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((ep^3*(s12 + s13 + s23)*(p1q^3*s23^2*(9*s12 + 10*s23) + 
          (p3q*s12 - p2q*s13)^2*(-(p2q*(s12 + 10*s13)) + 
            p3q*(9*s12 + 10*s23)) - p1q^2*s23*(30*p2q*s13*s23 + 
            p2q*s12*(18*s13 + s23) + p3q*(18*s12^2 + 11*s12*s23 - 
              10*s23^2)) + p1q*(p2q^2*s13*(9*s12*s13 + 2*s12*s23 + 
              30*s13*s23) + p3q^2*s12*(9*s12^2 - 8*s12*s23 - 20*s23^2) - 
            2*p2q*p3q*(s12^2*(9*s13 - s23) + 9*s12*s13*s23 + 10*s13*s23^2))))/
        (27*(p1q + p2q + p3q)*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep^2*(s12 + s13 + s23)*
         (p1q^3*s23^2*(10*p2q^3*s12*(s12 + s13 + s23) + 
            p3q^3*s12*(s12 + s13 + s23) + p2q^2*p3q*(19*s12^2 - 8*s12*s13 + 
              31*s12*s23 + 10*s23^2) + p2q*p3q^2*(19*s12^2 - 8*s12*s13 + 
              31*s12*s23 + 10*s23^2)) + (p3q*s12 - p2q*s13)^2*
           (p3q^4*s12*(s12 + s13 + s23) - 10*p2q^4*s13*(s12 + s13 + s23) + 
            p2q^3*p3q*(10*s12^2 - 3*s12*(9*s13 - 4*s23) - 10*s13*(s13 + 
                2*s23)) + p2q*p3q^3*(19*s12^2 + s12*(-18*s13 + 31*s23) - 
              10*(s13^2 + s13*s23 - s23^2)) + p2q^2*p3q^2*(19*s12^2 + 
              s12*(-45*s13 + 33*s23) - 10*(s13^2 + 2*s13*s23 - s23^2))) - 
          p1q^2*s23*(p3q^4*s12*(2*s12 - s23)*(s12 + s13 + s23) + 
            10*p2q^4*s13*(2*s12 + s23)*(s12 + s13 + s23) + 
            p2q^3*p3q*(20*s12^3 + 10*s13*s23*(s13 + 4*s23) + 
              2*s12^2*(29*s13 + 5*s23) + s12*(-16*s13^2 + 89*s13*s23 - 
                12*s23^2)) + p2q*p3q^3*(38*s12^3 + s12^2*(-14*s13 + 43*s23) + 
              s12*(2*s13^2 + 20*s13*s23 - 11*s23^2) + 10*s23*(s13^2 + 
                s13*s23 - s23^2)) + p2q^2*p3q^2*(38*s12^3 + s12^2*(22*s13 + 
                43*s23) + s12*(-16*s13^2 + 107*s13*s23 - 13*s23^2) + 
              10*s23*(s13^2 + 4*s13*s23 - s23^2))) + 
          p1q*(p3q^5*s12^2*(s12 - 2*s23)*(s12 + s13 + s23) + 
            10*p2q^5*s13^2*(s12 + s13 + s23)*(s12 + 2*s23) + 
            p2q^3*p3q^2*(10*s12^4 - 2*s12^3*(14*s13 + 5*s23) + 
              s12*s13*(-8*s13^2 + 141*s13*s23 - 46*s23^2) + s12^2*(35*s13^2 - 
                46*s13*s23 - 24*s23^2) + 10*s13*s23*(2*s13^2 + 5*s13*s23 - 
                2*s23^2)) - p2q^4*p3q*s13*(20*s12^3 - 10*s13*s23*(2*s13 + 
                5*s23) + s12^2*(s13 + 20*s23) + s12*(8*s13^2 - 105*s13*s23 + 
                4*s23^2)) + p2q*p3q^4*s12*(19*s12^3 - s12^2*(10*s13 + 
                7*s23) + 2*s23*(9*s13^2 + 9*s13*s23 - 10*s23^2) - 
              2*s12*(s13^2 - 16*s13*s23 + 26*s23^2)) + p2q^2*p3q^3*
             (19*s12^4 - s12^3*(46*s13 + 7*s23) + s12^2*(17*s13^2 - 
                10*s13*s23 - 56*s23^2) + 20*s13*s23*(s13^2 + s13*s23 - 
                s23^2) + s12*(s13^3 + 57*s13^2*s23 - 42*s13*s23^2 - 
                20*s23^3)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(2*p1q^5*(10*p2q + p3q)*s12*s23^2*(s12 + s13 + s23)^2 - 
          4*p1q^4*s23*(s12 + s13 + s23)^2*(p3q^2*s12*(s12 - s23) + 
            5*p2q^2*(2*s12*s13 - s12*s23 + s13*s23) + 
            p2q*p3q*(10*s12^2 + s12*(s13 - 15*s23) + 5*s13*s23)) + 
          (p3q*s12 - p2q*s13)^2*(p3q^4*s12*(s12 + s13 + s23)^2 - 
            10*p2q^4*s13*(s12 + s13 + s23)^2 + p2q^3*p3q*(10*s12^3 - 
              s12^2*(s13 - 21*s23) - 10*s13*(3*s13^2 + 4*s13*s23 + s23^2) + 
              s12*(-41*s13^2 - 10*s13*s23 + 11*s23^2)) + 
            p2q*p3q^3*(21*s12^3 + s12^2*(41*s13 + 43*s23) + 10*s13*(-s13^2 + 
                s23^2) + 2*s12*(5*s13^2 + 26*s13*s23 + 11*s23^2)) + 
            p2q^2*p3q^2*(21*s12^3 + s12^2*(30*s13 + 44*s23) + 
              10*s13*(-3*s13^2 - 2*s13*s23 + s23^2) + s12*(-21*s13^2 + 
                42*s13*s23 + 23*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p3q^3*s12*(s12 + s13 + s23)*(2*s12^2 - 8*s12*s23 + 3*s23^2) + 
            p2q*p3q^2*(20*s12^4 + 4*s12^3*(4*s13 - 25*s23) - 20*s13^2*s23^2 + 
              2*s12*s23*(16*s13^2 + 41*s13*s23 + 31*s23^2) - s12^2*(4*s13^2 + 
                92*s13*s23 + 59*s23^2)) + 10*p2q^3*(2*s13*s23*(2*s13^2 + 
                s13*s23 - s23^2) + s12^2*(2*s13^2 - 4*s13*s23 + s23^2) + 
              s12*(2*s13^3 + 2*s13^2*s23 - 5*s13*s23^2 + s23^3)) - 
            p2q^2*p3q*(40*s12^3*(s13 + s23) + s12^2*(38*s13^2 + 160*s13*s23 - 
                s23^2) + 20*s13*s23*(-2*s13^2 + s23^2) - 2*s12*(s13^3 - 
                19*s13^2*s23 - 35*s13*s23^2 + 21*s23^3))) + 
          p1q^2*(s12 + s13 + s23)*(p3q^4*s12*(s12 + s13 + s23)*
             (4*s12^2 - 6*s12*s23 + s23^2) - 10*p2q^4*s13*
             (2*s13^3 - 2*s12^2*(s13 - s23) - 2*s13^2*s23 - 3*s13*s23^2 + 
              s23^3 + s12*s23*(-4*s13 + 3*s23)) + p2q*p3q^3*
             (60*s12^4 + s12^3*(32*s13 - 62*s23) + 10*s13*s23^2*(-s13 + 
                s23) + 2*s12*s23*(17*s13^2 + 7*s13*s23 + 11*s23^2) - 
              s12^2*(28*s13^2 + 134*s13*s23 + 103*s23^2)) + 
            p2q^3*p3q*(-20*s12^3*(2*s13 + s23) + 2*s12^2*(30*s13^2 - 
                51*s13*s23 - 5*s23^2) - 10*s13*(2*s13^3 - 6*s13^2*s23 - 
                s13*s23^2 + s23^3) + s12*(80*s13^3 + 120*s13^2*s23 - 
                55*s13*s23^2 + 11*s23^3)) + p2q^2*p3q^2*(20*s12^4 - 
              2*s12^3*(60*s13 + 31*s23) + 10*s13*s23*(4*s13^2 - 3*s13*s23 + 
                s23^2) - 3*s12^2*(32*s13^2 + 94*s13*s23 + 21*s23^2) + 
              s12*(44*s13^3 + 24*s13^2*s23 - 75*s13*s23^2 + 23*s23^3))) - 
          p1q*(-(p3q^5*s12^2*(3*s12 - 2*s23)*(s12 + s13 + s23)^2) - 
            10*p2q^5*s13^2*(s12 + s13 + s23)^2*(s12 - 2*s13 + 2*s23) + 
            p2q^4*p3q*s13*(20*s12^4 + s12^3*(-41*s13 + 40*s23) + 
              s12^2*(-111*s13^2 - 165*s13*s23 + 22*s23^2) + 20*s13*(2*s13^3 - 
                3*s13*s23^2 - s23^3) - 2*s12*(5*s13^3 + 107*s13^2*s23 + 
                71*s13*s23^2 - s23^3)) + p2q*p3q^4*s12*(-61*s12^4 - 
              3*s12^3*(35*s13 + 27*s23) - 2*s12^2*(9*s13^2 + 8*s13*s23 - 
                12*s23^2) + 2*s13*s23*(-9*s13^2 + 2*s13*s23 + 11*s23^2) + 
              2*s12*(13*s13^3 + 28*s13^2*s23 + 57*s13*s23^2 + 22*s23^3)) + 
            p2q^3*p3q^2*(-10*s12^5 + 82*s12^4*s13 + s12^3*(71*s13^2 + 
                226*s13*s23 + 32*s23^2) - 2*s12*s13*(55*s13^3 + 167*s13^2*
                 s23 + 49*s13*s23^2 - 13*s23^3) + 20*s13^2*(s13^3 - 
                2*s13^2*s23 - 2*s13*s23^2 + s23^3) + s12^2*(-151*s13^3 - 
                41*s13^2*s23 + 172*s13*s23^2 + 22*s23^3)) + 
            p2q^2*p3q^3*(-41*s12^5 + s12^4*(71*s13 - 41*s23) + 
              20*s13^2*s23*(-s13^2 + s23^2) + s12^3*(249*s13^2 + 
                316*s13*s23 + 46*s23^2) + s12^2*(94*s13^3 + 318*s13^2*s23 + 
                314*s13*s23^2 + 46*s23^3) + s12*s13*(-43*s13^3 - 
                86*s13^2*s23 + 61*s13*s23^2 + 64*s23^3)))))/
        (27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((ep^3*(s12 + s13 + s23)*(-(p2q^3*s13^2*(s12 + s13)) + 
          (p1q + p3q)*s23*(p3q*s12 - p1q*s23)^2 + p2q^2*s13*
           (p1q*(2*s12 + 3*s13)*s23 + p3q*(2*s12^2 + 2*s12*s13 + s13*s23)) - 
          p2q*(p1q^2*(s12 + 3*s13)*s23^2 + 2*p1q*p3q*s23*(-s12^2 + s13*s23) + 
            p3q^2*s12*(s12^2 + s12*s13 + 2*s13*s23))))/(3*(p1q + p2q + p3q)*
         s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep^2*(s12 + s13 + s23)*(p1q^3*s23^2*(-(p2q*p3q*(3*s12 + s23)) + 
            p2q^2*(s12 + s13 + s23) + p3q^2*(s12 + s13 + s23)) + 
          p3q*(p3q*s12 - p2q*s13)^2*(-(p2q*p3q*(3*s12 + s23)) + 
            p3q^2*(s12 + s13 + s23) + p2q^2*(-s12 + 2*s13 + s23)) - 
          p1q^2*s23*(2*p2q^3*s13*(s12 + s13 + s23) + p3q^3*(2*s12 - s23)*
             (s12 + s13 + s23) + p2q*p3q^2*(-6*s12^2 + 2*s13^2 + 2*s13*s23 + 
              s23^2 + s12*(2*s13 + s23)) + p2q^2*p3q*(2*s12^2 - 
              s23*(4*s13 + s23) + s12*(-4*s13 + 3*s23))) + 
          p1q*(p2q^4*s13^2*(s12 + s13 + s23) + p3q^4*s12*(s12 - 2*s23)*
             (s12 + s13 + s23) - p2q^3*p3q*s13*(2*s12^2 + 5*s12*s13 + 
              s23*(5*s13 + 2*s23)) - p2q*p3q^3*(3*s12^3 + s12^2*(2*s13 - 
                5*s23) + 2*s13*s23*(s13 + s23) + 2*s12*(s13^2 + 2*s13*s23 - 
                s23^2)) + p2q^2*p3q^2*(s12^3 + s12^2*(7*s13 + 3*s23) + 
              s12*(s13^2 + 4*s13*s23 - 2*s23^2) + s13*(s13^2 + s13*s23 + 
                2*s23^2)))))/(3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(2*p1q^5*s23^2*(s12 + s13 + s23)^2 + 2*p1q^4*s23*
           (s12 + s13 + s23)^2*(-2*p3q*s12 - 2*p2q*s13 + p2q*s23 + 
            2*p3q*s23) + p3q*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (s12 + s13 + s23)*(p2q*(-s13 + s23) + p3q*(s12 + s13 + s23)) + 
          p1q^3*(s12 + s13 + s23)*(p2q^2*(s12 + s13 + s23)*
             (2*s13^2 - 4*s13*s23 + s23^2) + p3q^2*(s12 + s13 + s23)*
             (2*s12^2 - 8*s12*s23 + 3*s23^2) - p2q*p3q*(4*s12^2*(s13 + s23) + 
              2*s23*(4*s13^2 + 3*s13*s23 - 2*s23^2) + s12*(4*s13^2 + 
                16*s13*s23 + s23^2))) + p1q^2*(s12 + s13 + s23)*
           (2*p2q^3*s13*(s13 - s23)*(s12 + s13 + s23) + 
            p3q^3*(s12 + s13 + s23)*(4*s12^2 - 6*s12*s23 + s23^2) - 
            p2q^2*p3q*(-4*s13^3 + 9*s13*s23^2 - s23^3 + 2*s12^2*(2*s13 + 
                s23) + 2*s12*s23*(6*s13 + s23)) + p2q*p3q^2*
             (2*s12^3 - 2*s12^2*(3*s13 + 2*s23) + 2*s23*(-3*s13^2 - 
                3*s13*s23 + s23^2) - s12*(8*s13^2 + 18*s13*s23 + 7*s23^2))) + 
          p1q*(p2q^4*s13^2*(s12 + s13 + s23)^2 + p3q^4*s12*(3*s12 - 2*s23)*
             (s12 + s13 + s23)^2 + p2q*p3q^3*(3*s12^4 - s12^3*(s13 - 5*s23) - 
              2*s13*s23*(s13 + s23)^2 - 2*s12*(s13 + s23)^2*(3*s13 + 2*s23) - 
              2*s12^2*(5*s13^2 + 5*s13*s23 + s23^2)) + p2q^2*p3q^2*
             (s12^4 + s12^3*(-4*s13 + 2*s23) - s12^2*(6*s13^2 + 12*s13*s23 + 
                s23^2) + s13*(3*s13^3 + 6*s13^2*s23 - s13*s23^2 - 4*s23^3) + 
              2*s12*(s13^3 - 3*s13^2*s23 - 7*s13*s23^2 - s23^3)) + 
            p2q^3*p3q*s13*(-2*s12^3 - s12^2*(s13 + 4*s23) + s12*(3*s13^2 + 
                5*s13*s23 - 4*s23^2) + 2*(s13^3 + 4*s13^2*s23 + 2*s13*s23^2 - 
                s23^3)))))/(3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((-3*ep*(s12 + s13 + s23)*(2*p1q^4*(p2q + p3q)*s23^3*
           (s12 + s13 + s23) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (p3q^2*s23*(s12 + s13 + s23) + p2q^2*(4*s13^2 + s12*s23 + 
              5*s13*s23) + p2q*p3q*(s13*s23 + s12*(-4*s13 + s23))) - 
          p1q^3*s23^2*(2*p3q^2*(2*s12 - s23)*(s12 + s13 + s23) + 
            p2q^2*(4*s12*s13 + s23^2) + p2q*p3q*(4*s12^2 + 4*s13^2 + 
              2*s13*s23 - s23^2 + 2*s12*(6*s13 + s23))) - 
          p1q*(-2*p3q^4*s12*(s12 - s23)*s23*(s12 + s13 + s23) + 
            p2q^4*s13*(-4*s13^3 + 4*s13^2*s23 + 2*s12*s23^2 + 11*s13*s23^2) + 
            p2q*p3q^3*(s12^3*(4*s13 - 2*s23) + 3*s12^2*s23*(-2*s13 + s23) + 
              2*s13*s23^2*(s13 + s23) + 2*s12*s23*(2*s13^2 + 5*s13*s23 + 
                s23^2)) + p2q^3*p3q*(2*s12^2*s23^2 + s13^2*s23*(6*s13 + 
                11*s23) + 6*s12*s13*(2*s13^2 + s13*s23 + 2*s23^2)) + 
            p2q^2*p3q^2*(2*s12*s13*s23*(s13 + 9*s23) + 2*s13*s23*(-s13^2 + 
                s13*s23 + s23^2) + s12^2*(-12*s13^2 - 8*s13*s23 + 
                5*s23^2))) + p1q^2*s23*(p3q^3*(s12 + s13 + s23)*
             (2*s12^2 - 4*s12*s23 + s23^2) + p2q*p3q^2*(2*s12^3 + 
              s12^2*(6*s13 - 2*s23) - 4*s12*s13*(s13 + 4*s23) + 
              s23*(-4*s13^2 - 2*s13*s23 + s23^2)) + 2*p2q^2*p3q*
             (-2*s12^2*s13 - s12*(s13^2 + 10*s13*s23 - 2*s23^2) + 
              s13*(s13^2 + s13*s23 + 2*s23^2)) + 
            p2q^3*(s12*(2*s13^2 + s23^2) + s13*(-6*s13^2 - 2*s13*s23 + 
                7*s23^2)))))/(p2q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) - 
       (3*ep^2*(s12 + s13 + s23)*(-(p1q^3*p2q*s23^2*(-4*p3q*s12*s13 + 
             4*p2q*s13^2 + 4*p2q*s13*s23 + 3*p2q*s23^2 + 3*p3q*s23^2)) + 
          p1q^2*s23*(-(p3q^3*s23^2*(s12 + s13 + s23)) - 
            p2q*p3q^2*(2*s12 - s23)*(4*s12*s13 - 3*s23^2) - 
            4*p2q^2*p3q*s23*(-3*s12*s13 + s13^2 - 2*s12*s23 - s13*s23 + 
              s23^2) + p2q^3*(8*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + 
              (s12 - 2*s23)*s23^2)) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (-(p3q^2*s23*(s12 + s13 + s23)) + p2q^2*(-4*s13^2 - 3*s13*s23 + 
              (s12 - 2*s23)*s23) + p2q*p3q*((s13 - 2*s23)*s23 + 
              s12*(4*s13 + s23))) + p1q*(2*p3q^4*s12*s23^2*(s12 + s13 + 
              s23) + p2q^4*s13*(-4*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 - 
              2*(s12 - 2*s23)*s23^2) + p2q*p3q^3*(4*s12^3*s13 + 
              2*s13*s23^2*(s13 + s23) + 2*s12*s23^2*(s13 + 3*s23) - 
              s12^2*s23*(8*s13 + 3*s23)) + p2q^2*p3q^2*(6*s13*s23^3 + 
              2*s12*s23^2*(5*s13 + 4*s23) - s12^2*(12*s13^2 + 12*s13*s23 + 
                7*s23^2)) + p2q^3*p3q*(-2*s12^2*s23^2 + s13*s23*(8*s13^2 + 
                s13*s23 + 8*s23^2) + 4*s12*(3*s13^3 + 2*s13^2*s23 + 
                2*s13*s23^2 + s23^3)))))/(p2q*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((3*ep^2*(s12 + s13 + s23)*
         (p1q^3*p3q*s23^2*(4*p3q*s12^2 - 4*p2q*s12*s13 + 4*p3q*s12*s23 + 
            3*p2q*s23^2 + 3*p3q*s23^2) + p1q^2*s23*
           (p2q^3*s23^2*(s12 + s13 + s23) + p2q^2*p3q*(2*s13 - s23)*
             (4*s12*s13 - 3*s23^2) - p3q^3*(8*s12^3 + 4*s12^2*s23 + 
              3*s12*s23^2 + (s13 - 2*s23)*s23^2) + 4*p2q*p3q^2*s23*
             (s12^2 + s23*(-2*s13 + s23) - s12*(3*s13 + s23))) + 
          (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*s23*(s12 + s13 + s23) - 
            p2q*p3q*((s13 - 2*s23)*s23 + s12*(4*s13 + s23)) + 
            p3q^2*(4*s12^2 + 3*s12*s23 + s23*(-s13 + 2*s23))) + 
          p1q*(-2*p2q^4*s13*s23^2*(s12 + s13 + s23) + p3q^4*s12*
             (4*s12^3 - 4*s12^2*s23 - 3*s12*s23^2 + 2*(s13 - 2*s23)*s23^2) - 
            p2q*p3q^3*(-2*s13*(s13 - 2*s23)*s23^2 + 8*s12*s23^2*(s13 + s23) + 
              s12^2*s23*(8*s13 + s23) + 4*s12^3*(3*s13 + 2*s23)) + 
            p2q^2*p3q^2*(12*s12^2*s13^2 + s13*(7*s13 - 8*s23)*s23^2 - 
              2*s12*s23*(-6*s13^2 + 5*s13*s23 + 3*s23^2)) - 
            p2q^3*p3q*(2*s12^2*s23^2 - 3*s13*(s13 - 2*s23)*s23^2 + 
              2*s12*(2*s13^3 - 4*s13^2*s23 + s13*s23^2 + s23^3)))))/
        (p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) - (3*ep*(s12 + s13 + s23)*
         (2*p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) + 
          (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*s23*(s12 + s13 + s23) + 
            p3q^2*(4*s12^2 + 5*s12*s23 + s13*s23) + 
            p2q*p3q*(s13*s23 + s12*(-4*s13 + s23))) + p1q^3*s23^2*
           (-2*p2q^2*(2*s13 - s23)*(s12 + s13 + s23) - 
            p3q^2*(4*s12*s13 + s23^2) - p2q*p3q*(4*s12^2 + 4*s13^2 + 
              2*s13*s23 - s23^2 + 2*s12*(6*s13 + s23))) + 
          p1q^2*s23*(p2q^3*(s12 + s13 + s23)*(2*s13^2 - 4*s13*s23 + s23^2) + 
            p3q^3*(-6*s12^3 + 2*s12^2*(s13 - s23) + 7*s12*s23^2 + 
              s13*s23^2) + p2q^2*p3q*(2*s13^3 - 2*s13^2*s23 + s23^3 - 
              4*s12^2*(s13 + s23) + 2*s12*(3*s13^2 - 8*s13*s23 - s23^2)) + 
            2*p2q*p3q^2*(s12^3 + 2*s13*s23^2 + s12^2*(-s13 + s23) - 
              2*s12*(s13^2 + 5*s13*s23 - s23^2))) + 
          p1q*(2*p2q^4*s13*(s13 - s23)*s23*(s12 + s13 + s23) + 
            p3q^4*s12*(4*s12^3 - 4*s12^2*s23 - 11*s12*s23^2 - 2*s13*s23^2) - 
            p2q*p3q^3*(12*s12*s13*s23^2 + 2*s13^2*s23^2 + 6*s12^3*(2*s13 + 
                s23) + s12^2*s23*(6*s13 + 11*s23)) + p2q^2*p3q^2*
             (2*s12^3*s23 - 5*s13^2*s23^2 + 2*s12^2*(6*s13^2 - s13*s23 - 
                s23^2) - 2*s12*s23*(-4*s13^2 + 9*s13*s23 + s23^2)) - 
            p2q^3*p3q*(2*s12^2*s23*(2*s13 + s23) + s13*s23*(-2*s13^2 + 
                3*s13*s23 + 2*s23^2) + 2*s12*(2*s13^3 - 3*s13^2*s23 + 
                5*s13*s23^2 + s23^3)))))/(p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep]
 
P1Avg = 
    ((ep^3*(-(p2q*(23*s12*s13^2 + 95*s13^3 + 71*s12*s13*s23 + 102*s13^2*s23 + 
             40*s12*s23^2 + 7*s13*s23^2)) + p1q*(72*s12*s13^2 + 
            31*s12*s13*s23 + 95*s13^2*s23 - 33*s12*s23^2 + 102*s13*s23^2 + 
            7*s23^3) + p3q*(80*s13*s23*(s13 + s23) + 
            s12^2*(23*s13 + 33*s23) + s12*(95*s13^2 + 72*s13*s23 - 
              7*s23^2))))/(27*(p1q + p2q + p3q)*s12*s13*(s13 + s23)) - 
       (2*p1q^4*s23^2*(s12 + s13 + s23)*(176*p2q*s13^3*(s13 + s23) + 
           77*p3q*s13^3*(s13 + s23) - p3q*s12*(22*s13^3 + 21*s13^2*s23 + 
             10*s23^3) + p2q*s12*(77*s13^3 + 312*s13^2*s23 + 243*s13*s23^2 + 
             80*s23^3)) - s23*(-(p3q^5*s12^2*(20*s12^3*s23 + 20*s12^2*s23*(
                3*s13 + s23) + s13^2*(99*s13^2 + 130*s13*s23 + 31*s23^2) + 
              s12*s13*(99*s13^2 + 71*s13*s23 + 40*s23^2))) - 
           p2q^5*s13^3*(176*s23*(s13 + s23)^2 + 9*s12^2*(11*s13 + 3*s23) + 
             s12*(99*s13^2 + 302*s13*s23 + 203*s23^2)) + 2*p2q*p3q^4*s12*
            (-90*s12^5 + s12^4*(63*s13 - 100*s23) + s12^3*s13*
              (-180*s13 + 133*s23) + s12*s13*s23*(337*s13^2 + 29*s13*s23 + 20*
                s23^2) + 2*s12^2*(117*s13^3 - 157*s13^2*s23 + 10*s13*s23^2 + 
               5*s23^3) + s13^2*(99*s13^3 + 40*s13^2*s23 + 121*s13*s23^2 + 20*
                s23^3)) + p2q^3*p3q^2*s13*(-360*s12^4*(2*s13 + s23) + 
             s12^3*(837*s13^2 - 30*s13*s23 - 360*s23^2) + 
             2*s13^3*(-99*s13^2 + 50*s13*s23 + 149*s23^2) + 
             s12^2*s13*(-1377*s13^2 + 217*s13*s23 + 870*s23^2) + 
             2*s12*s13*(432*s13^3 + 85*s13^2*s23 - 85*s13*s23^2 + 30*
                s23^3)) + p2q^2*p3q^3*(180*s12^5*(3*s13 + s23) + 
             s13^4*(-99*s13^2 + 50*s13*s23 + 149*s23^2) + 
             s12^4*(-738*s13^2 + 434*s13*s23 + 200*s23^2) + 
             2*s12^3*(594*s13^3 - 370*s13^2*s23 - 113*s13*s23^2 + 10*s23^3) + 
             2*s12^2*s13*(-567*s13^3 + 421*s13^2*s23 + 352*s13*s23^2 + 20*
                s23^3) + s12*s13^2*(297*s13^3 - 703*s13^2*s23 - 208*s13*
                s23^2 + 80*s23^3)) + p2q^4*p3q*s13^2*
            (9*s12^3*(51*s13 + 41*s23) + s12^2*(-126*s13^2 + 422*s13*s23 + 
               309*s23^2) + s12*(549*s13^3 + 615*s13^2*s23 + 158*s13*s23^2 + 
               20*s23^3) - 2*s13*(99*s13^3 + 162*s13^2*s23 + 151*s13*s23^2 + 
               88*s23^3))) + 2*p1q^3*s23*(s12 + s13 + s23)*
          (p2q*p3q*(4*s13^3*(18*s13^2 + 113*s13*s23 + 95*s23^2) - 
             3*s12^2*(42*s13^3 + 224*s13^2*s23 + 243*s13*s23^2 + 110*s23^3) + 
             s12*(-54*s13^4 + 86*s13^3*s23 + 555*s13^2*s23^2 + 183*s13*
                s23^3 - 20*s23^4)) - p3q^2*(-77*s13^3*s23*(s13 + s23) + 
             3*s12^2*(9*s13^3 + 2*s13^2*s23 - 10*s23^3) + 
             s12*(126*s13^4 + 274*s13^3*s23 + 59*s13^2*s23^2 - 20*s13*s23^3 + 
               10*s23^4)) + p2q^2*(3*s13^3*(-9*s13^2 + 158*s13*s23 + 167*
                s23^2) + s12*(72*s13^4 - 9*s13^3*s23 + 218*s13^2*s23^2 + 163*
                s13*s23^3 + 80*s23^4))) + 
         p1q*(-(p3q^4*s12*(s12^4*(54*s13^2 - 20*s23^2) + 4*s12^3*(27*s13^3 + 
                27*s13^2*s23 - 15*s13*s23^2 + 10*s23^3) + s13^2*s23*(
                99*s13^3 + 297*s13^2*s23 + 229*s13*s23^2 + 31*s23^3) + 
              s12*s13*s23*(-99*s13^3 - 53*s13^2*s23 + 58*s13*s23^2 + 
                80*s23^3) + s12^2*(54*s13^4 - 90*s13^3*s23 - 39*s13^2*s23^2 + 
                100*s13*s23^3 + 60*s23^4))) + p2q^4*s13^2*
            (2*s13*(s13 + s23)^2*(27*s13^2 + 27*s13*s23 + 352*s23^2) + 
             s12^2*(54*s13^3 + 351*s13^2*s23 + 158*s13*s23^2 + 149*s23^3) + 
             s12*(108*s13^4 + 513*s13^3*s23 + 1267*s13^2*s23^2 + 1011*s13*
                s23^3 + 149*s23^4)) - p2q^3*p3q*s13*
            (s12^3*(162*s13^3 + 1251*s13^2*s23 + 1353*s13*s23^2 + 160*
                s23^3) + 3*s12^2*(90*s13^4 + 33*s13^3*s23 + 498*s13^2*s23^2 + 
               365*s13*s23^3 + 40*s23^4) - 2*s13^2*(27*s13^4 + 378*s13^3*
                s23 + 804*s13^2*s23^2 + 830*s13*s23^3 + 377*s23^4) + 
             2*s12*(27*s13^5 + 378*s13^4*s23 + 67*s13^3*s23^2 - 341*s13^2*
                s23^3 - 149*s13*s23^4 - 20*s23^5)) + p2q*p3q^3*
            (-2*s12^5*(27*s13^2 + 243*s13*s23 + 350*s23^2) + 
             s12^4*(54*s13^3 + 792*s13^2*s23 - 268*s13*s23^2 - 780*s23^3) + 
             s13^3*s23*(99*s13^3 + 99*s13^2*s23 + 149*s13*s23^2 + 149*
                s23^3) - s12*s13*s23*(495*s13^4 + 21*s13^3*s23 + 60*s13^2*
                s23^2 + 102*s13*s23^3 - 40*s23^4) + s12^3*(270*s13^4 + 54*
                s13^3*s23 + 949*s13^2*s23^2 + 698*s13*s23^3 - 40*s23^4) + 
             s12^2*(162*s13^5 + 846*s13^4*s23 - 1314*s13^3*s23^2 - 1423*s13^2*
                s23^3 - 60*s13*s23^4 + 40*s23^5)) + p2q^2*p3q^2*
            (2*s13^3*s23*(198*s13^3 + 173*s13^2*s23 + 124*s13*s23^2 + 149*
                s23^3) + 2*s12^4*(81*s13^3 + 693*s13^2*s23 + 673*s13*s23^2 + 
               260*s23^3) + s12^3*(162*s13^4 - 1206*s13^3*s23 - 227*s13^2*
                s23^2 + 1214*s13*s23^3 + 560*s23^4) - 
             s12^2*(162*s13^5 - 648*s13^4*s23 + 2218*s13^3*s23^2 + 2807*s13^2*
                s23^3 + 532*s13*s23^4 - 40*s23^5) + s12*s13*(-162*s13^5 - 
               1692*s13^4*s23 - 81*s13^3*s23^2 + 1397*s13^2*s23^3 + 564*s13*
                s23^4 + 80*s23^5))) + 
         p1q^2*(p2q^3*s13*(2*s13^2*(s13 + s23)^2*(27*s13^2 + 589*s23^2) + 
             s12^2*(54*s13^4 + 396*s13^3*s23 - 41*s13^2*s23^2 - 39*s13*
                s23^3 - 160*s23^4) + s12*(108*s13^5 + 504*s13^4*s23 + 1533*
                s13^3*s23^2 + 1098*s13^2*s23^3 - 199*s13*s23^4 - 160*
                s23^5)) + p3q^3*(77*s13^3*s23^2*(s13 + s23)^2 + 
             2*s12^3*s13*(54*s13^3 + 261*s13^2*s23 + 140*s13*s23^2 - 70*
                s23^3) + 6*s12^4*(9*s13^3 + 18*s13^2*s23 - 10*s23^3) - 
             s12*s13*s23*(198*s13^4 + 539*s13^3*s23 + 394*s13^2*s23^2 + 13*
                s13*s23^3 - 40*s23^4) + s12^2*(54*s13^5 + 216*s13^4*s23 + 114*
                s13^3*s23^2 + 39*s13^2*s23^3 + 20*s13*s23^4 + 60*s23^5)) - 
           p2q^2*p3q*(2*s12^3*(54*s13^4 + 585*s13^3*s23 + 931*s13^2*s23^2 + 
               566*s13*s23^3 + 250*s23^4) - 2*s13^3*(27*s13^4 + 351*s13^3*
                s23 + 1089*s13^2*s23^2 + 1357*s13*s23^3 + 592*s23^4) + 
             s12*s23*(90*s13^5 - 1330*s13^4*s23 - 2769*s13^3*s23^2 - 1827*
                s13^2*s23^3 - 386*s13*s23^4 + 20*s23^5) + 
             s12^2*(162*s13^5 + 630*s13^4*s23 + 2148*s13^3*s23^2 + 1493*s13^2*
                s23^3 + 1226*s13*s23^4 + 520*s23^5)) + 
           p2q*p3q^2*(6*s12^4*(9*s13^3 + 129*s13^2*s23 + 243*s13*s23^2 + 170*
                s23^3) + 2*s13^3*s23*(99*s13^3 + 264*s13^2*s23 + 355*s13*
                s23^2 + 190*s23^3) + 2*s12^3*s23*(9*s13^3 - 125*s13^2*s23 + 
               750*s13*s23^2 + 560*s23^3) - s12^2*(162*s13^5 + 540*s13^4*
                s23 + 2848*s13^3*s23^2 + 2945*s13^2*s23^3 + 758*s13*s23^4 - 
               80*s23^5) + s12*(-108*s13^6 - 918*s13^5*s23 - 634*s13^4*
                s23^2 + 539*s13^3*s23^3 + 555*s13^2*s23^4 + 100*s13*s23^5 - 
               20*s23^6))))/(54*ep*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13^3*s23^2*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep^2*(-(p2q^5*s13^2*(s13 + s23)*(-9*s12^2*(s13^2 - 10*s13*s23 - 19*
                s23^2) + 2*s23*(27*s13^3 + 157*s13^2*s23 + 213*s13*s23^2 + 83*
                s23^3) + s12*(-9*s13^3 + 135*s13^2*s23 + 521*s13*s23^2 + 337*
                s23^3))) - p3q^2*(s12 + s13 + s23)*
           (p1q^3*s23^2*(s13 + s23)^2*(9*s13^2 + 14*s13*s23 + 10*s23^2) - 
            p1q^2*p3q*s23^2*(s13 + s23)*(5*s13*s23*(s13 + s23) + 
              s12*(41*s13^2 + 67*s13*s23 + 30*s23^2)) + p3q^3*s12^2*
             (-5*s13*s23^2*(s13 + s23) + s12*(9*s13^3 - 9*s13^2*s23 - 
                29*s13*s23^2 - 10*s23^3)) + p1q*p3q^2*s12*
             (5*s13*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) + s12*(-9*s13^4 + 
                70*s13^2*s23^2 + 92*s13*s23^3 + 30*s23^4))) - 
          p2q^4*s13*(p1q*(s13 + s23)*(s12^2*(-9*s13^3 + 90*s13^2*s23 + 
                241*s13*s23^2 - 10*s23^3) + s12*(-9*s13^4 + 135*s13^3*s23 + 
                738*s13^2*s23^2 + 459*s13*s23^3 - 15*s23^4) + 
              s23*(54*s13^4 + 461*s13^3*s23 + 635*s13^2*s23^2 + 
                223*s13*s23^3 - 5*s23^4)) + p3q*(-(s13*(s13 + s23)^2*
                (9*s13^3 - 72*s13^2*s23 - 662*s13*s23^2 - 517*s23^3)) + 
              s12^3*(27*s13^3 - 162*s13^2*s23 - 271*s13*s23^2 - 10*s23^3) + 
              s12^2*(18*s13^4 - 90*s13^3*s23 - 369*s13^2*s23^2 - 
                246*s13*s23^3 - 25*s23^4) + s12*(-18*s13^5 + 27*s13^4*s23 + 
                457*s13^3*s23^2 + 918*s13^2*s23^3 + 591*s13*s23^4 + 
                85*s23^5))) + p2q*p3q*(-(p1q^3*s23^2*(s13 + s23)*
              (9*s13^4 - 9*s13^3*s23 + 4*s13^2*s23^2 + 31*s13*s23^3 + 9*
                s23^4 + s12^2*(9*s13^2 - s23^2) + s12*(18*s13^3 - 
                 9*s13^2*s23 + 21*s13*s23^2 + 8*s23^3))) + 
            p1q^2*p3q*s23*(s12^3*s23*(9*s13^2 + 18*s13*s23 + 17*s23^2) - 
              s23*(s13 + s23)^2*(13*s13^3 - 203*s13^2*s23 - 182*s13*s23^2 + 
                10*s23^3) + s12*s23*(40*s13^4 + 179*s13^3*s23 + 387*s13^2*
                 s23^2 + 285*s13*s23^3 + 37*s23^4) + s12^2*(-72*s13^4 - 
                252*s13^3*s23 - 83*s13^2*s23^2 + 201*s13*s23^3 + 64*s23^4)) + 
            p3q^3*s12*(s12^4*(-9*s13^2 + 19*s23^2) + s13*s23^2*(152*s13^3 + 
                59*s13^2*s23 - 98*s13*s23^2 - 5*s23^3) + s12^3*(-18*s13^3 - 
                63*s13^2*s23 + 103*s13*s23^2 + 48*s23^3) + s12^2*(18*s13^4 + 
                27*s13^3*s23 + 33*s13^2*s23^2 + 140*s13*s23^3 + 19*s23^4) + 
              s12*(27*s13^5 + 45*s13^4*s23 - 69*s13^3*s23^2 - 109*s13^2*
                 s23^3 + 112*s13*s23^4 - 10*s23^5)) + p1q*p3q^2*
             (-(s13*s23^2*(s13 + s23)^2*(85*s13^2 - 88*s13*s23 - 5*s23^2)) + 
              s12^4*(9*s13^3 + 9*s13^2*s23 - 19*s13*s23^2 - 37*s23^3) + 
              s12^3*(18*s13^4 + 153*s13^3*s23 + 158*s13^2*s23^2 - 
                275*s13*s23^3 - 104*s23^4) - s12^2*(9*s13^5 + 36*s13^4*s23 + 
                34*s13^3*s23^2 + 345*s13^2*s23^3 + 385*s13*s23^4 + 
                47*s23^5) - 2*s12*(9*s13^6 + 27*s13^5*s23 - 85*s13^4*s23^2 - 
                46*s13^3*s23^3 + 204*s13^2*s23^4 + 137*s13*s23^5 - 
                10*s23^6))) + p2q^3*(p1q^2*s23^2*(s13 + s23)*
             (-147*s13^4 - 168*s13^3*s23 - 14*s13^2*s23^2 + 8*s13*s23^3 + 
              s23^4 + s12^2*(-79*s13^2 + 10*s13*s23 + s23^2) + 
              2*s12*(-113*s13^3 - 45*s13^2*s23 + 9*s13*s23^2 + s23^3)) + 
            p3q^2*(s13^2*(s13 + s23)^2*(9*s13^3 + 27*s13^2*s23 - 
                514*s13*s23^2 - 340*s23^3) + s12^3*s23*(198*s13^3 + 
                241*s13^2*s23 - 109*s13*s23^2 - 38*s23^3) + s12^4*(27*s13^3 - 
                81*s13^2*s23 - 29*s13*s23^2 - 19*s23^3) + s12*s13*(
                -18*s13^5 + 153*s13^4*s23 + 875*s13^3*s23^2 + 837*s13^2*
                 s23^3 - 113*s13*s23^4 - 246*s23^5) + s12^2*(-54*s13^5 + 
                153*s13^4*s23 + 879*s13^3*s23^2 + 625*s13^2*s23^3 - 
                26*s13*s23^4 - 19*s23^5)) + p1q*p3q*(2*s12^3*(-9*s13^4 + 
                36*s13^3*s23 + 85*s13^2*s23^2 + 9*s13*s23^3 + 9*s23^4) + 
              s13*(s13 + s23)^2*(9*s13^4 - 72*s13^3*s23 - 768*s13^2*s23^2 - 
                313*s13*s23^3 + 206*s23^4) - s12^2*(9*s13^5 + 45*s13^4*s23 + 
                190*s13^3*s23^2 + 161*s13^2*s23^3 - 109*s13*s23^4 - 
                36*s23^5) + s12*(18*s13^6 - 9*s13^5*s23 - 599*s13^4*s23^2 - 
                1142*s13^3*s23^3 - 491*s13^2*s23^4 + 97*s13*s23^5 + 
                18*s23^6))) + p2q^2*(p1q^3*s23^2*(s13 + s23)*
             (s12^2*(-9*s13^2 + s23^2) + s23*(41*s13^3 + 43*s13^2*s23 + 
                3*s13*s23^2 + s23^3) + s12*(-9*s13^3 + 32*s13^2*s23 + 
                3*s13*s23^2 + 2*s23^3)) + p1q^2*p3q*s23*
             (s12^3*s23*(9*s13^2 + 18*s13*s23 + 17*s23^2) - s23*(s13 + s23)^
                2*(115*s13^3 - 222*s13^2*s23 - 184*s13*s23^2 + 9*s23^3) + 
              s12^2*s23*(-255*s13^3 - 233*s13^2*s23 + 97*s13*s23^2 + 
                35*s23^3) + s12*(72*s13^5 + 7*s13^4*s23 - 57*s13^3*s23^2 + 
                154*s13^2*s23^3 + 155*s13*s23^4 + 9*s23^5)) - 
            p3q^3*(s13^2*(157*s13 - 11*s23)*s23^2*(s13 + s23)^2 + 
              s12^5*(9*s13^2 - 19*s23^2) - s12^4*(18*s13^3 - 162*s13^2*s23 + 
                27*s13*s23^2 + 19*s23^3) + s12^2*s23*(135*s13^4 + 
                140*s13^3*s23 + 82*s13^2*s23^2 - 38*s13*s23^3 + 29*s23^4) + 
              s12^3*(-54*s13^4 + 9*s13^3*s23 + 157*s13^2*s23^2 + 
                59*s13*s23^3 + 29*s23^4) + s12*s13*(27*s13^5 + 90*s13^4*s23 - 
                477*s13^3*s23^2 - 686*s13^2*s23^3 + 20*s13*s23^4 + 
                166*s23^5)) + p1q*p3q^2*(s12^4*(9*s13^3 + 9*s13^2*s23 - 
                19*s13*s23^2 - 37*s23^3) + s12^3*(-9*s13^4 + 162*s13^3*s23 + 
                380*s13^2*s23^2 - 129*s13*s23^3 - 56*s23^4) + 
              s13*(s13 + s23)^2*(9*s13^4 + 27*s13^3*s23 - 446*s13^2*s23^2 - 
                42*s13*s23^3 + 206*s23^4) - s12^2*(36*s13^5 + 90*s13^4*s23 - 
                56*s13^3*s23^2 + 89*s13^2*s23^3 + 100*s13*s23^4 - 19*s23^5) + 
              s12*(-9*s13^6 + 90*s13^5*s23 + 431*s13^4*s23^2 + 68*s13^3*
                 s23^3 - 466*s13^2*s23^4 - 164*s13*s23^5 + 38*s23^6)))))/
        (27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23^2*(s13 + s23)*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*(-2*p1q^4*s23^2*(s13 + s23)^2*(s12 + s13 + s23)*
           (p2q*s13*(9*s13^3 + 50*s13^2*s23 + s13*s23^2 - 40*s23^3) + 
            p3q*s12*(9*s13^3 - 10*s13*s23^2 - 5*s23^3) + 
            p3q*s13*(9*s13^3 + 14*s13^2*s23 + 10*s13*s23^2 + 5*s23^3) + 
            p2q*s12*(9*s13^3 - s13*s23^2 + 40*s23^3)) + 
          4*p2q^5*s13^3*(s13 + s23)*(s23*(s13 + s23)^2*(9*s13^2 - 
              38*s13*s23 - 87*s23^2) + s12^2*(9*s13^3 + 21*s13*s23^2 + 
              10*s23^3) + s12*(9*s13^4 + 18*s13^3*s23 - 8*s13^2*s23^2 - 
              94*s13*s23^3 - 77*s23^4)) - 2*p3q^5*s12^2*(s13 + s23)*
           (5*s12^4*s23^2 + 5*s12^3*s23^2*(2*s13 + 3*s23) + 
            9*s13^2*s23*(s13 + s23)^2*(11*s13 + 4*s23) + 
            s12*s13*(18*s13^4 + 81*s13^3*s23 + 43*s13^2*s23^2 - 
              30*s13*s23^3 - 10*s23^4) + s12^2*(18*s13^4 - 36*s13^3*s23 - 
              51*s13^2*s23^2 + 5*s13*s23^3 + 10*s23^4)) + 
          p2q^4*p3q*s13^2*(s13*(s13 + s23)^3*(36*s13^3 + 126*s13^2*s23 + 
              961*s13*s23^2 - 257*s23^3) - 4*s12^3*(27*s13^4 - 36*s13^3*s23 - 
              276*s13^2*s23^2 - 323*s13*s23^3 - 90*s23^4) + 
            s12*(s13 + s23)^2*(72*s13^4 + 1692*s13^3*s23 + 3921*s13^2*s23^2 + 
              2465*s13*s23^3 + 172*s23^4) + 2*s12^2*(-36*s13^5 - 
              63*s13^4*s23 + 215*s13^3*s23^2 + 721*s13^2*s23^3 + 
              605*s13*s23^4 + 126*s23^5)) + p2q^2*p3q^3*
           (-2*s13^3*s23*(s13 + s23)^3*(99*s13^2 - 342*s13*s23 + 179*s23^2) - 
            s12*s13^2*(s13 + s23)^2*(108*s13^4 - 270*s13^3*s23 + 
              368*s13^2*s23^2 - 2847*s13*s23^3 - 785*s23^4) + 
            s12^5*(-36*s13^4 + 54*s13^3*s23 - 94*s13^2*s23^2 + 16*s13*s23^3 + 
              100*s23^4) + 2*s12^4*(36*s13^5 - 333*s13^4*s23 - 
              1299*s13^3*s23^2 - 856*s13^2*s23^3 - 6*s13*s23^4 + 60*s23^5) + 
            s12^2*s13*s23*(-1314*s13^5 - 2553*s13^4*s23 + 1772*s13^3*s23^2 + 
              5343*s13^2*s23^3 + 2656*s13*s23^4 + 324*s23^5) + 
            s12^3*(216*s13^6 + 2934*s13^5*s23 + 7311*s13^4*s23^2 + 
              4782*s13^3*s23^3 + 625*s13^2*s23^4 + 216*s13*s23^5 + 
              20*s23^6)) - p2q*p3q^4*s12*(100*s12^5*s23^2*(s13 + s23) - 
            2*s13^2*s23*(s13 + s23)^2*(198*s13^3 - 108*s13^2*s23 + 
              539*s13*s23^2 + 45*s23^3) + 2*s12^4*(18*s13^4 - 27*s13^3*s23 + 
              138*s13^2*s23^2 + 188*s13*s23^3 + 55*s23^4) + 
            2*s12^3*(36*s13^5 + 540*s13^4*s23 + 1642*s13^3*s23^2 + 
              1323*s13^2*s23^3 + 230*s13*s23^4 - 5*s23^5) + 
            s12^2*(-72*s13^6 - 234*s13^5*s23 + 1357*s13^4*s23^2 + 
              4574*s13^3*s23^3 + 3189*s13^2*s23^4 + 274*s13*s23^5 - 
              20*s23^6) + s12*s13*(-108*s13^6 - 108*s13^5*s23 + 
              893*s13^4*s23^2 + 1989*s13^3*s23^3 + 1907*s13^2*s23^4 + 
              831*s13*s23^5 + 20*s23^6)) + p2q^3*p3q^2*s13*
           (3*s13^2*(s13 + s23)^3*(12*s13^3 - 24*s13^2*s23 + 611*s13*s23^2 - 
              89*s23^3) - 3*s12*s13*(s13 + s23)^2*(24*s13^4 - 318*s13^3*s23 - 
              799*s13^2*s23^2 - 1226*s13*s23^3 - 289*s23^4) + 
            2*s12^4*(54*s13^4 - 117*s13^3*s23 - 335*s13^2*s23^2 + 
              18*s13*s23^3 + 92*s23^4) + 2*s12^3*s23*(315*s13^4 + 
              1855*s13^3*s23 + 2638*s13^2*s23^2 + 1362*s13*s23^3 + 
              264*s23^4) + s12^2*(-216*s13^6 - 3726*s13^5*s23 - 
              9072*s13^4*s23^2 - 4875*s13^3*s23^3 + 3218*s13^2*s23^4 + 
              2875*s13*s23^5 + 344*s23^6)) + 2*p1q^3*s23^2*(s13 + s23)*
           (s12 + s13 + s23)*(p3q^2*(-(s13*(s13 + s23)^2*(27*s13^2 + 
                 42*s13*s23 + 10*s23^2)) + s12^2*(9*s13^3 - 15*s13*s23^2 - 
                10*s23^3) + s12*(5*s13^4 + 39*s13^3*s23 + 74*s13^2*s23^2 + 
                50*s13*s23^3 + 10*s23^4)) + p2q^2*(s12*(34*s13^4 - 
                17*s13^3*s23 + 112*s13^2*s23^2 + 83*s13*s23^3 - 40*s23^4) + 
              2*s13*(69*s13^4 + 136*s13^3*s23 + 206*s13^2*s23^2 + 
                240*s13*s23^3 + 101*s23^4)) + p2q*p3q*
             (s12^2*(9*s13^3 + 18*s13^2*s23 + 147*s13*s23^2 + 170*s23^3) + 
              s12*(66*s13^4 + 49*s13^3*s23 + 51*s13^2*s23^2 + 43*s13*s23^3 + 
                15*s23^4) + s13*(-6*s13^4 + 104*s13^3*s23 + 453*s13^2*s23^2 + 
                490*s13*s23^3 + 147*s23^4))) + 
          p1q^2*(2*p3q^3*(s13 + s23)*(-(s13^2*s23^2*(s13 + s23)^3*
                (77*s13 + 5*s23)) + s12^4*s13*(9*s13^3 + 9*s13^2*s23 - 
                10*s13*s23^2 - 15*s23^3) + s12*s13*s23*(s13 + s23)^2*(
                9*s13^3 + 77*s13^2*s23 + 176*s13*s23^2 + 30*s23^3) + 
              s12^3*(18*s13^5 + 45*s13^4*s23 + 2*s13^3*s23^2 - 108*s13^2*
                 s23^3 - 105*s13*s23^4 - 30*s23^5) + s12^2*(9*s13^6 + 
                45*s13^5*s23 + 193*s13^4*s23^2 + 255*s13^3*s23^3 + 
                38*s13^2*s23^4 - 90*s13*s23^5 - 30*s23^6)) + 
            2*p2q^3*s13*(s13 + s23)*(s12^2*(9*s13^5 + 108*s13^4*s23 + 
                354*s13^3*s23^2 + 6*s13^2*s23^3 - 7*s13*s23^4 + 122*s23^5) + 
              (s13 + s23)^2*(9*s13^5 + 63*s13^4*s23 + 250*s13^3*s23^2 + 
                69*s13^2*s23^3 + 275*s13*s23^4 + 162*s23^5) + 
              s12*(18*s13^6 + 189*s13^5*s23 + 775*s13^4*s23^2 + 679*s13^3*
                 s23^3 + 343*s13^2*s23^4 + 552*s13*s23^5 + 284*s23^6)) - 
            p2q^2*p3q*(-(s12*s23*(s13 + s23)^2*(2214*s13^5 + 3060*s13^4*s23 - 
                 1937*s13^3*s23^2 - 2867*s13^2*s23^3 - 552*s13*s23^4 + 
                 20*s23^5)) - s13*(s13 + s23)^3*(18*s13^5 + 306*s13^4*s23 + 
                580*s13^3*s23^2 - 1217*s13^2*s23^3 + 243*s13*s23^4 + 
                304*s23^5) + 2*s12^3*(18*s13^6 + 117*s13^5*s23 + 
                107*s13^4*s23^2 + 127*s13^3*s23^3 + 347*s13^2*s23^4 + 
                58*s13*s23^5 - 130*s23^6) + 2*s12^2*(27*s13^7 + 
                72*s13^6*s23 + 702*s13^5*s23^2 + 2672*s13^4*s23^3 + 
                4057*s13^3*s23^4 + 2528*s13^2*s23^5 + 346*s13*s23^6 - 
                140*s23^7)) + p2q*p3q^2*(s13*s23*(s13 + s23)^3*(18*s13^4 + 
                124*s13^3*s23 - 1411*s13^2*s23^2 - 569*s13*s23^3 - 
                20*s23^4) + 2*s12^4*(9*s13^5 + 18*s13^4*s23 - 10*s13^3*
                 s23^2 - 196*s13^2*s23^3 - 447*s13*s23^4 - 270*s23^5) - 
              2*s12^3*s23*(117*s13^5 + 195*s13^4*s23 + 368*s13^3*s23^2 + 
                1046*s13^2*s23^3 + 1021*s13*s23^4 + 305*s23^5) - 
              s12*(s13 + s23)^2*(36*s13^6 + 324*s13^5*s23 + 2800*s13^4*
                 s23^2 + 5667*s13^3*s23^3 + 4269*s13^2*s23^4 + 862*s13*
                 s23^5 - 20*s23^6) - 2*s12^2*(27*s13^7 + 1224*s13^6*s23 + 
                4652*s13^5*s23^2 + 7273*s13^4*s23^3 + 6211*s13^3*s23^4 + 
                3118*s13^2*s23^5 + 750*s13*s23^6 + 25*s23^7))) + 
          p1q*(2*p2q^4*s13^2*(s13 + s23)*(s12^2*(27*s13^4 + 108*s13^3*s23 + 
                353*s13^2*s23^2 + 34*s13*s23^3 - 118*s23^4) + 
              (s13 + s23)^2*(9*s13^4 + 81*s13^3*s23 + 27*s13^2*s23^2 - 
                289*s13*s23^3 - 4*s23^4) + s12*(36*s13^5 + 225*s13^4*s23 + 
                569*s13^3*s23^2 + 125*s13^2*s23^3 - 377*s13*s23^4 - 
                122*s23^5)) + 2*p3q^4*s12*(s13 + s23)*
             (s13^2*s23*(s13 + s23)^2*(99*s13^2 + 203*s13*s23 + 41*s23^2) + 
              s12^4*(-9*s13^3 + 15*s13*s23^2 + 10*s23^3) + s12^3*(-18*s13^4 - 
                27*s13^3*s23 + 39*s13^2*s23^2 + 75*s13*s23^3 + 40*s23^4) + 
              s12*s13*(18*s13^5 + 90*s13^4*s23 + 47*s13^3*s23^2 - 
                189*s13^2*s23^3 - 194*s13*s23^4 - 30*s23^5) + 
              s12^2*(9*s13^5 - 54*s13^4*s23 - 222*s13^3*s23^2 - 131*s13^2*
                 s23^3 + 50*s13*s23^4 + 30*s23^5)) - p2q^3*p3q*s13*
             (-(s13*(s13 + s23)^3*(54*s13^4 + 432*s13^3*s23 + 1535*s13^2*
                  s23^2 - 1722*s13*s23^3 - 463*s23^4)) - s12*(s13 + s23)^2*(
                54*s13^5 + 3654*s13^4*s23 + 6437*s13^3*s23^2 + 316*s13^2*
                 s23^3 - 2933*s13*s23^4 - 668*s23^5) + 2*s12^3*(63*s13^5 + 
                234*s13^4*s23 - 48*s13^3*s23^2 - 400*s13^2*s23^3 + 
                113*s13*s23^4 + 214*s23^5) + 2*s12^2*(63*s13^6 + 
                450*s13^5*s23 + 1468*s13^4*s23^2 + 2718*s13^3*s23^3 + 
                3265*s13^2*s23^4 + 2176*s13*s23^5 + 548*s23^6)) + 
            p2q*p3q^3*(-2*s13^2*s23*(s13 + s23)^3*(99*s13^3 - 85*s13^2*s23 + 
                441*s13*s23^2 + 5*s23^3) - 2*s12^5*(9*s13^4 + 9*s13^3*s23 - 
                69*s13^2*s23^2 - 259*s13*s23^3 - 190*s23^4) - 
              s12*s13*(s13 + s23)^2*(72*s13^5 + 126*s13^4*s23 - 
                19*s13^3*s23^2 - 2781*s13^2*s23^3 - 1540*s13*s23^4 - 
                40*s23^5) + 2*s12^4*(27*s13^5 + 126*s13^4*s23 + 127*s13^3*
                 s23^2 + 646*s13^2*s23^3 + 743*s13*s23^4 + 215*s23^5) + 
              2*s12^3*(81*s13^6 + 1674*s13^5*s23 + 5446*s13^4*s23^2 + 
                6631*s13^3*s23^3 + 3533*s13^2*s23^4 + 720*s13*s23^5 + 
                5*s23^6) + s12^2*(18*s13^7 - 450*s13^6*s23 + 2691*s13^5*
                 s23^2 + 13202*s13^4*s23^3 + 16875*s13^3*s23^4 + 
                7674*s13^2*s23^5 + 802*s13*s23^6 - 40*s23^7)) + 
            p2q^2*p3q^2*(s13^2*(s13 + s23)^3*(36*s13^4 - 54*s13^3*s23 + 
                1651*s13^2*s23^2 - 1900*s13*s23^3 - 465*s23^4) + 
              2*s12^4*(45*s13^5 + 108*s13^4*s23 + 25*s13^3*s23^2 + 
                199*s13^2*s23^3 + 7*s13*s23^4 - 140*s23^5) - 
              s12*s13*(s13 + s23)^2*(90*s13^5 - 126*s13^4*s23 + 1334*s13^3*
                 s23^2 + 1525*s13^2*s23^3 + 2275*s13*s23^4 + 628*s23^5) + 
              2*s12^3*(9*s13^6 + 72*s13^5*s23 + 1972*s13^4*s23^2 + 
                4126*s13^3*s23^3 + 2484*s13^2*s23^4 + 147*s13*s23^5 - 
                160*s23^6) - s12^2*(198*s13^7 + 7236*s13^6*s23 + 
                20665*s13^5*s23^2 + 17672*s13^4*s23^3 + 2419*s13^3*s23^4 - 
                1558*s13^2*s23^5 + 108*s13*s23^6 + 40*s23^7)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23^2*
         (s13 + s23)^2*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (2*p1q^4*s23^2*(s13 + s23)^2*(s12 + s13 + s23)*
          (p2q*s13*(325*s13^3 + 162*s13^2*s23 - 203*s13*s23^2 - 40*s23^3) + 
           p3q*s13*(127*s13^3 + 117*s13^2*s23 - 5*s13*s23^2 + 5*s23^3) - 
           p3q*s12*(71*s13^3 + 67*s13^2*s23 + 5*s13*s23^2 + 15*s23^3) + 
           p2q*s12*(127*s13^3 + 257*s13^2*s23 + 202*s13*s23^2 + 120*s23^3)) - 
         p2q^5*s13^3*(s13 + s23)*(-16*s23^2*(s13 + s23)^2*(28*s13 + 33*s23) + 
           s12^2*(54*s13^3 - 189*s13^2*s23 - 164*s13*s23^2 - s23^3) + 
           s12*(54*s13^4 - 135*s13^3*s23 - 801*s13^2*s23^2 - 1141*s13*s23^3 - 
             529*s23^4)) + p3q^5*s12^2*(10*s12^4*s23^2*(2*s13 + s23) + 
           3*s13^2*s23*(s13 + s23)^3*(99*s13 + 31*s23) + 10*s12^3*s23^2*
            (4*s13^2 + 10*s13*s23 + 5*s23^2) + s12*s13*(s13 + s23)^2*
            (54*s13^3 + 351*s13^2*s23 + 187*s13*s23^2 + 80*s23^3) + 
           2*s12^2*(27*s13^5 + 54*s13^4*s23 + 84*s13^3*s23^2 + 
             132*s13^2*s23^3 + 95*s13*s23^4 + 20*s23^5)) + 
         p2q^4*p3q*s13^2*(-(s13*(s13 + s23)^3*(54*s13^3 - 756*s13^2*s23 - 
              469*s13*s23^2 - 731*s23^3)) + s12^3*(162*s13^4 - 99*s13^3*s23 - 
             845*s13^2*s23^2 - 1045*s13*s23^3 - 381*s23^4) - 
           s12*(s13 + s23)^2*(108*s13^4 + 1503*s13^3*s23 + 2474*s13^2*s23^2 + 
             717*s13*s23^3 - 266*s23^4) + s12^2*(108*s13^5 + 990*s13^4*s23 + 
             2314*s13^3*s23^2 + 2055*s13^2*s23^3 + 748*s13*s23^4 + 
             125*s23^5)) + p2q^2*p3q^3*(s13^3*s23*(s13 + s23)^3*
            (297*s13^2 - 519*s13*s23 + 176*s23^2) + s12*s13^2*(s13 + s23)^2*
            (162*s13^4 - 783*s13^3*s23 + 949*s13^2*s23^2 - 1159*s13*s23^3 - 
             429*s23^4) + s12^5*(54*s13^4 + 414*s13^3*s23 - 314*s13^2*s23^2 - 
             834*s13*s23^3 - 280*s23^4) + s12^2*s13*s23*(2736*s13^5 + 
             3851*s13^4*s23 - 4426*s13^3*s23^2 - 9199*s13^2*s23^3 - 
             4084*s13*s23^4 - 426*s23^5) - 2*s12^4*(54*s13^5 - 
             594*s13^4*s23 - 1626*s13^3*s23^2 - 753*s13^2*s23^3 + 
             370*s13*s23^4 + 160*s23^5) - s12^3*(324*s13^6 + 5346*s13^5*s23 + 
             12141*s13^4*s23^2 + 7748*s13^3*s23^3 + 921*s13^2*s23^4 + 
             92*s13*s23^5 + 40*s23^6)) + p2q*p3q^4*s12*
          (20*s12^5*s23^2*(19*s13 + 14*s23) - 2*s13^2*s23*(s13 + s23)^2*
            (297*s13^3 + 84*s13^2*s23 + 487*s13*s23^2 + 60*s23^3) + 
           s12^4*(54*s13^4 + 306*s13^3*s23 + 464*s13^2*s23^2 + 
             562*s13*s23^3 + 310*s23^4) + 2*s12^3*(54*s13^5 + 
             1089*s13^4*s23 + 2415*s13^3*s23^2 + 1464*s13^2*s23^3 + 
             124*s13*s23^4 - 5*s23^5) + s12^2*(-108*s13^6 - 990*s13^5*s23 + 
             163*s13^4*s23^2 + 4108*s13^3*s23^3 + 3139*s13^2*s23^4 + 
             196*s13*s23^5 - 40*s23^6) - s12*s13*(162*s13^6 + 378*s13^5*s23 + 
             1259*s13^4*s23^2 + 2175*s13^3*s23^3 + 1131*s13^2*s23^4 + 
             79*s13*s23^5 + 80*s23^6)) - p2q^3*p3q^2*s13*
          (s13^2*(s13 + s23)^3*(54*s13^3 - 540*s13^2*s23 + 1011*s13*s23^2 - 
             379*s23^3) - s12*s13*(s13 + s23)^2*(108*s13^4 - 2664*s13^3*s23 - 
             2509*s13^2*s23^2 - 1188*s13*s23^3 - 43*s23^4) + 
           6*s12^4*(27*s13^4 + 75*s13^3*s23 + 10*s13^2*s23^2 - 77*s13*s23^3 - 
             29*s23^4) + s12^3*s23*(2565*s13^4 + 8282*s13^3*s23 + 
             8505*s13^2*s23^2 + 2960*s13*s23^3 + 172*s23^4) + 
           s12^2*(-324*s13^6 - 4887*s13^5*s23 - 10953*s13^4*s23^2 - 
             5264*s13^3*s23^3 + 4045*s13^2*s23^4 + 3265*s13*s23^5 + 
             346*s23^6)) + 2*p1q^3*s23*(s13 + s23)*(s12 + s13 + s23)*
          (p2q*p3q*(-(s12^2*(189*s13^4 + 734*s13^3*s23 + 935*s13^2*s23^2 + 
                1026*s13*s23^3 + 500*s23^4)) + s13*(207*s13^5 + 1040*s13^4*
                s23 + 1384*s13^3*s23^2 + 278*s13^2*s23^3 - 431*s13*s23^4 - 
               158*s23^5) + s12*(18*s13^5 + 351*s13^4*s23 + 1666*s13^3*
                s23^2 + 1492*s13^2*s23^3 + 164*s13*s23^4 - 35*s23^5)) + 
           p3q^2*(154*s13^3*s23*(s13 + s23)^2 + s12^2*(9*s13^4 + 112*s13^3*
                s23 + 91*s13^2*s23^2 + 45*s13*s23^3 + 40*s23^4) - 
             s12*(189*s13^5 + 601*s13^4*s23 + 470*s13^3*s23^2 + 38*s13^2*
                s23^3 + 20*s23^5)) + p2q^2*(s13*(9*s13^5 + 1192*s13^4*s23 + 
               2111*s13^3*s23^2 + 439*s13^2*s23^3 - 692*s13*s23^4 - 203*
                s23^5) + s12*(207*s13^5 + 592*s13^4*s23 + 858*s13^3*s23^2 + 
               432*s13^2*s23^3 + 119*s13*s23^4 + 120*s23^5))) + 
         p1q^2*(p2q^3*s13*(s13 + s23)*(s12^2*(36*s13^5 + 882*s13^4*s23 + 1515*
                s13^3*s23^2 + 1954*s13^2*s23^3 + 639*s13*s23^4 - 406*s23^5) + 
             2*(s13 + s23)^2*(18*s13^5 + 45*s13^4*s23 + 1615*s13^3*s23^2 + 
               1748*s13^2*s23^3 - 123*s13*s23^4 - 163*s23^5) + 
             s12*(72*s13^6 + 1044*s13^5*s23 + 5717*s13^4*s23^2 + 10195*s13^3*
                s23^3 + 5843*s13^2*s23^4 - 339*s13*s23^5 - 732*s23^6)) + 
           p3q^3*(231*s13^3*s23^2*(s13 + s23)^4 - s12*s13*s23*(s13 + s23)^3*
              (342*s13^3 + 573*s13^2*s23 + 123*s13*s23^2 - 80*s23^3) + 
             2*s12^4*(18*s13^5 + 18*s13^4*s23 - 28*s13^3*s23^2 - 48*s13^2*
                s23^3 - 55*s13*s23^4 - 30*s23^5) + s12^2*(s13 + s23)^2*
              (36*s13^5 + 144*s13^4*s23 - 192*s13^3*s23^2 - 129*s13^2*s23^3 + 
               80*s13*s23^4 + 120*s23^5) + 2*s12^3*(36*s13^6 + 297*s13^5*
                s23 + 539*s13^4*s23^2 + 227*s13^3*s23^3 - 106*s13^2*s23^4 - 
               25*s13*s23^5 + 30*s23^6)) + p2q^2*p3q*
            (s13*(s13 + s23)^3*(36*s13^5 + 1638*s13^4*s23 + 3142*s13^3*
                s23^2 + 3037*s13^2*s23^3 - 61*s13*s23^4 - 326*s23^5) + 
             2*s12*s23*(s13 + s23)^2*(117*s13^5 + 1883*s13^4*s23 + 5016*s13^3*
                s23^2 + 3562*s13^2*s23^3 + 500*s13*s23^4 - 20*s23^5) - 
             s12^2*(s13 + s23)^2*(108*s13^5 - 450*s13^4*s23 - 1128*s13^3*
                s23^2 - 4375*s13^2*s23^3 - 396*s13*s23^4 + 800*s23^5) - 
             2*s12^3*(36*s13^6 + 747*s13^5*s23 + 2133*s13^4*s23^2 + 2304*
                s13^3*s23^3 + 1327*s13^2*s23^4 + 865*s13*s23^5 + 380*
                s23^6)) + p2q*p3q^2*(s13^2*s23*(s13 + s23)^3*(450*s13^3 + 692*
                s13^2*s23 + 1383*s13*s23^2 + 149*s23^3) + 
             2*s12^4*(18*s13^5 + 342*s13^4*s23 + 755*s13^3*s23^2 + 1527*s13^2*
                s23^3 + 1916*s13*s23^4 + 780*s23^5) + 2*s12^3*s23*
              (-585*s13^5 - 2548*s13^4*s23 - 2869*s13^3*s23^2 + 808*s13^2*
                s23^3 + 2539*s13*s23^4 + 865*s23^5) - 2*s12*(s13 + s23)^2*
              (36*s13^6 + 801*s13^5*s23 + 56*s13^4*s23^2 - 2141*s13^3*s23^3 - 
               2048*s13^2*s23^4 - 564*s13*s23^5 + 20*s23^6) - 
             s12^2*(108*s13^7 + 810*s13^6*s23 + 3576*s13^5*s23^2 + 7161*s13^4*
                s23^3 + 5370*s13^3*s23^4 + 269*s13^2*s23^5 - 944*s13*s23^6 - 
               130*s23^7))) + p1q*(p2q^4*s13^2*(s13 + s23)*
            (2*(s13 + s23)^2*(18*s13^4 + 36*s13^3*s23 + 981*s13^2*s23^2 + 
               1246*s13*s23^3 + 163*s23^4) + s12^2*(-18*s13^4 + 657*s13^3*
                s23 + 749*s13^2*s23^2 + 1007*s13*s23^3 + 693*s23^4) + 
             s12*(18*s13^5 + 747*s13^4*s23 + 3440*s13^3*s23^2 + 6210*s13^2*
                s23^3 + 4518*s13*s23^4 + 1019*s23^5)) - 
           p3q^4*s12*(3*s13^2*s23*(s13 + s23)^3*(99*s13^2 + 198*s13*s23 + 31*
                s23^2) + 2*s12^4*s13*(18*s13^3 + 9*s13^2*s23 - 4*s13*s23^2 + 
               5*s23^3) + s12*s13*(s13 + s23)^2*(54*s13^4 + 63*s13^3*s23 + 
               183*s13^2*s23^2 + 144*s13*s23^3 + 160*s23^4) + 
             2*s12^3*(36*s13^5 + 81*s13^4*s23 - 25*s13^2*s23^3 + 85*s13*
                s23^4 + 60*s23^5) + s12^2*(90*s13^6 - 36*s13^5*s23 - 547*
                s13^4*s23^2 - 422*s13^3*s23^3 + 319*s13^2*s23^4 + 440*s13*
                s23^5 + 120*s23^6)) + p2q^3*p3q*s13*
            (-(s13*(s13 + s23)^3*(18*s13^4 - 1980*s13^3*s23 - 2199*s13^2*
                 s23^2 - 2900*s13*s23^3 - 475*s23^4)) - s12^3*s23*
              (837*s13^4 + 2497*s13^3*s23 + 2843*s13^2*s23^2 + 751*s13*
                s23^3 - 272*s23^4) - s12*(s13 + s23)^2*(144*s13^5 + 1530*
                s13^4*s23 + 451*s13^3*s23^2 - 4908*s13^2*s23^3 - 4333*s13*
                s23^4 - 712*s23^5) + s12^2*(-126*s13^6 + 2007*s13^5*s23 + 
               7426*s13^4*s23^2 + 10690*s13^3*s23^3 + 8984*s13^2*s23^4 + 4571*
                s13*s23^5 + 984*s23^6)) - p2q*p3q^3*
            (-(s13^3*s23*(s13 + s23)^3*(297*s13^2 + 695*s23^2)) + 
             2*s12^5*(18*s13^4 - 27*s13^3*s23 + 347*s13^2*s23^2 + 1022*s13*
                s23^3 + 540*s23^4) - s12*s13*(s13 + s23)^2*(108*s13^5 - 873*
                s13^4*s23 - 162*s13^3*s23^2 - 1235*s13^2*s23^3 - 630*s13*
                s23^4 + 80*s23^5) + 2*s12^4*(9*s13^5 - 936*s13^4*s23 - 1536*
                s13^3*s23^2 + 209*s13^2*s23^3 + 1445*s13*s23^4 + 605*s23^5) + 
             s12^3*(-72*s13^6 + 1674*s13^5*s23 + 7185*s13^4*s23^2 + 9230*
                s13^3*s23^3 + 4805*s13^2*s23^4 + 984*s13*s23^5 + 50*s23^6) + 
             s12^2*(-162*s13^7 - 1926*s13^6*s23 + 709*s13^5*s23^2 + 13433*
                s13^4*s23^3 + 18469*s13^3*s23^4 + 8517*s13^2*s23^5 + 928*s13*
                s23^6 - 80*s23^7)) + p2q^2*p3q^2*
            (-(s13^2*(s13 + s23)^3*(54*s13^4 - 990*s13^3*s23 + 339*s13^2*
                 s23^2 - 1742*s13*s23^3 - 149*s23^4)) - s12*s13*(s13 + s23)^2*
              (54*s13^5 + 3780*s13^4*s23 + 939*s13^3*s23^2 - 3642*s13^2*
                s23^3 - 3119*s13*s23^4 - 792*s23^5) + 
             2*s12^4*(27*s13^5 + 72*s13^4*s23 + 285*s13^3*s23^2 + 873*s13^2*
                s23^3 + 1043*s13*s23^4 + 400*s23^5) + 
             s12^3*(162*s13^6 - 4626*s13^5*s23 - 16421*s13^4*s23^2 - 18588*
                s13^3*s23^3 - 6083*s13^2*s23^4 + 1672*s13*s23^5 + 880*
                s23^6) + s12^2*(108*s13^7 + 3474*s13^6*s23 + 6511*s13^5*
                s23^2 - 3395*s13^4*s23^3 - 12525*s13^3*s23^4 - 6407*s13^2*
                s23^5 - 342*s13*s23^6 + 80*s23^7))))/(54*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12*s13^3*s23^2*(s13 + s23)^2*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]] + 
     ((ep^3*(-(p3q*(95*s12^3 + 40*s13*s23^2 + s12*s23*(71*s13 + 7*s23) + 
             s12^2*(23*s13 + 102*s23))) + p1q*(s23^2*(-33*s13 + 7*s23) + 
            s12^2*(72*s13 + 95*s23) + s12*s23*(31*s13 + 102*s23)) + 
          p2q*(s13*(33*s13 - 7*s23)*s23 + s12^2*(95*s13 + 80*s23) + 
            s12*(23*s13^2 + 72*s13*s23 + 80*s23^2))))/(27*(p1q + p2q + p3q)*
         s12*s13*(s12 + s23)) + 
       (ep^2*(p2q^5*s13^2*(-9*s12^4*s13 + 10*s13*s23^3*(s13 + s23) + 
            s12^3*(-9*s13^2 + 5*s23^2) + s12*s23^2*(29*s13^2 + 44*s13*s23 + 
              5*s23^2) + s12^2*s23*(9*s13^2 + 43*s13*s23 + 10*s23^2)) - 
          p3q^5*s12^2*(s12 + s23)*(-9*s12^3*(s13 - 6*s23) + 
            s23^2*(171*s13^2 + 337*s13*s23 + 166*s23^2) + 
            s12^2*(-9*s13^2 + 135*s13*s23 + 314*s23^2) + 
            s12*s23*(90*s13^2 + 521*s13*s23 + 426*s23^2)) + 
          p2q*p3q^4*s12*(9*s12^6 + 18*s12^5*(s13 - 3*s23) + 
            5*s13*s23^3*(2*s13^2 + 5*s13*s23 - 17*s23^2) - 
            s12^4*(18*s13^2 + 27*s13*s23 + 797*s23^2) + 
            s12^2*s23*(162*s13^3 + 369*s13^2*s23 - 918*s13*s23^2 - 
              1696*s23^3) + s12*s23^2*(271*s13^3 + 246*s13^2*s23 - 
              591*s13*s23^2 - 517*s23^3) - s12^3*(27*s13^3 - 90*s13^2*s23 + 
              457*s13*s23^2 + 1913*s23^3)) + p2q^2*p3q^3*
           (9*s12^7 - 9*s12^6*(2*s13 - 5*s23) - 19*s13^2*s23^3*
             (s13 + s23)^2 + s12^4*s23*(153*s13^2 + 875*s13*s23 - 
              1341*s23^2) + s12^5*(-54*s13^2 + 153*s13*s23 - 451*s23^2) - 
            s12*s13*s23^2*(29*s13^3 + 109*s13^2*s23 + 26*s13*s23^2 + 
              246*s23^3) + 3*s12^3*(9*s13^4 + 66*s13^3*s23 + 293*s13^2*s23^
                2 + 279*s13*s23^3 - 398*s23^4) + s12^2*s23*(-81*s13^4 + 
              241*s13^3*s23 + 625*s13^2*s23^2 - 113*s13*s23^3 - 340*s23^4)) + 
          p2q^4*p3q*s13*(27*s12^5*s13 + s12^4*(18*s13^2 + 45*s13*s23 + 
              152*s23^2) + s13*s23^2*(19*s13^3 + 48*s13^2*s23 + 
              19*s13*s23^2 - 10*s23^3) + s12*s23^2*(103*s13^3 + 
              140*s13^2*s23 + 112*s13*s23^2 - 5*s23^3) + 
            s12^3*(-18*s13^3 + 27*s13^2*s23 - 69*s13*s23^2 + 59*s23^3) - 
            s12^2*(9*s13^4 + 63*s13^3*s23 - 33*s13^2*s23^2 + 109*s13*s23^3 + 
              98*s23^4)) - p2q^3*p3q^2*(27*s12^6*s13 + s12^5*s23*
             (90*s13 + 157*s23) + s13^2*s23^2*(-19*s13^3 - 19*s13^2*s23 + 
              29*s13*s23^2 + 29*s23^3) + s12*s13*s23^2*(-27*s13^3 + 
              59*s13^2*s23 - 38*s13*s23^2 + 166*s23^3) + 
            s12^4*(-54*s13^3 + 135*s13^2*s23 - 477*s13*s23^2 + 303*s23^3) + 
            s12^3*(-18*s13^4 + 9*s13^3*s23 + 140*s13^2*s23^2 - 
              686*s13*s23^3 + 135*s23^4) + s12^2*(9*s13^5 + 162*s13^4*s23 + 
              157*s13^3*s23^2 + 82*s13^2*s23^3 + 20*s13*s23^4 - 11*s23^5)) - 
          p1q^3*(p2q + p3q)*s23^2*(s12 + s23)*(s12 + s13 + s23)*
           (p2q*(9*s12^3 + 23*s12^2*s23 + 24*s12*s23^2 + 10*s23^3) + 
            p3q*(s12^2*(9*s13 - 41*s23) - 2*s12*s23^2 - s23^2*(s13 + s23))) + 
          p1q^2*s23*(p2q^3*s23*(s12 + s23)*(30*s13*s23^2*(s13 + s23) + 
              s12^3*(41*s13 + 5*s23) + s12*s23*(67*s13^2 + 102*s13*s23 + 
                5*s23^2) + s12^2*(41*s13^2 + 113*s13*s23 + 10*s23^2)) + 
            p3q^3*s23*(s12 + s23)*(-147*s12^4 + s23^2*(s13 + s23)^2 - 
              2*s12^3*(113*s13 + 84*s23) + 2*s12*s23*(5*s13^2 + 9*s13*s23 + 
                4*s23^2) - s12^2*(79*s13^2 + 90*s13*s23 + 14*s23^2)) + 
            p2q^2*p3q*(-13*s12^5*s23 + s12^4*(-72*s13^2 + 40*s13*s23 + 
                177*s23^2) + s12^3*s23*(-252*s13^2 + 179*s13*s23 + 
                575*s23^2) + s23^3*(17*s13^3 + 64*s13^2*s23 + 37*s13*s23^2 - 
                10*s23^3) + 3*s12*s23^2*(6*s13^3 + 67*s13^2*s23 + 
                95*s13*s23^2 + 54*s23^3) + s12^2*s23*(9*s13^3 - 
                83*s13^2*s23 + 387*s13*s23^2 + 557*s23^3)) + 
            p2q*p3q^2*(s12^5*(72*s13 - 115*s23) + s12^4*(7*s13 - 8*s23)*s23 + 
              3*s12^3*s23*(-85*s13^2 - 19*s13*s23 + 171*s23^2) + 
              s23^3*(17*s13^3 + 35*s13^2*s23 + 9*s13*s23^2 - 9*s23^3) + 
              s12*s23^2*(18*s13^3 + 97*s13^2*s23 + 155*s13*s23^2 + 
                166*s23^3) + s12^2*s23*(9*s13^3 - 233*s13^2*s23 + 
                154*s13*s23^2 + 581*s23^3))) + 
          p1q*(p2q^4*s13*(9*s12^5*s13 - 30*s13*s23^4*(s13 + s23) - 
              5*s12^3*s23^2*(15*s13 + 4*s23) + s12^4*(9*s13^2 + 9*s13*s23 - 
                5*s23^2) - 2*s12*s23^3*(46*s13^2 + 66*s13*s23 + 5*s23^2) - 
              s12^2*s23^2*(70*s13^2 + 177*s13*s23 + 25*s23^2)) - 
            p3q^4*s12*(s12 + s23)*(-9*s12^4*(s13 - 6*s23) - 
              5*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) + s12*s23^2*(241*s13^2 + 
                459*s13*s23 + 223*s23^2) + s12^3*(-9*s13^2 + 135*s13*s23 + 
                461*s23^2) + s12^2*s23*(90*s13^2 + 738*s13*s23 + 
                635*s23^2)) + p2q*p3q^3*(9*s12^7 + 18*s12^6*(s13 - 3*s23) + 
              18*s13*s23^4*(s13 + s23)^2 - 3*s12^5*(3*s13^2 + 3*s13*s23 + 
                301*s23^2) + s12^2*s23^2*(170*s13^3 - 161*s13^2*s23 - 
                491*s13*s23^2 + 99*s23^3) + s12*s23^3*(18*s13^3 + 
                109*s13^2*s23 + 97*s13*s23^2 + 206*s23^3) - 2*s12^3*s23*(
                -36*s13^3 + 95*s13^2*s23 + 571*s13*s23^2 + 594*s23^3) - 
              s12^4*(18*s13^3 + 45*s13^2*s23 + 599*s13*s23^2 + 1921*s23^3)) - 
            p2q^3*p3q*(18*s12^6*s13 + s12^5*(9*s13^2 + 54*s13*s23 + 
                85*s23^2) - 2*s12^4*(9*s13^3 - 18*s13^2*s23 + 85*s13*s23^2 - 
                41*s23^3) + s13*s23^3*(37*s13^3 + 104*s13^2*s23 + 
                47*s13*s23^2 - 20*s23^3) + s12^2*s23*(-9*s13^4 - 
                158*s13^3*s23 + 345*s13^2*s23^2 + 408*s13*s23^3 - 98*s23^4) + 
              s12*s23^2*(19*s13^4 + 275*s13^3*s23 + 385*s13^2*s23^2 + 
                274*s13*s23^3 - 5*s23^4) - s12^3*(9*s13^4 + 153*s13^3*s23 - 
                34*s13^2*s23^2 + 92*s13*s23^3 + 96*s23^4)) + 
            p2q^2*p3q^2*(9*s12^7 - 9*s12^6*(s13 - 5*s23) + s12^5*(-36*s13^2 + 
                90*s13*s23 - 383*s23^2) + s13*s23^3*(-37*s13^3 - 
                56*s13^2*s23 + 19*s13*s23^2 + 38*s23^3) - s12^4*(9*s13^3 + 
                90*s13^2*s23 - 431*s13*s23^2 + 907*s23^3) + s12^3*(9*s13^4 + 
                162*s13^3*s23 + 56*s13^2*s23^2 + 68*s13*s23^3 - 324*s23^4) - 
              s12*s23^2*(19*s13^4 + 129*s13^3*s23 + 100*s13^2*s23^2 + 
                164*s13*s23^3 - 206*s23^4) + s12^2*s23*(9*s13^4 + 
                380*s13^3*s23 - 89*s13^2*s23^2 - 466*s13*s23^3 + 
                370*s23^4)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13*s23^2*(s12 + s23)*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (-2*p1q^4*s23^2*(s12 + s13 + s23)*
          (p3q*(176*s12^4 + 312*s12^2*s13*s23 + 243*s12*s13*s23^2 + 
             80*s13*s23^3 + 11*s12^3*(7*s13 + 16*s23)) + 
           p2q*(77*s12^4 - 21*s12^2*s13*s23 - 10*s13*s23^3 + 
             s12^3*(-22*s13 + 77*s23))) - 2*p1q^3*s23*(s12 + s13 + s23)*
          (-(p2q^2*(7*s12^4*(18*s13 - 11*s23) - 20*s12*s13*s23^3 + 
              10*s13*s23^3*(-3*s13 + s23) + s12^2*s13*s23*(6*s13 + 59*s23) + 
              s12^3*(27*s13^2 + 274*s13*s23 - 77*s23^2))) + 
           p2q*p3q*(72*s12^5 - 10*s13*s23^3*(33*s13 + 2*s23) + 
             3*s12*s13*s23^2*(-243*s13 + 61*s23) + 3*s12^2*s13*s23*
              (-224*s13 + 185*s23) + s12^4*(-54*s13 + 452*s23) + 
             s12^3*(-126*s13^2 + 86*s13*s23 + 380*s23^2)) + 
           p3q^2*(-27*s12^5 + 218*s12^2*s13*s23^2 + 163*s12*s13*s23^3 + 
             80*s13*s23^4 + 6*s12^4*(12*s13 + 79*s23) + 
             s12^3*(-9*s13*s23 + 501*s23^2))) + 
         s23*(-(p2q^5*s13^2*(99*s12^4 + 20*s13^2*s23*(s13 + s23) + 
              20*s12*s13*s23*(3*s13 + 2*s23) + s12^2*s23*(71*s13 + 31*s23) + 
              s12^3*(99*s13 + 130*s23))) - p3q^5*s12^3*
            (11*s12^2*(9*s13 + 16*s23) + s23*(27*s13^2 + 203*s13*s23 + 176*
                s23^2) + s12*(99*s13^2 + 302*s13*s23 + 352*s23^2)) + 
           p2q*p3q^4*s12^2*(-198*s12^4 + 9*s12^3*(61*s13 - 36*s23) + 
             s12^2*(-126*s13^2 + 615*s13*s23 - 302*s23^2) + 
             s13*s23*(369*s13^2 + 309*s13*s23 + 20*s23^2) + 
             s12*(459*s13^3 + 422*s13^2*s23 + 158*s13*s23^2 - 176*s23^3)) + 
           p2q^2*p3q^3*s12*(-198*s12^5 - 360*s13^3*s23*(s13 + s23) + 
             4*s12^4*(216*s13 + 25*s23) + s12^2*s13*(837*s13^2 + 217*s13*
                s23 - 170*s23^2) + s12^3*(-1377*s13^2 + 170*s13*s23 + 298*
                s23^2) - 30*s12*s13*(24*s13^3 + s13^2*s23 - 29*s13*s23^2 - 2*
                s23^3)) + 2*p2q^4*p3q*s13*(99*s12^5 + 40*s12^4*s23 + 
             s12^3*(234*s13^2 + 337*s13*s23 + 121*s23^2) + 
             10*s13^2*(-9*s13^3 - 10*s13^2*s23 + s23^3) + 
             s12*s13*(63*s13^3 + 133*s13^2*s23 + 20*s13*s23^2 + 20*s23^3) + 
             s12^2*(-180*s13^3 - 314*s13^2*s23 + 29*s13*s23^2 + 20*s23^3)) + 
           p2q^3*p3q^2*(-99*s12^6 + s12^5*(297*s13 + 50*s23) + 
             2*s12^3*s13*(594*s13^2 + 421*s13*s23 - 104*s23^2) + 
             20*s13^3*s23*(9*s13^2 + 10*s13*s23 + s23^2) + 
             s12^4*(-1134*s13^2 - 703*s13*s23 + 149*s23^2) + 
             2*s12*s13^2*(270*s13^3 + 217*s13^2*s23 - 113*s13*s23^2 + 20*
                s23^3) + s12^2*(-738*s13^4 - 740*s13^3*s23 + 704*s13^2*
                s23^2 + 80*s13*s23^3))) + 
         p1q*(-(p3q^4*s12^2*(54*s12^5 + 149*s13*s23^3*(s13 + s23) + 
              54*s12^4*(2*s13 + 3*s23) + s12*s23^2*(158*s13^2 + 
                1011*s13*s23 + 704*s23^2) + s12^3*(54*s13^2 + 513*s13*s23 + 
                866*s23^2) + s12^2*s23*(351*s13^2 + 1267*s13*s23 + 
                1462*s23^2))) + p2q*p3q^3*s12*(-54*s12^6 + 
             54*s12^5*(s13 - 14*s23) + s12*s13*s23^2*(1353*s13^2 + 1095*s13*
                s23 - 298*s23^2) + 6*s12^4*(45*s13^2 + 126*s13*s23 - 268*
                s23^2) + 40*s13*s23^3*(4*s13^2 + 3*s13*s23 - s23^2) + 
             s12^3*(162*s13^3 + 99*s13^2*s23 + 134*s13*s23^2 - 1660*s23^3) + 
             s12^2*s23*(1251*s13^3 + 1494*s13^2*s23 - 682*s13*s23^2 - 754*
                s23^3)) + p2q^2*p3q^2*(18*s12^6*(9*s13 - 22*s23) + 
             2*s12^5*(81*s13^2 + 846*s13*s23 - 173*s23^2) - 
             40*s13^2*s23^3*(13*s13^2 + 14*s13*s23 + s23^2) + 
             s12^2*s13*s23*(-1386*s13^3 + 227*s13^2*s23 + 2807*s13*s23^2 - 
               564*s23^3) - 2*s12*s13*s23^2*(673*s13^3 + 607*s13^2*s23 - 266*
                s13*s23^2 + 40*s23^3) - s12^4*(162*s13^3 + 648*s13^2*s23 - 81*
                s13*s23^2 + 248*s23^3) + s12^3*(-162*s13^4 + 1206*s13^3*s23 + 
               2218*s13^2*s23^2 - 1397*s13*s23^3 - 298*s23^4)) + 
           p2q^4*s13*(99*s12^5*s23 - 20*s12*s13*s23^2*(3*s13^2 - 5*s13*s23 - 
               4*s23^2) - 20*s13^2*s23^2*(s13^2 - 2*s13*s23 - 3*s23^2) + 
             9*s12^4*(6*s13^2 - 11*s13*s23 + 33*s23^2) + 
             s12^3*(108*s13^3 - 90*s13^2*s23 - 53*s13*s23^2 + 229*s23^3) + 
             s12^2*(54*s13^4 + 108*s13^3*s23 - 39*s13^2*s23^2 + 58*s13*
                s23^3 + 31*s23^4)) + p2q^3*p3q*(-99*s12^6*s23 - 
             9*s12^5*(18*s13^2 - 55*s13*s23 + 11*s23^2) + 20*s13^2*s23^2*
              (35*s13^3 + 39*s13^2*s23 + 2*s13*s23^2 - 2*s23^3) - 
             s12^4*(270*s13^3 + 846*s13^2*s23 - 21*s13*s23^2 + 149*s23^3) + 
             s12^3*(-54*s13^4 - 54*s13^3*s23 + 1314*s13^2*s23^2 + 60*s13*
                s23^3 - 149*s23^4) + 2*s12*s13*s23*(243*s13^4 + 134*s13^3*
                s23 - 349*s13^2*s23^2 + 30*s13*s23^3 - 20*s23^4) + 
             s12^2*s13*(54*s13^4 - 792*s13^3*s23 - 949*s13^2*s23^2 + 1423*s13*
                s23^3 + 102*s23^4))) - 
         p1q^2*(p3q^3*s12*(54*s12^6 + 108*s12^5*(s13 + s23) - 
             160*s13*s23^4*(s13 + s23) - s12*s13*s23^3*(39*s13 + 199*s23) + 
             2*s12^4*(27*s13^2 + 252*s13*s23 + 616*s23^2) + 
             s12^2*s23^2*(-41*s13^2 + 1098*s13*s23 + 1178*s23^2) + 
             s12^3*s23*(396*s13^2 + 1533*s13*s23 + 2356*s23^2)) + 
           p2q*p3q^2*(54*s12^7 + 702*s12^6*s23 - 2*s12*s13*s23^3*
              (566*s13^2 + 613*s13*s23 - 193*s23^2) - 18*s12^5*
              (9*s13^2 + 5*s13*s23 - 121*s23^2) - 20*s13*s23^4*
              (25*s13^2 + 26*s13*s23 + s23^2) + s12^2*s13*s23^2*
              (-1862*s13^2 - 1493*s13*s23 + 1827*s23^2) - 
             2*s12^4*(54*s13^3 + 315*s13^2*s23 - 665*s13*s23^2 - 1357*
                s23^3) + s12^3*s23*(-1170*s13^3 - 2148*s13^2*s23 + 2769*s13*
                s23^2 + 1184*s23^3)) + p2q^3*(-20*s12*s13*s23^3*
              (7*s13^2 - s13*s23 - 2*s23^2) + 60*s13^2*s23^3*(-s13^2 + s23^
                2) + s12^5*(54*s13^2 - 198*s13*s23 + 77*s23^2) + 
             s12^2*s13*s23*(108*s13^3 + 280*s13^2*s23 + 39*s13*s23^2 - 13*
                s23^3) + s12^4*(108*s13^3 + 216*s13^2*s23 - 539*s13*s23^2 + 
               154*s23^3) + s12^3*(54*s13^4 + 522*s13^3*s23 + 114*s13^2*
                s23^2 - 394*s13*s23^3 + 77*s23^4)) + p2q^2*p3q*
            (-18*s12^6*(6*s13 - 11*s23) - 6*s12^5*(27*s13^2 + 153*s13*s23 - 
               88*s23^2) + 2*s12^4*s23*(-270*s13^2 - 317*s13*s23 + 355*
                s23^2) + 20*s13*s23^3*(51*s13^3 + 56*s13^2*s23 + 4*s13*
                s23^2 - s23^3) + 2*s12*s13*s23^2*(729*s13^3 + 750*s13^2*s23 - 
               379*s13*s23^2 + 50*s23^3) + s12^2*s13*s23*(774*s13^3 - 250*
                s13^2*s23 - 2945*s13*s23^2 + 555*s23^3) + 
             s12^3*(54*s13^4 + 18*s13^3*s23 - 2848*s13^2*s23^2 + 539*s13*
                s23^3 + 380*s23^4))))/(54*ep*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^3*s13*s23^2*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep*(4*p3q^5*s12^3*(s12 + s23)*
           (9*s12^4*(s13 + s23) - 2*s12^2*s23^2*(4*s13 + 77*s23) + 
            s12*s23^2*(21*s13^2 - 94*s13*s23 - 212*s23^2) + 
            s23^3*(10*s13^2 - 77*s13*s23 - 87*s23^2) + 
            s12^3*(9*s13^2 + 18*s13*s23 - 20*s23^2)) - 2*p2q^5*s13^2*
           (s12 + s23)*(9*s12^5*(2*s13 + 11*s23) + 5*s12*s13*s23^2*
             (2*s13^2 + s13*s23 - 2*s23^2) + 5*s13^2*s23^2*
             (s13^2 + 3*s13*s23 + 2*s23^2) + 3*s12^2*s23^2*(-17*s13^2 - 
              10*s13*s23 + 12*s23^2) + 9*s12^4*(2*s13^2 + 9*s13*s23 + 
              26*s23^2) + s12^3*s23*(-36*s13^2 + 43*s13*s23 + 171*s23^2)) + 
          p2q*p3q^4*s12^2*(36*s12^7 + 18*s12^6*(4*s13 + 13*s23) + 
            4*s13*s23^4*(90*s13^2 + 63*s13*s23 + 43*s23^2) + 
            s12^5*(-72*s13^2 + 1836*s13*s23 + 1447*s23^2) + 
            s12*s23^3*(1292*s13^3 + 1210*s13^2*s23 + 2809*s13*s23^2 - 
              257*s23^3) + s12^2*s23^2*(1104*s13^3 + 1442*s13^2*s23 + 
              9023*s13*s23^2 + 190*s23^3) + s12^3*s23*(144*s13^3 + 
              430*s13^2*s23 + 11999*s13*s23^2 + 2238*s23^3) + 
            s12^4*(-108*s13^3 - 126*s13^2*s23 + 7377*s13*s23^2 + 
              3040*s23^3)) - p2q^4*p3q*s13*(-36*s12^7*(3*s13 + 11*s23) - 
            36*s12^6*(2*s13^2 + 3*s13*s23 + 16*s23^2) + 
            s12^5*(72*s13^3 - 234*s13^2*s23 + 893*s13*s23^2 - 1042*s23^3) + 
            10*s13^2*s23^3*(10*s13^3 + 11*s13^2*s23 - s13*s23^2 - 2*s23^3) + 
            s12^4*(36*s13^4 + 1080*s13^3*s23 + 1357*s13^2*s23^2 + 
              1989*s13*s23^3 - 2030*s23^4) + s12^3*s23*(-54*s13^4 + 
              3284*s13^3*s23 + 4574*s13^2*s23^2 + 1907*s13*s23^3 - 
              1258*s23^4) + 3*s12^2*s23^2*(92*s13^4 + 882*s13^3*s23 + 
              1063*s13^2*s23^2 + 277*s13*s23^3 - 30*s23^4) + 
            2*s12*s13*s23^2*(50*s13^4 + 188*s13^3*s23 + 230*s13^2*s23^2 + 
              137*s13*s23^3 + 10*s23^4)) + p2q^2*p3q^3*s12*
           (36*s12^8 + 36*s12^7*(-2*s13 + s23) + 8*s13^2*s23^4*
             (23*s13^2 + 66*s13*s23 + 43*s23^2) + s12^6*(-216*s13^2 + 
              810*s13*s23 + 1725*s23^2) + s12*s13*s23^3*(36*s13^3 + 
              2724*s13^2*s23 + 2875*s13*s23^2 + 867*s23^3) + 
            s12^5*(-3726*s13^2*s23 + 4233*s13*s23^2 + 5052*s23^3) + 
            s12^2*s23^2*(-670*s13^4 + 5276*s13^3*s23 + 3218*s13^2*s23^2 + 
              5412*s13*s23^3 - 267*s23^4) + 6*s12^4*(18*s13^4 + 
              105*s13^3*s23 - 1512*s13^2*s23^2 + 1571*s13*s23^3 + 
              771*s23^4) + s12^3*s23*(-234*s13^4 + 3710*s13^3*s23 - 
              4875*s13^2*s23^2 + 10620*s13*s23^3 + 1032*s23^4)) + 
          p2q^3*p3q^2*(18*s12^7*s23*(3*s13 + 5*s23) - 
            18*s12^8*(6*s13 + 11*s23) + 20*s13^3*s23^4*(5*s13^2 + 6*s13*s23 + 
              s23^2) + 4*s12*s13^2*s23^3*(4*s13^3 - 3*s13^2*s23 + 
              54*s13*s23^2 + 81*s23^3) + 2*s12^6*(108*s13^3 - 657*s13^2*s23 + 
              32*s13*s23^2 + 550*s23^3) + s12^5*(72*s13^4 + 2934*s13^3*s23 - 
              2553*s13^2*s23^2 + 2381*s13*s23^3 + 780*s23^4) + 
            s12^2*s13*s23^2*(-94*s13^4 - 1712*s13^3*s23 + 625*s13^2*s23^2 + 
              2656*s13*s23^3 + 785*s23^4) + s12^4*(-36*s13^5 - 
              666*s13^4*s23 + 7311*s13^3*s23^2 + 1772*s13^2*s23^3 + 
              6111*s13*s23^4 - 390*s23^5) + s12^3*s23*(54*s13^5 - 
              2598*s13^4*s23 + 4782*s13^3*s23^2 + 5343*s13^2*s23^3 + 
              4417*s13*s23^4 - 358*s23^5)) - 2*p1q^4*s23^2*(s12 + s23)^2*
           (s12 + s13 + s23)*(p2q*(9*s12^4 + 10*s12^2*s23^2 - 5*s13*s23^3 + 
              5*s12*s23^2*(-2*s13 + s23) + s12^3*(9*s13 + 14*s23)) + 
            p3q*(9*s12^4 + s12^2*s23^2 + 40*s13*s23^3 - s12*s23^2*(s13 + 
                40*s23) + s12^3*(9*s13 + 50*s23))) - 2*p1q^3*s23^2*
           (s12 + s23)*(s12 + s13 + s23)*(-(p3q^2*(138*s12^5 - 40*s13*s23^4 + 
               34*s12^4*(s13 + 8*s23) + 16*s12^2*s23^2*(7*s13 + 30*s23) + s12*
                s23^3*(83*s13 + 202*s23) + s12^3*s23*(-17*s13 + 412*s23))) + 
            p2q*p3q*(6*s12^5 - 5*s13*s23^3*(34*s13 + 3*s23) - 
              2*s12^4*(33*s13 + 52*s23) - s12*s23^2*(147*s13^2 + 43*s13*s23 + 
                147*s23^2) - s12^3*(9*s13^2 + 49*s13*s23 + 453*s23^2) - 
              s12^2*s23*(18*s13^2 + 51*s13*s23 + 490*s23^2)) + 
            p2q^2*(27*s12^5 + 10*s13*(s13 - s23)*s23^3 + s12^4*(-5*s13 + 
                96*s23) + 5*s12*s23^2*(3*s13^2 - 10*s13*s23 + 2*s23^2) + 
              s12^3*(-9*s13^2 - 39*s13*s23 + 121*s23^2) + 
              s12^2*(-74*s13*s23^2 + 62*s23^3))) + 
          p1q^2*(2*p3q^3*s12*(s12 + s23)*(9*s12^7 + 9*s12^6*(2*s13 + 9*s23) + 
              2*s23^5*(61*s13^2 + 142*s13*s23 + 81*s23^2) + s12^5*(9*s13^2 + 
                189*s13*s23 + 385*s23^2) + s12*s23^4*(-7*s13^2 + 
                552*s13*s23 + 599*s23^2) + s12^4*s23*(108*s13^2 + 
                775*s13*s23 + 632*s23^2) + s12^3*s23^2*(354*s13^2 + 
                679*s13*s23 + 663*s23^2) + s12^2*s23^3*(6*s13^2 + 
                343*s13*s23 + 781*s23^2)) + p2q*p3q^2*(18*s12^9 + 
              360*s12^8*s23 + 20*s13*s23^6*(13*s13^2 + 14*s13*s23 + s23^2) + 
              s12^7*(-54*s13^2 + 2214*s13*s23 + 1552*s23^2) - 
              4*s12*s23^5*(29*s13^3 + 173*s13^2*s23 + 128*s13*s23^2 - 
                76*s23^3) + s12^3*s23^3*(-254*s13^3 - 8114*s13^2*s23 - 
                8223*s13*s23^2 + 424*s23^3) + s12^2*s23^4*(-694*s13^3 - 
                5056*s13^2*s23 - 3951*s13*s23^2 + 1155*s23^3) - 
              s12^5*s23*(234*s13^3 + 1404*s13^2*s23 - 6397*s13*s23^2 + 
                1362*s23^3) + s12^6*(-36*s13^3 - 144*s13^2*s23 + 
                7488*s13*s23^2 + 1459*s23^3) - s12^4*s23^2*(214*s13^3 + 
                5344*s13^2*s23 + 3681*s13*s23^2 + 2038*s23^3)) + 
            2*p2q^3*(s12 + s23)*(-30*s13^2*s23^5*(s13 + s23) + 
              s12^6*(9*s13^2 + 9*s13*s23 - 77*s23^2) + s12^5*(18*s13^3 + 
                45*s13^2*s23 + 95*s13*s23^2 - 236*s23^3) - 15*s12*s13*s23^3*(
                s13^3 + 7*s13^2*s23 + 6*s13*s23^2 - 2*s23^3) + 
              s12^4*(9*s13^4 + 45*s13^3*s23 + 193*s13^2*s23^2 + 
                339*s13*s23^3 - 246*s23^4) + s12^3*s23*(9*s13^4 + 
                2*s13^3*s23 + 255*s13^2*s23^2 + 459*s13*s23^3 - 92*s23^4) + 
              s12^2*s23^2*(-10*s13^4 - 108*s13^3*s23 + 38*s13^2*s23^2 + 
                236*s13*s23^3 - 5*s23^4)) - p2q^2*p3q*
             (18*s12^8*(2*s13 - s23) + 2*s12^7*(27*s13^2 + 198*s13*s23 - 
                89*s23^2) + s12^6*s23*(2448*s13^2 + 3484*s13*s23 + 
                985*s23^2) + 10*s13*s23^5*(54*s13^3 + 61*s13^2*s23 + 
                5*s13*s23^2 - 2*s23^3) + 2*s12*s23^4*(447*s13^4 + 
                1021*s13^3*s23 + 750*s13^2*s23^2 + 411*s13*s23^3 + 
                10*s23^4) + s12^2*s23^3*(392*s13^4 + 2092*s13^3*s23 + 
                6236*s13^2*s23^2 + 5973*s13*s23^3 + 629*s23^4) + 
              s12^3*s23^2*(20*s13^4 + 736*s13^3*s23 + 12422*s13^2*s23^2 + 
                15067*s13*s23^3 + 3178*s23^4) + s12^5*(-18*s13^4 + 
                234*s13^3*s23 + 9304*s13^2*s23^2 + 11591*s13*s23^3 + 
                4412*s23^4) + s12^4*s23*(-36*s13^4 + 390*s13^3*s23 + 
                14546*s13^2*s23^2 + 18403*s13*s23^3 + 5836*s23^4))) + 
          p1q*(2*p3q^4*s12^2*(s12 + s23)*(9*s12^6 + 9*s12^5*(4*s13 + 
                11*s23) + s12^2*s23^2*(353*s13^2 + 125*s13*s23 - 555*s23^2) + 
              s12*s23^3*(34*s13^2 - 377*s13*s23 - 297*s23^2) + 
              s12^3*s23*(108*s13^2 + 569*s13*s23 - 154*s23^2) - 
              2*s23^4*(59*s13^2 + 61*s13*s23 + 2*s23^2) + 9*s12^4*(3*s13^2 + 
                25*s13*s23 + 22*s23^2)) + p2q*p3q^3*s12*(54*s12^8 + 
              54*s12^7*(s13 + 11*s23) - 4*s13*s23^5*(107*s13^2 + 
                274*s13*s23 + 167*s23^2) + s12^6*(-126*s13^2 + 3762*s13*s23 + 
                2993*s23^2) + 4*s12^3*s23^2*(24*s13^3 - 1359*s13^2*s23 + 
                1034*s13*s23^2 - 1255*s23^3) - 4*s12^4*s23*(117*s13^3 + 
                734*s13^2*s23 - 4211*s13*s23^2 + 148*s23^3) - 
              s12*s23^4*(226*s13^3 + 4352*s13^2*s23 + 4269*s13*s23^2 + 
                463*s23^3) - s12^2*s23^3*(-800*s13^3 + 6530*s13^2*s23 + 
                6218*s13*s23^2 + 3111*s23^3) + s12^5*(-126*s13^3 - 
                900*s13^2*s23 + 13799*s13*s23^2 + 4233*s23^3)) + 
            p2q^2*p3q^2*(36*s12^9 + s12^8*(-90*s13 + 54*s23) - 
              40*s13^2*s23^5*(7*s13^2 + 8*s13*s23 + s23^2) + 
              s12^7*(-198*s13^2 - 54*s13*s23 + 1597*s23^2) + 2*s12*s13*s23^4*(
                7*s13^3 + 147*s13^2*s23 - 54*s13*s23^2 - 314*s23^3) + 
              s12^6*(18*s13^3 - 7236*s13^2*s23 - 1172*s13*s23^2 + 
                2927*s23^3) + s12^4*s23*(216*s13^4 + 3944*s13^3*s23 - 
                17672*s13^2*s23^2 - 6659*s13*s23^3 - 5444*s23^4) + 
              s12^3*s23^2*(50*s13^4 + 8252*s13^3*s23 - 2419*s13^2*s23^2 - 
                6703*s13*s23^3 - 3295*s23^4) + s12^5*(90*s13^4 + 
                144*s13^3*s23 - 20665*s13^2*s23^2 - 4067*s13*s23^3 - 
                1266*s23^4) + s12^2*s23^3*(398*s13^4 + 4968*s13^3*s23 + 
                1558*s13^2*s23^2 - 3531*s13*s23^3 - 465*s23^4)) + 
            2*p2q^4*s13*(s12 + s23)*(9*s12^6*(2*s13 + 11*s23) + 
              10*s13^2*s23^3*(s13^2 + 4*s13*s23 + 3*s23^2) + s12^5*(9*s13^2 + 
                90*s13*s23 + 401*s23^2) + 5*s12*s13*s23^2*(3*s13^3 + 
                15*s13^2*s23 + 10*s13*s23^2 - 6*s23^3) + s12^2*s23^2*(
                39*s13^3 - 131*s13^2*s23 - 194*s13*s23^2 + 41*s23^3) + 
              s12^4*(-18*s13^3 - 54*s13^2*s23 + 47*s13*s23^2 + 546*s23^3) - 
              3*s12^3*(3*s13^4 + 9*s13^3*s23 + 74*s13^2*s23^2 + 
                63*s13*s23^3 - 95*s23^4)) + p2q^3*p3q*
             (-18*s12^8*(4*s13 + 11*s23) + 2*s12^7*(9*s13^2 - 135*s13*s23 - 
                212*s23^2) + s12^6*(162*s13^3 - 450*s13^2*s23 - 
                305*s13*s23^2 - 966*s23^3) + 10*s13^2*s23^4*(38*s13^3 + 
                43*s13^2*s23 + s13*s23^2 - 4*s23^3) + s12^5*(54*s13^4 + 
                3348*s13^3*s23 + 2691*s13^2*s23^2 + 2693*s13*s23^3 - 
                2344*s23^4) + 2*s12*s13*s23^3*(259*s13^4 + 743*s13^3*s23 + 
                720*s13^2*s23^2 + 401*s13*s23^3 + 20*s23^4) + 
              s12^4*(-18*s13^5 + 252*s13^4*s23 + 10892*s13^3*s23^2 + 
                13202*s13^2*s23^3 + 7121*s13*s23^4 - 2506*s23^5) + 
              s12^3*s23*(-18*s13^5 + 254*s13^4*s23 + 13262*s13^3*s23^2 + 
                16875*s13^2*s23^3 + 5901*s13*s23^4 - 912*s23^5) + 
              2*s12^2*s23^2*(69*s13^5 + 646*s13^4*s23 + 3533*s13^3*s23^2 + 
                3837*s13^2*s23^3 + 810*s13*s23^4 - 5*s23^5)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13*s23^2*
         (s12 + s23)^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (-(p3q^5*s12^3*(s12 + s23)*(54*s12^4*s13 + s12^3*(54*s13^2 - 
              135*s13*s23 - 448*s23^2) - s23^3*(s13^2 + 529*s13*s23 + 
              528*s23^2) - s12^2*s23*(189*s13^2 + 801*s13*s23 + 1424*s23^2) - 
            s12*s23^2*(164*s13^2 + 1141*s13*s23 + 1504*s23^2))) + 
         p2q^5*s13^2*(27*s12^6*(2*s13 + 11*s23) + 10*s13^2*s23^3*
            (s13^2 + 5*s13*s23 + 4*s23^2) + s12^3*s23^2*(168*s13^2 + 
             805*s13*s23 + 576*s23^2) + s12^5*(54*s13^2 + 459*s13*s23 + 
             984*s23^2) + s12^4*s23*(108*s13^2 + 943*s13*s23 + 1170*s23^2) + 
           10*s12*s13*s23^2*(2*s13^3 + 10*s13^2*s23 + 19*s13*s23^2 + 
             8*s23^3) + s12^2*s23^2*(40*s13^3 + 264*s13^2*s23 + 
             347*s13*s23^2 + 93*s23^3)) + p2q*p3q^4*s12^2*
          (-54*s12^7 - 54*s12^6*(2*s13 - 11*s23) + s13*s23^4*
            (-381*s13^2 + 125*s13*s23 + 266*s23^2) + 
           s12^5*(108*s13^2 - 1719*s13*s23 + 2575*s23^2) + 
           s12*s23^3*(-1045*s13^3 + 748*s13^2*s23 - 185*s13*s23^2 + 
             731*s23^3) + 2*s12^4*(81*s13^3 + 495*s13^2*s23 - 
             2794*s13*s23^2 + 2176*s23^3) + s12^2*s23^2*(-845*s13^3 + 
             2055*s13^2*s23 - 3642*s13*s23^2 + 2662*s23^3) + 
           s12^3*s23*(-99*s13^3 + 2314*s13^2*s23 - 7168*s13*s23^2 + 
             4356*s23^3)) + p2q^4*p3q*s13*(-54*s12^7*(3*s13 + 11*s23) - 
           6*s12^6*(18*s13^2 + 63*s13*s23 + 226*s23^2) + 
           s12^5*(108*s13^3 - 990*s13^2*s23 - 1259*s13*s23^2 - 1904*s23^3) + 
           10*s13^2*s23^3*(28*s13^3 + 31*s13^2*s23 - s13*s23^2 - 4*s23^3) + 
           s12^4*(54*s13^4 + 2178*s13^3*s23 + 163*s13^2*s23^2 - 
             2175*s13*s23^3 - 2236*s23^4) + s12^3*s23*(306*s13^4 + 
             4830*s13^3*s23 + 4108*s13^2*s23^2 - 1131*s13*s23^3 - 
             1214*s23^4) + s12^2*s23^2*(464*s13^4 + 2928*s13^3*s23 + 
             3139*s13^2*s23^2 - 79*s13*s23^3 - 120*s23^4) + 
           2*s12*s13*s23^2*(190*s13^4 + 281*s13^3*s23 + 124*s13^2*s23^2 + 
             98*s13*s23^3 - 40*s23^4)) - p2q^2*p3q^3*s12*
          (54*s12^8 - 54*s12^7*(2*s13 + 7*s23) - 3*s12^6*(108*s13^2 - 
             816*s13*s23 + 149*s23^2) + 2*s13^2*s23^4*(-87*s13^2 + 
             86*s13*s23 + 173*s23^2) + s12^5*s23*(-4887*s13^2 + 
             7729*s13*s23 + 1088*s23^2) + s12*s13*s23^3*(-462*s13^3 + 
             2960*s13^2*s23 + 3265*s13*s23^2 + 43*s23^3) + 
           s12^2*s23^2*(60*s13^4 + 8505*s13^3*s23 + 4045*s13^2*s23^2 + 
             1274*s13*s23^3 - 379*s23^4) + 2*s12^3*s23*(225*s13^4 + 
             4141*s13^3*s23 - 2632*s13^2*s23^2 + 2464*s13*s23^3 - 63*s23^4) + 
           s12^4*(162*s13^4 + 2565*s13^3*s23 - 10953*s13^2*s23^2 + 
             8870*s13*s23^3 + 1356*s23^4)) + p2q^3*p3q^2*
          (27*s12^8*(6*s13 + 11*s23) - 40*s13^3*s23^4*(7*s13^2 + 8*s13*s23 + 
             s23^2) + s12^7*(-459*s13*s23 + 372*s23^2) - 2*s12*s13^2*s23^3*
            (417*s13^3 + 370*s13^2*s23 + 46*s13*s23^2 + 213*s23^3) - 
           s12^6*(324*s13^3 - 2736*s13^2*s23 + 455*s13*s23^2 + 490*s23^3) - 
           s12^2*s13*s23^2*(314*s13^4 - 1506*s13^3*s23 + 921*s13^2*s23^2 + 
             4084*s13*s23^3 + 429*s23^4) - s12^5*(108*s13^4 + 
             5346*s13^3*s23 - 3851*s13^2*s23^2 + 44*s13*s23^3 + 732*s23^4) + 
           s12^4*(54*s13^5 + 1188*s13^4*s23 - 12141*s13^3*s23^2 - 
             4426*s13^2*s23^3 - 1798*s13*s23^4 + 9*s23^5) + 
           s12^3*s23*(414*s13^5 + 3252*s13^4*s23 - 7748*s13^3*s23^2 - 
             9199*s13^2*s23^3 - 2017*s13*s23^4 + 176*s23^5)) + 
         2*p1q^4*s23^2*(s12 + s23)^2*(s12 + s13 + s23)*
          (p2q*(127*s12^4 - 15*s13*s23^3 + 5*s12*s23^2*(-s13 + s23) - 
             s12^2*s23*(67*s13 + 5*s23) + s12^3*(-71*s13 + 117*s23)) + 
           p3q*(325*s12^4 + s12^2*(257*s13 - 203*s23)*s23 + 
             2*s12*(101*s13 - 20*s23)*s23^2 + 120*s13*s23^3 + 
             s12^3*(127*s13 + 162*s23))) + 2*p1q^3*s23*(s12 + s23)*
          (s12 + s13 + s23)*(p3q^2*(9*s12^6 + 4*s12^2*(108*s13 - 173*s23)*
              s23^3 + 7*s12*(17*s13 - 29*s23)*s23^4 + 120*s13*s23^5 + 
             s12^3*s23^2*(858*s13 + 439*s23) + s12^5*(207*s13 + 1192*s23) + 
             s12^4*s23*(592*s13 + 2111*s23)) + 
           p2q^2*(-7*s12^5*(27*s13 - 22*s23) + s12^2*s13*(91*s13 - 38*s23)*
              s23^2 + 45*s12*s13^2*s23^3 + 20*s13*(2*s13 - s23)*s23^4 + 
             2*s12^3*s23*(56*s13^2 - 235*s13*s23 + 77*s23^2) + 
             s12^4*(9*s13^2 - 601*s13*s23 + 308*s23^2)) + 
           p2q*p3q*(207*s12^6 - 5*s13*s23^4*(100*s13 + 7*s23) + 
             2*s12^5*(9*s13 + 520*s23) + s12^2*s23^2*(-935*s13^2 + 1492*s13*
                s23 - 431*s23^2) - 2*s12*s23^3*(513*s13^2 - 82*s13*s23 + 79*
                s23^2) + 2*s12^3*s23*(-367*s13^2 + 833*s13*s23 + 139*s23^2) + 
             s12^4*(-189*s13^2 + 351*s13*s23 + 1384*s23^2))) + 
         p1q^2*(p3q^3*s12*(s12 + s23)*(36*s12^7 + 18*s12^6*(4*s13 + 9*s23) + 
             s12*s23^4*(639*s13^2 - 339*s13*s23 - 898*s23^2) - 
             2*s23^5*(203*s13^2 + 366*s13*s23 + 163*s23^2) + 
             2*s12^5*(18*s13^2 + 522*s13*s23 + 1723*s23^2) + 
             s12^2*s23^3*(1954*s13^2 + 5843*s13*s23 + 2678*s23^2) + 
             s12^3*s23^2*(1515*s13^2 + 10195*s13*s23 + 9976*s23^2) + 
             s12^4*s23*(882*s13^2 + 5717*s13*s23 + 10046*s23^2)) + 
           p2q*p3q^2*(36*s12^9 + 1746*s12^8*s23 - 40*s13*s23^6*
              (19*s13^2 + 20*s13*s23 + s23^2) + s12^7*(-108*s13^2 + 234*s13*
                s23 + 8164*s23^2) + s12^2*s23^4*(-2654*s13^3 + 4367*s13^2*
                s23 + 9084*s13*s23^2 - 1039*s23^3) - 2*s12*s23^5*
              (865*s13^3 + 602*s13^2*s23 - 460*s13*s23^2 + 163*s23^3) + 
             2*s12^3*s23^3*(-2304*s13^3 + 5137*s13^2*s23 + 12640*s13*s23^2 + 
               938*s23^3) + 2*s12^5*s23*(-747*s13^3 + 960*s13^2*s23 + 8899*
                s13*s23^2 + 10057*s23^3) + s12^4*s23^2*(-4266*s13^3 + 7081*
                s13^2*s23 + 30954*s13*s23^2 + 11744*s23^3) + 
             s12^6*(-72*s13^3 + 234*s13^2*s23 + 4234*s13*s23^2 + 17413*
                s23^3)) + p2q^3*(60*s13^2*s23^5*(-s13^2 + s13*s23 + 2*
                s23^2) + 3*s12^7*(12*s13^2 - 114*s13*s23 + 77*s23^2) - 
             10*s12*s13*s23^4*(11*s13^3 + 5*s13^2*s23 - 32*s13*s23^2 - 8*
                s23^3) + s12^2*s13*s23^3*(-96*s13^3 - 212*s13^2*s23 + 151*s13*
                s23^2 + 117*s23^3) + 3*s12^6*(24*s13^3 + 72*s13^2*s23 - 533*
                s13*s23^2 + 308*s23^3) + s12^3*s23^2*(-56*s13^4 + 454*s13^3*
                s23 - 370*s13^2*s23^2 - 702*s13*s23^3 + 231*s23^4) + 
             6*s12^5*(6*s13^4 + 99*s13^3*s23 + 22*s13^2*s23^2 - 478*s13*
                s23^3 + 231*s23^4) + s12^4*s23*(36*s13^4 + 1078*s13^3*s23 - 
               369*s13^2*s23^2 - 2350*s13*s23^3 + 924*s23^4)) + 
           p2q^2*p3q*(s12^8*(-72*s13 + 450*s23) - 2*s12^7*(54*s13^2 + 873*s13*
                s23 - 1021*s23^2) + s12^6*s23*(-810*s13^2 - 3388*s13*s23 + 
               4809*s23^2) + 10*s13*s23^5*(156*s13^3 + 173*s13^2*s23 + 13*s13*
                s23^2 - 4*s23^3) + 2*s12*s13*s23^4*(1916*s13^3 + 2539*s13^2*
                s23 + 472*s13*s23^2 + 524*s23^3) + s12^2*s23^3*
              (3054*s13^4 + 1616*s13^3*s23 - 269*s13^2*s23^2 + 6312*s13*
                s23^3 + 149*s23^4) + 2*s12^3*s23^2*(755*s13^4 - 2869*s13^3*
                s23 - 2685*s13^2*s23^2 + 6801*s13*s23^3 + 915*s23^4) + 
             2*s12^5*(18*s13^4 - 585*s13^3*s23 - 1788*s13^2*s23^2 + 1228*s13*
                s23^3 + 3412*s23^4) + s12^4*s23*(684*s13^4 - 5096*s13^3*s23 - 
               7161*s13^2*s23^2 + 12548*s13*s23^3 + 5288*s23^4))) + 
         p1q*(p3q^4*s12^2*(s12 + s23)*(36*s12^6 + 18*s12^5*(s13 + 8*s23) - 
             9*s12^4*(2*s13^2 - 83*s13*s23 - 238*s23^2) + 
             s23^4*(693*s13^2 + 1019*s13*s23 + 326*s23^2) + 
             s12*s23^3*(1007*s13^2 + 4518*s13*s23 + 3144*s23^2) + 
             s12^3*s23*(657*s13^2 + 3440*s13*s23 + 6488*s23^2) + 
             s12^2*s23^2*(749*s13^2 + 6210*s13*s23 + 7272*s23^2)) + 
           p2q*p3q^3*s12*(-18*s12^8 - 18*s12^7*(8*s13 - 107*s23) - 
             3*s12^6*(42*s13^2 + 606*s13*s23 - 2695*s23^2) + 
             8*s13*s23^5*(34*s13^2 + 123*s13*s23 + 89*s23^2) + 
             s12^5*s23*(2007*s13^2 - 3655*s13*s23 + 15419*s23^2) + 
             s12*s23^4*(-751*s13^3 + 4571*s13^2*s23 + 5757*s13*s23^2 + 475*
                s23^3) + s12^2*s23^3*(-2843*s13^3 + 8984*s13^2*s23 + 14286*
                s13*s23^2 + 4325*s23^3) + s12^3*s23^2*(-2497*s13^3 + 10690*
                s13^2*s23 + 13698*s13*s23^2 + 12324*s23^3) + 
             s12^4*s23*(-837*s13^3 + 7426*s13^2*s23 + 2476*s13*s23^2 + 17752*
                s23^3)) + p2q^2*p3q^2*(-54*s12^9 + s12^8*(-54*s13 + 828*
                s23) + 80*s13^2*s23^5*(10*s13^2 + 11*s13*s23 + s23^2) + 
             3*s12^7*(36*s13^2 - 1296*s13*s23 + 823*s23^2) + 
             2*s12*s13*s23^4*(1043*s13^3 + 836*s13^2*s23 - 171*s13*s23^2 + 
               396*s23^3) + s12^6*(162*s13^3 + 3474*s13^2*s23 - 8553*s13*
                s23^2 + 3641*s23^3) + s12^2*s23^3*(1746*s13^4 - 6083*s13^3*
                s23 - 6407*s13^2*s23^2 + 4703*s13*s23^3 + 149*s23^4) + 
             s12^3*s23^2*(570*s13^4 - 18588*s13^3*s23 - 12525*s13^2*s23^2 + 
               10672*s13*s23^3 + 2189*s23^4) + s12^4*s23*(144*s13^4 - 16421*
                s13^3*s23 - 3395*s13^2*s23^2 + 9464*s13*s23^3 + 5334*s23^4) + 
             s12^5*(54*s13^4 - 4626*s13^3*s23 + 6511*s13^2*s23^2 - 2016*s13*
                s23^3 + 5348*s23^4)) + p2q^3*p3q*(27*s12^8*(4*s13 + 11*s23) + 
             9*s12^7*(18*s13^2 - 73*s13*s23 + 99*s23^2) - 10*s13^2*s23^4*
              (108*s13^3 + 121*s13^2*s23 + 5*s13*s23^2 - 8*s23^3) + 
             2*s12^6*(36*s13^3 + 963*s13^2*s23 - 900*s13*s23^2 + 793*s23^3) - 
             s12^5*(18*s13^4 + 1674*s13^3*s23 + 709*s13^2*s23^2 + 2432*s13*
                s23^3 - 2382*s23^4) - 2*s12*s13*s23^3*(1022*s13^4 + 1445*
                s13^3*s23 + 492*s13^2*s23^2 + 464*s13*s23^3 - 40*s23^4) - 
             s12^2*s13*s23^2*(694*s13^4 + 418*s13^3*s23 + 4805*s13^2*s23^2 + 
               8517*s13*s23^3 + 470*s23^4) - s12^4*(36*s13^5 - 1872*s13^4*
                s23 + 7185*s13^3*s23^2 + 13433*s13^2*s23^3 + 3262*s13*s23^4 - 
               2085*s23^5) + s12^3*s23*(54*s13^5 + 3072*s13^4*s23 - 9230*
                s13^3*s23^2 - 18469*s13^2*s23^3 - 2415*s13*s23^4 + 695*
                s23^5)) - p2q^4*s13*(120*s13^2*s23^5*(s13 + s23) + 
             27*s12^7*(2*s13 + 11*s23) + 9*s12^6*(10*s13^2 + 19*s13*s23 + 165*
                s23^2) + 10*s12*s13*s23^3*(s13^3 + 17*s13^2*s23 + 44*s13*
                s23^2 + 16*s23^3) + 3*s12^5*(24*s13^3 - 12*s13^2*s23 + 121*
                s13*s23^2 + 922*s23^3) + s12^2*s23^2*(-8*s13^4 - 50*s13^3*
                s23 + 319*s13^2*s23^2 + 464*s13*s23^3 + 93*s23^4) + 
             s12^4*(36*s13^4 + 162*s13^3*s23 - 547*s13^2*s23^2 + 573*s13*
                s23^3 + 2358*s23^4) + s12^3*(18*s13^4*s23 - 422*s13^2*s23^3 + 
               631*s13*s23^4 + 873*s23^5))))/(54*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)^2*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     (-1/27*(ep^3*(p3q*(-27*s12^3 + 13*s12^2*s23 + 40*s13^2*s23 + 
             s12*s13*(27*s13 + 35*s23)) + p2q*(35*s12*s13*s23 + 
             s13^2*(-27*s13 + 13*s23) + s12^2*(27*s13 + 40*s23)) + 
           p1q*(s13*(27*s13 - 13*s23)*s23 + 9*s12^2*(4*s13 + 3*s23) + 
             s12*(36*s13^2 + 18*s13*s23 - 13*s23^2))))/((p1q + p2q + p3q)*s12*
          s13*(s12 + s13)) + 
       (ep^2*(-(p2q^4*s13^2*(s12^2 + 11*s12*s13 + 10*s13^2)*(s12 + s23)*
            (s12 + s13 + s23)) - p3q^2*(s12 + s13 + s23)*
           (p3q^2*s12^2*(10*s12^2 + 11*s12*s13 + s13^2)*(s13 + s23) - 
            p1q*p3q*s12^2*s23*(9*s12*s13 + 9*s13^2 + 20*s12*s23 + 
              11*s13*s23) + p1q^2*s23^2*(-2*s12*s13^2 - s12^2*(s13 - 
                10*s23) - s13^2*(s13 + s23))) + p2q^3*s13*
           (p1q*s13*s23*(9*s12^3 + 20*s13*s23*(s13 + s23) + 2*s12^2*(9*s13 + 
                10*s23) + s12*(9*s13^2 + 40*s13*s23 + 11*s23^2)) + 
            p3q*(20*s12^5 + s12^4*(59*s13 + 40*s23) + s12^2*s13*(-22*s13^2 + 
                8*s13*s23 - 589*s23^2) + 2*s12^3*(s13^2 + 38*s13*s23 - 
                40*s23^2) - s13^3*(19*s13^2 + 48*s13*s23 + 29*s23^2) - 
              2*s12*s13^2*(38*s13^2 + 65*s13*s23 + 72*s23^2))) + 
          p2q*p3q*(p1q^2*s23^2*(s12^4 + 2*s12*s13^2*(2*s13 - 3*s23) + 
              4*s12^3*(s13 - 2*s23) + s13^2*(s13^2 - 8*s13*s23 - 9*s23^2) + 
              s12^2*(6*s13^2 - 6*s13*s23 - 9*s23^2)) - p3q^2*s12*
             (19*s12^5 + s12^4*(76*s13 + 48*s23) - 2*s12^2*s13*(s13^2 + 
                4*s13*s23 - 72*s23^2) - 20*s13^3*(s13^2 + 2*s13*s23 - 
                4*s23^2) + s12^3*(22*s13^2 + 130*s13*s23 + 29*s23^2) + 
              s12*s13^2*(-59*s13^2 - 76*s13*s23 + 589*s23^2)) + 
            p1q*p3q*(18*s12^5*s23 + 18*s13^3*s23*(s13 + s23)^2 - 
              4*s12^2*s13*s23*(64*s13^2 + 133*s13*s23 - 46*s23^2) + 
              4*s12^4*(9*s13^2 + 18*s13*s23 + 14*s23^2) + s12*s13^2*s23*(
                45*s13^2 + 118*s13*s23 + 173*s23^2) + s12^3*(-36*s13^3 - 
                193*s13^2*s23 + 176*s13*s23^2 + 38*s23^3))) + 
          p2q^2*(p1q^2*s23^2*(s12^4 + s12*s13^2*(s13 - 9*s23) - 
              10*s13^2*s23*(s13 + s23) + s12^3*(3*s13 + 2*s23) + 
              s12^2*(3*s13^2 + 3*s13*s23 + s23^2)) - 
            p3q^2*(19*s12^6 + 19*s13^4*(s13 + s23)^2 + s12^5*(28*s13 + 
                38*s23) + s12^4*(-95*s13^2 + 41*s13*s23 + 19*s23^2) + 
              s12^3*s13*(-64*s13^2 - 127*s13*s23 + 213*s23^2) + 
              s12*s13^3*(28*s13^2 + 41*s13*s23 + 213*s23^2) + 
              s12^2*s13^2*(-95*s13^2 - 127*s13*s23 + 1176*s23^2)) + 
            p1q*p3q*(18*s12^5*s23 + 9*s12^4*s23*(5*s13 + 4*s23) + 
              2*s13^3*s23*(9*s13^2 + 28*s13*s23 + 19*s23^2) + 
              8*s12*s13^2*s23*(9*s13^2 + 22*s13*s23 + 23*s23^2) - 
              2*s12^3*(18*s13^3 + 128*s13^2*s23 - 59*s13*s23^2 - 9*s23^3) + 
              s12^2*s13*(36*s13^3 - 193*s13^2*s23 - 532*s13*s23^2 + 
                173*s23^3)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13^2*(s12 + s13)*s23) - 
       (ep*(-2*p1q^4*(p2q + p3q)*(s12^2 - s13^2)*s23^4*(s12 + s13 + s23)*
           (p2q*(-10*s12*s13^3 + s12^3*(s13 - 40*s23) - 5*s13^3*s23) + 
            p3q*(-(s12*s13^3) + 40*s13^3*s23 + 5*s12^3*(2*s13 + s23))) + 
          2*p1q^3*(p2q + p3q)*(s12 + s13)*s23^3*(s12 + s13 + s23)*
           (p3q^2*(-40*s13^5*s23 + s12^2*s13^2*s23*(-244*s13 + s23) + 
              10*s12^5*(s13 + s23) + s12*s13^3*(s13^2 - 122*s13*s23 - 
                162*s23^2) + s12^3*s13*(-94*s13^2 - 259*s13*s23 + 10*s23^2) - 
              s12^4*(101*s13^2 + 35*s13*s23 + 10*s23^2)) + 
            p2q^2*(s12^5*(s13 - 40*s23) - 122*s12^4*s13*s23 + 
              10*s13^4*(s13 - s23)*s23 + s12^2*s13^2*(-101*s13^2 - 
                259*s13*s23 + s23^2) + 5*s12*s13^3*(2*s13^2 - 7*s13*s23 + 
                2*s23^2) - 2*s12^3*s13*(47*s13^2 + 122*s13*s23 + 81*s23^2)) - 
            p2q*p3q*(5*s13^4*s23*(33*s13 + 2*s23) + s12^5*(7*s13 + 165*s23) + 
              s12^2*s13^2*(65*s13^2 + 629*s13*s23 - 2*s23^2) + 
              s12^4*(65*s13^2 + 58*s13*s23 + 10*s23^2) + s12*s13^3*(7*s13^2 + 
                58*s13*s23 + 152*s23^2) + s12^3*s13*(224*s13^2 + 
                629*s13*s23 + 152*s23^2))) + (p2q + p3q)^2*(s12 + s13)*
           (2*p3q^4*s12^3*(s12 + s13)*s23*(5*s12^5 + 5*s12^4*(2*s13 + 
                3*s23) + s12*s13^2*(375*s13^2 - 164*s13*s23 - 188*s23^2) + 
              3*s13^3*(70*s13^2 + 23*s13*s23 - 47*s23^2) + s12^2*s13*(
                120*s13^2 - 243*s13*s23 - 10*s23^2) + 5*s12^3*(-8*s13^2 + 
                s13*s23 + 2*s23^2)) + 2*p2q^4*s13^3*(s12 + s13)*s23*
             (210*s12^5 + s12^4*(375*s13 + 69*s23) + s12^3*(120*s13^2 - 
                164*s13*s23 - 141*s23^2) + 5*s12*s13^2*(2*s13^2 + s13*s23 - 
                2*s23^2) + 5*s13^3*(s13^2 + 3*s13*s23 + 2*s23^2) - 
              s12^2*s13*(40*s13^2 + 243*s13*s23 + 188*s23^2)) + 
            p2q*p3q^3*s12^2*(100*s12^7*s23 + 8*s12^6*s23*(47*s13 + 15*s23) + 
              2*s13^5*s23*(332*s13^2 + 273*s13*s23 + 81*s23^2) + 
              2*s12*s13^4*s23*(1476*s13^2 + 4013*s13*s23 + 691*s23^2) + 
              s12^2*s13^3*s23*(11325*s13^2 + 15567*s13*s23 + 1600*s23^2) + 
              s12^5*(3384*s13^3 + 2877*s13^2*s23 + 640*s13*s23^2 + 
                20*s23^3) + s12^4*s13*(6768*s13^3 + 10063*s13^2*s23 + 
                3369*s13*s23^2 + 344*s23^3) + s12^3*s13^2*(3384*s13^3 + 
                16499*s13^2*s23 + 10576*s13*s23^2 + 704*s23^3)) + 
            p2q^3*p3q*s13^2*(664*s12^7*s23 + 6*s12^6*s23*(492*s13 + 91*s23) + 
              20*s13^5*s23*(5*s13^2 + 6*s13*s23 + s23^2) + 8*s12*s13^4*s23*(
                47*s13^2 + 80*s13*s23 + 43*s23^2) + s12^2*s13^3*s23*(
                2877*s13^2 + 3369*s13*s23 + 704*s23^2) + s12^5*(3384*s13^3 + 
                11325*s13^2*s23 + 8026*s13*s23^2 + 162*s23^3) + 
              s12^4*s13*(6768*s13^3 + 16499*s13^2*s23 + 15567*s13*s23^2 + 
                1382*s23^3) + s12^3*s13^2*(3384*s13^3 + 10063*s13^2*s23 + 
                10576*s13*s23^2 + 1600*s23^3)) + 2*p2q^2*p3q^2*s12*s13*
             (92*s12^7*s23 + 22*s12^6*s23*(53*s13 + 12*s23) + 
              4*s13^5*s23*(23*s13^2 + 66*s13*s23 + 43*s23^2) + 
              2*s12*s13^4*s23*(583*s13^2 + 794*s13*s23 + 311*s23^2) + 
              s12^2*s13^3*s23*(1605*s13^2 + 7281*s13*s23 + 1934*s23^2) + 
              s12^5*(-3384*s13^3 + 1605*s13^2*s23 + 1588*s13*s23^2 + 
                172*s23^3) + s12^4*s13*(-6768*s13^3 + 2005*s13^2*s23 + 
                7281*s13*s23^2 + 622*s23^3) + s12^3*s13^2*(-3384*s13^3 + 
                2005*s13^2*s23 + 12274*s13*s23^2 + 1934*s23^3))) - 
          p1q*(p2q + p3q)*(2*p2q^4*s13^2*(s12 + s13)*s23*
             (s12^6*(s13 + 270*s23) + 10*s13^4*s23*(s13^2 + 4*s13*s23 + 
                3*s23^2) + s12^5*(84*s13^2 + 1196*s13*s23 + 269*s23^2) + 
              s12^2*s13^2*(111*s13^3 + 314*s13^2*s23 - 270*s13*s23^2 - 
                428*s23^3) + s12^3*s13*(274*s13^3 + 1129*s13^2*s23 + 
                7*s13*s23^2 - 353*s23^3) + 5*s12*s13^3*(2*s13^3 + 
                13*s13^2*s23 + 13*s13*s23^2 - 2*s23^3) + s12^4*(256*s13^3 + 
                1796*s13^2*s23 + 571*s13*s23^2 - s23^3)) + 
            2*p3q^4*s12^2*(s12 + s13)*s23*(10*s12^6*(s13 + s23) + 
              s13^4*s23*(270*s13^2 + 269*s13*s23 - s23^2) + 
              s12^5*(111*s13^2 + 65*s13*s23 + 40*s23^2) + s12^2*s13^2*(
                84*s13^3 + 1796*s13^2*s23 + 7*s13*s23^2 - 428*s23^3) + 
              s12*s13^3*(s13^3 + 1196*s13^2*s23 + 571*s13*s23^2 - 
                353*s23^3) + s12^3*s13*(256*s13^3 + 1129*s13^2*s23 - 
                270*s13*s23^2 - 10*s23^3) + s12^4*(274*s13^3 + 314*s13^2*
                 s23 + 65*s13*s23^2 + 30*s23^3)) + p2q*p3q^3*s12*
             (2*s12^8*s23*(29*s13 + 195*s23) + 4*s13^6*s23^2*(107*s13^2 + 
                274*s13*s23 + 167*s23^2) + s12^7*(-3384*s13^3 + 444*s13^2*
                 s23 + 1746*s13*s23^2 + 490*s23^3) + 2*s12*s13^5*s23*(
                -20*s13^3 + 2488*s13^2*s23 + 3343*s13*s23^2 + 995*s23^3) + 
              s12^3*s13^3*s23*(-5844*s13^3 + 26671*s13^2*s23 + 35162*s13*
                 s23^2 + 2218*s23^3) + s12^2*s13^4*s23*(-390*s13^3 + 
                13493*s13^2*s23 + 22571*s13*s23^2 + 2938*s23^3) + 
              s12^6*(-10152*s13^4 + 2334*s13^3*s23 + 9626*s13^2*s23^2 + 
                2490*s13*s23^3 + 100*s23^4) + s12^5*s13*(-10152*s13^4 - 
                1616*s13^3*s23 + 26963*s13^2*s23^2 + 10068*s13*s23^3 + 
                1092*s23^4) + s12^4*s13^2*(-3384*s13^4 - 9058*s13^3*s23 + 
                36419*s13^2*s23^2 + 25889*s13*s23^3 + 1594*s23^4)) + 
            p2q^3*p3q*s13*(10*s13^6*s23^2*(39*s13^2 + 49*s13*s23 + 
                10*s23^2) + s12^8*(-40*s13*s23 + 428*s23^2) + 
              2*s12^7*s23*(-195*s13^2 + 2488*s13*s23 + 548*s23^2) + 
              2*s12*s13^5*s23*(29*s13^3 + 873*s13^2*s23 + 1245*s13*s23^2 + 
                546*s23^3) + 2*s12^2*s13^4*s23*(222*s13^3 + 4813*s13^2*s23 + 
                5034*s13*s23^2 + 797*s23^3) + s12^6*(-3384*s13^4 - 
                5844*s13^3*s23 + 13493*s13^2*s23^2 + 6686*s13*s23^3 + 
                668*s23^4) + s12^5*s13*(-10152*s13^4 - 9058*s13^3*s23 + 
                26671*s13^2*s23^2 + 22571*s13*s23^3 + 1990*s23^4) + 
              s12^3*s13^3*(-3384*s13^4 + 2334*s13^3*s23 + 26963*s13^2*s23^2 + 
                25889*s13*s23^3 + 2218*s23^4) + s12^4*s13^2*(-10152*s13^4 - 
                1616*s13^3*s23 + 36419*s13^2*s23^2 + 35162*s13*s23^3 + 
                2938*s23^4)) + p2q^2*p3q^2*(2*s12^9*s23*(19*s13 + 140*s23) + 
              40*s13^7*s23^2*(7*s13^2 + 8*s13*s23 + s23^2) + 2*s12^8*s23*(
                81*s13^2 + 931*s13*s23 + 160*s23^2) + 2*s12*s13^6*s23*(
                19*s13^3 + 931*s13^2*s23 + 1652*s13*s23^2 + 860*s23^3) + 
              s12^2*s13^5*s23*(162*s13^3 + 12053*s13^2*s23 + 15447*s13*
                 s23^2 + 4462*s23^3) + s12^3*s13^4*s23*(4700*s13^3 + 
                29175*s13^2*s23 + 42878*s13*s23^2 + 7426*s23^3) + 
              s12^7*(6768*s13^4 + 4700*s13^3*s23 + 12053*s13^2*s23^2 + 
                3304*s13*s23^3 + 40*s23^4) + s12^6*s13*(20304*s13^4 + 
                5422*s13^3*s23 + 29175*s13^2*s23^2 + 15447*s13*s23^3 + 
                1720*s23^4) + 2*s12^5*s13^2*(10152*s13^4 + 846*s13^3*s23 + 
                20399*s13^2*s23^2 + 21439*s13*s23^3 + 2231*s23^4) + 
              2*s12^4*s13^3*(3384*s13^4 + 2711*s13^3*s23 + 20399*s13^2*
                 s23^2 + 30775*s13*s23^3 + 3713*s23^4))) + 
          p1q^2*s23*(2*p3q^4*s12*(s12 + s13)*s23*(10*s12^6*s13 + 
              s12^5*(202*s13^2 + 75*s13*s23 + 30*s23^2) + 2*s12*s13^3*s23*(
                399*s13^2 + 499*s13*s23 + 80*s23^2) + 2*s13^4*s23*(61*s13^2 + 
                142*s13*s23 + 81*s23^2) + 3*s12^2*s13^2*(28*s13^3 + 
                578*s13^2*s23 + 301*s13*s23^2 - 77*s23^3) + s12^3*s13*(
                350*s13^3 + 1707*s13^2*s23 + 216*s13*s23^2 - 20*s23^3) + 
              s12^4*(458*s13^3 + 724*s13^2*s23 + 75*s13*s23^2 + 30*s23^3)) + 
            2*p2q^4*s13*(s12 + s13)*s23*(122*s12^6*s23 + 30*s13^4*s23^2*(
                s13 + s23) + s12^5*(84*s13^2 + 798*s13*s23 + 284*s23^2) + 
              s12^2*s13^2*(202*s13^3 + 724*s13^2*s23 + 216*s13*s23^2 - 
                231*s23^3) + 5*s12*s13^3*(2*s13^3 + 15*s13^2*s23 + 
                15*s13*s23^2 - 4*s23^3) + 2*s12^4*(175*s13^3 + 867*s13^2*
                 s23 + 499*s13*s23^2 + 81*s23^3) + s12^3*s13*(458*s13^3 + 
                1707*s13^2*s23 + 903*s13*s23^2 + 160*s23^3)) + 
            p2q*p3q^3*(2*s12^8*s23*(47*s13 + 265*s23) + 20*s13^6*s23^2*(
                13*s13^2 + 14*s13*s23 + s23^2) + 4*s12*s13^5*s23*(9*s13^3 + 
                462*s13^2*s23 + 808*s13*s23^2 + 415*s23^3) + 
              s12^7*(-3384*s13^3 + 1028*s13^2*s23 + 2092*s13*s23^2 + 
                670*s23^3) + 2*s12^2*s13^4*s23*(99*s13^3 + 4589*s13^2*s23 + 
                5978*s13*s23^2 + 1556*s23^3) + s12^3*s13^3*s23*(956*s13^3 + 
                19677*s13^2*s23 + 20565*s13*s23^2 + 1560*s23^3) + 
              s12^6*(-6624*s13^4 + 1010*s13^3*s23 + 10125*s13^2*s23^2 + 
                2660*s13*s23^3 + 140*s23^4) + s12^4*s13^2*(144*s13^4 - 
                1894*s13^3*s23 + 26379*s13^2*s23^2 + 19246*s13*s23^3 + 
                820*s23^4) + s12^5*s13*(-3096*s13^4 - 2612*s13^3*s23 + 
                23575*s13^2*s23^2 + 9315*s13*s23^3 + 1052*s23^4)) + 
            p2q^3*p3q*(4*s12^8*s23*(9*s13 + 65*s23) + 10*s13^6*s23^2*(
                53*s13^2 + 67*s13*s23 + 14*s23^2) + 2*s12^7*s23*(99*s13^2 + 
                924*s13*s23 + 140*s23^2) + 2*s12*s13^5*s23*(47*s13^3 + 
                1046*s13^2*s23 + 1330*s13*s23^2 + 526*s23^3) + 
              s12^2*s13^4*s23*(1028*s13^3 + 10125*s13^2*s23 + 9315*s13*
                 s23^2 + 820*s23^3) + 2*s12^6*(72*s13^4 + 478*s13^3*s23 + 
                4589*s13^2*s23^2 + 1616*s13*s23^3 + 10*s23^4) + 
              s12^3*s13^3*(-3384*s13^4 + 1010*s13^3*s23 + 23575*s13^2*s23^2 + 
                19246*s13*s23^3 + 1560*s23^4) + s12^5*s13*(-3096*s13^4 - 
                1894*s13^3*s23 + 19677*s13^2*s23^2 + 11956*s13*s23^3 + 
                1660*s23^4) + s12^4*s13^2*(-6624*s13^4 - 2612*s13^3*s23 + 
                26379*s13^2*s23^2 + 20565*s13*s23^3 + 3112*s23^4)) + 
            p2q^2*p3q^2*(10*s12^8*s23*(11*s13 + 79*s23) + 10*s13^6*s23^2*(
                79*s13^2 + 89*s13*s23 + 10*s23^2) + s12^7*(-144*s13^3 + 
                802*s13^2*s23 + 3546*s13*s23^2 + 890*s23^3) + 
              2*s12*s13^5*s23*(55*s13^3 + 1773*s13^2*s23 + 2557*s13*s23^2 + 
                1184*s23^3) + s12^2*s13^4*s23*(802*s13^3 + 15865*s13^2*s23 + 
                18125*s13*s23^2 + 3790*s23^3) + s12^6*(6480*s13^4 + 
                6958*s13^3*s23 + 15865*s13^2*s23^2 + 5114*s13*s23^3 + 
                100*s23^4) + s12^5*s13*(13248*s13^4 + 12450*s13^3*s23 + 
                36566*s13^2*s23^2 + 18125*s13*s23^3 + 2368*s23^4) + 
              s12^3*s13^3*(-144*s13^4 + 6958*s13^3*s23 + 36566*s13^2*s23^2 + 
                33771*s13*s23^3 + 3404*s23^4) + s12^4*s13^2*(6480*s13^4 + 
                12450*s13^3*s23 + 45474*s13^2*s23^2 + 33771*s13*s23^3 + 
                3790*s23^4)))))/(54*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*
         s12^3*s13^3*(s12 + s13)^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       (4*p1q^4*s23^3*(s12 + s13 + s23)*(p3q^2*(120*s13^5*s23^2 + 
             6*s12*s13^4*s23*(27*s13 + 20*s23) + 2*s12^2*s13^3*
              (311*s13^2 - s13*s23 - 40*s23^2) + s12^4*s13*(498*s13^2 - 20*
                s13*s23 - 15*s23^2) + 2*s12^3*s13^2*(591*s13^2 - 92*s13*s23 + 
               5*s23^2) - s12^5*(62*s13^2 + 15*s23^2)) + 
           p2q^2*(-15*s12*s13^4*s23^2 - 15*s13^5*s23^2 + 2*s12^3*s13^2*
              (249*s13^2 - 92*s13*s23 - 40*s23^2) - 2*s12^2*s13^3*
              (31*s13^2 + 10*s13*s23 - 5*s23^2) + 2*s12^4*s13*
              (591*s13^2 - s13*s23 + 60*s23^2) + 2*s12^5*(311*s13^2 + 81*s13*
                s23 + 60*s23^2)) + p2q*p3q*(s12 + s13)*
            (8*s12^3*s13^2*(140*s13 - 23*s23) + 162*s12*s13^4*s23 + 
             105*s13^4*s23^2 + 2*s12^2*s13^2*(280*s13^2 - 92*s13*s23 - 35*
                s23^2) + s12^4*(560*s13^2 + 162*s13*s23 + 105*s23^2))) - 
         2*p1q^3*s23^2*(s12 + s13 + s23)*(p3q^3*(240*s13^6*s23^2 - 
             2*s12^6*(143*s13^2 + 10*s13*s23 + 40*s23^2) + 2*s12*s13^4*s23*
              (162*s13^2 + 443*s13*s23 + 163*s23^2) + 2*s12^4*s13*
              (2967*s13^3 - 1362*s13^2*s23 - 163*s13*s23^2 + 30*s23^3) + 
             s12^5*(1916*s13^3 - 299*s13^2*s23 - 190*s13*s23^2 + 40*s23^3) + 
             s12^3*s13^2*(4976*s13^3 - 3695*s13^2*s23 - 64*s13*s23^2 + 256*
                s23^3) + 2*s12^2*s13^3*(622*s13^3 - 463*s13^2*s23 + 489*s13*
                s23^2 + 326*s23^3)) + p2q^3*(40*s13^5*s23^2*(-2*s13 + s23) - 
             10*s12*s13^4*s23*(2*s13^2 + 19*s13*s23 - 6*s23^2) + 
             4*s12^6*(311*s13^2 + 81*s13*s23 + 60*s23^2) + 
             2*s12^5*s13*(2488*s13^2 - 463*s13*s23 + 443*s23^2) - 
             s12^2*s13^3*(286*s13^3 + 299*s13^2*s23 + 326*s13*s23^2 - 256*
                s23^3) + 4*s12^3*s13^2*(479*s13^3 - 681*s13^2*s23 - 16*s13*
                s23^2 + 163*s23^3) + s12^4*s13*(5934*s13^3 - 3695*s13^2*s23 + 
               978*s13*s23^2 + 326*s23^3)) + p2q^2*p3q*
            (10*s13^5*s23^2*(89*s13 + 8*s23) + 2*s12*s13^4*s23*
              (466*s13^2 + 451*s13*s23 + 223*s23^2) + 
             2*s12^6*(1866*s13^2 + 638*s13*s23 + 605*s23^2) + 
             s12^5*(7044*s13^3 - 3933*s13^2*s23 + 1978*s13*s23^2 + 40*
                s23^3) + 2*s12^4*s13*(2547*s13^3 - 6902*s13^2*s23 + 356*s13*
                s23^2 + 356*s23^3) + 2*s12^2*s13^3*(1101*s13^3 - 1653*s13^2*
                s23 - 296*s13*s23^2 + 582*s23^3) + s12^3*s13^2*
              (3984*s13^3 - 12833*s13^2*s23 + 240*s13*s23^2 + 1560*s23^3)) + 
           p2q*p3q^2*(10*s13^5*s23^2*(121*s13 + 4*s23) + 2*s12*s13^4*s23*
              (638*s13^2 + 989*s13*s23 + 356*s23^2) + 
             s12^6*(2202*s13^2 + 932*s13*s23 + 890*s23^2) + 
             s12^5*(3984*s13^3 - 3306*s13^2*s23 + 902*s13*s23^2 + 80*s23^3) + 
             4*s12^3*s13^2*(1761*s13^3 - 3451*s13^2*s23 + 60*s13*s23^2 + 291*
                s23^3) + s12^4*s13*(5094*s13^3 - 12833*s13^2*s23 - 592*s13*
                s23^2 + 446*s23^3) + s12^2*s13^3*(3732*s13^3 - 3933*s13^2*
                s23 + 712*s13*s23^2 + 1560*s23^3))) + (p2q + p3q)^2*
          (s12 + s13)*(-2*p2q^2*p3q^2*s12*s13*(174*s12^7*s23 + 
             2*s13^5*s23*(87*s13^2 - 86*s13*s23 - 173*s23^2) + 
             2*s12^6*(81*s13^2 - 1431*s13*s23 - 86*s23^2) - 
             2*s12*s13^4*s23*(1431*s13^2 + 1895*s13*s23 + 444*s23^2) + 
             s12^3*s13^2*(6912*s13^3 + 8661*s13^2*s23 - 7130*s13*s23^2 - 1214*
                s23^3) + s12^2*s13^3*(162*s13^3 - 753*s13^2*s23 - 6823*s13*
                s23^2 - 1214*s23^3) + s12^4*s13*(13500*s13^3 + 8661*s13^2*
                s23 - 6823*s13*s23^2 - 888*s23^3) + s12^5*(6912*s13^3 - 753*
                s13^2*s23 - 3790*s13*s23^2 - 346*s23^3)) + 
           2*p3q^4*s12^3*(s12 + s13)*(10*s12^5*s23 + 2*s12^4*(81*s13^2 + 15*
                s13*s23 + 25*s23^2) + s13^3*s23*(1079*s13^2 + 1145*s13*s23 + 
               66*s23^2) + s12*s13^2*s23*(2319*s13^2 + 1675*s13*s23 + 369*
                s23^2) + s12^3*(324*s13^3 + 353*s13^2*s23 + 160*s13*s23^2 + 
               40*s23^3) + s12^2*s13*(162*s13^3 + 1573*s13^2*s23 + 640*s13*
                s23^2 + 100*s23^3)) + 2*p2q^4*s13^3*(s12 + s13)*
            (1079*s12^5*s23 + 10*s13^3*s23*(s13^2 + 5*s13*s23 + 4*s23^2) + 
             10*s12*s13^2*s23*(3*s13^2 + 16*s13*s23 + 10*s23^2) + 
             s12^4*(162*s13^2 + 2319*s13*s23 + 1145*s23^2) + 
             s12^3*(324*s13^3 + 1573*s13^2*s23 + 1675*s13*s23^2 + 66*s23^3) + 
             s12^2*s13*(162*s13^3 + 353*s13^2*s23 + 640*s13*s23^2 + 369*
                s23^3)) + p2q^3*p3q*s13^2*(1734*s12^7*s23 + 
             80*s13^5*s23*(7*s13^2 + 8*s13*s23 + s23^2) + 4*s12*s13^4*s23*
              (266*s13^2 + 389*s13*s23 + 243*s23^2) + 
             s12^6*(-324*s13^2 + 2092*s13*s23 + 722*s23^2) + 
             s12^5*(5616*s13^3 + 10507*s13^2*s23 + 6994*s13*s23^2 - 532*
                s23^3) + s12^4*s13*(12528*s13^3 + 24029*s13^2*s23 + 18557*s13*
                s23^2 + 326*s23^3) + s12^3*s13^2*(6912*s13^3 + 20787*s13^2*
                s23 + 21024*s13*s23^2 + 3266*s23^3) + s12^2*s13^3*
              (324*s13^3 + 7411*s13^2*s23 + 10375*s13*s23^2 + 3300*s23^3)) + 
           p2q*p3q^3*s12^2*(560*s12^7*s23 + 2*s13^5*s23*(867*s13^2 + 361*s13*
                s23 - 266*s23^2) + 4*s12^6*(81*s13^2 + 266*s13*s23 + 160*
                s23^2) + 2*s12*s13^4*s23*(1046*s13^2 + 3497*s13*s23 + 163*
                s23^2) + s12^5*(6912*s13^3 + 7411*s13^2*s23 + 1556*s13*
                s23^2 + 80*s23^3) + s12^4*s13*(12528*s13^3 + 20787*s13^2*
                s23 + 10375*s13*s23^2 + 972*s23^3) + s12^2*s13^3*
              (-324*s13^3 + 10507*s13^2*s23 + 18557*s13*s23^2 + 3266*s23^3) + 
             s12^3*s13^2*(5616*s13^3 + 24029*s13^2*s23 + 21024*s13*s23^2 + 
               3300*s23^3))) + p1q^2*s23*
          (2*p2q^4*s13*(60*s13^5*s23^2*(-s13^2 + s13*s23 + 2*s23^2) + 
             2*s12^7*(666*s13^2 - 623*s13*s23 + 203*s23^2) - 
             10*s12*s13^4*s23*(4*s13^3 + 35*s13^2*s23 - 17*s13*s23^2 - 30*
                s23^3) + s12^6*(5166*s13^3 - 6213*s13^2*s23 + 1643*s13*
                s23^2 + 732*s23^3) - 2*s12^2*s13^3*(162*s13^4 + 474*s13^3*
                s23 + 821*s13^2*s23^2 - 220*s13*s23^3 - 474*s23^4) + 
             s12^5*(7182*s13^4 - 11829*s13^3*s23 - 214*s13^2*s23^2 + 4113*s13*
                s23^3 + 326*s23^4) + s12^4*s13*(3870*s13^4 - 10871*s13^3*
                s23 - 4855*s13^2*s23^2 + 6742*s13*s23^3 + 1304*s23^4) + 
             s12^3*s13^2*(198*s13^4 - 4917*s13^3*s23 - 4756*s13^2*s23^2 + 
               3691*s13*s23^3 + 1836*s23^4)) + 2*p3q^4*s12*
            (-4*s12^7*(81*s13^2 + 10*s13*s23 + 15*s23^2) + 2*s13^5*s23^2*
              (203*s13^2 + 366*s13*s23 + 163*s23^2) + 
             2*s12^6*(99*s13^3 - 474*s13^2*s23 - 175*s13*s23^2 + 30*s23^3) + 
             s12*s13^4*s23*(-1246*s13^3 + 1643*s13^2*s23 + 4113*s13*s23^2 + 
               1304*s23^3) + s12^5*(3870*s13^4 - 4917*s13^3*s23 - 1642*s13^2*
                s23^2 + 170*s13*s23^3 + 120*s23^4) + s12^4*s13*
              (7182*s13^4 - 10871*s13^3*s23 - 4756*s13^2*s23^2 + 440*s13*
                s23^3 + 300*s23^4) + s12^3*s13^2*(5166*s13^4 - 11829*s13^3*
                s23 - 4855*s13^2*s23^2 + 3691*s13*s23^3 + 948*s23^4) + 
             s12^2*s13^3*(1332*s13^4 - 6213*s13^3*s23 - 214*s13^2*s23^2 + 
               6742*s13*s23^3 + 1836*s23^4)) + p2q^3*p3q*
            (20*s13^6*s23^2*(145*s13^2 + 173*s13*s23 + 28*s23^2) + 
             8*s12^8*(351*s13^2 + 157*s13*s23 + 190*s23^2) + 
             2*s12^7*(3132*s13^3 - 4465*s13^2*s23 + 3904*s13*s23^2 + 800*
                s23^3) + 4*s12*s13^5*s23*(436*s13^3 + 2024*s13^2*s23 + 1872*
                s13*s23^2 + 869*s23^3) + s12^6*(-108*s13^4 - 47478*s13^3*
                s23 + 9220*s13^2*s23^2 + 8692*s13*s23^3 + 80*s23^4) + 
             s12^5*s13*(-14688*s13^4 - 99920*s13^3*s23 - 745*s13^2*s23^2 + 
               31494*s13*s23^3 + 3580*s23^4) + s12^2*s13^4*(1836*s13^4 - 
               10330*s13^3*s23 - 6395*s13^2*s23^2 + 16847*s13*s23^3 + 9788*
                s23^4) + s12^4*s13^2*(-16200*s13^4 - 108328*s13^3*s23 - 17677*
                s13^2*s23^2 + 52771*s13*s23^3 + 11212*s23^4) + 
             s12^3*s13^3*(-3240*s13^4 - 57774*s13^3*s23 - 24151*s13^2*s23^2 + 
               41908*s13*s23^3 + 14224*s23^4)) + p2q*p3q^3*
            (80*s13^6*s23^2*(19*s13^2 + 20*s13*s23 + s23^2) + 
             4*s12^8*(459*s13^2 + 436*s13*s23 + 725*s23^2) + 
             4*s12*s13^5*s23*(314*s13^3 + 1952*s13^2*s23 + 2173*s13*s23^2 + 
               895*s23^3) + s12^7*(-3240*s13^3 - 10330*s13^2*s23 + 8096*s13*
                s23^2 + 3460*s23^3) + s12^6*(-16200*s13^4 - 57774*s13^3*s23 - 
               6395*s13^2*s23^2 + 7488*s13*s23^3 + 560*s23^4) + 
             s12^5*s13*(-14688*s13^4 - 108328*s13^3*s23 - 24151*s13^2*s23^2 + 
               16847*s13*s23^3 + 3476*s23^4) + 2*s12^2*s13^4*
              (1404*s13^4 - 4465*s13^3*s23 + 4610*s13^2*s23^2 + 15747*s13*
                s23^3 + 5606*s23^4) + s12^4*s13^2*(-108*s13^4 - 99920*s13^3*
                s23 - 17677*s13^2*s23^2 + 41908*s13*s23^3 + 9788*s23^4) + 
             s12^3*s13^3*(6264*s13^4 - 47478*s13^3*s23 - 745*s13^2*s23^2 + 
               52771*s13*s23^3 + 14224*s23^4)) + p2q^2*p3q^2*
            (20*s13^6*s23^2*(227*s13^2 + 247*s13*s23 + 20*s23^2) + 
             4*s12^8*(1323*s13^2 + 770*s13*s23 + 1135*s23^2) + 
             4*s12^7*(1449*s13^3 - 3718*s13^2*s23 + 3948*s13*s23^2 + 1235*
                s23^3) + 4*s12*s13^5*s23*(770*s13^3 + 3948*s13^2*s23 + 3594*
                s13*s23^2 + 1451*s23^3) + s12^6*(-11052*s13^4 - 71328*s13^3*
                s23 + 2823*s13^2*s23^2 + 14376*s13*s23^3 + 400*s23^4) + 
             s12^5*s13*(-23112*s13^4 - 127856*s13^3*s23 - 9124*s13^2*s23^2 + 
               39235*s13*s23^3 + 5804*s23^4) + s12^2*s13^4*(5292*s13^4 - 
               14872*s13^3*s23 + 2823*s13^2*s23^2 + 39235*s13*s23^3 + 16496*
                s23^4) + s12^4*s13^2*(-11052*s13^4 - 127856*s13^3*s23 - 4270*
                s13^2*s23^2 + 73813*s13*s23^3 + 16496*s23^4) + 
             s12^3*s13^3*(5796*s13^4 - 71328*s13^3*s23 - 9124*s13^2*s23^2 + 
               73813*s13*s23^3 + 21104*s23^4))) + p1q*(p2q + p3q)*
          (p2q^3*p3q*s13*(4*s12^8*(691*s13 - 136*s23)*s23 - 
             20*s13^6*s23^2*(107*s13^2 + 127*s13*s23 + 20*s23^2) - 
             4*s12^7*(81*s13^3 - 26*s13^2*s23 + 2829*s13*s23^2 + 492*s23^3) - 
             4*s12*s13^5*s23*(142*s13^3 + 1525*s13^2*s23 + 1827*s13*s23^2 + 
               879*s23^3) + s12^3*s13^3*(7236*s13^4 + 18000*s13^3*s23 - 32265*
                s13^2*s23^2 - 64919*s13*s23^3 - 16144*s23^4) + 
             s12^4*s13^2*(19440*s13^4 + 13252*s13^3*s23 - 74443*s13^2*s23^2 - 
               84248*s13*s23^3 - 11998*s23^4) + 2*s12^2*s13^4*
              (162*s13^4 + 3242*s13^3*s23 - 4802*s13^2*s23^2 - 13451*s13*
                s23^3 - 5703*s23^4) + s12^5*s13*(18144*s13^4 - 4144*s13^3*
                s23 - 80339*s13^2*s23^2 - 58343*s13*s23^3 - 5568*s23^4) + 
             s12^6*(5292*s13^4 - 9108*s13^3*s23 - 43289*s13^2*s23^2 - 19568*
                s13*s23^3 - 1424*s23^4)) + 2*p2q^4*s13^2*(s12 + s13)*
            (s12^6*(1658*s13 - 1179*s23)*s23 - 120*s13^4*s23^3*(s13 + s23) + 
             s12^5*(162*s13^3 + 5239*s13^2*s23 - 3291*s13*s23^2 - 1505*
                s23^3) + 10*s12*s13^3*s23*(2*s13^3 + 7*s13^2*s23 - 37*s13*
                s23^2 - 30*s23^3) + s12^3*s13*(486*s13^4 + 2513*s13^3*s23 - 
               213*s13^2*s23^2 - 4472*s13*s23^3 - 1021*s23^4) + 
             s12^2*s13^2*(162*s13^4 + 325*s13^3*s23 + 384*s13^2*s23^2 - 1110*
                s13*s23^3 - 1001*s23^4) + s12^4*(486*s13^4 + 5789*s13^3*s23 - 
               2639*s13^2*s23^2 - 5117*s13*s23^3 - 326*s23^4)) + 
           2*p3q^4*s12^2*(s12 + s13)*(2*s12^6*s13*(81*s13 + 10*s23) - 
             s13^4*s23^2*(1179*s13^2 + 1505*s13*s23 + 326*s23^2) + 
             s12*s13^3*s23*(1658*s13^3 - 3291*s13^2*s23 - 5117*s13*s23^2 - 
               1021*s23^3) + s12^5*(486*s13^3 + 325*s13^2*s23 + 70*s13*
                s23^2 - 120*s23^3) + 13*s12^2*s13^2*s23*(403*s13^3 - 203*
                s13^2*s23 - 344*s13*s23^2 - 77*s23^3) + s12^3*s13*
              (162*s13^4 + 5789*s13^3*s23 - 213*s13^2*s23^2 - 1110*s13*
                s23^3 - 300*s23^4) + s12^4*(486*s13^4 + 2513*s13^3*s23 + 384*
                s13^2*s23^2 - 370*s13*s23^3 - 120*s23^4)) + 
           p2q*p3q^3*s12*(4*s12^8*(81*s13^2 - 142*s13*s23 - 535*s23^2) - 
             16*s13^6*s23^2*(34*s13^2 + 123*s13*s23 + 89*s23^2) + 
             s12^2*s13^4*s23*(104*s13^3 - 43289*s13^2*s23 - 58343*s13*s23^2 - 
               11998*s23^3) + 4*s12*s13^5*s23*(691*s13^3 - 2829*s13^2*s23 - 
               4892*s13*s23^2 - 1392*s23^3) + 4*s12^7*(1809*s13^3 + 1621*
                s13^2*s23 - 1525*s13*s23^2 - 635*s23^3) + s12^4*s13^2*
              (5292*s13^4 - 4144*s13^3*s23 - 74443*s13^2*s23^2 - 64919*s13*
                s23^3 - 11406*s23^4) + s12^5*s13*(18144*s13^4 + 13252*s13^3*
                s23 - 32265*s13^2*s23^2 - 26902*s13*s23^3 - 3516*s23^4) + 
             4*s12^6*(4860*s13^4 + 4500*s13^3*s23 - 2401*s13^2*s23^2 - 1827*
                s13*s23^3 - 100*s23^4) - s12^3*s13^3*(324*s13^4 + 9108*s13^3*
                s23 + 80339*s13^2*s23^2 + 84248*s13*s23^3 + 16144*s23^4)) - 
           p2q^2*p3q^2*(32*s12^9*s23*(19*s13 + 50*s23) + 160*s13^7*s23^2*
              (10*s13^2 + 11*s13*s23 + s23^2) + 2*s12^8*(162*s13^3 - 4279*
                s13^2*s23 + 2726*s13*s23^2 + 880*s23^3) + 4*s12*s13^6*s23*
              (152*s13^3 + 1363*s13^2*s23 + 1876*s13*s23^2 + 1025*s23^3) + 
             s12^2*s13^5*s23*(-8558*s13^3 + 16869*s13^2*s23 + 38691*s13*
                s23^2 + 13720*s23^3) + s12^7*(14148*s13^4 - 2416*s13^3*s23 + 
               16869*s13^2*s23^2 + 7504*s13*s23^3 + 160*s23^4) + 
             s12^6*s13*(40824*s13^4 + 53038*s13^3*s23 + 58991*s13^2*s23^2 + 
               38691*s13*s23^3 + 4100*s23^4) + 2*s12^5*s13^2*
              (20412*s13^4 + 46288*s13^3*s23 + 60932*s13^2*s23^2 + 46133*s13*
                s23^3 + 6860*s23^4) + 2*s12^4*s13^3*(7074*s13^4 + 26519*s13^3*
                s23 + 60932*s13^2*s23^2 + 60039*s13*s23^3 + 10702*s23^4) + 
             s12^3*s13^4*(324*s13^4 - 2416*s13^3*s23 + 58991*s13^2*s23^2 + 
               92266*s13*s23^3 + 21404*s23^4))))/(108*p2q*p3q*(p2q + p3q)^2*
         (p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)^2*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (2*p1q^4*s23^3*(s12 + s13 + s23)*(p3q^2*(311*s12^2*s13^3 + 
             163*s12*s13^3*s23 + 80*s13^3*s23^2 + s12^3*(-31*s13^2 + 10*s13*
                s23 - 10*s23^2)) + p2q*p3q*(280*s12^2*s13^3 + 
             173*s12*s13^3*s23 + 70*s13^3*s23^2 + s12^3*(280*s13^2 + 173*s13*
                s23 + 70*s23^2)) + p2q^2*(-31*s12^2*s13^3 + 
             10*s12*s13^3*s23 - 10*s13^3*s23^2 + s12^3*(311*s13^2 + 163*s13*
                s23 + 80*s23^2))) - 2*p1q^3*s23^2*(s12 + s13 + s23)*
          (p2q^3*(20*s12*s13^3*(s13 - 2*s23)*s23 + 10*s13^3*s23^2*
              (-3*s13 + s23) + s12^2*s13^3*(-31*s13 + 72*s23) + 
             s12^4*(311*s13^2 + 163*s13*s23 + 80*s23^2) + 
             s12^3*s13*(622*s13^2 + 15*s13*s23 + 160*s23^2)) + 
           p2q*p3q^2*(3*s12^2*s13^3*(311*s13 - 182*s23) + 10*s13^3*s23^2*
              (40*s13 + s23) + s12*s13^3*s23*(652*s13 + 37*s23) + 
             s12^4*(591*s13^2 + 509*s13*s23 + 290*s23^2) - 
             s12^3*(186*s13^3 + 489*s13^2*s23 + 163*s13*s23^2 - 20*s23^3)) + 
           p3q^3*(80*s13^4*s23^2 + s12^2*s13^3*(311*s13 + 15*s23) + 
             s12*s13^3*s23*(163*s13 + 160*s23) + s12^4*(-31*s13^2 + 20*s13*
                s23 - 30*s23^2) + 2*s12^3*(311*s13^3 + 36*s13^2*s23 - 20*s13*
                s23^2 + 5*s23^3)) + p2q^2*p3q*(3*s12^2*s13^3*(197*s13 - 163*
                s23) + s12*s13^3*(509*s13 - 163*s23)*s23 + 10*s13^3*s23^2*
              (29*s13 + 2*s23) + s12^4*(933*s13^2 + 652*s13*s23 + 400*
                s23^2) + s12^3*(-186*s13^3 - 546*s13^2*s23 + 37*s13*s23^2 + 
               10*s23^3))) + (p2q + p3q)^2*(p2q^4*s13^3*s23*
            (333*s12^5 + 20*s13^3*s23*(s13 + s23) + 20*s12*s13^2*s23*
              (4*s13 + 3*s23) + s12^2*s13*s23*(131*s13 + 71*s23) + 
             s12^4*(666*s13 + 355*s23) + s12^3*(333*s13^2 + 426*s13*s23 + 22*
                s23^2)) + p3q^4*s12^3*s23*(20*s12^4*s23 + 20*s12^3*s23*
              (4*s13 + s23) + s13^3*(333*s13^2 + 355*s13*s23 + 22*s23^2) + 
             s12^2*s13*(333*s13^2 + 131*s13*s23 + 60*s23^2) + 
             s12*s13^2*(666*s13^2 + 426*s13*s23 + 71*s23^2)) - 
           2*p2q^2*p3q^2*s12*s13*(180*s12^6*s23 - 9*s12^5*(33*s13 - 20*s23)*
              s23 + 180*s13^5*s23*(s13 + s23) + s12^4*s13*(1368*s13^2 + 576*
                s13*s23 - 427*s23^2) + 3*s12^2*s13^2*s23*(192*s13^2 + 125*s13*
                s23 - 20*s23^2) - s12*s13^3*s23*(297*s13^2 + 427*s13*s23 + 30*
                s23^2) + 3*s12^3*s13*(456*s13^3 + 678*s13^2*s23 + 125*s13*
                s23^2 - 10*s23^3)) + p2q*p3q^3*s12^2*(180*s12^6*s23 + 
             2*s12^5*s23*(27*s13 + 100*s23) + s13^4*s23*(531*s13^2 + 471*s13*
                s23 + 20*s23^2) + s12*s13^3*s23*(54*s13^2 + 222*s13*s23 + 91*
                s23^2) + s12^2*s13^2*s23*(927*s13^2 + 763*s13*s23 + 120*
                s23^2) + 2*s12^4*(684*s13^3 + 288*s13^2*s23 - 23*s13*s23^2 + 
               10*s23^3) + 2*s12^3*s13*(684*s13^3 + 1017*s13^2*s23 + 401*s13*
                s23^2 + 30*s23^3)) + p2q^3*p3q*s13^2*(531*s12^6*s23 + 
             3*s12^5*s23*(18*s13 + 157*s23) + 20*s13^4*s23*(9*s13^2 + 10*s13*
                s23 + s23^2) + 2*s12*s13^3*s23*(27*s13^2 - 23*s13*s23 + 30*
                s23^2) + 2*s12^2*s13^2*s23*(288*s13^2 + 401*s13*s23 + 60*
                s23^2) + s12^4*(1368*s13^3 + 927*s13^2*s23 + 222*s13*s23^2 + 
               20*s23^3) + s12^3*s13*(1368*s13^3 + 2034*s13^2*s23 + 763*s13*
                s23^2 + 91*s23^3))) + p1q*(p2q + p3q)*
          (p2q^4*s13^2*s23*(s12^5*(666*s13 - 311*s23) + s12^3*s13*
              (666*s13^2 + 241*s13*s23 - 649*s23^2) + 
             s12^4*(1332*s13^2 - 223*s13*s23 - 311*s23^2) + 
             s12^2*s13*s23*(233*s13^2 - 38*s13*s23 - 71*s23^2) + 
             20*s12*s13^2*s23*(5*s13^2 - 5*s13*s23 - 6*s23^2) + 
             20*s13^3*s23*(s13^2 - 2*s13*s23 - 3*s23^2)) + 
           p3q^4*s12^2*s23*(20*s12^5*s23 + 20*s12^4*(5*s13 - 2*s23)*s23 - 
             311*s13^4*s23*(s13 + s23) + s12^2*s13*(1332*s13^3 + 241*s13^2*
                s23 - 38*s13*s23^2 - 120*s23^3) + s12*s13^2*(666*s13^3 - 223*
                s13^2*s23 - 649*s13*s23^2 - 71*s23^3) + 
             s12^3*(666*s13^3 + 233*s13^2*s23 - 100*s13*s23^2 - 60*s23^3)) - 
           p2q*p3q^3*s12*(34*s12^6*s23*(9*s13 + 20*s23) - 40*s13^4*s23^2*
              (4*s13^2 + 3*s13*s23 - s23^2) - 6*s12^5*(228*s13^3 + 183*s13^2*
                s23 - 78*s13*s23^2 - 130*s23^3) + 4*s12*s13^3*s23*
              (-252*s13^3 + 39*s13^2*s23 + 316*s13*s23^2 + 15*s23^3) + 
             s12^2*s13^2*s23*(396*s13^3 + 2620*s13^2*s23 + 1479*s13*s23^2 + 
               191*s23^3) + s12^3*s13*s23*(630*s13^3 + 3060*s13^2*s23 + 1333*
                s13*s23^2 + 240*s23^3) - 2*s12^4*(684*s13^4 + 333*s13^3*s23 + 
               430*s13^2*s23^2 + 89*s13*s23^3 - 50*s23^4)) - 
           p2q^3*p3q*s13*(-16*s12^6*s23*(63*s13 + 10*s23) + 
             12*s12^5*s23*(33*s13^2 + 13*s13*s23 - 10*s23^2) + 
             20*s13^4*s23^2*(34*s13^2 + 39*s13*s23 + 5*s23^2) + 
             2*s12*s13^3*s23*(153*s13^3 + 234*s13^2*s23 - 89*s13*s23^2 + 120*
                s23^3) + s12^2*s13^2*s23*(-1098*s13^3 - 860*s13^2*s23 + 1333*
                s13*s23^2 + 191*s23^3) + 3*s12^3*s13*(-456*s13^4 - 222*s13^3*
                s23 + 1020*s13^2*s23^2 + 493*s13*s23^3 + 20*s23^4) + 
             s12^4*(-1368*s13^4 + 630*s13^3*s23 + 2620*s13^2*s23^2 + 1264*s13*
                s23^3 + 40*s23^4)) - 2*p2q^2*p3q^2*
            (s12^7*s23*(153*s13 + 260*s23) + 20*s13^5*s23^2*(13*s13^2 + 14*
                s13*s23 + s23^2) + s12^6*s23*(-1053*s13^2 + 87*s13*s23 + 280*
                s23^2) + s12*s13^4*s23*(153*s13^3 + 87*s13^2*s23 - 226*s13*
                s23^2 + 80*s23^3) + s12^3*s13^2*s23*(1251*s13^3 + 2471*s13^2*
                s23 + 524*s13*s23^2 + 90*s23^3) + s12^2*s13^3*s23*
              (-1053*s13^3 - 526*s13^2*s23 + 1016*s13*s23^2 + 90*s23^3) + 
             s12^5*(1368*s13^4 + 1251*s13^3*s23 - 526*s13^2*s23^2 - 226*s13*
                s23^3 + 20*s23^4) + s12^4*s13*(1368*s13^4 + 3402*s13^3*s23 + 
               2471*s13^2*s23^2 + 1016*s13*s23^3 + 80*s23^4))) + 
         p1q^2*s23*(p2q^4*s13*(s12^2*s13^2*s23*(164*s13^2 - 169*s13*s23 - 93*
                s23^2) + 60*s13^3*s23^2*(-s13^2 + s23^2) + 
             2*s12^5*(333*s13^2 - 148*s13*s23 + 80*s23^2) + 20*s12*s13^2*s23*
              (s13^3 - 10*s13^2*s23 - 2*s13*s23^2 + 3*s23^3) + 
             s12^4*(1332*s13^3 - 504*s13^2*s23 + 335*s13*s23^2 + 160*s23^3) + 
             s12^3*s13*(666*s13^3 - 64*s13^2*s23 - 556*s13*s23^2 + 471*
                s23^3)) + p2q*p3q^3*(20*s13^4*s23^2*(25*s13^2 + 26*s13*s23 + 
               s23^2) + s12^6*(702*s13^2 + 978*s13*s23 + 920*s23^2) - 
             2*s12^5*(684*s13^3 + 271*s13^2*s23 - 550*s13*s23^2 - 530*
                s23^3) + 2*s12*s13^3*s23*(316*s13^3 + 703*s13^2*s23 + 177*s13*
                s23^2 + 30*s23^3) + s12^3*s13*s23*(-4006*s13^3 - 540*s13^2*
                s23 + 387*s13*s23^2 + 180*s23^3) + s12^2*s13^3*
              (702*s13^3 - 1084*s13^2*s23 - 1257*s13*s23^2 + 867*s23^3) - 
             s12^4*(1332*s13^4 + 5178*s13^3*s23 + 2733*s13^2*s23^2 + 478*s13*
                s23^3 - 140*s23^4)) + p2q^3*p3q*(20*s13^4*s23^2*
              (46*s13^2 + 53*s13*s23 + 7*s23^2) + 2*s12^5*s23*
              (-542*s13^2 + 703*s13*s23 + 260*s23^2) + 
             s12^6*(702*s13^2 + 632*s13*s23 + 500*s23^2) + 2*s12*s13^3*s23*
              (489*s13^3 + 550*s13^2*s23 - 239*s13*s23^2 + 90*s23^3) + 
             s12^2*s13^3*(702*s13^3 - 542*s13^2*s23 - 2733*s13*s23^2 + 387*
                s23^3) - 3*s12^3*s13*(456*s13^4 + 1726*s13^3*s23 + 180*s13^2*
                s23^2 - 289*s13*s23^3 - 20*s23^4) + s12^4*(-1332*s13^4 - 4006*
                s13^3*s23 - 1257*s13^2*s23^2 + 354*s13*s23^3 + 20*s23^4)) + 
           p3q^4*s12*(20*s12^5*(s13 - 3*s23)*s23 + 160*s13^4*s23^2*
              (s13 + s23) + 2*s12^4*s13*(333*s13^2 + 82*s13*s23 - 100*
                s23^2) + s12*s13^3*s23*(-296*s13^2 + 335*s13*s23 + 471*
                s23^2) + s12^2*s13*(666*s13^4 - 504*s13^3*s23 - 556*s13^2*
                s23^2 - 93*s13*s23^3 + 60*s23^4) + s12^3*(1332*s13^4 - 64*
                s13^3*s23 - 169*s13^2*s23^2 - 40*s13*s23^3 + 60*s23^4)) + 
           2*p2q^2*p3q^2*(10*s13^4*s23^2*(74*s13^2 + 79*s13*s23 + 5*s23^2) + 
             s12^6*(702*s13^2 + 795*s13*s23 + 740*s23^2) + s12*s13^3*s23*
              (795*s13^3 + 1273*s13^2*s23 - 122*s13*s23^2 + 90*s23^3) + 
             s12^2*s13^3*(702*s13^3 - 747*s13^2*s23 - 2078*s13*s23^2 + 438*
                s23^3) + s12^5*(-702*s13^3 - 747*s13^2*s23 + 1273*s13*s23^2 + 
               790*s23^3) - 2*s12^4*(684*s13^4 + 1506*s13^3*s23 + 1039*s13^2*
                s23^2 + 61*s13*s23^3 - 25*s23^4) + s12^3*(-702*s13^5 - 3012*
                s13^4*s23 + 664*s13^3*s23^2 + 438*s13^2*s23^3 + 90*s13*
                s23^4))))/(54*ep*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*
         s12^3*s13^3*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) - (9*(-2*p1q^2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*s23*
           (s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23)) + 
          (p2q + p3q)*(2*p3q^4*s12^2*(2*s12 + s23)*(s12 + s13 + s23) + 
            2*p2q^4*s13^2*(s12 + s13 + s23)*(2*s13 + s23) + 
            2*p2q^2*p3q^2*s12*s13*(-2*s12^2 + 20*s12*s13 - 2*s13^2 + 
              7*s12*s23 + 7*s13*s23 + 3*s23^2) - p2q^3*p3q*s13*
             (s12^2*(4*s13 - 6*s23) + s12*s13*(24*s13 + 23*s23) + 
              s13*(-4*s13^2 - 3*s13*s23 + s23^2)) + p2q*p3q^3*s12*
             (4*s12^3 + 6*s13^2*s23 + 3*s12^2*(-8*s13 + s23) - 
              s12*(4*s13^2 + 23*s13*s23 + s23^2))) + 
          p1q*(2*p3q^4*s12*(s12 + s13 + s23)*(2*s12^2 - s12*s23 - s23^2) + 
            2*p2q^4*s13*(s12 + s13 + s23)*(2*s13^2 - s13*s23 - s23^2) - 
            p2q^3*p3q*s13*(-4*s13^3 + 4*s12^2*(s13 - 2*s23) + 4*s13^2*s23 + 
              9*s13*s23^2 + s23^3 + s12*(24*s13^2 + 28*s13*s23 - s23^2)) + 
            p2q*p3q^3*s12*(4*s12^3 - 4*s12^2*(6*s13 + s23) + s23*(8*s13^2 + 
                s13*s23 - s23^2) - s12*(4*s13^2 + 28*s13*s23 + 9*s23^2)) + 
            p2q^2*p3q^2*(-2*s12^3*(2*s13 + 3*s23) + 5*s12^2*(8*s13^2 + 
                6*s13*s23 - s23^2) + s13*s23*(-6*s13^2 - 5*s13*s23 + s23^2) + 
              s12*(-4*s13^3 + 30*s13^2*s23 + 30*s13*s23^2 + s23^3))))*
         den[-3 + 2*ep])/(4*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*
         s23^2) + nl*((p1q*(p3q^2*s12*(8*s12^2*s13 + s12*(8*s13 - s23)*s23 + 
               (s13 - s23)*s23^2) - p2q*p3q*(s13*s23^2*(s13 + s23) + s12^2*
                (4*s13 + s23)^2 + s12*s23*(8*s13^2 + 6*s13*s23 + s23^2)) + 
             p2q^2*s13*(-(s23^2*(s13 + s23)) + s12*(8*s13^2 + 8*s13*s23 + 
                 s23^2))) + (p2q + p3q)*(-2*p2q*p3q*s12*s13*((s13 - s23)*
                s23 + s12*(8*s13 + s23)) + p3q^2*s12*(2*s13*s23^2 + s12^2*
                (8*s13 + s23) + s12*s23*(9*s13 + s23)) + 
             p2q^2*s13*(s13*s23*(s13 + s23) + s12*(8*s13^2 + 9*s13*s23 + 
                 2*s23^2))))/(2*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*
           s23^2) + ((-(p1q^2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*s23*
              (s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23))) + 
            (p2q + p3q)*(p3q^4*s12^2*(2*s12 + s23)*(s12 + s13 + s23) + 
              p2q^4*s13^2*(s12 + s13 + s23)*(2*s13 + s23) - 2*p2q^2*p3q^2*s12*
               s13*(s12^2 + s13^2 - 3*s13*s23 - 2*s23^2 - 3*s12*(2*s13 + 
                  s23)) + p2q*p3q^3*s12*(2*s12^3 + s13*s23*(3*s13 + s23) + 
                s12^2*(-8*s13 + 2*s23) - s12*s13*(2*s13 + 7*s23)) + 
              p2q^3*p3q*s13*(2*s13^2*(s13 + s23) + s12^2*(-2*s13 + 3*s23) + 
                s12*(-8*s13^2 - 7*s13*s23 + s23^2))) + 
            p1q*(p3q^4*s12*(s12 + s13 + s23)*(2*s12^2 - s12*s23 - s23^2) + 
              p2q^4*s13*(s12 + s13 + s23)*(2*s13^2 - s13*s23 - s23^2) - 
              p2q^3*p3q*s13*(-2*s13^3 + 2*s12^2*(s13 - 2*s23) + 2*s13^2*s23 + 
                5*s13*s23^2 + s23^3 + s12*(8*s13^2 + 10*s13*s23 - s23^2)) - 
              p2q^2*p3q^2*(3*s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 3*s23) + 
                s12*s13*(2*s13^2 - 11*s13*s23 - 12*s23^2) + s12^2*
                 (-12*s13^2 - 11*s13*s23 + 3*s23^2)) + p2q*p3q^3*s12*(
                2*s12^3 - 2*s12^2*(4*s13 + s23) + s23*(4*s13^2 + s13*s23 - 
                  s23^2) - s12*(2*s13^2 + 10*s13*s23 + 5*s23^2))))*
           den[-1 + ep])/(p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*
           s23^2) - (3*(-2*p1q^2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*s23*
             (s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23)) + 
            (p2q + p3q)*(2*p3q^4*s12^2*(2*s12 + s23)*(s12 + s13 + s23) + 
              2*p2q^4*s13^2*(s12 + s13 + s23)*(2*s13 + s23) + 
              2*p2q^2*p3q^2*s12*s13*(-2*s12^2 + 20*s12*s13 - 2*s13^2 + 
                7*s12*s23 + 7*s13*s23 + 3*s23^2) - p2q^3*p3q*s13*(
                s12^2*(4*s13 - 6*s23) + s12*s13*(24*s13 + 23*s23) + 
                s13*(-4*s13^2 - 3*s13*s23 + s23^2)) + p2q*p3q^3*s12*(
                4*s12^3 + 6*s13^2*s23 + 3*s12^2*(-8*s13 + s23) - 
                s12*(4*s13^2 + 23*s13*s23 + s23^2))) + 
            p1q*(2*p3q^4*s12*(s12 + s13 + s23)*(2*s12^2 - s12*s23 - s23^2) + 
              2*p2q^4*s13*(s12 + s13 + s23)*(2*s13^2 - s13*s23 - s23^2) - 
              p2q^3*p3q*s13*(-4*s13^3 + 4*s12^2*(s13 - 2*s23) + 4*s13^2*s23 + 
                9*s13*s23^2 + s23^3 + s12*(24*s13^2 + 28*s13*s23 - s23^2)) + 
              p2q*p3q^3*s12*(4*s12^3 - 4*s12^2*(6*s13 + s23) + 
                s23*(8*s13^2 + s13*s23 - s23^2) - s12*(4*s13^2 + 28*s13*s23 + 
                  9*s23^2)) + p2q^2*p3q^2*(-2*s12^3*(2*s13 + 3*s23) + 
                5*s12^2*(8*s13^2 + 6*s13*s23 - s23^2) + s13*s23*(-6*s13^2 - 
                  5*s13*s23 + s23^2) + s12*(-4*s13^3 + 30*s13^2*s23 + 
                  30*s13*s23^2 + s23^3))))*den[-3 + 2*ep])/
          (2*p2q*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s13*s23^2)))*
      Int[DS[k]*DS[k + p2 + p3]] + 
     ((ep^3*(p3q*(120*s13^2*s23^2*(s13 + s23) - 2*s12^3*s23*
             (45*s13 + 53*s23) - s12^4*(99*s13 + 109*s23) + 
            s12*s13*s23*(227*s13^2 + 348*s13*s23 + 105*s23^2) + 
            s12^2*(99*s13^3 + 228*s13^2*s23 + 122*s13*s23^2 + 3*s23^3)) + 
          p1q*(s13*s23^2*(109*s13^2 + 106*s13*s23 - 3*s23^2) + 
            s12^3*(180*s13^2 + 297*s13*s23 + 109*s23^2) + 
            s12*s23*(297*s13^3 + 484*s13^2*s23 + 176*s13*s23^2 - 3*s23^3) + 
            2*s12^2*(90*s13^3 + 279*s13^2*s23 + 242*s13*s23^2 + 53*s23^3)) + 
          p2q*(s13^2*s23*(-109*s13^2 - 106*s13*s23 + 3*s23^2) + 
            12*s12^2*s23*(19*s13^2 + 29*s13*s23 + 10*s23^2) + 
            s12^3*(99*s13^2 + 227*s13*s23 + 120*s23^2) + 
            s12*s13*(-99*s13^3 - 90*s13^2*s23 + 122*s13*s23^2 + 105*s23^3))))/
        (27*(p1q + p2q + p3q)*s12*s13*(s12 + s13)*(s12 + s23)*(s13 + s23)) + 
       (p1q^6*s23^3*(s12 + s13 + s23)*(p3q*(243*s12*s13^3*s23^2*(s13 + s23) + 
             80*s13^3*s23^3*(s13 + s23) + s12^2*s13^2*s23*(329*s13^2 + 333*
                s13*s23 + 4*s23^2) - 2*s12^4*(7*s13^3 + 11*s13^2*s23 + 5*
                s23^3) + 2*s12^3*(11*s13^4 + 6*s13^3*s23 - 9*s13^2*s23^2 - 5*
                s23^4)) + p2q*(-10*s13^3*s23^3*(s13 + s23) - 
             2*s12^2*s13^2*s23*(11*s13^2 + 9*s13*s23 - 2*s23^2) + 
             s12^4*(22*s13^3 + 329*s13^2*s23 + 243*s13*s23^2 + 80*s23^3) + 
             s12^3*(-14*s13^4 + 12*s13^3*s23 + 333*s13^2*s23^2 + 243*s13*
                s23^3 + 80*s23^4))) - (p2q + p3q)*
          (p2q^6*s13^4*s23*(10*s13^3*s23*(s13 + s23)^2 + 
             9*s12^5*(3*s13 + 11*s23) + 10*s12*s13^2*s23*(4*s13^2 + 7*s13*
                s23 + 3*s23^2) + 18*s12^4*(4*s13^2 + 15*s13*s23 + 7*s23^2) + 
             s12^3*(63*s13^3 + 263*s13^2*s23 + 227*s13*s23^2 + 27*s23^3) + 
             2*s12^2*s13*(9*s13^3 + 61*s13^2*s23 + 80*s13*s23^2 + 28*
                s23^3)) + p3q^6*s12^4*s23*(10*s12^5*s23 + 9*s13^3*s23*
              (11*s13^2 + 14*s13*s23 + 3*s23^2) + 2*s12^4*(9*s13^2 + 20*s13*
                s23 + 10*s23^2) + s12^3*(63*s13^3 + 122*s13^2*s23 + 70*s13*
                s23^2 + 10*s23^3) + s12^2*s13*(72*s13^3 + 263*s13^2*s23 + 160*
                s13*s23^2 + 30*s23^3) + s12*s13^2*(27*s13^3 + 270*s13^2*s23 + 
               227*s13*s23^2 + 56*s23^3)) + p2q*p3q^5*s12^3*
            (90*s12^7*s23 + s12^6*s23*(27*s13 + 190*s23) + 2*s13^3*s23^2*
              (63*s13^3 + 22*s13^2*s23 - 103*s13*s23^2 - 18*s23^3) + 
             s12^5*(72*s13^3 + 207*s13^2*s23 - 16*s13*s23^2 + 100*s23^3) + 
             s12*s13^2*s23*(162*s13^4 + 206*s13^3*s23 - 376*s13^2*s23^2 - 271*
                s13*s23^3 - 65*s23^4) + s12^2*s13*s23*(72*s13^4 + 44*s13^3*
                s23 - 11*s13^2*s23^2 - 96*s13*s23^3 - 30*s23^4) + 
             s12^4*(72*s13^4 + 549*s13^3*s23 + 537*s13^2*s23^2 - 63*s13*
                s23^3 - 10*s23^4) + s12^3*s23*(261*s13^4 + 599*s13^3*s23 + 
               309*s13^2*s23^2 - 50*s13*s23^3 - 10*s23^4)) + 
           p2q^3*p3q^3*s12*s13*(18*s12^7*s23*(37*s13 + 15*s23) + 
             10*s13^5*s23^2*(27*s13^2 + 46*s13*s23 + 19*s23^2) + 
             s12^6*s23*(-189*s13^2 + 909*s13*s23 + 460*s23^2) + 
             2*s12^4*s13*(216*s13^4 + 909*s13^3*s23 + 948*s13^2*s23^2 - 80*
                s13*s23^3 - 278*s23^4) + s12*s13^3*s23*(666*s13^4 + 909*s13^3*
                s23 - 309*s13^2*s23^2 - 556*s13*s23^3 - 84*s23^4) + 
             3*s12^3*s13*s23*(90*s13^4 + 632*s13^3*s23 + 340*s13^2*s23^2 - 
               111*s13*s23^3 - 28*s23^4) - s12^2*s13^2*s23*(189*s13^4 + 1017*
                s13^3*s23 + 160*s13^2*s23^2 + 333*s13*s23^3 + 168*s23^4) + 
             s12^5*(432*s13^4 + 270*s13^3*s23 - 1017*s13^2*s23^2 - 309*s13*
                s23^3 + 190*s23^4)) + p2q^5*p3q*s13^3*
            (18*s12^6*s23*(9*s13 + 7*s23) + 10*s13^3*s23*(s13 + s23)^2*
              (9*s13^2 + s13*s23 - s23^2) + 2*s12^5*s23*(36*s13^2 + 103*s13*
                s23 + 22*s23^2) + s12^4*(72*s13^4 + 261*s13^3*s23 + 44*s13^2*
                s23^2 - 376*s13*s23^3 - 206*s23^4) + s12^2*s13*s23*
              (207*s13^4 + 537*s13^3*s23 + 309*s13^2*s23^2 - 96*s13*s23^3 - 
               65*s23^4) + s12*s13^2*s23*(27*s13^4 - 16*s13^3*s23 - 63*s13^2*
                s23^2 - 50*s13*s23^3 - 30*s23^4) + s12^3*(72*s13^5 + 549*
                s13^4*s23 + 599*s13^3*s23^2 - 11*s13^2*s23^3 - 271*s13*
                s23^4 - 36*s23^5)) - p2q^2*p3q^4*s12^2*
            (90*s12^7*s23*(4*s13 + s23) + s12^6*s23*(-162*s13^2 + 677*s13*
                s23 + 190*s23^2) + s13^4*s23^2*(405*s13^3 + 674*s13^2*s23 + 
               297*s13*s23^2 + 28*s23^3) + s12^3*s13*s23*(549*s13^4 + 1710*
                s13^3*s23 + 1411*s13^2*s23^2 + 510*s13*s23^3 + 30*s23^4) + 
             2*s12^5*(144*s13^4 + 126*s13^3*s23 - 266*s13^2*s23^2 + 147*s13*
                s23^3 + 55*s23^4) + s12*s13^3*s23*(585*s13^4 + 898*s13^3*
                s23 + 122*s13^2*s23^2 + 454*s13*s23^3 + 129*s23^4) + 
             s12^2*s13^2*s23*(144*s13^4 - 184*s13^3*s23 + 928*s13^2*s23^2 + 
               725*s13*s23^3 + 130*s23^4) + s12^4*(288*s13^5 + 1476*s13^4*
                s23 + 1484*s13^3*s23^2 + 80*s13^2*s23^3 + 7*s13*s23^4 + 10*
                s23^5)) - p2q^4*p3q^2*s13^2*(10*s13^4*s23^2*(s13 + s23)^2*
              (9*s13 + s23) + 45*s12^7*s23*(13*s13 + 9*s23) + 
             2*s12^6*s23*(72*s13^2 + 449*s13*s23 + 337*s23^2) + 
             s12*s13^3*s23*(360*s13^4 + 677*s13^3*s23 + 294*s13^2*s23^2 + 7*
                s13*s23^3 + 30*s23^4) + 2*s12^2*s13^2*s23*(-81*s13^4 - 266*
                s13^3*s23 + 40*s13^2*s23^2 + 255*s13*s23^3 + 65*s23^4) + 
             s12^3*s13*s23*(252*s13^4 + 1484*s13^3*s23 + 1411*s13^2*s23^2 + 
               725*s13*s23^3 + 129*s23^4) + s12^5*(288*s13^4 + 549*s13^3*
                s23 - 184*s13^2*s23^2 + 122*s13*s23^3 + 297*s23^4) + 
             2*s12^4*(144*s13^5 + 738*s13^4*s23 + 855*s13^3*s23^2 + 464*s13^2*
                s23^3 + 227*s13*s23^4 + 14*s23^5))) - 
         p1q^5*s23^2*(s12 + s13 + s23)*
          (p2q^2*(-30*s12*s13^3*s23^3*(s13 + s23) - 20*s13^3*s23^3*
              (2*s13^2 + s13*s23 - s23^2) + s12^2*s13^2*s23*(19*s13^3 + 150*
                s13^2*s23 + 123*s13*s23^2 - 8*s23^3) + 
             s12^5*(22*s13^3 + 329*s13^2*s23 + 243*s13*s23^2 + 80*s23^3) + 
             s12^4*s13*(107*s13^3 + 703*s13^2*s23 + 324*s13*s23^2 + 160*
                s23^3) + s12^3*(49*s13^5 + 283*s13^4*s23 + 1107*s13^3*s23^2 + 
               230*s13^2*s23^3 - 3*s13*s23^4 - 80*s23^5)) + 
           p2q*p3q*(2*s12*s13^3*s23^2*(486*s13^2 + 308*s13*s23 - 183*s23^2) + 
             20*s13^3*s23^3*(20*s13^2 + 17*s13*s23 - 3*s23^2) + 
             s12^2*s13^2*s23*(1050*s13^3 + 429*s13^2*s23 - 637*s13*s23^2 - 16*
                s23^3) + s12^5*(107*s13^3 + 1050*s13^2*s23 + 972*s13*s23^2 + 
               400*s23^3) + s12^4*(-2*s13^4 + 104*s13^3*s23 + 429*s13^2*
                s23^2 + 616*s13*s23^3 + 340*s23^4) + s12^3*(107*s13^5 + 104*
                s13^4*s23 - 36*s13^3*s23^2 - 637*s13^2*s23^3 - 366*s13*
                s23^4 - 60*s23^5)) + p3q^2*(s12*s13^3*s23^2*(243*s13^2 + 160*
                s13*s23 - 3*s23^2) + 80*s13^3*s23^3*(s13^2 - s23^2) + 
             s12^5*(49*s13^3 + 19*s13^2*s23 - 40*s23^3) + s12^2*s13^2*s23*
              (329*s13^3 + 324*s13^2*s23 + 230*s13*s23^2 - 8*s23^3) + 
             s12^4*(107*s13^4 + 283*s13^3*s23 + 150*s13^2*s23^2 - 30*s13*
                s23^3 - 20*s23^4) + s12^3*(22*s13^5 + 703*s13^4*s23 + 1107*
                s13^3*s23^2 + 123*s13^2*s23^3 - 30*s13*s23^4 + 20*s23^5))) + 
         p1q*(p2q^6*s13^3*(-20*s13^3*(s13 - 2*s23)*s23^2*(s13 + s23)^2 + 
             9*s12^6*s23*(3*s13 + 11*s23) - 10*s12*s13^2*s23^2*
              (8*s13^3 + s13^2*s23 - 16*s13*s23^2 - 9*s23^3) + 
             s12^5*(27*s13^3 + 18*s13^2*s23 + 2*s13*s23^2 + 299*s23^3) + 
             s12^4*(81*s13^4 - 18*s13^3*s23 - 397*s13^2*s23^2 + 363*s13*
                s23^3 + 229*s23^4) + s12^3*(81*s13^5 + 18*s13^4*s23 - 435*
                s13^3*s23^2 + 29*s13^2*s23^3 + 430*s13*s23^4 + 29*s23^5) + 
             3*s12^2*s13*(9*s13^5 + 9*s13^4*s23 - 65*s13^3*s23^2 - 33*s13^2*
                s23^3 + 70*s13*s23^4 + 38*s23^5)) + p3q^6*s12^3*
            (s12^5*s13*(81*s13^2 + 27*s13*s23 - 80*s23^2) + 
             s12^6*(27*s13^2 - 20*s23^2) + s13^3*s23^2*(99*s13^3 + 299*s13^2*
                s23 + 229*s13*s23^2 + 29*s23^3) + s12^4*(81*s13^4 + 18*s13^3*
                s23 - 195*s13^2*s23^2 - 10*s13*s23^3 + 60*s23^4) + 
             s12^2*s13*s23*(18*s13^4 - 397*s13^3*s23 + 29*s13^2*s23^2 + 210*
                s13*s23^3 + 90*s23^4) + s12*s13^2*s23*(27*s13^4 + 2*s13^3*
                s23 + 363*s13^2*s23^2 + 430*s13*s23^3 + 114*s23^4) + 
             s12^3*(27*s13^5 - 18*s13^4*s23 - 435*s13^3*s23^2 - 99*s13^2*
                s23^3 + 160*s13*s23^4 + 40*s23^5)) + p2q^2*p3q^4*s12*
            (-90*s12^9*s23 + s12^8*(27*s13^2 + 486*s13*s23 + 250*s23^2) - 
             3*s12^7*(69*s13^3 + 558*s13^2*s23 + 21*s13*s23^2 - 160*s23^3) + 
             s12^6*(99*s13^4 - 630*s13^3*s23 - 2769*s13^2*s23^2 - 1665*s13*
                s23^3 - 200*s23^4) - 20*s13^4*s23^2*(9*s13^4 + s13^3*s23 - 12*
                s13^2*s23^2 - 3*s13*s23^3 + s23^4) + s12^5*(225*s13^5 + 1872*
                s13^4*s23 + 4148*s13^3*s23^2 + 2166*s13^2*s23^3 - 877*s13*
                s23^4 - 390*s23^5) + s12^2*s13^2*s23*(1494*s13^5 + 2814*s13^4*
                s23 - 54*s13^3*s23^2 + 863*s13^2*s23^3 - 307*s13*s23^4 - 169*
                s23^5) + s12*s13^3*s23*(-396*s13^5 + 1170*s13^4*s23 + 2721*
                s13^3*s23^2 + 479*s13^2*s23^3 - 492*s13*s23^4 - 56*s23^5) + 
             s12^3*s13*(162*s13^6 + 108*s13^5*s23 - 2330*s13^4*s23^2 + 2495*
                s13^3*s23^3 + 1474*s13^2*s23^4 - 167*s13*s23^5 - 120*s23^6) + 
             s12^4*(54*s13^6 - 90*s13^5*s23 + 1874*s13^4*s23^2 + 4311*s13^3*
                s23^3 + 2916*s13^2*s23^4 + 119*s13*s23^5 - 50*s23^6)) + 
           p2q*p3q^5*s12^2*(-90*s12^8*s23 + s12^7*(54*s13^2 + 216*s13*s23 + 
               230*s23^2) - 10*s12^6*(9*s13^3 + 45*s13^2*s23 - 60*s13*s23^2 - 
               82*s23^3) + s13^3*s23^2*(225*s13^4 + 259*s13^3*s23 - 75*s13^2*
                s23^2 - 111*s13*s23^3 - 2*s23^4) + s12^5*(-234*s13^4 - 1116*
                s13^3*s23 - 1191*s13^2*s23^2 + 312*s13*s23^3 + 560*s23^4) + 
             s12*s13^2*s23*(189*s13^5 + 212*s13^4*s23 + 423*s13^3*s23^2 + 766*
                s13^2*s23^3 - 137*s13*s23^4 - 67*s23^5) + s12^2*s13*s23*
              (-315*s13^5 - 235*s13^4*s23 + 2488*s13^3*s23^2 + 1574*s13^2*
                s23^3 + 257*s13*s23^4 - 60*s23^5) + s12^4*(-198*s13^5 - 369*
                s13^4*s23 - 129*s13^3*s23^2 + 387*s13^2*s23^3 + 58*s13*
                s23^4 + 30*s23^5) + s12^3*(-108*s13^6 - 153*s13^5*s23 + 742*
                s13^4*s23^2 + 2198*s13^3*s23^3 + 1448*s13^2*s23^4 + 70*s13*
                s23^5 - 30*s23^6)) + p2q^4*p3q^2*s13*
            (-36*s12^8*s23*(11*s13 + 5*s23) + 2*s12^7*(81*s13^3 + 747*s13^2*
                s23 + 585*s13*s23^2 - 10*s23^3) - 10*s13^4*s23*(s13 + s23)^2*
              (9*s13^3 - 43*s13^2*s23 + 29*s13*s23^2 + 5*s23^3) + 
             3*s12^6*(18*s13^4 + 36*s13^3*s23 + 938*s13^2*s23^2 + 907*s13*
                s23^3 + 80*s23^4) + s12*s13^3*s23*(486*s13^5 - 63*s13^4*s23 - 
               1665*s13^3*s23^2 - 877*s13^2*s23^3 + 119*s13*s23^4 - 120*
                s23^5) + s12^5*(225*s13^5 - 90*s13^4*s23 - 2330*s13^3*s23^2 - 
               54*s13^2*s23^3 + 479*s13*s23^4 + 60*s23^5) + 
             s12^2*s13^2*(27*s13^6 - 1674*s13^5*s23 - 2769*s13^4*s23^2 + 2166*
                s13^3*s23^3 + 2916*s13^2*s23^4 - 167*s13*s23^5 - 169*s23^6) + 
             s12^3*s13*(-207*s13^6 - 630*s13^5*s23 + 4148*s13^4*s23^2 + 4311*
                s13^3*s23^3 + 1474*s13^2*s23^4 - 307*s13*s23^5 - 56*s23^6) + 
             s12^4*(99*s13^6 + 1872*s13^5*s23 + 1874*s13^4*s23^2 + 2495*s13^3*
                s23^3 + 863*s13^2*s23^4 - 492*s13*s23^5 - 20*s23^6)) + 
           p2q^3*p3q^3*(90*s12^9*s23*(3*s13 + s23) + 10*s13^5*s23^2*
              (s13 + s23)^2*(9*s13^2 - 25*s13*s23 - 2*s23^2) - 
             s12^8*(108*s13^3 + 1593*s13^2*s23 + 626*s13*s23^2 + 70*s23^3) + 
             s12^7*(216*s13^4 + 1521*s13^3*s23 - 441*s13^2*s23^2 - 1386*s13*
                s23^3 - 430*s23^4) + s12^6*(-108*s13^5 + 1521*s13^4*s23 + 
               6516*s13^3*s23^2 + 4682*s13^2*s23^3 - 184*s13*s23^4 - 290*
                s23^5) + 2*s12*s13^4*s23*(135*s13^5 - 313*s13^4*s23 - 693*
                s13^3*s23^2 - 92*s13^2*s23^3 + 113*s13*s23^4 - 40*s23^5) - 
             s12^2*s13^3*s23*(1593*s13^5 + 441*s13^4*s23 - 4682*s13^3*s23^2 - 
               2421*s13^2*s23^3 + 655*s13*s23^4 + 156*s23^5) + 
             s12^3*s13^2*(-108*s13^6 + 1521*s13^5*s23 + 6516*s13^4*s23^2 + 
               2351*s13^3*s23^3 + 1070*s13^2*s23^4 - 156*s13*s23^5 - 156*
                s23^6) + s12^4*s13*(216*s13^6 + 1521*s13^5*s23 - 2105*s13^4*
                s23^2 + 1136*s13^3*s23^3 + 1070*s13^2*s23^4 - 655*s13*s23^5 - 
               80*s23^6) + s12^5*(-108*s13^6 - 1566*s13^5*s23 - 2105*s13^4*
                s23^2 + 2351*s13^3*s23^3 + 2421*s13^2*s23^4 + 226*s13*s23^5 - 
               20*s23^6)) + p2q^5*p3q*s13^2*(9*s12^7*s23*(21*s13 + 25*s23) - 
             10*s13^3*s23*(s13 + s23)^2*(9*s13^3 - 41*s13^2*s23 - 9*s13*
                s23^2 + 3*s23^3) + s12^6*(-108*s13^3 - 315*s13^2*s23 + 212*
                s13*s23^2 + 259*s23^3) - s12^5*(198*s13^4 + 153*s13^3*s23 + 
               235*s13^2*s23^2 - 423*s13*s23^3 + 75*s23^4) + 
             s12^4*(-234*s13^5 - 369*s13^4*s23 + 742*s13^3*s23^2 + 2488*s13^2*
                s23^3 + 766*s13*s23^4 - 111*s23^5) + 2*s12*s13^2*s23*
              (108*s13^5 + 300*s13^4*s23 + 156*s13^3*s23^2 + 29*s13^2*s23^3 + 
               35*s13*s23^4 - 30*s23^5) + s12^2*s13*(54*s13^6 - 450*s13^5*
                s23 - 1191*s13^4*s23^2 + 387*s13^3*s23^3 + 1448*s13^2*s23^4 + 
               257*s13*s23^5 - 67*s23^6) - s12^3*(90*s13^6 + 1116*s13^5*s23 + 
               129*s13^4*s23^2 - 2198*s13^3*s23^3 - 1574*s13^2*s23^4 + 137*
                s13*s23^5 + 2*s23^6))) + 
         p1q^2*(-(p2q^5*s13^2*(10*s13^3*s23^2*(s13 + s23)^2*(s13^2 - 
                8*s13*s23 + 6*s23^2) + s12^6*(27*s13^3 - 54*s13^2*s23 - 
                286*s13*s23^2 + 83*s23^3) + 10*s12*s13^2*s23^2*(4*s13^4 - 
                19*s13^3*s23 - 26*s13^2*s23^2 + 6*s13*s23^3 + 9*s23^4) + 
              s12^4*s23*(342*s13^4 + 768*s13^3*s23 - 586*s13^2*s23^2 + 
                307*s13*s23^3 + 167*s23^4) + s12^5*(54*s13^4 + 54*s13^3*s23 - 
                179*s13^2*s23^2 - 363*s13*s23^3 + 248*s23^4) - 
              3*s12^2*s13*(9*s13^6 - 24*s13^5*s23 - 130*s13^4*s23^2 + 
                10*s13^3*s23^3 + 149*s13^2*s23^4 + 22*s13*s23^5 - 20*s23^6) + 
              s12^3*(-54*s13^6 + 306*s13^5*s23 + 1021*s13^4*s23^2 - 
                202*s13^3*s23^3 - 501*s13^2*s23^4 + 364*s13*s23^5 + 
                2*s23^6))) + p3q^5*s12^2*(s12^7*(27*s13^2 - 10*s23^2) - 
             s13^3*s23^3*(83*s13^3 + 248*s13^2*s23 + 167*s13*s23^2 + 2*
                s23^3) + 2*s12^5*s23*(-153*s13^3 - 195*s13^2*s23 + 95*s13*
                s23^2 + 45*s23^3) + s12^6*(54*s13^3 - 72*s13^2*s23 - 40*s13*
                s23^2 + 60*s23^3) + s12*s13^2*s23^2*(286*s13^4 + 363*s13^3*
                s23 - 307*s13^2*s23^2 - 364*s13*s23^3 - 60*s23^4) + 
             s12^2*s13*s23*(54*s13^5 + 179*s13^4*s23 + 586*s13^3*s23^2 + 501*
                s13^2*s23^3 + 66*s13*s23^4 - 90*s23^5) - 
             s12^4*(54*s13^5 + 342*s13^4*s23 + 1021*s13^3*s23^2 - 30*s13^2*
                s23^3 - 260*s13*s23^4 + 40*s23^5) - s12^3*(27*s13^6 + 54*
                s13^5*s23 + 768*s13^4*s23^2 - 202*s13^3*s23^3 - 447*s13^2*
                s23^4 + 60*s13*s23^5 + 60*s23^6)) + p2q^4*p3q*s13*
            (10*s13^3*s23^2*(s13 + s23)^2*(43*s13^3 - 75*s13^2*s23 - 15*s13*
                s23^2 + 3*s23^3) + s12^7*(81*s13^3 + 540*s13^2*s23 + 802*s13*
                s23^2 + 80*s23^3) + s12^6*(108*s13^4 + 297*s13^3*s23 + 1545*
                s13^2*s23^2 + 680*s13*s23^3 - 30*s23^4) + 
             s12^5*(36*s13^5 + 567*s13^4*s23 + 844*s13^3*s23^2 + 1116*s13^2*
                s23^3 - 672*s13*s23^4 - 60*s23^5) + s12*s13^2*s23*
              (243*s13^6 - 348*s13^5*s23 - 1947*s13^4*s23^2 - 1038*s13^3*
                s23^3 + 88*s13^2*s23^4 - 200*s13*s23^5 + 30*s23^6) + 
             s12^4*(-90*s13^6 + 216*s13^5*s23 + 1690*s13^4*s23^2 + 4185*s13^3*
                s23^3 + 614*s13^2*s23^4 - 165*s13*s23^5 + 50*s23^6) + 
             s12^3*s13*(-45*s13^6 - 990*s13^5*s23 + 1771*s13^4*s23^2 + 4104*
                s13^3*s23^3 + 988*s13^2*s23^4 - 865*s13*s23^5 + 147*s23^6) + 
             s12^2*s13*(54*s13^7 - 801*s13^6*s23 - 1280*s13^5*s23^2 + 2287*
                s13^4*s23^3 + 2326*s13^3*s23^4 - 797*s13^2*s23^5 - 309*s13*
                s23^6 + 2*s23^7)) + p2q*p3q^4*s12*
            (s12^8*(54*s13^2 + 243*s13*s23 + 430*s23^2) - 
             s12^7*(45*s13^3 + 801*s13^2*s23 + 348*s13*s23^2 - 110*s23^3) + 
             10*s13^4*s23^3*(8*s13^3 - 3*s13^2*s23 - 6*s13*s23^2 + 5*s23^3) - 
             s12^6*(90*s13^4 + 990*s13^3*s23 + 1280*s13^2*s23^2 + 1947*s13*
                s23^3 + 1220*s23^4) + s12^5*(36*s13^5 + 216*s13^4*s23 + 1771*
                s13^3*s23^2 + 2287*s13^2*s23^3 - 1038*s13*s23^4 - 1020*
                s23^5) + s12*s13^2*s23^2*(802*s13^5 + 680*s13^4*s23 - 672*
                s13^3*s23^2 - 165*s13^2*s23^3 + 147*s13*s23^4 + 2*s23^5) + 
             s12^4*(108*s13^6 + 567*s13^5*s23 + 1690*s13^4*s23^2 + 4104*s13^3*
                s23^3 + 2326*s13^2*s23^4 + 88*s13*s23^5 - 90*s23^6) + 
             s12^2*s13*s23*(540*s13^6 + 1545*s13^5*s23 + 1116*s13^4*s23^2 + 
               614*s13^3*s23^3 - 865*s13^2*s23^4 - 309*s13*s23^5 + 30*
                s23^6) + s12^3*(81*s13^7 + 297*s13^6*s23 + 844*s13^5*s23^2 + 
               4185*s13^4*s23^3 + 988*s13^3*s23^4 - 797*s13^2*s23^5 - 200*s13*
                s23^6 + 30*s23^7)) + p2q^3*p3q^2*
            (s12^7*s23*(1368*s13^3 + 1887*s13^2*s23 - 204*s13*s23^2 - 290*
                s23^3) + 10*s13^4*s23^2*(s13 + s23)^2*(35*s13^3 - 82*s13^2*
                s23 + 41*s13*s23^2 + 4*s23^3) - s12^8*(81*s13^3 + 765*s13^2*
                s23 + 673*s13*s23^2 + 260*s23^3) + s12^6*(-63*s13^5 + 1152*
                s13^4*s23 + 5091*s13^3*s23^2 + 4642*s13^2*s23^3 + 1098*s13*
                s23^4 + 210*s23^5) + s12*s13^3*s23*(243*s13^6 - 945*s13^5*
                s23 - 1422*s13^4*s23^2 + 1324*s13^3*s23^3 + 1119*s13^2*
                s23^4 - 379*s13*s23^5 + 60*s23^6) + s12^5*(36*s13^6 + 693*
                s13^5*s23 - 321*s13^4*s23^2 + 632*s13^3*s23^3 - 434*s13^2*
                s23^4 + 596*s13*s23^5 + 250*s23^6) + s12^2*s13^2*
              (27*s13^7 - 1494*s13^6*s23 + 483*s13^5*s23^2 + 6982*s13^4*
                s23^3 + 1995*s13^3*s23^4 - 2536*s13^2*s23^5 - 227*s13*s23^6 + 
               6*s23^7) + s12^4*(45*s13^7 + 1755*s13^6*s23 + 1130*s13^5*
                s23^2 + 3855*s13^4*s23^3 - 213*s13^3*s23^4 - 1581*s13^2*
                s23^5 - 3*s13*s23^6 + 10*s23^7) + s12^3*s13*(-108*s13^7 + 288*
                s13^6*s23 + 6444*s13^5*s23^2 + 2836*s13^4*s23^3 - 1295*s13^3*
                s23^4 - 1278*s13^2*s23^5 - 81*s13*s23^6 + 30*s23^7)) + 
           p2q^2*p3q^3*(-10*s13^4*s23^3*(s13 + s23)^2*(26*s13^2 - 23*s13*
                s23 - s23^2) + s12^9*(27*s13^2 + 243*s13*s23 + 350*s23^2) - 
             3*s12^8*(36*s13^3 + 498*s13^2*s23 + 315*s13*s23^2 + 40*s23^3) + 
             s12^7*(45*s13^4 + 288*s13^3*s23 + 483*s13^2*s23^2 - 1422*s13*
                s23^3 - 880*s23^4) + s12*s13^3*s23^2*(-673*s13^5 - 204*s13^4*
                s23 + 1098*s13^3*s23^2 + 596*s13^2*s23^3 - 3*s13*s23^4 + 30*
                s23^5) + s12^6*(36*s13^5 + 1755*s13^4*s23 + 6444*s13^3*
                s23^2 + 6982*s13^2*s23^3 + 1324*s13*s23^4 + 40*s23^5) + 
             s12^2*s13^2*s23*(-765*s13^6 + 1887*s13^5*s23 + 4642*s13^4*
                s23^2 - 434*s13^3*s23^3 - 1581*s13^2*s23^4 - 81*s13*s23^5 + 6*
                s23^6) + s12^4*s23*(1152*s13^6 - 321*s13^5*s23 + 3855*s13^4*
                s23^2 - 1295*s13^3*s23^3 - 2536*s13^2*s23^4 - 379*s13*s23^5 + 
               40*s23^6) + s12^5*(-63*s13^6 + 693*s13^5*s23 + 1130*s13^4*
                s23^2 + 2836*s13^3*s23^3 + 1995*s13^2*s23^4 + 1119*s13*
                s23^5 + 490*s23^6) + s12^3*s13*(-81*s13^7 + 1368*s13^6*s23 + 
               5091*s13^5*s23^2 + 632*s13^4*s23^3 - 213*s13^3*s23^4 - 1278*
                s13^2*s23^5 - 227*s13*s23^6 + 60*s23^7))) + 
         p1q^4*s23*(p2q^3*(-10*s13^3*s23^3*(s13 + s23)^2*(6*s13^2 - 8*s13*
                s23 + s23^2) - 50*s12*s13^3*s23^3*(3*s13^3 + 2*s13^2*s23 - 2*
                s13*s23^2 - s23^3) + s12^6*(81*s13^4 + 344*s13^3*s23 - 252*
                s13^2*s23^2 - 163*s13*s23^3 - 80*s23^4) + 
             s12^5*(252*s13^5 + 882*s13^4*s23 + 7*s13^3*s23^2 - 589*s13^2*
                s23^3 - 486*s13*s23^4 - 160*s23^5) + s12^2*s13^2*s23*
              (131*s13^5 + 440*s13^4*s23 + 192*s13^3*s23^2 - 256*s13^2*
                s23^3 - 133*s13*s23^4 + 6*s23^5) + 2*s12^3*s13*
              (45*s13^6 + 309*s13^5*s23 + 810*s13^4*s23^2 - 10*s13^3*s23^3 - 
               674*s13^2*s23^4 - 238*s13*s23^5 - 120*s23^6) + 
             s12^4*(261*s13^6 + 1025*s13^5*s23 + 1286*s13^4*s23^2 - 1166*
                s13^3*s23^3 - 659*s13^2*s23^4 - 563*s13*s23^5 - 80*s23^6)) + 
           p3q^3*(-80*s13^4*s23^4*(s13 + s23)^2 + s12^7*(90*s13^3 + 131*s13^2*
                s23 - 60*s23^3) - s12*s13^3*s23^3*(163*s13^3 + 486*s13^2*
                s23 + 563*s13*s23^2 + 240*s23^3) + s12^6*(261*s13^4 + 618*
                s13^3*s23 + 440*s13^2*s23^2 - 150*s13*s23^3 - 40*s23^4) - 
             s12^2*s13^2*s23^2*(252*s13^4 + 589*s13^3*s23 + 659*s13^2*s23^2 + 
               476*s13*s23^3 - 6*s23^4) + s12^5*(252*s13^5 + 1025*s13^4*s23 + 
               1620*s13^3*s23^2 + 192*s13^2*s23^3 - 100*s13*s23^4 + 90*
                s23^5) + s12^3*s23*(344*s13^6 + 7*s13^5*s23 - 1166*s13^4*
                s23^2 - 1348*s13^3*s23^3 - 133*s13^2*s23^4 + 50*s13*s23^5 - 
               10*s23^6) + s12^4*(81*s13^6 + 882*s13^5*s23 + 1286*s13^4*
                s23^2 - 20*s13^3*s23^3 - 256*s13^2*s23^4 + 100*s13*s23^5 + 60*
                s23^6)) + p2q*p3q^2*(10*s13^3*s23^3*(s13 + s23)^2*
              (33*s13^2 - 39*s13*s23 + 7*s23^2) + s12^7*(207*s13^3 + 1243*
                s13^2*s23 + 1458*s13*s23^2 + 810*s23^3) + s12*s13^3*s23^2*
              (729*s13^4 + 963*s13^3*s23 - 355*s13^2*s23^2 - 273*s13*s23^3 + 
               316*s23^4) + s12^6*(351*s13^4 + 1634*s13^3*s23 + 1798*s13^2*
                s23^2 + 2362*s13*s23^3 + 1300*s23^4) + s12^2*s13^2*s23*
              (761*s13^5 + 791*s13^4*s23 - 910*s13^3*s23^2 - 16*s13^2*s23^3 + 
               566*s13*s23^4 + 22*s23^5) + s12^5*(414*s13^5 + 952*s13^4*s23 - 
               756*s13^3*s23^2 - 2721*s13^2*s23^3 - 617*s13*s23^4 + 140*
                s23^5) + s12^4*(243*s13^6 + 1205*s13^5*s23 + 1202*s13^4*
                s23^2 - 3156*s13^3*s23^3 - 2871*s13^2*s23^4 - 1338*s13*
                s23^5 - 380*s23^6) + s12^3*(117*s13^7 + 1333*s13^6*s23 + 241*
                s13^5*s23^2 - 837*s13^4*s23^3 - 755*s13^3*s23^4 + 477*s13^2*
                s23^5 + 183*s13*s23^6 - 30*s23^7)) + p2q^2*p3q*
            (10*s13^3*s23^3*(s13 + s23)^2*(81*s13^2 - 32*s13*s23 - 3*s23^2) + 
             s12^7*(117*s13^3 + 761*s13^2*s23 + 729*s13*s23^2 + 330*s23^3) + 
             s12*s13^3*s23^2*(1458*s13^4 + 2362*s13^3*s23 - 617*s13^2*s23^2 - 
               1338*s13*s23^3 + 183*s23^4) + s12^6*(243*s13^4 + 1333*s13^3*
                s23 + 791*s13^2*s23^2 + 963*s13*s23^3 + 270*s23^4) + 
             s12^5*(414*s13^5 + 1205*s13^4*s23 + 241*s13^3*s23^2 - 910*s13^2*
                s23^3 - 355*s13*s23^4 - 380*s23^5) + s12^2*s13^2*s23*
              (1243*s13^5 + 1798*s13^4*s23 - 2721*s13^3*s23^2 - 2871*s13^2*
                s23^3 + 477*s13*s23^4 + 22*s23^5) + s12^4*(351*s13^6 + 952*
                s13^5*s23 + 1202*s13^4*s23^2 - 837*s13^3*s23^3 - 16*s13^2*
                s23^4 - 273*s13*s23^5 - 250*s23^6) + s12^3*(207*s13^7 + 1634*
                s13^6*s23 - 756*s13^5*s23^2 - 3156*s13^4*s23^3 - 755*s13^3*
                s23^4 + 566*s13^2*s23^5 + 316*s13*s23^6 + 70*s23^7))) + 
         p1q^3*(p3q^4*s12*(80*s13^4*s23^4*(s13^2 + 3*s13*s23 + 2*s23^2) + 
             s12^7*(-27*s13^3 - 117*s13^2*s23 + 40*s23^3) + 
             s12*s13^2*s23^3*(-6*s13^4 + 388*s13^3*s23 + 793*s13^2*s23^2 + 
               321*s13*s23^3 + 2*s23^4) - s12^6*(81*s13^4 + 297*s13^3*s23 + 
               186*s13^2*s23^2 - 130*s13*s23^3 + 40*s23^4) + 
             s12^2*s13*s23^2*(553*s13^5 + 1147*s13^4*s23 + 795*s13^3*s23^2 + 
               46*s13^2*s23^3 - 122*s13*s23^4 + 30*s23^5) - 
             s12^5*(81*s13^5 + 135*s13^4*s23 + 182*s13^3*s23^2 - 428*s13^2*
                s23^3 + 80*s13*s23^4 + 160*s23^5) + s12^4*(-27*s13^6 + 153*
                s13^5*s23 + 540*s13^4*s23^2 + 1903*s13^3*s23^3 + 520*s13^2*
                s23^4 - 320*s13*s23^5 - 40*s23^6) + s12^3*s23*
              (108*s13^6 + 1089*s13^5*s23 + 2484*s13^4*s23^2 + 1540*s13^3*
                s23^3 - 101*s13^2*s23^4 - 80*s13*s23^5 + 40*s23^6)) + 
           p2q^4*s13*(40*s13^3*s23^3*(s13 + s23)^2*(s13^2 - 3*s13*s23 + s23^
                2) + 10*s12*s13^2*s23^3*(13*s13^4 - 8*s13^3*s23 - 32*s13^2*
                s23^2 - 8*s13*s23^3 + 3*s23^4) + s12^6*(-27*s13^4 + 108*s13^3*
                s23 + 553*s13^2*s23^2 - 6*s13*s23^3 + 80*s23^4) + 
             s12^5*(-81*s13^5 + 153*s13^4*s23 + 1089*s13^3*s23^2 + 1147*s13^2*
                s23^3 + 388*s13*s23^4 + 240*s23^5) + s12^2*s13*s23*
              (-117*s13^6 - 186*s13^5*s23 + 428*s13^4*s23^2 + 520*s13^3*
                s23^3 - 101*s13^2*s23^4 - 122*s13*s23^5 + 2*s23^6) + 
             s12^4*(-81*s13^6 - 135*s13^5*s23 + 540*s13^4*s23^2 + 2484*s13^3*
                s23^3 + 795*s13^2*s23^4 + 793*s13*s23^5 + 160*s23^6) + 
             s12^3*s13*(-27*s13^6 - 297*s13^5*s23 - 182*s13^4*s23^2 + 1903*
                s13^3*s23^3 + 1540*s13^2*s23^4 + 46*s13*s23^5 + 321*s23^6)) + 
           p2q*p3q^3*(10*s13^4*(25*s13 - 7*s23)*s23^4*(s13 + s23)^2 - 
             2*s12^8*(27*s13^3 + 288*s13^2*s23 + 486*s13*s23^2 + 415*s23^3) + 
             2*s12*s13^3*s23^3*(283*s13^4 + 468*s13^3*s23 + 182*s13^2*s23^2 - 
               63*s13*s23^3 - 60*s23^4) - s12^7*(36*s13^4 + 351*s13^3*s23 - 
               495*s13^2*s23^2 + 808*s13*s23^3 + 970*s23^4) + 
             s12^2*s13^2*s23^2*(1101*s13^5 + 829*s13^4*s23 - 1466*s13^3*
                s23^2 - 887*s13^2*s23^3 - 311*s13*s23^4 + 12*s23^5) + 
             s12^6*(72*s13^5 + 414*s13^4*s23 + 2768*s13^3*s23^2 + 4279*s13^2*
                s23^3 + 2258*s13*s23^4 + 660*s23^5) + 
             s12^5*(108*s13^6 + 900*s13^5*s23 + 1556*s13^4*s23^2 + 2353*s13^3*
                s23^3 + 977*s13^2*s23^4 + 1662*s13*s23^5 + 900*s23^6) + 
             s12^3*s23*(495*s13^7 + 2060*s13^6*s23 + 217*s13^5*s23^2 - 1632*
                s13^4*s23^3 - 2366*s13^3*s23^4 - 204*s13^2*s23^5 + 110*s13*
                s23^6 - 10*s23^7) + s12^4*(54*s13^7 + 702*s13^6*s23 + 1610*
                s13^5*s23^2 + 2769*s13^4*s23^3 - 2479*s13^3*s23^4 - 2547*
                s13^2*s23^5 - 322*s13*s23^6 + 90*s23^7)) + 
           p2q^3*p3q*(-10*s13^3*s23^3*(s13 + s23)^2*(83*s13^3 - 69*s13^2*
                s23 - 11*s13*s23^2 + s23^3) + s12^7*(54*s13^4 + 495*s13^3*
                s23 + 1101*s13^2*s23^2 + 566*s13*s23^3 + 250*s23^4) - 
             2*s12*s13^3*s23^2*(486*s13^5 + 404*s13^4*s23 - 1129*s13^3*
                s23^2 - 831*s13^2*s23^3 + 161*s13*s23^4 - 55*s23^5) + 
             s12^6*(108*s13^5 + 702*s13^4*s23 + 2060*s13^3*s23^2 + 829*s13^2*
                s23^3 + 936*s13*s23^4 + 430*s23^5) + s12^2*s13^2*s23*
              (-576*s13^6 + 495*s13^5*s23 + 4279*s13^4*s23^2 + 977*s13^3*
                s23^3 - 2547*s13^2*s23^4 - 204*s13*s23^5 + 12*s23^6) + 
             s12^5*(72*s13^6 + 900*s13^5*s23 + 1610*s13^4*s23^2 + 217*s13^3*
                s23^3 - 1466*s13^2*s23^4 + 364*s13*s23^5 + 110*s23^6) - 
             s12^4*(36*s13^7 - 414*s13^6*s23 - 1556*s13^5*s23^2 - 2769*s13^4*
                s23^3 + 1632*s13^3*s23^4 + 887*s13^2*s23^5 + 126*s13*s23^6 + 
               70*s23^7) - s12^3*s13*(54*s13^7 + 351*s13^6*s23 - 2768*s13^5*
                s23^2 - 2353*s13^4*s23^3 + 2479*s13^3*s23^4 + 2366*s13^2*
                s23^5 + 311*s13*s23^6 + 120*s23^7)) + p2q^2*p3q^2*
            (-10*s13^3*s23^3*(s13 + s23)^2*(51*s13^3 - 79*s13^2*s23 + 27*s13*
                s23^2 + s23^3) - 3*s12^8*(9*s13^3 + 153*s13^2*s23 + 243*s13*
                s23^2 + 170*s23^3) + s12^7*(27*s13^4 + 297*s13^3*s23 + 1656*
                s13^2*s23^2 - 21*s13*s23^3 - 230*s23^4) - s12*s13^3*s23^2*
              (729*s13^5 + 21*s13^4*s23 - 1664*s13^3*s23^2 + 162*s13^2*
                s23^3 + 915*s13*s23^4 - 203*s23^5) + s12^6*(72*s13^5 + 711*
                s13^4*s23 + 3350*s13^3*s23^2 + 3255*s13^2*s23^3 + 1664*s13*
                s23^4 + 800*s23^5) + s12^2*s13^2*s23*(-459*s13^6 + 1656*s13^5*
                s23 + 3255*s13^4*s23^2 - 2657*s13^3*s23^3 - 2578*s13^2*
                s23^4 + 519*s13*s23^5 + 20*s23^6) + s12^5*(72*s13^6 + 918*
                s13^5*s23 + 979*s13^4*s23^2 - 228*s13^3*s23^3 - 2657*s13^2*
                s23^4 - 162*s13*s23^5 + 240*s23^6) + s12^4*(27*s13^7 + 711*
                s13^6*s23 + 979*s13^5*s23^2 + 4134*s13^4*s23^3 - 1370*s13^3*
                s23^4 - 2578*s13^2*s23^5 - 915*s13*s23^6 - 290*s23^7) + 
             s12^3*(-27*s13^8 + 297*s13^7*s23 + 3350*s13^6*s23^2 - 228*s13^5*
                s23^3 - 1370*s13^4*s23^4 - 342*s13^3*s23^5 + 519*s13^2*
                s23^6 + 203*s13*s23^7 - 10*s23^8))))/(27*ep*p2q*p3q*
         (p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13^3*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + 
       (ep^2*(p2q^6*s13^3*(s13 + s23)*(-10*s13^2*s23^3*(s13 + s23)^2 + 
            9*s12^5*(s13^2 + 10*s13*s23 + s23^2) + 2*s12*s13*s23^2*
             (8*s13^3 + 8*s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
            s12^4*(18*s13^3 + 225*s13^2*s23 + 229*s13*s23^2 + 22*s23^3) + 
            s12^2*s23*(36*s13^4 + 189*s13^3*s23 + 180*s13^2*s23^2 + 
              31*s13*s23^3 + 4*s23^4) + s12^3*(9*s13^4 + 171*s13^3*s23 + 
              393*s13^2*s23^2 + 176*s13*s23^3 + 17*s23^4)) + 
          p3q^6*s12^3*(s12 + s23)*(s13^2*s23^2*(s13 + s23)^2*
             (9*s13 + 4*s23) + s12^4*(9*s13^3 + 36*s13^2*s23 + 16*s13*s23^2 - 
              10*s23^3) + s12^3*(18*s13^4 + 171*s13^3*s23 + 189*s13^2*s23^2 + 
              16*s13*s23^3 - 20*s23^4) + s12*s13*s23*(90*s13^4 + 
              229*s13^3*s23 + 176*s13^2*s23^2 + 31*s13*s23^3 - 6*s23^4) + 
            s12^2*(9*s13^5 + 225*s13^4*s23 + 393*s13^3*s23^2 + 
              180*s13^2*s23^3 - 6*s13*s23^4 - 10*s23^5)) + 
          p2q*p3q^5*s12^2*(s12^7*(9*s13^2 - 19*s23^2) + 
            s12^6*(207*s13^3 + 396*s13^2*s23 + 63*s13*s23^2 - 86*s23^3) + 
            s12^5*(171*s13^4 + 1422*s13^3*s23 + 1743*s13^2*s23^2 + 
              150*s13*s23^3 - 134*s23^4) + s13^2*s23^3*(181*s13^4 + 
              230*s13^3*s23 + 229*s13^2*s23^2 + 176*s13*s23^3 - 4*s23^4) + 
            s12^4*(-63*s13^5 + 1377*s13^4*s23 + 4299*s13^3*s23^2 + 
              3342*s13^2*s23^3 + 76*s13*s23^4 - 76*s23^5) + 
            s12*s13*s23^2*(352*s13^5 + 963*s13^4*s23 + 1590*s13^3*s23^2 + 
              955*s13^2*s23^3 - 242*s13*s23^4 + 6*s23^5) + 
            s12^3*(-36*s13^6 + 306*s13^5*s23 + 3442*s13^4*s23^2 + 
              5761*s13^3*s23^3 + 2646*s13^2*s23^4 - 40*s13*s23^5 + s23^6) + 
            s12^2*s23*(63*s13^6 + 1102*s13^5*s23 + 3669*s13^4*s23^2 + 
              3456*s13^3*s23^3 + 422*s13^2*s23^4 - 23*s13*s23^5 + 
              10*s23^6)) + p2q^5*p3q*s13^2*(-(s13^2*s23^2*(s13 + s23)^3*
              (19*s13^2 + 29*s13*s23 - 10*s23^2)) + s12*s13*s23^2*
             (s13 + s23)^2*(63*s13^3 + 24*s13^2*s23 - 35*s13*s23^2 + 
              6*s23^3) + s12^6*(-36*s13^3 + 63*s13^2*s23 + 352*s13*s23^2 + 
              181*s23^3) + s12^5*(-63*s13^4 + 306*s13^3*s23 + 
              1102*s13^2*s23^2 + 963*s13*s23^3 + 230*s23^4) + 
            s12^4*(171*s13^5 + 1377*s13^4*s23 + 3442*s13^3*s23^2 + 
              3669*s13^2*s23^3 + 1590*s13*s23^4 + 229*s23^5) + 
            s12^3*(207*s13^6 + 1422*s13^5*s23 + 4299*s13^4*s23^2 + 
              5761*s13^3*s23^3 + 3456*s13^2*s23^4 + 955*s13*s23^5 + 
              176*s23^6) + s12^2*(9*s13^7 + 396*s13^6*s23 + 1743*s13^5*s23^
                2 + 3342*s13^4*s23^3 + 2646*s13^3*s23^4 + 422*s13^2*s23^5 - 
              242*s13*s23^6 - 4*s23^7)) - p2q^3*p3q^3*
           (-19*s13^4*s23^3*(s13 + s23)^4 + s12^8*(36*s13^3 - 261*s13^2*s23 - 
              228*s13*s23^2 - 19*s23^3) - s12*s13^3*s23^2*(s13 + s23)^2*
             (228*s13^3 - 101*s13^2*s23 - 21*s13*s23^2 - 14*s23^3) + 
            s12^7*(18*s13^4 + 18*s13^3*s23 - 491*s13^2*s23^2 - 
              355*s13*s23^3 - 76*s23^4) - s12^6*(1206*s13^5 + 999*s13^4*s23 - 
              255*s13^3*s23^2 - 25*s13^2*s23^3 + 5*s13*s23^4 + 114*s23^5) + 
            s12^2*s13^2*s23*(-261*s13^6 - 491*s13^5*s23 + 25*s13^4*s23^2 + 
              2796*s13^3*s23^3 + 3602*s13^2*s23^4 + 339*s13*s23^5 - 
              722*s23^6) + s12^5*(-1206*s13^6 - 1908*s13^5*s23 + 
              2230*s13^4*s23^2 + 5587*s13^3*s23^3 + 2796*s13^2*s23^4 + 
              157*s13*s23^5 - 76*s23^6) + s12^4*(18*s13^7 - 999*s13^6*s23 + 
              2230*s13^5*s23^2 + 8844*s13^4*s23^3 + 8911*s13^3*s23^4 + 
              3602*s13^2*s23^5 + 49*s13*s23^6 - 19*s23^7) + 
            s12^3*s13*(36*s13^7 + 18*s13^6*s23 + 255*s13^5*s23^2 + 
              5587*s13^4*s23^3 + 8911*s13^3*s23^4 + 3618*s13^2*s23^5 + 
              339*s13*s23^6 + 14*s23^7)) + p2q^2*p3q^4*s12*
           (s12^8*(9*s13^2 - 19*s23^2) - s13^3*s23^3*(s13 + s23)^2*
             (209*s13^2 + 90*s13*s23 + 53*s23^2) + 
            s12^7*(-18*s13^3 + 405*s13^2*s23 + 248*s13*s23^2 - 57*s23^3) + 
            s12^6*(-819*s13^4 - 225*s13^3*s23 + 1598*s13^2*s23^2 + 
              574*s13*s23^3 - 28*s23^4) - s12*s13^2*s23^2*(660*s13^5 + 
              1872*s13^4*s23 + 3110*s13^3*s23^2 + 2203*s13^2*s23^3 - 
              52*s13*s23^4 - 357*s23^5) + s12^5*(-774*s13^5 - 
              2412*s13^4*s23 + 483*s13^3*s23^2 + 2967*s13^2*s23^3 + 
              417*s13*s23^4 + 68*s23^5) - s12^2*s13*s23*(423*s13^6 + 
              2276*s13^5*s23 + 6141*s13^4*s23^2 + 5690*s13^3*s23^3 + 
              1537*s13^2*s23^4 + 578*s13*s23^5 - 45*s23^6) + 
            s12^4*(72*s13^6 - 2727*s13^5*s23 - 4536*s13^4*s23^2 - 
              752*s13^3*s23^3 + 1143*s13^2*s23^4 + 149*s13*s23^5 + 
              87*s23^6) + s12^3*(54*s13^7 - 936*s13^6*s23 - 5412*s13^5*s23^
                2 - 6530*s13^4*s23^3 - 3124*s13^3*s23^4 - 1557*s13^2*s23^5 + 
              103*s13*s23^6 + 29*s23^7)) + p2q^4*p3q^2*s13*
           (-(s13^3*s23^2*(s13 + s23)^3*(19*s13^2 - 29*s23^2)) + 
            s12^7*(54*s13^3 - 423*s13^2*s23 - 660*s13*s23^2 - 209*s23^3) + 
            s12*s13^2*s23^2*(s13 + s23)^2*(248*s13^3 + 78*s13^2*s23 + 
              13*s13*s23^2 + 45*s23^3) + 4*s12^6*(18*s13^4 - 234*s13^3*s23 - 
              569*s13^2*s23^2 - 468*s13*s23^3 - 127*s23^4) - 
            s12^5*(774*s13^5 + 2727*s13^4*s23 + 5412*s13^3*s23^2 + 
              6141*s13^2*s23^3 + 3110*s13*s23^4 + 442*s23^5) - 
            s12^4*(819*s13^6 + 2412*s13^5*s23 + 4536*s13^4*s23^2 + 
              6530*s13^3*s23^3 + 5690*s13^2*s23^4 + 2203*s13*s23^5 + 
              196*s23^6) - s12^3*(18*s13^7 + 225*s13^6*s23 - 483*s13^5*s23^
                2 + 752*s13^4*s23^3 + 3124*s13^3*s23^4 + 1537*s13^2*s23^5 - 
              52*s13*s23^6 + 53*s23^7) + s12^2*s13*(9*s13^7 + 405*s13^6*s23 + 
              1598*s13^5*s23^2 + 2967*s13^4*s23^3 + 1143*s13^3*s23^4 - 
              1557*s13^2*s23^5 - 578*s13*s23^6 + 357*s23^7)) + 
          p1q^4*s23^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23)*
           (p2q^2*(s12 + s23)*(10*s13^2*s23^2*(s13 + s23) + s12^3*(9*s13^2 - 
                s23^2) + s12^2*(9*s13^3 - 2*s13*s23^2 - s23^3)) + 
            p3q^2*(s13 + s23)*(-2*s12*s13^2*s23^2 - s13^2*s23^2*(s13 + s23) + 
              s12^3*(9*s13^2 + 10*s23^2) + s12^2*(9*s13^3 + 10*s23^3)) + 
            p2q*p3q*(8*s12*s13^2*s23^2*(s13 + s23) + s12^4*(9*s13^2 - 
                s23^2) + s13^2*s23^2*(-s13^2 + 8*s13*s23 + 9*s23^2) + 
              2*s12^3*(9*s13^3 + 9*s13^2*s23 + 4*s13*s23^2 + 4*s23^3) + 
              s12^2*(9*s13^4 + 18*s13^3*s23 + 8*s13*s23^3 + 9*s23^4))) + 
          p1q^3*s23*(p2q^3*s23*(s12 + s23)*(s13 + s23)*
             (-10*s13^2*(3*s13 - s23)*s23^2*(s13 + s23)^2 + s12^5*(99*s13^2 + 
                10*s13*s23 - s23^2) + s12^4*(216*s13^3 + 250*s13^2*s23 + 
                23*s13*s23^2 - 3*s23^3) + 2*s12*s13^2*s23*(3*s13^3 - 
                7*s13^2*s23 - 3*s13*s23^2 + 7*s23^3) + s12^3*(135*s13^4 + 
                404*s13^3*s23 + 192*s13^2*s23^2 + 16*s13*s23^3 - 3*s23^4) + 
              s12^2*(18*s13^5 + 170*s13^4*s23 + 193*s13^3*s23^2 + 
                45*s13^2*s23^3 + 3*s13*s23^4 - s23^5)) + 
            p3q^3*s23*(s12 + s23)*(s13 + s23)*(-(s13^2*s23^2*(s13 + s23)^3) + 
              s12*s13^2*s23*(s13 + s23)^2*(10*s13 + 3*s23) + 
              6*s12^5*(3*s13^2 + s13*s23 - 5*s23^2) + s12^4*(135*s13^3 + 
                170*s13^2*s23 - 14*s13*s23^2 - 50*s23^3) + s12^3*(216*s13^4 + 
                404*s13^3*s23 + 193*s13^2*s23^2 - 6*s13*s23^3 - 10*s23^4) + 
              s12^2*(99*s13^5 + 250*s13^4*s23 + 192*s13^3*s23^2 + 
                45*s13^2*s23^3 + 14*s13*s23^4 + 10*s23^5)) + 
            p2q^2*p3q*(-(s13^2*s23^3*(s13 + s23)^3*(17*s13^2 + 48*s13*s23 - 
                 19*s23^2)) - s12^7*s23*(9*s13^2 + 18*s13*s23 + 17*s23^2) + 
              s12^6*s23*(279*s13^3 + 303*s13^2*s23 - 38*s13*s23^2 - 
                70*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(18*s13^3 + 
                8*s13^2*s23 + 137*s13*s23^2 + 119*s23^3) + 
              s12^5*(-144*s13^5 + 443*s13^4*s23 + 1697*s13^3*s23^2 + 
                1083*s13^2*s23^3 - 135*s13*s23^4 - 100*s23^5) + 
              s12^4*(144*s13^6 + 812*s13^5*s23 + 3626*s13^4*s23^2 + 
                5026*s13^3*s23^3 + 1757*s13^2*s23^4 - 369*s13*s23^5 - 
                50*s23^6) + s12^3*s23*(504*s13^6 + 2427*s13^5*s23 + 
                5730*s13^4*s23^2 + 5458*s13^3*s23^3 + 1251*s13^2*s23^4 - 
                395*s13*s23^5 + 5*s23^6) + s12^2*s23*(-9*s13^7 + 
                407*s13^6*s23 + 1484*s13^5*s23^2 + 2258*s13^4*s23^3 + 
                1466*s13^3*s23^4 + 127*s13^2*s23^5 - 141*s13*s23^6 + 
                8*s23^7)) + p2q*p3q^2*(-(s13^2*s23^3*(s13 + s23)^3*
                (17*s13^2 + 19*s13*s23 - 8*s23^2)) - s12^7*s23*(9*s13^2 + 
                18*s13*s23 + 17*s23^2) - s12*s13^2*s23^2*(s13 + s23)^2*(
                18*s13^3 + 2*s13^2*s23 + 113*s13*s23^2 + 141*s23^3) + 
              s12^6*(144*s13^4 + 504*s13^3*s23 + 407*s13^2*s23^2 - 
                44*s13*s23^3 - 99*s23^4) + s12^5*(-144*s13^5 + 812*s13^4*
                 s23 + 2427*s13^3*s23^2 + 1484*s13^2*s23^3 - 171*s13*s23^4 - 
                176*s23^5) + s12^4*s23*(443*s13^5 + 3626*s13^4*s23 + 
                5730*s13^3*s23^2 + 2258*s13^2*s23^3 - 401*s13*s23^4 - 
                104*s23^5) + s12^3*s23*(279*s13^6 + 1697*s13^5*s23 + 
                5026*s13^4*s23^2 + 5458*s13^3*s23^3 + 1466*s13^2*s23^4 - 
                375*s13*s23^5 + 9*s23^6) + s12^2*s23*(-9*s13^7 + 
                303*s13^6*s23 + 1083*s13^5*s23^2 + 1757*s13^4*s23^3 + 
                1251*s13^3*s23^4 + 127*s13^2*s23^5 - 119*s13*s23^6 + 
                19*s23^7))) - p1q^2*(p2q^4*s13*(s13 + s23)*
             (-30*s13^2*(s13 - s23)*s23^4*(s13 + s23)^2 + s12^6*(9*s13^3 + 
                90*s13^2*s23 - 81*s13*s23^2 - 10*s23^3) + s12^5*(18*s13^4 + 
                234*s13^3*s23 + 211*s13^2*s23^2 - 281*s13*s23^3 - 36*s23^4) + 
              6*s12*s13*s23^3*(2*s13^4 + s13^3*s23 + 7*s13^2*s23^2 + 
                9*s13*s23^3 + s23^4) + s12^4*(9*s13^5 + 189*s13^4*s23 + 
                699*s13^3*s23^2 + 62*s13^2*s23^3 - 353*s13*s23^4 - 
                48*s23^5) + s12^3*s23*(45*s13^5 + 486*s13^4*s23 + 
                672*s13^3*s23^2 - 162*s13^2*s23^3 - 181*s13*s23^4 - 
                28*s23^5) + s12^2*s23^2*(79*s13^5 + 351*s13^4*s23 + 
                209*s13^3*s23^2 - 79*s13^2*s23^3 - 22*s13*s23^4 - 6*s23^5)) + 
            p3q^4*s12*(-2*s13^2*s23^4*(s13 + s23)^3*(5*s13 + 3*s23) - 
              s12*s13*s23^3*(s13 + s23)^2*(91*s13^3 + 135*s13^2*s23 + 
                40*s13*s23^2 - 6*s23^3) + s12^6*(9*s13^4 + 45*s13^3*s23 + 
                79*s13^2*s23^2 + 12*s13*s23^3 - 30*s23^4) + s12^5*(18*s13^5 + 
                198*s13^4*s23 + 531*s13^3*s23^2 + 430*s13^2*s23^3 + 
                18*s13*s23^4 - 60*s23^5) + s12^4*s13*(9*s13^5 + 252*s13^4*
                 s23 + 888*s13^3*s23^2 + 1158*s13^2*s23^3 + 560*s13*s23^4 + 
                48*s23^5) + s12^2*s23^2*(9*s13^6 - 70*s13^5*s23 - 
                291*s13^4*s23^2 - 343*s13^3*s23^3 - 101*s13^2*s23^4 + 
                60*s13*s23^5 + 30*s23^6) + s12^3*s23*(99*s13^6 + 
                445*s13^5*s23 + 761*s13^4*s23^2 + 510*s13^3*s23^3 + 
                130*s13^2*s23^4 + 96*s13*s23^5 + 60*s23^6)) + 
            p2q*p3q^3*(s13^2*s23^4*(s13 + s23)^4*(18*s13 + s23) + 
              s12^8*(9*s13^3 + 9*s13^2*s23 - 19*s13*s23^2 - 37*s23^3) + 
              s12*s13^2*s23^3*(s13 + s23)^2*(218*s13^3 + 207*s13^2*s23 + 
                301*s13*s23^2 + 162*s23^3) + s12^7*(207*s13^4 + 747*s13^3*
                 s23 + 846*s13^2*s23^2 + 51*s13*s23^3 - 161*s23^4) + 
              s12^6*(189*s13^5 + 1404*s13^4*s23 + 3883*s13^3*s23^2 + 
                3006*s13^2*s23^3 + 54*s13*s23^4 - 194*s23^5) + 
              s12^5*(-27*s13^6 + 1863*s13^5*s23 + 6576*s13^4*s23^2 + 
                9523*s13^3*s23^3 + 4530*s13^2*s23^4 - 169*s13*s23^5 + 
                4*s23^6) + s12^2*s23^2*(550*s13^7 + 1966*s13^6*s23 + 
                3368*s13^5*s23^2 + 2047*s13^4*s23^3 - 569*s13^3*s23^4 - 
                513*s13^2*s23^5 + 141*s13*s23^6 - 10*s23^7) + 
              s12^3*s23*(252*s13^7 + 2100*s13^6*s23 + 6583*s13^5*s23^2 + 
                6197*s13^4*s23^3 + 395*s13^3*s23^4 - 830*s13^2*s23^5 + 
                234*s13*s23^6 + 37*s23^7) + s12^4*(-18*s13^7 + 765*s13^6*
                 s23 + 5630*s13^5*s23^2 + 10334*s13^4*s23^3 + 7945*s13^3*
                 s23^4 + 2205*s13^2*s23^5 - 60*s13*s23^6 + 121*s23^7)) + 
            p2q^3*p3q*(-(s13^2*s23^3*(s13 + s23)^3*(37*s13^3 + 50*s13^2*s23 - 
                 67*s13*s23^2 + 10*s23^3)) - s12*s13^2*s23^2*(s13 + s23)^2*(
                19*s13^4 - 89*s13^3*s23 + 105*s13^2*s23^2 + 48*s13*s23^3 - 
                141*s23^4) + s12^7*(-18*s13^4 + 252*s13^3*s23 + 550*s13^2*
                 s23^2 + 218*s13*s23^3 + 18*s23^4) + s12^6*(-27*s13^5 + 
                765*s13^4*s23 + 2100*s13^3*s23^2 + 1966*s13^2*s23^3 + 
                643*s13*s23^4 + 73*s23^5) + s12^5*(189*s13^6 + 1863*s13^5*
                 s23 + 5630*s13^4*s23^2 + 6583*s13^3*s23^3 + 3368*s13^2*
                 s23^4 + 933*s13*s23^5 + 112*s23^6) + s12^4*(207*s13^7 + 
                1404*s13^6*s23 + 6576*s13^5*s23^2 + 10334*s13^4*s23^3 + 
                6197*s13^3*s23^4 + 2047*s13^2*s23^5 + 971*s13*s23^6 + 
                78*s23^7) + s12^2*s23*(9*s13^8 + 846*s13^7*s23 + 
                3006*s13^6*s23^2 + 4530*s13^5*s23^3 + 2205*s13^4*s23^4 - 
                830*s13^3*s23^5 - 513*s13^2*s23^6 + 162*s13*s23^7 + s23^8) + 
              s12^3*(9*s13^8 + 747*s13^7*s23 + 3883*s13^6*s23^2 + 
                9523*s13^5*s23^3 + 7945*s13^4*s23^4 + 395*s13^3*s23^5 - 
                569*s13^2*s23^6 + 625*s13*s23^7 + 22*s23^8)) + 
            p2q^2*p3q^2*(s12^7*s23*(414*s13^3 + 912*s13^2*s23 + 
                203*s13*s23^2 - 113*s23^3) + s12^8*(9*s13^3 + 9*s13^2*s23 - 
                19*s13*s23^2 - 37*s23^3) - s13^2*s23^3*(s13 + s23)^3*(
                37*s13^3 + 2*s13^2*s23 - 56*s13*s23^2 + 9*s23^3) - 
              s12*s13^2*s23^2*(s13 + s23)^2*(19*s13^4 - 241*s13^3*s23 - 
                64*s13^2*s23^2 - 221*s13*s23^3 - 303*s23^4) + 
              s12^6*(-405*s13^5 + 72*s13^4*s23 + 2932*s13^3*s23^2 + 
                3229*s13^2*s23^3 + 527*s13*s23^4 - 61*s23^5) + 
              s12^5*(-405*s13^6 + 702*s13^5*s23 + 6481*s13^4*s23^2 + 
                11094*s13^3*s23^3 + 5972*s13^2*s23^4 + 590*s13*s23^5 + 
                116*s23^6) + s12^4*s23*(72*s13^6 + 6481*s13^5*s23 + 
                14574*s13^4*s23^2 + 11412*s13^3*s23^3 + 3749*s13^2*s23^4 + 
                809*s13*s23^5 + 139*s23^6) + s12^2*s23*(9*s13^8 + 
                912*s13^7*s23 + 3229*s13^6*s23^2 + 5972*s13^5*s23^3 + 
                3749*s13^4*s23^4 - 1179*s13^3*s23^5 - 970*s13^2*s23^6 + 
                303*s13*s23^7 - 9*s23^8) + s12^3*(9*s13^8 + 414*s13^7*s23 + 
                2932*s13^6*s23^2 + 11094*s13^5*s23^3 + 11412*s13^4*s23^4 + 
                828*s13^3*s23^5 - 1179*s13^2*s23^6 + 827*s13*s23^7 + 
                29*s23^8))) - p1q*(p2q^5*s13^2*(s13 + s23)*
             (10*s13^2*(s13 - 3*s23)*s23^3*(s13 + s23)^2 + 9*s12^6*(s13^2 + 
                10*s13*s23 + s23^2) + s12^5*(9*s13^3 + 144*s13^2*s23 + 
                400*s13*s23^2 + 41*s23^3) - 4*s12*s13*s23^2*(4*s13^4 + 
                s13^3*s23 + 3*s13^2*s23^2 + 9*s13*s23^3 + 3*s23^4) + 
              s12^4*(-9*s13^4 - 36*s13^3*s23 + 596*s13^2*s23^2 + 
                615*s13*s23^3 + 64*s23^4) + s12^2*s23*(-36*s13^5 - 
                110*s13^4*s23 + 195*s13^3*s23^2 + 315*s13^2*s23^3 + 
                55*s13*s23^4 + 9*s23^5) + s12^3*(-9*s13^5 - 126*s13^4*s23 + 
                111*s13^3*s23^2 + 783*s13^2*s23^3 + 372*s13*s23^4 + 
                41*s23^5)) + p3q^5*s12^2*(s13^2*s23^3*(s13 + s23)^2*(
                9*s13^2 + 23*s13*s23 + 9*s23^2) - s12^6*(9*s13^3 + 
                36*s13^2*s23 + 16*s13*s23^2 - 10*s23^3) - s12^5*s13*(
                9*s13^3 + 135*s13^2*s23 + 146*s13*s23^2 + 20*s23^3) + 
              s12^4*(9*s13^5 - 45*s13^4*s23 - 15*s13^3*s23^2 + 85*s13^2*
                 s23^3 - 16*s13*s23^4 - 60*s23^5) + s12*s13*s23^2*(99*s13^5 + 
                441*s13^4*s23 + 679*s13^3*s23^2 + 413*s13^2*s23^3 + 
                64*s13*s23^4 - 12*s23^5) + s12^3*(9*s13^6 + 153*s13^5*s23 + 
                560*s13^4*s23^2 + 894*s13^3*s23^3 + 510*s13^2*s23^4 - 
                48*s13*s23^5 - 80*s23^6) + s12^2*s23*(99*s13^6 + 
                544*s13^5*s23 + 1211*s13^4*s23^2 + 1155*s13^3*s23^3 + 
                370*s13^2*s23^4 - 48*s13*s23^5 - 30*s23^6)) + 
            p2q*p3q^4*s12*(s12^8*(-9*s13^2 + 19*s23^2) - s12^7*(198*s13^3 + 
                387*s13^2*s23 + 82*s13*s23^2 - 49*s23^3) + s13^2*s23^3*
               (s13 + s23)^2*(190*s13^3 + 187*s13^2*s23 + 164*s13*s23^2 - 
                5*s23^3) + s12^6*(27*s13^4 - 711*s13^3*s23 - 922*s13^2*
                 s23^2 - 107*s13*s23^3 - 44*s23^4) + s12^5*(225*s13^5 - 
                45*s13^4*s23 - 189*s13^3*s23^2 + 34*s13^2*s23^3 - 
                15*s13*s23^4 - 216*s23^5) + s12^4*(-18*s13^6 + 999*s13^5*
                 s23 + 3004*s13^4*s23^2 + 5547*s13^3*s23^3 + 3373*s13^2*
                 s23^4 - 213*s13*s23^5 - 179*s23^6) + s12*s13*s23^2*(
                451*s13^6 + 1743*s13^5*s23 + 3722*s13^4*s23^2 + 3243*s13^3*
                 s23^3 + 411*s13^2*s23^4 - 396*s13*s23^5 + 6*s23^6) + 
              s12^3*(-27*s13^7 + 378*s13^6*s23 + 3773*s13^5*s23^2 + 
                8779*s13^4*s23^3 + 9590*s13^3*s23^4 + 4109*s13^2*s23^5 - 
                393*s13*s23^6 - 17*s23^7) + s12^2*s23*(162*s13^7 + 
                1420*s13^6*s23 + 6065*s13^5*s23^2 + 8588*s13^4*s23^3 + 
                4624*s13^3*s23^4 + 923*s13^2*s23^5 - 164*s13*s23^6 + 
                20*s23^7)) + p2q^4*p3q*s13*(s13^2*s23^2*(s13 + s23)^3*(
                19*s13^3 - 8*s13^2*s23 - 77*s13*s23^2 + 20*s23^3) + 
              s12^7*(-27*s13^3 + 162*s13^2*s23 + 451*s13*s23^2 + 190*s23^3) - 
              s12*s13*s23^2*(s13 + s23)^2*(82*s13^4 - 57*s13^3*s23 + 
                47*s13^2*s23^2 + 176*s13*s23^3 - 6*s23^4) + 
              s12^6*(-18*s13^4 + 378*s13^3*s23 + 1420*s13^2*s23^2 + 
                1743*s13*s23^3 + 567*s23^4) + s12^5*(225*s13^5 + 
                999*s13^4*s23 + 3773*s13^3*s23^2 + 6065*s13^2*s23^3 + 
                3722*s13*s23^4 + 728*s23^5) + s12^4*(27*s13^6 - 
                45*s13^5*s23 + 3004*s13^4*s23^2 + 8779*s13^3*s23^3 + 
                8588*s13^2*s23^4 + 3243*s13*s23^5 + 510*s23^6) + 
              s12^3*(-198*s13^7 - 711*s13^6*s23 - 189*s13^5*s23^2 + 
                5547*s13^4*s23^3 + 9590*s13^3*s23^4 + 4624*s13^2*s23^5 + 
                411*s13*s23^6 + 154*s23^7) + s12^2*(-9*s13^8 - 387*s13^7*
                 s23 - 922*s13^6*s23^2 + 34*s13^5*s23^3 + 3373*s13^4*s23^4 + 
                4109*s13^3*s23^5 + 923*s13^2*s23^6 - 396*s13*s23^7 - 
                5*s23^8)) + p2q^3*p3q^2*(s12^8*(27*s13^3 - 261*s13^2*s23 - 
                209*s13*s23^2 - 19*s23^3) + s13^3*s23^2*(s13 + s23)^3*(
                19*s13^3 - 37*s13^2*s23 - 48*s13*s23^2 + 38*s23^3) - 
              s12^7*s23*(135*s13^3 + 295*s13^2*s23 + 206*s13*s23^2 + 
                58*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(248*s13^4 - 
                67*s13^3*s23 + 164*s13^2*s23^2 + 50*s13*s23^3 - 165*s23^4) - 
              s12^6*(621*s13^5 + 810*s13^4*s23 + 128*s13^3*s23^2 - 
                772*s13^2*s23^3 - 315*s13*s23^4 + 42*s23^5) + 
              s12^5*(-18*s13^6 + 432*s13^5*s23 + 3037*s13^4*s23^2 + 
                6719*s13^3*s23^3 + 4749*s13^2*s23^4 + 717*s13*s23^5 + 
                32*s23^6) + s12^4*(603*s13^7 + 495*s13^6*s23 + 3215*s13^5*
                 s23^2 + 9198*s13^4*s23^3 + 10383*s13^3*s23^4 + 5063*s13^2*
                 s23^5 + 864*s13*s23^6 + 53*s23^7) - s12^2*s13*(9*s13^8 + 
                396*s13^7*s23 + 883*s13^6*s23^2 + 707*s13^5*s23^3 - 
                3238*s13^4*s23^4 - 4795*s13^3*s23^5 + 22*s13^2*s23^6 + 
                1214*s13*s23^7 - 154*s23^8) + s12^3*(18*s13^8 + 243*s13^7*
                 s23 - 48*s13^6*s23^2 + 5802*s13^5*s23^3 + 10099*s13^4*
                 s23^4 + 3090*s13^3*s23^5 - 259*s13^2*s23^6 + 613*s13*s23^7 + 
                18*s23^8)) + p2q^2*p3q^3*(-(s13^3*(19*s13 - 18*s23)*s23^3*
                (s13 + s23)^4) + s12^9*(-9*s13^2 + 19*s23^2) + 
              2*s12^8*(9*s13^3 - 198*s13^2*s23 - 124*s13*s23^2 + 10*s23^3) - 
              s12*s13^2*s23^2*(s13 + s23)^2*(209*s13^4 - 212*s13^3*s23 - 
                100*s13^2*s23^2 - 305*s13*s23^3 - 154*s23^4) + 
              s12^7*(603*s13^4 + 243*s13^3*s23 - 883*s13^2*s23^2 - 
                429*s13*s23^3 - 102*s23^4) - s12^6*(18*s13^5 - 495*s13^4*
                 s23 + 48*s13^3*s23^2 + 707*s13^2*s23^3 + 278*s13*s23^4 + 
                198*s23^5) + s12^5*(-621*s13^6 + 432*s13^5*s23 + 
                3215*s13^4*s23^2 + 5802*s13^3*s23^3 + 3238*s13^2*s23^4 - 
                311*s13*s23^5 - 67*s23^6) + s12^4*s23*(-810*s13^6 + 
                3037*s13^5*s23 + 9198*s13^4*s23^2 + 10099*s13^3*s23^3 + 
                4795*s13^2*s23^4 - 99*s13*s23^5 + 66*s23^6) + 
              s12^2*s13*s23*(-261*s13^7 - 295*s13^6*s23 + 772*s13^5*s23^2 + 
                4749*s13^4*s23^3 + 5063*s13^3*s23^4 - 259*s13^2*s23^5 - 
                1214*s13*s23^6 + 165*s23^7) + s12^3*(27*s13^8 - 135*s13^7*
                 s23 - 128*s13^6*s23^2 + 6719*s13^5*s23^3 + 10383*s13^4*
                 s23^4 + 3090*s13^3*s23^5 - 22*s13^2*s23^6 + 280*s13*s23^7 + 
                38*s23^8)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*
         s13^2*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (ep*(p1q^6*(s12 + s13)*s23^3*(s12 + s23)^2*(s13 + s23)^2*
           (s12 + s13 + s23)*(p3q*(s12^2*s13^3*s23^2*(s13 + s23) + 
              40*s13^4*s23^3*(s13 + s23) - s12*s13^3*s23^2*(s13^2 + 
                41*s13*s23 + 40*s23^2) + s12^5*(9*s13^3 - 10*s13*s23^2 - 
                5*s23^3) + s12^4*(18*s13^4 + 28*s13^3*s23 + 10*s13^2*s23^2 - 
                5*s13*s23^3 - 5*s23^4) + s12^3*s13*(9*s13^4 + 100*s13^3*s23 + 
                92*s13^2*s23^2 + 10*s13*s23^3 + 5*s23^4)) + 
            p2q*(10*s12^2*s13^3*s23^2*(s13 + s23) - 5*s13^4*s23^3*(s13 + 
                s23) - 5*s12*s13^3*s23^2*(2*s13^2 + s13*s23 - s23^2) + 
              s12^5*(9*s13^3 - s13*s23^2 + 40*s23^3) + s12^3*s13*(9*s13^4 + 
                28*s13^3*s23 + 92*s13^2*s23^2 + s13*s23^3 - 40*s23^4) + 
              s12^4*(18*s13^4 + 100*s13^3*s23 + s13^2*s23^2 - 41*s13*s23^3 + 
                40*s23^4))) - p1q^5*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
           (s12 + s13 + s23)*(p2q^2*(-15*s13^4*(s13 - s23)*s23^4*(s13 + s23)^
                2 - 5*s12*s13^3*s23^3*(s13 + s23)^2*(6*s13^2 - 13*s13*s23 + 
                3*s23^2) + s12^7*(9*s13^4 + 9*s13^3*s23 - s13^2*s23^2 + 
                39*s13*s23^3 + 40*s23^4) + s12^2*s13^2*s23^2*(-10*s13^5 + 
                123*s13^4*s23 + 337*s13^3*s23^2 + 304*s13^2*s23^3 + 
                99*s13*s23^4 - s23^5) + s12^6*(27*s13^5 + 190*s13^4*s23 + 
                132*s13^3*s23^2 + 130*s13^2*s23^3 + 161*s13*s23^4 + 
                40*s23^5) + s12^5*(27*s13^6 + 363*s13^5*s23 + 606*s13^4*
                 s23^2 + 494*s13^3*s23^3 + 751*s13^2*s23^4 + 447*s13*s23^5 - 
                40*s23^6) + s12^3*s13*s23*(18*s13^6 + 208*s13^5*s23 + 
                859*s13^4*s23^2 + 897*s13^3*s23^3 + 473*s13^2*s23^4 + 
                407*s13*s23^5 + 202*s23^6) + s12^4*(9*s13^7 + 128*s13^6*s23 + 
                932*s13^5*s23^2 + 1042*s13^4*s23^3 + 730*s13^3*s23^4 + 
                1028*s13^2*s23^5 + 527*s13*s23^6 - 40*s23^7)) + 
            p2q*p3q*(5*s13^4*(41*s13 - 5*s23)*s23^4*(s13 + s23)^2 + 
              s12*s13^3*s23^3*(171*s13^4 + 346*s13^3*s23 + 361*s13^2*s23^2 + 
                373*s13*s23^3 + 187*s23^4) + s12^7*(18*s13^4 + 27*s13^3*s23 + 
                7*s13^2*s23^2 + 171*s13*s23^3 + 205*s23^4) + s12^2*s13^2*s23^
                2*(7*s13^5 + 100*s13^4*s23 + 800*s13^3*s23^2 + 1386*s13^2*
                 s23^3 + 677*s13*s23^4 - 2*s23^5) + s12^6*(54*s13^5 + 
                372*s13^4*s23 + 385*s13^3*s23^2 + 100*s13^2*s23^3 + 
                346*s13*s23^4 + 385*s23^5) + s12^5*(54*s13^6 + 258*s13^5*
                 s23 + 845*s13^4*s23^2 + 1227*s13^3*s23^3 + 800*s13^2*s23^4 + 
                361*s13*s23^5 + 155*s23^6) + s12^3*s13*s23*(27*s13^6 + 
                385*s13^5*s23 + 1227*s13^4*s23^2 + 1591*s13^3*s23^3 + 
                1252*s13^2*s23^4 + 677*s13*s23^5 + 187*s23^6) + 
              s12^4*(18*s13^7 + 372*s13^6*s23 + 845*s13^5*s23^2 + 
                1022*s13^4*s23^3 + 1591*s13^3*s23^4 + 1386*s13^2*s23^5 + 
                373*s13*s23^6 - 25*s23^7)) + p3q^2*(40*s13^4*(s13 - s23)*s23^
                4*(s13 + s23)^2 + s12^7*(9*s13^4 + 18*s13^3*s23 - 
                10*s13^2*s23^2 - 30*s13*s23^3 - 15*s23^4) + s12*s13^3*s23^3*(
                39*s13^4 + 161*s13^3*s23 + 447*s13^2*s23^2 + 527*s13*s23^3 + 
                202*s23^4) + s12^6*(27*s13^5 + 128*s13^4*s23 + 208*s13^3*
                 s23^2 + 123*s13^2*s23^3 + 5*s13*s23^4 - 15*s23^5) - 
              s12^2*s13^2*s23^2*(s13^5 - 130*s13^4*s23 - 751*s13^3*s23^2 - 
                1028*s13^2*s23^3 - 407*s13*s23^4 + s23^5) + s12^3*s13*s23*(
                9*s13^6 + 132*s13^5*s23 + 494*s13^4*s23^2 + 730*s13^3*s23^3 + 
                473*s13^2*s23^4 + 99*s13*s23^5 - 15*s23^6) + 
              s12^5*(27*s13^6 + 363*s13^5*s23 + 932*s13^4*s23^2 + 
                859*s13^3*s23^3 + 337*s13^2*s23^4 + 85*s13*s23^5 + 
                15*s23^6) + s12^4*(9*s13^7 + 190*s13^6*s23 + 606*s13^5*
                 s23^2 + 1042*s13^4*s23^3 + 897*s13^3*s23^4 + 304*s13^2*
                 s23^5 + 35*s13*s23^6 + 15*s23^7))) - (s12 + s13)*
           (p2q^7*s13^4*(s12 + s13)*(s13 + s23)*(5*s13^3*s23^3*(s13 + s23)^3*(
                s13 + 2*s23) + 2*s12^2*s13*s23^2*(s13 + s23)^2*(5*s13^3 - 
                30*s13^2*s23 - 101*s13*s23^2 - 76*s23^3) + 5*s12*s13^2*s23^
                2*(s13 + s23)^2*(s13^3 + 5*s13^2*s23 + 3*s13*s23^2 - 
                2*s23^3) + s12^7*(18*s13^3 - 27*s13^2*s23 + 60*s13*s23^2 + 
                65*s23^3) + s12^6*(36*s13^4 - 63*s13^3*s23 - 161*s13^2*
                 s23^2 + 59*s13*s23^3 + 81*s23^4) + s12^5*(18*s13^5 - 
                63*s13^4*s23 - 635*s13^3*s23^2 - 868*s13^2*s23^3 - 
                501*s13*s23^4 - 147*s23^5) - s12^3*s23^2*(110*s13^5 + 
                752*s13^4*s23 + 1609*s13^3*s23^2 + 1596*s13^2*s23^3 + 
                743*s13*s23^4 + 114*s23^5) - s12^4*s23*(27*s13^5 + 
                529*s13^4*s23 + 1562*s13^3*s23^2 + 1834*s13^2*s23^3 + 
                1091*s13*s23^4 + 277*s23^5)) + p3q^7*s12^4*(s12 + s13)*
             (s12 + s23)*(s13 + s23)*(5*s12^7*s23^2 + s13^3*(65*s13 - 
                114*s23)*s23^3*(s13 + s23)^2 + 5*s12^6*s23^2*(2*s13 + 
                5*s23) + s12*s13^2*s23^2*(60*s13^4 - s13^3*s23 - 
                500*s13^2*s23^2 - 591*s13*s23^3 - 152*s23^4) + 
              s12^5*(18*s13^4 - 45*s13^3*s23 - 65*s13^2*s23^2 + 
                25*s13*s23^3 + 45*s23^4) - s12^2*s13*s23*(27*s13^5 + 
                134*s13^4*s23 + 734*s13^3*s23^2 + 1100*s13^2*s23^3 + 
                496*s13*s23^4 + 10*s23^5) + s12^4*(36*s13^5 - 99*s13^4*s23 - 
                430*s13^3*s23^2 - 322*s13^2*s23^3 + 10*s13*s23^4 + 
                35*s23^5) + s12^3*(18*s13^6 - 81*s13^5*s23 - 554*s13^4*
                 s23^2 - 1008*s13^3*s23^3 - 601*s13^2*s23^4 - 15*s13*s23^5 + 
                10*s23^6)) + p2q^6*p3q*s13^3*(5*s13^4*s23^3*(s13 + s23)^4*(
                11*s13^2 + 3*s13*s23 - 2*s23^2) + s12*s13^4*s23^2*(s13 + s23)^
                3*(55*s13^3 + 263*s13^2*s23 + 305*s13*s23^2 + 132*s23^3) + 
              s12^9*(-72*s13^4 + 258*s13^2*s23^2 + 242*s13*s23^3 + 
                16*s23^4) + s12^2*s13^2*s23^2*(s13 + s23)^2*(198*s13^5 + 
                1499*s13^4*s23 + 2822*s13^3*s23^2 + 1870*s13^2*s23^3 + 
                488*s13*s23^4 + 144*s23^5) + s12^8*(-180*s13^5 + 
                468*s13^4*s23 + 3365*s13^3*s23^2 + 5083*s13^2*s23^3 + 
                2763*s13*s23^4 + 397*s23^5) - s12^3*s13*s23*(s13 + s23)^2*(
                27*s13^6 - 1259*s13^5*s23 - 4660*s13^4*s23^2 - 7553*s13^3*
                 s23^3 - 5027*s13^2*s23^4 - 1117*s13*s23^5 - 230*s23^6) + 
              s12^7*(-126*s13^6 + 1962*s13^5*s23 + 13102*s13^4*s23^2 + 
                26528*s13^3*s23^3 + 22867*s13^2*s23^4 + 7884*s13*s23^5 + 
                611*s23^6) + s12^4*(s13 + s23)^2*(18*s13^7 + 207*s13^6*s23 + 
                2587*s13^5*s23^2 + 11456*s13^4*s23^3 + 16297*s13^3*s23^4 + 
                7498*s13^2*s23^5 + 823*s13*s23^6 + 96*s23^7) + 
              s12^6*(18*s13^7 + 1737*s13^6*s23 + 16360*s13^5*s23^2 + 
                47894*s13^4*s23^3 + 61946*s13^3*s23^4 + 37184*s13^2*s23^5 + 
                8682*s13*s23^6 + 191*s23^7) + s12^5*(54*s13^8 + 513*s13^7*
                 s23 + 8142*s13^6*s23^2 + 37235*s13^5*s23^3 + 70844*s13^4*
                 s23^4 + 64314*s13^3*s23^5 + 27029*s13^2*s23^6 + 
                4104*s13*s23^7 + 57*s23^8)) + p2q^5*p3q^2*s13^2*
             (5*s13^5*s23^3*(s13 + s23)^4*(10*s13^2 - 9*s13*s23 - 4*s23^2) + 
              s12*s13^4*s23^2*(s13 + s23)^3*(50*s13^4 + 175*s13^3*s23 + 
                226*s13^2*s23^2 - 26*s13*s23^3 - 172*s23^4) + 
              s12^10*(108*s13^4 - 410*s13^2*s23^2 - 241*s13*s23^3 + 
                11*s23^4) + s12^2*s13^3*s23^2*(s13 + s23)^2*(180*s13^5 + 
                1896*s13^4*s23 + 3390*s13^3*s23^2 + 777*s13^2*s23^3 - 
                1096*s13*s23^4 - 229*s23^5) + s12^9*(180*s13^5 - 
                972*s13^4*s23 - 3840*s13^3*s23^2 - 4613*s13^2*s23^3 - 
                2181*s13*s23^4 - 176*s23^5) - s12^3*s13^2*s23*(s13 + s23)^2*(
                54*s13^6 - 1783*s13^5*s23 - 4587*s13^4*s23^2 - 6993*s13^3*
                 s23^3 - 1851*s13^2*s23^4 + 3849*s13*s23^5 + 566*s23^6) - 
              s12^8*(18*s13^6 + 3735*s13^5*s23 + 16633*s13^4*s23^2 + 
                27486*s13^3*s23^3 + 20967*s13^2*s23^4 + 7171*s13*s23^5 + 
                674*s23^6) - s12^7*(198*s13^7 + 99*s13^6*s23 + 8602*s13^5*
                 s23^2 + 35273*s13^4*s23^3 + 56990*s13^3*s23^4 + 
                43392*s13^2*s23^5 + 13670*s13*s23^6 + 856*s23^7) - 
              s12^6*(126*s13^8 - 2025*s13^7*s23 - 13016*s13^6*s23^2 - 
                14079*s13^5*s23^3 + 24603*s13^4*s23^4 + 64298*s13^3*s23^5 + 
                49997*s13^2*s23^6 + 13915*s13*s23^7 + 449*s23^8) + 
              s12^4*s13*(36*s13^9 + 198*s13^8*s23 + 1213*s13^7*s23^2 + 
                14110*s13^6*s23^3 + 37906*s13^5*s23^4 + 31886*s13^4*s23^5 - 
                7621*s13^3*s23^6 - 23711*s13^2*s23^7 - 9620*s13*s23^8 - 
                569*s23^9) + s12^5*(18*s13^9 - 387*s13^8*s23 + 7183*s13^7*
                 s23^2 + 33690*s13^6*s23^3 + 42164*s13^5*s23^4 - 
                7033*s13^4*s23^5 - 49633*s13^3*s23^6 - 32423*s13^2*s23^7 - 
                6045*s13*s23^8 - 80*s23^9)) + p2q^2*p3q^5*s12^2*
             (50*s12^11*s23^2*(s13 + s23) + s13^5*s23^4*(s13 + s23)^3*(
                11*s13^2 - 209*s13*s23 - 80*s23^2) + s12^10*(36*s13^4 - 
                54*s13^3*s23 + 180*s13^2*s23^2 + 325*s13*s23^3 + 155*s23^4) - 
              s12*s13^4*s23^3*(s13 + s23)^2*(241*s13^4 + 1699*s13^3*s23 + 
                3532*s13^2*s23^2 + 4907*s13*s23^3 + 569*s23^4) + 
              s12^9*(18*s13^5 + 198*s13^4*s23 + 1675*s13^3*s23^2 + 
                2256*s13^2*s23^3 + 901*s13*s23^4 + 100*s23^5) + 
              s12^8*(-126*s13^6 - 387*s13^5*s23 + 1213*s13^4*s23^2 + 
                8099*s13^3*s23^3 + 7362*s13^2*s23^4 + 1227*s13*s23^5 - 
                150*s23^6) + s12^7*(-198*s13^7 + 2025*s13^6*s23 + 
                7183*s13^5*s23^2 + 14110*s13^4*s23^3 + 17950*s13^3*s23^4 + 
                9453*s13^2*s23^5 + 603*s13*s23^6 - 250*s23^7) - 
              s12^3*s13^2*s23^2*(3840*s13^7 + 27486*s13^6*s23 + 56990*s13^5*
                 s23^2 + 64298*s13^4*s23^3 + 49633*s13^3*s23^4 + 
                23711*s13^2*s23^5 + 4981*s13*s23^6 + 229*s23^7) - 
              s12^2*s13^3*s23^2*(410*s13^7 + 4613*s13^6*s23 + 20967*s13^5*
                 s23^2 + 43392*s13^4*s23^3 + 49997*s13^3*s23^4 + 
                32423*s13^2*s23^5 + 9620*s13*s23^6 + 566*s23^7) + 
              s12^6*(-18*s13^8 - 99*s13^7*s23 + 13016*s13^6*s23^2 + 
                33690*s13^5*s23^3 + 37906*s13^4*s23^4 + 20424*s13^3*s23^5 + 
                3848*s13^2*s23^6 - 368*s13*s23^7 - 125*s23^8) + 
              s12^4*s13*(108*s13^9 - 972*s13^8*s23 - 16633*s13^7*s23^2 - 
                35273*s13^6*s23^3 - 24603*s13^5*s23^4 - 7033*s13^4*s23^5 - 
                7621*s13^3*s23^6 - 6413*s13^2*s23^7 - 1554*s13*s23^8 - 
                172*s23^9) + s12^5*(180*s13^9 - 3735*s13^8*s23 - 
                8602*s13^7*s23^2 + 14079*s13^6*s23^3 + 42164*s13^5*s23^4 + 
                31886*s13^4*s23^5 + 6846*s13^3*s23^6 - 1644*s13^2*s23^7 - 
                542*s13*s23^8 - 20*s23^9)) + p2q*p3q^6*s12^3*
             (55*s12^10*s23^2*(s13 + s23) + s13^4*s23^4*(s13 + s23)^2*(
                16*s13^3 + 365*s13^2*s23 - 135*s13*s23^2 + 96*s23^3) + 
              s12^9*(18*s13^4 - 27*s13^3*s23 + 198*s13^2*s23^2 + 
                428*s13*s23^3 + 235*s23^4) + s12^8*(54*s13^5 + 243*s13^4*
                 s23 + 1205*s13^3*s23^2 + 1895*s13^2*s23^3 + 1259*s13*s23^4 + 
                380*s23^5) + s12*s13^3*s23^3*(242*s13^6 + 2763*s13^5*s23 + 
                7884*s13^4*s23^2 + 8682*s13^3*s23^3 + 4104*s13^2*s23^4 + 
                1015*s13*s23^5 + 230*s23^6) + s12^7*(18*s13^6 + 513*s13^5*
                 s23 + 3019*s13^4*s23^2 + 7151*s13^3*s23^3 + 6018*s13^2*
                 s23^4 + 1891*s13*s23^5 + 270*s23^6) + s12^3*s13^2*s23^2*(
                3365*s13^6 + 26528*s13^5*s23 + 61946*s13^4*s23^2 + 
                64314*s13^3*s23^3 + 32116*s13^2*s23^4 + 7491*s13*s23^5 + 
                776*s23^6) + s12^6*(-126*s13^7 + 1737*s13^6*s23 + 
                8142*s13^5*s23^2 + 16837*s13^4*s23^3 + 18132*s13^3*s23^4 + 
                9013*s13^2*s23^5 + 1574*s13*s23^6 + 55*s23^7) + 
              s12^2*s13^2*s23^2*(258*s13^7 + 5083*s13^6*s23 + 22867*s13^5*
                 s23^2 + 37184*s13^4*s23^3 + 27029*s13^3*s23^4 + 
                9240*s13^2*s23^5 + 1577*s13*s23^6 + 144*s23^7) + 
              s12^5*(-180*s13^8 + 1962*s13^7*s23 + 16360*s13^6*s23^2 + 
                37235*s13^5*s23^3 + 41796*s13^4*s23^4 + 24793*s13^3*s23^5 + 
                7050*s13^2*s23^6 + 701*s13*s23^7 - 25*s23^8) + 
              2*s12^4*(-36*s13^9 + 234*s13^8*s23 + 6551*s13^7*s23^2 + 
                23947*s13^6*s23^3 + 35422*s13^5*s23^4 + 25774*s13^4*s23^5 + 
                9362*s13^3*s23^6 + 1495*s13^2*s23^7 + 66*s13*s23^8 - 
                5*s23^9)) + p2q^3*p3q^4*s12*(-2*s13^6*s23^4*(s13 + s23)^3*(
                21*s13^2 + 127*s13*s23 + 86*s23^2) + s12^11*(18*s13^4 - 
                27*s13^3*s23 - 3*s13^2*s23^2 - 58*s13*s23^3 - 50*s23^4) - 
              s12*s13^5*s23^3*(s13 + s23)^2*(118*s13^4 + 1017*s13^3*s23 + 
                2939*s13^2*s23^2 + 2659*s13*s23^3 + 659*s23^4) + 
              2*s12^2*s13^4*s23^2*(s13 + s23)^2*(36*s13^5 - 689*s13^4*s23 - 
                2520*s13^3*s23^2 - 6024*s13^2*s23^3 - 7209*s13*s23^4 - 
                1199*s23^5) - s12^10*(90*s13^5 + 36*s13^4*s23 - 442*s13^3*
                 s23^2 - 253*s13^2*s23^3 + 265*s13*s23^4 + 210*s23^5) - 
              s12^9*(198*s13^6 + 342*s13^5*s23 + 2073*s13^4*s23^2 + 
                937*s13^3*s23^3 + 167*s13^2*s23^4 + 859*s13*s23^5 + 
                340*s23^6) - s12^8*(18*s13^7 - 3204*s13^6*s23 - 6533*s13^5*
                 s23^2 + 1634*s13^4*s23^3 + 8422*s13^3*s23^4 + 5288*s13^2*
                 s23^5 + 1911*s13*s23^6 + 260*s23^7) + s12^3*s13^3*s23*(
                36*s13^8 - 11*s13^7*s23 - 809*s13^6*s23^2 - 28896*s13^5*
                 s23^3 - 100046*s13^4*s23^4 - 145000*s13^3*s23^5 - 
                102376*s13^2*s23^6 - 31817*s13*s23^7 - 2529*s23^8) + 
              s12^5*s13*s23*(2016*s13^8 - 15470*s13^7*s23 - 86685*s13^6*
                 s23^2 - 175368*s13^5*s23^3 - 196328*s13^4*s23^4 - 
                129618*s13^3*s23^5 - 44595*s13^2*s23^6 - 6020*s13*s23^7 - 
                344*s23^8) + s12^7*(252*s13^8 - 2511*s13^7*s23 + 
                229*s13^6*s23^2 + 529*s13^5*s23^3 - 14878*s13^4*s23^4 - 
                24440*s13^3*s23^5 - 13164*s13^2*s23^6 - 2359*s13*s23^7 - 
                90*s23^8) + s12^6*(252*s13^9 - 4626*s13^8*s23 - 30823*s13^7*
                 s23^2 - 60327*s13^6*s23^3 - 76906*s13^5*s23^4 - 
                74643*s13^4*s23^5 - 44612*s13^3*s23^6 - 13367*s13^2*s23^7 - 
                1444*s13*s23^8 - 10*s23^9) - s12^4*s13^2*(72*s13^9 - 
                630*s13^8*s23 - 4648*s13^7*s23^2 + 24776*s13^6*s23^3 + 
                123113*s13^5*s23^4 + 223457*s13^4*s23^5 + 209419*s13^3*
                 s23^6 + 99657*s13^2*s23^7 + 19936*s13*s23^8 + 952*s23^9)) - 
            p2q^4*p3q^3*s13*(10*s13^6*s23^4*(s13 + s23)^4*(5*s13 + s23) + 
              s12*s13^5*s23^3*(s13 + s23)^3*(58*s13^3 + 91*s13^2*s23 + 
                412*s13*s23^2 + 344*s23^3) + 2*s12^11*(36*s13^4 - 
                18*s13^3*s23 - 36*s13^2*s23^2 + 59*s13*s23^3 + 21*s23^4) + 
              s12^10*s23*(-630*s13^4 + 11*s13^3*s23 + 1234*s13^2*s23^2 + 
                1253*s13*s23^3 + 380*s23^4) + s12^2*s13^4*s23^2*(s13 + s23)^
                2*(3*s13^5 - 259*s13^4*s23 + 682*s13^3*s23^2 + 4183*s13^2*
                 s23^3 + 4116*s13*s23^4 + 952*s23^5) + s12^9*(-252*s13^6 - 
                2016*s13^5*s23 - 4648*s13^4*s23^2 + 809*s13^3*s23^3 + 
                7724*s13^2*s23^4 + 5091*s13*s23^5 + 1060*s23^6) + 
              s12^3*s13^3*s23*(s13 + s23)^2*(27*s13^6 - 496*s13^5*s23 + 
                1902*s13^4*s23^2 + 5114*s13^3*s23^3 + 12310*s13^2*s23^4 + 
                14878*s13*s23^5 + 2529*s23^6) + s12^8*(-252*s13^7 + 
                4626*s13^6*s23 + 15470*s13^5*s23^2 + 24776*s13^4*s23^3 + 
                28896*s13^3*s23^4 + 23506*s13^2*s23^5 + 9554*s13*s23^6 + 
                1320*s23^7) + s12^7*(18*s13^8 + 2511*s13^7*s23 + 
                30823*s13^6*s23^2 + 86685*s13^5*s23^3 + 123113*s13^4*s23^4 + 
                100046*s13^3*s23^5 + 43554*s13^2*s23^6 + 8916*s13*s23^7 + 
                770*s23^8) + s12^6*(198*s13^9 - 3204*s13^8*s23 - 
                229*s13^7*s23^2 + 60327*s13^6*s23^3 + 175368*s13^5*s23^4 + 
                223457*s13^4*s23^5 + 145000*s13^3*s23^6 + 43282*s13^2*s23^7 + 
                3977*s13*s23^8 + 172*s23^9) + s12^5*s13*(90*s13^9 + 
                342*s13^8*s23 - 6533*s13^7*s23^2 - 529*s13^6*s23^3 + 
                76906*s13^5*s23^4 + 196328*s13^4*s23^5 + 209419*s13^3*s23^6 + 
                102376*s13^2*s23^7 + 19214*s13*s23^8 + 659*s23^9) + 
              s12^4*s13^2*(-18*s13^9 + 36*s13^8*s23 + 2073*s13^7*s23^2 + 
                1634*s13^6*s23^3 + 14878*s13^5*s23^4 + 74643*s13^4*s23^5 + 
                129618*s13^3*s23^6 + 99657*s13^2*s23^7 + 31817*s13*s23^8 + 
                2398*s23^9))) + p1q*(-(p3q^6*s12^3*(s12 + s13)*(s12 + s23)*
              (5*s12^9*s23^2*(s13 + s23) - s13^4*s23^3*(s13 + s23)^3*
                (65*s13^2 + 48*s13*s23 - 116*s23^2) - s12*s13^3*s23^2*
                (s13 + s23)^2*(60*s13^4 + 51*s13^3*s23 - 20*s13^2*s23^2 - 
                 682*s13*s23^3 - 585*s23^4) + s12^8*(9*s13^4 + 9*s13^3*s23 + 
                 10*s13*s23^3 + 10*s23^4) + s12^7*(54*s13^5 - 222*s13^3*
                  s23^2 - 243*s13^2*s23^3 - 115*s13*s23^4 - 40*s23^5) + s12^6*
                (90*s13^6 - 144*s13^5*s23 - 929*s13^4*s23^2 - 1224*s13^3*
                  s23^3 - 774*s13^2*s23^4 - 375*s13*s23^5 - 130*s23^6) + 
               s12^5*(36*s13^7 - 333*s13^6*s23 - 1163*s13^5*s23^2 - 
                 1214*s13^4*s23^3 - 574*s13^3*s23^4 - 409*s13^2*s23^5 - 
                 380*s13*s23^6 - 125*s23^7) + s12^2*s13^2*s23*(27*s13^7 + 
                 232*s13^6*s23 + 965*s13^5*s23^2 + 2458*s13^4*s23^3 + 
                 4753*s13^3*s23^4 + 5562*s13^2*s23^5 + 3062*s13*s23^6 + 
                 555*s23^7) + s12^4*(-27*s13^8 - 252*s13^7*s23 - 
                 27*s13^6*s23^2 + 1373*s13^5*s23^3 + 3096*s13^4*s23^4 + 
                 3083*s13^3*s23^5 + 1087*s13^2*s23^6 - 115*s13*s23^7 - 
                 40*s23^8) + s12^3*s13*(-18*s13^8 - 27*s13^7*s23 + 
                 716*s13^6*s23^2 + 2682*s13^5*s23^3 + 5342*s13^4*s23^4 + 
                 7016*s13^3*s23^5 + 5141*s13^2*s23^6 + 1520*s13*s23^7 + 
                 10*s23^8))) - p2q^6*s13^3*(s12 + s13)*(s13 + s23)*
             (5*s13^4*s23^3*(s13 + s23)^3*(s13^2 - s13*s23 - 8*s23^2) - 
              s12^2*s13^2*s23^3*(s13 + s23)^2*(243*s13^3 + 288*s13^2*s23 - 
                410*s13*s23^2 - 555*s23^3) - s12^9*(18*s13^3 - 27*s13^2*s23 + 
                60*s13*s23^2 + 65*s23^3) + 5*s12*s13^3*s23^2*(s13 + s23)^2*(
                s13^4 - 24*s13^2*s23^2 - 27*s13*s23^3 + 2*s23^4) - 
              s12^8*(27*s13^4 + 27*s13^3*s23 - 232*s13^2*s23^2 + 
                171*s13*s23^3 + 243*s23^4) + s12^7*(36*s13^5 - 252*s13^4*
                 s23 + 716*s13^3*s23^2 + 965*s13^2*s23^3 - 142*s13*s23^4 - 
                223*s23^5) + s12^6*(90*s13^6 - 333*s13^5*s23 - 27*s13^4*
                 s23^2 + 2682*s13^3*s23^3 + 2458*s13^2*s23^4 + 671*s13*
                 s23^5 + 139*s23^6) + s12^5*(54*s13^7 - 144*s13^6*s23 - 
                1163*s13^5*s23^2 + 1373*s13^4*s23^3 + 5342*s13^3*s23^4 + 
                4753*s13^2*s23^5 + 1969*s13*s23^6 + 300*s23^7) + 
              s12^3*s13*s23*(9*s13^7 - 222*s13^6*s23 - 1224*s13^5*s23^2 - 
                574*s13^4*s23^3 + 3083*s13^3*s23^4 + 5141*s13^2*s23^5 + 
                3062*s13*s23^6 + 585*s23^7) + s12^4*(9*s13^8 - 929*s13^6*
                 s23^2 - 1214*s13^5*s23^3 + 3096*s13^4*s23^4 + 7016*s13^3*
                 s23^5 + 5562*s13^2*s23^6 + 1852*s13*s23^7 + 116*s23^8)) + 
            p2q^4*p3q^2*s13*(-5*s13^6*s23^3*(s13 + s23)^4*(10*s13^3 - 
                47*s13^2*s23 + 29*s13*s23^2 + 10*s23^3) + s12^12*(54*s13^4 - 
                9*s13^3*s23 - 119*s13^2*s23^2 + 126*s13*s23^3 + 92*s23^4) + 
              2*s12^11*s23*(-459*s13^4 - 405*s13^3*s23 + 559*s13^2*s23^2 + 
                723*s13*s23^3 + 233*s23^4) - s12*s13^5*s23^2*(s13 + s23)^3*(
                50*s13^5 + 21*s13^4*s23 - 626*s13^3*s23^2 - 1014*s13^2*
                 s23^3 - 91*s13*s23^4 + 546*s23^5) - 2*s12^10*(171*s13^6 + 
                1422*s13^5*s23 + 2809*s13^4*s23^2 + 727*s13^3*s23^3 - 
                2616*s13^2*s23^4 - 1765*s13*s23^5 - 245*s23^6) - 
              s12^2*s13^4*s23^2*(s13 + s23)^2*(216*s13^6 + 925*s13^5*s23 - 
                4565*s13^4*s23^2 - 12622*s13^3*s23^3 - 5285*s13^2*s23^4 + 
                2702*s13*s23^5 + 799*s23^6) + s12^3*s13^3*s23*(s13 + s23)^2*(
                45*s13^7 - 1272*s13^6*s23 + 5239*s13^5*s23^2 + 20157*s13^4*
                 s23^3 + 32718*s13^3*s23^4 + 15479*s13^2*s23^5 - 
                7399*s13*s23^6 - 1084*s23^7) + s12^9*(171*s13^7 + 
                5013*s13^6*s23 + 13290*s13^5*s23^2 + 20815*s13^4*s23^3 + 
                21977*s13^3*s23^4 + 10123*s13^2*s23^5 + 113*s13*s23^6 - 
                740*s23^7) + s12^8*(1881*s13^8 + 12537*s13^7*s23 + 
                44809*s13^6*s23^2 + 95519*s13^5*s23^3 + 120341*s13^4*s23^4 + 
                75114*s13^3*s23^5 + 8112*s13^2*s23^6 - 9117*s13*s23^7 - 
                1880*s23^8) + s12^7*(2286*s13^9 + 6435*s13^8*s23 + 
                25913*s13^7*s23^2 + 112061*s13^6*s23^3 + 243518*s13^5*s23^4 + 
                245255*s13^4*s23^5 + 91696*s13^3*s23^6 - 10283*s13^2*s23^7 - 
                11893*s13*s23^8 - 1358*s23^9) + s12^4*s13^2*(-45*s13^10 + 
                504*s13^9*s23 + 6203*s13^8*s23^2 + 19697*s13^7*s23^3 + 
                67417*s13^6*s23^4 + 167513*s13^5*s23^5 + 206429*s13^4*s23^6 + 
                100350*s13^3*s23^7 - 6283*s13^2*s23^8 - 15756*s13*s23^9 - 
                1413*s23^10) + s12^5*s13*(-9*s13^10 + 4113*s13^9*s23 + 
                9775*s13^8*s23^2 + 18763*s13^7*s23^3 + 115075*s13^6*s23^4 + 
                293430*s13^5*s23^5 + 294821*s13^4*s23^6 + 93817*s13^3*s23^7 - 
                21881*s13^2*s23^8 - 13588*s13*s23^9 - 966*s23^10) + 
              s12^6*(900*s13^10 + 4500*s13^9*s23 + 1877*s13^8*s23^2 + 
                43565*s13^7*s23^3 + 216536*s13^6*s23^4 + 361225*s13^5*s23^5 + 
                241267*s13^4*s23^6 + 32003*s13^3*s23^7 - 24442*s13^2*s23^8 - 
                5839*s13*s23^9 - 334*s23^10)) + p2q^2*p3q^4*s12*
             (-50*s12^13*s23^2*(s13 + s23) + 2*s13^6*s23^4*(s13 + s23)^3*(
                46*s13^3 + 95*s13^2*s23 - 178*s13*s23^2 - 167*s23^3) + 
              s12^12*(-45*s13^4 + 45*s13^3*s23 - 216*s13^2*s23^2 - 
                171*s13*s23^3 + 35*s23^4) + s12*s13^5*s23^3*(s13 + s23)^2*(
                126*s13^5 + 1194*s13^4*s23 + 1016*s13^3*s23^2 - 3113*s13^2*
                 s23^3 - 3907*s13*s23^4 - 966*s23^5) + s12^11*(-9*s13^5 + 
                504*s13^4*s23 - 1182*s13^3*s23^2 - 1357*s13^2*s23^3 + 
                413*s13*s23^4 + 495*s23^5) + s12^10*(900*s13^6 + 
                4113*s13^5*s23 + 6203*s13^4*s23^2 + 2740*s13^3*s23^3 + 
                2499*s13^2*s23^4 + 2779*s13*s23^5 + 580*s23^6) - 
              s12^2*s13^4*s23^2*(s13 + s23)^2*(119*s13^6 - 1356*s13^5*s23 - 
                2639*s13^4*s23^2 - 3489*s13^3*s23^3 + 1505*s13^2*s23^4 + 
                10762*s13*s23^5 + 1413*s23^6) + s12^9*(2286*s13^7 + 
                4500*s13^6*s23 + 9775*s13^5*s23^2 + 19697*s13^4*s23^3 + 
                29363*s13^3*s23^4 + 20827*s13^2*s23^5 + 4990*s13*s23^6 - 
                180*s23^7) + s12^8*(1881*s13^8 + 6435*s13^7*s23 + 
                1877*s13^6*s23^2 + 18763*s13^5*s23^3 + 67417*s13^4*s23^4 + 
                78271*s13^3*s23^5 + 35094*s13^2*s23^6 + 3395*s13*s23^7 - 
                645*s23^8) + s12^5*s13*s23*(-2844*s13^9 + 13290*s13^8*s23 + 
                95519*s13^7*s23^2 + 243518*s13^6*s23^3 + 361225*s13^5*s23^4 + 
                294821*s13^4*s23^5 + 100350*s13^3*s23^6 - 403*s13^2*s23^7 - 
                4300*s13*s23^8 - 546*s23^9) + s12^7*(171*s13^9 + 
                12537*s13^8*s23 + 25913*s13^7*s23^2 + 43565*s13^6*s23^3 + 
                115075*s13^5*s23^4 + 167513*s13^4*s23^5 + 101072*s13^3*
                 s23^6 + 20490*s13^2*s23^7 - 351*s13*s23^8 - 345*s23^9) - 
              s12^3*s13^3*s23*(9*s13^9 + 810*s13^8*s23 + 1454*s13^7*s23^2 - 
                21977*s13^6*s23^3 - 75114*s13^5*s23^4 - 91696*s13^4*s23^5 - 
                32003*s13^3*s23^6 + 21881*s13^2*s23^7 + 15756*s13*s23^8 + 
                1084*s23^9) + s12^4*s13^2*(54*s13^10 - 918*s13^9*s23 - 
                5618*s13^8*s23^2 + 20815*s13^7*s23^3 + 120341*s13^6*s23^4 + 
                245255*s13^5*s23^5 + 241267*s13^4*s23^6 + 93817*s13^3*s23^7 - 
                6283*s13^2*s23^8 - 9567*s13*s23^9 - 799*s23^10) + 
              s12^6*(-342*s13^10 + 5013*s13^9*s23 + 44809*s13^8*s23^2 + 
                112061*s13^7*s23^3 + 216536*s13^6*s23^4 + 293430*s13^5*
                 s23^5 + 206429*s13^4*s23^6 + 56277*s13^3*s23^7 - 
                918*s13^2*s23^8 - 1547*s13*s23^9 - 50*s23^10)) + 
            p2q*p3q^5*s12^2*(-55*s12^12*s23^2*(s13 + s23) + 
              s13^5*s23^4*(s13 + s23)^3*(81*s13^3 + 120*s13^2*s23 - 
                59*s13*s23^2 + 2*s23^3) + s12^11*(-36*s13^4 + 9*s13^3*s23 - 
                174*s13^2*s23^2 - 154*s13*s23^3 + 15*s23^4) - 
              s12^10*(252*s13^5 + 225*s13^4*s23 + 824*s13^3*s23^2 + 
                377*s13^2*s23^3 - 964*s13*s23^4 - 680*s23^5) + 
              s12*s13^4*s23^3*(s13 + s23)^2*(367*s13^5 + 1687*s13^4*s23 + 
                3898*s13^3*s23^2 + 4240*s13^2*s23^3 + 241*s13*s23^4 + 
                303*s23^5) + s12^9*(-450*s13^6 - 99*s13^5*s23 + 1555*s13^4*
                 s23^2 + 2583*s13^3*s23^3 + 4893*s13^2*s23^4 + 4684*s13*
                 s23^5 + 1440*s23^6) + s12^8*(-126*s13^7 - 1764*s13^6*s23 + 
                2690*s13^5*s23^2 + 15914*s13^4*s23^3 + 26818*s13^3*s23^4 + 
                21533*s13^2*s23^5 + 8136*s13*s23^6 + 1185*s23^7) + 
              s12^7*(288*s13^8 - 3294*s13^7*s23 - 8278*s13^6*s23^2 + 
                18064*s13^5*s23^3 + 66315*s13^4*s23^4 + 72743*s13^3*s23^5 + 
                35342*s13^2*s23^6 + 7079*s13*s23^7 + 335*s23^8) + 
              s12^2*s13^3*s23^2*(291*s13^8 + 4215*s13^7*s23 + 20648*s13^6*
                 s23^2 + 51199*s13^5*s23^3 + 72855*s13^4*s23^4 + 
                56794*s13^3*s23^5 + 21412*s13^2*s23^6 + 3674*s13*s23^7 + 
                676*s23^8) + s12^6*(144*s13^9 - 81*s13^8*s23 - 9962*s13^7*
                 s23^2 + 7223*s13^6*s23^3 + 91625*s13^5*s23^4 + 148461*s13^4*
                 s23^5 + 98028*s13^3*s23^6 + 28119*s13^2*s23^7 + 
                3107*s13*s23^8 - 50*s23^9) + s12^3*s13^2*s23*(-9*s13^9 + 
                2741*s13^8*s23 + 21528*s13^7*s23^2 + 68959*s13^6*s23^3 + 
                140711*s13^5*s23^4 + 170914*s13^4*s23^5 + 110091*s13^3*
                 s23^6 + 33714*s13^2*s23^7 + 4592*s13*s23^8 + 385*s23^9) + 
              s12^5*(-90*s13^10 + 1737*s13^9*s23 + 6104*s13^8*s23^2 + 
                22202*s13^7*s23^3 + 106875*s13^6*s23^4 + 208625*s13^5*s23^5 + 
                179995*s13^4*s23^6 + 70417*s13^3*s23^7 + 11220*s13^2*s23^8 + 
                523*s13*s23^9 - 30*s23^10) + s12^4*s13*(-54*s13^10 + 
                414*s13^9*s23 + 9808*s13^8*s23^2 + 37850*s13^7*s23^3 + 
                109162*s13^6*s23^4 + 211806*s13^5*s23^5 + 222211*s13^4*
                 s23^6 + 114022*s13^3*s23^7 + 25646*s13^2*s23^8 + 
                2391*s13*s23^9 - 20*s23^10)) + p2q^5*p3q*s13^2*
             (-5*s13^5*s23^3*(s13 + s23)^4*(11*s13^3 - 47*s13^2*s23 - 
                14*s13*s23^2 + 6*s23^3) + s12^11*(-54*s13^4 - 9*s13^3*s23 + 
                291*s13^2*s23^2 + 367*s13*s23^3 + 81*s23^4) - 
              s12*s13^4*s23^2*(s13 + s23)^3*(55*s13^5 - 11*s13^4*s23 - 
                1096*s13^3*s23^2 - 1418*s13^2*s23^3 - 583*s13*s23^4 + 
                20*s23^5) + s12^10*(-90*s13^5 + 414*s13^4*s23 + 2741*s13^3*
                 s23^2 + 4215*s13^2*s23^3 + 2421*s13*s23^4 + 363*s23^5) - 
              s12^2*s13^3*s23^2*(s13 + s23)^2*(174*s13^6 + 29*s13^5*s23 - 
                5125*s13^4*s23^2 - 11312*s13^3*s23^3 - 7593*s13^2*s23^4 - 
                1621*s13*s23^5 - 385*s23^6) + s12^9*(144*s13^6 + 
                1737*s13^5*s23 + 9808*s13^4*s23^2 + 21528*s13^3*s23^3 + 
                20648*s13^2*s23^4 + 7639*s13*s23^5 + 544*s23^6) + 
              s12^8*(288*s13^7 - 81*s13^6*s23 + 6104*s13^5*s23^2 + 
                37850*s13^4*s23^3 + 68959*s13^3*s23^4 + 51199*s13^2*s23^5 + 
                13723*s13*s23^6 + 266*s23^7) + s12^3*s13^2*s23*(s13 + s23)^2*(
                9*s13^7 - 842*s13^6*s23 + 4258*s13^5*s23^2 + 19144*s13^4*
                 s23^3 + 30197*s13^3*s23^4 + 18490*s13^2*s23^5 + 
                3240*s13*s23^6 + 676*s23^7) + s12^7*(-126*s13^8 - 
                3294*s13^7*s23 - 9962*s13^6*s23^2 + 22202*s13^5*s23^3 + 
                109162*s13^4*s23^4 + 140711*s13^3*s23^5 + 72855*s13^2*s23^6 + 
                12619*s13*s23^7 - 51*s23^8) + s12^6*(-450*s13^9 - 
                1764*s13^8*s23 - 8278*s13^7*s23^2 + 7223*s13^6*s23^3 + 
                106875*s13^5*s23^4 + 211806*s13^4*s23^5 + 170914*s13^3*
                 s23^6 + 56794*s13^2*s23^7 + 5025*s13*s23^8 - 53*s23^9) + 
              s12^5*(-252*s13^10 - 99*s13^9*s23 + 2690*s13^8*s23^2 + 
                18064*s13^7*s23^3 + 91625*s13^6*s23^4 + 208625*s13^5*s23^5 + 
                222211*s13^4*s23^6 + 110091*s13^3*s23^7 + 21412*s13^2*s23^8 + 
                847*s13*s23^9 + 2*s23^10) + s12^4*s13*(-36*s13^10 - 
                225*s13^9*s23 + 1555*s13^8*s23^2 + 15914*s13^7*s23^3 + 
                66315*s13^6*s23^4 + 148461*s13^5*s23^5 + 179995*s13^4*s23^6 + 
                114022*s13^3*s23^7 + 33714*s13^2*s23^8 + 3674*s13*s23^9 + 
                303*s23^10)) - p2q^3*p3q^3*(-10*s13^7*s23^4*(s13 + s23)^4*(
                5*s13^2 - 13*s13*s23 - 2*s23^2) - s12*s13^6*s23^3*(s13 + s23)^
                3*(8*s13^4 + 3*s13^3*s23 + 218*s13^2*s23^2 - 782*s13*s23^3 - 
                860*s23^4) + s12^13*(18*s13^4 - 27*s13^3*s23 + 47*s13^2*
                 s23^2 - 8*s13*s23^3 - 50*s23^4) - s12^12*(90*s13^5 + 
                414*s13^4*s23 - 408*s13^3*s23^2 - 455*s13^2*s23^3 + 
                27*s13*s23^4 + 70*s23^5) - s12^11*(252*s13^6 + 324*s13^5*
                 s23 + 2052*s13^4*s23^2 + 2660*s13^3*s23^3 + 1461*s13^2*
                 s23^4 + 251*s13*s23^5 - 240*s23^6) + s12^2*s13^5*s23^2*
               (s13 + s23)^2*(47*s13^6 + 361*s13^5*s23 - 2230*s13^4*s23^2 - 
                4067*s13^3*s23^3 + 4963*s13^2*s23^4 + 8333*s13*s23^5 + 
                2152*s23^6) - s12^3*s13^4*s23*(s13 + s23)^2*(27*s13^7 - 
                462*s13^6*s23 + 3557*s13^5*s23^2 + 6345*s13^4*s23^3 + 
                7557*s13^3*s23^4 - 6407*s13^2*s23^5 - 21494*s13*s23^6 - 
                3476*s23^7) + s12^10*(972*s13^7 + 9270*s13^6*s23 + 
                15592*s13^5*s23^2 + 3284*s13^4*s23^3 - 12997*s13^3*s23^4 - 
                8166*s13^2*s23^5 + 111*s13*s23^6 + 660*s23^7) + 
              s12^9*(3384*s13^8 + 13959*s13^7*s23 + 35205*s13^6*s23^2 + 
                29076*s13^5*s23^3 - 11448*s13^4*s23^4 - 23804*s13^3*s23^5 - 
                5401*s13^2*s23^6 + 2549*s13*s23^7 + 590*s23^8) + 
              s12^8*(3384*s13^9 + 9504*s13^8*s23 + 11432*s13^7*s23^2 - 
                9529*s13^6*s23^3 - 63477*s13^5*s23^4 - 75162*s13^4*s23^5 - 
                15052*s13^3*s23^6 + 14192*s13^2*s23^7 + 4708*s13*s23^8 + 
                210*s23^9) + s12^7*(972*s13^10 + 13959*s13^9*s23 + 
                11432*s13^8*s23^2 - 63316*s13^7*s23^3 - 200828*s13^6*s23^4 - 
                234085*s13^5*s23^5 - 89136*s13^4*s23^6 + 26751*s13^3*s23^7 + 
                23781*s13^2*s23^8 + 3362*s13*s23^9 + 20*s23^10) + 
              s12^6*s13*(-252*s13^10 + 9270*s13^9*s23 + 35205*s13^8*s23^2 - 
                9529*s13^7*s23^3 - 200828*s13^6*s23^4 - 346964*s13^5*s23^5 - 
                212782*s13^4*s23^6 + 10390*s13^3*s23^7 + 52871*s13^2*s23^8 + 
                12637*s13*s23^9 + 860*s23^10) + 2*s12^4*s13^3*(9*s13^10 - 
                207*s13^9*s23 - 1026*s13^8*s23^2 + 1642*s13^7*s23^3 - 
                5724*s13^6*s23^4 - 37581*s13^5*s23^5 - 44568*s13^4*s23^6 + 
                5195*s13^3*s23^7 + 37761*s13^2*s23^8 + 19141*s13*s23^9 + 
                1738*s23^10) + s12^5*s13^2*(-90*s13^10 - 324*s13^9*s23 + 
                15592*s13^8*s23^2 + 29076*s13^7*s23^3 - 63477*s13^6*s23^4 - 
                234085*s13^5*s23^5 - 212782*s13^4*s23^6 - 6316*s13^3*s23^7 + 
                75522*s13^2*s23^8 + 28446*s13*s23^9 + 2152*s23^10))) + 
          p1q^4*s23*(-(p3q^3*(s12 + s23)*(s13 + s23)*(40*s13^6*s23^5*
                (s13 + s23)^3 - s12*s13^4*s23^4*(s13 + s23)^2*(83*s13^3 + 
                 83*s13^2*s23 - 202*s13*s23^2 - 162*s23^3) + s12^10*
                (9*s13^4 - 10*s13^2*s23^2 + 10*s23^4) + s12^9*(36*s13^5 - 
                 64*s13^4*s23 - 333*s13^3*s23^2 - 359*s13^2*s23^3 - 
                 140*s13*s23^4 - 25*s23^5) + s12^8*(54*s13^6 - 445*s13^5*
                  s23 - 1913*s13^4*s23^2 - 2380*s13^3*s23^3 - 1319*s13^2*
                  s23^4 - 460*s13*s23^5 - 125*s23^6) + s12^2*s13^3*s23^3*
                (-132*s13^6 - 1157*s13^5*s23 - 2509*s13^4*s23^2 - 
                 1623*s13^3*s23^3 + 394*s13^2*s23^4 + 694*s13*s23^5 + 
                 161*s23^6) - s12^4*s13^2*s23*(54*s13^7 + 292*s13^6*s23 + 
                 2122*s13^5*s23^2 + 5740*s13^4*s23^3 + 5718*s13^3*s23^4 + 
                 1017*s13^2*s23^5 - 1241*s13*s23^6 - 396*s23^7) + s12^7*
                (36*s13^7 - 1005*s13^6*s23 - 4019*s13^5*s23^2 - 5541*s13^4*
                  s23^3 - 3744*s13^3*s23^4 - 1499*s13^2*s23^5 - 465*s13*
                  s23^6 - 125*s23^7) - s12^3*s13^2*s23^2*(23*s13^7 + 
                 816*s13^6*s23 + 3938*s13^5*s23^2 + 6203*s13^4*s23^3 + 
                 3253*s13^3*s23^4 - 360*s13^2*s23^5 - 544*s13*s23^6 + 
                 11*s23^7) + s12^6*(9*s13^8 - 985*s13^7*s23 - 3827*s13^6*
                  s23^2 - 6093*s13^5*s23^3 - 4771*s13^4*s23^4 - 1444*s13^3*
                  s23^5 - 9*s13^2*s23^6 - 110*s13*s23^7 - 25*s23^8) + s12^5*
                s23*(-415*s13^8 - 1667*s13^7*s23 - 4011*s13^6*s23^2 - 
                 5072*s13^5*s23^3 - 2115*s13^4*s23^4 + 1111*s13^3*s23^5 + 
                 927*s13^2*s23^6 + 35*s13*s23^7 + 10*s23^8))) + 
            p2q^3*(s13 + s23)*(-5*s13^5*s23^5*(s13 + s23)^3*(2*s13^2 - 
                11*s13*s23 + 2*s23^2) - 5*s12*s13^5*s23^4*(s13 + s23)^2*(
                2*s13^3 - 37*s13^2*s23 - 45*s13*s23^2 + 9*s23^3) + 
              s12^10*s23*(54*s13^4 + 23*s13^3*s23 + 132*s13^2*s23^2 + 
                83*s13*s23^3 - 40*s23^4) + s12^2*s13^3*s23^3*(s13 + s23)^2*(
                10*s13^5 + 479*s13^4*s23 + 811*s13^3*s23^2 - 137*s13^2*
                 s23^3 - 418*s13*s23^4 + 11*s23^5) + s12^9*(-9*s13^6 + 
                415*s13^5*s23 + 346*s13^4*s23^2 + 839*s13^3*s23^3 + 
                1289*s13^2*s23^4 + 332*s13*s23^5 - 160*s23^6) + 
              s12^8*(-36*s13^7 + 976*s13^6*s23 + 2082*s13^5*s23^2 + 
                2414*s13^4*s23^3 + 4754*s13^3*s23^4 + 3666*s13^2*s23^5 + 
                296*s13*s23^6 - 240*s23^7) + s12^3*s13^2*s23^2*(10*s13^8 + 
                692*s13^7*s23 + 3699*s13^6*s23^2 + 5243*s13^5*s23^3 + 
                1453*s13^4*s23^4 - 2038*s13^3*s23^5 - 1637*s13^2*s23^6 - 
                533*s13*s23^7 - 161*s23^8) + s12^7*(-54*s13^8 + 969*s13^7*
                 s23 + 4812*s13^6*s23^2 + 5678*s13^5*s23^3 + 7862*s13^4*
                 s23^4 + 10141*s13^3*s23^5 + 4132*s13^2*s23^6 - 
                436*s13*s23^7 - 160*s23^8) + s12^5*s13*(-9*s13^9 + 
                28*s13^8*s23 + 2358*s13^7*s23^2 + 9560*s13^6*s23^3 + 
                10864*s13^5*s23^4 + 7187*s13^4*s23^5 + 6735*s13^3*s23^6 + 
                2893*s13^2*s23^7 - 1088*s13*s23^8 - 688*s23^9) + 
              s12^4*s13*s23*(-9*s13^9 + 397*s13^8*s23 + 4293*s13^7*s23^2 + 
                9285*s13^6*s23^3 + 6215*s13^5*s23^4 + 1004*s13^4*s23^5 - 
                224*s13^3*s23^6 - 904*s13^2*s23^7 - 855*s13*s23^8 - 
                162*s23^9) + s12^6*(-36*s13^9 + 391*s13^8*s23 + 5024*s13^7*
                 s23^2 + 9920*s13^6*s23^3 + 9083*s13^5*s23^4 + 11458*s13^4*
                 s23^5 + 9456*s13^3*s23^6 + 1229*s13^2*s23^7 - 1009*s13*
                 s23^8 - 40*s23^9)) + p2q*p3q^2*(5*s13^5*s23^5*(s13 + s23)^4*(
                34*s13^2 - 39*s13*s23 + 6*s23^2) + s12*s13^4*s23^4*
               (s13 + s23)^3*(317*s13^4 + 907*s13^3*s23 + 934*s13^2*s23^2 + 
                225*s13*s23^3 - 324*s23^4) + s12^11*(-9*s13^5 + 
                46*s13^3*s23^2 + 346*s13^2*s23^3 + 739*s13*s23^4 + 
                430*s23^5) + s12^2*s13^3*s23^3*(s13 + s23)^2*(165*s13^6 + 
                2133*s13^5*s23 + 7984*s13^4*s23^2 + 10656*s13^3*s23^3 + 
                3747*s13^2*s23^4 - 1054*s13*s23^5 - 351*s23^6) + 
              s12^10*(-162*s13^6 + 137*s13^5*s23 + 1241*s13^4*s23^2 + 
                2373*s13^3*s23^3 + 3918*s13^2*s23^4 + 4022*s13*s23^5 + 
                1575*s23^6) + s12^3*s13^2*s23^2*(s13 + s23)^2*(27*s13^7 + 
                1718*s13^6*s23 + 11456*s13^5*s23^2 + 25214*s13^4*s23^3 + 
                20928*s13^3*s23^4 + 4367*s13^2*s23^5 - 1577*s13*s23^6 - 
                134*s23^7) + s12^9*(-126*s13^7 + 1359*s13^6*s23 + 
                7552*s13^5*s23^2 + 15397*s13^4*s23^3 + 18514*s13^3*s23^4 + 
                15727*s13^2*s23^5 + 8478*s13*s23^6 + 1975*s23^7) + 
              s12^8*(216*s13^8 + 2518*s13^7*s23 + 15261*s13^6*s23^2 + 
                41606*s13^5*s23^3 + 62256*s13^4*s23^4 + 56873*s13^3*s23^5 + 
                31319*s13^2*s23^6 + 8885*s13*s23^7 + 750*s23^8) + 
              s12^7*(207*s13^9 + 2975*s13^8*s23 + 15677*s13^7*s23^2 + 
                52134*s13^6*s23^3 + 105927*s13^5*s23^4 + 127124*s13^4*s23^5 + 
                88555*s13^3*s23^6 + 33113*s13^2*s23^7 + 4760*s13*s23^8 - 
                300*s23^9) + s12^6*(18*s13^10 + 2220*s13^9*s23 + 
                12418*s13^8*s23^2 + 42658*s13^7*s23^3 + 104239*s13^6*s23^4 + 
                162547*s13^5*s23^5 + 148654*s13^4*s23^6 + 73712*s13^3*s23^7 + 
                17032*s13^2*s23^8 + 939*s13*s23^9 - 245*s23^10) + 
              s12^4*s13*s23*(9*s13^10 + 1254*s13^9*s23 + 11379*s13^8*s23^2 + 
                46495*s13^7*s23^3 + 104499*s13^6*s23^4 + 134251*s13^5*s23^5 + 
                95020*s13^4*s23^6 + 31761*s13^3*s23^7 + 2117*s13^2*s23^8 - 
                899*s13*s23^9 - 162*s23^10) + s12^5*s23*(550*s13^10 + 
                6512*s13^9*s23 + 28712*s13^8*s23^2 + 79945*s13^7*s23^3 + 
                145003*s13^6*s23^4 + 159780*s13^5*s23^5 + 98880*s13^4*s23^6 + 
                29454*s13^3*s23^7 + 2318*s13^2*s23^8 - 293*s13*s23^9 - 
                25*s23^10)) + p2q^2*p3q*(5*s13^5*s23^5*(s13 + s23)^4*(
                86*s13^2 - 29*s13*s23 - 5*s23^2) + s12*s13^4*s23^4*
               (s13 + s23)^3*(739*s13^4 + 1805*s13^3*s23 + 846*s13^2*s23^2 + 
                193*s13*s23^3 - 162*s23^4) + s12^11*s23*(9*s13^4 + 
                27*s13^3*s23 + 165*s13^2*s23^2 + 317*s13*s23^3 + 170*s23^4) + 
              s12^2*s13^3*s23^3*(s13 + s23)^2*(346*s13^6 + 3226*s13^5*s23 + 
                8929*s13^4*s23^2 + 10235*s13^3*s23^3 + 3714*s13^2*s23^4 - 
                631*s13*s23^5 - 134*s23^6) + s12^10*(18*s13^6 + 550*s13^5*
                 s23 + 1254*s13^4*s23^2 + 1772*s13^3*s23^3 + 2463*s13^2*
                 s23^4 + 1858*s13*s23^5 + 485*s23^6) + s12^3*s13^2*s23^2*
               (s13 + s23)^2*(46*s13^7 + 2281*s13^6*s23 + 13906*s13^5*s23^2 + 
                26780*s13^4*s23^3 + 21089*s13^3*s23^4 + 4754*s13^2*s23^5 - 
                1143*s13*s23^6 - 351*s23^7) + s12^9*(207*s13^7 + 
                2220*s13^6*s23 + 6512*s13^5*s23^2 + 11379*s13^4*s23^3 + 
                14919*s13^3*s23^4 + 12415*s13^2*s23^5 + 4606*s13*s23^6 + 
                270*s23^7) + s12^8*(216*s13^8 + 2975*s13^7*s23 + 
                12418*s13^6*s23^2 + 28712*s13^5*s23^3 + 46495*s13^4*s23^4 + 
                49844*s13^3*s23^5 + 28757*s13^2*s23^6 + 6065*s13*s23^7 - 
                370*s23^8) + s12^7*(-126*s13^9 + 2518*s13^8*s23 + 
                15677*s13^7*s23^2 + 42658*s13^6*s23^3 + 79945*s13^5*s23^4 + 
                104499*s13^4*s23^5 + 82812*s13^3*s23^6 + 33043*s13^2*s23^7 + 
                4060*s13*s23^8 - 430*s23^9) + s12^4*s13*s23^2*(1241*s13^9 + 
                15397*s13^8*s23 + 62256*s13^7*s23^2 + 127124*s13^6*s23^3 + 
                148654*s13^5*s23^4 + 98880*s13^4*s23^5 + 31761*s13^3*s23^6 + 
                1079*s13^2*s23^7 - 1756*s13*s23^8 - 324*s23^9) + 
              s12^6*(-162*s13^10 + 1359*s13^9*s23 + 15261*s13^8*s23^2 + 
                52134*s13^7*s23^3 + 104239*s13^6*s23^4 + 145003*s13^5*s23^5 + 
                134251*s13^4*s23^6 + 71437*s13^3*s23^7 + 17096*s13^2*s23^8 + 
                637*s13*s23^9 - 75*s23^10) + s12^5*(-9*s13^11 + 137*s13^10*
                 s23 + 7552*s13^9*s23^2 + 41606*s13^8*s23^3 + 105927*s13^7*
                 s23^4 + 162547*s13^6*s23^5 + 159780*s13^5*s23^6 + 
                95020*s13^4*s23^7 + 28085*s13^3*s23^8 + 1288*s13^2*s23^9 - 
                747*s13*s23^10 + 30*s23^11))) + 
          p1q^2*(-(p3q^5*s12^2*(s12 + s13)*(s12 + s23)*(s13 + s23)*
              (5*s13^4*s23^4*(s13 + s23)^2*(23*s13^2 + 47*s13*s23 + 
                 32*s23^2) + 3*s12^9*(3*s13^3 - 5*s13*s23^2 - 5*s23^3) + 
               s12^8*(27*s13^4 - 27*s13^3*s23 - 103*s13^2*s23^2 - 
                 95*s13*s23^3 - 75*s23^4) - s12^7*s23*(144*s13^4 + 
                 29*s13^3*s23 - 127*s13^2*s23^2 + 60*s13*s23^3 + 75*s23^4) + 
               s12*s13^3*s23^3*(23*s13^5 + 652*s13^4*s23 + 2136*s13^3*s23^2 + 
                 2288*s13^2*s23^3 + 621*s13*s23^4 - 160*s23^5) + s12^2*s13^2*
                s23^2*(-86*s13^6 + 123*s13^5*s23 + 1507*s13^4*s23^2 + 
                 3060*s13^3*s23^3 + 1446*s13^2*s23^4 - 941*s13*s23^5 - 
                 625*s23^6) + s12^6*(-72*s13^6 - 153*s13^5*s23 + 1015*s13^4*
                  s23^2 + 2347*s13^3*s23^3 + 1521*s13^2*s23^4 + 285*s13*
                  s23^5 + 75*s23^6) + s12^3*s13*s23*(99*s13^7 + 349*s13^6*
                  s23 + 1223*s13^5*s23^2 + 2839*s13^4*s23^3 + 2742*s13^3*
                  s23^4 - 224*s13^2*s23^5 - 1153*s13*s23^6 - 30*s23^7) + 
               s12^5*(-81*s13^7 + 117*s13^6*s23 + 2337*s13^5*s23^2 + 
                 5099*s13^4*s23^3 + 5006*s13^3*s23^4 + 2346*s13^2*s23^5 + 
                 415*s13*s23^6 + 150*s23^7) + s12^4*(-27*s13^8 + 252*s13^7*
                  s23 + 1816*s13^6*s23^2 + 4082*s13^5*s23^3 + 5270*s13^4*
                  s23^4 + 3223*s13^3*s23^5 + 527*s13^2*s23^6 + 120*s13*
                  s23^7 + 60*s23^8))) - p2q^5*s13^2*(s12 + s13)*(s13 + s23)*
             (-15*s13^4*s23^4*(s13 + s23)^3*(s13^2 + 2*s13*s23 - 4*s23^2) - 
              5*s12*s13^3*s23^3*(s13 + s23)^2*(6*s13^4 + 22*s13^3*s23 - 
                23*s13^2*s23^2 - 48*s13*s23^3 + 6*s23^4) + s12^9*(-27*s13^4 + 
                99*s13^3*s23 - 86*s13^2*s23^2 + 23*s13*s23^3 + 115*s23^4) + 
              s12^8*(-81*s13^5 + 225*s13^4*s23 + 448*s13^3*s23^2 + 
                37*s13^2*s23^3 + 675*s13*s23^4 + 580*s23^5) - 
              s12^2*s13^2*s23^2*(s13 + s23)^2*(15*s13^5 + 168*s13^4*s23 - 
                418*s13^3*s23^2 - 1138*s13^2*s23^3 - 67*s13*s23^4 + 
                625*s23^5) + 2*s12^7*(-36*s13^6 + 18*s13^5*s23 + 
                1034*s13^4*s23^2 + 786*s13^3*s23^3 + 815*s13^2*s23^4 + 
                1394*s13*s23^5 + 605*s23^6) + s12^6*s23*(-225*s13^6 + 
                2454*s13^5*s23 + 5898*s13^4*s23^2 + 4062*s13^3*s23^3 + 
                4567*s13^2*s23^4 + 4424*s13*s23^5 + 1300*s23^6) + 
              s12^3*s13*s23*(9*s13^8 - 130*s13^7*s23 + 98*s13^6*s23^2 + 
                3868*s13^5*s23^3 + 7352*s13^4*s23^4 + 3750*s13^3*s23^5 - 
                1377*s13^2*s23^6 - 1566*s13*s23^7 - 160*s23^8) + 
              s12^5*(27*s13^8 - 144*s13^7*s23 + 862*s13^6*s23^2 + 
                7436*s13^5*s23^3 + 9352*s13^4*s23^4 + 5581*s13^3*s23^5 + 
                4506*s13^2*s23^6 + 2909*s13*s23^7 + 715*s23^8) + 
              s12^4*(9*s13^9 - 173*s13^7*s23^2 + 3362*s13^6*s23^3 + 
                10105*s13^5*s23^4 + 8493*s13^4*s23^5 + 2518*s13^3*s23^6 + 
                505*s13^2*s23^7 + 461*s13*s23^8 + 160*s23^9)) - 
            p2q^4*p3q*s13*(-10*s13^5*s23^4*(s13 + s23)^4*(25*s13^3 - 
                40*s13^2*s23 - 12*s13*s23^2 + 3*s23^3) - s12*s13^4*s23^3*
               (s13 + s23)^3*(334*s13^5 + 775*s13^4*s23 - 1024*s13^3*s23^2 - 
                1842*s13^2*s23^3 - 917*s13*s23^4 + 10*s23^5) + 
              s12^11*(63*s13^5 + 423*s13^4*s23 + 621*s13^3*s23^2 + 
                371*s13^2*s23^3 + 404*s13*s23^4 + 214*s23^5) + 
              s12^10*(198*s13^6 + 1575*s13^5*s23 + 3358*s13^4*s23^2 + 
                4581*s13^3*s23^3 + 5524*s13^2*s23^4 + 4122*s13*s23^5 + 
                1198*s23^6) - s12^2*s13^3*s23^2*(s13 + s23)^2*(84*s13^7 + 
                1563*s13^6*s23 + 4847*s13^5*s23^2 - 454*s13^4*s23^3 - 
                11920*s13^3*s23^4 - 9174*s13^2*s23^5 - 1278*s13*s23^6 - 
                252*s23^7) + s12^9*(9*s13^7 + 963*s13^6*s23 + 2322*s13^5*
                 s23^2 + 5910*s13^4*s23^3 + 16558*s13^3*s23^4 + 22975*s13^2*
                 s23^5 + 12929*s13*s23^6 + 2370*s23^7) + s12^3*s13^2*s23*
               (s13 + s23)^2*(18*s13^8 - 648*s13^7*s23 - 8240*s13^6*s23^2 - 
                8905*s13^5*s23^3 + 10821*s13^4*s23^4 + 28592*s13^3*s23^5 + 
                17185*s13^2*s23^6 + 1422*s13*s23^7 + 73*s23^8) + 
              s12^8*(-414*s13^8 + 801*s13^7*s23 + 2253*s13^6*s23^2 - 
                1921*s13^5*s23^3 + 12113*s13^4*s23^4 + 46521*s13^3*s23^5 + 
                47342*s13^2*s23^6 + 17793*s13*s23^7 + 1900*s23^8) + 
              s12^7*(-243*s13^9 + 2205*s13^8*s23 + 9319*s13^7*s23^2 - 
                1022*s13^6*s23^3 - 8717*s13^5*s23^4 + 44879*s13^4*s23^5 + 
                91361*s13^3*s23^6 + 55612*s13^2*s23^7 + 10764*s13*s23^8 + 
                250*s23^9) + s12^6*(198*s13^10 + 459*s13^9*s23 + 
                6090*s13^8*s23^2 + 4520*s13^7*s23^3 - 14757*s13^6*s23^4 + 
                23891*s13^5*s23^5 + 112407*s13^4*s23^6 + 108706*s13^3*s23^7 + 
                35422*s13^2*s23^8 + 1358*s13*s23^9 - 426*s23^10) + 
              s12^4*s13*(18*s13^11 - 27*s13^10*s23 - 4893*s13^9*s23^2 - 
                19823*s13^8*s23^3 - 29012*s13^7*s23^4 + 5465*s13^6*s23^5 + 
                87014*s13^5*s23^6 + 130730*s13^4*s23^7 + 82939*s13^3*s23^8 + 
                19906*s13^2*s23^9 - 136*s13*s23^10 - 321*s23^11) + 
              s12^5*(171*s13^11 - 801*s13^10*s23 - 4926*s13^9*s23^2 - 
                9061*s13^8*s23^3 - 14154*s13^7*s23^4 + 16710*s13^6*s23^5 + 
                106938*s13^5*s23^6 + 141175*s13^4*s23^7 + 69858*s13^3*s23^8 + 
                9121*s13^2*s23^9 - 1145*s13*s23^10 - 162*s23^11)) - 
            p2q^2*p3q^3*(10*s13^6*s23^5*(s13 + s23)^4*(14*s13^2 - 
                11*s13*s23 - s23^2) + s12^13*(9*s13^4 + 9*s13^3*s23 - 
                69*s13^2*s23^2 - 259*s13*s23^3 - 190*s23^4) - 
              s12*s13^5*s23^4*(s13 + s23)^3*(7*s13^4 - 227*s13^3*s23 - 
                1171*s13^2*s23^2 - 44*s13*s23^3 + 668*s23^4) - 
              s12^12*(54*s13^5 + 621*s13^4*s23 + 1005*s13^3*s23^2 + 
                1795*s13^2*s23^3 + 1452*s13*s23^4 + 325*s23^5) - 
              s12^11*(666*s13^6 + 2988*s13^5*s23 + 7986*s13^4*s23^2 + 
                13591*s13^3*s23^3 + 10691*s13^2*s23^4 + 2609*s13*s23^5 - 
                415*s23^6) - s12^2*s13^4*s23^3*(s13 + s23)^2*(379*s13^6 + 
                1947*s13^5*s23 - 3099*s13^4*s23^2 - 11822*s13^3*s23^3 - 
                4315*s13^2*s23^4 + 3600*s13*s23^5 + 1225*s23^6) - 
              s12^10*(1062*s13^7 - 297*s13^6*s23 + 4069*s13^5*s23^2 + 
                25368*s13^4*s23^3 + 38524*s13^3*s23^4 + 18785*s13^2*s23^5 + 
                211*s13*s23^6 - 1070*s23^7) - s12^3*s13^3*s23^2*(s13 + s23)^
                2*(385*s13^7 + 3258*s13^6*s23 - 2218*s13^5*s23^2 - 
                18528*s13^4*s23^3 - 27930*s13^3*s23^4 - 14204*s13^2*s23^5 + 
                6027*s13*s23^6 + 833*s23^7) + s12^9*(216*s13^8 + 
                5445*s13^7*s23 + 15944*s13^6*s23^2 - 6155*s13^5*s23^3 - 
                46775*s13^4*s23^4 - 32354*s13^3*s23^5 + 1936*s13^2*s23^6 + 
                5185*s13*s23^7 + 280*s23^8) + s12^8*(1314*s13^9 + 
                6597*s13^8*s23 + 25045*s13^7*s23^2 + 16602*s13^6*s23^3 - 
                36569*s13^5*s23^4 - 29820*s13^4*s23^5 + 33873*s13^3*s23^6 + 
                35915*s13^2*s23^7 + 6556*s13*s23^8 - 545*s23^9) + 
              s12^4*s13^2*s23*(-288*s13^10 - 939*s13^9*s23 + 5271*s13^8*
                 s23^2 + 21354*s13^7*s23^3 + 60635*s13^6*s23^4 + 
                136061*s13^5*s23^5 + 170846*s13^4*s23^6 + 98194*s13^3*s23^7 + 
                12934*s13^2*s23^8 - 5924*s13*s23^9 - 652*s23^10) + 
              s12^7*(630*s13^10 + 10098*s13^9*s23 + 28526*s13^8*s23^2 + 
                29755*s13^7*s23^3 - 18977*s13^6*s23^4 - 20762*s13^5*s23^5 + 
                71821*s13^4*s23^6 + 92530*s13^3*s23^7 + 32569*s13^2*s23^8 + 
                2343*s13*s23^9 - 345*s23^10) + s12^5*s13*(-45*s13^11 + 
                324*s13^10*s23 + 13162*s13^9*s23^2 + 35586*s13^8*s23^3 + 
                44227*s13^7*s23^4 + 74205*s13^6*s23^5 + 171554*s13^5*s23^6 + 
                208053*s13^4*s23^7 + 102146*s13^3*s23^8 + 10607*s13^2*s23^9 - 
                2785*s13*s23^10 - 516*s23^11) + s12^6*(-54*s13^11 + 
                6903*s13^10*s23 + 30160*s13^9*s23^2 + 44817*s13^8*s23^3 + 
                21520*s13^7*s23^4 + 32851*s13^6*s23^5 + 126985*s13^5*s23^6 + 
                155622*s13^4*s23^7 + 67948*s13^3*s23^8 + 6277*s13^2*s23^9 - 
                749*s13*s23^10 - 40*s23^11)) - p2q*p3q^4*s12*
             (2*s13^5*s23^5*(s13 + s23)^3*(107*s13^3 + 278*s13^2*s23 + 
                30*s13*s23^2 - 81*s23^3) + 2*s12^12*(9*s13^4 + 9*s13^3*s23 - 
                42*s13^2*s23^2 - 167*s13*s23^3 - 125*s23^4) + 
              s12^11*(171*s13^5 - 27*s13^4*s23 - 612*s13^3*s23^2 - 
                1731*s13^2*s23^3 - 1777*s13*s23^4 - 600*s23^5) + 
              s12*s13^4*s23^4*(s13 + s23)^2*(404*s13^5 + 3314*s13^4*s23 + 
                5897*s13^3*s23^2 + 2685*s13^2*s23^3 - 503*s13*s23^4 - 
                321*s23^5) + s12^2*s13^3*s23^3*(s13 + s23)^2*(371*s13^6 + 
                4782*s13^5*s23 + 13040*s13^4*s23^2 + 16480*s13^3*s23^3 + 
                9612*s13^2*s23^4 - 282*s13*s23^5 + 73*s23^6) + 
              s12^10*(198*s13^6 - 801*s13^5*s23 - 4893*s13^4*s23^2 - 
                9518*s13^3*s23^3 - 8057*s13^2*s23^4 - 2303*s13*s23^5 + 
                220*s23^6) - s12^9*(243*s13^7 - 459*s13^6*s23 + 4926*s13^5*
                 s23^2 + 19823*s13^4*s23^3 + 26033*s13^3*s23^4 + 
                10803*s13^2*s23^5 - 2255*s13*s23^6 - 1850*s23^7) + 
              s12^8*(-414*s13^8 + 2205*s13^7*s23 + 6090*s13^6*s23^2 - 
                9061*s13^5*s23^3 - 29012*s13^4*s23^4 - 15229*s13^3*s23^5 + 
                7981*s13^2*s23^6 + 8740*s13*s23^7 + 1950*s23^8) + 
              s12^3*s13^2*s23^2*(621*s13^9 + 4581*s13^8*s23 + 16558*s13^7*
                 s23^2 + 46521*s13^6*s23^3 + 91361*s13^5*s23^4 + 
                108706*s13^4*s23^5 + 69858*s13^3*s23^6 + 19906*s13^2*s23^7 + 
                1568*s13*s23^8 + 252*s23^9) + s12^7*(9*s13^9 + 801*s13^8*
                 s23 + 9319*s13^7*s23^2 + 4520*s13^6*s23^3 - 14154*s13^5*
                 s23^4 + 5465*s13^4*s23^5 + 41329*s13^3*s23^6 + 33468*s13^2*
                 s23^7 + 9291*s13*s23^8 + 700*s23^9) + s12^6*s13*(198*s13^9 + 
                963*s13^8*s23 + 2253*s13^7*s23^2 - 1022*s13^6*s23^3 - 
                14757*s13^5*s23^4 + 16710*s13^4*s23^5 + 87014*s13^3*s23^6 + 
                85190*s13^2*s23^7 + 31546*s13*s23^8 + 4563*s23^9) + 
              s12^4*s13*s23*(423*s13^10 + 3358*s13^9*s23 + 5910*s13^8*s23^2 + 
                12113*s13^7*s23^3 + 44879*s13^6*s23^4 + 112407*s13^5*s23^5 + 
                141175*s13^4*s23^6 + 82939*s13^3*s23^7 + 20102*s13^2*s23^8 + 
                1782*s13*s23^9 - 10*s23^10) + s12^5*(63*s13^11 + 
                1575*s13^10*s23 + 2322*s13^9*s23^2 - 1921*s13^8*s23^3 - 
                8717*s13^7*s23^4 + 23891*s13^6*s23^5 + 106938*s13^5*s23^6 + 
                130730*s13^4*s23^7 + 64384*s13^3*s23^8 + 11982*s13^2*s23^9 + 
                887*s13*s23^10 - 30*s23^11)) + p2q^3*p3q^2*
             (5*s13^6*s23^4*(s13 + s23)^4*(38*s13^3 - 87*s13^2*s23 + 
                37*s13*s23^2 + 8*s23^3) + s12^12*(45*s13^5 + 288*s13^4*s23 + 
                385*s13^3*s23^2 + 379*s13^2*s23^3 + 7*s13*s23^4 - 
                140*s23^5) + s12*s13^5*s23^3*(s13 + s23)^3*(259*s13^5 + 
                675*s13^4*s23 - 193*s13^3*s23^2 - 1494*s13^2*s23^3 - 
                799*s13*s23^4 + 516*s23^5) + s12^11*(54*s13^6 - 324*s13^5*
                 s23 + 939*s13^4*s23^2 + 4028*s13^3*s23^3 + 2705*s13^2*
                 s23^4 - 206*s13*s23^5 - 450*s23^6) - s12^10*(630*s13^7 + 
                6903*s13^6*s23 + 13162*s13^5*s23^2 + 5271*s13^4*s23^3 - 
                4683*s13^3*s23^4 - 1174*s13^2*s23^5 + 1831*s13*s23^6 + 
                390*s23^7) + s12^2*s13^4*s23^2*(s13 + s23)^2*(69*s13^7 + 
                1657*s13^6*s23 + 7308*s13^5*s23^2 + 2512*s13^4*s23^3 - 
                14268*s13^3*s23^4 - 9891*s13^2*s23^5 + 1481*s13*s23^6 + 
                652*s23^7) - s12^3*s13^3*s23*(s13 + s23)^2*(9*s13^8 - 
                1023*s13^7*s23 - 11554*s13^6*s23^2 - 14393*s13^5*s23^3 + 
                7986*s13^4*s23^4 + 32294*s13^3*s23^5 + 19956*s13^2*s23^6 - 
                4258*s13*s23^7 - 833*s23^8) - s12^9*(1314*s13^8 + 
                10098*s13^7*s23 + 30160*s13^6*s23^2 + 35586*s13^5*s23^3 + 
                21354*s13^4*s23^4 + 19706*s13^3*s23^5 + 16073*s13^2*s23^6 + 
                4231*s13*s23^7 - 140*s23^8) - s12^8*(216*s13^9 + 
                6597*s13^8*s23 + 28526*s13^7*s23^2 + 44817*s13^6*s23^3 + 
                44227*s13^5*s23^4 + 60635*s13^4*s23^5 + 67204*s13^3*s23^6 + 
                31058*s13^2*s23^7 + 3204*s13*s23^8 - 360*s23^9) + 
              s12^7*(1062*s13^10 - 5445*s13^9*s23 - 25045*s13^8*s23^2 - 
                29755*s13^7*s23^3 - 21520*s13^6*s23^4 - 74205*s13^5*s23^5 - 
                136061*s13^4*s23^6 - 88592*s13^3*s23^7 - 16852*s13^2*s23^8 + 
                701*s13*s23^9 + 150*s23^10) + s12^6*(666*s13^11 - 
                297*s13^10*s23 - 15944*s13^9*s23^2 - 16602*s13^8*s23^3 + 
                18977*s13^7*s23^4 - 32851*s13^6*s23^5 - 171554*s13^5*s23^6 - 
                170846*s13^4*s23^7 - 50311*s13^3*s23^8 + 4110*s13^2*s23^9 + 
                1960*s13*s23^10 + 10*s23^11) + s12^5*s13*(54*s13^11 + 
                2988*s13^10*s23 + 4069*s13^9*s23^2 + 6155*s13^8*s23^3 + 
                36569*s13^7*s23^4 + 20762*s13^6*s23^5 - 126985*s13^5*s23^6 - 
                208053*s13^4*s23^7 - 98194*s13^3*s23^8 - 1317*s13^2*s23^9 + 
                6050*s13*s23^10 + 668*s23^11) + s12^4*s13^2*(-9*s13^11 + 
                621*s13^10*s23 + 7986*s13^9*s23^2 + 25368*s13^8*s23^3 + 
                46775*s13^7*s23^4 + 29820*s13^6*s23^5 - 71821*s13^5*s23^6 - 
                155622*s13^4*s23^7 - 102146*s13^3*s23^8 - 12934*s13^2*s23^9 + 
                7693*s13*s23^10 + 1225*s23^11))) + 
          p1q^3*(p3q^4*s12*(s12 + s23)*(s13 + s23)*(2*s13^5*s23^5*(s13 + s23)^
                2*(61*s13^2 + 162*s13*s23 + 81*s23^2) + s12^10*(9*s13^4 + 
                18*s13^3*s23 - 10*s13^2*s23^2 - 30*s13*s23^3 - 10*s23^4) + 
              s12^9*(45*s13^5 + 63*s13^4*s23 - 181*s13^3*s23^2 - 
                379*s13^2*s23^3 - 250*s13*s23^4 - 100*s23^5) + 
              s12*s13^4*s23^4*(16*s13^5 + 898*s13^4*s23 + 3082*s13^3*s23^2 + 
                3977*s13^2*s23^3 + 2260*s13*s23^4 + 483*s23^5) + 
              s12^8*(90*s13^6 - 18*s13^5*s23 - 923*s13^4*s23^2 - 
                1445*s13^3*s23^3 - 975*s13^2*s23^4 - 540*s13*s23^5 - 
                200*s23^6) + s12^2*s13^3*s23^3*(-56*s13^6 + 19*s13^5*s23 + 
                2333*s13^4*s23^2 + 6631*s13^3*s23^3 + 6786*s13^2*s23^4 + 
                2501*s13*s23^5 + 88*s23^6) + s12^3*s13^2*s23^2*(89*s13^7 + 
                131*s13^6*s23 + 960*s13^5*s23^2 + 4855*s13^4*s23^3 + 
                9028*s13^3*s23^4 + 6424*s13^2*s23^5 + 1070*s13*s23^6 - 
                263*s23^7) + s12^7*(90*s13^7 - 324*s13^6*s23 - 1786*s13^5*
                 s23^2 - 1524*s13^4*s23^3 + 127*s13^3*s23^4 + 129*s13^2*
                 s23^5 - 310*s13*s23^6 - 100*s23^7) + s12^4*s13*s23*(
                -72*s13^8 + 282*s13^7*s23 + 1665*s13^6*s23^2 + 4974*s13^5*
                 s23^3 + 9734*s13^4*s23^4 + 10563*s13^3*s23^5 + 4776*s13^2*
                 s23^6 + 291*s13*s23^7 + 10*s23^8) + s12^6*(45*s13^8 - 
                504*s13^7*s23 - 1373*s13^6*s23^2 + 1156*s13^5*s23^3 + 
                5438*s13^4*s23^4 + 5875*s13^3*s23^5 + 2534*s13^2*s23^6 + 
                160*s13*s23^7 + 50*s23^8) + s12^5*(9*s13^9 - 315*s13^8*s23 - 
                146*s13^7*s23^2 + 3062*s13^6*s23^3 + 8593*s13^5*s23^4 + 
                11742*s13^4*s23^5 + 8296*s13^3*s23^6 + 2353*s13^2*s23^7 + 
                160*s13*s23^8 + 40*s23^9)) + p2q^4*s13*(s13 + s23)*
             (-10*s13^5*s23^5*(s13 + s23)^3*(s13^2 + 7*s13*s23 - 4*s23^2) - 
              10*s12*s13^4*s23^4*(s13 + s23)^2*(4*s13^4 + 27*s13^3*s23 + 
                16*s13^2*s23^2 - 18*s13*s23^3 - s23^4) + s12^10*(9*s13^5 - 
                72*s13^4*s23 + 89*s13^3*s23^2 - 56*s13^2*s23^3 + 
                16*s13*s23^4 + 122*s23^5) - s12^2*s13^3*s23^3*(s13 + s23)^2*(
                40*s13^5 + 549*s13^4*s23 + 377*s13^3*s23^2 - 1122*s13^2*
                 s23^3 - 827*s13*s23^4 + 263*s23^5) + s12^9*(45*s13^6 - 
                306*s13^5*s23 + 210*s13^4*s23^2 + 220*s13^3*s23^3 - 
                37*s13^2*s23^4 + 914*s13*s23^5 + 690*s23^6) + 
              s12^8*(90*s13^7 - 459*s13^6*s23 - 461*s13^5*s23^2 + 
                1947*s13^4*s23^3 + 1091*s13^3*s23^4 + 2352*s13^2*s23^5 + 
                3980*s13*s23^6 + 1500*s23^7) + s12^3*s13^2*s23^2*(8*s13^8 - 
                560*s13^7*s23 - 2420*s13^6*s23^2 + 256*s13^5*s23^3 + 
                8409*s13^4*s23^4 + 10649*s13^3*s23^5 + 5067*s13^2*s23^6 + 
                807*s13*s23^7 + 88*s23^8) + s12^7*(90*s13^8 - 234*s13^7*s23 - 
                1877*s13^6*s23^2 + 2916*s13^5*s23^3 + 6639*s13^4*s23^4 + 
                5815*s13^3*s23^5 + 8964*s13^2*s23^6 + 7059*s13*s23^7 + 
                1580*s23^8) + s12^4*s13*s23*(27*s13^9 - 118*s13^8*s23 - 
                2368*s13^7*s23^2 - 1397*s13^6*s23^3 + 11313*s13^5*s23^4 + 
                20038*s13^4*s23^5 + 15339*s13^3*s23^6 + 7494*s13^2*s23^7 + 
                2589*s13*s23^8 + 483*s23^9) + s12^6*(45*s13^9 + 
                72*s13^8*s23 - 2110*s13^7*s23^2 - 217*s13^6*s23^3 + 
                11655*s13^5*s23^4 + 14708*s13^4*s23^5 + 13883*s13^3*s23^6 + 
                13417*s13^2*s23^7 + 6237*s13*s23^8 + 810*s23^9) + 
              s12^5*(9*s13^10 + 108*s13^9*s23 - 941*s13^8*s23^2 - 
                3310*s13^7*s23^3 + 6594*s13^6*s23^4 + 20335*s13^5*s23^5 + 
                20297*s13^4*s23^6 + 15452*s13^3*s23^7 + 9287*s13^2*s23^8 + 
                2743*s13*s23^9 + 162*s23^10)) + p2q*p3q^3*
             (10*s13^6*(13*s13 - 3*s23)*s23^6*(s13 + s23)^4 - 
              s12*s13^4*s23^5*(s13 + s23)^3*(58*s13^4 - 123*s13^3*s23 - 
                1014*s13^2*s23^2 - 516*s13*s23^3 + 162*s23^4) + 
              s12^12*(18*s13^5 + 45*s13^4*s23 - 2*s13^3*s23^2 - 290*s13^2*
                 s23^3 - 721*s13*s23^4 - 460*s23^5) + s12^11*(216*s13^6 + 
                387*s13^5*s23 - 606*s13^4*s23^2 - 2246*s13^3*s23^3 - 
                4152*s13^2*s23^4 - 4053*s13*s23^5 - 1500*s23^6) - 
              s12^2*s13^3*s23^4*(s13 + s23)^2*(547*s13^6 + 2920*s13^5*s23 + 
                831*s13^4*s23^2 - 6589*s13^3*s23^3 - 5423*s13^2*s23^4 - 
                530*s13*s23^5 + 161*s23^6) + s12^10*(522*s13^7 + 
                81*s13^6*s23 - 5609*s13^5*s23^2 - 16294*s13^4*s23^3 - 
                22782*s13^3*s23^4 - 18553*s13^2*s23^5 - 8117*s13*s23^6 - 
                1310*s23^7) - s12^3*s13^2*s23^3*(s13 + s23)^2*(707*s13^7 + 
                5883*s13^6*s23 + 10237*s13^5*s23^2 - 58*s13^4*s23^3 - 
                12269*s13^3*s23^4 - 8568*s13^2*s23^5 - 66*s13*s23^6 - 
                11*s23^7) + s12^9*(432*s13^8 - 207*s13^7*s23 - 10223*s13^6*
                 s23^2 - 38879*s13^5*s23^3 - 71383*s13^4*s23^4 - 
                71566*s13^3*s23^5 - 36203*s13^2*s23^6 - 6475*s13*s23^7 + 
                550*s23^8) - s12^4*s13^2*s23^2*(667*s13^9 + 6051*s13^8*s23 + 
                24728*s13^7*s23^2 + 56582*s13^6*s23^3 + 66054*s13^5*s23^4 + 
                22096*s13^4*s23^5 - 27298*s13^3*s23^6 - 28200*s13^2*s23^7 - 
                8055*s13*s23^8 - 433*s23^9) + s12^8*(54*s13^9 + 
                27*s13^8*s23 - 8328*s13^7*s23^2 - 40897*s13^6*s23^3 - 
                103640*s13^5*s23^4 - 143580*s13^4*s23^5 - 101718*s13^3*
                 s23^6 - 30207*s13^2*s23^7 + 195*s13*s23^8 + 1400*s23^9) - 
              s12^7*(72*s13^10 + 963*s13^9*s23 + 5091*s13^8*s23^2 + 
                28756*s13^7*s23^3 + 93111*s13^6*s23^4 + 165055*s13^5*s23^5 + 
                153507*s13^4*s23^6 + 62369*s13^3*s23^7 + 2293*s13^2*s23^8 - 
                3919*s13*s23^9 - 640*s23^10) - s12^6*(18*s13^11 + 
                1233*s13^10*s23 + 4782*s13^9*s23^2 + 19946*s13^8*s23^3 + 
                71150*s13^7*s23^4 + 146839*s13^6*s23^5 + 157071*s13^5*s23^6 + 
                71997*s13^4*s23^7 - 1996*s13^3*s23^8 - 11517*s13^2*s23^9 - 
                2667*s13*s23^10 - 50*s23^11) - s12^5*s23*(297*s13^11 + 
                3468*s13^10*s23 + 13790*s13^9*s23^2 + 46905*s13^8*s23^3 + 
                104606*s13^7*s23^4 + 124018*s13^6*s23^5 + 58796*s13^5*s23^6 - 
                13529*s13^4*s23^7 - 21481*s13^3*s23^8 - 5537*s13^2*s23^9 - 
                633*s13*s23^10 + 10*s23^11)) - p2q^3*p3q*
             (10*s13^5*s23^5*(s13 + s23)^4*(46*s13^3 - 34*s13^2*s23 - 
                9*s13*s23^2 + s23^3) + s12*s13^5*s23^4*(s13 + s23)^3*(
                721*s13^4 + 1890*s13^3*s23 + 284*s13^2*s23^2 - 768*s13*
                 s23^3 - 633*s23^4) + s12^11*(18*s13^6 + 297*s13^5*s23 + 
                667*s13^4*s23^2 + 707*s13^3*s23^3 + 547*s13^2*s23^4 + 
                58*s13*s23^5 - 130*s23^6) + s12^10*(72*s13^7 + 1233*s13^6*
                 s23 + 3468*s13^5*s23^2 + 6051*s13^4*s23^3 + 7297*s13^3*
                 s23^4 + 4014*s13^2*s23^5 + 51*s13*s23^6 - 490*s23^7) + 
              s12^2*s13^3*s23^3*(s13 + s23)^2*(290*s13^7 + 3572*s13^6*s23 + 
                11119*s13^5*s23^2 + 10393*s13^4*s23^3 - 1698*s13^3*s23^4 - 
                4704*s13^2*s23^5 - 411*s13*s23^6 - 11*s23^7) + 
              s12^9*(-54*s13^8 + 963*s13^7*s23 + 4782*s13^6*s23^2 + 
                13790*s13^5*s23^3 + 24728*s13^4*s23^4 + 22710*s13^3*s23^5 + 
                7218*s13^2*s23^6 - 1209*s13*s23^7 - 660*s23^8) + 
              s12^3*s13^2*s23^2*(s13 + s23)^2*(2*s13^8 + 2242*s13^7*s23 + 
                18296*s13^6*s23^2 + 32732*s13^5*s23^3 + 17958*s13^4*s23^4 - 
                6279*s13^3*s23^5 - 7396*s13^2*s23^6 - 410*s13*s23^7 + 
                161*s23^8) + s12^8*(-432*s13^9 - 27*s13^8*s23 + 5091*s13^7*
                 s23^2 + 19946*s13^6*s23^3 + 46905*s13^5*s23^4 + 
                56582*s13^4*s23^5 + 26299*s13^3*s23^6 - 2007*s13^2*s23^7 - 
                3869*s13*s23^8 - 340*s23^9) + s12^7*(-522*s13^10 + 
                207*s13^9*s23 + 8328*s13^8*s23^2 + 28756*s13^7*s23^3 + 
                71150*s13^6*s23^4 + 104606*s13^5*s23^5 + 66054*s13^4*s23^6 - 
                2148*s13^3*s23^7 - 17770*s13^2*s23^8 - 4551*s13*s23^9 - 
                10*s23^10) + s12^5*s13*(-18*s13^11 - 387*s13^10*s23 + 
                5609*s13^9*s23^2 + 38879*s13^8*s23^3 + 103640*s13^7*s23^4 + 
                165055*s13^6*s23^5 + 157071*s13^5*s23^6 + 58796*s13^4*s23^7 - 
                27298*s13^3*s23^8 - 29471*s13^2*s23^9 - 6322*s13*s23^10 - 
                30*s23^11) + s12^6*(-216*s13^11 - 81*s13^10*s23 + 
                10223*s13^9*s23^2 + 40897*s13^8*s23^3 + 93111*s13^7*s23^4 + 
                146839*s13^6*s23^5 + 124018*s13^5*s23^6 + 22096*s13^4*s23^7 - 
                33164*s13^3*s23^8 - 17965*s13^2*s23^9 - 2076*s13*s23^10 + 
                30*s23^11) + s12^4*s13*s23*(-45*s13^11 + 606*s13^10*s23 + 
                16294*s13^9*s23^2 + 71383*s13^8*s23^3 + 143580*s13^7*s23^4 + 
                153507*s13^6*s23^5 + 71997*s13^5*s23^6 - 13529*s13^4*s23^7 - 
                28200*s13^3*s23^8 - 8711*s13^2*s23^9 - 208*s13*s23^10 + 
                162*s23^11)) + p2q^2*p3q^2*(-5*s13^5*s23^5*(s13 + s23)^4*(
                54*s13^3 - 81*s13^2*s23 + 23*s13*s23^2 + 2*s23^3) + 
              s12^12*(9*s13^5 + 18*s13^4*s23 - 10*s13^3*s23^2 - 196*s13^2*
                 s23^3 - 447*s13*s23^4 - 270*s23^5) - s12*s13^4*s23^4*
               (s13 + s23)^3*(447*s13^5 + 1309*s13^4*s23 + 897*s13^3*s23^2 - 
                648*s13^2*s23^3 - 941*s13*s23^4 + 162*s23^5) + 
              s12^11*(9*s13^6 - 603*s13^5*s23 - 1848*s13^4*s23^2 - 
                2608*s13^3*s23^3 - 3517*s13^2*s23^4 - 2650*s13*s23^5 - 
                675*s23^6) - s12^10*(369*s13^7 + 4554*s13^6*s23 + 
                13346*s13^5*s23^2 + 21881*s13^4*s23^3 + 25682*s13^3*s23^4 + 
                19022*s13^2*s23^5 + 6165*s13*s23^6 + 115*s23^7) - 
              s12^2*s13^3*s23^3*(s13 + s23)^2*(196*s13^7 + 3125*s13^6*s23 + 
                12576*s13^5*s23^2 + 13261*s13^4*s23^3 - 3364*s13^3*s23^4 - 
                7462*s13^2*s23^5 - 694*s13*s23^6 + 150*s23^7) - 
              s12^9*(1089*s13^8 + 8973*s13^7*s23 + 30628*s13^6*s23^2 + 
                61637*s13^5*s23^3 + 87138*s13^4*s23^4 + 83026*s13^3*s23^5 + 
                41538*s13^2*s23^6 + 6417*s13*s23^7 - 880*s23^8) - 
              2*s12^3*s13^2*s23^2*(s13 + s23)^2*(5*s13^8 + 1294*s13^7*s23 + 
                10248*s13^6*s23^2 + 19723*s13^5*s23^3 + 11238*s13^4*s23^4 - 
                4610*s13^3*s23^5 - 5873*s13^2*s23^6 - 24*s13*s23^7 + 
                75*s23^8) - s12^8*(1089*s13^9 + 10080*s13^8*s23 + 
                42896*s13^7*s23^2 + 102419*s13^6*s23^3 + 166902*s13^5*s23^4 + 
                186233*s13^4*s23^5 + 121864*s13^3*s23^6 + 35734*s13^2*s23^7 + 
                1115*s13*s23^8 - 620*s23^9) - s12^7*(369*s13^10 + 
                8973*s13^9*s23 + 42896*s13^8*s23^2 + 122302*s13^7*s23^3 + 
                238030*s13^6*s23^4 + 303662*s13^5*s23^5 + 226496*s13^4*
                 s23^6 + 75178*s13^3*s23^7 - 929*s13^2*s23^8 - 3708*s13*
                 s23^9 + 115*s23^10) + s12^4*s13*s23*(18*s13^11 - 
                1848*s13^10*s23 - 21881*s13^9*s23^2 - 87138*s13^8*s23^3 - 
                186233*s13^7*s23^4 - 226496*s13^6*s23^5 - 133820*s13^5*
                 s23^6 - 4558*s13^4*s23^7 + 33012*s13^3*s23^8 + 11692*s13^2*
                 s23^9 + 394*s13*s23^10 - 162*s23^11) + s12^6*(9*s13^11 - 
                4554*s13^10*s23 - 30628*s13^9*s23^2 - 102419*s13^8*s23^3 - 
                238030*s13^7*s23^4 - 372306*s13^6*s23^5 - 336308*s13^5*
                 s23^6 - 133820*s13^4*s23^7 + 7710*s13^3*s23^8 + 
                18982*s13^2*s23^9 + 2985*s13*s23^10 - 155*s23^11) + 
              s12^5*(9*s13^12 - 603*s13^11*s23 - 13346*s13^10*s23^2 - 
                61637*s13^9*s23^3 - 166902*s13^8*s23^4 - 303662*s13^7*s23^5 - 
                336308*s13^6*s23^6 - 179928*s13^5*s23^7 - 4558*s13^4*s23^8 + 
                32760*s13^3*s23^9 + 8700*s13^2*s23^10 + 455*s13*s23^11 - 
                10*s23^12)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^3*s13^3*(s12 + s13)^2*s23^2*(s12 + s23)^2*(s13 + s23)^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - 
       (p1q^6*s23^3*(s12 + s23)^2*(s13 + s23)^2*(s12 + s13 + s23)*
          (-(p3q*(-120*s13^5*s23^3*(s13 + s23) - 2*s12*s13^4*s23^2*(
                101*s13^2 + 161*s13*s23 + 60*s23^2) + s12^6*(55*s13^3 + 
                69*s13^2*s23 + 5*s13*s23^2 + 15*s23^3) + s12^2*s13^3*s23*(
                -291*s13^3 - 257*s13^2*s23 + 114*s13*s23^2 + 80*s23^3) + 
              s12^3*s13^2*(-17*s13^4 - 226*s13^3*s23 + 133*s13^2*s23^2 + 
                308*s13*s23^3 - 10*s23^4) + s12^4*s13*(21*s13^4 + 
                184*s13^3*s23 + 169*s13^2*s23^2 - 3*s13*s23^3 + 15*s23^4) + 
              s12^5*(93*s13^4 + 188*s13^3*s23 + 76*s13^2*s23^2 + 
                20*s13*s23^3 + 15*s23^4))) + 
           p2q*(-15*s13^5*s23^3*(s13 + s23) - 5*s12*s13^4*s23^2*
              (s13^2 + 4*s13*s23 + 3*s23^2) + s12^2*s13^3*s23*
              (-69*s13^3 - 76*s13^2*s23 + 3*s13*s23^2 + 10*s23^3) + 
             s12^6*(17*s13^3 + 291*s13^2*s23 + 202*s13*s23^2 + 120*s23^3) - 
             s12^4*s13*(93*s13^4 + 184*s13^3*s23 + 133*s13^2*s23^2 + 114*s13*
                s23^3 - 120*s23^4) - s12^3*s13^2*(55*s13^4 + 188*s13^3*s23 + 
               169*s13^2*s23^2 + 308*s13*s23^3 + 80*s23^4) + 
             s12^5*(-21*s13^4 + 226*s13^3*s23 + 257*s13^2*s23^2 + 322*s13*
                s23^3 + 120*s23^4))) - p1q^5*s23^2*(s12 + s23)*(s13 + s23)*
          (s12 + s13 + s23)*(p2q^2*(-5*s13^5*(11*s13 - 7*s23)*s23^4*
              (s13 + s23)^2 - 5*s12*s13^4*s23^3*(s13 + s23)^2*
              (13*s13^2 + 12*s13*s23 - 9*s23^2) + s12^8*(17*s13^4 + 308*s13^3*
                s23 + 493*s13^2*s23^2 + 322*s13*s23^3 + 120*s23^4) - 
             s12^2*s13^3*s23^2*(95*s13^5 + 115*s13^4*s23 + 84*s13^3*s23^2 + 
               45*s13^2*s23^3 - 137*s13*s23^4 - 118*s23^5) + 
             s12^7*(131*s13^5 + 986*s13^4*s23 + 1064*s13^3*s23^2 + 894*s13^2*
                s23^3 + 765*s13*s23^4 + 120*s23^5) + s12^6*(219*s13^6 + 1105*
                s13^5*s23 + 1547*s13^4*s23^2 + 1166*s13^3*s23^3 + 1352*s13^2*
                s23^4 + 727*s13*s23^5 - 120*s23^6) + s12^3*s13^2*s23*
              (-94*s13^6 + 62*s13^5*s23 + 267*s13^4*s23^2 - 924*s13^3*s23^3 - 
               253*s13^2*s23^4 + 1148*s13*s23^5 + 406*s23^6) + 
             s12^5*(113*s13^7 + 696*s13^6*s23 + 1368*s13^5*s23^2 + 12*s13^4*
                s23^3 + 1058*s13^3*s23^4 + 2198*s13^2*s23^5 + 327*s13*s23^6 - 
               120*s23^7) + s12^4*s13*(8*s13^7 + 175*s13^6*s23 + 639*s13^5*
                s23^2 - 490*s13^4*s23^3 - 894*s13^3*s23^4 + 1678*s13^2*
                s23^5 + 1653*s13*s23^6 + 43*s23^7)) + 
           p3q^2*(120*s13^5*(s13 - s23)*s23^4*(s13 + s23)^2 + 
             s12^8*(8*s13^4 - 94*s13^3*s23 - 95*s13^2*s23^2 - 65*s13*s23^3 - 
               55*s23^4) + s12*s13^4*s23^3*(322*s13^4 + 765*s13^3*s23 + 727*
                s13^2*s23^2 + 327*s13*s23^3 + 43*s23^4) + 
             s12^7*(113*s13^5 + 175*s13^4*s23 + 62*s13^3*s23^2 - 115*s13^2*
                s23^3 - 190*s13*s23^4 - 75*s23^5) + s12^2*s13^3*s23^2*
              (493*s13^5 + 894*s13^4*s23 + 1352*s13^3*s23^2 + 2198*s13^2*
                s23^3 + 1653*s13*s23^4 + 406*s23^5) + 
             s12^6*(219*s13^6 + 696*s13^5*s23 + 639*s13^4*s23^2 + 267*s13^3*
                s23^3 - 84*s13^2*s23^4 - 140*s13*s23^5 + 15*s23^6) + 
             2*s12^3*s13^2*s23*(154*s13^6 + 532*s13^5*s23 + 583*s13^4*s23^2 + 
               529*s13^3*s23^3 + 839*s13^2*s23^4 + 574*s13*s23^5 + 59*
                s23^6) + s12^5*(131*s13^7 + 1105*s13^6*s23 + 1368*s13^5*
                s23^2 - 490*s13^4*s23^3 - 924*s13^3*s23^4 - 45*s13^2*s23^5 + 
               30*s13*s23^6 + 35*s23^7) + s12^4*s13*(17*s13^7 + 986*s13^6*
                s23 + 1547*s13^5*s23^2 + 12*s13^4*s23^3 - 894*s13^3*s23^4 - 
               253*s13^2*s23^5 + 137*s13*s23^6 + 45*s23^7)) + 
           p2q*p3q*(5*s13^5*(121*s13 - 17*s23)*s23^4*(s13 + s23)^2 + 
             s12*s13^4*s23^3*(1328*s13^4 + 3050*s13^3*s23 + 2189*s13^2*
                s23^2 + 555*s13*s23^3 + 88*s23^4) + s12^8*(97*s13^4 + 1006*
                s13^3*s23 + 1496*s13^2*s23^2 + 1328*s13*s23^3 + 605*s23^4) + 
             s12^2*s13^3*s23^2*(1496*s13^5 + 2363*s13^4*s23 + 251*s13^3*
                s23^2 - 34*s13^2*s23^3 + 1106*s13*s23^4 + 524*s23^5) + 
             s12^7*(-44*s13^5 + 693*s13^4*s23 + 1135*s13^3*s23^2 + 2363*s13^2*
                s23^3 + 3050*s13*s23^4 + 1125*s23^5) + 
             s12^6*(-282*s13^6 - 1115*s13^5*s23 - 2710*s13^4*s23^2 - 3652*
                s13^3*s23^3 + 251*s13^2*s23^4 + 2189*s13*s23^5 + 435*s23^6) + 
             s12^3*s13^2*s23*(1006*s13^6 + 1135*s13^5*s23 - 3652*s13^4*
                s23^2 - 5743*s13^3*s23^3 + 246*s13^2*s23^4 + 2692*s13*s23^5 + 
               524*s23^6) - s12^5*(44*s13^7 + 1115*s13^6*s23 + 4158*s13^5*
                s23^2 + 8236*s13^4*s23^3 + 5743*s13^3*s23^4 + 34*s13^2*
                s23^5 - 555*s13*s23^6 + 85*s23^7) + s12^4*s13*
              (97*s13^7 + 693*s13^6*s23 - 2710*s13^5*s23^2 - 8236*s13^4*
                s23^3 - 5838*s13^3*s23^4 + 246*s13^2*s23^5 + 1106*s13*s23^6 + 
               88*s23^7))) - (s12 + s13)*(p2q^7*s13^4*(s12 + s13)*(s13 + s23)*
            (5*s13^3*s23^3*(s13 + s23)^3*(s13 + 4*s23) + 5*s12*s13^2*s23^2*
              (s13 + s23)^2*(2*s13^3 + 11*s13^2*s23 + 22*s13*s23^2 + 10*
                s23^3) + 6*s12^2*s13*s23^2*(s13 + s23)^2*(5*s13^3 + 36*s13^2*
                s23 + 82*s13*s23^2 + 41*s23^3) + s12^7*(27*s13^3 + 135*s13^2*
                s23 + 485*s13*s23^2 + 337*s23^3) + s12^6*(54*s13^4 + 405*
                s13^3*s23 + 1604*s13^2*s23^2 + 2385*s13*s23^3 + 1092*s23^4) + 
             s12^3*s23^2*(202*s13^5 + 1456*s13^4*s23 + 3643*s13^3*s23^2 + 
               3727*s13^2*s23^3 + 1419*s13*s23^4 + 81*s23^5) + 
             s12^4*s23*(108*s13^5 + 1096*s13^4*s23 + 4047*s13^3*s23^2 + 6034*
                s13^2*s23^3 + 3515*s13*s23^4 + 580*s23^5) + 
             s12^5*(27*s13^5 + 378*s13^4*s23 + 2033*s13^3*s23^2 + 4710*s13^2*
                s23^3 + 4242*s13*s23^4 + 1254*s23^5)) + 
           p3q^7*s12^4*(s12 + s13)*(s12 + s23)*(5*s12^7*s23^2*(2*s13 + s23) + 
             s13^3*s23^3*(s13 + s23)^3*(337*s13 + 81*s23) + 
             5*s12^6*s23^2*(6*s13^2 + 15*s13*s23 + 7*s23^2) + 
             s12*s13^2*s23^2*(s13 + s23)^2*(485*s13^3 + 1415*s13^2*s23 + 927*
                s13*s23^2 + 246*s23^3) + s12^5*(27*s13^5 + 108*s13^4*s23 + 
               202*s13^3*s23^2 + 276*s13^2*s23^3 + 230*s13*s23^4 + 75*
                s23^5) + s12^2*s13*s23*(135*s13^6 + 1604*s13^5*s23 + 4710*
                s13^4*s23^2 + 6034*s13^3*s23^3 + 3727*s13^2*s23^4 + 984*s13*
                s23^5 + 50*s23^6) + s12^4*(54*s13^6 + 378*s13^5*s23 + 1096*
                s13^4*s23^2 + 1456*s13^3*s23^3 + 954*s13^2*s23^4 + 325*s13*
                s23^5 + 65*s23^6) + s12^3*(27*s13^7 + 405*s13^6*s23 + 2033*
                s13^5*s23^2 + 4047*s13^4*s23^3 + 3643*s13^3*s23^4 + 1446*
                s13^2*s23^5 + 210*s13*s23^6 + 20*s23^7)) + 
           p2q^6*p3q*s13^3*(5*s13^4*s23^3*(s13 + s23)^4*(29*s13^2 + 7*s13*
                s23 - 4*s23^2) + s12*s13^3*s23^2*(s13 + s23)^3*
              (200*s13^4 + 526*s13^3*s23 + 449*s13^2*s23^2 + 158*s13*s23^3 - 
               70*s23^4) - s12^9*(108*s13^4 + 234*s13^3*s23 + 319*s13^2*
                s23^2 + 178*s13*s23^3 + 25*s23^4) + s12^2*s13^2*s23^2*
              (s13 + s23)^2*(462*s13^5 + 2811*s13^4*s23 + 5637*s13^3*s23^2 + 
               3870*s13^2*s23^3 + 244*s13*s23^4 - 323*s23^5) - 
             s12^8*(270*s13^5 + 1044*s13^4*s23 + 1841*s13^3*s23^2 + 2002*
                s13^2*s23^3 + 1387*s13*s23^4 + 452*s23^5) + 
             s12^7*(81*s13^6 + 1242*s13^5*s23 + 3792*s13^4*s23^2 + 2646*s13^3*
                s23^3 - 2847*s13^2*s23^4 - 4648*s13*s23^5 - 1706*s23^6) + 
             s12^3*s13*s23*(s13 + s23)^2*(63*s13^6 + 3764*s13^5*s23 + 13056*
                s13^4*s23^2 + 15979*s13^3*s23^3 + 5599*s13^2*s23^4 - 1377*s13*
                s23^5 - 381*s23^6) + s12^6*(567*s13^7 + 5472*s13^6*s23 + 
               19223*s13^5*s23^2 + 29693*s13^4*s23^3 + 17344*s13^3*s23^4 - 
               3801*s13^2*s23^5 - 8034*s13*s23^6 - 2264*s23^7) + 
             s12^4*(s13 + s23)^2*(27*s13^7 + 2124*s13^6*s23 + 12237*s13^5*
                s23^2 + 24651*s13^4*s23^3 + 17064*s13^3*s23^4 - 280*s13^2*
                s23^5 - 2621*s13*s23^6 - 108*s23^7) + 
             s12^5*(351*s13^8 + 5535*s13^7*s23 + 26613*s13^6*s23^2 + 58399*
                s13^5*s23^3 + 61646*s13^4*s23^4 + 24303*s13^3*s23^5 - 6371*
                s13^2*s23^6 - 7051*s13*s23^7 - 1093*s23^8)) + 
           p2q^2*p3q^5*s12^2*(10*s12^11*s23^2*(19*s13 + 14*s23) - 
             3*s13^5*s23^4*(s13 + s23)^3*(133*s13^2 + 60*s13*s23 - 21*
                s23^2) + s12^10*(54*s13^4 + 270*s13^3*s23 + 75*s13^2*s23^2 + 
               479*s13*s23^3 + 435*s23^4) - s12*s13^4*s23^3*(s13 + s23)^2*
              (983*s13^4 + 948*s13^3*s23 + 721*s13^2*s23^2 + 3257*s13*s23^3 + 
               497*s23^4) + s12^9*(297*s13^5 + 3600*s13^4*s23 + 6257*s13^3*
                s23^2 + 2625*s13^2*s23^3 + 36*s13*s23^4 + 300*s23^5) + 
             s12^8*(-729*s13^6 + 1269*s13^5*s23 + 15209*s13^4*s23^2 + 23754*
                s13^3*s23^3 + 9934*s13^2*s23^4 - 1024*s13*s23^5 - 350*
                s23^6) - s12^7*(2187*s13^7 + 8910*s13^6*s23 + 5692*s13^5*
                s23^2 - 20554*s13^4*s23^3 - 32720*s13^3*s23^4 - 12136*s13^2*
                s23^5 + 1661*s13*s23^6 + 600*s23^7) - s12^2*s13^3*s23^2*
              (487*s13^7 - 82*s13^6*s23 + 769*s13^5*s23^2 + 14958*s13^4*
                s23^3 + 35131*s13^3*s23^4 + 32862*s13^2*s23^5 + 12985*s13*
                s23^6 + 1634*s23^7) + s12^3*s13^2*s23*(189*s13^8 + 3240*s13^7*
                s23 - 265*s13^6*s23^2 - 28027*s13^5*s23^3 - 73533*s13^4*
                s23^4 - 88361*s13^3*s23^5 - 52822*s13^2*s23^6 - 14350*s13*
                s23^7 - 1347*s23^8) - s12^6*(1107*s13^8 + 13284*s13^7*s23 + 
               37409*s13^6*s23^2 + 41701*s13^5*s23^3 + 12209*s13^4*s23^4 - 
               5896*s13^3*s23^5 - 672*s13^2*s23^6 + 1674*s13*s23^7 + 285*
                s23^8) + s12^4*s13*(162*s13^9 + 1971*s13^8*s23 - 5108*s13^7*
                s23^2 - 39644*s13^6*s23^3 - 95406*s13^5*s23^4 - 122945*s13^4*
                s23^5 - 90025*s13^3*s23^6 - 35758*s13^2*s23^7 - 6617*s13*
                s23^8 - 313*s23^9) + s12^5*(270*s13^9 - 4653*s13^8*s23 - 
               32615*s13^7*s23^2 - 78561*s13^6*s23^3 - 98249*s13^5*s23^4 - 
               70791*s13^4*s23^5 - 32099*s13^3*s23^6 - 9350*s13^2*s23^7 - 
               1097*s13*s23^8 - 40*s23^9)) + p2q*p3q^6*s12^3*
            (5*s12^10*s23^2*(40*s13 + 29*s23) - s13^4*s23^4*(s13 + s23)^2*
              (25*s13^3 + 402*s13^2*s23 + 877*s13*s23^2 + 108*s23^3) + 
             s12^9*(27*s13^4 + 63*s13^3*s23 + 462*s13^2*s23^2 + 1126*s13*
                s23^3 + 615*s23^4) + s12^8*(351*s13^5 + 2178*s13^4*s23 + 3890*
                s13^3*s23^2 + 3735*s13^2*s23^3 + 2627*s13*s23^4 + 990*
                s23^5) - s12*s13^3*s23^3*(178*s13^6 + 1387*s13^5*s23 + 4648*
                s13^4*s23^2 + 8034*s13^3*s23^3 + 7051*s13^2*s23^4 + 2837*s13*
                s23^5 + 381*s23^6) + s12^7*(567*s13^6 + 5535*s13^5*s23 + 
               16512*s13^4*s23^2 + 20647*s13^3*s23^3 + 11721*s13^2*s23^4 + 
               3283*s13*s23^5 + 710*s23^6) + 3*s12^6*(27*s13^7 + 1824*s13^6*
                s23 + 8871*s13^5*s23^2 + 17083*s13^4*s23^3 + 15285*s13^3*
                s23^4 + 5985*s13^2*s23^5 + 759*s13*s23^6 + 55*s23^7) - 
             s12^2*s13^2*s23^2*(319*s13^7 + 2002*s13^6*s23 + 2847*s13^5*
                s23^2 + 3801*s13^4*s23^3 + 6371*s13^3*s23^4 + 5630*s13^2*
                s23^5 + 2139*s13*s23^6 + 323*s23^7) + s12^3*s13*s23*
              (-234*s13^8 - 1841*s13^7*s23 + 2646*s13^6*s23^2 + 17344*s13^5*
                s23^3 + 24303*s13^4*s23^4 + 13883*s13^3*s23^5 + 2464*s13^2*
                s23^6 - 402*s13*s23^7 - 70*s23^8) + s12^5*(-270*s13^8 + 1242*
                s13^7*s23 + 19223*s13^6*s23^2 + 58399*s13^5*s23^3 + 78603*
                s13^4*s23^4 + 50613*s13^3*s23^5 + 13621*s13^2*s23^6 + 713*s13*
                s23^7 - 45*s23^8) + s12^4*(-108*s13^9 - 1044*s13^8*s23 + 3792*
                s13^7*s23^2 + 29693*s13^6*s23^3 + 61646*s13^5*s23^4 + 58499*
                s13^4*s23^5 + 25800*s13^3*s23^6 + 4035*s13^2*s23^7 - 52*s13*
                s23^8 - 20*s23^9)) + p2q^5*p3q^2*s13^2*
            (5*s13^5*s23^3*(s13 + s23)^4*(28*s13^2 - 25*s13*s23 - 8*s23^2) + 
             s12^10*(162*s13^4 + 189*s13^3*s23 - 487*s13^2*s23^2 - 983*s13*
                s23^3 - 399*s23^4) + s12*s13^4*s23^2*(s13 + s23)^3*
              (190*s13^4 - 91*s13^3*s23 - 261*s13^2*s23^2 - 158*s13*s23^3 - 
               313*s23^4) + s12^9*(270*s13^5 + 1971*s13^4*s23 + 3240*s13^3*
                s23^2 + 82*s13^2*s23^3 - 2914*s13*s23^4 - 1377*s23^5) + 
             s12^2*s13^3*s23^2*(s13 + s23)^2*(75*s13^5 + 2475*s13^4*s23 + 
               4909*s13^3*s23^2 - 157*s13^2*s23^3 - 3923*s13*s23^4 - 1347*
                s23^5) + s12^3*s13^2*s23*(s13 + s23)^2*(270*s13^6 + 5717*
                s13^5*s23 + 12050*s13^4*s23^2 + 2903*s13^3*s23^3 - 11960*
                s13^2*s23^4 - 11082*s13*s23^5 - 1634*s23^6) - 
             s12^8*(1107*s13^6 + 4653*s13^5*s23 + 5108*s13^4*s23^2 + 265*
                s13^3*s23^3 + 769*s13^2*s23^4 + 3600*s13*s23^5 + 1674*
                s23^6) - s12^7*(2187*s13^7 + 13284*s13^6*s23 + 32615*s13^5*
                s23^2 + 39644*s13^4*s23^3 + 28027*s13^3*s23^4 + 14958*s13^2*
                s23^5 + 5647*s13*s23^6 + 750*s23^7) - 
             s12^6*(729*s13^8 + 8910*s13^7*s23 + 37409*s13^6*s23^2 + 78561*
                s13^5*s23^3 + 95406*s13^4*s23^4 + 73533*s13^3*s23^5 + 35131*
                s13^2*s23^6 + 7732*s13*s23^7 - 9*s23^8) + 
             s12^4*s13*(54*s13^9 + 3600*s13^8*s23 + 15209*s13^7*s23^2 + 20554*
                s13^6*s23^3 - 12209*s13^5*s23^4 - 70791*s13^4*s23^5 - 90025*
                s13^3*s23^6 - 52822*s13^2*s23^7 - 12985*s13*s23^8 - 497*
                s23^9) + s12^5*(297*s13^9 + 1269*s13^8*s23 - 5692*s13^7*
                s23^2 - 41701*s13^6*s23^3 - 98249*s13^5*s23^4 - 122945*s13^4*
                s23^5 - 88361*s13^3*s23^6 - 32862*s13^2*s23^7 - 4251*s13*
                s23^8 + 63*s23^9)) - p2q^4*p3q^3*s13*
            (20*s13^6*s23^4*(s13 + s23)^4*(7*s13 + s23) + s12*s13^5*s23^3*
              (s13 + s23)^3*(557*s13^3 + 348*s13^2*s23 + 312*s13*s23^2 + 416*
                s23^3) + s12^10*s23*(3024*s13^4 + 7245*s13^3*s23 + 4254*s13^2*
                s23^2 - 667*s13*s23^3 - 615*s23^4) + s12^11*(108*s13^4 + 324*
                s13^3*s23 - 343*s13^2*s23^2 - 756*s13*s23^3 - 227*s23^4) + 
             s12^2*s13^4*s23^2*(s13 + s23)^2*(347*s13^5 - 731*s13^4*s23 + 301*
                s13^3*s23^2 + 7075*s13^2*s23^3 + 7106*s13*s23^4 + 1635*
                s23^5) - s12^3*s13^3*s23*(s13 + s23)^2*(207*s13^6 + 2528*
                s13^5*s23 - 3463*s13^4*s23^2 - 21281*s13^3*s23^3 - 26282*
                s13^2*s23^4 - 16608*s13*s23^5 - 2325*s23^6) + 
             s12^9*(-1998*s13^6 - 5850*s13^5*s23 + 3178*s13^4*s23^2 + 23043*
                s13^3*s23^3 + 21762*s13^2*s23^4 + 5459*s13*s23^5 - 310*
                s23^6) + s12^8*(-2538*s13^7 - 13725*s13^6*s23 - 26065*s13^5*
                s23^2 - 5263*s13^4*s23^3 + 37536*s13^3*s23^4 + 40508*s13^2*
                s23^5 + 13247*s13*s23^6 + 490*s23^7) + 
             s12^7*(567*s13^8 - 3267*s13^7*s23 - 21838*s13^6*s23^2 - 35733*
                s13^5*s23^3 + 3667*s13^4*s23^4 + 54145*s13^3*s23^5 + 44071*
                s13^2*s23^6 + 11777*s13*s23^7 + 585*s23^8) + 
             s12^6*(1377*s13^9 + 9873*s13^8*s23 + 23500*s13^7*s23^2 + 24310*
                s13^6*s23^3 + 29885*s13^5*s23^4 + 64646*s13^4*s23^5 + 71506*
                s13^3*s23^6 + 31799*s13^2*s23^7 + 4448*s13*s23^8 + 173*
                s23^9) + s12^5*s13*(135*s13^9 + 6966*s13^8*s23 + 35427*s13^7*
                s23^2 + 85510*s13^6*s23^3 + 123163*s13^5*s23^4 + 133705*s13^4*
                s23^5 + 113273*s13^3*s23^6 + 57881*s13^2*s23^7 + 12532*s13*
                s23^8 + 548*s23^9) + s12^4*s13^2*(-27*s13^9 - 1206*s13^8*
                s23 + 6655*s13^7*s23^2 + 47197*s13^6*s23^3 + 114123*s13^5*
                s23^4 + 157298*s13^4*s23^5 + 140330*s13^3*s23^6 + 77762*s13^2*
                s23^7 + 21431*s13*s23^8 + 1461*s23^9)) + p2q^3*p3q^4*s12*
            (s13^6*s23^4*(s13 + s23)^3*(227*s13^2 - 66*s13*s23 - 173*s23^2) + 
             s12*s13^5*s23^3*(s13 + s23)^2*(756*s13^4 - 845*s13^3*s23 - 4525*
                s13^2*s23^2 - 3352*s13*s23^3 - 548*s23^4) + 
             s12^11*(27*s13^4 + 207*s13^3*s23 - 347*s13^2*s23^2 - 557*s13*
                s23^3 - 140*s23^4) + s12^2*s13^4*s23^2*(s13 + s23)^2*
              (343*s13^5 - 4940*s13^4*s23 - 12225*s13^3*s23^2 - 11118*s13^2*
                s23^3 - 9610*s13*s23^4 - 1461*s23^5) + 
             s12^10*(-135*s13^5 + 1206*s13^4*s23 + 2942*s13^3*s23^2 + 37*
                s13^2*s23^3 - 2019*s13*s23^4 - 580*s23^5) - 
             s12^9*(1377*s13^6 + 6966*s13^5*s23 + 6655*s13^4*s23^2 - 1800*
                s13^3*s23^3 - 814*s13^2*s23^4 + 3027*s13*s23^5 + 920*s23^6) - 
             s12^8*(567*s13^7 + 9873*s13^6*s23 + 35427*s13^5*s23^2 + 47197*
                s13^4*s23^3 + 25679*s13^3*s23^4 + 6946*s13^2*s23^5 + 2953*s13*
                s23^6 + 680*s23^7) + s12^5*s13*s23*(5850*s13^8 + 26065*s13^7*
                s23 + 35733*s13^6*s23^2 - 29885*s13^5*s23^3 - 133705*s13^4*
                s23^4 - 140330*s13^3*s23^5 - 61823*s13^2*s23^6 - 10376*s13*
                s23^7 - 416*s23^8) + s12^7*(2538*s13^8 + 3267*s13^7*s23 - 
               23500*s13^6*s23^2 - 85510*s13^5*s23^3 - 114123*s13^4*s23^4 - 
               72307*s13^3*s23^5 - 21557*s13^2*s23^6 - 2532*s13*s23^7 - 220*
                s23^8) - s12^3*s13^3*s23*(324*s13^8 + 7245*s13^7*s23 + 23043*
                s13^6*s23^2 + 37536*s13^5*s23^3 + 54145*s13^4*s23^4 + 71506*
                s13^3*s23^5 + 57881*s13^2*s23^6 + 21431*s13*s23^7 + 2325*
                s23^8) + s12^6*(1998*s13^9 + 13725*s13^8*s23 + 21838*s13^7*
                s23^2 - 24310*s13^6*s23^3 - 123163*s13^5*s23^4 - 157298*s13^4*
                s23^5 - 90453*s13^3*s23^6 - 22922*s13^2*s23^7 - 1560*s13*
                s23^8 - 20*s23^9) - s12^4*s13^2*(108*s13^9 + 3024*s13^8*s23 + 
               3178*s13^7*s23^2 - 5263*s13^6*s23^3 + 3667*s13^5*s23^4 + 64646*
                s13^4*s23^5 + 113273*s13^3*s23^6 + 77762*s13^2*s23^7 + 21258*
                s13*s23^8 + 1635*s23^9))) + 
         p1q*(-(p3q^6*s12^3*(s12 + s13)*(s12 + s23)*(5*s12^9*s23^2*(2*s13 + 
                s23) - s13^4*s23^3*(s13 + s23)^3*(337*s13^2 + 763*s13*s23 + 
                250*s23^2) + s12^8*(-18*s13^4 - 9*s13^3*s23 + 44*s13^2*
                 s23^2 + 65*s13*s23^3 + 30*s23^4) - s12*s13^3*s23^2*
               (s13 + s23)^2*(485*s13^4 + 1842*s13^3*s23 + 4405*s13^2*s23^2 + 
                3790*s13*s23^3 + 911*s23^4) + s12^7*(-45*s13^5 + 
                72*s13^4*s23 + 410*s13^3*s23^2 + 423*s13^2*s23^3 + 
                85*s13*s23^4 - 20*s23^5) + s12^6*(-54*s13^6 + 342*s13^5*s23 + 
                2056*s13^4*s23^2 + 2862*s13^3*s23^3 + 1057*s13^2*s23^4 - 
                345*s13*s23^5 - 190*s23^6) + s12^5*(-72*s13^7 + 342*s13^6*
                 s23 + 3720*s13^5*s23^2 + 7254*s13^4*s23^3 + 4572*s13^3*
                 s23^4 - 131*s13^2*s23^5 - 955*s13*s23^6 - 225*s23^7) - 
              s12^2*s13^2*s23*(135*s13^7 + 1166*s13^6*s23 + 5210*s13^5*
                 s23^2 + 14939*s13^4*s23^3 + 22915*s13^3*s23^4 + 
                17695*s13^2*s23^5 + 6404*s13*s23^6 + 864*s23^7) - 
              s12^4*(72*s13^8 + 144*s13^7*s23 - 2583*s13^6*s23^2 - 
                6164*s13^5*s23^3 - 2865*s13^4*s23^4 + 2739*s13^3*s23^5 + 
                2825*s13^2*s23^6 + 800*s13*s23^7 + 80*s23^8) - 
              s12^3*s13*(27*s13^8 + 360*s13^7*s23 + 138*s13^6*s23^2 + 
                1326*s13^5*s23^3 + 8781*s13^4*s23^4 + 14956*s13^3*s23^5 + 
                10361*s13^2*s23^6 + 2880*s13*s23^7 + 220*s23^8))) + 
           p2q^6*s13^3*(s12 + s13)*(s13 + s23)*(-5*s13^4*s23^3*(s13 + s23)^3*
              (s13^2 + 3*s13*s23 - 16*s23^2) + s12^9*(27*s13^3 + 135*s13^2*
                s23 + 485*s13*s23^2 + 337*s23^3) - s12^2*s13^2*s23^2*
              (s13 + s23)^2*(44*s13^4 + 335*s13^3*s23 + 343*s13^2*s23^2 - 
               1152*s13*s23^3 - 864*s23^4) - 5*s12*s13^3*s23^2*(s13 + s23)^2*
              (2*s13^4 + 9*s13^3*s23 - 3*s13^2*s23^2 - 72*s13*s23^3 - 44*
                s23^4) + 2*s12^8*(36*s13^4 + 180*s13^3*s23 + 583*s13^2*
                s23^2 + 1406*s13*s23^3 + 887*s23^4) + 
             2*s12^7*(36*s13^5 + 72*s13^4*s23 + 69*s13^3*s23^2 + 2605*s13^2*
                s23^3 + 4287*s13*s23^4 + 1775*s23^5) + 
             s12^6*(54*s13^6 - 342*s13^5*s23 - 2583*s13^4*s23^2 + 1326*s13^3*
                s23^3 + 14939*s13^2*s23^4 + 14442*s13*s23^5 + 3376*s23^6) + 
             s12^3*s13*s23*(9*s13^7 - 410*s13^6*s23 - 2862*s13^5*s23^2 - 4572*
                s13^4*s23^3 + 2739*s13^3*s23^4 + 10361*s13^2*s23^5 + 6404*s13*
                s23^6 + 911*s23^7) + s12^5*(45*s13^7 - 342*s13^6*s23 - 3720*
                s13^5*s23^2 - 6164*s13^4*s23^3 + 8781*s13^3*s23^4 + 22915*
                s13^2*s23^5 + 12896*s13*s23^6 + 1513*s23^7) + 
             s12^4*(18*s13^8 - 72*s13^7*s23 - 2056*s13^6*s23^2 - 7254*s13^5*
                s23^3 - 2865*s13^4*s23^4 + 14956*s13^3*s23^5 + 17695*s13^2*
                s23^6 + 5612*s13*s23^7 + 250*s23^8)) + p2q^4*p3q^2*s13*
            (-5*s13^6*s23^3*(s13 + s23)^4*(28*s13^3 - 133*s13^2*s23 + 87*s13*
                s23^2 + 20*s23^3) + 3*s12^12*(27*s13^4 + 39*s13^3*s23 - 62*
                s13^2*s23^2 - 113*s13*s23^3 - 29*s23^4) + 
             s12^11*(189*s13^5 + 2313*s13^4*s23 + 6427*s13^3*s23^2 + 6879*
                s13^2*s23^3 + 2555*s13*s23^4 + 89*s23^5) - s12*s13^5*s23^2*
              (s13 + s23)^3*(190*s13^5 - 828*s13^4*s23 - 786*s13^3*s23^2 + 
               216*s13^2*s23^3 + 203*s13*s23^4 + 879*s23^5) + 
             s12^10*(-630*s13^6 - 3132*s13^5*s23 + 3275*s13^4*s23^2 + 23139*
                s13^3*s23^3 + 27430*s13^2*s23^4 + 10608*s13*s23^5 + 510*
                s23^6) - s12^2*s13^4*s23^2*(s13 + s23)^2*(118*s13^6 + 3277*
                s13^5*s23 - 1202*s13^4*s23^2 - 18561*s13^3*s23^3 - 12297*
                s13^2*s23^4 + 4482*s13*s23^5 + 3059*s23^6) - 
             s12^9*(432*s13^7 + 8199*s13^6*s23 + 21651*s13^5*s23^2 + 5363*
                s13^4*s23^3 - 33834*s13^3*s23^4 - 33388*s13^2*s23^5 - 8345*
                s13*s23^6 + 230*s23^7) - s12^3*s13^3*s23*(s13 + s23)^2*
              (297*s13^7 + 9161*s13^6*s23 + 3864*s13^5*s23^2 - 50455*s13^4*
                s23^3 - 77929*s13^3*s23^4 - 24570*s13^2*s23^5 + 16172*s13*
                s23^6 + 4534*s23^7) + s12^8*(2889*s13^8 + 10341*s13^7*s23 - 
               1703*s13^6*s23^2 - 24732*s13^5*s23^3 - 1224*s13^4*s23^4 + 
               22296*s13^3*s23^5 + 375*s13^2*s23^6 - 9093*s13*s23^7 - 1555*
                s23^8) + s12^7*(3789*s13^9 + 29493*s13^8*s23 + 82211*s13^7*
                s23^2 + 114810*s13^6*s23^3 + 106201*s13^5*s23^4 + 62776*s13^4*
                s23^5 - 11879*s13^3*s23^6 - 41813*s13^2*s23^7 - 17073*s13*
                s23^8 - 1347*s23^9) + s12^4*s13^2*(-36*s13^10 - 5625*s13^9*
                s23 - 17605*s13^8*s23^2 + 38054*s13^7*s23^3 + 260751*s13^6*
                s23^4 + 484611*s13^5*s23^5 + 400330*s13^4*s23^6 + 105606*
                s13^3*s23^7 - 50123*s13^2*s23^8 - 32702*s13*s23^9 - 3373*
                s23^10) + s12^5*s13*(-378*s13^10 - 2754*s13^9*s23 + 34052*
                s13^8*s23^2 + 217669*s13^7*s23^3 + 503581*s13^6*s23^4 + 
               583755*s13^5*s23^5 + 316926*s13^4*s23^6 + 7368*s13^3*s23^7 - 
               69742*s13^2*s23^8 - 23354*s13*s23^9 - 1475*s23^10) + 
             s12^6*(864*s13^10 + 18855*s13^9*s23 + 107431*s13^8*s23^2 + 
               280021*s13^7*s23^3 + 401292*s13^6*s23^4 + 321211*s13^5*s23^5 + 
               92464*s13^4*s23^6 - 58744*s13^3*s23^7 - 49146*s13^2*s23^8 - 
               8824*s13*s23^9 - 356*s23^10)) + p2q^5*p3q*s13^2*
            (-5*s13^5*s23^3*(s13 + s23)^4*(29*s13^3 - 129*s13^2*s23 - 32*s13*
                s23^2 + 12*s23^3) + s12^11*(-81*s13^4 - 72*s13^3*s23 + 301*
                s13^2*s23^2 + 644*s13*s23^3 + 312*s23^4) - s12*s13^4*s23^2*
              (s13 + s23)^3*(200*s13^5 - 541*s13^4*s23 - 2627*s13^3*s23^2 - 
               2378*s13^2*s23^3 - 927*s13*s23^4 + 210*s23^5) + 
             s12^10*(-261*s13^5 - 738*s13^4*s23 + 477*s13^3*s23^2 + 2613*
                s13^2*s23^3 + 2504*s13*s23^4 + 765*s23^5) + 
             s12^9*(-81*s13^6 + 1737*s13^5*s23 + 9554*s13^4*s23^2 + 17798*
                s13^3*s23^3 + 15370*s13^2*s23^4 + 4955*s13*s23^5 - 113*
                s23^6) - s12^2*s13^3*s23^2*(s13 + s23)^2*(329*s13^6 + 914*
                s13^5*s23 - 4047*s13^4*s23^2 - 16095*s13^3*s23^3 - 15290*
                s13^2*s23^4 - 3007*s13*s23^5 + 745*s23^6) + 
             s12^8*(27*s13^7 + 4887*s13^6*s23 + 29115*s13^5*s23^2 + 71744*
                s13^4*s23^3 + 84897*s13^3*s23^4 + 45283*s13^2*s23^5 + 5737*
                s13*s23^6 - 1978*s23^7) - s12^3*s13^2*s23*(s13 + s23)^2*
              (81*s13^7 + 6604*s13^6*s23 + 11357*s13^5*s23^2 - 18455*s13^4*
                s23^3 - 56800*s13^3*s23^4 - 36316*s13^2*s23^5 - 1755*s13*
                s23^6 + 1206*s23^7) + s12^7*(-819*s13^8 - 1539*s13^7*s23 + 
               27392*s13^6*s23^2 + 129472*s13^5*s23^3 + 229799*s13^4*s23^4 + 
               190394*s13^3*s23^5 + 64390*s13^2*s23^6 + 509*s13*s23^7 - 2286*
                s23^8) + s12^6*(-1215*s13^9 - 11484*s13^8*s23 - 10565*s13^7*
                s23^2 + 98713*s13^6*s23^3 + 317540*s13^5*s23^4 + 395082*s13^4*
                s23^5 + 221295*s13^3*s23^6 + 39898*s13^2*s23^7 - 5809*s13*
                s23^8 - 1043*s23^9) + s12^4*s13*(9*s13^10 - 4113*s13^9*s23 - 
               28662*s13^8*s23^2 - 50195*s13^7*s23^3 + 48466*s13^6*s23^4 + 
               264033*s13^5*s23^5 + 337594*s13^4*s23^6 + 181209*s13^3*s23^7 + 
               29097*s13^2*s23^8 - 5210*s13*s23^9 - 780*s23^10) + 
             s12^5*(-459*s13^10 - 11493*s13^9*s23 - 40245*s13^8*s23^2 - 2231*
                s13^7*s23^3 + 216914*s13^6*s23^4 + 441284*s13^5*s23^5 + 
               371252*s13^4*s23^6 + 127758*s13^3*s23^7 + 3729*s13^2*s23^8 - 
               4456*s13*s23^9 - 169*s23^10)) + p2q^2*p3q^4*s12*
            (-10*s12^13*s23^2*(19*s13 + 14*s23) - s13^6*s23^4*(s13 + s23)^3*
              (87*s13^3 - 350*s13^2*s23 + 279*s13*s23^2 + 356*s23^3) + 
             s12^12*(-36*s13^4 - 297*s13^3*s23 - 118*s13^2*s23^2 + 258*s13*
                s23^3 + 105*s23^4) - s12^11*(378*s13^5 + 5625*s13^4*s23 + 
               9755*s13^3*s23^2 + 3513*s13^2*s23^3 - 2700*s13*s23^4 - 1385*
                s23^5) - s12*s13^5*s23^3*(s13 + s23)^2*(339*s13^5 - 3233*
                s13^4*s23 - 4481*s13^3*s23^2 + 3850*s13^2*s23^3 + 5874*s13*
                s23^4 + 1475*s23^5) + s12^10*(864*s13^6 - 2754*s13^5*s23 - 
               17605*s13^4*s23^2 - 22483*s13^3*s23^3 - 5470*s13^2*s23^4 + 
               4436*s13*s23^5 + 1590*s23^6) - s12^2*s13^4*s23^2*(s13 + s23)^2*
              (186*s13^6 - 7251*s13^5*s23 - 13114*s13^4*s23^2 + 91*s13^3*
                s23^3 + 12557*s13^2*s23^4 + 16608*s13*s23^5 + 3373*s23^6) + 
             s12^9*(3789*s13^7 + 18855*s13^6*s23 + 34052*s13^5*s23^2 + 38054*
                s13^4*s23^3 + 33566*s13^3*s23^4 + 17688*s13^2*s23^5 + 2335*
                s13*s23^6 - 490*s23^7) + s12^8*(2889*s13^8 + 29493*s13^7*
                s23 + 107431*s13^6*s23^2 + 217669*s13^5*s23^3 + 260751*s13^4*
                s23^4 + 174975*s13^3*s23^5 + 50621*s13^2*s23^6 - 1350*s13*
                s23^7 - 1675*s23^8) + s12^3*s13^3*s23*(117*s13^9 + 6427*s13^8*
                s23 + 23139*s13^7*s23^2 + 33834*s13^6*s23^3 + 22296*s13^5*
                s23^4 - 11879*s13^4*s23^5 - 58744*s13^3*s23^6 - 69742*s13^2*
                s23^7 - 32702*s13*s23^8 - 4534*s23^9) + 
             s12^7*(-432*s13^9 + 10341*s13^8*s23 + 82211*s13^7*s23^2 + 280021*
                s13^6*s23^3 + 503581*s13^5*s23^4 + 484611*s13^4*s23^5 + 
               230883*s13^3*s23^6 + 38673*s13^2*s23^7 - 3462*s13*s23^8 - 835*
                s23^9) + s12^4*s13^2*(81*s13^10 + 2313*s13^9*s23 + 3275*s13^8*
                s23^2 - 5363*s13^7*s23^3 - 1224*s13^6*s23^4 + 62776*s13^5*
                s23^5 + 92464*s13^4*s23^6 + 7368*s13^3*s23^7 - 50123*s13^2*
                s23^8 - 25240*s13*s23^9 - 3059*s23^10) + 
             s12^5*s13*(189*s13^10 - 3132*s13^9*s23 - 21651*s13^8*s23^2 - 
               24732*s13^7*s23^3 + 106201*s13^6*s23^4 + 321211*s13^5*s23^5 + 
               316926*s13^4*s23^6 + 105606*s13^3*s23^7 - 12308*s13^2*s23^8 - 
               10600*s13*s23^9 - 879*s23^10) + s12^6*(-630*s13^10 - 8199*
                s13^9*s23 - 1703*s13^8*s23^2 + 114810*s13^7*s23^3 + 401292*
                s13^6*s23^4 + 583755*s13^5*s23^5 + 400330*s13^4*s23^6 + 
               110897*s13^3*s23^7 + 274*s13^2*s23^8 - 2840*s13*s23^9 - 100*
                s23^10)) + p2q*p3q^5*s12^2*(-5*s12^12*s23^2*(40*s13 + 29*
                s23) + s13^5*s23^4*(s13 + s23)^3*(312*s13^3 - 171*s13^2*s23 - 
               536*s13*s23^2 - 169*s23^3) + s12^11*(9*s13^4 - 81*s13^3*s23 - 
               329*s13^2*s23^2 - 59*s13*s23^3 + 65*s23^4) - 
             s12^10*(459*s13^5 + 4113*s13^4*s23 + 6766*s13^3*s23^2 + 1572*
                s13^2*s23^3 - 3650*s13*s23^4 - 1870*s23^5) + 
             s12*s13^4*s23^3*(s13 + s23)^2*(644*s13^5 + 1216*s13^4*s23 + 1879*
                s13^3*s23^2 + 763*s13^2*s23^3 - 2896*s13*s23^4 - 780*s23^5) + 
             s12^9*(-1215*s13^6 - 11493*s13^5*s23 - 28662*s13^4*s23^2 - 24646*
                s13^3*s23^3 + 1890*s13^2*s23^4 + 11682*s13*s23^5 + 3870*
                s23^6) - s12^8*(819*s13^7 + 11484*s13^6*s23 + 40245*s13^5*
                s23^2 + 50195*s13^4*s23^3 + 10863*s13^3*s23^4 - 23275*s13^2*
                s23^5 - 16483*s13*s23^6 - 3155*s23^7) + s12^2*s13^3*s23^2*
              (301*s13^8 + 2613*s13^7*s23 + 15370*s13^6*s23^2 + 45283*s13^5*
                s23^3 + 64390*s13^4*s23^4 + 39898*s13^3*s23^5 + 3729*s13^2*
                s23^6 - 5210*s13*s23^7 - 1206*s23^8) + 
             s12^7*(27*s13^8 - 1539*s13^7*s23 - 10565*s13^6*s23^2 - 2231*
                s13^5*s23^3 + 48466*s13^4*s23^4 + 82353*s13^3*s23^5 + 51527*
                s13^2*s23^6 + 12332*s13*s23^7 + 925*s23^8) + 
             s12^3*s13^2*s23*(-72*s13^9 + 477*s13^8*s23 + 17798*s13^7*s23^2 + 
               84897*s13^6*s23^3 + 190394*s13^5*s23^4 + 221295*s13^4*s23^5 + 
               127758*s13^3*s23^6 + 29097*s13^2*s23^7 - 657*s13*s23^8 - 745*
                s23^9) + s12^6*(-81*s13^9 + 4887*s13^8*s23 + 27392*s13^7*
                s23^2 + 98713*s13^6*s23^3 + 216914*s13^5*s23^4 + 264033*s13^4*
                s23^5 + 168371*s13^3*s23^6 + 49682*s13^2*s23^7 + 4529*s13*
                s23^8 - 80*s23^9) + s12^4*s13*(-81*s13^10 - 738*s13^9*s23 + 
               9554*s13^8*s23^2 + 71744*s13^7*s23^3 + 229799*s13^6*s23^4 + 
               395082*s13^5*s23^5 + 371252*s13^4*s23^6 + 181209*s13^3*s23^7 + 
               38620*s13^2*s23^8 + 1517*s13*s23^9 - 210*s23^10) + 
             s12^5*(-261*s13^10 + 1737*s13^9*s23 + 29115*s13^8*s23^2 + 129472*
                s13^7*s23^3 + 317540*s13^6*s23^4 + 441284*s13^5*s23^5 + 
               337594*s13^4*s23^6 + 131187*s13^3*s23^7 + 20559*s13^2*s23^8 + 
               297*s13*s23^9 - 60*s23^10)) - p2q^3*p3q^3*
            (-20*s13^7*s23^4*(s13 + s23)^4*(7*s13^2 - 19*s13*s23 - 2*s23^2) - 
             s12*s13^6*s23^3*(s13 + s23)^3*(417*s13^4 - 970*s13^3*s23 - 838*
                s13^2*s23^2 - 911*s13*s23^3 - 1025*s23^4) + 
             s12^13*(27*s13^4 + 207*s13^3*s23 - 157*s13^2*s23^2 - 417*s13*
                s23^3 - 140*s23^4) + s12^12*(-9*s13^5 + 1872*s13^4*s23 + 3980*
                s13^3*s23^2 + 2093*s13^2*s23^3 - 281*s13*s23^4 - 180*s23^5) - 
             s12^2*s13^5*s23^2*(s13 + s23)^2*(157*s13^6 - 2407*s13^5*s23 + 
               2311*s13^4*s23^2 + 11581*s13^3*s23^3 - 1866*s13^2*s23^4 - 
               11277*s13*s23^5 - 3620*s23^6) + s12^11*(-936*s13^6 - 6453*
                s13^5*s23 - 10199*s13^4*s23^2 - 4263*s13^3*s23^3 + 2346*s13^2*
                s23^4 + 2497*s13*s23^5 + 720*s23^6) + 
             s12^10*(144*s13^7 - 10242*s13^6*s23 - 48116*s13^5*s23^2 - 85225*
                s13^4*s23^3 - 65089*s13^3*s23^4 - 13796*s13^2*s23^5 + 5918*
                s13*s23^6 + 1880*s23^7) + s12^3*s13^4*s23*(s13 + s23)^2*
              (207*s13^7 + 3566*s13^6*s23 - 11602*s13^5*s23^2 - 45451*s13^4*
                s23^3 - 32164*s13^3*s23^4 + 12602*s13^2*s23^5 + 28696*s13*
                s23^6 + 5921*s23^7) + s12^9*(4806*s13^8 + 15534*s13^7*s23 - 
               16475*s13^6*s23^2 - 134267*s13^5*s23^3 - 212503*s13^4*s23^4 - 
               134668*s13^3*s23^5 - 23607*s13^2*s23^6 + 7242*s13*s23^7 + 1620*
                s23^8) + s12^8*(4806*s13^9 + 35316*s13^8*s23 + 84159*s13^7*
                s23^2 + 21266*s13^6*s23^3 - 182470*s13^5*s23^4 - 244391*s13^4*
                s23^5 - 97177*s13^3*s23^6 + 3428*s13^2*s23^7 + 6646*s13*
                s23^8 + 540*s23^9) - s12^5*s13^2*(9*s13^10 + 6453*s13^9*s23 + 
               48116*s13^8*s23^2 + 134267*s13^7*s23^3 + 182470*s13^6*s23^4 + 
               136037*s13^5*s23^5 + 6983*s13^4*s23^6 - 123336*s13^3*s23^7 - 
               121195*s13^2*s23^8 - 40538*s13*s23^9 - 3620*s23^10) + 
             s12^7*(144*s13^10 + 15534*s13^9*s23 + 84159*s13^8*s23^2 + 155242*
                s13^7*s23^3 + 44321*s13^6*s23^4 - 136037*s13^5*s23^5 - 96453*
                s13^4*s23^6 + 21736*s13^3*s23^7 + 28040*s13^2*s23^8 + 3986*
                s13*s23^9 + 40*s23^10) + s12^6*s13*(-936*s13^10 - 10242*s13^9*
                s23 - 16475*s13^8*s23^2 + 21266*s13^7*s23^3 + 44321*s13^6*
                s23^4 - 17162*s13^5*s23^5 - 6983*s13^4*s23^6 + 84438*s13^3*
                s23^7 + 75915*s13^2*s23^8 + 18517*s13*s23^9 + 1025*s23^10) + 
             s12^4*s13^3*(27*s13^10 + 1872*s13^9*s23 - 10199*s13^8*s23^2 - 
               85225*s13^7*s23^3 - 212503*s13^6*s23^4 - 244391*s13^5*s23^5 - 
               96453*s13^4*s23^6 + 84438*s13^3*s23^7 + 121195*s13^2*s23^8 + 
               51294*s13*s23^9 + 5921*s23^10))) + 
         p1q^4*s23*(p2q^3*(s13 + s23)*(-5*s13^5*s23^5*(s13 + s23)^3*
              (14*s13^2 - 27*s13*s23 + 4*s23^2) - 5*s12*s13^4*s23^4*
              (s13 + s23)^2*(28*s13^4 + 26*s13^3*s23 - 91*s13^2*s23^2 - 38*
                s13*s23^3 + 6*s23^4) + s12^10*(99*s13^5 + 384*s13^4*s23 - 256*
                s13^3*s23^2 - 500*s13^2*s23^3 - 119*s13*s23^4 - 120*s23^5) - 
             s12^2*s13^3*s23^3*(s13 + s23)^2*(42*s13^5 + 209*s13^4*s23 + 308*
                s13^3*s23^2 - 778*s13^2*s23^3 - 541*s13*s23^4 + 128*s23^5) + 
             s12^9*(477*s13^6 + 1652*s13^5*s23 - 255*s13^4*s23^2 - 1890*s13^3*
                s23^3 - 856*s13^2*s23^4 - 756*s13*s23^5 - 480*s23^6) + 
             s12^8*(918*s13^7 + 3509*s13^6*s23 + 1757*s13^5*s23^2 - 4522*
                s13^4*s23^3 - 826*s13^3*s23^4 + 1185*s13^2*s23^5 - 2117*s13*
                s23^6 - 720*s23^7) + s12^3*s13^2*s23^2*(125*s13^8 + 947*s13^7*
                s23 + 112*s13^6*s23^2 - 4610*s13^5*s23^3 - 1318*s13^4*s23^4 + 
               7813*s13^3*s23^5 + 5461*s13^2*s23^6 - 96*s13*s23^7 - 326*
                s23^8) + 3*s12^7*(294*s13^8 + 1546*s13^7*s23 + 1849*s13^6*
                s23^2 - 2059*s13^5*s23^3 - 1151*s13^4*s23^4 + 3273*s13^3*
                s23^5 + 952*s13^2*s23^6 - 1056*s13*s23^7 - 160*s23^8) + 
             s12^5*s13*(81*s13^9 + 1406*s13^8*s23 + 5693*s13^7*s23^2 + 2590*
                s13^6*s23^3 - 14111*s13^5*s23^4 - 753*s13^4*s23^5 + 27741*
                s13^3*s23^6 + 15083*s13^2*s23^7 - 2250*s13*s23^8 - 1052*
                s23^9) + s12^4*s13*s23*(183*s13^9 + 1888*s13^8*s23 + 3705*
                s13^7*s23^2 - 5279*s13^6*s23^3 - 10797*s13^5*s23^4 + 10803*
                s13^4*s23^5 + 19772*s13^3*s23^6 + 4241*s13^2*s23^7 - 1573*s13*
                s23^8 - 163*s23^9) + s12^6*(423*s13^9 + 3620*s13^8*s23 + 7721*
                s13^7*s23^2 - 3171*s13^6*s23^3 - 11706*s13^5*s23^4 + 13545*
                s13^4*s23^5 + 19885*s13^3*s23^6 + 312*s13^2*s23^7 - 2577*s13*
                s23^8 - 120*s23^9)) + p3q^3*(s12 + s23)*
            (-120*s13^6*s23^5*(s13 + s23)^4 - s12*s13^4*s23^4*(s13 + s23)^3*
              (119*s13^3 + 399*s13^2*s23 + 563*s13*s23^2 + 163*s23^3) + 
             s12^10*(81*s13^5 + 183*s13^4*s23 + 125*s13^3*s23^2 - 42*s13^2*
                s23^3 - 140*s13*s23^4 - 70*s23^5) - s12^2*s13^3*s23^3*
              (s13 + s23)^2*(500*s13^5 - 144*s13^4*s23 - 1397*s13^3*s23^2 + 
               82*s13^2*s23^3 + 921*s13*s23^4 + 326*s23^5) + 
             s12^9*(423*s13^6 + 1406*s13^5*s23 + 1888*s13^4*s23^2 + 947*s13^3*
                s23^3 - 293*s13^2*s23^4 - 410*s13*s23^5 - 75*s23^6) - 
             s12^3*s13^2*s23^2*(s13 + s23)^2*(256*s13^6 + 1378*s13^5*s23 - 
               2186*s13^4*s23^2 - 6825*s13^3*s23^3 - 4049*s13^2*s23^4 - 160*
                s13*s23^5 + 128*s23^6) + s12^4*s13*s23*(s13 + s23)^2*
              (384*s13^7 - 1023*s13^6*s23 - 2860*s13^5*s23^2 + 3290*s13^4*
                s23^3 + 9825*s13^3*s23^4 + 4801*s13^2*s23^5 + 345*s13*s23^6 - 
               30*s23^7) + s12^8*(882*s13^7 + 3620*s13^6*s23 + 5693*s13^5*
                s23^2 + 3705*s13^4*s23^3 + 112*s13^3*s23^4 - 768*s13^2*
                s23^5 + 55*s13*s23^6 + 175*s23^7) + s12^7*(918*s13^8 + 4638*
                s13^7*s23 + 7721*s13^6*s23^2 + 2590*s13^5*s23^3 - 5279*s13^4*
                s23^4 - 4610*s13^3*s23^5 - 47*s13^2*s23^6 + 970*s13*s23^7 + 
               275*s23^8) + s12^6*(477*s13^9 + 3509*s13^8*s23 + 5547*s13^7*
                s23^2 - 3171*s13^6*s23^3 - 14111*s13^5*s23^4 - 10797*s13^4*
                s23^5 - 1318*s13^3*s23^6 + 1789*s13^2*s23^7 + 805*s13*s23^8 + 
               75*s23^9) + s12^5*(99*s13^10 + 1652*s13^9*s23 + 1757*s13^8*
                s23^2 - 6177*s13^7*s23^3 - 11706*s13^6*s23^4 - 753*s13^5*
                s23^5 + 10803*s13^4*s23^6 + 7813*s13^3*s23^7 + 1732*s13^2*
                s23^8 + 130*s13*s23^9 - 20*s23^10)) + 
           p2q*p3q^2*(5*s13^5*s23^5*(s13 + s23)^4*(100*s13^2 - 117*s13*s23 + 
               20*s23^2) + s12*s13^4*s23^4*(s13 + s23)^3*(1526*s13^4 + 1521*
                s13^3*s23 - 187*s13^2*s23^2 + 197*s13*s23^3 - 236*s23^4) + 
             s12^11*(252*s13^5 + 1608*s13^4*s23 + 2987*s13^3*s23^2 + 3708*
                s13^2*s23^3 + 3357*s13*s23^4 + 1240*s23^5) + 
             s12^2*s13^3*s23^3*(s13 + s23)^2*(2139*s13^6 + 4305*s13^5*s23 + 
               7134*s13^4*s23^2 + 13164*s13^3*s23^3 + 8057*s13^2*s23^4 - 429*
                s13*s23^5 - 860*s23^6) + s12^10*(693*s13^6 + 3835*s13^5*s23 + 
               6255*s13^4*s23^2 + 8914*s13^3*s23^3 + 15905*s13^2*s23^4 + 
               14599*s13*s23^5 + 4495*s23^6) + s12^3*s13^2*s23^2*
              (s13 + s23)^2*(2007*s13^7 + 2730*s13^6*s23 + 4150*s13^5*s23^2 + 
               28516*s13^4*s23^3 + 39158*s13^3*s23^4 + 14425*s13^2*s23^5 - 
               1622*s13*s23^6 - 572*s23^7) + s12^9*(1071*s13^7 + 4797*s13^6*
                s23 + 2361*s13^5*s23^2 - 10684*s13^4*s23^3 - 1795*s13^3*
                s23^4 + 25391*s13^2*s23^5 + 23272*s13*s23^6 + 5525*s23^7) + 
             s12^8*(1314*s13^8 + 6161*s13^7*s23 + 3096*s13^6*s23^2 - 30885*
                s13^5*s23^3 - 56696*s13^4*s23^4 - 18465*s13^3*s23^5 + 22872*
                s13^2*s23^6 + 15725*s13*s23^7 + 1950*s23^8) + 
             s12^7*(1098*s13^9 + 7840*s13^8*s23 + 12844*s13^7*s23^2 - 13157*
                s13^6*s23^3 - 51417*s13^5*s23^4 - 31885*s13^4*s23^5 + 17675*
                s13^3*s23^6 + 21172*s13^2*s23^7 + 2940*s13*s23^8 - 950*
                s23^9) + s12^6*(585*s13^10 + 6699*s13^9*s23 + 15804*s13^8*
                s23^2 + 10256*s13^7*s23^3 + 4100*s13^6*s23^4 + 45559*s13^5*
                s23^5 + 96854*s13^4*s23^6 + 74282*s13^3*s23^7 + 18840*s13^2*
                s23^8 - 1298*s13*s23^9 - 685*s23^10) + s12^4*s13*s23*
              (1065*s13^10 + 5815*s13^9*s23 + 6778*s13^8*s23^2 + 16057*s13^7*
                s23^3 + 85570*s13^6*s23^4 + 179985*s13^5*s23^5 + 175410*s13^4*
                s23^6 + 81460*s13^3*s23^7 + 14413*s13^2*s23^8 - 319*s13*
                s23^9 - 238*s23^10) + s12^5*(171*s13^11 + 3515*s13^10*s23 + 
               10411*s13^9*s23^2 + 10771*s13^8*s23^3 + 26776*s13^7*s23^4 + 
               103905*s13^6*s23^5 + 183247*s13^5*s23^6 + 156312*s13^4*s23^7 + 
               62183*s13^3*s23^8 + 7599*s13^2*s23^9 - 781*s13*s23^10 - 55*
                s23^11)) + p2q^2*p3q*(5*s13^5*s23^5*(s13 + s23)^4*
              (248*s13^2 - 93*s13*s23 - 11*s23^2) + s12*s13^4*s23^4*
              (s13 + s23)^3*(3357*s13^4 + 4528*s13^3*s23 - 383*s13^2*s23^2 - 
               67*s13*s23^3 - 238*s23^4) + s12^11*(171*s13^5 + 1065*s13^4*
                s23 + 2007*s13^3*s23^2 + 2139*s13^2*s23^3 + 1526*s13*s23^4 + 
               500*s23^5) + s12^2*s13^3*s23^3*(s13 + s23)^2*(3708*s13^6 + 
               8489*s13^5*s23 + 4705*s13^4*s23^2 + 4973*s13^3*s23^3 + 6521*
                s13^2*s23^4 + 825*s13*s23^5 - 572*s23^6) + 
             s12^10*(585*s13^6 + 3515*s13^5*s23 + 5815*s13^4*s23^2 + 6744*
                s13^3*s23^3 + 8583*s13^2*s23^4 + 6099*s13*s23^5 + 1415*
                s23^6) + s12^3*s13^2*s23^2*(s13 + s23)^2*(2987*s13^7 + 2940*
                s13^6*s23 - 10662*s13^5*s23^2 - 81*s13^4*s23^3 + 28499*s13^3*
                s23^4 + 17365*s13^2*s23^5 - 1046*s13*s23^6 - 860*s23^7) + 
             s12^9*(1098*s13^7 + 6699*s13^6*s23 + 10411*s13^5*s23^2 + 6778*
                s13^4*s23^3 + 11617*s13^3*s23^4 + 17883*s13^2*s23^5 + 8954*
                s13*s23^6 + 760*s23^7) + s12^8*(1314*s13^8 + 7840*s13^7*s23 + 
               15804*s13^6*s23^2 + 10771*s13^5*s23^3 + 16057*s13^4*s23^4 + 
               39546*s13^3*s23^5 + 31737*s13^2*s23^6 + 5725*s13*s23^7 - 1110*
                s23^8) + s12^7*(1071*s13^9 + 6161*s13^8*s23 + 12844*s13^7*
                s23^2 + 10256*s13^6*s23^3 + 26776*s13^5*s23^4 + 85570*s13^4*
                s23^5 + 100340*s13^3*s23^6 + 41519*s13^2*s23^7 + 1315*s13*
                s23^8 - 1240*s23^9) + s12^4*s13*s23*(1608*s13^10 + 6255*s13^9*
                s23 - 10684*s13^8*s23^2 - 56696*s13^7*s23^3 - 31885*s13^6*
                s23^4 + 96854*s13^5*s23^5 + 156312*s13^4*s23^6 + 81460*s13^3*
                s23^7 + 10609*s13^2*s23^8 - 2149*s13*s23^9 - 236*s23^10) + 
             s12^6*(693*s13^10 + 4797*s13^9*s23 + 3096*s13^8*s23^2 - 13157*
                s13^7*s23^3 + 4100*s13^6*s23^4 + 103905*s13^5*s23^5 + 179985*
                s13^4*s23^6 + 121257*s13^3*s23^7 + 28849*s13^2*s23^8 - 304*
                s13*s23^9 - 185*s23^10) + s12^5*(252*s13^11 + 3835*s13^10*
                s23 + 2361*s13^9*s23^2 - 30885*s13^8*s23^3 - 51417*s13^7*
                s23^4 + 45559*s13^6*s23^5 + 183247*s13^5*s23^6 + 175410*s13^4*
                s23^7 + 66386*s13^3*s23^8 + 6339*s13^2*s23^9 - 511*s13*
                s23^10 + 100*s23^11))) + p1q^2*(p2q^5*s13^2*(s13 + s23)*
            (5*s13^5*s23^4*(s13 + s23)^3*(s13^2 + 22*s13*s23 - 24*s23^2) + 
             s12^10*(9*s13^4 + 207*s13^3*s23 + 1031*s13^2*s23^2 + 341*s13*
                s23^3 - 372*s23^4) + 5*s12*s13^4*s23^3*(s13 + s23)^2*
              (3*s13^4 + 41*s13^3*s23 + 101*s13^2*s23^2 - 54*s13*s23^3 - 72*
                s23^4) + s12^9*(36*s13^5 + 765*s13^4*s23 + 4159*s13^3*s23^2 + 
               4867*s13^2*s23^3 - 503*s13*s23^4 - 1860*s23^5) - 
             s12^2*s13^3*s23^2*(s13 + s23)^2*(4*s13^5 + 69*s13^4*s23 - 684*
                s13^3*s23^2 - 2239*s13^2*s23^3 + 508*s13*s23^4 + 1198*
                s23^5) + s12^8*(72*s13^6 + 918*s13^5*s23 + 6768*s13^4*s23^2 + 
               16909*s13^3*s23^3 + 6410*s13^2*s23^4 - 7617*s13*s23^5 - 3680*
                s23^6) + 2*s12^7*(54*s13^7 + 72*s13^6*s23 + 2388*s13^5*
                s23^2 + 13591*s13^4*s23^3 + 14619*s13^3*s23^4 - 3779*s13^2*
                s23^5 - 8897*s13*s23^6 - 1800*s23^7) + s12^3*s13^2*s23*
              (9*s13^8 - 307*s13^7*s23 - 1528*s13^6*s23^2 + 2410*s13^5*
                s23^3 + 16211*s13^4*s23^4 + 14988*s13^3*s23^5 - 4564*s13^2*
                s23^6 - 9045*s13*s23^7 - 2082*s23^8) + 
             s12^6*(117*s13^8 - 522*s13^7*s23 - 504*s13^6*s23^2 + 21495*s13^5*
                s23^3 + 52058*s13^4*s23^4 + 16638*s13^3*s23^5 - 29265*s13^2*
                s23^6 - 17865*s13*s23^7 - 1740*s23^8) + s12^4*s13*
              (18*s13^9 - 63*s13^8*s23 - 1835*s13^7*s23^2 - 2670*s13^6*
                s23^3 + 17415*s13^5*s23^4 + 41155*s13^4*s23^5 + 13178*s13^3*
                s23^6 - 21231*s13^2*s23^7 - 13396*s13*s23^8 - 1411*s23^9) + 
             s12^5*(72*s13^9 - 378*s13^8*s23 - 3172*s13^7*s23^2 + 5462*s13^6*
                s23^3 + 44678*s13^5*s23^4 + 46071*s13^4*s23^5 - 13027*s13^3*
                s23^6 - 30447*s13^2*s23^7 - 8255*s13*s23^8 - 332*s23^9)) + 
           p3q^5*s12^2*(s12 + s23)*(-4*s13^5*s23^4*(s13 + s23)^3*
              (93*s13^2 + 186*s13*s23 + 83*s23^2) + s12*s13^4*s23^3*
              (s13 + s23)^2*(341*s13^4 - 1185*s13^3*s23 - 5588*s13^2*s23^2 - 
               5433*s13*s23^3 - 1411*s23^4) + s12^10*(18*s13^4 + 9*s13^3*
                s23 - 4*s13^2*s23^2 + 15*s13*s23^3 + 5*s23^4) + 
             s12^2*s13^3*s23^2*(s13 + s23)^2*(1031*s13^5 + 2805*s13^4*s23 - 
               231*s13^3*s23^2 - 9901*s13^2*s23^3 - 9232*s13*s23^4 - 2082*
                s23^5) + s12^9*(72*s13^5 - 63*s13^4*s23 - 307*s13^3*s23^2 - 
               77*s13^2*s23^3 + 235*s13*s23^4 + 125*s23^5) + 
             s12^8*(117*s13^6 - 378*s13^5*s23 - 1835*s13^4*s23^2 - 1528*s13^3*
                s23^3 + 542*s13^2*s23^4 + 930*s13*s23^5 + 225*s23^6) + 
             s12^7*(108*s13^7 - 522*s13^6*s23 - 3172*s13^5*s23^2 - 2670*s13^4*
                s23^3 + 2410*s13^3*s23^4 + 3538*s13^2*s23^5 + 945*s13*s23^6 - 
               25*s23^7) + s12^3*s13^2*s23*(207*s13^8 + 4159*s13^7*s23 + 
               16909*s13^6*s23^2 + 29238*s13^5*s23^3 + 16638*s13^4*s23^4 - 
               13027*s13^3*s23^5 - 21231*s13^2*s23^6 - 9045*s13*s23^7 - 1198*
                s23^8) + s12^6*(72*s13^8 + 144*s13^7*s23 - 504*s13^6*s23^2 + 
               5462*s13^5*s23^3 + 17415*s13^4*s23^4 + 16211*s13^3*s23^5 + 
               4654*s13^2*s23^6 - 395*s13*s23^7 - 250*s23^8) + 
             s12^4*s13*(9*s13^9 + 765*s13^8*s23 + 6768*s13^7*s23^2 + 27182*
                s13^6*s23^3 + 52058*s13^5*s23^4 + 46071*s13^4*s23^5 + 13178*
                s13^3*s23^6 - 4564*s13^2*s23^7 - 2904*s13*s23^8 - 360*
                s23^9) + s12^5*(36*s13^9 + 918*s13^8*s23 + 4776*s13^7*s23^2 + 
               21495*s13^6*s23^3 + 44678*s13^5*s23^4 + 41155*s13^4*s23^5 + 
               14988*s13^3*s23^6 + 25*s13^2*s23^7 - 990*s13*s23^8 - 120*
                s23^9)) + p2q*p3q^4*s12*(-(s13^5*s23^5*(s13 + s23)^3*(
                136*s13^3 + 669*s13^2*s23 + 10*s13*s23^2 - 163*s23^3)) + 
             s12^12*(36*s13^4 - 18*s13^3*s23 + 343*s13^2*s23^2 + 1217*s13*
                s23^3 + 680*s23^4) + s12*s13^4*s23^4*(s13 + s23)^2*
              (671*s13^5 - 3549*s13^4*s23 - 9392*s13^3*s23^2 - 4574*s13^2*
                s23^3 + 896*s13*s23^4 + 658*s23^5) + s12^11*(-99*s13^5 - 2457*
                s13^4*s23 - 3500*s13^3*s23^2 + 1347*s13^2*s23^3 + 4049*s13*
                s23^4 + 1570*s23^5) - s12^10*(90*s13^6 + 3996*s13^5*s23 + 
               7262*s13^4*s23^2 + 435*s13^3*s23^3 - 5128*s13^2*s23^4 - 987*
                s13*s23^5 + 790*s23^6) + s12^2*s13^3*s23^3*(s13 + s23)^2*
              (1837*s13^6 - 3206*s13^5*s23 - 21973*s13^4*s23^2 - 30461*s13^3*
                s23^3 - 17222*s13^2*s23^4 - 46*s13*s23^5 + 930*s23^6) + 
             s12^9*(702*s13^7 + 2151*s13^6*s23 + 12169*s13^5*s23^2 + 43577*
                s13^4*s23^3 + 53759*s13^3*s23^4 + 13702*s13^2*s23^5 - 12275*
                s13*s23^6 - 5200*s23^7) + s12^8*(1116*s13^8 + 10188*s13^7*
                s23 + 47474*s13^6*s23^2 + 140540*s13^5*s23^3 + 209702*s13^4*
                s23^4 + 132997*s13^3*s23^5 + 8088*s13^2*s23^6 - 22085*s13*
                s23^7 - 5300*s23^8) + s12^7*(477*s13^9 + 8982*s13^8*s23 + 
               52365*s13^7*s23^2 + 182869*s13^6*s23^3 + 337187*s13^5*s23^4 + 
               297858*s13^4*s23^5 + 90212*s13^3*s23^6 - 25141*s13^2*s23^7 - 
               17763*s13*s23^8 - 1870*s23^9) + s12^3*s13^2*s23^2*
              (1193*s13^9 + 2365*s13^8*s23 - 15245*s13^7*s23^2 - 80305*s13^6*
                s23^3 - 176054*s13^5*s23^4 - 212449*s13^4*s23^5 - 138728*
                s13^3*s23^6 - 41497*s13^2*s23^7 - 2572*s13*s23^8 + 480*
                s23^9) + s12^6*(18*s13^10 + 1611*s13^9*s23 + 24020*s13^8*
                s23^2 + 114693*s13^7*s23^3 + 262069*s13^6*s23^4 + 272524*
                s13^5*s23^5 + 79193*s13^4*s23^6 - 61105*s13^3*s23^7 - 44538*
                s13^2*s23^8 - 7381*s13*s23^9 - 30*s23^10) + 
             s12^5*s23*(-648*s13^10 + 2449*s13^9*s23 + 27238*s13^8*s23^2 + 
               80401*s13^7*s23^3 + 63497*s13^6*s23^4 - 87725*s13^5*s23^5 - 
               183341*s13^4*s23^6 - 112339*s13^3*s23^7 - 25248*s13^2*s23^8 - 
               1123*s13*s23^9 + 60*s23^10) + s12^4*s13*s23*(243*s13^10 + 101*
                s13^9*s23 - 1176*s13^8*s23^2 - 16505*s13^7*s23^3 - 84224*
                s13^6*s23^4 - 211037*s13^5*s23^5 - 268071*s13^4*s23^6 - 
               168685*s13^3*s23^7 - 46809*s13^2*s23^8 - 3881*s13*s23^9 + 150*
                s23^10)) + p2q^4*p3q*s13*(10*s13^5*s23^4*(s13 + s23)^4*
              (68*s13^3 - 115*s13^2*s23 - 27*s13*s23^2 + 6*s23^3) + 
             s12^11*s23*(243*s13^4 + 1193*s13^3*s23 + 1837*s13^2*s23^2 + 671*
                s13*s23^3 - 136*s23^4) + s12*s13^4*s23^3*(s13 + s23)^3*
              (1217*s13^5 + 398*s13^4*s23 - 3858*s13^3*s23^2 - 3112*s13^2*
                s23^3 - 1573*s13*s23^4 + 150*s23^5) + 
             s12^10*(18*s13^6 - 648*s13^5*s23 + 101*s13^4*s23^2 + 2365*s13^3*
                s23^3 + 468*s13^2*s23^4 - 2207*s13*s23^5 - 1077*s23^6) + 
             s12^9*(477*s13^7 + 1611*s13^6*s23 + 2449*s13^5*s23^2 - 1176*
                s13^4*s23^3 - 15245*s13^3*s23^4 - 26548*s13^2*s23^5 - 15819*
                s13*s23^6 - 2425*s23^7) + s12^2*s13^3*s23^2*(s13 + s23)^2*
              (343*s13^7 + 661*s13^6*s23 + 3463*s13^5*s23^2 + 6115*s13^4*
                s23^3 - 7605*s13^3*s23^4 - 16046*s13^2*s23^5 - 4841*s13*
                s23^6 + 480*s23^7) + s12^8*(1116*s13^8 + 8982*s13^7*s23 + 
               24020*s13^6*s23^2 + 27238*s13^5*s23^3 - 16505*s13^4*s23^4 - 
               80305*s13^3*s23^5 - 77613*s13^2*s23^6 - 26907*s13*s23^7 - 2010*
                s23^8) - s12^3*s13^2*s23*(s13 + s23)^2*(18*s13^8 + 3464*s13^7*
                s23 - 6511*s13^6*s23^2 - 44201*s13^5*s23^3 - 38084*s13^4*
                s23^4 + 30157*s13^3*s23^5 + 38875*s13^2*s23^6 + 4432*s13*
                s23^7 - 930*s23^8) + s12^7*(702*s13^9 + 10188*s13^8*s23 + 
               52365*s13^7*s23^2 + 114693*s13^6*s23^3 + 80401*s13^5*s23^4 - 
               84224*s13^4*s23^5 - 176054*s13^3*s23^6 - 100117*s13^2*s23^7 - 
               17644*s13*s23^8 - 210*s23^9) + s12^6*(-90*s13^10 + 2151*s13^9*
                s23 + 47474*s13^8*s23^2 + 182869*s13^7*s23^3 + 262069*s13^6*
                s23^4 + 63497*s13^5*s23^5 - 211037*s13^4*s23^6 - 212449*s13^3*
                s23^7 - 64951*s13^2*s23^8 - 2124*s13*s23^9 + 479*s23^10) + 
             s12^5*(-99*s13^11 - 3996*s13^10*s23 + 12169*s13^9*s23^2 + 140540*
                s13^8*s23^3 + 337187*s13^7*s23^4 + 272524*s13^6*s23^5 - 87725*
                s13^5*s23^6 - 268071*s13^4*s23^7 - 138728*s13^3*s23^8 - 16384*
                s13^2*s23^9 + 2212*s13*s23^10 + 163*s23^11) + 
             s12^4*s13*(36*s13^11 - 2457*s13^10*s23 - 7262*s13^9*s23^2 + 
               43577*s13^8*s23^3 + 209702*s13^7*s23^4 + 297858*s13^6*s23^5 + 
               79193*s13^5*s23^6 - 183341*s13^4*s23^7 - 168685*s13^3*s23^8 - 
               41497*s13^2*s23^9 + 1814*s13*s23^10 + 658*s23^11)) + 
           p2q^2*p3q^3*(-20*s13^6*s23^5*(s13 + s23)^4*(20*s13^2 - 17*s13*
                s23 - s23^2) - s12*s13^5*s23^4*(s13 + s23)^3*
              (1043*s13^4 + 180*s13^3*s23 + 311*s13^2*s23^2 - 233*s13*s23^3 - 
               732*s23^4) + s12^13*(18*s13^4 - 27*s13^3*s23 + 347*s13^2*
                s23^2 + 1022*s13*s23^3 + 540*s23^4) + 
             s12^12*(18*s13^5 - 2196*s13^4*s23 - 3451*s13^3*s23^2 + 213*s13^2*
                s23^3 + 2405*s13*s23^4 + 905*s23^5) - s12^2*s13^4*s23^3*
              (s13 + s23)^2*(1017*s13^6 - 5156*s13^5*s23 - 4338*s13^4*s23^2 + 
               14361*s13^3*s23^3 + 9584*s13^2*s23^4 - 3714*s13*s23^5 - 2167*
                s23^6) + s12^11*(765*s13^6 + 2664*s13^5*s23 + 7897*s13^4*
                s23^2 + 13203*s13^3*s23^3 + 8113*s13^2*s23^4 - 507*s13*
                s23^5 - 1185*s23^6) + s12^10*(1296*s13^7 + 13347*s13^6*s23 + 
               52782*s13^5*s23^2 + 107136*s13^4*s23^3 + 101791*s13^3*s23^4 + 
               32470*s13^2*s23^5 - 5776*s13*s23^6 - 2910*s23^7) - 
             s12^3*s13^3*s23^2*(s13 + s23)^2*(573*s13^7 - 15497*s13^6*s23 - 
               28433*s13^5*s23^2 + 18181*s13^4*s23^3 + 52759*s13^3*s23^4 + 
               26089*s13^2*s23^5 - 6459*s13*s23^6 - 2670*s23^7) + 
             s12^9*(-819*s13^8 + 8946*s13^7*s23 + 73644*s13^6*s23^2 + 211258*
                s13^5*s23^3 + 279935*s13^4*s23^4 + 165797*s13^3*s23^5 + 27366*
                s13^2*s23^6 - 6275*s13*s23^7 - 590*s23^8) + 
             s12^8*(-2502*s13^9 - 6318*s13^8*s23 + 26096*s13^7*s23^2 + 166126*
                s13^6*s23^3 + 314660*s13^5*s23^4 + 230479*s13^4*s23^5 + 26751*
                s13^3*s23^6 - 29770*s13^2*s23^7 - 3133*s13*s23^8 + 1605*
                s23^9) - s12^7*(1233*s13^10 + 8388*s13^9*s23 + 9146*s13^8*
                s23^2 - 45900*s13^7*s23^3 - 141955*s13^6*s23^4 - 77430*s13^5*
                s23^5 + 133800*s13^4*s23^6 + 171061*s13^3*s23^7 + 54775*s13^2*
                s23^8 + 15*s13*s23^9 - 915*s23^10) + s12^4*s13^2*s23*
              (-216*s13^10 + 12771*s13^9*s23 + 69938*s13^8*s23^2 + 121520*
                s13^7*s23^3 + 17771*s13^6*s23^4 - 215042*s13^5*s23^5 - 311872*
                s13^4*s23^6 - 180353*s13^3*s23^7 - 30450*s13^2*s23^8 + 8264*
                s13*s23^9 + 1989*s23^10) + s12^6*(-108*s13^11 + 2151*s13^10*
                s23 + 15082*s13^9*s23^2 + 35538*s13^8*s23^3 + 28504*s13^7*
                s23^4 - 102398*s13^6*s23^5 - 329682*s13^5*s23^6 - 361162*
                s13^4*s23^7 - 162059*s13^3*s23^8 - 21174*s13^2*s23^9 + 1448*
                s13*s23^10 + 80*s23^11) + s12^5*s13*(-27*s13^11 + 3573*s13^10*
                s23 + 31111*s13^9*s23^2 + 90040*s13^8*s23^3 + 84368*s13^7*
                s23^4 - 95373*s13^6*s23^5 - 355051*s13^5*s23^6 - 416470*s13^4*
                s23^7 - 219875*s13^3*s23^8 - 39286*s13^2*s23^9 + 2677*s13*
                s23^10 + 719*s23^11)) + p2q^3*p3q^2*
            (5*s13^6*s23^4*(s13 + s23)^4*(108*s13^3 - 251*s13^2*s23 + 119*s13*
                s23^2 + 16*s23^3) - s12^12*(27*s13^5 + 216*s13^4*s23 + 573*
                s13^3*s23^2 + 1017*s13^2*s23^3 + 1043*s13*s23^4 + 400*
                s23^5) + s12*s13^5*s23^3*(s13 + s23)^3*(1022*s13^5 - 661*
                s13^4*s23 - 1590*s13^3*s23^2 - 45*s13^2*s23^3 - 709*s13*
                s23^4 + 719*s23^5) + s12^11*(-108*s13^6 + 3573*s13^5*s23 + 
               12771*s13^4*s23^2 + 14351*s13^3*s23^3 + 3122*s13^2*s23^4 - 
               3309*s13*s23^5 - 1260*s23^6) + s12^10*(-1233*s13^7 + 2151*
                s13^6*s23 + 31111*s13^5*s23^2 + 69938*s13^4*s23^3 + 58854*
                s13^3*s23^4 + 13633*s13^2*s23^5 - 3980*s13*s23^6 - 1020*
                s23^7) + s12^2*s13^4*s23^2*(s13 + s23)^2*(347*s13^7 - 481*
                s13^6*s23 + 8728*s13^5*s23^2 + 15495*s13^4*s23^3 - 12352*
                s13^3*s23^4 - 20561*s13^2*s23^5 - 1301*s13*s23^6 + 1989*
                s23^7) - s12^3*s13^3*s23*(s13 + s23)^2*(27*s13^8 + 3397*s13^7*
                s23 - 20024*s13^6*s23^2 - 65140*s13^5*s23^3 - 15493*s13^4*
                s23^4 + 69375*s13^3*s23^5 + 47804*s13^2*s23^6 - 2924*s13*
                s23^7 - 2670*s23^8) + s12^9*(-2502*s13^8 - 8388*s13^7*s23 + 
               15082*s13^6*s23^2 + 90040*s13^5*s23^3 + 121520*s13^4*s23^4 + 
               54182*s13^3*s23^5 - 529*s13^2*s23^6 - 2283*s13*s23^7 + 520*
                s23^8) + s12^8*(-819*s13^9 - 6318*s13^8*s23 - 9146*s13^7*
                s23^2 + 35538*s13^6*s23^3 + 84368*s13^5*s23^4 + 17771*s13^4*
                s23^5 - 60688*s13^3*s23^6 - 33968*s13^2*s23^7 + 318*s13*
                s23^8 + 1080*s23^9) + s12^7*(1296*s13^10 + 8946*s13^9*s23 + 
               26096*s13^8*s23^2 + 45900*s13^7*s23^3 + 28504*s13^6*s23^4 - 
               95373*s13^5*s23^5 - 215042*s13^4*s23^6 - 149788*s13^3*s23^7 - 
               29815*s13^2*s23^8 + 2584*s13*s23^9 + 420*s23^10) + 
             s12^6*(765*s13^11 + 13347*s13^10*s23 + 73644*s13^9*s23^2 + 
               166126*s13^8*s23^3 + 141955*s13^7*s23^4 - 102398*s13^6*s23^5 - 
               355051*s13^5*s23^6 - 311872*s13^4*s23^7 - 98478*s13^3*s23^8 + 
               11*s13^2*s23^9 + 2429*s13*s23^10 + 20*s23^11) + 
             s12^5*s13*(18*s13^11 + 2664*s13^10*s23 + 52782*s13^9*s23^2 + 
               211258*s13^8*s23^3 + 314660*s13^7*s23^4 + 77430*s13^6*s23^5 - 
               329682*s13^5*s23^6 - 416470*s13^4*s23^7 - 180353*s13^3*s23^8 - 
               10501*s13^2*s23^9 + 8048*s13*s23^10 + 732*s23^11) + 
             s12^4*s13^2*(18*s13^11 - 2196*s13^10*s23 + 7897*s13^9*s23^2 + 
               107136*s13^8*s23^3 + 279935*s13^7*s23^4 + 230479*s13^6*s23^5 - 
               133800*s13^5*s23^6 - 361162*s13^4*s23^7 - 219875*s13^3*s23^8 - 
               30450*s13^2*s23^9 + 11799*s13*s23^10 + 2167*s23^11))) - 
         p1q^3*(-(p3q^4*s12*(s12 + s23)*(s13^5*s23^5*(s13 + s23)^3*(
                203*s13^2 + 486*s13*s23 + 163*s23^2) - s12*s13^4*s23^4*
               (s13 + s23)^2*(379*s13^4 - 737*s13^3*s23 - 3510*s13^2*s23^2 - 
                3095*s13*s23^3 - 821*s23^4) - s12^10*(18*s13^5 + 
                108*s13^4*s23 + 125*s13^3*s23^2 + 20*s13^2*s23^3 - 
                50*s13*s23^4 - 30*s23^5) + 2*s12^2*s13^3*s23^3*(s13 + s23)^2*(
                28*s13^5 - 899*s13^4*s23 - 782*s13^3*s23^2 + 1983*s13^2*
                 s23^3 + 2467*s13*s23^4 + 628*s23^5) - s12^9*(90*s13^6 + 
                477*s13^5*s23 + 716*s13^4*s23^2 + 201*s13^3*s23^3 - 
                193*s13^2*s23^4 + 50*s13*s23^5 + 100*s23^6) + 
              s12^3*s13^2*s23^2*(s13 + s23)^2*(947*s13^6 + 577*s13^5*s23 - 
                6181*s13^4*s23^2 - 10702*s13^3*s23^3 - 1855*s13^2*s23^4 + 
                2644*s13*s23^5 + 608*s23^6) - s12^8*(180*s13^7 + 
                684*s13^6*s23 + 409*s13^5*s23^2 - 2013*s13^4*s23^3 - 
                3016*s13^3*s23^4 - 438*s13^2*s23^5 + 1070*s13*s23^6 + 
                400*s23^7) + s12^7*(-180*s13^8 - 99*s13^7*s23 + 2774*s13^6*
                 s23^2 + 10468*s13^5*s23^3 + 14066*s13^4*s23^4 + 
                5909*s13^3*s23^5 - 2042*s13^2*s23^6 - 1930*s13*s23^7 - 
                300*s23^8) + s12^6*(-90*s13^9 + 657*s13^8*s23 + 6465*s13^7*
                 s23^2 + 19370*s13^6*s23^3 + 22596*s13^5*s23^4 + 
                5755*s13^4*s23^5 - 7430*s13^3*s23^6 - 5216*s13^2*s23^7 - 
                920*s13*s23^8 + 50*s23^9) + s12^4*s13*s23*(171*s13^9 + 
                3823*s13^8*s23 + 9951*s13^7*s23^2 - 737*s13^6*s23^3 - 
                34679*s13^5*s23^4 - 51270*s13^4*s23^5 - 29242*s13^3*s23^6 - 
                5269*s13^2*s23^7 + 526*s13*s23^8 + 180*s23^9) + 
              s12^5*(-18*s13^10 + 612*s13^9*s23 + 6749*s13^8*s23^2 + 
                18632*s13^7*s23^3 + 13439*s13^6*s23^4 - 16888*s13^5*s23^5 - 
                32748*s13^4*s23^6 - 18120*s13^3*s23^7 - 3031*s13^2*s23^8 + 
                220*s13*s23^9 + 80*s23^10))) - p2q^4*s13*(s13 + s23)*
            (10*s13^5*s23^5*(s13 + s23)^3*(3*s13^2 - 19*s13*s23 + 8*s23^2) + 
             10*s12*s13^4*s23^4*(s13 + s23)^2*(5*s13^4 - 15*s13^3*s23 - 82*
                s13^2*s23^2 - 14*s13*s23^3 + 18*s23^4) - s12^2*s13^3*s23^3*
              (s13 + s23)^2*(20*s13^5 - 233*s13^4*s23 + 8*s13^3*s23^2 + 2259*
                s13^2*s23^3 + 690*s13*s23^4 - 608*s23^5) + 
             s12^10*(-18*s13^5 + 171*s13^4*s23 + 947*s13^3*s23^2 + 56*s13^2*
                s23^3 - 379*s13*s23^4 + 203*s23^5) + s12^9*(-90*s13^6 + 612*
                s13^5*s23 + 3823*s13^4*s23^2 + 2471*s13^3*s23^3 - 1686*s13^2*
                s23^4 - 21*s13*s23^5 + 1095*s23^6) + s12^8*(-180*s13^7 + 657*
                s13^6*s23 + 6749*s13^5*s23^2 + 9951*s13^4*s23^3 - 4080*s13^3*
                s23^4 - 5104*s13^2*s23^5 + 4605*s13*s23^6 + 2230*s23^7) + 
             s12^3*s13^2*s23^2*(-125*s13^8 - 201*s13^7*s23 + 3016*s13^6*
                s23^2 + 5909*s13^5*s23^3 - 7430*s13^4*s23^4 - 18120*s13^3*
                s23^5 - 5269*s13^2*s23^6 + 3860*s13*s23^7 + 1256*s23^8) + 
             s12^7*(-180*s13^8 - 99*s13^7*s23 + 6465*s13^6*s23^2 + 18632*
                s13^5*s23^3 - 737*s13^4*s23^4 - 22487*s13^3*s23^5 - 960*s13^2*
                s23^6 + 10852*s13*s23^7 + 2150*s23^8) + s12^4*s13*s23*
              (-108*s13^9 - 716*s13^8*s23 + 2013*s13^7*s23^2 + 14066*s13^6*
                s23^3 + 5755*s13^5*s23^4 - 32748*s13^4*s23^5 - 29242*s13^3*
                s23^6 + 4041*s13^2*s23^7 + 7446*s13*s23^8 + 821*s23^9) + 
             s12^6*(-90*s13^9 - 684*s13^8*s23 + 2774*s13^7*s23^2 + 19370*
                s13^6*s23^3 + 13439*s13^5*s23^4 - 34679*s13^4*s23^5 - 29440*
                s13^3*s23^6 + 11302*s13^2*s23^7 + 10521*s13*s23^8 + 975*
                s23^9) + s12^5*(-18*s13^10 - 477*s13^9*s23 - 409*s13^8*
                s23^2 + 10468*s13^7*s23^3 + 22596*s13^6*s23^4 - 16888*s13^5*
                s23^5 - 51270*s13^4*s23^6 - 11768*s13^3*s23^7 + 15090*s13^2*
                s23^8 + 4737*s13*s23^9 + 163*s23^10)) + 
           p2q*p3q^3*(-20*s13^6*(19*s13 - 5*s23)*s23^6*(s13 + s23)^4 - 
             s12*s13^4*s23^5*(s13 + s23)^3*(865*s13^4 + 1092*s13^3*s23 + 1164*
                s13^2*s23^2 + 309*s13*s23^3 - 163*s23^4) + 
             s12^12*(36*s13^5 + 594*s13^4*s23 + 1132*s13^3*s23^2 + 2042*s13^2*
                s23^3 + 2883*s13*s23^4 + 1290*s23^5) - s12^2*s13^3*s23^4*
              (s13 + s23)^2*(1667*s13^6 - 1624*s13^5*s23 - 4382*s13^4*s23^2 + 
               5530*s13^3*s23^3 + 7235*s13^2*s23^4 + 1233*s13*s23^5 - 326*
                s23^6) + s12^11*(-72*s13^6 - 18*s13^5*s23 - 2877*s13^4*
                s23^2 - 2665*s13^3*s23^3 + 7837*s13^2*s23^4 + 11751*s13*
                s23^5 + 4130*s23^6) - s12^10*(468*s13^7 + 3366*s13^6*s23 + 
               15946*s13^5*s23^2 + 32330*s13^4*s23^3 + 18468*s13^3*s23^4 - 
               13167*s13^2*s23^5 - 15493*s13*s23^6 - 3420*s23^7) - 
             s12^3*s13^2*s23^3*(s13 + s23)^2*(2804*s13^7 - 3860*s13^6*s23 - 
               27640*s13^5*s23^2 - 20680*s13^4*s23^3 + 9543*s13^3*s23^4 + 
               14848*s13^2*s23^5 + 2552*s13*s23^6 - 128*s23^7) - 
             s12^9*(648*s13^8 + 6345*s13^7*s23 + 25958*s13^6*s23^2 + 54916*
                s13^5*s23^3 + 44263*s13^4*s23^4 - 7099*s13^3*s23^5 - 21852*
                s13^2*s23^6 - 3285*s13*s23^7 + 1800*s23^8) - 
             s12^8*(396*s13^9 + 5760*s13^8*s23 + 22870*s13^7*s23^2 + 39551*
                s13^6*s23^3 - 4997*s13^5*s23^4 - 105793*s13^4*s23^5 - 117259*
                s13^3*s23^6 - 32378*s13^2*s23^7 + 9895*s13*s23^8 + 3950*
                s23^9) + s12^7*(-144*s13^10 - 2862*s13^9*s23 - 14924*s13^8*
                s23^2 - 13482*s13^7*s23^3 + 81698*s13^6*s23^4 + 270071*s13^5*
                s23^5 + 334573*s13^4*s23^6 + 175896*s13^3*s23^7 + 20003*s13^2*
                s23^8 - 10157*s13*s23^9 - 1710*s23^10) + s12^4*s13*s23^2*
              (-2113*s13^10 - 6814*s13^9*s23 + 23012*s13^8*s23^2 + 129213*
                s13^7*s23^3 + 221956*s13^6*s23^4 + 162473*s13^5*s23^5 + 18857*
                s13^4*s23^6 - 41190*s13^3*s23^7 - 20542*s13^2*s23^8 - 2482*
                s13*s23^9 + 30*s23^10) + s12^5*s23*(-567*s13^11 - 5545*s13^10*
                s23 - 5227*s13^9*s23^2 + 67584*s13^8*s23^3 + 251154*s13^7*
                s23^4 + 384404*s13^6*s23^5 + 283574*s13^5*s23^6 + 75282*s13^4*
                s23^7 - 16462*s13^3*s23^8 - 10280*s13^2*s23^9 - 967*s13*
                s23^10 + 20*s23^11) - s12^6*(36*s13^11 + 1260*s13^10*s23 + 
               9507*s13^9*s23^2 + 3341*s13^8*s23^3 - 101071*s13^7*s23^4 - 
               326713*s13^6*s23^5 - 458371*s13^5*s23^6 - 310768*s13^4*s23^7 - 
               81865*s13^3*s23^8 + 5565*s13^2*s23^9 + 4599*s13*s23^10 + 120*
                s23^11)) - p2q^3*p3q*(-10*s13^5*s23^5*(s13 + s23)^4*
              (129*s13^3 - 103*s13^2*s23 - 20*s13*s23^2 + 2*s23^3) - 
             s12*s13^4*s23^4*(s13 + s23)^3*(2883*s13^5 + 3102*s13^4*s23 - 
               2462*s13^3*s23^2 - 1518*s13^2*s23^3 - 1057*s13*s23^4 + 30*
                s23^5) + s12^11*(36*s13^6 + 567*s13^5*s23 + 2113*s13^4*
                s23^2 + 2804*s13^3*s23^3 + 1667*s13^2*s23^4 + 865*s13*s23^5 + 
               380*s23^6) - s12^2*s13^3*s23^3*(s13 + s23)^2*(2042*s13^7 + 
               3753*s13^6*s23 + 3619*s13^5*s23^2 + 10861*s13^4*s23^3 + 7037*
                s13^3*s23^4 - 4932*s13^2*s23^5 - 2738*s13*s23^6 + 128*
                s23^7) + s12^10*(144*s13^7 + 1260*s13^6*s23 + 5545*s13^5*
                s23^2 + 6814*s13^4*s23^3 + 1748*s13^3*s23^4 + 1710*s13^2*
                s23^5 + 3687*s13*s23^6 + 1420*s23^7) - s12^3*s13^2*s23^2*
              (s13 + s23)^2*(1132*s13^8 - 4929*s13^7*s23 - 9742*s13^6*s23^2 + 
               31512*s13^5*s23^3 + 63977*s13^4*s23^4 + 16430*s13^3*s23^5 - 
               14972*s13^2*s23^6 - 2948*s13*s23^7 + 326*s23^8) + 
             s12^9*(396*s13^8 + 2862*s13^7*s23 + 9507*s13^6*s23^2 + 5227*
                s13^5*s23^3 - 23012*s13^4*s23^4 - 32556*s13^3*s23^5 - 5963*
                s13^2*s23^6 + 7035*s13*s23^7 + 1880*s23^8) + 
             s12^8*(648*s13^9 + 5760*s13^8*s23 + 14924*s13^7*s23^2 + 3341*
                s13^6*s23^3 - 67584*s13^5*s23^4 - 129213*s13^4*s23^5 - 79820*
                s13^3*s23^6 - 4858*s13^2*s23^7 + 7942*s13*s23^8 + 920*
                s23^9) + s12^7*(468*s13^10 + 6345*s13^9*s23 + 22870*s13^8*
                s23^2 + 13482*s13^7*s23^3 - 101071*s13^6*s23^4 - 251154*s13^5*
                s23^5 - 221956*s13^4*s23^6 - 59457*s13^3*s23^7 + 13913*s13^2*
                s23^8 + 5348*s13*s23^9 - 20*s23^10) + s12^4*s13*s23*
              (-594*s13^11 + 2877*s13^10*s23 + 32330*s13^9*s23^2 + 44263*
                s13^8*s23^3 - 105793*s13^7*s23^4 - 334573*s13^6*s23^5 - 
               310768*s13^5*s23^6 - 75282*s13^4*s23^7 + 41190*s13^3*s23^8 + 
               19824*s13^2*s23^9 + 581*s13*s23^10 - 163*s23^11) + 
             s12^6*(72*s13^11 + 3366*s13^10*s23 + 25958*s13^9*s23^2 + 39551*
                s13^8*s23^3 - 81698*s13^7*s23^4 - 326713*s13^6*s23^5 - 384404*
                s13^5*s23^6 - 162473*s13^4*s23^7 + 13254*s13^3*s23^8 + 21233*
                s13^2*s23^9 + 1602*s13*s23^10 - 100*s23^11) - 
             s12^5*s13*(36*s13^11 - 18*s13^10*s23 - 15946*s13^9*s23^2 - 54916*
                s13^8*s23^3 + 4997*s13^7*s23^4 + 270071*s13^6*s23^5 + 458371*
                s13^5*s23^6 + 283574*s13^4*s23^7 + 18857*s13^3*s23^8 - 41791*
                s13^2*s23^9 - 9375*s13*s23^10 + 180*s23^11)) + 
           p2q^2*p3q^2*(5*s13^5*s23^5*(s13 + s23)^4*(156*s13^3 - 239*s13^2*
                s23 + 77*s13*s23^2 + 4*s23^3) + s12*s13^4*s23^4*(s13 + s23)^3*
              (1916*s13^5 + 935*s13^4*s23 - 1084*s13^3*s23^2 + 139*s13^2*
                s23^3 - 825*s13*s23^4 + 193*s23^5) + s12^12*(18*s13^5 + 486*
                s13^4*s23 + 1043*s13^3*s23^2 + 1671*s13^2*s23^3 + 1916*s13*
                s23^4 + 780*s23^5) + s12^11*(18*s13^6 - 216*s13^5*s23 - 3078*
                s13^4*s23^2 - 2933*s13^3*s23^3 + 4759*s13^2*s23^4 + 6683*s13*
                s23^5 + 1925*s23^6) + s12^10*(270*s13^7 - 495*s13^6*s23 - 
               8713*s13^5*s23^2 - 17017*s13^4*s23^3 - 3000*s13^3*s23^4 + 
               13343*s13^2*s23^5 + 7469*s13*s23^6 + 285*s23^7) + 
             s12^2*s13^3*s23^3*(s13 + s23)^2*(1671*s13^7 + 1417*s13^6*s23 + 
               8838*s13^5*s23^2 + 22502*s13^4*s23^3 + 5426*s13^3*s23^4 - 
               10359*s13^2*s23^5 - 3001*s13*s23^6 + 454*s23^7) + 
             s12^9*(846*s13^8 + 2268*s13^7*s23 - 1850*s13^6*s23^2 - 1796*
                s13^5*s23^3 + 37130*s13^4*s23^4 + 73531*s13^3*s23^5 + 41595*
                s13^2*s23^6 + 1608*s13*s23^7 - 2490*s23^8) + 
             s12^3*s13^2*s23^2*(s13 + s23)^2*(1043*s13^8 - 5019*s13^7*s23 + 
               5995*s13^6*s23^2 + 66560*s13^5*s23^3 + 66681*s13^4*s23^4 - 
               5085*s13^3*s23^5 - 23873*s13^2*s23^6 - 2772*s13*s23^7 + 454*
                s23^8) + s12^8*(846*s13^9 + 4122*s13^8*s23 + 13346*s13^7*
                s23^2 + 45452*s13^6*s23^3 + 145698*s13^5*s23^4 + 255669*s13^4*
                s23^5 + 205796*s13^3*s23^6 + 59268*s13^2*s23^7 - 2725*s13*
                s23^8 - 1610*s23^9) + s12^7*(270*s13^10 + 2268*s13^9*s23 + 
               13346*s13^8*s23^2 + 71470*s13^7*s23^3 + 238459*s13^6*s23^4 + 
               444084*s13^5*s23^5 + 434665*s13^4*s23^6 + 194837*s13^3*s23^7 + 
               22995*s13^2*s23^8 - 2949*s13*s23^9 + 465*s23^10) + 
             s12^4*s13*s23*(486*s13^11 - 3078*s13^10*s23 - 17017*s13^9*
                s23^2 + 37130*s13^8*s23^3 + 255669*s13^7*s23^4 + 434665*s13^6*
                s23^5 + 292907*s13^5*s23^6 + 17387*s13^4*s23^7 - 72618*s13^3*
                s23^8 - 28963*s13^2*s23^9 - 2093*s13*s23^10 + 193*s23^11) + 
             s12^6*(18*s13^11 - 495*s13^10*s23 - 1850*s13^9*s23^2 + 45452*
                s13^8*s23^3 + 238459*s13^7*s23^4 + 515492*s13^6*s23^5 + 
               568010*s13^5*s23^6 + 292907*s13^4*s23^7 + 32638*s13^3*s23^8 - 
               18293*s13^2*s23^9 - 1757*s13*s23^10 + 465*s23^11) + 
             s12^5*(18*s13^12 - 216*s13^11*s23 - 8713*s13^10*s23^2 - 1796*
                s13^9*s23^3 + 145698*s13^8*s23^4 + 444084*s13^7*s23^5 + 
               568010*s13^6*s23^6 + 320490*s13^5*s23^7 + 17387*s13^4*s23^8 - 
               55603*s13^3*s23^9 - 15907*s13^2*s23^10 - 246*s13*s23^11 + 20*
                s23^12))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*
         s13^3*(s12 + s13)^2*s23^2*(s12 + s23)^2*(s13 + s23)^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((ep^3*s23*(p3q*s12*(19*s12 + s13 - s23) - p2q*(19*s12*s13 + s13^2 + 
            20*s12*s23 + s13*s23) + p1q*(-18*s12*s13 - 19*s12*s23 + s13*s23 + 
            s23^2)))/(54*(p1q + p2q + p3q)*s13) + 
       (ep^2*(-(p2q^5*s13^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23)) - 
          10*p3q^2*(s13 + s23)*(s12 + s13 + s23)*(p3q*s12 - p1q*s23)^2*
           (-(p3q*s12) + p1q*(s13 + s23)) - p2q^4*s13*
           (p1q*s13*(s13 + s23)*(s12 + s13 + s23)*(s12 + 3*s23) + 
            p3q*(-(s12^3*(21*s13 + 20*s23)) - s12^2*(38*s13^2 + 79*s13*s23 + 
                40*s23^2) + s12*(29*s13^3 - 46*s13^2*s23 + 23*s13*s23^2 + 
                100*s23^3) + s13*(10*s13^3 - 129*s13^2*s23 + 38*s13*s23^2 + 
                177*s23^3))) + p2q*p3q*(-(p1q^3*s23^2*(s13 + s23)*
              (-s12^2 + 7*s12*s13 + 8*s13^2 + 8*s12*s23 + 17*s13*s23 + 9*
                s23^2)) + p3q^3*s12*(19*s12^4 - 2*s13^2*(s13 - 163*s23)*s23 + 
              s12^3*(65*s13 + 48*s23) + s12^2*(-20*s13^2 + 81*s13*s23 + 
                19*s23^2) - 2*s12*(15*s13^3 - 25*s13^2*s23 - 58*s13*s23^2 + 
                5*s23^3)) - p1q*p3q^2*(326*s13^2*s23^2*(s13 + s23) + 
              s12^4*(19*s13 + 37*s23) + s12^3*(101*s13^2 + 185*s13*s23 + 
                104*s23^2) + s12^2*(-10*s13^3 + 71*s13^2*s23 + 248*s13*
                 s23^2 + 47*s23^3) + s12*(-20*s13^4 + 64*s13^3*s23 + 
                46*s13^2*s23^2 + 272*s13*s23^3 - 20*s23^4)) + 
            p1q^2*p3q*(s12^3*s23*(18*s13 + 17*s23) + s12*s23*(-2*s13^3 + 
                156*s13^2*s23 + 193*s13*s23^2 + 37*s23^3) + s12^2*(36*s13^3 + 
                108*s13^2*s23 + 135*s13*s23^2 + 64*s23^3) + 2*s23*(10*s13^4 - 
                55*s13^3*s23 + 18*s13^2*s23^2 + 78*s13*s23^3 - 5*s23^4))) + 
          p2q^2*(p1q^3*s23^2*(s13 + s23)*(s12^2 + 3*s12*s13 + 2*s13^2 + 
              2*s12*s23 + 3*s13*s23 + s23^2) + p3q^3*(19*s12^5 + 
              s12^4*(-2*s13 + 19*s23) + 2*s13^2*s23*(s13^2 - 161*s13*s23 - 
                162*s23^2) + s12^2*s23*(-105*s13^2 + 116*s13*s23 - 
                29*s23^2) - s12^3*(159*s13^2 + 90*s13*s23 + 29*s23^2) + 
              2*s12*s13*(15*s13^3 - 101*s13^2*s23 + 140*s13*s23^2 - 
                73*s23^3)) + p1q^2*p3q*(s12^3*s23*(18*s13 + 17*s23) + 
              s12^2*s23*(34*s13^2 + 68*s13*s23 + 35*s23^2) + s23*(18*s13^4 - 
                112*s13^3*s23 + 39*s13^2*s23^2 + 160*s13*s23^3 - 9*s23^4) + 
              s12*(-36*s13^4 - 114*s13^3*s23 + 15*s13^2*s23^2 + 
                100*s13*s23^3 + 9*s23^4)) - p1q*p3q^2*
             (s12^4*(19*s13 + 37*s23) + s12^3*(17*s13^2 + 71*s13*s23 + 
                56*s23^2) - s12^2*(166*s13^3 + 255*s13^2*s23 - 14*s13*s23^2 + 
                19*s23^3) + 2*s13*(5*s13^4 - 75*s13^3*s23 + 231*s13^2*s23^2 + 
                218*s13*s23^3 - 93*s23^4) - 2*s12*(5*s13^4 + 25*s13^2*s23^2 - 
                118*s13*s23^3 + 19*s23^4))) + 
          p2q^3*(p1q^2*s23*(s13 + s23)*(-2*s13^3 + s12^2*s23 + 3*s13*s23^2 + 
              s23^3 + s12*(-2*s13^2 + 3*s13*s23 + 2*s23^2)) - 
            p3q^2*(s12^4*(39*s13 + 19*s23) + s12^3*(54*s13^2 + 95*s13*s23 + 
                38*s23^2) + s12^2*(-123*s13^3 + 3*s13^2*s23 - 58*s13*s23^2 + 
                19*s23^3) + s12*s13*(-20*s13^3 + 115*s13^2*s23 + 
                49*s13*s23^2 + 246*s23^3) + 2*s13^2*(5*s13^3 - 66*s13^2*s23 + 
                179*s13*s23^2 + 250*s23^3)) + p1q*p3q*
             (2*s12^3*(10*s13^2 + 19*s13*s23 + 9*s23^2) + s12^2*(37*s13^3 + 
                113*s13^2*s23 + 110*s13*s23^2 + 36*s23^3) + s12*(-65*s13^4 - 
                67*s13^3*s23 + 2*s13^2*s23^2 + 18*s13*s23^3 + 18*s23^4) + 
              s13*(-10*s13^4 + 147*s13^3*s23 - 142*s13^2*s23^2 - 
                113*s13*s23^3 + 186*s23^4)))))/(108*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(-2*p1q^5*(s12 - s13)*s23^4*(s13 + s23)*(s12 + s13 + s23)*
           (p2q*(s13 - 40*s23) + 5*p3q*(2*s13 + s23)) + 
          p1q^4*s23^3*(s12 + s13 + s23)*(-(p2q^2*(s13 + s23)*
              (-2*s12^2*(s13 - 40*s23) + s12*(247*s13 - 80*s23)*s23 + s13*
                (6*s13^2 + 490*s13*s23 + 405*s23^2))) + 
            10*p3q^2*(s12^2*(2*s13^2 + 6*s13*s23 + 3*s23^2) - 
              s12*(4*s13^3 + 13*s13^2*s23 + 10*s13*s23^2 + 2*s23^3) + 
              s13*(-2*s13^3 + 5*s13*s23^2 + 3*s23^3)) - 
            p2q*p3q*(2*s12^2*(7*s13^2 + 171*s13*s23 + 205*s23^2) + 
              s12*(-32*s13^3 + 107*s13^2*s23 + 87*s13*s23^2 + 30*s23^3) + 
              s13*(62*s13^3 + 766*s13^2*s23 + 989*s13*s23^2 + 285*s23^3))) + 
          (p2q + p3q)*(-10*p3q^5*s12^2*(s12 + s13)*s23*(s12^4 + 
              4*s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 3*s23) - 
              2*s12^2*(s13^2 - s23^2) - s12*s13*(3*s13^2 + 2*s13*s23 + 
                3*s23^2)) + p2q^5*s13^3*s23*(s13*(s13 + s23)^2*(728*s13 + 
                645*s23) + s12^3*(725*s13 + 721*s23) + 2*s12^2*(1089*s13^2 + 
                1608*s13*s23 + 521*s23^2) + 3*s12*(727*s13^3 + 1532*s13^2*
                 s23 + 912*s13*s23^2 + 107*s23^3)) - p2q*p3q^4*s12*
             (100*s12^6*s23 + s12^5*s23*(347*s13 + 110*s23) + 
              2*s12*s13^2*s23*(1701*s13^3 + 3177*s13^2*s23 + 543*s13*s23^2 - 
                25*s23^3) + 16*s13^3*s23*(81*s13^3 + 78*s13^2*s23 + 
                74*s13*s23^2 - 5*s23^3) + 2*s12^4*(648*s13^3 + 1233*s13^2*
                 s23 + 266*s13*s23^2 - 5*s23^3) + s12^2*s13*s23*(6140*s13^3 + 
                6587*s13^2*s23 + 825*s13*s23^2 + 10*s23^3) + 
              s12^3*(1296*s13^4 + 4957*s13^3*s23 + 3199*s13^2*s23^2 + 
                265*s13*s23^3 - 20*s23^4)) + p2q^2*p3q^3*
             (5*s12^6*s23*(-13*s13 + 20*s23) + s12^5*s23*(-1653*s13^2 - 
                13*s13*s23 + 120*s23^2) + 8*s13^4*s23*(162*s13^3 + 
                323*s13^2*s23 + 323*s13*s23^2 + 162*s23^3) + 2*s12*s13^3*s23*(
                729*s13^3 + 4124*s13^2*s23 + 2713*s13*s23^2 + 634*s23^3) + 
              s12^2*s13^2*s23*(3540*s13^3 + 4853*s13^2*s23 + 6100*s13*s23^2 + 
                915*s23^3) + s12^4*(3888*s13^4 + 3129*s13^3*s23 + 
                391*s13^2*s23^2 + 287*s13*s23^3 + 20*s23^4) + 
              s12^3*s13*(3888*s13^4 + 4207*s13^3*s23 + 989*s13^2*s23^2 + 
                2777*s13*s23^3 + 315*s23^4)) + p2q^3*p3q^2*s13*
             (-3*s12^5*(59*s13 - 55*s23)*s23 + s12^4*s23*(1201*s13^2 + 
                2336*s13*s23 + 490*s23^2) + 2*s13^3*s23*(957*s13^3 + 
                1727*s13^2*s23 + 1887*s13*s23^2 + 1117*s23^3) + 
              s12*s13^2*s23*(484*s13^3 + 7923*s13^2*s23 + 7651*s13*s23^2 + 
                1540*s23^3) + s12^3*(-3888*s13^4 - 7323*s13^3*s23 - 
                934*s13^2*s23^2 + 3120*s13*s23^3 + 325*s23^4) + 
              s12^2*s13*(-3888*s13^4 - 6243*s13^3*s23 + 2660*s13^2*s23^2 + 
                7479*s13*s23^3 + 927*s23^4)) + p2q^4*p3q*s13^2*
             (s12^4*s23*(-383*s13 + 382*s23) + s12^3*s23*(-1369*s13^2 + 
                115*s13*s23 + 284*s23^2) + s13^2*s23*(2066*s13^3 + 
                4735*s13^2*s23 + 4576*s13*s23^2 + 1907*s23^3) + 
              s12^2*(1296*s13^4 + 4509*s13^3*s23 + 7669*s13^2*s23^2 + 
                4399*s13*s23^3 + 62*s23^4) + s12*s13*(1296*s13^4 + 
                6265*s13^3*s23 + 11375*s13^2*s23^2 + 7395*s13*s23^3 + 
                997*s23^4))) + p1q*(10*p3q^5*s12*s23*(3*s12^5*(s13 + s23) + 
              4*s13^3*s23^2*(s13 + s23) + s12^4*(9*s13^2 + 19*s13*s23 + 
                11*s23^2) - s12*s13^2*(3*s13^3 + 19*s13^2*s23 + 
                13*s13*s23^2 + s23^3) - s12^2*s13*(3*s13^3 + 25*s13^2*s23 + 
                16*s13*s23^2 + 6*s23^3) + s12^3*(6*s13^3 + 10*s13^2*s23 + 
                15*s13*s23^2 + 8*s23^3)) + p2q^5*s13^2*s23*
             (s13*(s13 + s23)^2*(726*s13^2 - 491*s13*s23 - 643*s23^2) + 
              s12^3*(723*s13^2 + 477*s13*s23 - 238*s23^2) + 
              s12^2*(2172*s13^3 + 1267*s13^2*s23 - 1129*s13*s23^2 - 
                236*s23^3) + s12*(2175*s13^4 + 1751*s13^3*s23 - 2435*s13^2*
                 s23^2 - 2009*s13*s23^3 + 2*s23^4)) + p2q^4*p3q*s13*
             (2*s12^4*s23*(174*s13^2 + 105*s13*s23 - 205*s23^2) + 
              s12^3*s23*(1458*s13^3 + 51*s13^2*s23 - 4288*s13*s23^2 - 
                1060*s23^3) + s13^2*s23*(2772*s13^4 + 2440*s13^3*s23 - 
                1363*s13^2*s23^2 - 2870*s13*s23^3 - 1839*s23^4) + 
              s12*s13*(2592*s13^5 + 10482*s13^4*s23 + 11383*s13^3*s23^2 - 
                5094*s13^2*s23^3 - 9531*s13*s23^4 - 968*s23^5) + 
              s12^2*(2592*s13^5 + 14004*s13^4*s23 + 15408*s13^3*s23^2 - 
                1167*s13^2*s23^3 - 5226*s13*s23^4 - 650*s23^5)) + 
            p2q^2*p3q^3*(2*s12^6*s23*(69*s13 + 190*s23) + s12^5*s23*(
                426*s13^2 + 1721*s13*s23 + 50*s23^2) + 2*s12*s13^2*s23*(
                2919*s13^4 + 11974*s13^3*s23 + 5092*s13^2*s23^2 - 
                2024*s13*s23^3 - 705*s23^4) + 2*s13^3*s23*(1605*s13^4 + 
                2085*s13^3*s23 + 2161*s13^2*s23^2 + 1227*s13*s23^3 - 
                454*s23^4) + s12^4*(5184*s13^4 + 10746*s13^3*s23 + 
                13008*s13^2*s23^2 + 2147*s13*s23^3 - 430*s23^4) + 
              s12^2*s13*(-2592*s13^5 + 10194*s13^4*s23 + 23604*s13^3*s23^2 + 
                17171*s13^2*s23^3 - 4220*s13*s23^4 - 905*s23^5) + 
              s12^3*(2592*s13^5 + 2472*s13^4*s23 + 13765*s13^3*s23^2 + 
                9446*s13^2*s23^3 + 269*s13*s23^4 - 100*s23^5)) + 
            p2q*p3q^4*(4*s12^6*s23*(42*s13 + 125*s23) + 3*s12^4*s23*(
                1670*s13^3 + 3055*s13^2*s23 + 776*s13*s23^2 + 20*s23^3) + 
              8*s13^4*s23*(162*s13^3 + 324*s13^2*s23 + 325*s13*s23^2 + 
                163*s23^3) + s12^5*(-1296*s13^3 + 429*s13^2*s23 + 
                1816*s13*s23^2 + 620*s23^3) + 4*s12*s13^2*s23*(825*s13^4 + 
                2893*s13^3*s23 + 1988*s13^2*s23^2 + 573*s13*s23^3 - 
                5*s23^4) + s12^2*s13*s23*(5784*s13^4 + 13225*s13^3*s23 + 
                15050*s13^2*s23^2 + 2355*s13*s23^3 + 50*s23^4) + 
              s12^3*(1296*s13^5 + 3345*s13^4*s23 + 14542*s13^3*s23^2 + 
                10661*s13^2*s23^3 + 1050*s13*s23^4 - 60*s23^5)) + 
            p2q^3*p3q^2*(s12^5*s23*(87*s13^2 + 257*s13*s23 - 280*s23^2) + 
              s12^4*s23*(2256*s13^3 + 4981*s13^2*s23 - 297*s13*s23^2 - 
                320*s23^3) + s13^3*s23*(3960*s13^4 + 3453*s13^3*s23 + 
                2050*s13^2*s23^2 + 453*s13*s23^3 - 2104*s23^4) + 
              s12*s13^2*(1296*s13^5 + 6957*s13^4*s23 + 18894*s13^3*s23^2 - 
                927*s13^2*s23^3 - 13840*s13*s23^4 - 2360*s23^5) + 
              s12^2*s13*(-5184*s13^5 + 4548*s13^4*s23 + 17688*s13^3*s23^2 + 
                2169*s13^2*s23^3 - 10801*s13*s23^4 - 1605*s23^5) - 
              s12^3*(6480*s13^5 + 11832*s13^4*s23 + 3829*s13^3*s23^2 + 
                3913*s13^2*s23^3 + 1919*s13*s23^4 + 40*s23^5))) + 
          p1q^3*s23*(p2q^3*s23*(s12^3*s23*(247*s13^2 + 167*s13*s23 - 
                80*s23^2) + s13*(s13 + s23)^2*(6*s13^3 + 974*s13^2*s23 - 
                169*s13*s23^2 - 325*s23^3) + s12*s13*(12*s13^4 + 
                2051*s13^3*s23 + 3005*s13^2*s23^2 + 721*s13*s23^3 - 
                245*s23^4) + s12^2*(6*s13^4 + 1312*s13^3*s23 + 1549*s13^2*
                 s23^2 + 167*s13*s23^3 - 80*s23^4)) + 10*p3q^3*s23*
             (-3*s13^2*s23*(s13 + s23)^3 + 2*s12^4*(s13^2 - s23^2) + 
              s12^3*(8*s13^3 + 25*s13^2*s23 + 24*s13*s23^2 + 6*s23^3) + 
              s12*s13*(4*s13^4 + 5*s13^3*s23 - 17*s13^2*s23^2 - 
                28*s13*s23^3 - 10*s23^4) + s12^2*(10*s13^4 + 33*s13^3*s23 + 
                34*s13^2*s23^2 + 24*s13*s23^3 + 8*s23^4)) + 
            p2q*p3q^2*(2*s12^4*s23*(37*s13^2 + 309*s13*s23 + 430*s23^2) + 
              s12^3*(-1296*s13^4 - 1252*s13^3*s23 + 1441*s13^2*s23^2 + 
                2506*s13*s23^3 + 980*s23^4) + s12*s23*(1344*s13^5 + 
                3973*s13^4*s23 + 8438*s13^3*s23^2 + 6931*s13^2*s23^3 + 
                1110*s13*s23^4 - 20*s23^5) + s13*s23*(40*s13^5 + 
                2060*s13^4*s23 + 3241*s13^3*s23^2 + 1796*s13^2*s23^3 + 
                605*s13*s23^4 + 30*s23^5) + s12^2*(1296*s13^5 + 1418*s13^4*
                 s23 + 4768*s13^3*s23^2 + 7193*s13^2*s23^3 + 2248*s13*s23^4 + 
                100*s23^5)) + p2q^2*p3q*(s12^3*s23^2*(1312*s13^2 + 
                1587*s13*s23 + 30*s23^2) + 2*s12^4*s23*(18*s13^2 + 
                147*s13*s23 + 170*s23^2) + s12^2*(1296*s13^5 + 1324*s13^4*
                 s23 + 5012*s13^3*s23^2 + 7628*s13^2*s23^3 + 2121*s13*s23^4 - 
                330*s23^5) + s13*s23*(64*s13^5 + 3634*s13^4*s23 + 
                5926*s13^3*s23^2 + 2215*s13^2*s23^3 - 436*s13*s23^4 - 
                295*s23^5) + s12*(-1296*s13^6 - 2608*s13^5*s23 + 
                1564*s13^4*s23^2 + 8571*s13^3*s23^3 + 6870*s13^2*s23^4 + 
                1163*s13*s23^5 - 20*s23^6))) - 
          p1q^2*(10*p3q^4*s12*s23*(2*s12^4*(s13^2 + 3*s13*s23 + s23^2) - 
              s13^2*s23*(6*s13^3 + 25*s13^2*s23 + 24*s13*s23^2 + 5*s23^3) + 
              s12^3*(6*s13^3 + 27*s13^2*s23 + 36*s13*s23^2 + 14*s23^3) + 
              2*s12*s13*(s13^4 - 16*s13^2*s23^2 - 17*s13*s23^3 - 6*s23^4) + 
              s12^2*(6*s13^4 + 27*s13^3*s23 + 30*s13^2*s23^2 + 28*s13*s23^3 + 
                12*s23^4)) + p2q^4*s13*s23*(s13*(s13 + s23)^2*(2*s13^3 + 
                1130*s13^2*s23 - 337*s13*s23^2 - 323*s23^3) + 
              s12^3*(2*s13^3 + 244*s13^2*s23 - 7*s13*s23^2 - 245*s23^3) + 
              s12^2*(6*s13^4 + 1943*s13^3*s23 + 861*s13^2*s23^2 - 
                1634*s13*s23^3 - 570*s23^4) + s12*(6*s13^5 + 2833*s13^4*s23 + 
                3114*s13^3*s23^2 - 1418*s13^2*s23^3 - 2030*s13*s23^4 - 
                325*s23^5)) + p2q*p3q^3*(2*s12^5*s23*(29*s13^2 + 
                261*s13*s23 + 460*s23^2) + 2*s13^2*s23^2*(942*s13^4 + 
                1053*s13^3*s23 + 599*s13^2*s23^2 + 503*s13*s23^3 + 
                15*s23^4) + s12^4*(-1296*s13^4 - 2530*s13^3*s23 + 
                1405*s13^2*s23^2 + 3184*s13*s23^3 + 1100*s23^4) + 
              s12^2*s23*(-2582*s13^5 + 5274*s13^4*s23 + 16318*s13^3*s23^2 + 
                13139*s13^2*s23^3 + 1620*s13*s23^4 - 60*s23^5) + 
              s12*s13*s23*(-40*s13^5 + 764*s13^4*s23 + 10236*s13^3*s23^2 + 
                10159*s13^2*s23^3 + 2125*s13*s23^4 + 70*s23^5) + 
              s12^3*(-1296*s13^5 + 1350*s13^4*s23 + 7565*s13^3*s23^2 + 
                12551*s13^2*s23^3 + 3532*s13*s23^4 + 120*s23^5)) + 
            p2q^2*p3q^2*(2*s12^5*s23*(19*s13^2 + 177*s13*s23 + 270*s23^2) + 
              s12^4*s23*(-38*s13^3 + 1415*s13^2*s23 + 2571*s13*s23^2 + 
                70*s23^3) + s12*s13*s23*(2500*s13^5 + 7196*s13^4*s23 + 
                21365*s13^3*s23^2 + 13348*s13^2*s23^3 - 2864*s13*s23^4 - 
                895*s23^5) + s12^3*(2592*s13^5 + 9038*s13^4*s23 + 
                13799*s13^3*s23^2 + 15208*s13^2*s23^3 + 3231*s13*s23^4 - 
                550*s23^5) + s13^2*s23*(20*s13^5 + 4704*s13^4*s23 + 
                4244*s13^3*s23^2 + 451*s13^2*s23^3 + 366*s13*s23^4 - 
                525*s23^5) + s12^2*(2592*s13^6 - 1366*s13^5*s23 + 
                5582*s13^4*s23^2 + 18957*s13^3*s23^3 + 12128*s13^2*s23^4 + 
                1049*s13*s23^5 - 80*s23^6)) - p2q^3*p3q*
             (s12^4*s23*(40*s13^3 - 334*s13^2*s23 - 359*s13*s23^2 + 
                260*s23^3) + 2*s12^3*s23*(13*s13^4 - 1772*s13^3*s23 - 
                2330*s13^2*s23^2 - 11*s13*s23^3 + 140*s23^4) + 
              s13^2*s23*(-22*s13^5 - 4332*s13^4*s23 - 4261*s13^3*s23^2 + 
                1352*s13^2*s23^3 + 2181*s13*s23^4 + 878*s23^5) + 
              s12^2*(1296*s13^6 + 6534*s13^5*s23 + 917*s13^4*s23^2 - 
                5970*s13^3*s23^3 + 465*s13^2*s23^4 + 1387*s13*s23^5 + 
                20*s23^6) + s12*s13*(1296*s13^6 + 46*s13^5*s23 - 
                9565*s13^4*s23^2 - 16819*s13^3*s23^3 - 3727*s13^2*s23^4 + 
                6043*s13*s23^5 + 1290*s23^6)))))/(216*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^3*s23*(p3q^2*s12*(s12 + s13) - 
          p2q^2*(s12 + s13)*(s13 + s23) + p1q^2*s23*(s13 + s23) + 
          p2q*(p3q*(s12 + s13)*(s12 - s13 - s23) - p1q*(s12 + s13 - s23)*
             (s13 + s23)) - p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23)))) + 
       (2*p1q^5*s23^3*(s12 + s13 + s23)*
          (-5*p3q*s23*(s13*(6*s13^2 + 5*s13*s23 - s23^2) + 
             s12*(14*s13^2 + 3*s13*s23 + 5*s23^2)) + 
           p2q*(-(s13*(648*s13^3 + 975*s13^2*s23 + 367*s13*s23^2 + 
                40*s23^3)) + s12*(648*s13^3 + 965*s13^2*s23 + 525*s13*s23^2 + 
               200*s23^3))) - p1q^4*s23^2*(s12 + s13 + s23)*
          (-10*p3q^2*s23*(s12^2*(34*s13^2 + 14*s13*s23 + 19*s23^2) + 
             s12*(32*s13^3 + 15*s13^2*s23 + 18*s13*s23^2 - 6*s23^3) + 
             s13*(6*s13^3 + 2*s13^2*s23 - 7*s13*s23^2 - 3*s23^3)) + 
           p2q*p3q*(s12^2*(2592*s13^3 + 5730*s13^2*s23 + 4150*s13*s23^2 + 
               2010*s23^3) - s12*(2592*s13^4 + 9576*s13^3*s23 + 6063*s13^2*
                s23^2 + 523*s13*s23^3 - 110*s23^4) + s13*(2592*s13^4 + 5646*
                s13^3*s23 + 2670*s13^2*s23^2 - 37*s13*s23^3 + 347*s23^4)) + 
           p2q^2*(2*s12^2*(648*s13^3 + 965*s13^2*s23 + 525*s13*s23^2 + 200*
                s23^3) + s12*(5184*s13^4 + 2552*s13^3*s23 - 2331*s13^2*
                s23^2 - 163*s13*s23^3 - 400*s23^4) + s13*(1296*s13^4 + 5814*
                s13^3*s23 + 5012*s13^2*s23^2 + 901*s13*s23^3 + 407*s23^4))) + 
         (p2q + p3q)*(-10*p3q^5*s12^2*(s12 + s13)*s23*
            (s12^4 + 8*s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 7*s23) + 
             s12^2*(4*s13^2 + 26*s13*s23 + 6*s23^2) + 
             s12*s13*(3*s13^2 + 30*s13*s23 + 19*s23^2)) + 
           p2q^5*s13^3*s23*(s13*(s13 + s23)^2*(1376*s13 + 2271*s23) + 
             s12^3*(2351*s13 + 2343*s23) + 2*s12^2*(3039*s13^2 + 5018*s13*
                s23 + 1983*s23^2) + s12*(5103*s13^3 + 12716*s13^2*s23 + 9236*
                s13*s23^2 + 1623*s23^3)) - p2q*p3q^4*s12*(460*s12^6*s23 + 
             s12^5*s23*(497*s13 + 510*s23) + s12^2*s13*s23*(4508*s13^3 + 1829*
                s13^2*s23 - 233*s13*s23^2 - 250*s23^3) + 2*s12*s13^2*s23*
              (1899*s13^3 + 2319*s13^2*s23 + 297*s13*s23^2 - 175*s23^3) + 
             8*s13^3*s23*(324*s13^3 + 313*s13^2*s23 + 133*s13*s23^2 - 20*
                s23^3) + 2*s12^4*(1296*s13^3 + 927*s13^2*s23 + 312*s13*
                s23^2 - 5*s23^3) + s12^3*(2592*s13^4 + 2527*s13^3*s23 + 2401*
                s13^2*s23^2 + 227*s13*s23^3 - 60*s23^4)) + 
           p2q^3*p3q^2*s13*(-3*s12^5*s23*(293*s13 + 171*s23) + 
             s12^4*s23*(-1409*s13^2 + 1852*s13*s23 - 146*s23^2) + 
             2*s13^3*s23*(3255*s13^3 + 7165*s13^2*s23 + 5869*s13*s23^2 + 1959*
                s23^3) + s12*s13^2*s23*(3916*s13^3 + 12593*s13^2*s23 + 10773*
                s13*s23^2 + 3424*s23^3) - s12^2*s13*(7776*s13^4 + 16965*s13^3*
                s23 + 10012*s13^2*s23^2 + 239*s13*s23^3 + 127*s23^4) + 
             s12^3*(-7776*s13^4 - 22677*s13^3*s23 - 8502*s13^2*s23^2 + 2524*
                s13*s23^3 + 367*s23^4)) + p2q^2*p3q^3*
            (s12^6*s23*(973*s13 + 460*s23) + s12^5*s23*(-783*s13^2 + 1173*s13*
                s23 + 520*s23^2) + 8*s13^4*s23*(324*s13^3 + 647*s13^2*s23 + 
               485*s13*s23^2 + 162*s23^3) + 2*s12*s13^3*s23*(-1341*s13^3 + 
               528*s13^2*s23 + 1331*s13*s23^2 + 778*s23^3) + 
             s12^2*s13^2*s23*(-5424*s13^3 - 5877*s13^2*s23 + 148*s13*s23^2 + 
               817*s23^3) + 3*s12^4*(2592*s13^4 + 2085*s13^3*s23 + 455*s13^2*
                s23^2 + 139*s13*s23^3 + 20*s23^4) + s12^3*s13*
              (7776*s13^4 + 85*s13^3*s23 + 1487*s13^2*s23^2 + 3855*s13*
                s23^3 + 617*s23^4)) + p2q^4*p3q*s13^2*
            (s12^4*s23*(-1985*s13 + 446*s23) - s12^3*s23*(3379*s13^2 + 1751*
                s13*s23 + 468*s23^2) + s13^2*s23*(6086*s13^3 + 16409*s13^2*
                s23 + 15864*s13*s23^2 + 5541*s23^3) + 
             s12^2*(2592*s13^4 + 13203*s13^3*s23 + 16283*s13^2*s23^2 + 6053*
                s13*s23^3 - 594*s23^4) + s12*s13*(2592*s13^4 + 18091*s13^3*
                s23 + 32297*s13^2*s23^2 + 21089*s13*s23^3 + 4299*s23^4))) + 
         p1q*(-10*p3q^5*s12*s23*(-8*s13^3*s23^2*(s13 + s23) + 
             s12^5*(5*s13 + s23) + s12^4*(15*s13^2 + 21*s13*s23 - 23*s23^2) + 
             s12^3*(12*s13^3 + 32*s13^2*s23 - 87*s13*s23^2 - 24*s23^3) - 
             s12*s13^2*(3*s13^3 + 7*s13^2*s23 + 69*s13*s23^2 + 57*s23^3) - 
             s12^2*s13*(s13^3 - 5*s13^2*s23 + 128*s13*s23^2 + 78*s23^3)) + 
           p2q^5*s13^2*s23*(s13*(s13 + s23)^2*(4622*s13^2 + 5351*s13*s23 - 
               2925*s23^2) + s12^3*(6893*s13^2 + 5647*s13*s23 - 1214*s23^2) + 
             s12^2*(18408*s13^3 + 24593*s13^2*s23 + 4357*s13*s23^2 - 1868*
                s23^3) + s12*(16137*s13^4 + 33541*s13^3*s23 + 14403*s13^2*
                s23^2 - 3655*s13*s23^3 - 654*s23^4)) + p2q^4*p3q*s13*
            (-2*s12^4*s23*(1446*s13^2 - 1481*s13*s23 + 67*s23^2) - 
             s12^3*s23*(2858*s13^3 - 2641*s13^2*s23 + 3372*s13*s23^2 + 908*
                s23^3) + s13^2*s23*(21136*s13^4 + 55056*s13^3*s23 + 44355*
                s13^2*s23^2 + 4174*s13*s23^3 - 6261*s23^4) + 
             s12*s13*(5184*s13^5 + 53262*s13^4*s23 + 97069*s13^3*s23^2 + 
               51726*s13^2*s23^3 + 1211*s13*s23^4 - 1548*s23^5) + 
             s12^2*(5184*s13^5 + 42528*s13^4*s23 + 54796*s13^3*s23^2 + 14031*
                s13^2*s23^3 - 7562*s13*s23^4 - 774*s23^5)) + 
           p2q*p3q^4*(20*s12^6*s23*(49*s13 + 111*s23) + 8*s13^4*s23*
              (324*s13^3 + 648*s13^2*s23 + 487*s13*s23^2 + 163*s23^3) + 
             s12^4*s23*(3870*s13^3 + 1571*s13^2*s23 + 3236*s13*s23^2 + 260*
                s23^3) + s12^5*(-2592*s13^3 - 3081*s13^2*s23 + 3068*s13*
                s23^2 + 2660*s23^3) + s12^2*s13*s23*(-396*s13^4 + 1591*s13^3*
                s23 + 4178*s13^2*s23^2 + 1461*s13*s23^3 - 530*s23^4) - 
             4*s12*s13^2*s23*(339*s13^4 - 1273*s13^3*s23 - 1696*s13^2*s23^2 - 
               647*s13*s23^3 + 95*s23^4) + s12^3*(2592*s13^5 + 1115*s13^4*
                s23 + 7446*s13^3*s23^2 + 10103*s13^2*s23^3 + 2218*s13*s23^4 - 
               180*s23^5)) + p2q^2*p3q^3*(10*s12^6*s23*(103*s13 + 178*s23) + 
             s12^5*s23*(-5370*s13^2 + 19*s13*s23 + 210*s23^2) + 
             s12^4*(10368*s13^4 + 16458*s13^3*s23 + 7052*s13^2*s23^2 - 1023*
                s13*s23^3 - 1870*s23^4) + 2*s12*s13^2*s23*(1641*s13^4 + 12524*
                s13^3*s23 + 13314*s13^2*s23^2 + 4308*s13*s23^3 - 767*s23^4) + 
             2*s13^3*s23*(7143*s13^4 + 14267*s13^3*s23 + 9687*s13^2*s23^2 + 
               1885*s13*s23^3 - 678*s23^4) + s12^3*(5184*s13^5 - 6704*s13^4*
                s23 + 10939*s13^3*s23^2 + 15718*s13^2*s23^3 + 1027*s13*
                s23^4 - 300*s23^5) - s12^2*s13*(5184*s13^5 + 9462*s13^4*s23 - 
               1664*s13^3*s23^2 - 5401*s13^2*s23^3 + 4528*s13*s23^4 + 2011*
                s23^5)) - p2q^3*p3q^2*(s12^5*s23*(2439*s13^2 + 2269*s13*s23 + 
               1320*s23^2) + s12^4*s23*(-1800*s13^3 - 9023*s13^2*s23 + 2443*
                s13*s23^2 + 1440*s23^3) - s13^3*s23*(28208*s13^4 + 63955*
                s13^3*s23 + 47722*s13^2*s23^2 + 7283*s13*s23^3 - 4692*
                s23^4) - s12*s13^2*(2592*s13^5 + 33987*s13^4*s23 + 74178*
                s13^3*s23^2 + 51307*s13^2*s23^3 + 9156*s13*s23^4 - 2048*
                s23^5) + s12^3*(12960*s13^5 + 40888*s13^4*s23 + 8527*s13^3*
                s23^2 - 5457*s13^2*s23^3 + 1229*s13*s23^4 + 120*s23^5) + 
             s12^2*s13*(10368*s13^5 + 8244*s13^4*s23 - 11572*s13^3*s23^2 - 
               5899*s13^2*s23^3 + 10843*s13*s23^4 + 2255*s23^5))) + 
         p1q^3*s23*(-10*p3q^3*s23*(-3*s13^2*s23*(s13 + s23)^3 + 
             s12^4*(26*s13^2 + 24*s13*s23 + 26*s23^2) + 
             s12^3*(64*s13^3 + 75*s13^2*s23 + 108*s13*s23^2 + 2*s23^3) + 
             s12*s13*(12*s13^4 + 7*s13^3*s23 - 7*s13^2*s23^2 - 36*s13*s23^3 - 
               34*s23^4) + s12^2*(50*s13^4 + 61*s13^3*s23 + 84*s13^2*s23^2 - 
               24*s23^4)) + p2q^3*(s12^3*(3888*s13^4 + 1276*s13^3*s23 - 2647*
                s13^2*s23^2 - 483*s13*s23^3 - 400*s23^4) + s13*(s13 + s23)^2*
              (2592*s13^4 - 666*s13^3*s23 - 7758*s13^2*s23^2 + 1141*s13*
                s23^3 - 327*s23^4) + s12*s13*(9072*s13^5 + 5128*s13^4*s23 - 
               18367*s13^3*s23^2 - 10853*s13^2*s23^3 + 2683*s13*s23^4 - 887*
                s23^5) + s12^2*(10368*s13^5 + 1886*s13^4*s23 - 8036*s13^3*
                s23^2 - 701*s13^2*s23^3 - 1443*s13*s23^4 - 400*s23^5)) + 
           p2q^2*p3q*(2*s12^4*(648*s13^3 + 1970*s13^2*s23 + 1565*s13*s23^2 + 
               830*s23^3) + s12^3*(3888*s13^4 + 3628*s13^3*s23 - 4072*s13^2*
                s23^2 + 3385*s13*s23^3 + 110*s23^4) + 
             s12^2*(14256*s13^5 + 18716*s13^4*s23 + 4468*s13^3*s23^2 - 3048*
                s13^2*s23^3 - 637*s13*s23^4 - 1610*s23^5) + 
             s13*(7776*s13^6 + 12768*s13^5*s23 - 7262*s13^4*s23^2 - 21186*
                s13^3*s23^3 - 7447*s13^2*s23^4 + 1128*s13*s23^5 - 357*
                s23^6) + s12*(14256*s13^6 + 23876*s13^5*s23 + 13176*s13^4*
                s23^2 + 14585*s13^3*s23^3 + 12982*s13^2*s23^4 + 1901*s13*
                s23^5 - 60*s23^6)) + p2q*p3q^2*(2*s12^4*(648*s13^3 + 2875*
                s13^2*s23 + 3065*s13*s23^2 + 2050*s23^3) + 
             s12^3*(-2592*s13^4 - 8368*s13^3*s23 - 2265*s13^2*s23^2 + 9178*
                s13*s23^3 + 4540*s23^4) + s12^2*(3888*s13^5 - 2714*s13^4*
                s23 - 18400*s13^3*s23^2 - 13861*s13^2*s23^3 + 1436*s13*
                s23^4 + 380*s23^5) + s12*(7776*s13^6 + 18916*s13^5*s23 + 
               16587*s13^4*s23^2 + 6878*s13^3*s23^3 + 3441*s13^2*s23^4 + 1958*
                s13*s23^5 - 60*s23^6) + s13*(5184*s13^6 + 10248*s13^5*s23 + 
               3424*s13^4*s23^2 - 4057*s13^3*s23^3 - 2040*s13^2*s23^4 + 347*
                s13*s23^5 - 30*s23^6))) + 
         p1q^2*(10*p3q^4*s12*s23*(2*s12^4*(3*s13^2 + 9*s13*s23 + 7*s23^2) + 
             s12^3*(18*s13^3 + 49*s13^2*s23 + 88*s13*s23^2 - 22*s23^3) - 
             s13^2*s23*(6*s13^3 + 13*s13^2*s23 + 40*s13*s23^2 + 33*s23^3) + 
             2*s12*s13*(3*s13^4 - s13^3*s23 + 5*s13^2*s23^2 - 49*s13*s23^3 - 
               42*s23^4) + s12^2*(18*s13^4 + 35*s13^3*s23 + 100*s13^2*s23^2 - 
               64*s13*s23^3 - 36*s23^4)) + p2q^4*s13*s23*
            (s12^3*(8430*s13^3 + 5876*s13^2*s23 - 1931*s13*s23^2 + 567*
                s23^3) + s13*(s13 + s23)^2*(5838*s13^3 + 3710*s13^2*s23 - 
               7461*s13*s23^2 + 981*s23^3) + s12^2*(22698*s13^4 + 22923*s13^3*
                s23 - 571*s13^2*s23^2 + 10*s13*s23^3 + 894*s23^4) + 
             s12*(20106*s13^5 + 32433*s13^4*s23 + 350*s13^3*s23^2 - 9622*
                s13^2*s23^3 + 2682*s13*s23^4 + 327*s23^5)) - 
           p2q*p3q^3*(10*s12^5*s23*(195*s13^2 + 401*s13*s23 + 424*s23^2) + 
             s12^4*(-2592*s13^4 - 8430*s13^3*s23 - 6917*s13^2*s23^2 + 7452*
                s13*s23^3 + 4900*s23^4) + s12*s13*s23*(120*s13^5 - 5460*s13^4*
                s23 - 7444*s13^3*s23^2 - 1111*s13^2*s23^3 + 1771*s13*s23^4 - 
               310*s23^5) + s12^2*s23*(3606*s13^5 + 7114*s13^4*s23 + 8294*
                s13^3*s23^2 + 10273*s13^2*s23^3 + 3352*s13*s23^4 - 180*
                s23^5) - 2*s13^2*s23*(2592*s13^5 + 4506*s13^4*s23 + 1873*
                s13^3*s23^2 - 693*s13^2*s23^3 - 637*s13*s23^4 + 15*s23^5) + 
             s12^3*(-2592*s13^5 + 882*s13^4*s23 - 7077*s13^3*s23^2 - 8395*
                s13^2*s23^3 + 3704*s13*s23^4 + 480*s23^5)) - 
           p2q^2*p3q^2*(10*s12^5*s23*(201*s13^2 + 311*s13*s23 + 258*s23^2) + 
             s12^4*s23*(-1830*s13^3 - 10331*s13^2*s23 + 2593*s13*s23^2 + 270*
                s23^3) + s12^3*(5184*s13^5 + 26886*s13^4*s23 + 12941*s13^3*
                s23^2 + 2160*s13^2*s23^3 - 955*s13*s23^4 - 2550*s23^5) - 
             s13^2*s23*(20796*s13^5 + 43456*s13^4*s23 + 23460*s13^3*s23^2 - 
               6337*s13^2*s23^3 - 6690*s13*s23^4 + 447*s23^5) - 
             s12*s13*s23*(18264*s13^5 + 44128*s13^4*s23 + 31369*s13^3*s23^2 + 
               5148*s13^2*s23^3 - 208*s13*s23^4 + 1501*s23^5) + 
             s12^2*(5184*s13^6 + 7338*s13^5*s23 + 6990*s13^4*s23^2 + 21219*
                s13^3*s23^3 + 25396*s13^2*s23^4 + 2711*s13*s23^5 - 240*
                s23^6)) + p2q^3*p3q*(s12^4*s23*(-1236*s13^3 + 5326*s13^2*
                s23 + 1779*s13*s23^2 + 1260*s23^3) + 2*s12^3*s23*
              (-921*s13^4 + 1258*s13^3*s23 - 2890*s13^2*s23^2 + 1573*s13*
                s23^3 + 660*s23^4) + s13^2*s23*(21450*s13^5 + 48984*s13^4*
                s23 + 23549*s13^3*s23^2 - 16568*s13^2*s23^3 - 11185*s13*
                s23^4 + 1398*s23^5) + s12^2*(2592*s13^6 + 34578*s13^5*s23 + 
               41027*s13^4*s23^2 + 1958*s13^3*s23^3 - 10477*s13^2*s23^4 + 
               1685*s13*s23^5 + 60*s23^6) + s12*s13*(2592*s13^6 + 43674*s13^5*
                s23 + 74389*s13^4*s23^2 + 27079*s13^3*s23^3 - 3465*s13^2*
                s23^4 + 4257*s13*s23^5 + 1518*s23^6))))/
        (432*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s13^3*s23*
         (p3q^2*s12*(s12 + s13) - p2q^2*(s12 + s13)*(s13 + s23) + 
          p1q^2*s23*(s13 + s23) + p2q*(p3q*(s12 + s13)*(s12 - s13 - s23) - 
            p1q*(s12 + s13 - s23)*(s13 + s23)) - p1q*p3q*(s13*(s13 + s23) + 
            s12*(s13 + 2*s23)))) + ((s12 + s13 + s23)*
         (-(p2q^4*s13^3*(407*s12 + 80*s13 + 327*s23)) + 
          p2q^3*s13^2*(p3q*(1074*s12^2 - 671*s12*s13 + 394*s13^2 + 
              674*s12*s23 - 357*s13*s23) + 2*p1q*(-327*s12*s13 - 327*s13^2 + 
              287*s12*s23 + 40*s13*s23 + 327*s23^2)) - 
          10*p3q*(p3q*s12 - p1q*s23)^2*(p1q*(6*s12*s13 + 6*s13^2 - 
              3*s12*s23 - s13*s23) + p3q*(s12^2 + s12*(s13 - 2*s23) + 
              3*s13*(s13 + s23))) + p2q*(-2*p1q^3*s23^2*(327*s12*s13 + 
              327*s13^2 + 120*s12*s23 + 40*s13*s23) + p3q^3*s12*
             (260*s12^3 + s12*s13*(414*s13 - 397*s23) + 60*s13^2*(s13 + 
                s23) + s12^2*(-811*s13 + 20*s23)) - 2*p1q*p3q^2*
             (-30*s13^2*s23*(s13 + s23) + s12^3*(327*s13 + 380*s23) + 
              s12*s13*(-60*s13^2 + 394*s13*s23 - 337*s23^2) + 
              s12^2*(267*s13^2 - 771*s13*s23 + 20*s23^2)) + 
            p1q^2*p3q*s23*(4*s12^2*(327*s13 + 185*s23) + s13*(120*s13^2 + 
                374*s13*s23 - 357*s23^2) + s12*(1428*s13^2 - 731*s13*s23 + 
                20*s23^2))) + p2q^2*s13*(p1q^2*s23*(1308*s12*s13 + 
              1308*s13^2 + 73*s12*s23 + 80*s13*s23 - 327*s23^2) - 
            p3q^2*(927*s12^3 + 2*s12*s13*(399*s13 - 367*s23) + 
              30*s13^2*(s13 + s23) + s12^2*(-1572*s13 + 367*s23)) + 
            2*p1q*p3q*(s12^2*(654*s13 + 387*s23) + s12*(624*s13^2 + 
                1006*s13*s23 + 307*s23^2) + s13*(-30*s13^2 - 389*s13*s23 + 
                357*s23^2))))*den[-1 + 2*ep])/(432*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^3))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + 
     ((ep^2*(-(p3q^5*s12^3*(s13 - s23)*(s12 + s23)*(s12 + s13 + s23)) - 
          p2q^5*s13^3*(s12 - s23)*(s13 + s23)*(s12 + s13 + s23) - 
          p1q^4*s23^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23)*
           (p2q*(s12 + s23) + p3q*(s13 + s23)) - p2q*p3q^4*s12*
           (s12^5 - 2*s13*(s13 - 3*s23)*s23^3 + s12^4*(s13 + s23) + 
            s12^3*(-4*s13^2 + 3*s13*s23 - 2*s23^2) - 
            s12^2*(4*s13^3 + 4*s13^2*s23 + 7*s13*s23^2 - 3*s23^3) + 
            s12*s23*(-3*s13^3 - 3*s13^2*s23 - 5*s13*s23^2 + 5*s23^3)) + 
          p2q^2*p3q^3*(s12^5*(4*s13 + s23) + 2*s13*s23^3*(-s13^2 + s13*s23 + 
              2*s23^2) + s12^4*(4*s13^2 + 4*s13*s23 + 3*s23^2) + 
            s12^3*(-6*s13^3 + 2*s13^2*s23 + 7*s13*s23^2 - 5*s23^3) - 
            s12*s23*(3*s13^4 + 6*s13^3*s23 + s13^2*s23^2 + 12*s13*s23^3 - 
              4*s23^4) - 3*s12^2*(2*s13^4 + 2*s13^3*s23 + 6*s13^2*s23^2 - 
              s13*s23^3 + s23^4)) - p2q^4*p3q*s13*
           (-(s12^3*s13*(4*s13 + 3*s23)) - s12^2*(4*s13^3 + 4*s13^2*s23 + 
              3*s13*s23^2 + 2*s23^3) + s13*(s13^4 + s13^3*s23 - 
              2*s13^2*s23^2 + 3*s13*s23^3 + 5*s23^4) + 
            s12*(s13^4 + 3*s13^3*s23 - 7*s13^2*s23^2 - 5*s13*s23^3 + 
              6*s23^4)) + p2q^3*p3q^2*(-3*s12^4*s13*(2*s13 + s23) + 
            s13*(s13 - s23)^2*s23*(s13^2 + 5*s13*s23 + 4*s23^2) - 
            2*s12^3*(3*s13^3 + 3*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
            s12^2*(4*s13^4 + 2*s13^3*s23 - 18*s13^2*s23^2 - s13*s23^3 + 
              2*s23^4) + s12*(4*s13^5 + 4*s13^4*s23 + 7*s13^3*s23^2 + 
              3*s13^2*s23^3 - 12*s13*s23^4 + 4*s23^5)) + 
          p1q^3*s23^2*(-(p2q^2*(s12 + s23)*(s13 + s23)*(s12^2 - 2*s12*s13 - 3*
                s13^2 + 2*s12*s23 - 2*s13*s23 + s23^2)) + p3q^2*(s12 + s23)*
             (s13 + s23)*(3*s12^2 + 2*s12*(s13 + s23) - (s13 + s23)^2) + 
            p2q*p3q*(s12^4 + s13^4 + 4*s13^3*s23 + 5*s13^2*s23^2 - 
              4*s13*s23^3 - 6*s23^4 + 2*s12^3*(s13 + 2*s23) + 
              s12^2*(-6*s13^2 - 4*s13*s23 + 5*s23^2) + 2*s12*(s13^3 - 
                2*s13^2*s23 - 6*s13*s23^2 - 2*s23^3))) + 
          p1q^2*(p3q^3*s12*(s12 + s23)*(s12*s13^2*(s13 + s23) + 
              3*s23^2*(s13 + s23)^2 + s12^2*(s13^2 - 3*s23^2)) + 
            p2q^3*s13*(s13 + s23)*(s12^3*s13 - 3*s13^2*s23^2 + 6*s12*s23^3 + 
              3*s23^4 + s12^2*(s13^2 + s13*s23 + 3*s23^2)) + 
            p2q*p3q^2*(s12^5*(s13 + s23) + s12^4*s13*(s13 + 2*s23) + 
              s23^3*(s13^3 + 9*s13^2*s23 + 3*s13*s23^2 - 5*s23^3) - 
              2*s12^3*(s13^3 - 5*s13*s23^2 + s23^3) - s12^2*(2*s13^4 + 
                4*s13^3*s23 + 15*s13^2*s23^2 + s13*s23^3 - 13*s23^4) - 
              s12*s23*(2*s13^4 + 4*s13^3*s23 + 12*s13^2*s23^2 + 
                13*s13*s23^3 - 9*s23^4)) + p2q^2*p3q*(-2*s12^4*s13*(s13 + 
                s23) + s12^3*(-2*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
              s12^2*(s13^4 - 15*s13^2*s23^2 - 12*s13*s23^3 + 9*s23^4) + 
              s23*(s13^5 - 2*s13^3*s23^2 + 13*s13^2*s23^3 + 9*s13*s23^4 - 
                5*s23^5) + s12*(s13^5 + 2*s13^4*s23 + 10*s13^3*s23^2 - 
                s13^2*s23^3 - 13*s13*s23^4 + 3*s23^5))) + 
          p1q*(p2q^4*s13^2*(s13 + s23)*(s12^3 + s12^2*s23 + s23*(s13^2 - 
                2*s13*s23 - 3*s23^2) - s12*(s13^2 + 3*s23^2)) + 
            p3q^4*s12^2*(s12^3*(-s13 + s23) - s12^2*s23*(s13 + s23) + 
              s12*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 5*s23^3) + 
              s23*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3)) - 
            p2q^3*p3q*(s13^6 - s13^4*s23^2 + 10*s13^3*s23^3 - 10*s13*s23^5 + 
              2*s12^3*s13*s23*(s13 + s23) + s12^4*s13*(3*s13 + 2*s23) - 
              2*s12*s23^2*(9*s13^3 + 5*s13^2*s23 - 4*s13*s23^2 + 3*s23^3) + 
              s12^2*(-4*s13^4 - 4*s13^3*s23 + s13^2*s23^2 - 6*s23^4)) - 
            p2q*p3q^3*(s12^6 - 6*s13*s23^4*(s13 + s23) - s12^4*(4*s13^2 + 
                s23^2) + 2*s12^3*s23*(-2*s13^2 - 9*s13*s23 + 5*s23^2) + 
              s12^2*s13*(3*s13^3 + 2*s13^2*s23 + s13*s23^2 - 10*s23^3) + 
              2*s12*s23*(s13^4 + s13^3*s23 + 4*s13*s23^3 - 5*s23^4)) + 
            p2q^2*p3q^2*(s12^4*s23*(s13 + s23) + s12^5*(3*s13 + s23) + 
              s12^2*s23*(-4*s13^3 - 34*s13^2*s23 - 15*s13*s23^2 + 3*s23^3) - 
              s12^3*(6*s13^3 + 4*s13^2*s23 - 3*s13*s23^2 + 9*s23^3) + 
              s23*(s13^5 + s13^4*s23 - 9*s13^3*s23^2 + 3*s13^2*s23^3 + 
                8*s13*s23^4 - 4*s23^5) + s12*(3*s13^5 + s13^4*s23 + 
                3*s13^3*s23^2 - 15*s13^2*s23^3 - 36*s13*s23^4 + 8*s23^5)))))/
        (12*p2q*p3q*(p1q + p2q + p3q)*s23^2*(-(p3q^2*s12*(s12 + s23)) - 
          p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
          p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
           (2*s13 + s23))) + (ep*(2*p1q^5*(s12 + s13)*s23^2*(s12 + s23)*
           (s13 + s23)*(s12 + s13 + s23) + p3q^5*s12^2*
           (s12^3*(5*s13 - 7*s23) + s12^2*(5*s13^2 + 3*s13*s23 - 18*s23^2) + 
            s12*s23*(5*s13^2 - 2*s13*s23 - 15*s23^2) + 
            4*s23^2*(s13^2 - s23^2)) + p2q^5*s13^2*
           (-(s23*(s13 + s23)^2*(7*s13 + 4*s23)) + s12*s13*
             (5*s13^2 + 3*s13*s23 - 2*s23^2) + s12^2*(5*s13^2 + 5*s13*s23 + 
              4*s23^2)) + p2q*p3q^4*s12*(5*s12^5 + s12^4*(5*s13 + 3*s23) + 
            s12^3*(-20*s13^2 + 21*s13*s23 + 18*s23^2) + 
            8*s23^2*(-s13^3 + s13^2*s23 - s13*s23^2 + s23^3) + 
            s12*s23*(-15*s13^3 + 21*s13^2*s23 - 9*s13*s23^2 + 19*s23^3) + 
            s12^2*(-20*s13^3 - 12*s13^2*s23 + 7*s13*s23^2 + 31*s23^3)) + 
          p2q^4*p3q*s13*(5*s13^5 + 3*s13^4*s23 + 18*s13^3*s23^2 + 
            31*s13^2*s23^3 + 19*s13*s23^4 + 8*s23^5 - 
            s12^3*(20*s13^2 + 15*s13*s23 + 8*s23^2) + 
            s12^2*(-20*s13^3 - 12*s13^2*s23 + 21*s13*s23^2 + 8*s23^3) + 
            s12*(5*s13^4 + 21*s13^3*s23 + 7*s13^2*s23^2 - 9*s13*s23^3 - 
              8*s23^4)) + p2q^2*p3q^3*(-5*s12^5*(4*s13 + s23) + 
            s12^4*(-20*s13^2 - 12*s13*s23 + 17*s23^2) + 4*s13*s23^2*
             (s13^3 - 2*s13^2*s23 - s13*s23^2 + 2*s23^3) + 
            s12^3*(30*s13^3 - 14*s13^2*s23 - 65*s13*s23^2 + 9*s23^3) + 
            s12^2*(30*s13^4 + 18*s13^3*s23 + 58*s13^2*s23^2 - 31*s13*s23^3 - 
              5*s23^4) + s12*s23*(15*s13^4 - 36*s13^3*s23 + 15*s13^2*s23^2 + 
              2*s13*s23^3 + 8*s23^4)) + p2q^3*p3q^2*
           (s12^4*(30*s13^2 + 15*s13*s23 + 4*s23^2) + 
            2*s12^3*(15*s13^3 + 9*s13^2*s23 - 18*s13*s23^2 - 4*s23^3) + 
            s12^2*(-20*s13^4 - 14*s13^3*s23 + 58*s13^2*s23^2 + 15*s13*s23^3 - 
              4*s23^4) + s13*s23*(-5*s13^4 + 17*s13^3*s23 + 9*s13^2*s23^2 - 
              5*s13*s23^3 + 8*s23^4) - s12*(20*s13^5 + 12*s13^4*s23 + 
              65*s13^3*s23^2 + 31*s13^2*s23^3 - 2*s13*s23^4 - 8*s23^5)) - 
          p1q^4*s23^2*(s12 + s13 + s23)*(p3q*(s12 + s23)*(2*s12^2 - 
              4*s12*s13 - 9*s13^2 - 6*s12*s23 - 16*s13*s23 - 7*s23^2) - 
            p2q*(s13 + s23)*(9*s12^2 - 2*s13^2 + 6*s13*s23 + 7*s23^2 + 
              4*s12*(s13 + 4*s23))) + p1q^3*
           (-(p3q^2*(2*s12^5*(s13 + s23) - s23^3*(s13 + s23)^2*(19*s13 + 
                 15*s23) + 2*s12^4*(2*s13^2 + 6*s13*s23 + 7*s23^2) + s12^2*
                s23*(4*s13^3 + 10*s13^2*s23 + 17*s13*s23^2 + 5*s23^3) - s12*
                s23^2*(13*s13^3 + 49*s13^2*s23 + 61*s13*s23^2 + 25*s23^3) + 
               s12^3*(2*s13^3 + 14*s13^2*s23 + 39*s13*s23^2 + 27*s23^3))) + 
            p2q*p3q*(s12^4*(4*s13^2 + 2*s13*s23 - 9*s23^2) + s12^3*(8*s13^3 + 
                22*s13^2*s23 - 26*s23^3) + s12^2*(4*s13^4 + 22*s13^3*s23 + 
                110*s13^2*s23^2 + 106*s13*s23^3 + 21*s23^4) + 
              s23^2*(-9*s13^4 - 26*s13^3*s23 + 21*s13^2*s23^2 + 
                60*s13*s23^3 + 22*s23^4) + 2*s12*s23*(s13^4 + 53*s13^2*
                 s23^2 + 80*s13*s23^3 + 30*s23^4)) - 
            p2q^2*(s12^3*(2*s13^3 + 4*s13^2*s23 - 13*s13*s23^2 - 19*s23^3) + 
              s23*(s13 + s23)^2*(2*s13^3 + 10*s13^2*s23 + 5*s13*s23^2 - 
                15*s23^3) + s12^2*(4*s13^4 + 14*s13^3*s23 + 10*s13^2*s23^2 - 
                49*s13*s23^3 - 53*s23^4) + s12*(2*s13^5 + 12*s13^4*s23 + 
                39*s13^3*s23^2 + 17*s13^2*s23^3 - 61*s13*s23^4 - 
                49*s23^5))) + p1q*(p3q^4*s12*(2*s12^5 + s12^4*(9*s13 + s23) + 
              s12^3*(2*s13^2 + 17*s13*s23 + s23^2) - 4*s23^2*(s13^3 + 
                5*s13^2*s23 + 5*s13*s23^2 + s23^3) + s12^2*(-5*s13^3 + 
                s13^2*s23 + 13*s13*s23^2 + 3*s23^3) - s12*s23*(5*s13^3 + 
                9*s13^2*s23 + 15*s13*s23^2 + 3*s23^3)) + 
            p2q^4*s13*(-(s12^3*(5*s13^2 + 5*s13*s23 + 4*s23^2)) + 
              s12^2*(2*s13^3 + s13^2*s23 - 9*s13*s23^2 - 20*s23^3) + 
              (s13 + s23)^2*(2*s13^3 - 3*s13^2*s23 + 5*s13*s23^2 - 4*s23^3) + 
              s12*(9*s13^4 + 17*s13^3*s23 + 13*s13^2*s23^2 - 15*s13*s23^3 - 
                20*s23^4)) + p2q*p3q^3*(5*s12^6 - 2*s12^5*(4*s13 + s23) + 
              s12^4*(-36*s13^2 - 26*s13*s23 + 25*s23^2) - 2*s12^3*(4*s13^3 + 
                29*s13^2*s23 + 63*s13*s23^2 - 5*s23^3) + s12^2*(15*s13^4 - 
                4*s13^3*s23 + 59*s13^2*s23^2 - 70*s13*s23^3 - 8*s23^4) + 
              4*s23^2*(s13^4 + 3*s13^3*s23 + 11*s13^2*s23^2 + 11*s13*s23^3 + 
                2*s23^4) + 2*s12*s23*(5*s13^4 + 7*s13^3*s23 + 56*s13^2*
                 s23^2 + 29*s13*s23^3 + 11*s23^4)) + p2q^3*p3q*
             (5*s13^6 - 2*s13^5*s23 + 25*s13^4*s23^2 + 10*s13^3*s23^3 - 
              8*s13^2*s23^4 + 22*s13*s23^5 + 8*s23^6 + s12^4*(15*s13^2 + 
                10*s13*s23 + 4*s23^2) - 2*s12^3*(4*s13^3 + 2*s13^2*s23 - 
                7*s13*s23^2 - 6*s23^3) + s12^2*(-36*s13^4 - 58*s13^3*s23 + 
                59*s13^2*s23^2 + 112*s13*s23^3 + 44*s23^4) - 2*s12*(4*s13^5 + 
                13*s13^4*s23 + 63*s13^3*s23^2 + 35*s13^2*s23^3 - 
                29*s13*s23^4 - 22*s23^5)) + p2q^2*p3q^2*
             (-5*s12^5*(3*s13 + s23) + s12^4*(12*s13^2 + 5*s13*s23 - 
                5*s23^2) + s12^3*(54*s13^3 + 66*s13^2*s23 - 97*s13*s23^2 - 
                77*s23^3) + s12^2*(12*s13^4 + 66*s13^3*s23 + 250*s13^2*
                 s23^2 + 37*s13*s23^3 - 55*s23^4) + s23*(-5*s13^5 - 
                5*s13^4*s23 - 77*s13^3*s23^2 - 55*s13^2*s23^3 + 
                30*s13*s23^4 + 8*s23^5) + s12*(-15*s13^5 + 5*s13^4*s23 - 
                97*s13^3*s23^2 + 37*s13^2*s23^3 + 88*s13*s23^4 + 
                30*s23^5))) + p1q^2*(p3q^3*(2*s12^6 + 4*s23^3*(s13 + s23)^2*(
                3*s13 + 2*s23) + 2*s12^5*(s13 + 3*s23) + s12^4*(-7*s13^2 + 
                2*s13*s23 + 7*s23^2) + s12*s23^2*(2*s13^3 - s13^2*s23 + 
                3*s23^3) - s12^3*(7*s13^3 + 18*s13^2*s23 + 24*s13*s23^2 + 
                9*s23^3) - s12^2*s23*(9*s13^3 + 32*s13^2*s23 + 52*s13*s23^2 + 
                17*s23^3)) + p2q*p3q^2*(-(s12^5*(11*s13 + 5*s23)) - 
              s12^4*(11*s13^2 + 30*s13*s23 + 2*s23^2) + 2*s12^3*(8*s13^3 - 
                s13^2*s23 - 57*s13*s23^2 - 28*s23^3) + s12^2*(16*s13^4 + 
                42*s13^3*s23 + 155*s13^2*s23^2 + 21*s13*s23^3 - 31*s23^4) + 
              s23^2*(-14*s13^4 - 43*s13^3*s23 + 27*s13^2*s23^2 + 
                79*s13*s23^3 + 23*s23^4) + s12*s23*(14*s13^4 + 6*s13^3*s23 + 
                160*s13^2*s23^2 + 171*s13*s23^3 + 51*s23^4)) + 
            p2q^3*(s12^3*(-7*s13^3 - 9*s13^2*s23 + 2*s13*s23^2 + 12*s23^3) - 
              s12^2*(7*s13^4 + 18*s13^3*s23 + 32*s13^2*s23^2 + s13*s23^3 - 
                32*s23^4) + (s13 + s23)^2*(2*s13^4 + 2*s13^3*s23 + 
                s13^2*s23^2 - 13*s13*s23^3 + 8*s23^4) + 2*s12*(s13^5 + 
                s13^4*s23 - 12*s13^3*s23^2 - 26*s13^2*s23^3 + 14*s23^5)) + 
            p2q^2*p3q*(2*s12^4*(8*s13^2 + 7*s13*s23 - 7*s23^2) + 
              s12^3*(16*s13^3 + 42*s13^2*s23 + 6*s13*s23^2 - 43*s23^3) + 
              s12^2*(-11*s13^4 - 2*s13^3*s23 + 155*s13^2*s23^2 + 
                160*s13*s23^3 + 27*s23^4) + s23*(-5*s13^5 - 2*s13^4*s23 - 
                56*s13^3*s23^2 - 31*s13^2*s23^3 + 51*s13*s23^4 + 23*s23^5) + 
              s12*(-11*s13^5 - 30*s13^4*s23 - 114*s13^3*s23^2 + 
                21*s13^2*s23^3 + 171*s13*s23^4 + 79*s23^5)))))/
        (24*p2q*p3q*(p1q + p2q + p3q)*s23^2*(p3q^2*s12*(s12 + s23) + 
          p2q^2*s13*(s13 + s23) - p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*(p3q*(s12 - s13 - s23)*(s12 + s23) - p2q*(s12 - s13 + s23)*
             (s13 + s23)) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23)))) + 
       (p3q^5*s12^2*(7*s12^3*(s13 + s23) + s12*s23*(7*s13^2 + 14*s13*s23 - 
             9*s23^2) + 8*s23^2*(s13^2 - s23^2) + 
           s12^2*(7*s13^2 + 21*s13*s23 + 6*s23^2)) + 
         p2q^5*s13^2*((7*s13 - 8*s23)*s23*(s13 + s23)^2 + 
           7*s12*s13*(s13^2 + 3*s13*s23 + 2*s23^2) + 
           s12^2*(7*s13^2 + 7*s13*s23 + 8*s23^2)) + p2q*p3q^4*s12*
          (7*s12^5 + 7*s12^4*(s13 + 3*s23) + s12^3*(-28*s13^2 - 21*s13*s23 + 
             46*s23^2) - s12^2*(28*s13^3 + 84*s13^2*s23 + 47*s13*s23^2 - 
             49*s23^3) + 8*s23^2*(-2*s13^3 + s13^2*s23 + s13*s23^2 + 
             2*s23^3) + s12*s23*(-21*s13^3 - 17*s13^2*s23 - 3*s13*s23^2 + 
             33*s23^3)) + 2*p1q^5*s23^2*(2*s12^2*(3*s13 + 5*s23)^2 + 
           s23*(s13 + s23)^2*(17*s13 + 16*s23) + s12^3*(9*s13 + 17*s23) + 
           s12*(9*s13^3 + 60*s13^2*s23 + 100*s13*s23^2 + 49*s23^3)) + 
         p2q^4*p3q*s13*(7*s13^5 + 21*s13^4*s23 + 46*s13^3*s23^2 + 
           49*s13^2*s23^3 + 33*s13*s23^4 + 16*s23^5 - 
           s12^3*(28*s13^2 + 21*s13*s23 + 16*s23^2) - 
           s12^2*(28*s13^3 + 84*s13^2*s23 + 17*s13*s23^2 - 8*s23^3) + 
           s12*(7*s13^4 - 21*s13^3*s23 - 47*s13^2*s23^2 - 3*s13*s23^3 + 
             8*s23^4)) - p2q^2*p3q^3*(7*s12^5*(4*s13 + s23) + 
           s12^4*(28*s13^2 + 84*s13*s23 - 11*s23^2) + 8*s13^2*s23^2*
            (-s13^2 + s13*s23 + 2*s23^2) + s12^3*(-42*s13^3 - 14*s13^2*s23 + 
             127*s13*s23^2 + 5*s23^3) + s12*s13*s23*(-21*s13^3 + 
             8*s13^2*s23 - 17*s13*s23^2 + 26*s23^3) + 
           s12^2*(-42*s13^4 - 126*s13^3*s23 - 122*s13^2*s23^2 + 
             49*s13*s23^3 + 23*s23^4)) + p2q^3*p3q^2*
          (s12^4*(42*s13^2 + 21*s13*s23 + 8*s23^2) + 
           2*s12^3*(21*s13^3 + 63*s13^2*s23 - 4*s13*s23^2 - 4*s23^3) - 
           s13^2*s23*(7*s13^3 - 11*s13^2*s23 + 5*s13*s23^2 + 23*s23^3) + 
           s12^2*(-28*s13^4 + 14*s13^3*s23 + 122*s13^2*s23^2 + 17*s13*s23^3 - 
             16*s23^4) - s12*s13*(28*s13^4 + 84*s13^3*s23 + 127*s13^2*s23^2 + 
             49*s13*s23^3 + 26*s23^4)) + p1q^4*s23*(s12 + s13 + s23)*
          (p3q*(s12^3*(4*s13 - 30*s23) + 4*s12^2*(s13^2 + 4*s13*s23 + 3*
                s23^2) + 3*s23^2*(25*s13^2 + 44*s13*s23 + 19*s23^2) + 
             s12*s23*(31*s13^2 + 80*s13*s23 + 99*s23^2)) + 
           p2q*(s12^2*(4*s13^2 + 31*s13*s23 + 75*s23^2) + 
             3*s23*(-10*s13^3 + 4*s13^2*s23 + 33*s13*s23^2 + 19*s23^3) + 
             4*s12*(s13^3 + 4*s13^2*s23 + 20*s13*s23^2 + 33*s23^3))) + 
         p1q*(-(p3q^4*s12*(10*s12^5 + s12^4*(13*s13 + 37*s23) + 
              s12^3*(10*s13^2 + 61*s13*s23 + 113*s23^2) + 8*s23^2*(s13^3 + 
                5*s13^2*s23 + 5*s13*s23^2 + s23^3) + s12*s23*(7*s13^3 + 
                35*s13^2*s23 + 129*s13*s23^2 + 85*s23^3) + s12^2*(7*s13^3 + 
                45*s13^2*s23 + 137*s13*s23^2 + 163*s23^3))) - 
           p2q^4*s13*(s12^3*(7*s13^2 + 7*s13*s23 + 8*s23^2) + 
             5*s12^2*(2*s13^3 + 9*s13^2*s23 + 7*s13*s23^2 + 8*s23^3) + 
             (s13 + s23)^2*(10*s13^3 + 17*s13^2*s23 + 69*s13*s23^2 + 8*
                s23^3) + s12*(13*s13^4 + 61*s13^3*s23 + 137*s13^2*s23^2 + 129*
                s13*s23^3 + 40*s23^4)) + p2q*p3q^3*(7*s12^6 + 
             10*s12^5*(4*s13 + s23) + s12^4*(52*s13^2 + 130*s13*s23 + 27*
                s23^2) + 2*s12^3*(20*s13^3 + 89*s13^2*s23 + 91*s13*s23^2 + 17*
                s23^3) + 8*s23^2*(s13^4 + 3*s13^3*s23 + 8*s13^2*s23^2 + 8*s13*
                s23^3 + 2*s23^4) + 2*s12*s23*(7*s13^4 + 13*s13^3*s23 + 68*
                s13^2*s23^2 + 69*s13*s23^3 + 43*s23^4) + 
             s12^2*(21*s13^4 + 100*s13^3*s23 + 325*s13^2*s23^2 + 190*s13*
                s23^3 + 80*s23^4)) + p2q^3*p3q*(7*s13^6 + 10*s13^5*s23 + 
             27*s13^4*s23^2 + 34*s13^3*s23^3 + 80*s13^2*s23^4 + 
             86*s13*s23^5 + 16*s23^6 + s12^4*(21*s13^2 + 14*s13*s23 + 8*
                s23^2) + 2*s12^3*(20*s13^3 + 50*s13^2*s23 + 13*s13*s23^2 + 12*
                s23^3) + s12^2*(52*s13^4 + 178*s13^3*s23 + 325*s13^2*s23^2 + 
               136*s13*s23^3 + 64*s23^4) + 2*s12*(20*s13^5 + 65*s13^4*s23 + 
               91*s13^3*s23^2 + 95*s13^2*s23^3 + 69*s13*s23^4 + 32*s23^5)) - 
           p2q^2*p3q^2*(7*s12^5*(3*s13 + s23) + s12^4*(60*s13^2 + 65*s13*
                s23 - 9*s23^2) + s12^3*(78*s13^3 + 210*s13^2*s23 + 215*s13*
                s23^2 + 11*s23^3) + s12^2*(60*s13^4 + 210*s13^3*s23 + 138*
                s13^2*s23^2 + 113*s13*s23^3 - 51*s23^4) + 
             s12*(21*s13^5 + 65*s13^4*s23 + 215*s13^3*s23^2 + 113*s13^2*
                s23^3 - 72*s13*s23^4 - 110*s23^5) - s23*(-7*s13^5 + 9*s13^4*
                s23 - 11*s13^3*s23^2 + 51*s13^2*s23^3 + 110*s13*s23^4 + 32*
                s23^5))) + p1q^3*(p3q^2*(2*s12^5*(5*s13 + 3*s23) + 
             s23^3*(s13 + s23)^2*(65*s13 + 41*s23) + s12^4*(20*s13^2 + 60*s13*
                s23 - 34*s23^2) + s12^3*(10*s13^3 + 82*s13^2*s23 + 67*s13*
                s23^2 - 49*s23^3) + s12^2*s23*(28*s13^3 + 118*s13^2*s23 + 85*
                s13*s23^2 + 69*s23^3) + s12*s23^2*(27*s13^3 + 123*s13^2*s23 + 
               215*s13*s23^2 + 119*s23^3)) + p2q*p3q*
            (-(s12^4*(20*s13^2 + 6*s13*s23 + 7*s23^2)) - 
             2*s12^3*(20*s13^3 + 57*s13^2*s23 - 6*s13*s23^2 - 61*s23^3) + 
             s23^2*(-7*s13^4 + 122*s13^3*s23 + 403*s13^2*s23^2 + 388*s13*
                s23^3 + 114*s23^4) + 2*s12*s23*(-3*s13^4 + 6*s13^3*s23 + 179*
                s13^2*s23^2 + 360*s13*s23^3 + 194*s23^4) + 
             s12^2*(-20*s13^4 - 114*s13^3*s23 + 26*s13^2*s23^2 + 358*s13*
                s23^3 + 403*s23^4)) + p2q^2*(s23*(s13 + s23)^2*
              (6*s13^3 - 46*s13^2*s23 + 37*s13*s23^2 + 41*s23^3) + 
             s12^3*(10*s13^3 + 28*s13^2*s23 + 27*s13*s23^2 + 65*s23^3) + 
             s12^2*(20*s13^4 + 82*s13^3*s23 + 118*s13^2*s23^2 + 123*s13*
                s23^3 + 171*s23^4) + s12*(10*s13^5 + 60*s13^4*s23 + 67*s13^3*
                s23^2 + 85*s13^2*s23^3 + 215*s13*s23^4 + 147*s23^5))) + 
         p1q^2*(p3q^3*(-10*s12^6 + 8*s23^3*(s13 + s23)^2*(3*s13 + 2*s23) - 
             2*s12^5*(5*s13 + 19*s23) + s12^4*(3*s13^2 - 26*s13*s23 - 123*
                s23^2) + s12^3*(3*s13^3 + 22*s13^2*s23 - 56*s13*s23^2 - 151*
                s23^3) + s12^2*s23*(17*s13^3 + 60*s13^2*s23 - 32*s13*s23^2 - 
               19*s23^3) + s12*s23^2*(6*s13^3 + 17*s13^2*s23 + 64*s13*s23^2 + 
               53*s23^3)) + p2q*p3q^2*(s12^5*(23*s13 - 11*s23) + 
             s12^4*(23*s13^2 + 98*s13*s23 - 26*s23^2) + 
             s12^3*(-16*s13^3 + 26*s13^2*s23 + 98*s13*s23^2 + 32*s23^3) + 
             s23^2*(6*s13^4 + 83*s13^3*s23 + 269*s13^2*s23^2 + 265*s13*
                s23^3 + 73*s23^4) + s12^2*(-16*s13^4 - 82*s13^3*s23 + 105*
                s13^2*s23^2 + 211*s13*s23^3 + 243*s23^4) + 
             s12*s23*(-6*s13^4 - 54*s13^3*s23 + 160*s13^2*s23^2 + 429*s13*
                s23^3 + 269*s23^4)) + p2q^3*(s12^3*(3*s13^3 + 17*s13^2*s23 + 
               6*s13*s23^2 + 24*s23^3) - (s13 + s23)^2*(10*s13^4 + 18*s13^3*
                s23 + 77*s13^2*s23^2 - 21*s13*s23^3 - 16*s23^4) + 
             s12^2*(3*s13^4 + 22*s13^3*s23 + 60*s13^2*s23^2 + 17*s13*s23^3 + 
               64*s23^4) - 2*s12*(5*s13^5 + 13*s13^4*s23 + 28*s13^3*s23^2 + 
               16*s13^2*s23^3 - 32*s13*s23^4 - 28*s23^5)) + 
           p2q^2*p3q*(-2*s12^4*(8*s13^2 + 3*s13*s23 - 3*s23^2) - 
             s12^3*(16*s13^3 + 82*s13^2*s23 + 54*s13*s23^2 - 83*s23^3) + 
             s12^2*(23*s13^4 + 26*s13^3*s23 + 105*s13^2*s23^2 + 160*s13*
                s23^3 + 269*s23^4) + s23*(-11*s13^5 - 26*s13^4*s23 + 32*s13^3*
                s23^2 + 243*s13^2*s23^3 + 269*s13*s23^4 + 73*s23^5) + 
             s12*(23*s13^5 + 98*s13^4*s23 + 98*s13^3*s23^2 + 211*s13^2*
                s23^3 + 429*s13*s23^4 + 265*s23^5))))/
        (48*p2q*p3q*(p1q + p2q + p3q)*s23^2*(-(p3q^2*s12*(s12 + s23)) - 
          p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
          p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
           (2*s13 + s23))) - (7*(s12 + s13 + s23)*
         (2*p1q^3*(s12 + s13)*s23^2 + (p3q*s12 - p2q*s13)^2*
           (p2q*(s12 + s23) + p3q*(s13 + s23)) + p1q^2*s23*
           (p2q*(-4*s13^2 + s23^2 + s12*(-4*s13 + s23)) + 
            p3q*(-4*s12^2 - 4*s12*s13 + s23*(s13 + s23))) + 
          2*p1q*(p3q^2*s12*(s12 - s23)*(s12 + s13 + s23) + 
            p2q^2*s13*(s13 - s23)*(s12 + s13 + s23) - 
            p2q*p3q*(s13*s23*(s13 + s23) + s12^2*(2*s13 + s23) + 
              s12*(2*s13^2 + s23^2))))*den[-1 + 2*ep])/
        (48*p2q*p3q*(p1q + p2q + p3q)*s23^2))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]] + 
     ((ep^3*s23*(p2q*s13*(s12 + 19*s13 - s23) + p1q*(-18*s12*s13 + s12*s23 - 
            19*s13*s23 + s23^2) - p3q*(s12^2 + 20*s13*s23 + 
            s12*(19*s13 + s23))))/(54*(p1q + p2q + p3q)*s12) + 
       (ep^2*(10*p2q^5*s13^3*(s12 + s23)*(s12 + s13 + s23) - 
          p3q^5*s12^2*(s12 + s23)*(s13 + s23)*(s12 + s13 + s23) - 
          p1q^3*(p2q + p3q)*s23^2*(s12 + s23)*(s12 + s13 + s23)*
           (10*p2q*(s12 + s23) - p3q*(2*s12 + s13 + s23)) + 
          p2q*p3q^4*s12*(-10*s12^4 + s12^3*(-29*s13 + 129*s23) + 
            s12^2*(38*s13^2 + 46*s13*s23 - 38*s23^2) + 20*s13*s23*
             (s13^2 + 2*s13*s23 - 5*s23^2) + s12*(21*s13^3 + 79*s13^2*s23 - 
              23*s13*s23^2 - 177*s23^3)) + p2q^4*p3q*s13*
           (-2*s12^3*(15*s13 + s23) + s12*s13*(65*s13^2 + 81*s13*s23 + 
              116*s23^2) + s12^2*(-20*s13^2 + 50*s13*s23 + 326*s23^2) + 
            s13*(19*s13^3 + 48*s13^2*s23 + 19*s13*s23^2 - 10*s23^3)) + 
          p2q^3*p3q^2*(2*s12^4*(15*s13 + s23) - 2*s12^3*s23*
             (101*s13 + 161*s23) + s13^2*(19*s13^3 + 19*s13^2*s23 - 
              29*s13*s23^2 - 29*s23^3) - 2*s12*s13*(s13^3 + 45*s13^2*s23 - 
              58*s13*s23^2 + 73*s23^3) - s12^2*(159*s13^3 + 105*s13^2*s23 - 
              280*s13*s23^2 + 324*s23^3)) - p2q^2*p3q^3*
           (10*s12^5 + 19*s13^2*s23*(s13 + s23)^2 - 
            4*s12^4*(5*s13 + 33*s23) + s12^3*(-123*s13^2 + 115*s13*s23 + 
              358*s23^2) + s12*s13*(39*s13^3 + 95*s13^2*s23 - 58*s13*s23^2 + 
              246*s23^3) + s12^2*(54*s13^3 + 3*s13^2*s23 + 49*s13*s23^2 + 
              500*s23^3)) + p1q^2*(10*p2q^3*s13*s23*(s12 + s13 + s23)*
             (2*s12^2 + 5*s12*s23 + 3*s23^2) + p3q^3*s23*(s12 + s23)*
             (-2*s12^3 - 2*s12^2*s13 + 3*s12*s23*(s13 + s23) + 
              s23*(s13 + s23)^2) + p2q*p3q^2*(18*s12^4*(-2*s13 + s23) - 
              2*s12^3*s23*(57*s13 + 56*s23) + s12^2*s23*(34*s13^2 + 
                15*s13*s23 + 39*s23^2) + s23^2*(17*s13^3 + 35*s13^2*s23 + 
                9*s13*s23^2 - 9*s23^3) + 2*s12*s23*(9*s13^3 + 34*s13^2*s23 + 
                50*s13*s23^2 + 80*s23^3)) + p2q^2*p3q*(20*s12^4*s23 + 
              2*s12^3*(18*s13^2 - s13*s23 - 55*s23^2) + 12*s12^2*s23*(
                9*s13^2 + 13*s13*s23 + 3*s23^2) + s23^2*(17*s13^3 + 
                64*s13^2*s23 + 37*s13*s23^2 - 10*s23^3) + s12*s23*(18*s13^3 + 
                135*s13^2*s23 + 193*s13*s23^2 + 156*s23^3))) - 
          p1q*(p3q^4*s12^2*(s12 + s23)*(s12 + s13 + s23)*(s13 + 3*s23) + 
            10*p2q^4*s13^2*(s12 + s13 + s23)*(s12^2 + 4*s12*s23 + 3*s23^2) + 
            p2q*p3q^3*(10*s12^5 + s12^4*(65*s13 - 147*s23) - 
              18*s13*s23^2*(s13 + s23)^2 + s12^3*(-37*s13^2 + 67*s13*s23 + 
                142*s23^2) - s12^2*(20*s13^3 + 113*s13^2*s23 + 2*s13*s23^2 - 
                113*s23^3) - 2*s12*s23*(19*s13^3 + 55*s13^2*s23 + 
                9*s13*s23^2 + 93*s23^3)) + p2q^3*p3q*(-20*s12^4*s13 + 
              s12^3*(-10*s13^2 + 64*s13*s23 + 326*s23^2) + 
              s13*s23*(37*s13^3 + 104*s13^2*s23 + 47*s13*s23^2 - 20*s23^3) + 
              s12*s13*(19*s13^3 + 185*s13^2*s23 + 248*s13*s23^2 + 
                272*s23^3) + s12^2*(101*s13^3 + 71*s13^2*s23 + 46*s13*s23^2 + 
                326*s23^3)) + p2q^2*p3q^2*(10*s12^5 - 10*s12^4*(s13 + 
                15*s23) + s12^3*(-166*s13^2 + 462*s23^2) + 
              s13*s23*(37*s13^3 + 56*s13^2*s23 - 19*s13*s23^2 - 38*s23^3) + 
              s12^2*(17*s13^3 - 255*s13^2*s23 - 50*s13*s23^2 + 436*s23^3) + 
              s12*(19*s13^4 + 71*s13^3*s23 + 14*s13^2*s23^2 + 236*s13*s23^3 - 
                186*s23^4)))))/(108*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(-2*p1q^5*(s12 - s13)*s23^4*(s12 + s23)*(s12 + s13 + s23)*
           (p3q*(s12 - 40*s23) + 5*p2q*(2*s12 + s23)) + 
          p1q^4*s23^3*(s12 + s13 + s23)*(10*p2q^2*(2*s12^4 + 4*s12^3*s13 + 
              s13*s23^2*(-3*s13 + 2*s23) + s12^2*(-2*s13^2 + 13*s13*s23 - 
                5*s23^2) + s12*s23*(-6*s13^2 + 10*s13*s23 - 3*s23^2)) + 
            p3q^2*(s12 + s23)*(6*s12^3 + 490*s12^2*s23 + 80*s13*(s13 - s23)*
               s23 + s12*(-2*s13^2 + 247*s13*s23 + 405*s23^2)) + 
            p2q*p3q*(62*s12^4 + 10*s13*s23^2*(41*s13 + 3*s23) + 
              s12^3*(-32*s13 + 766*s23) + 3*s12*s23*(114*s13^2 + 29*s13*s23 + 
                95*s23^2) + s12^2*(14*s13^2 + 107*s13*s23 + 989*s23^2))) - 
          p1q^3*s23*(p3q^3*s23*(6*s12^6 - 80*s13^2*s23^3*(s13 + s23) + 
              2*s12^5*(6*s13 + 493*s23) + s12^3*s23*(1312*s13^2 + 
                3005*s13*s23 + 311*s23^2) + s12^4*(6*s13^2 + 2051*s13*s23 + 
                1785*s23^2) + s12^2*s23*(247*s13^3 + 1549*s13^2*s23 + 
                721*s13*s23^2 - 819*s23^3) + s12*s23^2*(167*s13^3 + 
                167*s13^2*s23 - 245*s13*s23^2 - 325*s23^3)) + 
            p2q*p3q^2*(-16*s12^6*(81*s13 - 4*s23) + 2*s12^5*(648*s13^2 - 
                1304*s13*s23 + 1817*s23^2) + s12^3*s23^2*(5012*s13^2 + 
                8571*s13*s23 + 2215*s23^2) + 2*s12^4*s23*(662*s13^2 + 
                782*s13*s23 + 2963*s23^2) + 10*s13*s23^3*(34*s13^3 + 
                3*s13^2*s23 - 33*s13*s23^2 - 2*s23^3) + s12*s23^2*(
                294*s13^4 + 1587*s13^3*s23 + 2121*s13^2*s23^2 + 
                1163*s13*s23^3 - 295*s23^4) + 2*s12^2*s23*(18*s13^4 + 
                656*s13^3*s23 + 3814*s13^2*s23^2 + 3435*s13*s23^3 - 
                218*s23^4)) + 10*p2q^3*s23*(s12^5*(4*s13 - 3*s23) + 
              s12^4*(10*s13^2 + 5*s13*s23 - 9*s23^2) + 2*s12*s13*s23^2*(
                12*s13^2 + 12*s13*s23 - 5*s23^2) - 2*s13^2*s23^2*(s13^2 - 
                3*s13*s23 - 4*s23^2) + s12^3*(8*s13^3 + 33*s13^2*s23 - 
                17*s13*s23^2 - 9*s23^3) + s12^2*(2*s13^4 + 25*s13^3*s23 + 
                34*s13^2*s23^2 - 28*s13*s23^3 - 3*s23^4)) + 
            p2q^2*p3q*(40*s12^6*s23 + 4*s12^5*(324*s13^2 + 336*s13*s23 + 
                515*s23^2) + 20*s13*s23^3*(43*s13^3 + 49*s13^2*s23 + 
                5*s13*s23^2 - s23^3) + 2*s12^3*s23*(-626*s13^3 + 
                2384*s13^2*s23 + 4219*s13*s23^2 + 898*s23^3) + 
              s12^4*(-1296*s13^3 + 1418*s13^2*s23 + 3973*s13*s23^2 + 
                3241*s23^3) + 2*s12*s23^2*(309*s13^4 + 1253*s13^3*s23 + 
                1124*s13^2*s23^2 + 555*s13*s23^3 + 15*s23^4) + 
              s12^2*s23*(74*s13^4 + 1441*s13^3*s23 + 7193*s13^2*s23^2 + 
                6931*s13*s23^3 + 605*s23^4))) - (p2q + p3q)*
           (10*p2q^5*s13^2*(s12 + s13)*s23*(s12^3*(3*s13 - 4*s23) + 
              2*s12^2*(s13^2 + s13*s23 - 2*s23^2) - s13^2*(s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(-2*s13^3 + 3*s13*s23^2)) + 
            p3q^5*s12^3*s23*(728*s12^4 + s12^3*(2181*s13 + 2101*s23) + 
              s13*s23*(721*s13^2 + 1042*s13*s23 + 321*s23^2) + 
              s12^2*(2178*s13^2 + 4596*s13*s23 + 2018*s23^2) + 
              s12*(725*s13^3 + 3216*s13^2*s23 + 2736*s13*s23^2 + 
                645*s23^3)) + p2q*p3q^4*s12^2*(2*s12^5*(648*s13 + 1033*s23) + 
              2*s13^2*s23^2*(191*s13^2 + 142*s13*s23 + 31*s23^2) + 
              s12^3*s23*(4509*s13^2 + 11375*s13*s23 + 4576*s23^2) + 
              s12^4*(1296*s13^2 + 6265*s13*s23 + 4735*s23^2) + 
              s12*s13*s23*(-383*s13^3 + 115*s13^2*s23 + 4399*s13*s23^2 + 
                997*s23^3) + s12^2*s23*(-1369*s13^3 + 7669*s13^2*s23 + 
                7395*s13*s23^2 + 1907*s23^3)) + p2q^2*p3q^3*s12*
             (1914*s12^6*s23 + 5*s13^3*s23^2*(33*s13^2 + 98*s13*s23 + 
                65*s23^2) + s12^5*(-3888*s13^2 + 484*s13*s23 + 3454*s23^2) + 
              s12*s13^2*s23*(-177*s13^3 + 2336*s13^2*s23 + 3120*s13*s23^2 + 
                927*s23^3) + s12^2*s13*s23*(1201*s13^3 - 934*s13^2*s23 + 
                7479*s13*s23^2 + 1540*s23^3) + s12^3*s23*(-7323*s13^3 + 
                2660*s13^2*s23 + 7651*s13*s23^2 + 2234*s23^3) + 
              s12^4*(-3888*s13^3 - 6243*s13^2*s23 + 7923*s13*s23^2 + 
                3774*s23^3)) - p2q^4*p3q*s13*(1296*s12^6*s23 + 
              6*s12^5*s23*(567*s13 + 208*s23) + s12^2*s13*s23*(2466*s13^3 + 
                3199*s13^2*s23 + 825*s13*s23^2 - 50*s23^3) + 10*s13^3*s23*(
                10*s13^3 + 11*s13^2*s23 - s13*s23^2 - 2*s23^3) + 
              s12*s13^2*s23*(347*s13^3 + 532*s13^2*s23 + 265*s13*s23^2 + 
                10*s23^3) + 2*s12^4*(648*s13^3 + 3070*s13^2*s23 + 
                3177*s13*s23^2 + 592*s23^3) + s12^3*(1296*s13^4 + 
                4957*s13^3*s23 + 6587*s13^2*s23^2 + 1086*s13*s23^3 - 
                80*s23^4)) + p2q^3*p3q^2*(1296*s12^7*s23 + 2*s12^6*s23*(
                729*s13 + 1292*s23) + 20*s13^4*s23^2*(5*s13^2 + 6*s13*s23 + 
                s23^2) + s12*s13^3*s23*(-65*s13^3 - 13*s13^2*s23 + 
                287*s13*s23^2 + 315*s23^3) + 4*s12^5*(972*s13^3 + 
                885*s13^2*s23 + 2062*s13*s23^2 + 646*s23^3) + 
              s12^2*s13^2*s23*(-1653*s13^3 + 391*s13^2*s23 + 2777*s13*s23^2 + 
                915*s23^3) + s12^3*s13*s23*(3129*s13^3 + 989*s13^2*s23 + 
                6100*s13*s23^2 + 1268*s23^3) + s12^4*(3888*s13^4 + 
                4207*s13^3*s23 + 4853*s13^2*s23^2 + 5426*s13*s23^3 + 
                1296*s23^4))) + p1q*(-10*p2q^5*s13*s23*(-3*s12^5*s13 + 
              s12^4*(-3*s13^2 - 19*s13*s23 + 4*s23^2) + s13^3*s23*(3*s13^2 + 
                11*s13*s23 + 8*s23^2) + s12*s13^2*(3*s13^3 + 19*s13^2*s23 + 
                15*s13*s23^2 - 6*s23^3) + s12^2*s13*(9*s13^3 + 10*s13^2*s23 - 
                16*s13*s23^2 - s23^3) + s12^3*(6*s13^3 - 25*s13^2*s23 - 
                13*s13*s23^2 + 4*s23^3)) + p3q^5*s12^2*s23*(-726*s12^5 - 
              s12^4*(2175*s13 + 961*s23) + 2*s13*s23^2*(119*s13^2 + 
                118*s13*s23 - s23^2) + s12^3*(-2172*s13^2 - 1751*s13*s23 + 
                899*s23^2) + s12*s23*(-477*s13^3 + 1129*s13^2*s23 + 
                2009*s13*s23^2 + 643*s23^3) + s12^2*(-723*s13^3 - 
                1267*s13^2*s23 + 2435*s13*s23^2 + 1777*s23^3)) + 
            p2q*p3q^4*s12*(-36*s12^6*(72*s13 + 77*s23) + 10*s13^2*s23^3*(
                41*s13^2 + 106*s13*s23 + 65*s23^2) - 2*s12^5*(1296*s13^2 + 
                5241*s13*s23 + 1220*s23^2) + s12^4*s23*(-14004*s13^2 - 
                11383*s13*s23 + 1363*s23^2) + 2*s12*s13*s23^2*(-105*s13^3 + 
                2144*s13^2*s23 + 2613*s13*s23^2 + 484*s23^3) + 
              2*s12^3*s23*(-729*s13^3 - 7704*s13^2*s23 + 2547*s13*s23^2 + 
                1435*s23^3) + 3*s12^2*s23*(-116*s13^4 - 17*s13^3*s23 + 
                389*s13^2*s23^2 + 3177*s13*s23^3 + 613*s23^4)) - 
            p2q^4*p3q*(1296*s12^7*s23 + 12*s12^6*s23*(275*s13 + 216*s23) + 
              20*s13^3*s23^2*(25*s13^3 + 31*s13^2*s23 + 3*s13*s23^2 - 
                3*s23^3) + 4*s12^5*(324*s13^3 + 1446*s13^2*s23 + 
                2893*s13*s23^2 + 650*s23^3) + s12^4*s23*(3345*s13^3 + 
                13225*s13^2*s23 + 7952*s13*s23^2 + 1304*s23^3) + 
              s12^2*s13*s23*(429*s13^4 + 9165*s13^3*s23 + 10661*s13^2*s23^2 + 
                2355*s13*s23^3 - 20*s23^4) + 2*s12*s13^2*s23*(84*s13^4 + 
                908*s13^3*s23 + 1164*s13^2*s23^2 + 525*s13*s23^3 + 
                25*s23^4) + 2*s12^3*s13*(-648*s13^4 + 2505*s13^3*s23 + 
                7271*s13^2*s23^2 + 7525*s13*s23^3 + 1146*s23^4)) - 
            p2q^3*p3q^2*(3210*s12^7*s23 - 6*s12^6*(432*s13^2 - 973*s13*s23 - 
                695*s23^2) + 10*s13^3*s23^2*(38*s13^3 + 5*s13^2*s23 - 
                43*s13*s23^2 - 10*s23^3) + 2*s12^5*(1296*s13^3 + 
                5097*s13^2*s23 + 11974*s13*s23^2 + 2161*s23^3) + 
              s12^3*s23*(10746*s13^4 + 13765*s13^3*s23 + 17171*s13^2*s23^2 - 
                4048*s13*s23^3 - 908*s23^4) + s12*s13^2*s23*(138*s13^4 + 
                1721*s13^3*s23 + 2147*s13^2*s23^2 + 269*s13*s23^3 - 
                905*s23^4) + 2*s12^2*s13*s23*(213*s13^4 + 6504*s13^3*s23 + 
                4723*s13^2*s23^2 - 2110*s13*s23^3 - 705*s23^4) + 
              2*s12^4*(2592*s13^4 + 1236*s13^3*s23 + 11802*s13^2*s23^2 + 
                5092*s13*s23^3 + 1227*s23^4)) + p2q^2*p3q^3*
             (-72*s12^7*(18*s13 + 55*s23) + s12^6*(5184*s13^2 - 
                6957*s13*s23 - 3453*s23^2) + 40*s13^3*s23^3*(7*s13^2 + 
                8*s13*s23 + s23^2) + 2*s12^5*(3240*s13^3 - 2274*s13^2*s23 - 
                9447*s13*s23^2 - 1025*s23^3) + 3*s12^4*s23*(3944*s13^3 - 
                5896*s13^2*s23 + 309*s13*s23^2 - 151*s23^3) + 
              s12*s13^2*s23^2*(-257*s13^3 + 297*s13^2*s23 + 1919*s13*s23^2 + 
                1605*s23^3) + s12^3*s23*(-2256*s13^4 + 3829*s13^3*s23 - 
                2169*s13^2*s23^2 + 13840*s13*s23^3 + 2104*s23^4) + 
              s12^2*s13*s23*(-87*s13^4 - 4981*s13^3*s23 + 3913*s13^2*s23^2 + 
                10801*s13*s23^3 + 2360*s23^4))) + 
          p1q^2*(p3q^4*s12*s23*(2*s12^6 + 6*s12^5*(s13 + 189*s23) - 
              5*s13*s23^3*(49*s13^2 + 114*s13*s23 + 65*s23^2) + 
              s12^4*(6*s13^2 + 2833*s13*s23 + 1925*s23^2) + s12^2*s23*(
                244*s13^3 + 861*s13^2*s23 - 1418*s13*s23^2 - 983*s23^3) + 
              s12^3*(2*s13^3 + 1943*s13^2*s23 + 3114*s13*s23^2 + 133*s23^3) - 
              s12*s23^2*(7*s13^3 + 1634*s13^2*s23 + 2030*s13*s23^2 + 
                323*s23^3)) + 10*p2q^4*s13*s23*(2*s12^5*(s13 - 3*s23) + 
              s12^4*(6*s13^2 - 25*s23^2) + 2*s13^2*s23^2*(s13^2 + 7*s13*s23 + 
                6*s23^2) + s12^3*(6*s13^3 + 27*s13^2*s23 - 32*s13*s23^2 - 
                24*s23^3) + 2*s12*s13*s23*(3*s13^3 + 18*s13^2*s23 + 
                14*s13*s23^2 - 6*s23^3) + s12^2*(2*s13^4 + 27*s13^3*s23 + 
                30*s13^2*s23^2 - 34*s13*s23^3 - 5*s23^4)) - 
            p2q*p3q^3*(2*s12^7*(648*s13 - 11*s23) + s12^5*s23*(6534*s13^2 - 
                9565*s13*s23 - 4261*s23^2) + 2*s12^6*(648*s13^2 + 
                23*s13*s23 - 2166*s23^2) + 20*s13^2*s23^4*(13*s13^2 + 
                14*s13*s23 + s23^2) + s12*s13*s23^3*(-359*s13^3 - 
                22*s13^2*s23 + 1387*s13*s23^2 + 1290*s23^3) + 
              s12^4*s23*(26*s13^3 + 917*s13^2*s23 - 16819*s13*s23^2 + 
                1352*s23^3) + s12^2*s23^2*(-334*s13^4 - 4660*s13^3*s23 + 
                465*s13^2*s23^2 + 6043*s13*s23^3 + 878*s23^4) + 
              s12^3*s23*(40*s13^4 - 3544*s13^3*s23 - 5970*s13^2*s23^2 - 
                3727*s13*s23^3 + 2181*s23^4)) + p2q^2*p3q^2*
             (20*s12^7*s23 + 4*s12^6*(648*s13^2 + 625*s13*s23 + 1176*s23^2) + 
              10*s13^2*s23^3*(54*s13^3 + 7*s13^2*s23 - 55*s13*s23^2 - 
                8*s23^3) + s12^4*s23*(9038*s13^3 + 5582*s13^2*s23 + 
                21365*s13*s23^2 + 451*s23^3) + 2*s12^5*(1296*s13^3 - 
                683*s13^2*s23 + 3598*s13*s23^2 + 2122*s23^3) + 
              s12*s13*s23^2*(354*s13^4 + 2571*s13^3*s23 + 3231*s13^2*s23^2 + 
                1049*s13*s23^3 - 895*s23^4) + s12^3*s23*(-38*s13^4 + 
                13799*s13^3*s23 + 18957*s13^2*s23^2 + 13348*s13*s23^3 + 
                366*s23^4) + s12^2*s23*(38*s13^5 + 1415*s13^4*s23 + 
                15208*s13^3*s23^2 + 12128*s13^2*s23^3 - 2864*s13*s23^4 - 
                525*s23^5)) + p2q^3*p3q*(4*s12^6*s23*(-10*s13 + 471*s23) + 
              20*s13^2*s23^3*(46*s13^3 + 55*s13^2*s23 + 6*s13*s23^2 - 
                3*s23^3) + s12^5*(-1296*s13^3 - 2582*s13^2*s23 + 
                764*s13*s23^2 + 2106*s23^3) + 2*s12*s13*s23^2*(261*s13^4 + 
                1592*s13^3*s23 + 1766*s13^2*s23^2 + 810*s13*s23^3 + 
                35*s23^4) + 2*s12^4*(-648*s13^4 + 675*s13^3*s23 + 
                2637*s13^2*s23^2 + 5118*s13*s23^3 + 599*s23^4) + 
              s12^3*s23*(-2530*s13^4 + 7565*s13^3*s23 + 16318*s13^2*s23^2 + 
                10159*s13*s23^3 + 1006*s23^4) + s12^2*s23*(58*s13^5 + 
                1405*s13^4*s23 + 12551*s13^3*s23^2 + 13139*s13^2*s23^3 + 
                2125*s13*s23^4 + 30*s23^5)))))/(216*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^3*s23*(-(p1q^2*s23*(s12 + s23)) - 
          (p2q + p3q)*(s12 + s13)*(p2q*s13 - p3q*(s12 + s23)) + 
          p1q*(p3q*(s12 + s13 - s23)*(s12 + s23) + p2q*(s12^2 + 2*s13*s23 + 
              s12*(s13 + s23))))) + (-2*p1q^5*s23^3*(s12 + s13 + s23)*
          (5*p2q*s23*(6*s12^3 + s12*(3*s13 - s23)*s23 + 5*s13*s23^2 + 
             s12^2*(14*s13 + 5*s23)) + p3q*(648*s12^4 - 200*s13*s23^3 + 
             5*s12*s23^2*(-105*s13 + 8*s23) + s12^2*s23*(-965*s13 + 367*
                s23) + s12^3*(-648*s13 + 975*s23))) - 
         p1q^4*s23^2*(s12 + s13 + s23)*(-10*p2q^2*s23*(6*s12^4 + 
             s13*(19*s13 - 6*s23)*s23^2 + 2*s12^3*(16*s13 + s23) + 
             s12^2*(34*s13^2 + 15*s13*s23 - 7*s23^2) + 
             s12*s23*(14*s13^2 + 18*s13*s23 - 3*s23^2)) + 
           p2q*p3q*(2592*s12^5 - 6*s12^4*(432*s13 - 941*s23) + 
             10*s13*s23^3*(201*s13 + 11*s23) + s12^2*s23*(5730*s13^2 - 6063*
                s13*s23 - 37*s23^2) + s12*s23^2*(4150*s13^2 - 523*s13*s23 + 
               347*s23^2) + 6*s12^3*(432*s13^2 - 1596*s13*s23 + 445*s23^2)) + 
           p3q^2*(1296*s12^5 + 400*s13*(s13 - s23)*s23^3 + 
             18*s12^4*(288*s13 + 323*s23) + s12*s23^2*(1050*s13^2 - 163*s13*
                s23 + 407*s23^2) + s12^2*s23*(1930*s13^2 - 2331*s13*s23 + 901*
                s23^2) + 4*s12^3*(324*s13^2 + 638*s13*s23 + 1253*s23^2))) + 
         p1q^3*s23*(p3q^3*(2592*s12^7 - 400*s13^2*s23^4*(s13 + s23) + 
             18*s12^6*(504*s13 + 251*s23) + 2*s12^5*(5184*s13^2 + 2564*s13*
                s23 - 3249*s23^2) + s12^4*(3888*s13^3 + 1886*s13^2*s23 - 
               18367*s13*s23^2 - 15041*s23^3) - s12*s23^3*(483*s13^3 + 1443*
                s13^2*s23 + 887*s13*s23^2 + 327*s23^3) + s12^2*s23^2*
              (-2647*s13^3 - 701*s13^2*s23 + 2683*s13*s23^2 + 487*s23^3) - 
             s12^3*s23*(-1276*s13^3 + 8036*s13^2*s23 + 10853*s13*s23^2 + 5803*
                s23^3)) - 10*p2q^3*s23*(3*s12^5*(4*s13 - s23) + 
             2*s13^2*s23^2*(13*s13^2 + s13*s23 - 12*s23^2) + 
             s12^4*(50*s13^2 + 7*s13*s23 - 9*s23^2) + 2*s12*s13*s23*
              (12*s13^3 + 54*s13^2*s23 - 17*s23^3) + s12^3*(64*s13^3 + 61*
                s13^2*s23 - 7*s13*s23^2 - 9*s23^3) + s12^2*(26*s13^4 + 75*
                s13^3*s23 + 84*s13^2*s23^2 - 36*s13*s23^3 - 3*s23^4)) + 
           p2q^2*p3q*(5184*s12^7 + 24*s12^6*(324*s13 + 427*s23) + 
             4*s12^5*(972*s13^2 + 4729*s13*s23 + 856*s23^2) + 
             20*s13*s23^3*(205*s13^3 + 227*s13^2*s23 + 19*s13*s23^2 - 3*
                s23^3) - s12^4*(2592*s13^3 + 2714*s13^2*s23 - 16587*s13*
                s23^2 + 4057*s23^3) + 2*s12^3*(648*s13^4 - 4184*s13^3*s23 - 
               9200*s13^2*s23^2 + 3439*s13*s23^3 - 1020*s23^4) + 
             2*s12*s23^2*(3065*s13^4 + 4589*s13^3*s23 + 718*s13^2*s23^2 + 979*
                s13*s23^3 - 15*s23^4) + s12^2*s23*(5750*s13^4 - 2265*s13^3*
                s23 - 13861*s13^2*s23^2 + 3441*s13*s23^3 + 347*s23^4)) + 
           p2q*p3q^2*(7776*s12^7 + 48*s12^6*(297*s13 + 266*s23) + 
             2*s12^5*(7128*s13^2 + 11938*s13*s23 - 3631*s23^2) + 
             2*s12^4*(1944*s13^3 + 9358*s13^2*s23 + 6588*s13*s23^2 - 10593*
                s23^3) + 10*s13*s23^3*(166*s13^3 + 11*s13^2*s23 - 161*s13*
                s23^2 - 6*s23^3) + s12^3*(1296*s13^4 + 3628*s13^3*s23 + 4468*
                s13^2*s23^2 + 14585*s13*s23^3 - 7447*s23^4) + 
             s12*s23^2*(3130*s13^4 + 3385*s13^3*s23 - 637*s13^2*s23^2 + 1901*
                s13*s23^3 - 357*s23^4) + 2*s12^2*s23*(1970*s13^4 - 2036*s13^3*
                s23 - 1524*s13^2*s23^2 + 6491*s13*s23^3 + 564*s23^4))) - 
         (p2q + p3q)*(10*p2q^5*s13^2*(s12 + s13)*s23*(s12^3*(3*s13 + 8*s23) + 
             s13^2*(s13^2 + 7*s13*s23 + 6*s23^2) + s12^2*(4*s13^2 + 30*s13*
                s23 + 8*s23^2) + s12*s13*(2*s13^2 + 26*s13*s23 + 19*s23^2)) + 
           p2q^2*p3q^3*s12*(-6510*s12^6*s23 + 2*s12^5*(3888*s13^2 - 1958*s13*
                s23 - 7165*s23^2) + s13^3*s23^2*(513*s13^2 + 146*s13*s23 - 
               367*s23^2) + s12^4*(7776*s13^3 + 16965*s13^2*s23 - 12593*s13*
                s23^2 - 11738*s23^3) + s12^3*s23*(22677*s13^3 + 10012*s13^2*
                s23 - 10773*s13*s23^2 - 3918*s23^3) + s12^2*s13*s23*
              (1409*s13^3 + 8502*s13^2*s23 + 239*s13*s23^2 - 3424*s23^3) + 
             s12*s13^2*s23*(879*s13^3 - 1852*s13^2*s23 - 2524*s13*s23^2 + 127*
                s23^3)) - p3q^5*s12^3*s23*(1376*s12^4 + 
             s12^3*(5103*s13 + 5023*s23) + 3*s13*s23*(781*s13^2 + 1322*s13*
                s23 + 541*s23^2) + 2*s12^2*(3039*s13^2 + 6358*s13*s23 + 2959*
                s23^2) + s12*(2351*s13^3 + 10036*s13^2*s23 + 9236*s13*s23^2 + 
               2271*s23^3)) - p2q*p3q^4*s12^2*(s12^5*(2592*s13 + 6086*s23) + 
             2*s13^2*s23^2*(223*s13^2 - 234*s13*s23 - 297*s23^2) + 
             s12^3*s23*(13203*s13^2 + 32297*s13*s23 + 15864*s23^2) + 
             s12^4*(2592*s13^2 + 18091*s13*s23 + 16409*s23^2) + 
             s12*s13*s23*(-1985*s13^3 - 1751*s13^2*s23 + 6053*s13*s23^2 + 
               4299*s23^3) + s12^2*s23*(-3379*s13^3 + 16283*s13^2*s23 + 21089*
                s13*s23^2 + 5541*s23^3)) + p2q^4*p3q*s13*(2592*s12^6*s23 + 
             2*s12^5*s23*(1899*s13 + 1252*s23) + s12^2*s13*s23*
              (1854*s13^3 + 2401*s13^2*s23 - 233*s13*s23^2 - 350*s23^3) + 
             s12*s13^2*s23*(497*s13^3 + 624*s13^2*s23 + 227*s13*s23^2 - 250*
                s23^3) + 10*s13^3*s23*(46*s13^3 + 51*s13^2*s23 - s13*s23^2 - 
               6*s23^3) + 2*s12^4*(1296*s13^3 + 2254*s13^2*s23 + 2319*s13*
                s23^2 + 532*s23^3) + s12^3*(2592*s13^4 + 2527*s13^3*s23 + 
               1829*s13^2*s23^2 + 594*s13*s23^3 - 160*s23^4)) - 
           p2q^3*p3q^2*(2592*s12^7*s23 + 20*s13^4*s23^2*(23*s13^2 + 26*s13*
                s23 + 3*s23^2) + s12^6*(-2682*s13*s23 + 5176*s23^2) + 
             8*s12^5*(972*s13^3 - 678*s13^2*s23 + 132*s13*s23^2 + 485*
                s23^3) + s12*s13^3*s23*(973*s13^3 + 1173*s13^2*s23 + 417*s13*
                s23^2 + 617*s23^3) + s12^2*s13^2*s23*(-783*s13^3 + 1365*s13^2*
                s23 + 3855*s13*s23^2 + 817*s23^3) + s12^3*s13*s23*
              (6255*s13^3 + 1487*s13^2*s23 + 148*s13*s23^2 + 1556*s23^3) + 
             s12^4*(7776*s13^4 + 85*s13^3*s23 - 5877*s13^2*s23^2 + 2662*s13*
                s23^3 + 1296*s23^4))) + 
         p1q*(p3q^5*s12^2*s23*(4622*s12^5 + 3*s12^4*(5379*s13 + 4865*s23) - 
             2*s13*s23^2*(607*s13^2 + 934*s13*s23 + 327*s23^2) + 
             s12^3*(18408*s13^2 + 33541*s13*s23 + 12399*s23^2) + 
             s12*s23*(5647*s13^3 + 4357*s13^2*s23 - 3655*s13*s23^2 - 2925*
                s23^3) + s12^2*(6893*s13^3 + 24593*s13^2*s23 + 14403*s13*
                s23^2 - 499*s23^3)) + 10*p2q^5*s13*s23*(3*s12^5*s13 + 
             s12^4*(s13^2 + 7*s13*s23 + 8*s23^2) + s13^3*s23*(-s13^2 + 23*s13*
                s23 + 24*s23^2) + s12^3*(-12*s13^3 - 5*s13^2*s23 + 69*s13*
                s23^2 + 8*s23^3) + s12^2*s13*(-15*s13^3 - 32*s13^2*s23 + 128*
                s13*s23^2 + 57*s23^3) + s12*s13^2*(-5*s13^3 - 21*s13^2*s23 + 
               87*s13*s23^2 + 78*s23^3)) + p2q^2*p3q^3*
            (16*s12^7*(162*s13 + 1763*s23) - 120*s13^3*s23^3*(11*s13^2 + 12*
                s13*s23 + s23^2) + s12^6*(-10368*s13^2 + 33987*s13*s23 + 
               63955*s23^2) - s12*s13^2*s23^2*(2269*s13^3 + 2443*s13^2*s23 + 
               1229*s13*s23^2 + 2255*s23^3) + s12^4*s23*(-40888*s13^3 + 11572*
                s13^2*s23 + 51307*s13*s23^2 + 7283*s23^3) + 
             s12^5*(-12960*s13^3 - 8244*s13^2*s23 + 74178*s13*s23^2 + 47722*
                s23^3) + s12^3*s23*(1800*s13^4 - 8527*s13^3*s23 + 5899*s13^2*
                s23^2 + 9156*s13*s23^3 - 4692*s23^4) + s12^2*s13*s23*
              (-2439*s13^4 + 9023*s13^3*s23 + 5457*s13^2*s23^2 - 10843*s13*
                s23^3 - 2048*s23^4)) + p2q^3*p3q^2*(14286*s12^7*s23 + 
             s12^6*(-5184*s13^2 + 3282*s13*s23 + 28534*s23^2) + 
             10*s13^3*s23^2*(178*s13^3 + 21*s13^2*s23 - 187*s13*s23^2 - 30*
                s23^3) + 2*s12^5*(2592*s13^3 - 4731*s13^2*s23 + 12524*s13*
                s23^2 + 9687*s23^3) + s12*s13^2*s23*(1030*s13^4 + 19*s13^3*
                s23 - 1023*s13^2*s23^2 + 1027*s13*s23^3 - 2011*s23^4) + 
             s12^3*s23*(16458*s13^4 + 10939*s13^3*s23 + 5401*s13^2*s23^2 + 
               8616*s13*s23^3 - 1356*s23^4) - 2*s12^2*s13*s23*
              (2685*s13^4 - 3526*s13^3*s23 - 7859*s13^2*s23^2 + 2264*s13*
                s23^3 + 767*s23^4) + 2*s12^4*(5184*s13^4 - 3352*s13^3*s23 + 
               832*s13^2*s23^2 + 13314*s13*s23^3 + 1885*s23^4)) + 
           p2q*p3q^4*s12*(16*s12^6*(324*s13 + 1321*s23) - 2*s13^2*s23^3*
              (67*s13^2 + 454*s13*s23 + 387*s23^2) + 6*s12^5*
              (864*s13^2 + 8877*s13*s23 + 9176*s23^2) + s12^4*s23*
              (42528*s13^2 + 97069*s13*s23 + 44355*s23^2) + 
             2*s12*s13*s23^2*(1481*s13^3 - 1686*s13^2*s23 - 3781*s13*s23^2 - 
               774*s23^3) + s12^2*s23*(-2892*s13^4 + 2641*s13^3*s23 + 14031*
                s13^2*s23^2 + 1211*s13*s23^3 - 6261*s23^4) + 
             s12^3*(-2858*s13^3*s23 + 54796*s13^2*s23^2 + 51726*s13*s23^3 + 
               4174*s23^4)) + p2q^4*p3q*(2592*s12^7*s23 + 12*s12^6*s23*
              (-113*s13 + 432*s23) + 20*s13^3*s23^2*(111*s13^3 + 133*s13^2*
                s23 + 13*s13*s23^2 - 9*s23^3) + 4*s12^5*(648*s13^3 - 99*s13^2*
                s23 + 1273*s13*s23^2 + 974*s23^3) + s12^4*s23*
              (1115*s13^3 + 1591*s13^2*s23 + 6784*s13*s23^2 + 1304*s23^3) + 
             s12^2*s13*s23*(-3081*s13^4 + 1571*s13^3*s23 + 10103*s13^2*
                s23^2 + 1461*s13*s23^3 - 380*s23^4) + 2*s12*s13^2*s23*
              (490*s13^4 + 1534*s13^3*s23 + 1618*s13^2*s23^2 + 1109*s13*
                s23^3 - 265*s23^4) + s12^3*(-2592*s13^5 + 3870*s13^4*s23 + 
               7446*s13^3*s23^2 + 4178*s13^2*s23^3 + 2588*s13*s23^4))) + 
         p1q^2*(p3q^4*s12*s23*(5838*s12^6 + 2*s12^5*(10053*s13 + 7693*s23) + 
             3*s13*s23^3*(189*s13^2 + 298*s13*s23 + 109*s23^2) + 
             s12^4*(22698*s13^2 + 32433*s13*s23 + 5797*s23^2) + 
             s12^3*(8430*s13^3 + 22923*s13^2*s23 + 350*s13*s23^2 - 10231*
                s23^3) + s12*s23^2*(-1931*s13^3 + 10*s13^2*s23 + 2682*s13*
                s23^2 + 981*s23^3) - s12^2*s23*(-5876*s13^3 + 571*s13^2*s23 + 
               9622*s13*s23^2 + 5499*s23^3)) + 10*p2q^4*s13*s23*
            (6*s12^5*(s13 - s23) + 2*s13^2*s23^2*(7*s13^2 - 11*s13*s23 - 18*
                s23^2) + s12^4*(18*s13^2 - 2*s13*s23 - 13*s23^2) + 
             2*s12*s13*s23*(9*s13^3 + 44*s13^2*s23 - 32*s13*s23^2 - 42*
                s23^3) + s12^3*(18*s13^3 + 35*s13^2*s23 + 10*s13*s23^2 - 40*
                s23^3) + s12^2*(6*s13^4 + 49*s13^3*s23 + 100*s13^2*s23^2 - 98*
                s13*s23^3 - 33*s23^4)) + p2q*p3q^3*
            (6*s12^7*(432*s13 + 3575*s23) + 60*s13^2*s23^4*(21*s13^2 + 22*s13*
                s23 + s23^2) + 6*s12^6*(432*s13^2 + 7279*s13*s23 + 8164*
                s23^2) + s12^5*s23*(34578*s13^2 + 74389*s13*s23 + 23549*
                s23^2) + s12^4*s23*(-1842*s13^3 + 41027*s13^2*s23 + 27079*s13*
                s23^2 - 16568*s23^3) + s12*s13*s23^3*(1779*s13^3 + 3146*s13^2*
                s23 + 1685*s13*s23^2 + 1518*s23^3) + s12^3*s23*
              (-1236*s13^4 + 2516*s13^3*s23 + 1958*s13^2*s23^2 - 3465*s13*
                s23^3 - 11185*s23^4) + s12^2*s23^2*(5326*s13^4 - 5780*s13^3*
                s23 - 10477*s13^2*s23^2 + 4257*s13*s23^3 + 1398*s23^4)) + 
           p2q^3*p3q*(5184*s12^7*s23 + 12*s12^6*s23*(-10*s13 + 751*s23) - 
             20*s13^2*s23^3*(212*s13^3 + 245*s13^2*s23 + 24*s13*s23^2 - 9*
                s23^3) + s12^5*(2592*s13^3 - 3606*s13^2*s23 + 5460*s13*
                s23^2 + 3746*s23^3) + s12^3*s23*(8430*s13^4 + 7077*s13^3*
                s23 - 8294*s13^2*s23^2 + 1111*s13*s23^3 - 1274*s23^4) + 
             2*s12^4*(1296*s13^4 - 441*s13^3*s23 - 3557*s13^2*s23^2 + 3722*
                s13*s23^3 - 693*s23^4) - 2*s12*s13*s23^2*(2005*s13^4 + 3726*
                s13^3*s23 + 1852*s13^2*s23^2 + 1676*s13*s23^3 - 155*s23^4) + 
             s12^2*s23*(-1950*s13^5 + 6917*s13^4*s23 + 8395*s13^3*s23^2 - 
               10273*s13^2*s23^3 - 1771*s13*s23^4 + 30*s23^5)) + 
           p2q^2*p3q^2*(20796*s12^7*s23 - 8*s12^6*(648*s13^2 - 2283*s13*s23 - 
               5432*s23^2) - 30*s13^2*s23^3*(86*s13^3 + 9*s13^2*s23 - 85*s13*
                s23^2 - 8*s23^3) - s12^4*s23*(26886*s13^3 + 6990*s13^2*s23 - 
               31369*s13*s23^2 + 6337*s23^3) + s12^5*(-5184*s13^3 - 7338*
                s13^2*s23 + 44128*s13*s23^2 + 23460*s23^3) + 
             s12^3*s23*(1830*s13^4 - 12941*s13^3*s23 - 21219*s13^2*s23^2 + 
               5148*s13*s23^3 - 6690*s23^4) + s12*s13*s23^2*(-3110*s13^4 - 
               2593*s13^3*s23 + 955*s13^2*s23^2 - 2711*s13*s23^3 + 1501*
                s23^4) + s12^2*s23*(-2010*s13^5 + 10331*s13^4*s23 - 2160*
                s13^3*s23^2 - 25396*s13^2*s23^3 - 208*s13*s23^4 + 447*
                s23^5))))/(432*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*
         s23*(p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       ((s12 + s13 + s23)*(2*p1q^3*s23^2*(5*p2q*(6*s12^2 + 6*s12*s13 - 
              s12*s23 - 3*s13*s23) + p3q*(327*s12^2 + 327*s12*s13 + 
              40*s12*s23 + 120*s13*s23)) + (p3q*s12 - p2q*s13)^2*
           (p3q^2*s12*(80*s12 + 407*s13 + 327*s23) + 10*p2q^2*
             (3*s12^2 + s13*(s13 - 2*s23) + s12*(s13 + 3*s23)) + 
            p2q*p3q*(-394*s12^2 - 20*s13*(13*s13 + s23) + s12*(831*s13 + 
                357*s23))) + p1q^2*s23*(-(p3q^2*s12*(1308*s12^2 + 1308*s12*
                s13 + 80*s12*s23 + 73*s13*s23 - 327*s23^2)) - 
            p2q*p3q*(120*s12^3 + 20*s13*s23*(37*s13 + s23) + 
              34*s12^2*(42*s13 + 11*s23) + s12*(1308*s13^2 - 731*s13*s23 - 
                357*s23^2)) - 10*p2q^2*(3*s12^2*(4*s13 - s23) + 
              s13*s23*(-7*s13 + 2*s23) + 3*s12*(4*s13^2 - s13*s23 - 
                s23^2))) + 2*p1q*(p3q^3*s12^2*(327*s12^2 + 327*s12*s13 - 
              40*s12*s23 - 287*s13*s23 - 327*s23^2) + p2q^2*p3q*
             (-30*s12^3*(2*s13 + s23) + 20*s13^2*s23*(19*s13 + s23) + 
              s12*s13*(327*s13^2 - 771*s13*s23 - 337*s23^2) + 
              s12^2*(267*s13^2 + 394*s13*s23 - 30*s23^2)) + 
            5*p2q^3*s13*(6*s12^2*(s13 - s23) + s13*s23*(-5*s13 + 4*s23) + 
              s12*(6*s13^2 - 3*s13*s23 - 6*s23^2)) + p2q*p3q^2*s12*
             (30*s12^3 - s13*s23*(387*s13 + 307*s23) + s12^2*(-624*s13 + 
                389*s23) - s12*(654*s13^2 + 1006*s13*s23 + 357*s23^2))))*
         den[-1 + 2*ep])/(432*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]] + 
     (-1/54*(ep^2*p1q*(s12 + s13 + s23)*(p3q^2*s12*(10*s12 + s13) + 
           (p1q + p2q)*(9*s13 + 10*s23)*(-(p2q*s13) + p1q*s23) - 
           p3q*(p2q*s13*(s13 + 2*s23) + p2q*s12*(s13 + 10*s23) + 
             p1q*(9*s12*s13 + 20*s12*s23 + s13*s23))))/((p1q + p2q + p3q)*s13*
          (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*p1q*(s12 + s13 + s23)*(p2q^5*s13*(17*s12*s13 + 8*s13^2 + 
            16*s12*s23 + 14*s13*s23 + 6*s23^2) + 
          p2q^4*(p3q*s12^2*(-7*s13 + 20*s23) + p1q*s12*(17*s13^2 - 
              5*s13*s23 - 20*s23^2) + 2*p3q*s13*(13*s13^2 + 20*s13*s23 + 
              6*s23^2) + p3q*s12*(37*s13^2 + 56*s13*s23 + 10*s23^2) + 
            2*p1q*(4*s13^3 + s13^2*s23 - 8*s13*s23^2 - 5*s23^3)) - 
          p2q*p3q^2*(p3q^2*s12*(10*s12^2 + 8*s12*s13 + 16*s13^2 - 
              10*s12*s23 + 7*s13*s23 - 10*s23^2) + 2*p1q^2*s23*
             (6*s12*s13 + 15*s13^2 + 10*s12*s23 + 26*s13*s23 + 10*s23^2) + 
            p1q*p3q*(-17*s13^3 + s12^2*(8*s13 - 30*s23) - 6*s13^2*s23 + 
              23*s13*s23^2 + 10*s23^3 - 10*s12*s23*(s13 + s23))) - 
          p3q^3*(p3q^2*s12^2*(10*s12 + s13) + p1q^2*s23*(30*s12*s13 + 
              21*s13^2 + 20*s12*s23 + 31*s13*s23 + 10*s23^2) - 
            p1q*p3q*s12*(s13^2 + 12*s13*s23 + 10*s23^2 + 10*s12*(s13 + 
                3*s23))) + p2q^3*(-(p1q^2*s23*(21*s12*s13 + 12*s13^2 + 20*s12*
                s23 + 22*s13*s23 + 10*s23^2)) + p1q*p3q*(26*s13^3 + 
              10*s13^2*s23 - 40*s13*s23^2 - 20*s23^3 + s12^2*(s13 + 30*s23) + 
              s12*(36*s13^2 + 43*s13*s23 - 10*s23^2)) + 
            p3q^2*(-10*s12^3 - 5*s12^2*(7*s13 - 4*s23) + 2*s13*(13*s13^2 + 
                21*s13*s23 + 6*s23^2) + 2*s12*(5*s13^2 + 29*s13*s23 + 
                10*s23^2))) + p2q^2*p3q*(-2*p1q^2*s23*(6*s12*s13 + 15*s13^2 + 
              10*s12*s23 + 26*s13*s23 + 10*s23^2) + 2*p1q*p3q*
             (13*s13^3 + 7*s13^2*s23 - 19*s13*s23^2 - 10*s23^3 + 
              s12^2*(-4*s13 + 15*s23) + s12*(9*s13^2 + 32*s13*s23 + 
                5*s23^2)) + p3q^2*(-10*s12^3 + s12^2*(-26*s13 + 10*s23) + 
              s13*(17*s13^2 + 25*s13*s23 + 6*s23^2) + s12*(-8*s13^2 + 
                20*s13*s23 + 20*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (p1q*(s12 + s13 + s23)*(p3q^5*s12^2*(10*s12 + s13) + 
          2*p2q*p3q^4*s12*(15*s12^2 + 5*s12*s13 + 8*s13^2 + 4*s13*s23 - 
            5*s23^2) - p2q^5*s13*(17*s12*s13 + 8*s13^2 + 16*s12*s23 + 
            14*s13*s23 + 6*s23^2) + p2q^2*p3q^3*(30*s12^3 + 
            s12^2*(6*s13 - 20*s23) + s12*(22*s13^2 - 4*s13*s23 - 30*s23^2) - 
            s13*(17*s13^2 + 26*s13*s23 + 8*s23^2)) + 2*p1q^4*s23*
           (p2q*(21*s12*s13 + 12*s13^2 + 20*s12*s23 + 22*s13*s23 + 
              10*s23^2) + p3q*(30*s12*s13 + 21*s13^2 + 20*s12*s23 + 
              31*s13*s23 + 10*s23^2)) + p2q^3*p3q^2*(10*s12^3 + 
            s12^2*(13*s13 - 40*s23) + s12*(6*s13^2 - 23*s13*s23 - 30*s23^2) - 
            2*s13*(21*s13^2 + 34*s13*s23 + 12*s23^2)) + 
          p2q^4*p3q*(s12^2*(7*s13 - 20*s23) - s12*(35*s13^2 + 36*s13*s23 + 
              10*s23^2) - s13*(42*s13^2 + 65*s13*s23 + 22*s23^2)) - 
          p1q*(p3q^4*s12*(-20*s12^2 + 8*s12*s13 + s13^2 + 30*s12*s23 + 
              12*s13*s23 + 10*s23^2) + p2q^4*(24*s13^3 + 30*s13^2*s23 - 
              4*s13*s23^2 - 10*s23^3 + s12*(51*s13^2 + 27*s13*s23 - 
                20*s23^2)) + p2q^3*p3q*(110*s13^3 + 111*s13^2*s23 - 
              31*s13*s23^2 - 30*s23^3 + s12^2*(-13*s13 + 70*s23) + 
              s12*(88*s13^2 + 21*s13*s23 - 10*s23^2)) + p2q^2*p3q^2*
             (-20*s12^3 + 76*s13^3 + 150*s12^2*s23 + 69*s13^2*s23 - 
              40*s13*s23^2 - 30*s23^3 + s12*(-12*s13^2 + 9*s13*s23 + 
                50*s23^2)) + p2q*p3q^3*(-40*s12^3 + 17*s13^3 + 6*s13^2*s23 - 
              22*s13*s23^2 - 10*s23^3 + 10*s12^2*(3*s13 + 11*s23) + 
              s12*(-12*s13^2 + 27*s13*s23 + 50*s23^2))) + 
          2*p1q^3*(p3q^2*(-10*s12^2*(s13 + 3*s23) + s12*(-s13^2 + 
                18*s13*s23 + 10*s23^2) + s23*(21*s13^2 + 31*s13*s23 + 
                10*s23^2)) + p2q^2*(-8*s13^3 + 10*s13^2*s23 + 38*s13*s23^2 + 
              20*s23^3 + s12*(-17*s13^2 + 26*s13*s23 + 40*s23^2)) + 
            p2q*p3q*(-17*s13^3 + 40*s13^2*s23 + 87*s13*s23^2 + 30*s23^3 - 
              s12^2*(s13 + 30*s23) + s12*(-18*s13^2 + 71*s13*s23 + 
                50*s23^2))) + p1q^2*(-(p2q^3*(32*s13^3 + 20*s13^2*s23 - 42*
                s13*s23^2 - 30*s23^3 + s12*(68*s13^2 + s13*s23 - 
                 60*s23^2))) + p2q*p3q^2*(20*s12^3 - 34*s13^3 + 
              42*s13^2*s23 + 127*s13*s23^2 + 50*s23^3 - 2*s12^2*(3*s13 + 
                80*s23) + 4*s12*(3*s13^2 + 19*s13*s23 + 5*s23^2)) + 
            p3q^3*(20*s12^3 - 2*s12*s13*(s13 - 3*s23) - 6*s12^2*(3*s13 + 
                10*s23) + s23*(21*s13^2 + 31*s13*s23 + 10*s23^2)) + 
            p2q^2*p3q*(-102*s13^3 + 4*s12^2*(3*s13 - 25*s23) - 8*s13^2*s23 + 
              165*s13*s23^2 + 70*s23^3 + s12*(-90*s13^2 + 96*s13*s23 + 
                80*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s13*
         s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(p3q^2*s12*(s12 + s13) + 
          (p1q + p2q)*s23*(-(p2q*s13) + p1q*s23) - 
          p3q*(p1q*(2*s12 + s13)*s23 + p2q*s12*(s13 + s23) + 
            p2q*s13*(s13 + 2*s23))))/(6*(p1q + p2q + p3q)*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*(s12 + s13 + s23)*(-(p3q^4*s12^2) + p2q*p3q^3*s12*s13 + 
          p2q^4*s13*(s12 + 2*(s13 + s23)) - p2q^2*p3q^2*(s12^2 - 2*s13*s23 + 
            s12*(s13 + s23)) + p2q^3*p3q*(-s12^2 - s12*s13 + 
            s13*(s13 + 3*s23)) + p1q^2*(p2q*p3q*s23*(3*s13 + s23) + 
            p2q^2*(4*s12*s13 + 4*s13^2 + 3*s12*s23 + 6*s13*s23 + 2*s23^2) + 
            p3q^2*(4*s12*s13 + 4*s13^2 + 3*s12*s23 + 6*s13*s23 + 2*s23^2)) + 
          p1q*(-(p3q^3*s12*(3*s12 + 2*s13 + s23)) + 
            p2q^3*(5*s12*s13 + 6*s13^2 + 3*s12*s23 + 8*s13*s23 + 2*s23^2) + 
            p2q^2*p3q*(-3*s12^2 + s13^2 + 6*s13*s23 + s23^2 - 
              s12*(2*s13 + s23)) + p2q*p3q^2*(s12*(2*s13 + s23) + 
              2*(s13^2 + 3*s13*s23 + s23^2)))))/(6*p3q*(p1q + p2q + p3q)*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (p3q^4*s12^2*(s12 + s13 + s23) + p2q*p3q^3*s12*(s12 - 2*s13)*
          (s12 + s13 + s23) + p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23) + 
         p2q^3*p3q*(s12^2 + s12*s13 + s13^2)*(s12 + s13 + s23) - 
         p2q^4*s13*(s12^2 + 3*s12*(s13 + s23) + 2*(s13 + s23)^2) - 
         2*p1q^4*(2*(s13 + s23)^2*(2*s13 + s23) + s12^2*(4*s13 + 3*s23) + 
           s12*(8*s13^2 + 13*s13*s23 + 5*s23^2)) - p1q^2*(s12 + s13 + s23)*
          (p3q^2*(-8*s12^2 + 4*s13^2 + s12*s23 + 6*s13*s23 + 2*s23^2) + 
           p2q^2*(16*s12*s13 + 20*s13^2 + 9*s12*s23 + 26*s13*s23 + 6*s23^2) + 
           p2q*p3q*(-8*s12^2 + 12*s13^2 + 21*s13*s23 + 8*s23^2 + 
             8*s12*(s13 + s23))) + 2*p1q^3*(s12 + s13 + s23)*
          (-(p2q*(9*s12*s13 + 10*s13^2 + 6*s12*s23 + 14*s13*s23 + 4*s23^2)) + 
           p3q*(3*s12^2 - 2*s12*(s13 + s23) - 2*(2*s13^2 + 3*s13*s23 + s23^
                2))) - p1q*(s12 + s13 + s23)*
          (-(p3q^3*s12*(5*s12 + 2*s13 + s23)) + p2q*p3q^2*
            (-8*s12^2 + 2*s12*s13 + 2*s13^2 - s12*s23 + 5*s13*s23 + 
             2*s23^2) + p2q^2*p3q*(-5*s12^2 + 2*s12*s13 + 3*s13^2 + 
             3*s12*s23 + 9*s13*s23 + 4*s23^2) + p2q^3*(s12*(7*s13 + 3*s23) + 
             2*(5*s13^2 + 6*s13*s23 + s23^2))))/(6*p3q*(p1q + p2q + p3q)*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k]] + 
     ((ep^2*p1q*(s12 + s13 + s23)*(-(p2q^2*s13*(s12 + 10*s13)) + 
          p3q^2*s12*(9*s12 + 10*s23) - p1q^2*s23*(9*s12 + 10*s23) + 
          p1q*p3q*(9*s12^2 + s12*s23 - 10*s23^2) + 
          p1q*p2q*(20*s13*s23 + s12*(9*s13 + s23)) + 
          p2q*p3q*(s12^2 + 10*s13*s23 + s12*(s13 + 2*s23))))/
        (54*(p1q + p2q + p3q)*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep*p1q*(s12 + s13 + s23)*
         (-(p2q^5*s13^2*(s12 + 10*s13)) + p3q^5*s12*(8*s12^2 + 17*s12*s13 + 
            14*s12*s23 + 16*s13*s23 + 6*s23^2) - p2q^4*p3q*s13*
           (16*s12^2 + s12*(8*s13 + 7*s23) + 10*(s13^2 - s13*s23 - s23^2)) + 
          p2q^3*p3q^2*(17*s12^3 + s12^2*(-8*s13 + 25*s23) + 
            10*s13*(-s13^2 + s13*s23 + 2*s23^2) + 
            s12*(-26*s13^2 + 20*s13*s23 + 6*s23^2)) + 
          p2q*p3q^4*(26*s12^3 + 10*s13*s23*(2*s13 + s23) + 
            s12^2*(37*s13 + 40*s23) + s12*(-7*s13^2 + 56*s13*s23 + 
              12*s23^2)) + p2q^2*p3q^3*(26*s12^3 + 2*s12^2*(5*s13 + 21*s23) - 
            10*s13*(s13^2 - 2*s13*s23 - 2*s23^2) + 
            s12*(-35*s13^2 + 58*s13*s23 + 12*s23^2)) - 
          p1q^2*s23*(p3q^3*(12*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(21*s13 + 22*s23)) + 2*p2q^2*p3q*(15*s12^2 + 
              10*s23*(s13 + s23) + s12*(6*s13 + 26*s23)) + 
            2*p2q*p3q^2*(15*s12^2 + 10*s23*(s13 + s23) + s12*(6*s13 + 
                26*s23)) + p2q^3*(21*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(30*s13 + 31*s23))) + 
          p1q*(p2q^4*s13*(s12^2 + 10*s23*(3*s13 + s23) + 2*s12*(5*s13 + 
                6*s23)) + p3q^4*(8*s12^3 - 10*s23^2*(2*s13 + s23) + 
              s12^2*(17*s13 + 2*s23) - s12*s23*(5*s13 + 16*s23)) + 
            2*p2q^2*p3q^2*(13*s12^3 + s12^2*(9*s13 + 7*s23) + 
              s12*(-4*s13^2 + 32*s13*s23 - 19*s23^2) + 5*s23*(3*s13^2 + 
                s13*s23 - 2*s23^2)) + p2q^3*p3q*(17*s12^3 + 6*s12^2*s23 + 
              s12*(-8*s13^2 + 10*s13*s23 - 23*s23^2) + 10*s23*(3*s13^2 + 
                s13*s23 - s23^2)) + p2q*p3q^3*(26*s12^3 + 2*s12^2*(18*s13 + 
                5*s23) + s12*(s13^2 + 43*s13*s23 - 40*s23^2) - 
              10*s23*(-3*s13^2 + s13*s23 + 2*s23^2)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p1q*(s12 + s13 + s23)*(p2q^5*s13^2*(s12 + 10*s13) + 
          2*p2q^4*p3q*s13*(8*s12^2 + 5*s12*s13 + 15*s13^2 + 4*s12*s23 - 
            5*s23^2) - p3q^5*s12*(8*s12^2 + 17*s12*s13 + 14*s12*s23 + 
            16*s13*s23 + 6*s23^2) - p2q^3*p3q^2*(17*s12^3 + 
            s12^2*(-22*s13 + 26*s23) + 10*s13*(-3*s13^2 + 2*s13*s23 + 
              3*s23^2) + s12*(-6*s13^2 + 4*s13*s23 + 8*s23^2)) - 
          p2q*p3q^4*(42*s12^3 + 10*s13*s23*(2*s13 + s23) + 
            5*s12^2*(7*s13 + 13*s23) + s12*(-7*s13^2 + 36*s13*s23 + 
              22*s23^2)) - p2q^2*p3q^3*(42*s12^3 + s12^2*(-6*s13 + 68*s23) - 
            10*s13*(s13^2 - 4*s13*s23 - 3*s23^2) + 
            s12*(-13*s13^2 + 23*s13*s23 + 24*s23^2)) + 
          2*p1q^4*s23*(p3q*(12*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(21*s13 + 22*s23)) + p2q*(21*s12^2 + 10*s23*(2*s13 + s23) + 
              s12*(30*s13 + 31*s23))) + 2*p1q^3*
           (p3q^2*(-8*s12^3 + 20*s23^2*(2*s13 + s23) + s12^2*(-17*s13 + 
                10*s23) + 2*s12*s23*(13*s13 + 19*s23)) + 
            p2q^2*(-(s12^2*(s13 - 21*s23)) + 10*s23*(-3*s13^2 + s13*s23 + 
                s23^2) + s12*(-10*s13^2 + 18*s13*s23 + 31*s23^2)) + 
            p2q*p3q*(-17*s12^3 + s12^2*(-18*s13 + 40*s23) + 
              10*s23*(-3*s13^2 + 5*s13*s23 + 3*s23^2) + s12*(-s13^2 + 
                71*s13*s23 + 87*s23^2))) - 
          p1q*(p3q^4*(24*s12^3 + s12*(27*s13 - 4*s23)*s23 - 10*s23^2*(2*s13 + 
                s23) + s12^2*(51*s13 + 30*s23)) + p2q^4*s13*
             (s12^2 + 4*s12*(2*s13 + 3*s23) + 10*(-2*s13^2 + 3*s13*s23 + 
                s23^2)) + p2q*p3q^3*(110*s12^3 + s12^2*(88*s13 + 111*s23) + 
              s12*(-13*s13^2 + 21*s13*s23 - 31*s23^2) - 10*s23*(-7*s13^2 + 
                s13*s23 + 3*s23^2)) + p2q^2*p3q^2*(76*s12^3 + 
              s12*(9*s13 - 40*s23)*s23 + s12^2*(-12*s13 + 69*s23) + 
              10*(-2*s13^3 + 15*s13^2*s23 + 5*s13*s23^2 - 3*s23^3)) + 
            p2q^3*p3q*(17*s12^3 + 6*s12^2*(-2*s13 + s23) + s12*(30*s13^2 + 
                27*s13*s23 - 22*s23^2) - 10*(4*s13^3 - 11*s13^2*s23 - 
                5*s13*s23^2 + s23^3))) + 
          p1q^2*(-(p3q^3*(32*s12^3 + s12*(s13 - 42*s23)*s23 - 30*s23^2*
                (2*s13 + s23) + 4*s12^2*(17*s13 + 5*s23))) + 
            p2q*p3q^2*(-102*s12^3 - 2*s12^2*(45*s13 + 4*s23) + 
              10*s23*(-10*s13^2 + 8*s13*s23 + 7*s23^2) + 3*s12*(4*s13^2 + 
                32*s13*s23 + 55*s23^2)) + p2q^3*(s12^2*(-2*s13 + 21*s23) + 
              s12*(-18*s13^2 + 6*s13*s23 + 31*s23^2) + 10*(2*s13^3 - 
                6*s13^2*s23 + s23^3)) + p2q^2*p3q*(-34*s12^3 + 
              6*s12^2*(2*s13 + 7*s23) + s12*(-6*s13^2 + 76*s13*s23 + 
                127*s23^2) + 10*(2*s13^3 - 16*s13^2*s23 + 2*s13*s23^2 + 
                5*s23^3)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k]] + 
     (-1/6*(ep^2*p3q*(s12 + s13 + s23)*(-(p2q^2*s13*(s12 + s13)) + 
           p1q*p2q*(s12 + 2*s13)*s23 - (p1q + p3q)*s23*(-(p3q*s12) + 
             p1q*s23) + p2q*p3q*(s12^2 + s13*s23 + s12*(s13 + 2*s23))))/
         ((p1q + p2q + p3q)*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
           p3q*(s12 + s23))) - 
       (-(p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23)) + 
         p2q^3*p3q*(2*s12 - s13)*s13*(s12 + s13 + s23) - 
         p2q^4*s13^2*(s12 + s13 + s23) - p2q*p3q^3*(s12^2 + s12*s13 + s13^2)*
          (s12 + s13 + s23) + p3q^4*s12*(2*s12^2 + 3*s12*s13 + s13^2 + 
           4*s12*s23 + 3*s13*s23 + 2*s23^2) + p1q*(s12 + s13 + s23)*
          (-(p2q^3*s13*(2*s12 + 5*s13 + s23)) + p2q^2*p3q*
            (2*s12^2 + 2*s12*s13 - 8*s13^2 + 5*s12*s23 - s13*s23 + 2*s23^2) + 
           p3q^3*(10*s12^2 + 7*s12*s13 + 12*s12*s23 + 3*s13*s23 + 2*s23^2) + 
           p2q*p3q^2*(3*s12^2 + 2*s12*s13 - 5*s13^2 + 9*s12*s23 + 3*s13*s23 + 
             4*s23^2)) + p1q^2*(s12 + s13 + s23)*
          (p2q^2*(4*s12^2 - 8*s13^2 + 6*s12*s23 + s13*s23 + 2*s23^2) + 
           p3q^2*(20*s12^2 + 16*s12*s13 + 26*s12*s23 + 9*s13*s23 + 6*s23^2) + 
           p2q*p3q*(12*s12^2 + 8*s12*s13 - 8*s13^2 + 21*s12*s23 + 8*s13*s23 + 
             8*s23^2)) + 2*p1q^4*(4*s12^3 + 2*s12^2*(4*s13 + 5*s23) + 
           s23*(3*s13^2 + 5*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 13*s13*s23 + 
             8*s23^2)) + 2*p1q^3*(s12 + s13 + s23)*
          (p3q*(10*s12^2 + 9*s12*s13 + 14*s12*s23 + 6*s13*s23 + 4*s23^2) + 
           p2q*(4*s12^2 - 3*s13^2 + 2*s13*s23 + 2*s23^2 + 
             2*s12*(s13 + 3*s23))))/(6*p2q*(p1q + p2q + p3q)*s12*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(s12 + s13 + s23)*(p2q^3*p3q*s12*s13 - p2q^4*s13^2 + 
          p3q^4*s12*(2*s12 + s13 + 2*s23) + p2q*p3q^3*(s12^2 - s12*s13 - 
            s13^2 + 3*s12*s23) - p2q^2*p3q^2*(s12*(s13 - 2*s23) + 
            s13*(s13 + s23)) + p1q^2*(p2q*p3q*s23*(3*s12 + s23) + 
            p2q^2*(4*s12^2 + 4*s12*s13 + 6*s12*s23 + 3*s13*s23 + 2*s23^2) + 
            p3q^2*(4*s12^2 + 4*s12*s13 + 6*s12*s23 + 3*s13*s23 + 2*s23^2)) + 
          p1q*(-(p2q^3*s13*(2*s12 + 3*s13 + s23)) + p2q*p3q^2*
             (s12^2 - 2*s12*s13 - 3*s13^2 + 6*s12*s23 - s13*s23 + s23^2) + 
            p3q^3*(6*s12^2 + 5*s12*s13 + 8*s12*s23 + 3*s13*s23 + 2*s23^2) + 
            p2q^2*p3q*(2*s12^2 + s23*(s13 + 2*s23) + 2*s12*(s13 + 3*s23)))))/
        (6*p2q*(p1q + p2q + p3q)*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k]] + 
     ((-3*ep*(s12 + s13 + s23)*(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + 
            p3q^3*s23^2 + 2*p2q*p3q^2*(2*s12*s13 + s23^2) + 
            2*p2q^2*p3q*(-2*s13^2 - 2*s13*s23 + s23^2)) - 
          p1q*(p2q + p3q)*(p2q^4*(s12 + 2*s13)*s23^2 + p3q^4*s23^2*
             (s12 + 2*s13 + 3*s23) + 2*p2q^2*p3q^2*(4*s12*s13^2 - 
              2*s13^2*s23 + 3*s12*s23^2 + s13*s23^2 + 3*s23^3) + 
            p2q^3*p3q*(-4*s13^3 + 6*s12*s23^2 + 9*s13*s23^2 + 4*s23^3) + 
            p2q*p3q^3*(-4*s12^2*s13 + 4*s12*s23*(s13 + s23) + 
              s23^2*(3*s13 + 5*s23))) + (p2q + p3q)^2*
           (p2q^4*s13*(s12 + s13)*s23 + p3q^4*s23*(2*s12^2 + 4*s13*(s13 + 
                s23) + 3*s12*(2*s13 + s23)) + p2q^3*p3q*(4*s13^3 + 
              8*s13^2*s23 + s12*s23*(3*s12 + 2*s23) + s13*s23*(7*s12 + 
                4*s23)) + p2q*p3q^3*(4*s12^2*(s13 + s23) + 2*s12*s23*(5*s13 + 
                2*s23) + s13*s23*(6*s13 + 7*s23)) + 4*p2q^2*p3q^2*
             (s12^2*s23 + 2*s13*s23*(s13 + s23) + s12*(-2*s13^2 + 2*s13*s23 + 
                s23^2)))))/(2*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (3*(2*p1q^4*(p2q^2 - p3q^2)*s23^3*(s12 + s13 + s23) - 
          2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*
           (p2q^2*(s12 + 2*s13 - s23) + p2q*p3q*(4*s12 - 2*s13 + s23) + 
            p3q^2*(s12 + 2*s13 + 4*s23)) + p1q^2*s23*
           (p2q^3*p3q*(6*s12^3 + 4*s12^2*(3*s13 - s23) - (s13 + s23)*
               (2*s13 + s23)^2 + s12*(2*s13^2 - 8*s13*s23 - 11*s23^2)) + 
            2*p2q^2*p3q^2*(8*s12^3 + 3*s13^3 + 11*s13^2*s23 + 3*s13*s23^2 - 
              5*s23^3 + s12^2*(19*s13 + s23) + 2*s12*(7*s13^2 + 6*s13*s23 - 
                6*s23^2)) + p3q^4*(4*s12^3 + 8*s13^3 + 12*s13^2*s23 - 
              3*s13*s23^2 - 7*s23^3 + 8*s12^2*(2*s13 + s23) + 
              s12*(20*s13^2 + 20*s13*s23 - 3*s23^2)) + 
            p2q^4*(2*s13^3 + 2*s12^2*(s13 - s23) - 2*s13^2*s23 - 
              3*s13*s23^2 + s23^3 + s12*(4*s13^2 - 4*s13*s23 - s23^2)) + 
            p2q*p3q^3*(14*s12^3 + 12*s12^2*(3*s13 + s23) + s12*(34*s13^2 + 
                32*s13*s23 - 17*s23^2) + 3*(4*s13^3 + 8*s13^2*s23 - 
                s13*s23^2 - 5*s23^3))) + p1q*(p2q + p3q)*
           (-(p2q^4*s23*(-2*s13^3 + 2*s13*s23^2 + s12^2*(-2*s13 + s23) + s12*
                (-4*s13^2 + s13*s23 + s23^2))) + p3q^4*s23*
             (4*s12^3 + 8*s13^3 + 14*s13^2*s23 + 3*s13*s23^2 - 3*s23^3 + 
              s12^2*(16*s13 + 9*s23) + s12*(20*s13^2 + 23*s13*s23 + 
                2*s23^2)) + p2q*p3q^3*(4*s12^3*(s13 + 4*s23) - 
              3*s12*s23*(-12*s13^2 - 13*s13*s23 + s23^2) + 4*s12^2*(s13^2 + 
                11*s13*s23 + 5*s23^2) + s23*(12*s13^3 + 23*s13^2*s23 + 
                4*s13*s23^2 - 7*s23^3)) + p2q^3*p3q*(4*s13^4 + 6*s12^3*s23 + 
              2*s13^3*s23 - 5*s13^2*s23^2 - 5*s13*s23^3 - 2*s23^4 + 
              2*s12^2*s23*(5*s13 + 2*s23) + s12*(4*s13^3 + 2*s13^2*s23 - 
                s13*s23^2 - 4*s23^3)) + 2*p2q^2*p3q^2*(9*s12^3*s23 + 
              s12^2*(-4*s13^2 + 18*s13*s23 + 9*s23^2) + s23*(2*s13^3 + 
                7*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s12*(-4*s13^3 + 
                7*s13^2*s23 + 14*s13*s23^2 - 3*s23^3))) + 
          (p2q + p3q)^2*(p2q^4*s13*(s12 + s13)*s23*(s12 + s13 + s23) + 
            p3q^4*s23*(2*s12^3 + 4*s13*(s13 + s23)^2 + s12^2*(8*s13 + 
                5*s23) + s12*(10*s13^2 + 13*s13*s23 + 3*s23^2)) + 
            p2q*p3q^3*(4*s12^3*(s13 + 2*s23) + s12*s23*(20*s13^2 + 
                27*s13*s23 + 6*s23^2) + 2*s12^2*(2*s13^2 + 13*s13*s23 + 
                7*s23^2) + s13*s23*(6*s13^2 + 13*s13*s23 + 7*s23^2)) + 
            p2q^3*p3q*(3*s12^3*s23 + s12^2*s23*(6*s13 + 5*s23) + 
              2*s13*(2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
              s12*(4*s13^3 + 7*s13^2*s23 + 7*s13*s23^2 + 2*s23^3)) + 
            2*p2q^2*p3q^2*(4*s12^3*s23 + s13*s23*(2*s13^2 + 5*s13*s23 + 
                3*s23^2) + s12^2*(-4*s13^2 + 8*s13*s23 + 7*s23^2) + 
              s12*(-4*s13^3 + 2*s13^2*s23 + 10*s13*s23^2 + 3*s23^3)))))/
        (2*p3q*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        Eik[k]] + ((-3*ep*(s12 + s13 + s23)*
         (-(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + p3q^3*s23^2 + 
             2*p2q^2*p3q*(2*s12*s13 + s23^2) + 2*p2q*p3q^2*(-2*s12^2 - 2*s12*
                s23 + s23^2))) - p1q*(p2q + p3q)*(p3q^4*(2*s12 + s13)*s23^2 + 
            p2q^4*s23^2*(2*s12 + s13 + 3*s23) + p2q*p3q^3*(-4*s12^3 + 
              9*s12*s23^2 + 6*s13*s23^2 + 4*s23^3) + 2*p2q^2*p3q^2*
             (s12^2*(4*s13 - 2*s23) + s12*s23^2 + 3*s23^2*(s13 + s23)) + 
            p2q^3*p3q*(s23^2*(4*s13 + 5*s23) + s12*(-4*s13^2 + 4*s13*s23 + 
                3*s23^2))) + (p2q + p3q)^2*(p3q^4*s12*(s12 + s13)*s23 + 
            p2q^4*s23*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 4*s12*s23 + 
              3*s13*s23) + 4*p2q^2*p3q^2*(-2*s12^2*(s13 - s23) + 
              2*s12*s23*(s13 + s23) + s13*s23*(s13 + s23)) + 
            p2q*p3q^3*(4*s12^3 + 8*s12^2*s23 + s13*s23*(3*s13 + 2*s23) + 
              s12*s23*(7*s13 + 4*s23)) + p2q^3*p3q*(6*s12^2*s23 + 
              4*s13*s23*(s13 + s23) + s12*(4*s13^2 + 10*s13*s23 + 
                7*s23^2)))))/(2*p2q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (3*(-2*p1q^4*(p2q^2 - p3q^2)*s23^3*(s12 + s13 + s23) - 
          2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*
           (p3q^2*(2*s12 + s13 - s23) + p2q*p3q*(-2*s12 + 4*s13 + s23) + 
            p2q^2*(2*s12 + s13 + 4*s23)) + p1q^2*s23*
           (p2q^4*(8*s12^3 + 4*s13^3 + 8*s13^2*s23 - 3*s13*s23^2 - 7*s23^3 + 
              4*s12^2*(5*s13 + 3*s23) + s12*(16*s13^2 + 20*s13*s23 - 
                3*s23^2)) + p2q^3*p3q*(12*s12^3 + 14*s13^3 + 12*s13^2*s23 - 
              17*s13*s23^2 - 15*s23^3 + s12^2*(34*s13 + 24*s23) + 
              s12*(36*s13^2 + 32*s13*s23 - 3*s23^2)) + 
            p3q^4*(2*s12^3 + s12^2*(4*s13 - 2*s23) + s12*(2*s13^2 - 
                4*s13*s23 - 3*s23^2) + s23*(-2*s13^2 - s13*s23 + s23^2)) + 
            2*p2q^2*p3q^2*(3*s12^3 + 8*s13^3 + s13^2*s23 - 12*s13*s23^2 - 
              5*s23^3 + s12^2*(14*s13 + 11*s23) + s12*(19*s13^2 + 
                12*s13*s23 + 3*s23^2)) - p2q*p3q^3*(4*s12^3 - 6*s13^3 - 
              2*s12^2*(s13 - 4*s23) + 4*s13^2*s23 + 11*s13*s23^2 + s23^3 + 
              s12*(-12*s13^2 + 8*s13*s23 + 5*s23^2))) + p1q*(p2q + p3q)*
           (-(p3q^4*s23*(-2*s12^3 - 4*s12^2*s13 + s13*s23*(s13 + s23) + s12*
                (-2*s13^2 + s13*s23 + 2*s23^2))) + p2q^4*s23*
             (8*s12^3 + 4*s13^3 + 9*s13^2*s23 + 2*s13*s23^2 - 3*s23^3 + 
              2*s12^2*(10*s13 + 7*s23) + s12*(16*s13^2 + 23*s13*s23 + 
                3*s23^2)) + 2*p2q^2*p3q^2*(s12^3*(-4*s13 + 2*s23) + 
              2*s12*s23*(9*s13^2 + 7*s13*s23 + s23^2) + s12^2*(-4*s13^2 + 
                7*s13*s23 + 7*s23^2) - 3*s23*(-3*s13^3 - 3*s13^2*s23 + 
                s13*s23^2 + s23^3)) + p2q*p3q^3*(4*s12^4 + s12^2*(2*s13 - 
                5*s23)*s23 + 2*s12^3*(2*s13 + s23) - s12*s23*(-10*s13^2 + 
                s13*s23 + 5*s23^2) - 2*s23*(-3*s13^3 - 2*s13^2*s23 + 
                2*s13*s23^2 + s23^3)) + p2q^3*p3q*(12*s12^3*s23 + 
              s12^2*(4*s13^2 + 36*s13*s23 + 23*s23^2) + s23*(16*s13^3 + 
                20*s13^2*s23 - 3*s13*s23^2 - 7*s23^3) + s12*(4*s13^3 + 
                44*s13^2*s23 + 39*s13*s23^2 + 4*s23^3))) + 
          (p2q + p3q)^2*(p3q^4*s12*(s12 + s13)*s23*(s12 + s13 + s23) + 
            p2q*p3q^3*(4*s12^4 + 4*s12^3*(s13 + 2*s23) + s12^2*s23*(7*s13 + 
                6*s23) + s13*s23*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 
              s12*s23*(6*s13^2 + 7*s13*s23 + 2*s23^2)) + 
            p2q^4*s23*(4*s12^3 + 2*s12^2*(5*s13 + 4*s23) + s13*(2*s13^2 + 
                5*s13*s23 + 3*s23^2) + s12*(8*s13^2 + 13*s13*s23 + 
                4*s23^2)) + 2*p2q^2*p3q^2*(s12^3*(-4*s13 + 2*s23) + 
              s13*s23*(4*s13^2 + 7*s13*s23 + 3*s23^2) + s12*s23*(8*s13^2 + 
                10*s13*s23 + 3*s23^2) + s12^2*(-4*s13^2 + 2*s13*s23 + 
                5*s23^2)) + p2q^3*p3q*(6*s12^3*s23 + 2*s13*s23*(4*s13^2 + 
                7*s13*s23 + 3*s23^2) + s12^2*(4*s13^2 + 20*s13*s23 + 
                13*s23^2) + s12*(4*s13^3 + 26*s13^2*s23 + 27*s13*s23^2 + 
                7*s23^3)))))/(2*p2q*(p2q + p3q)^2*(p1q + p2q + p3q)*s12*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k]] + 
     (-1/54*(ep^2*p1q*(s12 + s13 + s23)*(p3q^3*s12*(17*s12^3 - 
             s13*(s13 - 3*s23)*s23 + s12^2*(-56*s13 + 37*s23) - 
             s12*(s13^2 + 54*s13*s23 - 20*s23^2)) + p2q^3*s13*
            (-(s12^2*(s13 + s23)) + s12*(-56*s13^2 - 54*s13*s23 + 3*s23^2) + 
             s13*(17*s13^2 + 37*s13*s23 + 20*s23^2)) + 
           p1q^3*(s12^2*(72*s13^2 + 90*s13*s23 + 17*s23^2) + 
             s23^2*(17*s13^2 + 37*s13*s23 + 20*s23^2) + 
             s12*s23*(90*s13^2 + 128*s13*s23 + 37*s23^2)) - 
           p2q*p3q^2*(s12^4 + 2*s12^3*(45*s13 + 8*s23) + 
             s13*s23*(-s13^2 + s13*s23 + 2*s23^2) + s12^2*(-129*s13^2 + 37*
                s13*s23 + 35*s23^2) - s12*(2*s13^3 + 70*s13^2*s23 + 57*s13*
                s23^2 - 20*s23^3)) + p2q^2*p3q*(s12^3*(2*s13 + s23) + 
             s12^2*(129*s13^2 + 70*s13*s23 - s23^2) - 
             s12*(90*s13^3 + 37*s13^2*s23 - 57*s13*s23^2 + 2*s23^3) - 
             s13*(s13^3 + 16*s13^2*s23 + 35*s13*s23^2 + 20*s23^3)) + 
           p1q*(p3q^2*(17*s12^4 - 3*s13*s23^2*(s13 + s23) + s12^3*
                (-146*s13 + 3*s23) + s12^2*(53*s13^2 - 126*s13*s23 - 
                 54*s23^2) + s12*s23*(51*s13^2 + 20*s13*s23 - 40*s23^2)) + 
             p2q^2*(s12^2*(53*s13^2 + 51*s13*s23 - 3*s23^2) + s13*
                (17*s13^3 + 3*s13^2*s23 - 54*s13*s23^2 - 40*s23^3) - s12*
                (146*s13^3 + 126*s13^2*s23 - 20*s13*s23^2 + 3*s23^3)) + 
             p2q*p3q*(-(s12^3*(70*s13 + 13*s23)) + s12^2*(292*s13^2 + 
                 165*s13*s23 - 18*s23^2) + s12*(-70*s13^3 + 165*s13^2*s23 + 
                 262*s13*s23^2 + 15*s23^3) + s23*(-13*s13^3 - 18*s13^2*s23 + 
                 15*s13*s23^2 + 20*s23^3))) + 
           p1q^2*(p3q*(-2*s12^3*(45*s13 + 17*s23) + 3*s12^2*(42*s13^2 + 
                 6*s13*s23 - 19*s23^2) + s12*s23*(142*s13^2 + 145*s13*s23 - 
                 3*s23^2) + 2*s23^2*(7*s13^2 + 17*s13*s23 + 10*s23^2)) + 
             p2q*(2*s12^2*(63*s13^2 + 71*s13*s23 + 7*s23^2) + s23*
                (-34*s13^3 - 57*s13^2*s23 - 3*s13*s23^2 + 20*s23^3) + s12*
                (-90*s13^3 + 18*s13^2*s23 + 145*s13*s23^2 + 34*s23^3)))))/
         ((p1q + p2q + p3q)*s12*s13*(-(p3q^2*s12*(s12 + s23)) - 
           p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
           p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
           p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
            (2*s13 + s23))) + (p1q*(s12 + s13 + s23)*
         (2*p1q^6*s23^3*(s12 + s13 + s23)*(p3q*(s12^2*(-9*s13 + s23) + 
              10*s13*s23*(s13 + s23) + s12*(9*s13^2 + s23^2)) + 
            p2q*(s13*s23*(s13 + s23) + s12^2*(9*s13 + 10*s23) + 
              s12*(-9*s13^2 + 10*s23^2))) - 2*p1q^5*s23^2*(s12 + s13 + s23)*
           (p2q^2*(s12^3*(9*s13 + 10*s23) + s12^2*(18*s13^2 + 11*s13*s23 - 
                10*s23^2) + s13*s23*(2*s13^2 - s13*s23 - 3*s23^2) + 
              s12*(-9*s13^3 + 55*s13^2*s23 + 49*s13*s23^2 - 20*s23^3)) + 
            2*p2q*p3q*(3*s12^3*(3*s13 + 5*s23) + s13*s23*(15*s13^2 - 
                s13*s23 - 16*s23^2) - s12^2*(36*s13^2 + 21*s13*s23 + s23^2) + 
              s12*(9*s13^3 - 21*s13^2*s23 - 14*s13*s23^2 - 16*s23^3)) + 
            p3q^2*(s12^3*(-9*s13 + 2*s23) + 10*s13*s23*(s13^2 - s13*s23 - 
                2*s23^2) + s12^2*(18*s13^2 + 55*s13*s23 - s23^2) + 
              s12*(9*s13^3 + 11*s13^2*s23 + 49*s13*s23^2 - 3*s23^3))) - 
          (p2q + p3q)*(p2q^6*s13^2*s23*(s12*(9*s13 - 10*s23)*(s13 + s23)^2 - 
              s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 10*s23) + 
              s12^2*s13*(18*s13 + 19*s23)) + p3q^6*s12^2*s23*
             (s12^3*(9*s13 - s23) + 10*s13*s23*(s13^2 - s23^2) + 
              2*s12^2*(9*s13^2 + 4*s13*s23 - s23^2) + s12*(9*s13^3 + 
                19*s13^2*s23 - 11*s13*s23^2 - s23^3)) + p2q*p3q^5*s12*
             (36*s12^5*(2*s13 + s23) + 3*s12^4*(24*s13^2 + 45*s13*s23 + 
                31*s23^2) + 2*s12^3*s23*(63*s13^2 + 61*s13*s23 + 43*s23^2) + 
              5*s12^2*s23*(-9*s13^3 + 23*s13^2*s23 + 18*s13*s23^2 + 
                8*s23^3) + s12*s23^2*(-24*s13^3 + 68*s13^2*s23 + 
                50*s13*s23^2 + 11*s23^3) + s13*s23^2*(-2*s13^3 + s13^2*s23 + 
                19*s13*s23^2 + 20*s23^3)) + p2q^3*p3q^3*(18*s12^6*s23 + 
              s12^5*s23*(-81*s13 + 23*s23) + s12^2*s13*s23*(540*s13^3 + 
                539*s13^2*s23 + 86*s13*s23^2 - 41*s23^3) + s12*s13^2*s23*(
                -81*s13^3 + 70*s13^2*s23 + 125*s13*s23^2 - 41*s23^3) + 
              s13^3*s23*(18*s13^3 + 23*s13^2*s23 - 17*s13*s23^2 - 22*s23^3) + 
              s12^4*(432*s13^3 + 540*s13^2*s23 + 70*s13*s23^2 - 17*s23^3) + 
              s12^3*(432*s13^4 + 846*s13^3*s23 + 539*s13^2*s23^2 + 
                125*s13*s23^3 - 22*s23^4)) + p2q^2*p3q^4*(36*s12^6*s23 - 
              s13^3*s23^2*(8*s13^2 + 19*s13*s23 + 11*s23^2) + 
              s12^5*(-288*s13^2 - 252*s13*s23 + 62*s23^2) - 
              s12^4*(288*s13^3 + 558*s13^2*s23 + 331*s13*s23^2 - 9*s23^3) - 
              s12^3*s23*(459*s13^3 + 422*s13^2*s23 + 111*s13*s23^2 + 
                15*s23^3) - s12*s13*s23*(27*s13^4 + 18*s13^3*s23 + 
                58*s13^2*s23^2 + 69*s13*s23^3 - 11*s23^4) + s12^2*s23*(
                72*s13^4 - 255*s13^3*s23 - 204*s13^2*s23^2 - 28*s13*s23^3 + 
                2*s23^4)) - p2q^4*p3q^2*(s12^5*s23*(27*s13 + 8*s23) + 
              s12^4*s23*(-72*s13^2 + 18*s13*s23 + 19*s23^2) + 
              s12*s13*s23*(252*s13^4 + 331*s13^3*s23 + 111*s13^2*s23^2 + 
                28*s13*s23^3 - 11*s23^4) - s13^2*s23*(36*s13^4 + 
                62*s13^3*s23 + 9*s13^2*s23^2 - 15*s13*s23^3 + 2*s23^4) + 
              s12^3*(288*s13^4 + 459*s13^3*s23 + 255*s13^2*s23^2 + 
                58*s13*s23^3 + 11*s23^4) + s12^2*s13*(288*s13^4 + 
                558*s13^3*s23 + 422*s13^2*s23^2 + 204*s13*s23^3 + 
                69*s23^4)) + p2q^5*p3q*s13*(-2*s12^4*s23^2 + 
              s12^3*s23*(-45*s13^2 - 24*s13*s23 + s23^2) + 
              s13*s23*(36*s13^4 + 93*s13^3*s23 + 86*s13^2*s23^2 + 
                40*s13*s23^3 + 11*s23^4) + s12^2*(72*s13^4 + 126*s13^3*s23 + 
                115*s13^2*s23^2 + 68*s13*s23^3 + 19*s23^4) + s12*(72*s13^5 + 
                135*s13^4*s23 + 122*s13^3*s23^2 + 90*s13^2*s23^3 + 
                50*s13*s23^4 + 20*s23^5))) + 
          p1q^3*(p2q^4*s23*(s12^4*(36*s13^2 + 13*s13*s23 - 30*s23^2) + 
              2*s13*s23*(s13 + s23)^2*(3*s13^2 - 7*s13*s23 + 2*s23^2) + 
              s12^3*(54*s13^3 + 87*s13^2*s23 - 15*s13*s23^2 - 50*s23^3) + 
              s12^2*s23*(267*s13^3 + 96*s13^2*s23 - 205*s13*s23^2 - 
                10*s23^3) - s12*(s13 + s23)^2*(18*s13^3 - 235*s13^2*s23 + 
                193*s13*s23^2 - 10*s23^3)) + p3q^4*s23*
             (s12^4*(199*s13 - 2*s23)*s23 + 6*s12^5*(-3*s13 + s23) - 
              10*s13*(3*s13 - s23)*s23^2*(s13 + s23)^2 + s12^3*(54*s13^3 + 
                267*s13^2*s23 + 259*s13*s23^2 - 18*s23^3) + 
              3*s12^2*(12*s13^4 + 29*s13^3*s23 + 32*s13^2*s23^2 - 
                47*s13*s23^3 - 2*s23^4) + s12*s23*(13*s13^4 - 15*s13^3*s23 - 
                205*s13^2*s23^2 - 173*s13*s23^3 + 4*s23^4)) - 
            p2q*p3q^3*(36*s12^6*s23 - 6*s12^5*(12*s13^2 + 57*s13*s23 + 
                23*s23^2) + s12^3*s23*(-54*s13^3 + 20*s13^2*s23 + 
                328*s13*s23^2 + 25*s23^3) - 2*s12^4*(36*s13^3 + 
                81*s13^2*s23 + 219*s13*s23^2 + 121*s23^3) + s13*s23^2*(
                -72*s13^4 + 22*s13^3*s23 + 217*s13^2*s23^2 + 71*s13*s23^3 - 
                52*s23^4) + s12^2*s23*(162*s13^4 + 56*s13^3*s23 - 
                30*s13^2*s23^2 + 783*s13*s23^3 + 32*s23^4) + 
              s12*s23*(-72*s13^5 + 60*s13^4*s23 + 112*s13^3*s23^2 + 
                345*s13^2*s23^3 + 311*s13*s23^4 - 61*s23^5)) - 
            p2q^2*p3q^2*(36*s12^6*s23 - 24*s12^5*s23*(12*s13 + 7*s23) + 
              2*s12^4*(72*s13^3 + 234*s13^2*s23 + 16*s13*s23^2 - 99*s23^3) + 
              s12^2*s23*(468*s13^4 + 412*s13^3*s23 - 768*s13^2*s23^2 + 
                224*s13*s23^3 + 33*s23^4) + 4*s12^3*(36*s13^4 + 144*s13^3*
                 s23 + 103*s13^2*s23^2 + 99*s13*s23^3 + 39*s23^4) + 
              s12*s23*(-288*s13^5 + 32*s13^4*s23 + 396*s13^3*s23^2 + 
                224*s13^2*s23^3 + 42*s13*s23^4 - 117*s23^5) + 
              3*s13*s23*(12*s13^5 - 56*s13^4*s23 - 66*s13^3*s23^2 + 
                52*s13^2*s23^3 + 11*s13*s23^4 - 39*s23^5)) + 
            p2q^3*p3q*(72*s12^5*s23*(s13 + s23) - 2*s12^4*s23*(81*s13^2 + 
                30*s13*s23 + 11*s23^2) + s12^3*(72*s13^4 + 54*s13^3*s23 - 
                56*s13^2*s23^2 - 112*s13*s23^3 - 217*s23^4) + 
              s12^2*(72*s13^5 + 162*s13^4*s23 - 20*s13^3*s23^2 + 
                30*s13^2*s23^3 - 345*s13*s23^4 - 71*s23^5) + 
              s12*s23*(342*s13^5 + 438*s13^4*s23 - 328*s13^3*s23^2 - 
                783*s13^2*s23^3 - 311*s13*s23^4 + 52*s23^5) + 
              s13*s23*(-36*s13^5 + 138*s13^4*s23 + 242*s13^3*s23^2 - 
                25*s13^2*s23^3 - 32*s13*s23^4 + 61*s23^5))) + 
          p1q*(p2q^6*s13*s23*(2*s13*(2*s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + 10*s23) - s12*(s13 + s23)^2*(27*s13^2 - 
                77*s13*s23 + 10*s23^2) + s12^3*(-9*s13^2 + 17*s13*s23 + 
                30*s23^2) + s12^2*(-45*s13^3 + 26*s13^2*s23 + 87*s13*s23^2 + 
                10*s23^3)) + p3q^6*s12*s23*(s12^4*(-27*s13 + 4*s23) + 
              s12^3*(-45*s13^2 + 23*s13*s23 + 6*s23^2) + s12^2*s13*(
                -9*s13^2 + 26*s13*s23 + 117*s23^2) + 10*s13*s23*(s13^3 + 
                3*s13^2*s23 + s13*s23^2 - s23^3) + s12*(9*s13^4 + 
                17*s13^3*s23 + 87*s13^2*s23^2 + 57*s13*s23^3 - 2*s23^4)) + 
            p2q^2*p3q^4*(-36*s12^6*(2*s13 + 5*s23) + s12^5*(504*s13^2 + 
                720*s13*s23 - 250*s23^2) + s12^4*(360*s13^3 + 765*s13^2*s23 + 
                897*s13*s23^2 + 16*s23^3) + s12^2*s23*(-675*s13^4 + 
                41*s13^3*s23 + 514*s13^2*s23^2 - 104*s13*s23^3 - 41*s23^4) + 
              s12^3*(-216*s13^4 + 477*s13^3*s23 + 426*s13^2*s23^2 + 
                138*s13*s23^3 + 34*s23^4) - s13^2*s23*(18*s13^4 - 
                30*s13^3*s23 - 91*s13^2*s23^2 + s13*s23^3 + 44*s23^4) + 
              s12*s23*(135*s13^5 - 144*s13^4*s23 - 35*s13^3*s23^2 + 
                114*s13^2*s23^3 - 162*s13*s23^4 + 11*s23^5)) + 
            p2q*p3q^5*(-36*s12^6*(4*s13 + 3*s23) - 9*s12^5*(8*s13^2 + 
                9*s13*s23 + 22*s23^2) + s12^4*(72*s13^3 + 187*s13*s23^2 - 
                78*s23^3) + s13^2*s23^2*(8*s13^3 + 8*s13^2*s23 - 
                11*s13*s23^2 - 11*s23^3) + s12^3*s23*(288*s13^3 + 
                107*s13^2*s23 + 177*s13*s23^2 + 5*s23^3) + s12^2*s23*(
                -36*s13^4 + 171*s13^3*s23 + 132*s13^2*s23^2 - 34*s13*s23^3 + 
                4*s23^4) + s12*s23*(9*s13^5 - 11*s13^4*s23 + 57*s13^3*s23^2 - 
                12*s13^2*s23^3 - 91*s13*s23^4 + 11*s23^5)) + 
            p2q^4*p3q^2*(-18*s12^6*s23 + 15*s12^5*s23*(9*s13 + 2*s23) - 
              s12^4*(216*s13^3 + 675*s13^2*s23 + 144*s13*s23^2 - 91*s23^3) + 
              s12^3*(360*s13^4 + 477*s13^3*s23 + 41*s13^2*s23^2 - 
                35*s13*s23^3 - s23^4) + s12*s13*(-72*s13^5 + 720*s13^4*s23 + 
                897*s13^3*s23^2 + 138*s13^2*s23^3 - 104*s13*s23^4 - 
                162*s23^5) + s12^2*(504*s13^5 + 765*s13^4*s23 + 426*s13^3*
                 s23^2 + 514*s13^2*s23^3 + 114*s13*s23^4 - 44*s23^5) + 
              s13*s23*(-180*s13^5 - 250*s13^4*s23 + 16*s13^3*s23^2 + 
                34*s13^2*s23^3 - 41*s13*s23^4 + 11*s23^5)) - 
            p2q^3*p3q^3*(90*s12^6*s23 + s12^5*(-216*s13^2 - 612*s13*s23 + 
                17*s23^2) + s12^4*(648*s13^3 + 1062*s13^2*s23 - 
                151*s13*s23^2 - 210*s23^3) + 2*s12^3*(324*s13^4 + 
                684*s13^3*s23 + 595*s13^2*s23^2 + 190*s13*s23^3 - 33*s23^4) + 
              s13^2*s23*(90*s13^4 + 17*s13^3*s23 - 210*s13^2*s23^2 - 
                66*s13*s23^3 + 71*s23^4) + s12*s13*s23*(-612*s13^4 - 
                151*s13^3*s23 + 380*s13^2*s23^2 + 84*s13*s23^3 + 216*s23^4) + 
              s12^2*(-216*s13^5 + 1062*s13^4*s23 + 1190*s13^3*s23^2 - 
                92*s13^2*s23^3 + 84*s13*s23^4 + 71*s23^5)) + 
            p2q^5*p3q*(s12^5*s23*(9*s13 + 8*s23) + s12^4*s23*(-36*s13^2 - 
                11*s13*s23 + 8*s23^2) + s12^3*(72*s13^4 + 288*s13^3*s23 + 
                171*s13^2*s23^2 + 57*s13*s23^3 - 11*s23^4) + 
              s12^2*(-72*s13^5 + 107*s13^3*s23^2 + 132*s13^2*s23^3 - 
                12*s13*s23^4 - 11*s23^5) + s13*s23*(-108*s13^5 - 
                198*s13^4*s23 - 78*s13^3*s23^2 + 5*s13^2*s23^3 + 
                4*s13*s23^4 + 11*s23^5) - s12*s13*(144*s13^5 + 81*s13^4*s23 - 
                187*s13^3*s23^2 - 177*s13^2*s23^3 + 34*s13*s23^4 + 
                91*s23^5))) + p1q^4*s23*(p3q^3*(2*s12^5*s23 - 
              10*s13*(4*s13 - 3*s23)*s23^2*(s13 + s23)^2 + 2*s12^4*(9*s13^2 + 
                65*s13*s23 - 4*s23^2) + s12^3*(36*s13^3 + 130*s13^2*s23 + 
                21*s13*s23^2 - 15*s23^3) - s12*s23*(16*s13^4 + 105*s13^3*
                 s23 + 275*s13^2*s23^2 + 179*s13*s23^3 - 7*s23^4) + 
              2*s12^2*(9*s13^4 - 7*s13^3*s23 - 81*s13^2*s23^2 - 
                159*s13*s23^3 + s23^4)) + p2q^3*(2*s12^4*(9*s13^2 - 
                8*s13*s23 - 20*s23^2) + s13*s23*(s13 + s23)^2*(2*s13^2 - 
                12*s13*s23 + 7*s23^2) + s12*s23*(s13 + s23)^2*(130*s13^2 - 
                239*s13*s23 + 30*s23^2) + s12^3*(36*s13^3 - 14*s13^2*s23 - 
                105*s13*s23^2 - 50*s23^3) + s12^2*(18*s13^4 + 130*s13^3*s23 - 
                162*s13^2*s23^2 - 275*s13*s23^3 + 20*s23^4)) + 
            p2q*p3q^2*(s12^5*(54*s13 + 76*s23) - 2*s12^4*(45*s13^2 + 
                58*s13*s23 + 7*s23^2) - 2*s12^3*(36*s13^3 + 48*s13^2*s23 + 
                241*s13*s23^2 + 89*s23^3) + s12^2*(-18*s13^4 + 156*s13^3*
                 s23 + 328*s13^2*s23^2 - 354*s13*s23^3 - 7*s23^4) + 
              s13*s23*(56*s13^4 - 28*s13^3*s23 - 114*s13^2*s23^2 + 
                83*s13*s23^3 + 113*s23^4) + s12*(54*s13^5 + 44*s13^4*s23 + 
                94*s13^3*s23^2 + 94*s13^2*s23^3 + 70*s13*s23^4 + 81*s23^5)) + 
            p2q^2*p3q*(s12^5*(54*s13 + 56*s23) - 2*s12^4*(9*s13^2 - 
                22*s13*s23 + 14*s23^2) - 2*s12^3*(36*s13^3 - 78*s13^2*s23 - 
                47*s13*s23^2 + 57*s23^3) + s13*s23*(76*s13^4 - 14*s13^3*s23 - 
                178*s13^2*s23^2 - 7*s13*s23^3 + 81*s23^4) + 
              s12^2*(-90*s13^4 - 96*s13^3*s23 + 328*s13^2*s23^2 + 
                94*s13*s23^3 + 83*s23^4) + s12*(54*s13^5 - 116*s13^4*s23 - 
                482*s13^3*s23^2 - 354*s13^2*s23^3 + 70*s13*s23^4 + 
                113*s23^5))) + p1q^2*(p2q^5*s23*(s12^4*(27*s13^2 + 
                21*s13*s23 - 10*s23^2) + s13*s23*(s13 + s23)^2*(7*s13^2 - 
                8*s13*s23 + s23^2) - 2*s12*s13*(s13 + s23)^2*(18*s13^2 - 
                95*s13*s23 + 39*s23^2) + 2*s12^3*(9*s13^3 + 37*s13^2*s23 + 
                21*s13*s23^2 - 10*s23^3) + s12^2*(-45*s13^4 + 164*s13^3*s23 + 
                177*s13^2*s23^2 - 58*s13*s23^3 - 10*s23^4)) + 
            p3q^5*s23*(-10*s13^2*s23^2*(s13 + s23)^2 + s12^5*(-36*s13 + 
                7*s23) + s12^4*(-45*s13^2 + 118*s13*s23 + 6*s23^2) + 
              2*s12^3*(9*s13^3 + 82*s13^2*s23 + 133*s13*s23^2 - 4*s23^3) + 
              s12^2*(27*s13^4 + 74*s13^3*s23 + 177*s13^2*s23^2 + 
                34*s13*s23^3 - 6*s23^4) + s12*s23*(21*s13^4 + 42*s13^3*s23 - 
                58*s13^2*s23^2 - 78*s13*s23^3 + s23^4)) - 
            p2q^2*p3q^3*(144*s12^6*s23 - 2*s12^5*(144*s13^2 + 423*s13*s23 + 
                8*s23^2) + s12^4*(72*s13^3 + 126*s13^2*s23 - 608*s13*s23^2 - 
                313*s23^3) + s12^3*(360*s13^4 + 603*s13^3*s23 + 627*s13^2*
                 s23^2 + 465*s13*s23^3 - 11*s23^4) + s12^2*s23*(1044*s13^4 + 
                860*s13^3*s23 - 329*s13^2*s23^2 + 590*s13*s23^3 + 88*s23^4) + 
              s12*s23*(-351*s13^5 + 187*s13^4*s23 + 470*s13^3*s23^2 + 
                318*s13^2*s23^3 + 368*s13*s23^4 - 54*s23^5) + 
              2*s13*s23*(18*s13^5 - 69*s13^4*s23 - 107*s13^3*s23^2 + 
                72*s13^2*s23^3 + 81*s13*s23^4 - 11*s23^5)) + 
            p2q*p3q^4*(-36*s12^6*(2*s13 + 3*s23) + 4*s12^5*(18*s13^2 + 
                90*s13*s23 - 11*s23^2) + s12^3*s23*(459*s13^3 + 610*s13^2*
                 s23 + 474*s13*s23^2 + 121*s23^3) + s12^4*(144*s13^3 + 
                441*s13^2*s23 + 881*s13*s23^2 + 202*s23^3) + 
              s13*s23^2*(44*s13^4 + 24*s13^3*s23 - 82*s13^2*s23^2 - 
                51*s13*s23^3 + 11*s23^4) + s12^2*s23*(-117*s13^4 + 
                305*s13^3*s23 + 499*s13^2*s23^2 - 221*s13*s23^3 + 18*s23^4) + 
              s12*s23*(45*s13^5 - 20*s13^4*s23 + 119*s13^3*s23^2 - 
                77*s13^2*s23^3 - 241*s13*s23^4 + 35*s23^5)) - 
            p2q^3*p3q^2*(36*s12^6*s23 - 3*s12^5*s23*(117*s13 + 46*s23) + 
              s12^4*(360*s13^3 + 1044*s13^2*s23 + 187*s13*s23^2 - 
                214*s23^3) + s12^3*(72*s13^4 + 603*s13^3*s23 + 860*s13^2*
                 s23^2 + 470*s13*s23^3 + 144*s23^4) + s13*s23*(144*s13^5 - 
                16*s13^4*s23 - 313*s13^3*s23^2 - 11*s13^2*s23^3 + 
                88*s13*s23^4 - 54*s23^5) + s12*s23*(-846*s13^5 - 
                608*s13^4*s23 + 465*s13^3*s23^2 + 590*s13^2*s23^3 + 
                368*s13*s23^4 - 22*s23^5) + s12^2*(-288*s13^5 + 126*s13^4*
                 s23 + 627*s13^3*s23^2 - 329*s13^2*s23^3 + 318*s13*s23^4 + 
                162*s23^5)) + p2q^4*p3q*(s12^5*s23*(45*s13 + 44*s23) + 
              s12^4*s23*(-117*s13^2 - 20*s13*s23 + 24*s23^2) + 
              s12^3*(144*s13^4 + 459*s13^3*s23 + 305*s13^2*s23^2 + 
                119*s13*s23^3 - 82*s23^4) + s12^2*(72*s13^5 + 441*s13^4*s23 + 
                610*s13^3*s23^2 + 499*s13^2*s23^3 - 77*s13*s23^4 - 
                51*s23^5) + s13*s23*(-108*s13^5 - 44*s13^4*s23 + 
                202*s13^3*s23^2 + 121*s13^2*s23^3 + 18*s13*s23^4 + 
                35*s23^5) + s12*(-72*s13^6 + 360*s13^5*s23 + 881*s13^4*
                 s23^2 + 474*s13^3*s23^3 - 221*s13^2*s23^4 - 241*s13*s23^5 + 
                11*s23^6)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - (ep*p1q*(s12 + s13 + s23)*
         (p1q^4*s23*(p3q^3*s23^2*(s12^3*(-9*s13 + s23) + 2*s12^2*s23*(
                -4*s13 + s23) + 10*s13*s23*(s13 + s23)^2 + s12*(s13 + s23)^2*(
                9*s13 + s23)) + p2q^3*s23^2*(-(s12*(9*s13 - 10*s23)*
                (s13 + s23)^2) + s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 
                10*s23) + s12^2*s23*(19*s13 + 20*s23)) + 2*p2q*p3q^2*
             (-36*s12^4*s13*(s13 + s23) + s23^3*(23*s13^3 + 59*s13^2*s23 + 
                46*s13*s23^2 + 10*s23^3) + s12^3*(36*s13^3 - 18*s13^2*s23 - 
                27*s13*s23^2 + 23*s23^3) + s12*s23^2*(45*s13^3 + 
                84*s13^2*s23 + 84*s13*s23^2 + 46*s23^3) + s12^2*s23*(
                54*s13^3 + 40*s13^2*s23 + 48*s13*s23^2 + 59*s23^3)) + 
            2*p2q^2*p3q*(s23^3*(23*s13^3 + 59*s13^2*s23 + 46*s13*s23^2 + 
                10*s23^3) + s12^3*(36*s13^3 + 54*s13^2*s23 + 45*s13*s23^2 + 
                23*s23^3) + s12*s23*(-36*s13^4 - 27*s13^3*s23 + 
                48*s13^2*s23^2 + 84*s13*s23^3 + 46*s23^4) + 
              s12^2*(-36*s13^4 - 18*s13^3*s23 + 40*s13^2*s23^2 + 
                84*s13*s23^3 + 59*s23^4))) - 
          p1q^3*(p2q^4*s23^2*(2*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + 10*s23) - s12*(s13 + s23)^2*(9*s13^2 - 
                57*s13*s23 + 10*s23^2) + s12^3*(27*s13^2 + 39*s13*s23 + 
                10*s23^2) + s12^2*(9*s13^3 + 84*s13^2*s23 + 69*s13*s23^2 - 
                10*s23^3)) + 2*p2q*p3q^3*(-36*s12^5*s13*(s13 + 2*s23) + 
              2*s12^2*s23^2*(-61*s13^3 + 78*s13^2*s23 + 139*s13*s23^2 + 
                23*s23^3) + s12^4*(-36*s13^3 + 18*s13^2*s23 + 9*s13*s23^2 + 
                60*s23^3) + s12^3*s23*(-162*s13^3 + 49*s13^2*s23 + 
                213*s13*s23^2 + 124*s23^3) + s12*s23^2*(36*s13^4 + 
                39*s13^3*s23 + 127*s13^2*s23^2 + 103*s13*s23^3 - 28*s23^4) + 
              s23^3*(33*s13^4 + 48*s13^3*s23 - 22*s13^2*s23^2 - 
                47*s13*s23^3 - 10*s23^4)) + p3q^4*s23^2*
             (10*s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^4*(-9*s13 + 2*s23) + 
              s12^3*(9*s13^2 + 39*s13*s23 + 2*s23^2) + s12^2*(27*s13^3 + 
                84*s13^2*s23 + 95*s13*s23^2 - 2*s23^3) + s12*(9*s13^4 + 
                39*s13^3*s23 + 69*s13^2*s23^2 + 37*s13*s23^3 - 2*s23^4)) + 
            2*p2q^2*p3q^2*(6*s12^4*(12*s13^3 + 39*s13^2*s23 + 36*s13*s23^2 + 
                13*s23^3) + s12*s23^2*(216*s13^4 + 357*s13^3*s23 + 
                395*s13^2*s23^2 + 196*s13*s23^3 - 69*s23^4) + 
              s23^3*(78*s13^4 + 148*s13^3*s23 + 21*s13^2*s23^2 - 
                69*s13*s23^3 - 20*s23^4) + s12^2*s23*(234*s13^4 + 
                206*s13^3*s23 + 426*s13^2*s23^2 + 395*s13*s23^3 + 21*s23^4) + 
              s12^3*(72*s13^4 - 36*s13^3*s23 + 206*s13^2*s23^2 + 
                357*s13*s23^3 + 148*s23^4)) + 2*p2q^3*p3q*
             (3*s12^4*s23^2*(12*s13 + 11*s23) + 2*s23^3*(30*s13^4 + 
                62*s13^3*s23 + 23*s13^2*s23^2 - 14*s13*s23^3 - 5*s23^4) + 
              s12^3*(-36*s13^4 - 162*s13^3*s23 - 122*s13^2*s23^2 + 
                39*s13*s23^3 + 48*s23^4) + s12*s23*(-72*s13^5 + 9*s13^4*s23 + 
                213*s13^3*s23^2 + 278*s13^2*s23^3 + 103*s13*s23^4 - 
                47*s23^5) + s12^2*(-36*s13^5 + 18*s13^4*s23 + 49*s13^3*
                 s23^2 + 156*s13^2*s23^3 + 127*s13*s23^4 - 22*s23^5))) - 
          (p2q + p3q)*(p2q^6*s13^2*s23*(s12*(9*s13 - 10*s23)*(s13 + s23)^2 - 
              s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 10*s23) + 
              s12^2*s13*(18*s13 + 19*s23)) + p3q^6*s12^2*s23*
             (s12^3*(9*s13 - s23) + 10*s13*s23*(s13^2 - s23^2) + 
              2*s12^2*(9*s13^2 + 4*s13*s23 - s23^2) + s12*(9*s13^3 + 
                19*s13^2*s23 - 11*s13*s23^2 - s23^3)) + p2q*p3q^5*s12*
             (36*s12^5*(2*s13 + s23) + s12^3*s23*(198*s13^2 + 215*s13*s23 + 
                85*s23^2) + s12^4*(72*s13^2 + 171*s13*s23 + 94*s23^2) + 
              2*s13*s23^2*(-s13^3 + s13^2*s23 + 8*s13*s23^2 + 10*s23^3) + 
              s12*s23^2*(-5*s13^3 + 123*s13^2*s23 + 9*s13*s23^2 + 11*s23^3) + 
              s12^2*s23*(-9*s13^3 + 226*s13^2*s23 + 107*s13*s23^2 + 
                38*s23^3)) + p2q^2*p3q^4*(36*s12^6*s23 - 4*s12^5*(72*s13^2 + 
                45*s13*s23 - 16*s23^2) - 3*s12^4*(96*s13^3 + 162*s13^2*s23 + 
                55*s13*s23^2 - 2*s23^3) + 2*s13^2*s23^2*(-4*s13^3 - 
                10*s13^2*s23 - 5*s13*s23^2 + s23^3) + s12^2*s23^2*(
                -421*s13^3 - 128*s13^2*s23 - 109*s13*s23^2 + 4*s23^3) - 
              s12^3*s23*(531*s13^3 + 404*s13^2*s23 + 131*s13*s23^2 + 
                18*s23^3) - s12*s13*s23*(27*s13^4 + 38*s13^3*s23 + 
                110*s13^2*s23^2 + 74*s13*s23^3 - 51*s23^4)) + 
            p2q^3*p3q^3*(18*s12^6*s23 + 3*s12^5*s23*(-15*s13 + 8*s23) + 
              s12^4*(432*s13^3 + 468*s13^2*s23 + 123*s13*s23^2 - 20*s23^3) + 
              s12^3*(432*s13^4 + 630*s13^3*s23 + 261*s13^2*s23^2 + 
                35*s13*s23^3 - 22*s23^4) + 2*s13^2*s23*(9*s13^4 + 
                12*s13^3*s23 - 10*s13^2*s23^2 - 11*s13*s23^3 + 2*s23^4) + 
              s12^2*s23*(468*s13^4 + 261*s13^3*s23 + 128*s13^2*s23^2 - 
                83*s13*s23^3 + 4*s23^4) + s12*s13*s23*(-45*s13^4 + 
                123*s13^3*s23 + 35*s13^2*s23^2 - 83*s13*s23^3 + 80*s23^4)) - 
            p2q^4*p3q^2*(s12^5*s23*(27*s13 + 8*s23) + 2*s12^4*s23^2*(19*s13 + 
                10*s23) + s12*s13*s23*(180*s13^4 + 165*s13^3*s23 + 
                131*s13^2*s23^2 + 109*s13*s23^3 - 51*s23^4) - 
              2*s13^2*s23*(18*s13^4 + 32*s13^3*s23 + 3*s13^2*s23^2 - 
                9*s13*s23^3 + 2*s23^4) + s12^3*(288*s13^4 + 531*s13^3*s23 + 
                421*s13^2*s23^2 + 110*s13*s23^3 + 10*s23^4) + 
              2*s12^2*(144*s13^5 + 243*s13^4*s23 + 202*s13^3*s23^2 + 
                64*s13^2*s23^3 + 37*s13*s23^4 - s23^5)) + p2q^5*p3q*s13*
             (-2*s12^4*s23^2 + s12^3*s23*(-9*s13^2 - 5*s13*s23 + 2*s23^2) + 
              s13*s23*(36*s13^4 + 94*s13^3*s23 + 85*s13^2*s23^2 + 
                38*s13*s23^3 + 11*s23^4) + s12^2*(72*s13^4 + 198*s13^3*s23 + 
                226*s13^2*s23^2 + 123*s13*s23^3 + 16*s23^4) + 
              s12*(72*s13^5 + 171*s13^4*s23 + 215*s13^3*s23^2 + 107*s13^2*
                 s23^3 + 9*s13*s23^4 + 20*s23^5))) + 
          p1q*(p2q^6*s13*s23*(2*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + 10*s23) - s12*(s13 + s23)^2*(9*s13^2 - 
                57*s13*s23 + 10*s23^2) + s12^3*(9*s13^2 + 37*s13*s23 + 
                30*s23^2) + s12^2*(-9*s13^3 + 64*s13^2*s23 + 87*s13*s23^2 + 
                10*s23^3)) + p3q^6*s12*s23*(s12^4*(-9*s13 + 2*s23) + 
              s12^3*(-9*s13^2 + 39*s13*s23 + 2*s23^2) + s12^2*(9*s13^3 + 
                64*s13^2*s23 + 95*s13*s23^2 - 2*s23^3) + 10*s13*s23*(s13^3 + 
                3*s13^2*s23 + s13*s23^2 - s23^3) + s12*(9*s13^4 + 
                37*s13^3*s23 + 87*s13^2*s23^2 + 37*s13*s23^3 - 2*s23^4)) + 
            p2q^2*p3q^4*(-72*s12^6*(s13 + s23) + s12^5*(504*s13^2 + 
                378*s13*s23 + 26*s23^2) + s12^4*(360*s13^3 + 297*s13^2*s23 + 
                449*s13*s23^2 + 295*s23^3) + s12^2*s23*(-351*s13^4 + 
                757*s13^3*s23 + 354*s13^2*s23^2 + 309*s13*s23^3 - 65*s23^4) - 
              2*s13^2*s23*(9*s13^4 - 7*s13^3*s23 - 32*s13^2*s23^2 + 
                14*s13*s23^3 + 30*s23^4) + s12^3*(-216*s13^4 + 891*s13^3*
                 s23 + 432*s13^2*s23^2 + 680*s13*s23^3 + 139*s23^4) + 
              s12*s23*(27*s13^5 - 174*s13^4*s23 + 253*s13^3*s23^2 + 
                125*s13^2*s23^3 - 422*s13*s23^4 - 7*s23^5)) + 
            p2q^4*p3q^2*(-18*s12^6*s23 + s12^5*s23*(27*s13 + 14*s23) - 
              s12^4*(216*s13^3 + 351*s13^2*s23 + 174*s13*s23^2 - 64*s23^3) + 
              s12^3*(360*s13^4 + 891*s13^3*s23 + 757*s13^2*s23^2 + 
                253*s13*s23^3 - 28*s23^4) + s12*s13*(-72*s13^5 + 
                378*s13^4*s23 + 449*s13^3*s23^2 + 680*s13^2*s23^3 + 
                309*s13*s23^4 - 422*s23^5) + s12^2*(504*s13^5 + 297*s13^4*
                 s23 + 432*s13^3*s23^2 + 354*s13^2*s23^3 + 125*s13*s23^4 - 
                60*s23^5) + s13*s23*(-72*s13^5 + 26*s13^4*s23 + 295*s13^3*
                 s23^2 + 139*s13^2*s23^3 - 65*s13*s23^4 - 7*s23^5)) + 
            p2q*p3q^5*(-36*s12^6*(4*s13 + s23) + s12^5*(-72*s13^2 - 
                99*s13*s23 + 17*s23^2) + 2*s13^2*s23^2*(4*s13^3 + 
                4*s13^2*s23 - 7*s13*s23^2 - 7*s23^3) + 2*s12^3*s23*(
                117*s13^3 + 26*s13^2*s23 + 294*s13*s23^2 + 82*s23^3) + 
              2*s12^4*(36*s13^3 - 99*s13^2*s23 + 125*s13*s23^2 + 93*s23^3) + 
              2*s12^2*s23*(9*s13^4 + 150*s13^3*s23 + 109*s13^2*s23^2 + 
                149*s13*s23^3 + 21*s23^4) + s12*s23*(9*s13^5 + 21*s13^4*s23 + 
                140*s13^3*s23^2 + 50*s13^2*s23^3 - 93*s13*s23^4 + 
                11*s23^5)) + p2q^5*p3q*(s12^5*s23*(9*s13 + 8*s23) + 
              s12^4*s23*(18*s13^2 + 21*s13*s23 + 8*s23^2) + 
              2*s12^3*(36*s13^4 + 117*s13^3*s23 + 150*s13^2*s23^2 + 
                70*s13*s23^3 - 7*s23^4) + s12*s13*(-144*s13^5 - 
                99*s13^4*s23 + 250*s13^3*s23^2 + 588*s13^2*s23^3 + 
                298*s13*s23^4 - 93*s23^5) - 2*s12^2*(36*s13^5 + 
                99*s13^4*s23 - 26*s13^3*s23^2 - 109*s13^2*s23^3 - 
                25*s13*s23^4 + 7*s23^5) + s13*s23*(-36*s13^5 + 17*s13^4*s23 + 
                186*s13^3*s23^2 + 164*s13^2*s23^3 + 42*s13*s23^4 + 
                11*s23^5)) - 2*p2q^3*p3q^3*(27*s12^6*s23 - s12^5*(108*s13^2 + 
                99*s13*s23 + 13*s23^2) + s12^4*(324*s13^3 + 513*s13^2*s23 + 
                203*s13*s23^2 - 97*s23^3) + s12^3*(324*s13^4 + 198*s13^3*
                 s23 + 242*s13^2*s23^2 + 33*s13*s23^3 + 7*s23^4) + 
              s13*s23*(27*s13^5 - 13*s13^4*s23 - 97*s13^3*s23^2 + 
                7*s13^2*s23^3 + 73*s13*s23^4 + 9*s23^5) + s12*s23*(
                -99*s13^5 + 203*s13^4*s23 + 33*s13^3*s23^2 + 37*s13^2*s23^3 + 
                366*s13*s23^4 + 9*s23^5) + s12^2*(-108*s13^5 + 513*s13^4*
                 s23 + 242*s13^3*s23^2 + 200*s13^2*s23^3 + 37*s13*s23^4 + 
                73*s23^5))) + p1q^2*(p2q^5*s23*(2*s12*s13*(28*s13 - 29*s23)*
               s23*(s13 + s23)^2 + s12^4*(9*s13^2 + s13*s23 - 10*s23^2) + 
              s13*s23*(s13 + s23)^2*(s13^2 - 4*s13*s23 + s23^2) + 
              2*s12^3*(9*s13^3 + 10*s13^2*s23 - 9*s13*s23^2 - 10*s23^3) + 
              s12^2*(9*s13^4 + 74*s13^3*s23 + 3*s13^2*s23^2 - 78*s13*s23^3 - 
                10*s23^4)) + p3q^5*s23*(s12^5*s23 - 10*s13^2*s23^2*
               (s13 + s23)^2 + s12^4*(9*s13^2 + 56*s13*s23 - 2*s23^2) + 
              2*s12^3*(9*s13^3 + 37*s13^2*s23 + 27*s13*s23^2 - 3*s23^3) + 
              s12^2*(9*s13^4 + 20*s13^3*s23 + 3*s13^2*s23^2 - 60*s13*s23^3 - 
                2*s23^4) + s12*s23*(s13^4 - 18*s13^3*s23 - 78*s13^2*s23^2 - 
                58*s13*s23^3 + s23^4)) + p2q*p3q^4*(-72*s12^6*s13 + 
              2*s12^5*(36*s13^2 + 117*s13*s23 + 55*s23^2) + s12^3*s23*(
                567*s13^3 + 420*s13^2*s23 + 406*s13*s23^2 - 93*s23^3) + 
              s12^4*(144*s13^3 + 99*s13^2*s23 + 573*s13*s23^2 + 149*s23^3) + 
              s12^2*s23*(81*s13^4 + 693*s13^3*s23 + 234*s13^2*s23^2 - 
                259*s13*s23^3 - 157*s23^4) + 2*s13*s23^2*(14*s13^4 + 
                6*s13^3*s23 - 33*s13^2*s23^2 - 19*s13*s23^3 + 6*s23^4) + 
              s12*s23*(27*s13^5 + 80*s13^4*s23 + 235*s13^3*s23^2 - 
                161*s13^2*s23^3 - 398*s13*s23^4 - 25*s23^5)) + 
            p2q^2*p3q^3*(2*s12^5*(144*s13^2 + 216*s13*s23 + 91*s23^2) - 
              6*s12^4*(12*s13^3 + 39*s13^2*s23 - 56*s13*s23^2 - 37*s23^3) + 
              s12^3*(-360*s13^4 + 657*s13^3*s23 + 515*s13^2*s23^2 + 
                301*s13*s23^3 - 195*s23^4) - 2*s12^2*s23*(270*s13^4 - 
                394*s13^3*s23 - 202*s13^2*s23^2 + 193*s13*s23^3 + 
                109*s23^4) + 2*s23^2*(55*s13^5 + 51*s13^4*s23 - 
                86*s13^3*s23^2 - 59*s13^2*s23^3 + 33*s13*s23^4 + 10*s23^5) + 
              s12*s23*(81*s13^5 - 147*s13^4*s23 + 220*s13^3*s23^2 - 
                288*s13^2*s23^3 - 771*s13*s23^4 + 37*s23^5)) + 
            p2q^3*p3q^2*(s12^5*s23*(81*s13 + 110*s23) - 3*s12^4*(120*s13^3 + 
                180*s13^2*s23 + 49*s13*s23^2 - 34*s23^3) + s12^3*(-72*s13^4 + 
                657*s13^3*s23 + 788*s13^2*s23^2 + 220*s13*s23^3 - 
                172*s23^4) + s12^2*(288*s13^5 - 234*s13^4*s23 + 515*s13^3*
                 s23^2 + 404*s13^2*s23^3 - 288*s13*s23^4 - 118*s23^5) + 
              s23^2*(182*s13^5 + 222*s13^4*s23 - 195*s13^3*s23^2 - 
                218*s13^2*s23^3 + 37*s13*s23^4 + 20*s23^5) + 
              s12*s23*(432*s13^5 + 336*s13^4*s23 + 301*s13^3*s23^2 - 
                386*s13^2*s23^3 - 771*s13*s23^4 + 66*s23^5)) + 
            p2q^4*p3q*(s12^5*s23*(27*s13 + 28*s23) + s12^4*s23*(81*s13^2 + 
                80*s13*s23 + 12*s23^2) + s12^3*(144*s13^4 + 567*s13^3*s23 + 
                693*s13^2*s23^2 + 235*s13*s23^3 - 66*s23^4) + 
              s13*s23^2*(110*s13^4 + 149*s13^3*s23 - 93*s13^2*s23^2 - 
                157*s13*s23^3 - 25*s23^4) + s12^2*(72*s13^5 + 99*s13^4*s23 + 
                420*s13^3*s23^2 + 234*s13^2*s23^3 - 161*s13*s23^4 - 
                38*s23^5) + s12*(-72*s13^6 + 234*s13^5*s23 + 573*s13^4*
                 s23^2 + 406*s13^3*s23^3 - 259*s13^2*s23^4 - 398*s13*s23^5 + 
                12*s23^6)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(p3q^3*s12*(26*s12^3 - s13*(s13 - 3*s23)*
             s23 + s12^2*(-11*s13 + 28*s23) - s12*(s13^2 - 2*s23^2)) + 
          p2q^3*s13*(8*s12^2*(s13 + s23) + s13*(-s13^2 + s13*s23 + 2*s23^2) - 
            s12*(29*s13^2 + 54*s13*s23 + 24*s23^2)) + 
          p1q^3*(s23^2*(-s13^2 + s13*s23 + 2*s23^2) + 
            s12^2*(36*s13^2 + 63*s13*s23 + 26*s23^2) + 
            s12*s23*(27*s13^2 + 56*s13*s23 + 28*s23^2)) + 
          p2q*p3q^2*(8*s12^4 - s12^3*(81*s13 + 34*s23) + 
            s12^2*(21*s13^2 - 28*s13*s23 - 44*s23^2) + 
            s13*s23*(s13^2 - s13*s23 - 2*s23^2) + 
            s12*(2*s13^3 - 2*s13^2*s23 + 3*s13*s23^2 - 2*s23^3)) + 
          p2q^2*p3q*(-8*s12^3*(2*s13 + s23) + s12^2*(84*s13^2 + 88*s13*s23 + 
              8*s23^2) + s13*(-s13^3 + 2*s13^2*s23 + s13*s23^2 - 2*s23^3) + 
            s12*(-9*s13^3 - s13^2*s23 + 30*s13*s23^2 + 16*s23^3)) + 
          p1q*(p3q^2*(26*s12^4 - 3*s13*s23^2*(s13 + s23) - 2*s12^3*(37*s13 + 
                12*s23) + s12^2*(8*s13^2 - 45*s13*s23 - 54*s23^2) + 
              s12*s23*(-3*s13^2 + 2*s13*s23 - 4*s23^2)) + 
            p2q^2*(-(s13*(s13 - 2*s23)^2*(s13 + s23)) + s12^2*(53*s13^2 + 
                78*s13*s23 + 24*s23^2) + s12*(-56*s13^3 - 81*s13^2*s23 + 
                2*s13*s23^2 + 24*s23^3)) + p2q*p3q*(5*s13^3*s23 - 
              3*s13*s23^3 + 2*s23^4 - s12^3*(79*s13 + 58*s23) + 
              s12^2*(130*s13^2 + 111*s13*s23 - 18*s23^2) + s12*(-7*s13^3 + 
                30*s13^2*s23 + 91*s13*s23^2 + 42*s23^3))) + 
          p1q^2*(p3q*(-(s12^3*(63*s13 + 52*s23)) + 3*s12^2*(15*s13^2 + 
                6*s13*s23 - 10*s23^2) + 2*s23^2*(-2*s13^2 - s13*s23 + 
                s23^2) + s12*s23*(25*s13^2 + 55*s13*s23 + 24*s23^2)) + 
            p2q*(s12^2*(81*s13^2 + 133*s13*s23 + 50*s23^2) + s23*(2*s13^3 - 
                3*s13^2*s23 - 3*s13*s23^2 + 2*s23^3) + s12*(-27*s13^3 + 
                82*s13*s23^2 + 52*s23^3)))))/(6*(p1q + p2q + p3q)*s12*s13*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (ep*(s12 + s13 + s23)*(p1q^4*s23*(p2q^3*s23^3*(s12^3 + 
              s12*(s13 + s23)^2 + s13*(s13 + s23)^2 + s12^2*(s13 + 2*s23)) + 
            p3q^3*s23^2*(s12*(9*s13 - 8*s23)*(s13 + s23)^2 + 
              s13*s23*(s13 + s23)^2 - s12^3*(9*s13 + 8*s23) - 
              s12^2*s23*(17*s13 + 16*s23)) + p2q*p3q^2*
             (-36*s12^4*s13*(s13 + s23) + s12*s23^2*(18*s13^3 + 
                33*s13^2*s23 + 6*s13*s23^2 - 7*s23^3) + s23^3*(s13^3 + 
                10*s13^2*s23 + 11*s13*s23^2 + 2*s23^3) + s12^2*s23*(
                36*s13^3 + 62*s13^2*s23 + 51*s13*s23^2 + 28*s23^3) + 
              s12^3*(36*s13^3 + 36*s13^2*s23 + 36*s13*s23^2 + 37*s23^3)) + 
            p2q^2*p3q*(s23^3*(s13^3 + 10*s13^2*s23 + 11*s13*s23^2 + 
                2*s23^3) + s12^3*(36*s13^3 + 72*s13^2*s23 + 72*s13*s23^2 + 
                37*s23^3) - s12*s23*(36*s13^4 + 90*s13^3*s23 + 75*s13^2*
                 s23^2 + 30*s13*s23^3 + 7*s23^4) + s12^2*(-36*s13^4 - 
                72*s13^3*s23 - 46*s13^2*s23^2 + 15*s13*s23^3 + 28*s23^4))) - 
          (p2q + p3q)*(p2q^6*s13^2*(s12 + s13)*s23^2*(s12^2 - 
              (s13 + s23)^2) + p3q^6*s12^2*s23*(s12^3*(9*s13 + 8*s23) + 
              s13*s23*(s13^2 - s23^2) + s12^2*(18*s13^2 + 17*s13*s23 + 
                16*s23^2) + s12*(9*s13^3 + 10*s13^2*s23 + 7*s13*s23^2 + 
                8*s23^3)) + p2q^2*p3q^4*(36*s12^6*s23 - 2*s12^5*(72*s13^2 + 
                72*s13*s23 + 13*s23^2) + s13^2*s23^2*(s13^3 - 2*s13^2*s23 - 
                s13*s23^2 + 2*s23^3) - 3*s12^4*(48*s13^3 + 78*s13^2*s23 + 
                61*s13*s23^2 + 16*s23^3) - s12^3*s23*(207*s13^3 + 
                233*s13^2*s23 + 203*s13*s23^2 + 18*s23^3) - s12^2*s23^2*(
                88*s13^3 + 92*s13^2*s23 + 55*s13*s23^2 + 32*s23^3) + 
              s12*s13*s23*(9*s13^4 + 25*s13^3*s23 + 34*s13^2*s23^2 - 
                11*s13*s23^3 - 3*s23^4)) + p2q*p3q^5*s12*
             (36*s12^5*(s13 + s23) + s12^3*s23*(72*s13^2 + 53*s13*s23 + 
                49*s23^2) + s12^4*(36*s13^2 + 81*s13*s23 + 58*s23^2) + 
              2*s13*s23^2*(-s13^3 + s13^2*s23 - s13*s23^2 + s23^3) + 
              s12^2*s23*(-27*s13^3 - 8*s13^2*s23 - 19*s13*s23^2 + 20*s23^3) - 
              s12*s23*(18*s13^4 + 41*s13^3*s23 + 21*s13^2*s23^2 + 
                9*s13*s23^3 + 7*s23^4)) + p2q^3*p3q^3*(18*s12^6*s23 - 
              6*s12^5*s23*(9*s13 + 5*s23) + 2*s12^4*(108*s13^3 + 
                153*s13^2*s23 + 75*s13*s23^2 - s23^3) + 2*s13^2*s23^2*(
                3*s13^3 - s13^2*s23 - 2*s13*s23^2 + 2*s23^3) + 
              2*s12^2*s23*(81*s13^4 + 99*s13^3*s23 + 64*s13^2*s23^2 + 
                17*s13*s23^3 - 16*s23^4) + s12*s13*s23*(9*s13^4 + 
                69*s13^3*s23 + 125*s13^2*s23^2 + 43*s13*s23^3 + 8*s23^4) + 
              s12^3*(216*s13^4 + 315*s13^3*s23 + 207*s13^2*s23^2 - 
                10*s13*s23^3 + 14*s23^4)) + 2*p2q^5*p3q*s13*
             (s12^4*s23*(9*s13 + 8*s23) + s12^3*s23*(9*s13^2 + 2*s13*s23 - 
                8*s23^2) + s13*s23^2*(2*s13^3 + 2*s13^2*s23 + s13*s23^2 + 
                s23^3) + s12^2*(18*s13^4 + 63*s13^3*s23 + 77*s13^2*s23^2 + 
                48*s13*s23^3 + 17*s23^4) + s12*(18*s13^5 + 45*s13^4*s23 + 
                49*s13^3*s23^2 + 31*s13^2*s23^3 + 9*s13*s23^4 + s23^5)) - 
            p2q^4*p3q^2*(s12^4*s23^2*(-25*s13 + 2*s23) + s12^5*s23*(36*s13 + 
                17*s23) - 2*s13^2*s23^2*(5*s13^3 + 3*s13^2*s23 + 2*s23^3) + 
              2*s12*s13*s23*(18*s13^4 + 15*s13^3*s23 - 20*s13^2*s23^2 - 
                13*s13*s23^3 - 3*s23^4) + s12^3*(144*s13^4 + 324*s13^3*s23 + 
                277*s13^2*s23^2 + 128*s13*s23^3 + s23^4) + s12^2*(144*s13^5 + 
                252*s13^4*s23 + 179*s13^3*s23^2 + 20*s13^2*s23^3 - 
                25*s13*s23^4 + 16*s23^5))) - 
          p1q^3*(p2q^4*s23^3*(s12^4 + 2*s13*(s13 - s23)*(s13 + s23)^2 + 
              s12*(3*s13 - s23)*(s13 + s23)^2 + s12^3*(3*s13 + s23) + 
              s12^2*(3*s13^2 + 6*s13*s23 - s23^2)) + p3q^4*s23^2*
             (s13*(s13 - s23)*s23*(s13 + s23)^2 - s12^4*(9*s13 + 16*s23) + 
              s12^3*(9*s13^2 + 12*s13*s23 - 16*s23^2) + s12^2*(27*s13^3 + 
                57*s13^2*s23 + 50*s13*s23^2 + 16*s23^3) + s12*(9*s13^4 + 
                12*s13^3*s23 + 15*s13^2*s23^2 + 28*s13*s23^3 + 16*s23^4)) + 
            p2q*p3q^3*(-36*s12^5*s13*(s13 + 2*s23) + s12^2*s23^2*(-10*s13^3 + 
                78*s13^2*s23 + 97*s13*s23^2 - 7*s23^3) + s12^3*s23*(
                -108*s13^3 + 44*s13^2*s23 + 156*s13*s23^2 + 41*s23^3) + 
              s12^4*(-36*s13^3 + 72*s13^2*s23 + 126*s13*s23^2 + 93*s23^3) + 
              s23^3*(3*s13^4 + 15*s13^3*s23 + s13^2*s23^2 - 13*s13*s23^3 - 
                2*s23^4) + s12*s23^2*(36*s13^4 + 42*s13^3*s23 + 
                11*s13^2*s23^2 + 62*s13*s23^3 + 43*s23^4)) + 
            p2q^2*p3q^2*(3*s12^4*(24*s13^3 + 96*s13^2*s23 + 102*s13*s23^2 + 
                43*s23^3) + s12^2*s23*(180*s13^4 + 286*s13^3*s23 + 
                258*s13^2*s23^2 + 79*s13*s23^3 - 93*s23^4) + 
              s12^3*(72*s13^4 - 36*s13^3*s23 - 2*s13^2*s23^2 + 48*s13*s23^3 - 
                19*s23^4) + s23^3*(3*s13^4 + 35*s13^3*s23 + 15*s13^2*s23^2 - 
                21*s13*s23^3 - 4*s23^4) + s12*s23^2*(126*s13^4 + 
                282*s13^3*s23 + 223*s13^2*s23^2 + 140*s13*s23^3 + 
                51*s23^4)) + p2q^3*p3q*(3*s12^4*s23^2*(12*s13 + 13*s23) + 
              s23^3*(3*s13^4 + 23*s13^3*s23 + 11*s13^2*s23^2 - 11*s13*s23^3 - 
                2*s23^4) - s12^3*(36*s13^4 + 216*s13^3*s23 + 298*s13^2*
                 s23^2 + 156*s13*s23^3 + 39*s23^4) + s12*s23*(-72*s13^5 - 
                108*s13^4*s23 + 30*s13^3*s23^2 + 115*s13^2*s23^3 + 
                80*s13*s23^4 + 23*s23^5) - s12^2*(36*s13^5 + 36*s13^4*s23 + 
                10*s13^3*s23^2 - 42*s13^2*s23^3 - 11*s13*s23^4 + 
                53*s23^5))) + p1q*(p2q^6*s13*s23^2*(s12^4 + 2*s13*(s13 - s23)*
               (s13 + s23)^2 + s12*(3*s13 - s23)*(s13 + s23)^2 + 
              s12^3*(s13 + 3*s23) + s12^2*(s13^2 + 6*s13*s23 + s23^2)) + 
            p3q^6*s12*s23*(-(s12^4*(9*s13 + 16*s23)) + s12^3*(-9*s13^2 + 
                12*s13*s23 - 16*s23^2) + s13*s23*(s13^3 + 3*s13^2*s23 + 
                s13*s23^2 - s23^3) + s12^2*(9*s13^3 + 55*s13^2*s23 + 
                50*s13*s23^2 + 16*s23^3) + s12*(9*s13^4 + 28*s13^3*s23 + 
                33*s13^2*s23^2 + 28*s13*s23^3 + 16*s23^4)) - 
            p2q*p3q^5*(36*s12^6*(2*s13 + s23) + s12^5*(36*s13^2 - 9*s13*s23 - 
                26*s23^2) + s13^2*s23^2*(s13^3 + s13^2*s23 + 5*s13*s23^2 + 
                5*s23^3) - s12^4*(36*s13^3 - 72*s13^2*s23 + 187*s13*s23^2 + 
                51*s23^3) - s12^3*s23*(72*s13^3 + 124*s13^2*s23 + 
                246*s13*s23^2 + 65*s23^3) - s12^2*s23^2*(30*s13^3 + 
                20*s13^2*s23 + 55*s13*s23^2 + 69*s23^3) + s12*s23*(9*s13^5 + 
                42*s13^4*s23 + 58*s13^3*s23^2 + 13*s13^2*s23^3 + 
                21*s13*s23^4 + 7*s23^5)) - 2*p2q^3*p3q^3*(27*s12^6*s23 - 
              2*s12^5*(27*s13^2 + 36*s13*s23 + 29*s23^2) + s13^2*s23^2*(
                5*s13^3 - 16*s13^2*s23 - 2*s13*s23^2 + 19*s23^3) + 
              s12^4*(162*s13^3 + 414*s13^2*s23 + 275*s13*s23^2 + 47*s23^3) + 
              s12^3*(162*s13^4 + 99*s13^3*s23 + 53*s13^2*s23^2 - 
                66*s13*s23^3 + 25*s23^4) + s12^2*(-54*s13^5 + 99*s13^4*s23 + 
                125*s13^3*s23^2 + 92*s13^2*s23^3 + 10*s13*s23^4 - 98*s23^5) + 
              s12*s23*(-27*s13^5 + 32*s13^4*s23 + 123*s13^3*s23^2 + 
                19*s13^2*s23^3 + 15*s13*s23^4 + 9*s23^5)) - 
            p2q^2*p3q^4*(36*s12^6*(s13 + 2*s23) - 4*s12^5*(63*s13^2 + 
                72*s13*s23 + 29*s23^2) + s12^4*(-180*s13^3 + 63*s13^2*s23 - 
                62*s13*s23^2 + 11*s23^3) + 2*s13^2*s23^2*(2*s13^3 - 
                5*s13^2*s23 + 5*s13*s23^2 + 12*s23^3) + s12^2*s23*(
                117*s13^4 + 26*s13^3*s23 + 78*s13^2*s23^2 + 42*s13*s23^3 - 
                115*s23^4) + s12^3*(108*s13^4 - 189*s13^3*s23 - 
                63*s13^2*s23^2 - 149*s13*s23^3 + 59*s23^4) + 
              s12*s23*(9*s13^5 + 111*s13^4*s23 + 188*s13^3*s23^2 + 
                28*s13^2*s23^3 + 53*s13*s23^4 + 25*s23^5)) + 
            p2q^5*p3q*(s12^5*s23*(18*s13 + 17*s23) + s12^4*s23*(18*s13^2 + 
                39*s13*s23 + 17*s23^2) + s13*s23^2*(-s13^4 + 15*s13^3*s23 + 
                11*s13^2*s23^2 - 3*s13*s23^3 + 2*s23^4) + s12^3*(36*s13^4 + 
                162*s13^3*s23 + 318*s13^2*s23^2 + 230*s13*s23^3 + 31*s23^4) + 
              s12*s13*(-72*s13^5 - 108*s13^4*s23 + 7*s13^3*s23^2 + 
                102*s13^2*s23^3 + 91*s13*s23^4 + 24*s23^5) + 
              s12^2*(-36*s13^5 - 126*s13^4*s23 - 56*s13^3*s23^2 + 
                38*s13^2*s23^3 + 23*s13*s23^4 + 31*s23^5)) + 
            p2q^4*p3q^2*(-18*s12^6*s23 + 2*s12^5*s23*(18*s13 + 25*s23) - 
              s12^4*(108*s13^3 + 234*s13^2*s23 + 183*s13*s23^2 + 26*s23^3) + 
              2*s13*s23^2*(-5*s13^4 + 17*s13^3*s23 + 11*s13^2*s23^2 - 
                10*s13*s23^3 + s23^4) + s12^3*(180*s13^4 + 702*s13^3*s23 + 
                919*s13^2*s23^2 + 577*s13*s23^3 + 62*s23^4) + 
              s12*s13*(-36*s13^5 + 90*s13^4*s23 + 251*s13^3*s23^2 + 
                203*s13^2*s23^3 + 183*s13*s23^4 + 55*s23^5) + 
              s12^2*(252*s13^5 + 360*s13^4*s23 + 441*s13^3*s23^2 + 
                336*s13^2*s23^3 + 161*s13*s23^4 + 156*s23^5))) + 
          p1q^2*(p2q^5*s23^2*(s12^4*(s13 - s23) + 2*s12*s13*(s13 - 2*s23)*
               (s13 + s23)^2 + 2*s12^3*(s13^2 - s23^2) + s13*(s13 + s23)^2*(
                s13^2 - 4*s13*s23 + s23^2) + s12^2*(2*s13^3 + 3*s13^2*s23 - 
                6*s13*s23^2 - s23^3)) - p3q^5*s23*(8*s12^5*s23 + 
              s13^2*s23^2*(s13 + s23)^2 - s12^4*(9*s13^2 + 38*s13*s23 + 
                16*s23^2) - 2*s12^3*(9*s13^3 + 28*s13^2*s23 + 27*s13*s23^2 + 
                24*s23^3) + s12^2*(-9*s13^4 - 2*s13^3*s23 + 24*s13^2*s23^2 + 
                6*s13*s23^3 - 16*s23^4) + 2*s12*s23*(4*s13^4 + 9*s13^3*s23 + 
                12*s13^2*s23^2 + 11*s13*s23^3 + 4*s23^4)) + 
            p2q*p3q^4*(-36*s12^6*s13 + 4*s12^5*(9*s13^2 + 45*s13*s23 + 
                23*s23^2) + s12^3*s23*(207*s13^3 + 186*s13^2*s23 + 
                100*s13*s23^2 + 15*s23^3) + s12^4*(72*s13^3 + 27*s13^2*s23 + 
                204*s13*s23^2 + 23*s23^3) + s13*s23^2*(s13^4 + 3*s13^3*s23 - 
                12*s13^2*s23^2 - 11*s13*s23^3 + 3*s23^4) + s12^2*s23*(
                45*s13^4 + 135*s13^3*s23 + 9*s13^2*s23^2 - 61*s13*s23^3 + 
                41*s23^4) + s12*s23*(9*s13^5 - 10*s13^4*s23 - 17*s13^3*
                 s23^2 + s13^2*s23^3 - 74*s13*s23^4 - 43*s23^5)) + 
            p2q^2*p3q^3*(4*s12^5*(36*s13^2 + 72*s13*s23 + 41*s23^2) - 
              3*s12^4*(12*s13^3 + 96*s13^2*s23 + 32*s13*s23^2 + 25*s23^3) + 
              s12^3*(-180*s13^4 + 243*s13^3*s23 + 389*s13^2*s23^2 + 
                265*s13*s23^3 + 21*s23^4) + s12^2*s23*(-126*s13^4 + 
                122*s13^3*s23 + 206*s13^2*s23^2 + 136*s13*s23^3 + 
                205*s23^4) + s23^2*(2*s13^5 + 21*s13^4*s23 - 28*s13^3*s23^2 - 
                37*s13^2*s23^3 + 12*s13*s23^4 + 2*s23^5) - 
              s12*s23*(-27*s13^5 + 57*s13^4*s23 + 122*s13^3*s23^2 - 
                18*s13^2*s23^3 + 69*s13*s23^4 + 53*s23^5)) + 
            p2q^3*p3q^2*(2*s12^5*s23*(27*s13 + 46*s23) - 3*s12^4*(60*s13^3 + 
                138*s13^2*s23 + 94*s13*s23^2 + 29*s23^3) + s12^3*(-36*s13^4 + 
                414*s13^3*s23 + 698*s13^2*s23^2 + 454*s13*s23^3 + 80*s23^4) + 
              2*s12*s23*(72*s13^5 + 96*s13^4*s23 + 2*s13^3*s23^2 - 
                13*s13^2*s23^3 - 39*s13*s23^4 - 21*s23^5) + s23^2*(2*s13^5 + 
                33*s13^4*s23 - 24*s13^3*s23^2 - 47*s13^2*s23^3 + 
                10*s13*s23^4 + 2*s23^5) + s12^2*(144*s13^5 + 54*s13^4*s23 + 
                110*s13^3*s23^2 + 134*s13^2*s23^3 + 126*s13*s23^4 + 
                215*s23^5)) + p2q^4*p3q*(s12^5*s23*(18*s13 + 19*s23) + 
              s12^4*s23*(36*s13^2 + 26*s13*s23 - 15*s23^2) + 2*s13*s23^2*(
                s13^4 + 7*s13^3*s23 - 6*s13^2*s23^2 - 11*s13*s23^3 + s23^4) + 
              s12^3*(72*s13^4 + 360*s13^3*s23 + 558*s13^2*s23^2 + 
                316*s13*s23^3 + 42*s23^4) + s12^2*(36*s13^5 + 72*s13^4*s23 + 
                186*s13^3*s23^2 + 153*s13^2*s23^3 + 46*s13*s23^4 + 
                61*s23^5) + s12*(-36*s13^6 + 54*s13^5*s23 + 249*s13^4*s23^2 + 
                226*s13^3*s23^3 + 74*s13^2*s23^4 - 20*s13*s23^5 - 
                15*s23^6)))))/(6*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
         s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - ((s12 + s13 + s23)*
         (-2*p1q^6*s23^3*(s12 + s13 + s23)*
           (-(p2q*s23*(s12^2 + s12*s23 + s13*(s13 + s23))) + 
            p3q*(-(s13*s23*(s13 + s23)) + s12^2*(9*s13 + 8*s23) + 
              s12*(-9*s13^2 + 8*s23^2))) + 2*p1q^5*s23^2*(s12 + s13 + s23)*
           (p2q^2*s23*(-s12^3 + s12^2*(-2*s13 + s23) - s12*(s13^2 + 
                4*s13*s23 - 2*s23^2) + s13*(-2*s13^2 + s13*s23 + 3*s23^2)) + 
            p2q*p3q*(-3*s12^3*s23 + s12^2*(36*s13^2 + 15*s13*s23 - 
                16*s23^2) + s13*s23*(-3*s13^2 + 2*s13*s23 + 5*s23^2) + 
              s12*(-18*s13^3 + 51*s13^2*s23 + 46*s13*s23^2 - 13*s23^3)) + 
            p3q^2*(s12^3*(9*s13 + 16*s23) + s13*s23*(-s13^2 + s13*s23 + 
                2*s23^2) - 2*s12^2*(9*s13^2 + 23*s13*s23 + 4*s23^2) - 
              s12*(9*s13^3 - 7*s13^2*s23 + 13*s13*s23^2 + 24*s23^3))) + 
          p1q^4*s23*(p2q^3*s23*(2*s12^4*(s13 - 2*s23) + s12^3*(4*s13^2 - 
                6*s13*s23 - 5*s23^2) + s12*(s13 + s23)^2*(4*s13^2 - 
                14*s13*s23 + 3*s23^2) + s13*(s13 + s23)^2*(2*s13^2 - 
                12*s13*s23 + 7*s23^2) + s12^2*(4*s13^3 - 23*s13*s23^2 + 
                2*s23^3)) - p3q^3*(16*s12^5*s23 + s13*(4*s13 - 3*s23)*s23^
                2*(s13 + s23)^2 - 2*s12^4*(9*s13^2 + 47*s13*s23 + 32*s23^2) - 
              s12^3*(36*s13^3 + 94*s13^2*s23 + 75*s13*s23^2 + 120*s23^3) + 
              s12^2*(-18*s13^4 + 50*s13^3*s23 + 162*s13^2*s23^2 + 
                129*s13*s23^3 + 16*s23^4) + s12*s23*(34*s13^4 + 
                51*s13^3*s23 + 68*s13^2*s23^2 + 107*s13*s23^3 + 56*s23^4)) + 
            p2q*p3q^2*(4*s12^5*(9*s13 + 10*s23) + s12^4*(-18*s13^2 + 
                28*s13*s23 + 112*s23^2) + s12^3*(-18*s13^3 + 48*s13^2*s23 - 
                68*s13*s23^2 + 47*s23^3) + s13*s23*(2*s13^4 - 10*s13^3*s23 - 
                15*s13^2*s23^2 + 11*s13*s23^3 + 14*s23^4) - 
              2*s12^2*(9*s13^4 + 39*s13^3*s23 - 47*s13^2*s23^2 + 
                6*s13*s23^3 + 53*s23^4) + s12*(18*s13^5 - 100*s13^4*s23 + 
                4*s13^3*s23^2 + 274*s13^2*s23^3 + 70*s13*s23^4 - 81*s23^5)) + 
            p2q^2*p3q*(2*s12^4*s23*(40*s13 + 31*s23) + s12^5*(36*s13 + 
                38*s23) + s12^3*(-54*s13^3 + 138*s13^2*s23 + 202*s13*s23^2 + 
                21*s23^3) - 2*s12^2*(36*s13^4 + 120*s13^3*s23 - 101*s13^2*
                 s23^2 - 146*s13*s23^3 + 8*s23^4) + s13*s23*(4*s13^4 - 
                14*s13^3*s23 - 25*s13^2*s23^2 + 11*s13*s23^3 + 18*s23^4) + 
              s12*(18*s13^5 - 224*s13^4*s23 - 302*s13^3*s23^2 + 114*s13^2*
                 s23^3 + 160*s13*s23^4 - 13*s23^5))) - 
          (p2q + p3q)*(p2q^6*s13^2*(s12 + s13)*s23^2*(s12^2 - 
              (s13 + s23)^2) + p3q^6*s12^2*s23*(s12^3*(9*s13 + 8*s23) + 
              s13*s23*(s13^2 - s23^2) + s12^2*(18*s13^2 + 17*s13*s23 + 
                16*s23^2) + s12*(9*s13^3 + 10*s13^2*s23 + 7*s13*s23^2 + 
                8*s23^3)) + p2q*p3q^5*s12*(36*s12^5*(s13 + s23) + 
              s12^3*s23*(36*s13^2 + 32*s13*s23 + 41*s23^2) + 
              s12^4*(36*s13^2 + 63*s13*s23 + 66*s23^2) + s13*s23^2*(
                -2*s13^3 + s13^2*s23 + s13*s23^2 + 2*s23^3) + 
              s12^2*s23*(-45*s13^3 - 38*s13^2*s23 - 9*s13*s23^2 + 4*s23^3) - 
              s12*s23*(18*s13^4 + 42*s13^3*s23 + 22*s13^2*s23^2 + 
                4*s13*s23^3 + 7*s23^4)) + p2q^3*p3q^3*(18*s12^6*s23 - 
              2*s12^5*s23*(36*s13 + 11*s23) + s13^3*s23^2*(5*s13^2 + 
                s13*s23 - 4*s23^2) + s12^4*(216*s13^3 + 342*s13^2*s23 + 
                133*s13*s23^2 - 26*s23^3) + s12^2*s13*s23*(198*s13^3 + 
                296*s13^2*s23 + 131*s13*s23^2 + 31*s23^3) + s12*s13^2*s23*(
                -9*s13^3 + 25*s13^2*s23 + 89*s13*s23^2 + 40*s23^3) + 
              s12^3*(216*s13^4 + 423*s13^3*s23 + 323*s13^2*s23^2 + 
                116*s13*s23^3 + 14*s23^4)) - p2q^4*p3q^2*
             (s12^5*s23*(36*s13 + 17*s23) + s12^4*s23*(-36*s13^2 - 
                27*s13*s23 + 10*s23^2) - s13^2*s23^2*(8*s13^3 + 9*s13^2*s23 + 
                3*s13*s23^2 + 2*s23^3) + s12^3*(144*s13^4 + 288*s13^3*s23 + 
                219*s13^2*s23^2 + 58*s13*s23^3 - 7*s23^4) + s12*s13*s23*(
                72*s13^4 + 124*s13^3*s23 + 30*s13^2*s23^2 - 17*s13*s23^3 - 
                2*s23^4) + s12^2*s13*(144*s13^4 + 288*s13^3*s23 + 
                215*s13^2*s23^2 + 87*s13*s23^3 + 15*s23^4)) + 
            p2q^2*p3q^4*(36*s12^6*s23 + s13^3*s23^2*(s13^2 - s13*s23 - 
                2*s23^2) - 2*s12^5*(72*s13^2 + 90*s13*s23 + 5*s23^2) - 
              s12^3*s23*(171*s13^3 + 215*s13^2*s23 + 129*s13*s23^2 + 
                42*s23^3) - s12^4*(144*s13^3 + 270*s13^2*s23 + 223*s13*
                 s23^2 + 72*s23^3) + s12*s13*s23*(9*s13^4 + 27*s13^3*s23 + 
                32*s13^2*s23^2 - 6*s13*s23^3 - 7*s23^4) - s12^2*s23*(
                -36*s13^4 + 12*s13^3*s23 + 69*s13^2*s23^2 + 37*s13*s23^3 + 
                16*s23^4)) + p2q^5*p3q*s13*(-2*s12^3*s23^2*(3*s13 + 4*s23) + 
              2*s12^4*s23*(9*s13 + 8*s23) + s13*s23^2*(3*s13^3 + 
                5*s13^2*s23 + 4*s13*s23^2 + 2*s23^3) + s12^2*(36*s13^4 + 
                90*s13^3*s23 + 97*s13^2*s23^2 + 50*s13*s23^3 + 10*s23^4) + 
              s12*(36*s13^5 + 72*s13^4*s23 + 50*s13^3*s23^2 + 27*s13^2*
                 s23^3 + 14*s13*s23^4 + 2*s23^5))) + 
          p1q^3*(p2q^4*s23^2*(s12^4*(4*s13 - 3*s23) + s12^3*(6*s13^2 + 
                3*s13*s23 - 5*s23^2) + s12*(s13 + s23)^2*(10*s13^2 - 
                13*s13*s23 + s23^2) + 2*s13*(s13 + s23)^2*(3*s13^2 - 
                7*s13*s23 + 2*s23^2) + s12^2*(6*s13^3 + 15*s13^2*s23 - 
                16*s13*s23^2 - s23^3)) - p3q^4*s23*(s13*(3*s13 - s23)*s23^
                2*(s13 + s23)^2 + 6*s12^5*(3*s13 + 8*s23) - s12^4*s23*(
                109*s13 + 16*s23) - s12^3*(54*s13^3 + 213*s13^2*s23 + 
                196*s13*s23^2 + 144*s23^3) + s12^2*(-36*s13^4 - 
                33*s13^3*s23 + 39*s13^2*s23^2 + 6*s13*s23^3 - 48*s23^4) + 
              s12*s23*(23*s13^4 + 42*s13^3*s23 + 61*s13^2*s23^2 + 
                74*s13*s23^3 + 32*s23^4)) + p2q*p3q^3*(-36*s12^6*s23 + 
              6*s12^5*(6*s13^2 + 27*s13*s23 + 5*s23^2) - s13*s23^3*(
                13*s13^3 + 28*s13^2*s23 + 8*s13*s23^2 - 7*s23^3) + 
              s12^4*(36*s13^3 + 126*s13^2*s23 + 294*s13*s23^2 + 251*s23^3) + 
              s12^3*s23*(90*s13^3 + 286*s13^2*s23 + 104*s13*s23^2 + 
                281*s23^3) - s12^2*s23*(90*s13^4 + 218*s13^3*s23 + 
                159*s13^2*s23^2 + 99*s13*s23^3 - 13*s23^4) - 
              s12*s23^2*(204*s13^4 + 229*s13^3*s23 - 33*s13^2*s23^2 + 
                32*s13*s23^3 + 83*s23^4)) + p2q^2*p3q^2*(-36*s12^6*s23 + 
              6*s12^5*s23*(30*s13 + 19*s23) + s12^4*(-72*s13^3 - 
                162*s13^2*s23 + 112*s13*s23^2 + 279*s23^3) + 3*s13*s23^2*(
                2*s13^4 - 3*s13^3*s23 - 13*s13^2*s23^2 - 2*s13*s23^3 + 
                6*s23^4) + s12^2*s23*(-306*s13^4 - 682*s13^3*s23 + 
                120*s13^2*s23^2 + 388*s13*s23^3 + 21*s23^4) + 
              s12^3*(-72*s13^4 - 288*s13^3*s23 + 110*s13^2*s23^2 + 
                207*s13*s23^3 + 195*s23^4) + s12*s23*(108*s13^5 - 
                320*s13^4*s23 - 603*s13^3*s23^2 + 100*s13^2*s23^3 + 
                219*s13*s23^4 - 45*s23^5)) + p2q^3*p3q*
             (72*s12^5*s23*(s13 + s23) + s12^4*s23*(-72*s13^2 + 48*s13*s23 + 
                95*s23^2) + s13*s23^2*(12*s13^4 - s13^3*s23 - 34*s13^2*
                 s23^2 - 5*s13*s23^3 + 16*s23^4) + s12^3*(36*s13^4 - 
                36*s13^3*s23 + 34*s13^2*s23^2 + 149*s13*s23^3 + 35*s23^4) + 
              s12^2*(36*s13^5 + 36*s13^4*s23 - 434*s13^3*s23^2 - 
                195*s13^2*s23^3 + 150*s13*s23^4 + s23^5) - 
              s12*s23*(-180*s13^5 + 48*s13^4*s23 + 544*s13^3*s23^2 + 
                252*s13^2*s23^3 - 49*s13*s23^4 + 11*s23^5))) + 
          p1q*(p2q^6*s13*s23^2*(s12^4 - s12^3*(s13 - 3*s23) + 
              2*s13*(2*s13 - s23)*(s13 + s23)^2 + s12*(5*s13 - s23)*
               (s13 + s23)^2 + s12^2*(-s13^2 + 6*s13*s23 + s23^2)) + 
            p3q^6*s12*s23*(-(s12^4*(27*s13 + 32*s23)) + s12^2*s13*(-9*s13^2 + 
                35*s13*s23 + 36*s23^2) - s12^3*(45*s13^2 + 22*s13*s23 + 
                48*s23^2) + s13*s23*(s13^3 + 3*s13^2*s23 + s13*s23^2 - 
                s23^3) + s12*(9*s13^4 + 26*s13^3*s23 + 33*s13^2*s23^2 + 
                30*s13*s23^3 + 16*s23^4)) - p2q^3*p3q^3*(90*s12^6*s23 - 
              2*s12^5*(54*s13^2 + 243*s13*s23 + 68*s23^2) + 
              s12^4*(324*s13^3 + 522*s13^2*s23 - 52*s13*s23^2 - 264*s23^3) + 
              s13^2*s23^2*(17*s13^3 + 6*s13^2*s23 + 6*s13*s23^2 + 17*s23^3) + 
              s12^3*(324*s13^4 + 684*s13^3*s23 + 281*s13^2*s23^2 - 
                34*s13*s23^3 - 120*s23^4) + s12*s13*s23*(-126*s13^4 + 
                101*s13^3*s23 + 542*s13^2*s23^2 + 228*s13*s23^3 - 36*s23^4) + 
              s12^2*(-108*s13^5 + 540*s13^4*s23 + 1037*s13^3*s23^2 + 
                322*s13^2*s23^3 - 96*s13*s23^4 - 82*s23^5)) + 
            p2q^2*p3q^4*(-36*s12^6*(s13 + 5*s23) + 2*s12^5*(126*s13^2 + 
                225*s13*s23 - 53*s23^2) - s13^2*s23^2*(6*s13^3 - s13^2*s23 + 
                s13*s23^2 + 8*s23^3) + s12^4*(180*s13^3 + 459*s13^2*s23 + 
                483*s13*s23^2 + 115*s23^3) + s12^2*s23*(-243*s13^4 - 
                85*s13^3*s23 + 253*s13^2*s23^2 + 139*s13*s23^3 + 85*s23^4) + 
              s12^3*(-108*s13^4 + 315*s13^3*s23 + 678*s13^2*s23^2 + 
                300*s13*s23^3 + 133*s23^4) - s12*s23*(9*s13^5 + 144*s13^4*
                 s23 + 215*s13^3*s23^2 - 6*s13^2*s23^3 - 36*s13*s23^4 + 
                7*s23^5)) - p2q*p3q^5*(36*s12^6*(2*s13 + 3*s23) + 
              9*s12^5*(4*s13^2 + 9*s13*s23 + 22*s23^2) + s13^2*s23^2*(s13^3 + 
                s13^2*s23 + 2*s13*s23^2 + 2*s23^3) - s12^3*s23*(162*s13^3 + 
                224*s13^2*s23 + 78*s13*s23^2 + 41*s23^3) + s12^4*(-36*s13^3 + 
                18*s13^2*s23 - 7*s13*s23^2 + 105*s23^3) - s12^2*s23*(
                18*s13^4 + 90*s13^3*s23 + 51*s13^2*s23^2 + 11*s13*s23^3 + 
                49*s23^4) + s12*s23*(9*s13^5 + 38*s13^4*s23 + 51*s13^3*
                 s23^2 + 21*s13^2*s23^3 + 19*s13*s23^4 + 7*s23^5)) + 
            p2q^5*p3q*(s12^5*s23*(18*s13 + 17*s23) + s12^4*s23*(-54*s13^2 - 
                29*s13*s23 + 17*s23^2) + s13*s23^3*(3*s13^3 - 4*s13^2*s23 - 
                5*s13*s23^2 + 2*s23^3) + s12^3*(36*s13^4 + 126*s13^3*s23 + 
                153*s13^2*s23^2 + 84*s13*s23^3 + 7*s23^4) + 
              s12^2*(-36*s13^5 + 18*s13^4*s23 + 35*s13^3*s23^2 + 
                33*s13^2*s23^3 + 33*s13*s23^4 + 7*s23^5) + 
              s12*s13*(-72*s13^5 + 196*s13^3*s23^2 + 123*s13^2*s23^3 + 
                11*s13*s23^4 + 8*s23^5)) + p2q^4*p3q^2*(-18*s12^6*s23 + 
              12*s12^5*s23*(12*s13 + 7*s23) - 2*s12^4*(54*s13^3 + 
                216*s13^2*s23 + 108*s13*s23^2 - 41*s23^3) - s13*s23^2*(
                16*s13^4 + 11*s13^3*s23 + 11*s13^2*s23^2 + 14*s13*s23^3 - 
                2*s23^4) + 2*s12^3*(90*s13^4 + 81*s13^3*s23 + 43*s13^2*
                 s23^2 + 14*s13*s23^3 + 4*s23^4) + s12*s13*(-36*s13^5 + 
                270*s13^4*s23 + 438*s13^3*s23^2 - 42*s13^2*s23^3 - 
                131*s13*s23^4 + 18*s23^5) + s12^2*(252*s13^5 + 306*s13^4*
                 s23 - 132*s13^3*s23^2 - 107*s13^2*s23^3 + 60*s13*s23^4 + 
                28*s23^5))) + p1q^2*(p2q^5*s23^2*(s12^4*(3*s13 - s23) + 
              2*s12*s13*(5*s13 - 3*s23)*(s13 + s23)^2 + 2*s12^3*(s13^2 + 
                3*s13*s23 - s23^2) + s13*(s13 + s23)^2*(7*s13^2 - 8*s13*s23 + 
                s23^2) + s12^2*(2*s13^3 + 15*s13^2*s23 - 4*s13*s23^2 - 
                s23^3)) - p3q^5*s23*(s13^2*s23^2*(s13 + s23)^2 + 
              4*s12^5*(9*s13 + 14*s23) + s12^4*(45*s13^2 - 28*s13*s23 + 
                48*s23^2) - 2*s12^3*(9*s13^3 + 73*s13^2*s23 + 70*s13*s23^2 + 
                32*s23^3) + 2*s12*s23*(3*s13^4 + 6*s13^3*s23 + 11*s13^2*
                 s23^2 + 12*s13*s23^3 + 4*s23^4) - s12^2*(27*s13^4 + 
                56*s13^3*s23 + 42*s13^2*s23^2 + 52*s13*s23^3 + 48*s23^4)) - 
            p2q^3*p3q^2*(36*s12^6*s23 - 6*s12^5*s23*(51*s13 + 32*s23) + 
              s12^4*(180*s13^3 + 468*s13^2*s23 - 29*s13*s23^2 - 313*s23^3) + 
              s12^3*(36*s13^4 + 378*s13^3*s23 + 50*s13^2*s23^2 - 
                223*s13*s23^3 - 180*s23^4) + s13*s23^2*(2*s13^4 + 
                2*s13^3*s23 + 34*s13^2*s23^2 + 25*s13*s23^3 - 9*s23^4) + 
              s12^2*(-144*s13^5 + 180*s13^4*s23 + 915*s13^3*s23^2 + 
                256*s13^2*s23^3 - 294*s13*s23^4 - 81*s23^5) + 
              s12*s23*(-360*s13^5 - 122*s13^4*s23 + 672*s13^3*s23^2 + 
                302*s13^2*s23^3 - 91*s13*s23^4 + 14*s23^5)) + 
            p2q^2*p3q^3*(-144*s12^6*s23 + 2*s12^5*(72*s13^2 + 243*s13*s23 + 
                17*s23^2) + s12^4*(-36*s13^3 + 54*s13^2*s23 + 374*s13*s23^2 + 
                331*s23^3) - s13*s23^2*(6*s13^4 + 11*s13^3*s23 + 
                36*s13^2*s23^2 + 27*s13*s23^3 - 4*s23^4) + s12^2*s23*(
                -576*s13^4 - 842*s13^3*s23 - 31*s13^2*s23^2 + 256*s13*s23^3 + 
                137*s23^4) + s12^3*(-180*s13^4 - 225*s13^3*s23 + 
                336*s13^2*s23^2 + 255*s13*s23^3 + 317*s23^4) - 
              s12*s23*(-45*s13^5 + 376*s13^4*s23 + 677*s13^3*s23^2 + 
                84*s13^2*s23^3 - 109*s13*s23^4 + 27*s23^5)) + 
            p2q*p3q^4*(-36*s12^6*(s13 + 3*s23) + 2*s12^5*(18*s13^2 + 
                63*s13*s23 - 67*s23^2) + s12^4*(72*s13^3 + 225*s13^2*s23 + 
                359*s13*s23^2 + 85*s23^3) + s12^3*s23*(315*s13^3 + 
                646*s13^2*s23 + 330*s13*s23^2 + 247*s23^3) - 
              s13*s23^2*(s13^4 + 3*s13^3*s23 + 10*s13^2*s23^2 + 6*s13*s23^3 - 
                2*s23^4) + s12^2*s23*(-9*s13^4 + 116*s13^3*s23 + 
                130*s13^2*s23^2 + 49*s13*s23^3 + 99*s23^4) - 
              s12*s23*(9*s13^5 + 110*s13^4*s23 + 124*s13^3*s23^2 + 
                5*s13^2*s23^3 + 34*s13*s23^4 + 37*s23^5)) + 
            p2q^4*p3q*(s12^5*s23*(54*s13 + 53*s23) + s12^4*s23*(-108*s13^2 - 
                38*s13*s23 + 51*s23^2) + s13*s23^2*(10*s13^4 + 13*s13^3*s23 - 
                14*s13^2*s23^2 - 9*s13*s23^3 + 8*s23^4) + s12^3*(72*s13^4 + 
                144*s13^3*s23 + 125*s13^2*s23^2 + 83*s13*s23^3 + 8*s23^4) + 
              s12^2*(36*s13^5 + 216*s13^4*s23 - 20*s13^3*s23^2 - 
                95*s13^2*s23^3 + 40*s13*s23^4 + 3*s23^5) - s12*(36*s13^6 - 
                234*s13^5*s23 - 386*s13^4*s23^2 + 48*s13^3*s23^3 + 
                158*s13^2*s23^4 + 7*s13*s23^5 + 7*s23^6)))))/
        (6*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p2]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*(p2q^2 + p3q^2)*(s12 + s13 + s23)^2*(-5*p3q^2*s12^2 + 
          4*(p1q + p2q)*(s13 + s23)*(p2q*s13 + p1q*s23) + 
          p3q*s12*(p1q*(5*s13 + s23) + p2q*(s13 + 5*s23))))/
        (27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23) - 
       ((2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(s12 + s13 + s23)^2*
         (-5*p3q^2*s12^2 + 4*(p1q + p2q)*(s13 + s23)*(p2q*s13 + p1q*s23) + 
          p3q*s12*(p1q*(5*s13 + s23) + p2q*(s13 + 5*s23))))/
        (27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (-1/6*(ep^2*p3q*(s12 + s13 + s23)*
          (p3q^3*s12*(s12^3 + s12^2*(29*s13 - s23) - 8*s13*(s13 - 3*s23)*
              s23 - 2*s12*(4*s13^2 - 27*s13*s23 + s23^2)) + 
           p2q^3*s13*(s12^2*(s13 + s23) + s12*(11*s13^2 - 3*s23^2) - 
             2*s13*(13*s13^2 + 14*s13*s23 + s23^2)) - 
           p1q^3*(s12^2*(36*s13^2 + 27*s13*s23 - s23^2) + 
             2*s23^2*(13*s13^2 + 14*s13*s23 + s23^2) + 
             s12*s23*(63*s13^2 + 56*s13*s23 + s23^2)) + 
           p2q*p3q^2*(s12^4 + s12^3*(9*s13 - 2*s23) + 8*s13*s23*
              (s13^2 - s13*s23 - 2*s23^2) - s12^2*(84*s13^2 - s13*s23 + s23^
                2) + 2*s12*(8*s13^3 - 44*s13^2*s23 - 15*s13*s23^2 + s23^3)) + 
           p2q^2*p3q*(-(s12^3*(2*s13 + s23)) + s12^2*(-21*s13^2 + 2*s13*s23 + 
               s23^2) + 2*s13*(-4*s13^3 + 17*s13^2*s23 + 22*s13*s23^2 + s23^
                3) + s12*(81*s13^3 + 28*s13^2*s23 - 3*s13*s23^2 + 2*s23^3)) + 
           p1q^2*(p3q*(s12^3*(27*s13 - 2*s23) - 2*s23^2*(25*s13^2 + 
                 26*s13*s23 + s23^2) + s12^2*(-81*s13^2 + 3*s23^2) + s12*s23*
                (-133*s13^2 - 82*s13*s23 + 3*s23^2)) + 
             p2q*(s12^2*(-45*s13^2 - 25*s13*s23 + 4*s23^2) - 2*s23*
                (-26*s13^3 - 15*s13^2*s23 + 12*s13*s23^2 + s23^3) + s12*
                (63*s13^3 - 18*s13^2*s23 - 55*s13*s23^2 + 2*s23^3))) + 
           p1q*(p3q^2*(s12^4 + s12^3*(56*s13 - 3*s23) - 24*s13*s23^2*
                (s13 + s23) + s12^2*s13*(-53*s13 + 81*s23) - 2*s12*s23*
                (39*s13^2 + s13*s23 - 2*s23^2)) + p2q*p3q*
              (s12^3*(7*s13 - 5*s23) - 10*s12^2*s13*(13*s13 + 3*s23) - 2*s23*
                (-29*s13^3 - 9*s13^2*s23 + 21*s13*s23^2 + s23^3) + s12*
                (79*s13^3 - 111*s13^2*s23 - 91*s13*s23^2 + 3*s23^3)) + 
             p2q^2*(-26*s13^4 + 24*s13^3*s23 + 54*s13^2*s23^2 + 4*s13*s23^3 + 
               s12^2*(-8*s13^2 + 3*s13*s23 + 3*s23^2) + s12*(74*s13^3 + 
                 45*s13^2*s23 - 2*s13*s23^2 + 3*s23^3)))))/
         ((p1q + p2q + p3q)*s12*s13*(-(p3q^2*s12*(s12 + s23)) - 
           p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
           p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
           p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
            (2*s13 + s23))) - ((s12 + s13 + s23)*
         (2*p1q^6*s23^3*(s12 + s13 + s23)*(p3q*s23*(s12^2 + s12*s23 + 
              s13*(s13 + s23)) + p2q*(-8*s13*s23*(s13 + s23) + 
              s12^2*(9*s13 + s23) + s12*(-9*s13^2 + s23^2))) - 
          2*p1q^5*s23^2*(s12 + s13 + s23)*(p3q^2*s23*(2*s12^3 + 
              s12^2*(s13 - s23) + s12*(2*s13^2 + 4*s13*s23 - 3*s23^2) + 
              s13*(s13^2 - s13*s23 - 2*s23^2)) + p2q*p3q*
             (3*s12^3*(6*s13 + s23) - s12^2*(36*s13^2 + 51*s13*s23 + 
                2*s23^2) - s12*s23*(15*s13^2 + 46*s13*s23 + 5*s23^2) + 
              s13*s23*(3*s13^2 + 16*s13*s23 + 13*s23^2)) + 
            p2q^2*(s12^3*(9*s13 + s23) + s12^2*(18*s13^2 - 7*s13*s23 - 
                s23^2) + 8*s13*s23*(-2*s13^2 + s13*s23 + 3*s23^2) + 
              s12*(-9*s13^3 + 46*s13^2*s23 + 13*s13*s23^2 - 2*s23^3))) - 
          (p2q + p3q)*(-(p3q^6*s12^2*(s12 + s13)*s23^2*(s12^2 - s13^2 + 2*s12*
                s23 + s23^2)) + p2q^6*s13^2*s23*(s12*(9*s13 - s23)*
               (s13 + s23)^2 + 8*s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 
                s23) + 2*s12^2*s13*(9*s13 + 5*s23)) + p2q^3*p3q^3*
             (s12^5*s23*(-9*s13 + 5*s23) + s12^4*(216*s13^3 + 198*s13^2*s23 + 
                25*s13*s23^2 + s23^3) + 2*s13^3*s23*(9*s13^3 - 11*s13^2*s23 - 
                13*s13*s23^2 + 7*s23^3) + s12*s13^2*s23*(-72*s13^3 + 
                133*s13^2*s23 + 116*s13*s23^2 + 31*s23^3) + s12^2*s13*s23*(
                342*s13^3 + 323*s13^2*s23 + 131*s13*s23^2 + 40*s23^3) + 
              s12^3*(216*s13^4 + 423*s13^3*s23 + 296*s13^2*s23^2 + 
                89*s13*s23^3 - 4*s23^4)) - p2q^2*p3q^4*
             (s13^3*s23^2*(17*s13^2 + 10*s13*s23 - 7*s23^2) + 
              8*s12^5*(18*s13^2 + 9*s13*s23 - s23^2) + s12^4*(144*s13^3 + 
                288*s13^2*s23 + 124*s13*s23^2 - 9*s23^3) + s12^3*s23*(
                288*s13^3 + 215*s13^2*s23 + 30*s13*s23^2 - 3*s23^3) + 
              s12^2*s23*(-36*s13^4 + 219*s13^3*s23 + 87*s13^2*s23^2 - 
                17*s13*s23^3 - 2*s23^4) + s12*s13*s23*(36*s13^4 - 
                27*s13^3*s23 + 58*s13^2*s23^2 + 15*s13*s23^3 - 2*s23^4)) + 
            p2q*p3q^5*s12*(36*s12^5*s13 + 5*s12^3*s23*(18*s13^2 + 
                10*s13*s23 + s23^2) + 3*s12^4*(12*s13^2 + 24*s13*s23 + 
                s23^2) + s12^2*s23^2*(97*s13^2 + 27*s13*s23 + 4*s23^2) + 
              2*s13*s23^2*(8*s13^3 - 4*s13^2*s23 + 5*s13*s23^2 + s23^3) + 
              2*s12*s23*(9*s13^4 - 3*s13^3*s23 + 25*s13^2*s23^2 + 
                7*s13*s23^3 + s23^4)) + p2q^4*p3q^2*(s12^5*s23*(9*s13 + 
                s23) + s12^4*s23*(36*s13^2 + 27*s13*s23 - s23^2) + 
              2*s13^2*s23*(18*s13^4 - 5*s13^3*s23 - 36*s13^2*s23^2 - 
                21*s13*s23^3 - 8*s23^4) - s12^3*(144*s13^4 + 171*s13^3*s23 + 
                12*s13^2*s23^2 - 32*s13*s23^3 + 2*s23^4) - s12^2*s13*(
                144*s13^4 + 270*s13^3*s23 + 215*s13^2*s23^2 + 69*s13*s23^3 + 
                6*s23^4) - s12*s13*s23*(180*s13^4 + 223*s13^3*s23 + 
                129*s13^2*s23^2 + 37*s13*s23^3 + 7*s23^4)) + 
            p2q^5*p3q*s13*(-2*s12^4*s23*(9*s13 + s23) + s12^3*s23*(
                -45*s13^2 - 42*s13*s23 + s23^2) + s13*s23*(36*s13^4 + 
                66*s13^3*s23 + 41*s13^2*s23^2 + 4*s13*s23^3 - 7*s23^4) + 
              s12^2*(36*s13^4 + 36*s13^3*s23 - 38*s13^2*s23^2 - 
                22*s13*s23^3 + s23^4) + s12*(36*s13^5 + 63*s13^4*s23 + 
                32*s13^3*s23^2 - 9*s13^2*s23^3 - 4*s13*s23^4 + 2*s23^5))) + 
          p1q^4*s23*(p2q^3*(2*s12^4*(9*s13^2 - 17*s13*s23 - 2*s23^2) + 
              s12*s23*(s13 + s23)^2*(94*s13^2 - 113*s13*s23 + 3*s23^2) - 
              8*s13*s23*(s13 + s23)^2*(2*s13^2 - 12*s13*s23 + 7*s23^2) + 
              s12^3*(36*s13^3 - 50*s13^2*s23 - 51*s13*s23^2 - 5*s23^3) + 
              2*s12^2*(9*s13^4 + 47*s13^3*s23 - 81*s13^2*s23^2 - 
                34*s13*s23^3 + s23^4)) + p3q^3*s23*(2*s12^5 + 
              4*s12^4*(s13 - 2*s23) - s13*(4*s13 - 3*s23)*s23*(s13 + s23)^2 + 
              s12^3*(4*s13^2 - 6*s13*s23 - 15*s23^2) + s12^2*(4*s13^3 - 
                21*s13*s23^2 + 2*s23^3) + s12*(2*s13^4 - 6*s13^3*s23 - 
                23*s13^2*s23^2 - 8*s13*s23^3 + 7*s23^4)) + 
            p2q^2*p3q*(2*s12^5*(9*s13 + s23) - 2*s12^4*(9*s13^2 + 
                50*s13*s23 + 5*s23^2) - s12^3*(18*s13^3 + 78*s13^2*s23 - 
                4*s13*s23^2 + 15*s23^3) + s13*s23*(40*s13^4 + 112*s13^3*s23 + 
                47*s13^2*s23^2 - 106*s13*s23^3 - 81*s23^4) + 
              s12^2*(-18*s13^4 + 48*s13^3*s23 + 94*s13^2*s23^2 + 
                274*s13*s23^3 + 11*s23^4) + 2*s12*(18*s13^5 + 14*s13^4*s23 - 
                34*s13^3*s23^2 - 6*s13^2*s23^3 + 35*s13*s23^4 + 7*s23^5)) + 
            p2q*p3q^2*(2*s12^5*(9*s13 + 2*s23) - 2*s12^4*(36*s13^2 + 
                112*s13*s23 + 7*s23^2) + s12^2*s23*(138*s13^3 + 202*s13^2*
                 s23 + 114*s13*s23^2 + 11*s23^3) - s12^3*(54*s13^3 + 
                240*s13^2*s23 + 302*s13*s23^2 + 25*s23^3) + 
              s13*s23*(38*s13^4 + 62*s13^3*s23 + 21*s13^2*s23^2 - 
                16*s13*s23^3 - 13*s23^4) + 2*s12*(18*s13^5 + 40*s13^4*s23 + 
                101*s13^3*s23^2 + 146*s13^2*s23^3 + 80*s13*s23^4 + 
                9*s23^5))) + p1q^3*(p2q^4*s23*(s12^4*(36*s13^2 - 23*s13*s23 - 
                3*s23^2) - 16*s13*s23*(s13 + s23)^2*(3*s13^2 - 7*s13*s23 + 
                2*s23^2) + s12^3*(54*s13^3 + 33*s13^2*s23 - 42*s13*s23^2 - 
                5*s23^3) - s12*(s13 + s23)^2*(18*s13^3 - 145*s13^2*s23 + 
                76*s13*s23^2 - s23^3) - s12^2*s23*(-213*s13^3 + 
                39*s13^2*s23 + 61*s13*s23^2 + s23^3)) + p3q^4*s23^2*
             (6*s12^5 + 2*s12^4*(5*s13 - s23) - s13*(3*s13 - s23)*s23*
               (s13 + s23)^2 + s12^3*(6*s13^2 + 7*s13*s23 - 18*s23^2) + 
              3*s12^2*(2*s13^3 + 5*s13^2*s23 - 5*s13*s23^2 - 2*s23^3) + 
              s12*(4*s13^4 + 3*s13^3*s23 - 16*s13^2*s23^2 - 11*s13*s23^3 + 
                4*s23^4)) + p2q^3*p3q*(-(s12^4*s23*(90*s13^2 + 204*s13*s23 + 
                 13*s23^2)) + s12^3*(36*s13^4 + 90*s13^3*s23 - 218*s13^2*
                 s23^2 - 229*s13*s23^3 - 28*s23^4) + s13*s23*(-36*s13^5 + 
                30*s13^4*s23 + 251*s13^3*s23^2 + 281*s13^2*s23^3 + 
                13*s13*s23^4 - 83*s23^5) + s12^2*(36*s13^5 + 126*s13^4*s23 + 
                286*s13^3*s23^2 - 159*s13^2*s23^3 + 33*s13*s23^4 - 8*s23^5) + 
              s12*s23*(162*s13^5 + 294*s13^4*s23 + 104*s13^3*s23^2 - 
                99*s13^2*s23^3 - 32*s13*s23^4 + 7*s23^5)) + 
            p2q*p3q^3*(12*s12^5*(3*s13^2 + 15*s13*s23 + s23^2) + 
              s12^4*(36*s13^3 + 36*s13^2*s23 - 48*s13*s23^2 - s23^3) - 
              2*s12^3*s23*(18*s13^3 + 217*s13^2*s23 + 272*s13*s23^2 + 
                17*s23^3) + s13*s23^2*(72*s13^4 + 95*s13^3*s23 + 
                35*s13^2*s23^2 + s13*s23^3 - 11*s23^4) - s12^2*s23*(
                72*s13^4 - 34*s13^3*s23 + 195*s13^2*s23^2 + 252*s13*s23^3 + 
                5*s23^4) + s12*s23*(72*s13^5 + 48*s13^4*s23 + 149*s13^3*
                 s23^2 + 150*s13^2*s23^3 + 49*s13*s23^4 + 16*s23^5)) + 
            p2q^2*p3q^2*(6*s12^5*s23*(18*s13 + s23) - s12^4*(72*s13^3 + 
                306*s13^2*s23 + 320*s13*s23^2 + 9*s23^3) - 2*s12^2*s23*(
                81*s13^4 - 55*s13^3*s23 - 60*s13^2*s23^2 - 50*s13*s23^3 + 
                3*s23^4) - s12^3*(72*s13^4 + 288*s13^3*s23 + 682*s13^2*
                 s23^2 + 603*s13*s23^3 + 39*s23^4) + 3*s13*s23*(-12*s13^5 + 
                38*s13^4*s23 + 93*s13^3*s23^2 + 65*s13^2*s23^3 + 
                7*s13*s23^4 - 15*s23^5) + s12*s23*(180*s13^5 + 112*s13^4*
                 s23 + 207*s13^3*s23^2 + 388*s13^2*s23^3 + 219*s13*s23^4 + 
                18*s23^5))) + p1q*(p2q^6*s13*s23*(-16*s13*(2*s13 - s23)*s23*
               (s13 + s23)^2 + s12^4*(9*s13 + s23) - s12*(s13 + s23)^2*(
                27*s13^2 - 32*s13*s23 + s23^2) + s12^3*(-9*s13^2 + 
                26*s13*s23 + 3*s23^2) + s12^2*(-45*s13^3 + 35*s13^2*s23 + 
                33*s13*s23^2 + s23^3)) + p3q^6*s12*s23^2*(4*s12^4 - 
              s12^2*s13*(s13 - 9*s23) + s12^3*(5*s13 + 6*s23) + 
              s13*(s13^3 + 3*s13^2*s23 + s13*s23^2 - s23^3) - 
              s12*(s13^3 - 6*s13^2*s23 - 3*s13*s23^2 + 2*s23^3)) + 
            p2q^3*p3q^3*(s12^5*(108*s13^2 + 126*s13*s23 - 17*s23^2) - 
              s12^4*(324*s13^3 + 540*s13^2*s23 + 101*s13*s23^2 + 6*s23^3) - 
              s12^3*(324*s13^4 + 684*s13^3*s23 + 1037*s13^2*s23^2 + 
                542*s13*s23^3 + 6*s23^4) + 2*s12*s13*s23*(243*s13^4 + 
                26*s13^3*s23 + 17*s13^2*s23^2 + 48*s13*s23^3 + 18*s23^4) + 
              2*s13^2*s23*(-45*s13^4 + 68*s13^3*s23 + 132*s13^2*s23^2 + 
                60*s13*s23^3 + 41*s23^4) + s12^2*(108*s13^5 - 522*s13^4*s23 - 
                281*s13^3*s23^2 - 322*s13^2*s23^3 - 228*s13*s23^4 - 
                17*s23^5)) + p2q^2*p3q^4*(-36*s12^6*s13 + 2*s12^5*(
                126*s13^2 + 135*s13*s23 - 8*s23^2) + s12^4*(180*s13^3 + 
                306*s13^2*s23 + 438*s13*s23^2 - 11*s23^3) - 
              s12^3*(108*s13^4 - 162*s13^3*s23 + 132*s13^2*s23^2 + 
                42*s13*s23^3 + 11*s23^4) + 2*s13^2*s23*(-9*s13^4 + 
                42*s13^3*s23 + 41*s13^2*s23^2 + 4*s13*s23^3 + 14*s23^4) - 
              s12^2*s23*(432*s13^4 - 86*s13^3*s23 + 107*s13^2*s23^2 + 
                131*s13*s23^3 + 14*s23^4) + 2*s12*s23*(72*s13^5 - 
                108*s13^4*s23 + 14*s13^3*s23^2 + 30*s13^2*s23^3 + 
                9*s13*s23^4 + s23^5)) + p2q*p3q^5*(-72*s12^6*s13 - 
              36*s12^5*s13^2 + s12^3*s23*(126*s13^3 + 35*s13^2*s23 + 
                123*s13*s23^2 - 4*s23^3) + s12^4*(36*s13^3 + 18*s13^2*s23 + 
                196*s13*s23^2 + 3*s23^3) + s13^2*s23^2*(17*s13^3 + 
                17*s13^2*s23 + 7*s13*s23^2 + 7*s23^3) + s12^2*s23*(
                -54*s13^4 + 153*s13^3*s23 + 33*s13^2*s23^2 + 11*s13*s23^3 - 
                5*s23^4) + s12*s23*(18*s13^5 - 29*s13^4*s23 + 84*s13^3*
                 s23^2 + 33*s13^2*s23^3 + 8*s13*s23^4 + 2*s23^5)) - 
            p2q^5*p3q*(s12^5*s23*(9*s13 + s23) + s12^4*s23*(-18*s13^2 + 
                38*s13*s23 + s23^2) + s12^3*(-36*s13^4 - 162*s13^3*s23 - 
                90*s13^2*s23^2 + 51*s13*s23^3 + 2*s23^4) + s12^2*(36*s13^5 + 
                18*s13^4*s23 - 224*s13^3*s23^2 - 51*s13^2*s23^3 + 
                21*s13*s23^4 + 2*s23^5) + s13*s23*(108*s13^5 + 198*s13^4*
                 s23 + 105*s13^3*s23^2 - 41*s13^2*s23^3 - 49*s13*s23^4 + 
                7*s23^5) + s12*s13*(72*s13^5 + 81*s13^4*s23 - 7*s13^3*s23^2 - 
                78*s13^2*s23^3 - 11*s13*s23^4 + 19*s23^5)) + 
            p2q^4*p3q^2*(-3*s12^5*s23*(3*s13 + 2*s23) + s12^4*(-108*s13^3 - 
                243*s13^2*s23 - 144*s13*s23^2 + s23^3) + s12^3*(180*s13^4 + 
                315*s13^3*s23 - 85*s13^2*s23^2 - 215*s13*s23^3 - s23^4) + 
              s12^2*(252*s13^5 + 459*s13^4*s23 + 678*s13^3*s23^2 + 
                253*s13^2*s23^3 + 6*s13*s23^4 - 8*s23^5) + 
              s13*s23*(-180*s13^5 - 106*s13^4*s23 + 115*s13^3*s23^2 + 
                133*s13^2*s23^3 + 85*s13*s23^4 - 7*s23^5) + 
              s12*s13*(-36*s13^5 + 450*s13^4*s23 + 483*s13^3*s23^2 + 
                300*s13^2*s23^3 + 139*s13*s23^4 + 36*s23^5))) + 
          p1q^2*(p3q^5*s23^2*(7*s12^5 - s13^2*s23*(s13 + s23)^2 + 
              2*s12^4*(5*s13 + 3*s23) + 2*s12^3*(s13^2 + 7*s13*s23 - 
                4*s23^2) + s12^2*(2*s13^3 + 15*s13^2*s23 - 2*s13*s23^2 - 
                6*s23^3) + s12*(3*s13^4 + 6*s13^3*s23 - 4*s13^2*s23^2 - 
                6*s13*s23^3 + s23^4)) - p2q^5*s23*(8*s13*s23*(s13 + s23)^2*(
                7*s13^2 - 8*s13*s23 + s23^2) + s12^4*(-27*s13^2 + 6*s13*s23 + 
                s23^2) + 4*s12*s13*(s13 + s23)^2*(9*s13^2 - 25*s13*s23 + 
                6*s23^2) - 2*s12^3*(9*s13^3 + 28*s13^2*s23 - 6*s13*s23^2 - 
                s23^3) + s12^2*(45*s13^4 - 146*s13^3*s23 - 42*s13^2*s23^2 + 
                22*s13*s23^3 + s23^4)) + p2q^3*p3q^2*(3*s12^5*(15*s13 - 
                2*s23)*s23 - s12^4*(180*s13^3 + 576*s13^2*s23 + 
                376*s13*s23^2 + 11*s23^3) - s12^3*(36*s13^4 + 225*s13^3*s23 + 
                842*s13^2*s23^2 + 677*s13*s23^3 + 36*s23^4) + 
              s12^2*(144*s13^5 + 54*s13^4*s23 + 336*s13^3*s23^2 - 
                31*s13^2*s23^3 - 84*s13*s23^4 - 27*s23^5) + 
              s13*s23*(-144*s13^5 + 34*s13^4*s23 + 331*s13^3*s23^2 + 
                317*s13^2*s23^3 + 137*s13*s23^4 - 27*s23^5) + 
              s12*s23*(486*s13^5 + 374*s13^4*s23 + 255*s13^3*s23^2 + 
                256*s13^2*s23^3 + 109*s13*s23^4 + 4*s23^5)) + 
            p2q*p3q^4*(-36*s12^6*s13 + 2*s12^5*(18*s13^2 + 117*s13*s23 + 
                5*s23^2) - 2*s12^3*s23*(-72*s13^3 + 10*s13^2*s23 + 
                24*s13*s23^2 + 7*s23^3) + s12^4*(72*s13^3 + 216*s13^2*s23 + 
                386*s13*s23^2 + 13*s23^3) + s13*s23^2*(53*s13^4 + 
                51*s13^3*s23 + 8*s13^2*s23^2 + 3*s13*s23^3 - 7*s23^4) - 
              s12^2*s23*(108*s13^4 - 125*s13^3*s23 + 95*s13^2*s23^2 + 
                158*s13*s23^3 + 9*s23^4) + s12*s23*(54*s13^5 - 38*s13^4*s23 + 
                83*s13^3*s23^2 + 40*s13^2*s23^3 - 7*s13*s23^4 + 8*s23^5)) + 
            p2q^2*p3q^3*(2*s12^5*(72*s13^2 + 180*s13*s23 - s23^2) - 
              2*s12^4*(18*s13^3 + 90*s13^2*s23 - 61*s13*s23^2 + s23^3) - 
              s12^2*s23*(468*s13^4 + 50*s13^3*s23 + 256*s13^2*s23^2 + 
                302*s13*s23^3 + 25*s23^4) - s12^3*(180*s13^4 + 378*s13^3*
                 s23 + 915*s13^2*s23^2 + 672*s13*s23^3 + 34*s23^4) + 
              s13*s23*(-36*s13^5 + 192*s13^4*s23 + 313*s13^3*s23^2 + 
                180*s13^2*s23^3 + 81*s13*s23^4 - 14*s23^5) + 
              s12*s23*(306*s13^5 + 29*s13^4*s23 + 223*s13^3*s23^2 + 
                294*s13^2*s23^3 + 91*s13*s23^4 + 9*s23^5)) + 
            p2q^4*p3q*(-(s12^5*s23*(9*s13 + s23)) - s12^4*s23*(9*s13^2 + 
                110*s13*s23 + 3*s23^2) + s12^3*(72*s13^4 + 315*s13^3*s23 + 
                116*s13^2*s23^2 - 124*s13*s23^3 - 10*s23^4) + 
              s13*s23*(-108*s13^5 - 134*s13^4*s23 + 85*s13^3*s23^2 + 
                247*s13^2*s23^3 + 99*s13*s23^4 - 37*s23^5) + 
              s12^2*(36*s13^5 + 225*s13^4*s23 + 646*s13^3*s23^2 + 
                130*s13^2*s23^3 - 5*s13*s23^4 - 6*s23^5) + s12*(-36*s13^6 + 
                126*s13^5*s23 + 359*s13^4*s23^2 + 330*s13^3*s23^3 + 
                49*s13^2*s23^4 - 34*s13*s23^5 + 2*s23^6)))))/
        (6*p2q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + (ep*(s12 + s13 + s23)*
         (p1q^4*s23*(p2q^3*s23^2*(-(s12*(9*s13 - s23)*(s13 + s23)^2) - 
              8*s13*s23*(s13 + s23)^2 + 2*s12^2*s23*(5*s13 + s23) + 
              s12^3*(9*s13 + s23)) + p3q^3*s23^3*(s12^3 + s12*(s13 + s23)^2 + 
              s13*(s13 + s23)^2 + s12^2*(s13 + 2*s23)) + 
            p2q*p3q^2*(-36*s12^4*s13*(s13 + s23) + s12^3*(36*s13^3 - 
                72*s13^2*s23 - 90*s13*s23^2 + s23^3) + s23^3*(37*s13^3 + 
                28*s13^2*s23 - 7*s13*s23^2 + 2*s23^3) + s12^2*s23*(72*s13^3 - 
                46*s13^2*s23 - 75*s13*s23^2 + 10*s23^3) + s12*s23^2*(
                72*s13^3 + 15*s13^2*s23 - 30*s13*s23^2 + 11*s23^3)) + 
            p2q^2*p3q*(s12^3*(36*s13^3 + 36*s13^2*s23 + 18*s13*s23^2 + 
                s23^3) + s23^3*(37*s13^3 + 28*s13^2*s23 - 7*s13*s23^2 + 
                2*s23^3) + s12^2*(-36*s13^4 + 36*s13^3*s23 + 62*s13^2*s23^2 + 
                33*s13*s23^3 + 10*s23^4) + s12*s23*(-36*s13^4 + 
                36*s13^3*s23 + 51*s13^2*s23^2 + 6*s13*s23^3 + 11*s23^4))) - 
          p1q^3*(p3q^4*s23^3*(2*s12^4 + s13*(s13 - s23)*(s13 + s23)^2 + 
              s12^3*(3*s13 + 2*s23) + s12^2*(3*s13^2 + 5*s13*s23 - 2*s23^2) + 
              s12*(3*s13^3 + 6*s13^2*s23 + s13*s23^2 - 2*s23^3)) + 
            p2q^4*s23^2*(-16*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
              s12^4*(9*s13 + s23) - s12*(s13 + s23)^2*(9*s13^2 - 30*s13*s23 + 
                s23^2) + s12^3*(27*s13^2 + 12*s13*s23 + s23^2) + 
              s12^2*(9*s13^3 + 57*s13^2*s23 + 15*s13*s23^2 - s23^3)) - 
            p2q*p3q^3*(36*s12^5*s13*(s13 + 2*s23) + s12^3*s23*(216*s13^3 + 
                10*s13^2*s23 - 30*s13*s23^2 - 23*s23^3) + 3*s12^4*(12*s13^3 + 
                12*s13^2*s23 + 36*s13*s23^2 - s23^3) - s12^2*s23^2*(
                -298*s13^3 + 42*s13^2*s23 + 115*s13*s23^2 + 11*s23^3) + 
              s23^3*(-39*s13^4 + 39*s13^3*s23 + 53*s13^2*s23^2 - 
                23*s13*s23^3 + 2*s23^4) + s12*s23^2*(-36*s13^4 + 
                156*s13^3*s23 - 11*s13^2*s23^2 - 80*s13*s23^3 + 11*s23^4)) + 
            p2q^2*p3q^2*(3*s12^4*(24*s13^3 + 60*s13^2*s23 + 42*s13*s23^2 + 
                s23^3) + s12*s23^2*(306*s13^4 + 48*s13^3*s23 + 79*s13^2*
                 s23^2 + 140*s13*s23^3 - 21*s23^4) + s23^3*(129*s13^4 - 
                19*s13^3*s23 - 93*s13^2*s23^2 + 51*s13*s23^3 - 4*s23^4) + 
              s12^2*s23*(288*s13^4 - 2*s13^3*s23 + 258*s13^2*s23^2 + 
                223*s13*s23^3 + 15*s23^4) + s12^3*(72*s13^4 - 36*s13^3*s23 + 
                286*s13^2*s23^2 + 282*s13*s23^3 + 35*s23^4)) + 
            p2q^3*p3q*(3*s12^4*s23^2*(12*s13 + s23) + s23^3*(93*s13^4 + 
                41*s13^3*s23 - 7*s13^2*s23^2 + 43*s13*s23^3 - 2*s23^4) + 
              s12^3*(-36*s13^4 - 108*s13^3*s23 - 10*s13^2*s23^2 + 
                42*s13*s23^3 + 15*s23^4) + s12*s23*(-72*s13^5 + 126*s13^4*
                 s23 + 156*s13^3*s23^2 + 97*s13^2*s23^3 + 62*s13*s23^4 - 
                13*s23^5) + s12^2*(-36*s13^5 + 72*s13^4*s23 + 44*s13^3*
                 s23^2 + 78*s13^2*s23^3 + 11*s13*s23^4 + s23^5))) - 
          (p2q + p3q)*(-(p3q^6*s12^2*(s12 + s13)*s23^2*(s12^2 - s13^2 + 2*s12*
                s23 + s23^2)) + p2q^6*s13^2*s23*(s12*(9*s13 - s23)*
               (s13 + s23)^2 + 8*s13*s23*(s13 + s23)^2 + s12^3*(9*s13 + 
                s23) + 2*s12^2*s13*(9*s13 + 5*s23)) - p2q^2*p3q^4*
             (s12^3*s13*s23*(324*s13^2 + 179*s13*s23 - 40*s23^2) + 
              2*s12^5*(72*s13^2 + 18*s13*s23 - 5*s23^2) + s12^2*s23^2*(
                277*s13^3 + 20*s13^2*s23 - 26*s13*s23^2 - 4*s23^3) + 
              6*s12^4*(24*s13^3 + 42*s13^2*s23 + 5*s13*s23^2 - s23^3) + 
              s13^2*s23^2*(17*s13^3 + 2*s13^2*s23 + s13*s23^2 + 16*s23^3) + 
              s12*s13*s23*(36*s13^4 - 25*s13^3*s23 + 128*s13^2*s23^2 - 
                25*s13*s23^3 - 6*s23^4)) + 2*p2q*p3q^5*s12*(18*s12^5*s13 + 
              s12^4*(18*s13^2 + 45*s13*s23 + 2*s23^2) + s12^3*s23*(63*s13^2 + 
                49*s13*s23 + 2*s23^2) + s13*s23^2*(8*s13^3 - 8*s13^2*s23 + 
                17*s13*s23^2 + s23^3) + s12^2*s23*(9*s13^3 + 77*s13^2*s23 + 
                31*s13*s23^2 + s23^3) + s12*s23*(9*s13^4 + 2*s13^3*s23 + 
                48*s13^2*s23^2 + 9*s13*s23^3 + s23^4)) + p2q^3*p3q^3*
             (3*s12^5*s23*(3*s13 + 2*s23) + s12^4*(216*s13^3 + 162*s13^2*
                 s23 + 69*s13*s23^2 - 2*s23^3) + 2*s13^2*s23*(9*s13^4 - 
                15*s13^3*s23 - s13^2*s23^2 + 7*s13*s23^3 - 16*s23^4) + 
              s12^3*(216*s13^4 + 315*s13^3*s23 + 198*s13^2*s23^2 + 
                125*s13*s23^3 - 4*s23^4) + 2*s12*s13*s23*(-27*s13^4 + 
                75*s13^3*s23 - 5*s13^2*s23^2 + 17*s13*s23^3 + 4*s23^4) + 
              s12^2*s23*(306*s13^4 + 207*s13^3*s23 + 128*s13^2*s23^2 + 
                43*s13*s23^3 + 4*s23^4)) + p2q^4*p3q^2*
             (s12^4*(25*s13 - 2*s23)*s23^2 + s12^5*s23*(9*s13 + s23) + 
              2*s13^2*s23*(18*s13^4 - 13*s13^3*s23 - 24*s13^2*s23^2 - 
                9*s13*s23^3 - 16*s23^4) - s12^3*(144*s13^4 + 207*s13^3*s23 + 
                88*s13^2*s23^2 - 34*s13*s23^3 + s23^4) - s12*s13*s23*(
                144*s13^4 + 183*s13^3*s23 + 203*s13^2*s23^2 + 55*s13*s23^3 + 
                3*s23^4) - s12^2*(144*s13^5 + 234*s13^4*s23 + 233*s13^3*
                 s23^2 + 92*s13^2*s23^3 + 11*s13*s23^4 - 2*s23^5)) + 
            p2q^5*p3q*s13*(-2*s12^4*s23*(9*s13 + s23) + s12^3*s23*(
                -27*s13^2 - 41*s13*s23 + 2*s23^2) + s13*s23*(36*s13^4 + 
                58*s13^3*s23 + 49*s13^2*s23^2 + 20*s13*s23^3 - 7*s23^4) + 
              s12^2*(36*s13^4 + 72*s13^3*s23 - 8*s13^2*s23^2 - 21*s13*s23^3 - 
                2*s23^4) + s12*(36*s13^5 + 81*s13^4*s23 + 53*s13^3*s23^2 - 
                19*s13^2*s23^3 - 9*s13*s23^4 + 2*s23^5))) + 
          p1q*(p3q^6*s12*s23^2*(2*s12^4 + s12^3*(3*s13 + 2*s23) + 
              s12^2*(s13^2 + 5*s13*s23 - 2*s23^2) + s12*(s13^3 + 
                6*s13^2*s23 + s13*s23^2 - 2*s23^3) + s13*(s13^3 + 
                3*s13^2*s23 + s13*s23^2 - s23^3)) + p2q^6*s13*s23*
             (-16*s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^4*(9*s13 + s23) - 
              s12*(s13 + s23)^2*(9*s13^2 - 30*s13*s23 + s23^2) + 
              s12^3*(9*s13^2 + 28*s13*s23 + 3*s23^2) + s12^2*(-9*s13^3 + 
                55*s13^2*s23 + 33*s13*s23^2 + s23^3)) + 
            p2q*p3q^5*(-72*s12^6*s13 - s12^5*(36*s13^2 + 108*s13*s23 + 
                s23^2) + s12^3*s23*(162*s13^3 - 56*s13^2*s23 + 102*s13*
                 s23^2 + 11*s23^3) + s12^4*(36*s13^3 - 126*s13^2*s23 + 
                7*s13*s23^2 + 15*s23^3) + s13^2*s23^2*(17*s13^3 + 
                17*s13^2*s23 + 31*s13*s23^2 + 31*s23^3) + s12^2*s23*(
                18*s13^4 + 318*s13^3*s23 + 38*s13^2*s23^2 + 91*s13*s23^3 - 
                3*s23^4) + s12*s23*(18*s13^5 + 39*s13^4*s23 + 230*s13^3*
                 s23^2 + 23*s13^2*s23^3 + 24*s13*s23^4 + 2*s23^5)) + 
            p2q^2*p3q^4*(-36*s12^6*s13 + 2*s12^5*(126*s13^2 + 45*s13*s23 - 
                5*s23^2) + s12^4*(180*s13^3 + 360*s13^2*s23 + 251*s13*s23^2 + 
                34*s23^3) + s12^2*s23*(-234*s13^4 + 919*s13^3*s23 + 
                336*s13^2*s23^2 + 183*s13*s23^3 - 20*s23^4) + 
              s12^3*(-108*s13^4 + 702*s13^3*s23 + 441*s13^2*s23^2 + 
                203*s13*s23^3 + 22*s23^4) + 2*s13^2*s23*(-9*s13^4 + 
                25*s13^3*s23 - 13*s13^2*s23^2 + 31*s13*s23^3 + 78*s23^4) + 
              s12*s23*(36*s13^5 - 183*s13^4*s23 + 577*s13^3*s23^2 + 
                161*s13^2*s23^3 + 55*s13*s23^4 + 2*s23^5)) + 
            2*p2q^3*p3q^3*(s12^5*(54*s13^2 + 27*s13*s23 - 5*s23^2) - 
              s12^4*(162*s13^3 + 99*s13^2*s23 + 32*s13*s23^2 - 16*s23^3) + 
              s12*s13*s23*(72*s13^4 - 275*s13^3*s23 + 66*s13^2*s23^2 - 
                10*s13*s23^3 - 15*s23^4) - s12^3*(162*s13^4 + 99*s13^3*s23 + 
                125*s13^2*s23^2 + 123*s13*s23^3 - 2*s23^4) + 
              s12^2*(54*s13^5 - 414*s13^4*s23 - 53*s13^3*s23^2 - 
                92*s13^2*s23^3 - 19*s13*s23^4 - 19*s23^5) - 
              s13*s23*(27*s13^5 - 58*s13^4*s23 + 47*s13^3*s23^2 + 
                25*s13^2*s23^3 - 98*s13*s23^4 + 9*s23^5)) - 
            p2q^5*p3q*(s12^5*s23*(9*s13 + s23) + s12^4*s23^2*(42*s13 + s23) + 
              s12^3*(-36*s13^4 - 72*s13^3*s23 - 30*s13^2*s23^2 + 
                58*s13*s23^3 + 5*s23^4) + s12^2*(36*s13^5 + 72*s13^4*s23 - 
                124*s13^3*s23^2 - 20*s13^2*s23^3 + 13*s13*s23^4 + 5*s23^5) + 
              s13*s23*(36*s13^5 - 26*s13^4*s23 - 51*s13^3*s23^2 - 
                65*s13^2*s23^3 - 69*s13*s23^4 + 7*s23^5) + 
              s12*s13*(72*s13^5 - 9*s13^4*s23 - 187*s13^3*s23^2 - 
                246*s13^2*s23^3 - 55*s13*s23^4 + 21*s23^5)) - 
            p2q^4*p3q^2*(s12^5*s23*(9*s13 + 4*s23) + s12^4*(108*s13^3 + 
                117*s13^2*s23 + 111*s13*s23^2 - 10*s23^3) + 
              s12^3*(-180*s13^4 - 189*s13^3*s23 + 26*s13^2*s23^2 + 
                188*s13*s23^3 + 10*s23^4) + s12^2*(-252*s13^5 + 
                63*s13^4*s23 - 63*s13^3*s23^2 + 78*s13^2*s23^3 + 
                28*s13*s23^4 + 24*s23^5) + s13*s23*(72*s13^5 - 116*s13^4*
                 s23 + 11*s13^3*s23^2 + 59*s13^2*s23^3 - 115*s13*s23^4 + 
                25*s23^5) + s12*s13*(36*s13^5 - 288*s13^4*s23 - 
                62*s13^3*s23^2 - 149*s13^2*s23^3 + 42*s13*s23^4 + 
                53*s23^5))) + p1q^2*(p3q^5*s23^2*(s12^5 + 2*s12^4*(s13 - 
                s23) - s13^2*s23*(s13 + s23)^2 + 2*s12^3*(s13^2 - 3*s23^2) + 
              s12^2*(2*s13^3 + 3*s13^2*s23 - 6*s13*s23^2 - 2*s23^3) + 
              s12*(s13^4 - 6*s13^2*s23^2 - 4*s13*s23^3 + s23^4)) - 
            p2q^5*s23*(-2*s12*s13*(19*s13 - 11*s23)*s23*(s13 + s23)^2 + 
              8*s13*s23*(s13 + s23)^2*(s13^2 - 4*s13*s23 + s23^2) + 
              s12^4*(-9*s13^2 + 8*s13*s23 + s23^2) - 2*s12^3*(9*s13^3 + 
                s13^2*s23 - 9*s13*s23^2 - s23^3) + s12^2*(-9*s13^4 - 
                56*s13^3*s23 + 24*s13^2*s23^2 + 24*s13*s23^3 + s23^4)) + 
            p2q*p3q^4*(-36*s12^6*s13 + 2*s12^5*(18*s13^2 + 27*s13*s23 + 
                s23^2) + 2*s12^3*s23*(180*s13^3 + 93*s13^2*s23 + 
                113*s13*s23^2 - 6*s23^3) + s12^4*(72*s13^3 + 72*s13^2*s23 + 
                249*s13*s23^2 + 14*s23^3) + s12^2*s23*(36*s13^4 + 
                558*s13^3*s23 + 153*s13^2*s23^2 + 74*s13*s23^3 - 22*s23^4) + 
              s13*s23^2*(19*s13^4 - 15*s13^3*s23 + 42*s13^2*s23^2 + 
                61*s13*s23^3 - 15*s23^4) + 2*s12*s23*(9*s13^5 + 
                13*s13^4*s23 + 158*s13^3*s23^2 + 23*s13^2*s23^3 - 
                10*s13*s23^4 + s23^5)) + p2q^2*p3q^3*(2*s12^5*(72*s13^2 + 
                72*s13*s23 + s23^2) + s12^4*(-36*s13^3 + 54*s13^2*s23 + 
                192*s13*s23^2 + 33*s23^3) + s12^2*s23*(-414*s13^4 + 
                698*s13^3*s23 + 134*s13^2*s23^2 - 26*s13*s23^3 - 47*s23^4) + 
              s12^3*(-180*s13^4 + 414*s13^3*s23 + 110*s13^2*s23^2 + 
                4*s13*s23^3 - 24*s23^4) + s23^2*(92*s13^5 - 87*s13^4*s23 + 
                80*s13^3*s23^2 + 215*s13^2*s23^3 - 42*s13*s23^4 + 2*s23^5) + 
              2*s12*s23*(27*s13^5 - 141*s13^4*s23 + 227*s13^3*s23^2 + 
                63*s13^2*s23^3 - 39*s13*s23^4 + 5*s23^5)) + 
            p2q^3*p3q^2*(s12^5*s23*(27*s13 + 2*s23) - 3*s12^4*(60*s13^3 + 
                42*s13^2*s23 + 19*s13*s23^2 - 7*s23^3) + s12^3*(-36*s13^4 + 
                243*s13^3*s23 + 122*s13^2*s23^2 - 122*s13*s23^3 - 28*s23^4) + 
              s12^2*(144*s13^5 - 288*s13^4*s23 + 389*s13^3*s23^2 + 
                206*s13^2*s23^3 + 18*s13*s23^4 - 37*s23^5) + 
              s23^2*(164*s13^5 - 75*s13^4*s23 + 21*s13^3*s23^2 + 
                205*s13^2*s23^3 - 53*s13*s23^4 + 2*s23^5) + 
              s12*s23*(288*s13^5 - 96*s13^4*s23 + 265*s13^3*s23^2 + 
                136*s13^2*s23^3 - 69*s13*s23^4 + 12*s23^5)) + 
            p2q^4*p3q*(s12^5*s23*(9*s13 + s23) + s12^4*s23*(45*s13^2 - 
                10*s13*s23 + 3*s23^2) + s13*s23^2*(92*s13^4 + 23*s13^3*s23 + 
                15*s13^2*s23^2 + 41*s13*s23^3 - 43*s23^4) + s12^3*(72*s13^4 + 
                207*s13^3*s23 + 135*s13^2*s23^2 - 17*s13*s23^3 - 12*s23^4) + 
              s12^2*(36*s13^5 + 27*s13^4*s23 + 186*s13^3*s23^2 + 
                9*s13^2*s23^3 + s13*s23^4 - 11*s23^5) + s12*(-36*s13^6 + 
                180*s13^5*s23 + 204*s13^4*s23^2 + 100*s13^3*s23^3 - 
                61*s13^2*s23^4 - 74*s13*s23^5 + 3*s23^6)))))/
        (6*p2q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p3]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*(p2q^2 + p3q^2)*(s12 + s13 + s23)^2*(4*p1q^2*s23*(s12 + s23) + 
          (4*p3q*s12 + 5*p2q*s13)*(-(p2q*s13) + p3q*(s12 + s23)) + 
          p1q*(4*p3q*(s12 + s23)^2 + p2q*s13*(5*s12 + s23))))/
        (27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23) - 
       ((2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(s12 + s13 + s23)^2*
         (4*p1q^2*s23*(s12 + s23) + (4*p3q*s12 + 5*p2q*s13)*
           (-(p2q*s13) + p3q*(s12 + s23)) + p1q*(4*p3q*(s12 + s23)^2 + 
            p2q*s13*(5*s12 + s23))))/(27*p2q*p3q*(p1q + p2q + p3q)*s12*s13*
         s23))*Int[DS[k]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-3*ep*(p2q^2 + p3q^2)*(p3q*s12 + p2q*s13)*(s12 + s13 + s23)^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
        (p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23) + 
       (3*(2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(p3q*s12 + p2q*s13)*
         (s12 + s13 + s23)^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
        (p2q*p3q*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (((s12 + s13 + s23)*(2*p1q^4*(p2q^2 - p3q^2)*(s12 - s13)*s23^3 - 
          2*p1q^3*(p2q + p3q)*s23^2*(p2q^2*(s12^2 + 2*s12*s13 - s13^2 - 
              s12*s23 + 2*s13*s23) + p3q^2*(-s12^2 + s13*(s13 - s23) + 
              2*s12*(s13 + s23)) + p2q*p3q*(2*s12^2 + s13*(2*s13 - s23) - 
              s12*(8*s13 + s23))) + (p2q + p3q)^2*
           (p2q^4*s13*s23*(3*s12^2 + 3*s12*s13 + 2*s12*s23 + s13*s23) + 
            p2q*p3q^3*(4*s12^2*s13*s23 + s13^3*s23 + s12*s13*s23*(-s13 + 
                s23) + 2*s12^3*(4*s13 + s23)) + p3q^4*s12*s23*
             (s12*(3*s13 + s23) + s13*(3*s13 + 2*s23)) + 2*p2q^2*p3q^2*
             (s12^3*s23 - 3*s12*s13^2*s23 + s13^3*s23 - s12^2*s13*(8*s13 + 
                3*s23)) + p2q^3*p3q*(s12^3*s23 - s12^2*s13*s23 + 
              2*s13^3*s23 + s12*s13*(8*s13^2 + 4*s13*s23 + s23^2))) + 
          p1q^2*s23*(p3q^4*(s13*s23*(-2*s13 + s23) + s12^2*(6*s13 + 4*s23) + 
              s12*(6*s13^2 - 3*s23^2)) + p2q^4*(s12^2*(6*s13 - 2*s23) + 
              s13*(4*s13 - 3*s23)*s23 + s12*(6*s13^2 + s23^2)) + 
            2*p2q^2*p3q^2*(2*s12^3 - s12^2*(4*s13 + 7*s23) + s13*(2*s13^2 - 
                7*s13*s23 + s23^2) + s12*(-4*s13^2 + 16*s13*s23 + s23^2)) + 
            p2q*p3q^3*(2*s12^3 - 2*s12^2*(5*s13 + s23) + s12*(-2*s13^2 + 
                8*s13*s23 - 3*s23^2) + s13*(2*s13^2 - 10*s13*s23 + 
                3*s23^2)) + p2q^3*p3q*(2*s12^3 - 2*s12^2*(s13 + 5*s23) + 
              s13*(2*s13^2 - 2*s13*s23 - 3*s23^2) + s12*(-10*s13^2 + 
                8*s13*s23 + 3*s23^2))) + p1q*(p2q + p3q)*
           (p2q^4*s23*(s12^2*(6*s13 - s23) + s13*(3*s13 - s23)*s23 + 
              2*s12*s13*(3*s13 + s23)) + p2q^3*p3q*(2*s12*s13^2*(4*s13 - 
                3*s23) + 2*s12^3*s23 - 4*s12^2*s23*(s13 + s23) + 
              s13*s23*(4*s13^2 - 2*s13*s23 - s23^2)) + p3q^4*s23*
             (-(s13^2*s23) + 3*s12^2*(2*s13 + s23) + s12*(6*s13^2 + 
                2*s13*s23 - s23^2)) + 2*p2q^2*p3q^2*(3*s12^3*s23 + 
              3*s13^2*(s13 - s23)*s23 + s12*s13*s23*(-7*s13 + 4*s23) - 
              s12^2*(8*s13^2 + 7*s13*s23 + 3*s23^2)) + p2q*p3q^3*
             (2*s13^2*(s13 - 2*s23)*s23 + 4*s12^3*(2*s13 + s23) - 
              2*s12^2*s23*(3*s13 + s23) - s12*(4*s13^2*s23 + s23^3)))))/
        (6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (ep*(s12 + s13 + s23)*(p1q^2*(p2q - p3q)*s23*
           (p2q^3*(s12 - s13)*s23^2 + p3q^3*(s12 - s13)*s23^2 + 
            2*p2q*p3q^2*(4*s12^2*s13 - s13*s23^2 + s12*s23*(2*s13 + s23)) - 
            2*p2q^2*p3q*(s13*s23^2 + s12*(4*s13^2 + 2*s13*s23 - s23^2))) + 
          (p2q + p3q)^2*(p2q^4*s13*s23*(3*s12^2 + 3*s12*s13 + 2*s12*s23 + 
              s13*s23) + p2q*p3q^3*(s13^3*s23 + 7*s12*s13*s23*(s13 + s23) + 
              2*s12^3*(4*s13 + s23) + 2*s12^2*s23*(6*s13 + s23)) + 
            p3q^4*s12*s23*(s12*(3*s13 + s23) + s13*(3*s13 + 2*s23)) + 
            2*p2q^2*p3q^2*(s12^3*s23 + s13^2*s23*(s13 + s23) + 
              s12*s13*s23*(5*s13 + 6*s23) + s12^2*(-8*s13^2 + 5*s13*s23 + 
                s23^2)) + p2q^3*p3q*(s12^3*s23 + 7*s12^2*s13*s23 + 
              2*s13^2*s23*(s13 + s23) + s12*s13*(8*s13^2 + 12*s13*s23 + 
                7*s23^2))) - p1q*(p2q + p3q)*
           (p2q^4*s23^2*(s12^2 + 2*s12*s13 + s13*(-s13 + s23)) + 
            p3q^4*s23^2*(-s12^2 + s13^2 + s12*(2*s13 + s23)) + 
            p2q*p3q^3*(-8*s12^3*s13 + 2*s12^2*s23*(2*s13 + s23) + 
              2*s13*s23^2*(2*s13 + s23) + s12*s23^2*(8*s13 + 3*s23)) + 
            4*p2q^2*p3q^2*(s13*s23^2*(s13 + s23) + s12^2*(4*s13^2 - s13*s23 + 
                s23^2) + s12*(-(s13^2*s23) + s23^3)) + p2q^3*p3q*
             (4*s12^2*s23^2 + s13*s23^2*(2*s13 + 3*s23) + s12*(-8*s13^3 + 
                4*s13^2*s23 + 8*s13*s23^2 + 2*s23^3)))))/
        (6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p2 + p3]*Eik[k - p1]] + 
     (-1/54*(ep^2*(p1q + p2q)*s23*(s12 + s13 + s23)*
          (p3q^2*s12*(10*s12 + s13) + (p1q + p2q)*(9*s13 + 10*s23)*
            (-(p2q*s13) + p1q*s23) - p3q*(p2q*s13*(s13 + 2*s23) + 
             p2q*s12*(s13 + 10*s23) + p1q*(9*s12*s13 + 20*s12*s23 + s13*
                s23))))/((p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
           (p1q + p2q)*(s13 + s23))) - (ep*(p1q + p2q)*(s12 + s13 + s23)*
         (-(p3q^5*s12^2*(9*s13 + 10*s23)) + p2q*p3q^4*s12*
           (18*s13^2 - 10*s12*s23 + 19*s13*s23) + p2q^5*s13*
           (2*s23*(s13 + s23) - s12*(9*s13 + 8*s23)) + 
          p2q^2*p3q^3*(2*s12^2*(9*s13 - 5*s23) + 2*s12*(9*s13^2 - 5*s23^2) + 
            s13*(-9*s13^2 - 9*s13*s23 + 2*s23^2)) + 
          p2q^4*p3q*(s12^2*(9*s13 - 10*s23) - 9*s12*s13*(3*s13 + 4*s23) - 
            2*s13*(9*s13^2 + 12*s13*s23 + 2*s23^2)) + p2q^3*p3q^2*
           (s12^2*(27*s13 - 20*s23) - 2*s12*s23*(19*s13 + 5*s23) - 
            2*s13*(9*s13^2 + 13*s13*s23 + 2*s23^2)) + 
          p1q^2*s23*(p3q^3*(11*s13*(s13 + s23) + 10*s12*(2*s13 + s23)) + 
            2*p2q^2*p3q*(10*s13^2 + 16*s13*s23 + 5*s23^2 + s12*(s13 + 
                5*s23)) + 2*p2q*p3q^2*(10*s13^2 + 16*s13*s23 + 5*s23^2 + 
              s12*(s13 + 5*s23)) + p2q^3*(2*s13*(s13 + s23) + 
              s12*(11*s13 + 10*s23))) + 
          p1q*(2*p2q^2*p3q^2*(-9*s13^3 + s12^2*(9*s13 - 5*s23) - 
              18*s12*s13*s23 - 4*s13^2*s23 + 13*s13*s23^2 + 5*s23^3) + 
            p3q^4*s12*(9*s13^2 + 18*s13*s23 + 10*s23*(-s12 + s23)) + 
            p2q*p3q^3*(-9*s13^3 + 2*s12^2*(9*s13 - 5*s23) + 11*s13*s23^2 + 
              18*s12*s13*(s13 + s23)) + p2q^4*(4*s13*s23*(s13 + s23) + 
              s12*(-9*s13^2 + 3*s13*s23 + 10*s23^2)) + p2q^3*p3q*
             (-18*s13^3 + s12^2*(9*s13 - 10*s23) - 4*s13^2*s23 + 
              28*s13*s23^2 + 10*s23^3 + s12*(-18*s13^2 - 15*s13*s23 + 
                20*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       ((p1q + p2q)*(-(p3q^5*s12^2*(s12 + s13 + s23)*(9*s13 + 10*s23)) - 
          2*p2q*p3q^4*s12*(s12 - s13)*(s12 + s13 + s23)*(9*s13 + 10*s23) - 
          p2q^2*p3q^3*(2*s12^2 - 4*s12*s13 + s13^2)*(s12 + s13 + s23)*
           (9*s13 + 10*s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (2*p2q*s13*(s13 + s23) + 11*p3q*s13*(s13 + s23) + 
            10*p3q*s12*(2*s13 + s23) + p2q*s12*(11*s13 + 10*s23)) - 
          p2q^5*s13*(-2*s23*(s13 + s23)^2 + s12^2*(9*s13 + 8*s23) + 
            3*s12*(3*s13^2 + 5*s13*s23 + 2*s23^2)) + p2q^3*p3q^2*
           (s12^3*(9*s13 - 20*s23) + s12^2*(45*s13^2 + 26*s13*s23 - 
              20*s23^2) - 2*s13^2*(9*s13^2 + 19*s13*s23 + 10*s23^2) + 
            s12*s13*(18*s13^2 + 53*s13*s23 + 37*s23^2)) + 
          p2q^4*p3q*(s12^3*(9*s13 - 10*s23) - s12^2*s23*(s13 + 10*s23) + 
            s12*s13*(-27*s13^2 - 26*s13*s23 + 2*s23^2) - 
            s13*(18*s13^3 + 35*s13^2*s23 + 15*s13*s23^2 - 2*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p2q^2*(6*s13*s23*(s13 + s23) + 
              s12*(-9*s13^2 + 14*s13*s23 + 20*s23^2)) + 
            p3q^2*(-10*s12^2*s23 + 11*s13*s23*(s13 + s23) + s12*(9*s13^2 + 
                38*s13*s23 + 20*s23^2)) + p2q*p3q*(s12^2*(9*s13 - 10*s23) + 
              s12*s23*(79*s13 + 40*s23) + s13*(-9*s13^2 + 26*s13*s23 + 
                35*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p3q^3*(11*s13*s23*(s13 + s23) - 2*s12^2*(9*s13 + 20*s23) + 
              2*s12*(9*s13^2 + 28*s13*s23 + 15*s23^2)) + 
            p2q^3*(14*s13*s23*(s13 + s23) + s12*(-36*s13^2 + s13*s23 + 
                30*s23^2)) + p2q*p3q^2*(2*s12^2*(9*s13 - 40*s23) + 
              2*s12*(36*s13^2 + 93*s13*s23 + 35*s23^2) + s13*(-18*s13^2 + 
                24*s13*s23 + 43*s23^2)) + p2q^2*p3q*(4*s12^2*(9*s13 - 
                10*s23) + s12*(-18*s13^2 + 158*s13*s23 + 70*s23^2) + 
              s13*(-54*s13^2 + 18*s13*s23 + 73*s23^2))) + 
          p1q*(p3q^4*s12*(9*s13^3 + 27*s13^2*s23 + 28*s13*s23^2 + 10*s23^3 - 
              6*s12^2*(3*s13 + 5*s23) - s12*(9*s13^2 + 30*s13*s23 + 
                20*s23^2)) + p2q^4*(8*s13*s23*(s13 + s23)^2 + 
              s12^2*(-27*s13^2 - 13*s13*s23 + 10*s23^2) + s12*(-27*s13^3 - 
                32*s13^2*s23 + 5*s13*s23^2 + 10*s23^3)) + 
            p2q^3*p3q*(3*s12^3*(9*s13 - 10*s23) + s12^2*(9*s13^2 + 
                56*s13*s23 - 10*s23^2) - s13*(54*s13^3 + 83*s13^2*s23 + 
                2*s13*s23^2 - 27*s23^3) + s12*(-72*s13^3 + 12*s13^2*s23 + 
                106*s13*s23^2 + 20*s23^3)) + p2q*p3q^3*
             (-2*s12^3*(18*s13 + 35*s23) + s12^2*(18*s13^2 - 21*s13*s23 - 
                50*s23^2) + s13*(-9*s13^3 - 9*s13^2*s23 + 10*s13*s23^2 + 
                10*s23^3) + s12*(45*s13^3 + 139*s13^2*s23 + 115*s13*s23^2 + 
                20*s23^3)) + p2q^2*p3q^2*(2*s12^3*(9*s13 - 35*s23) + 
              s12^2*(108*s13^2 + 87*s13*s23 - 50*s23^2) + s13*(-36*s13^3 - 
                55*s13^2*s23 + s13*s23^2 + 20*s23^3) + s12*(54*s13^3 + 
                210*s13^2*s23 + 179*s13*s23^2 + 20*s23^3)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*Eik[k - p1]] + 
     (-1/54*(ep^2*(p1q + p3q)*s23*(s12 + s13 + s23)*
          (p2q^2*s13*(s12 + 10*s13) - p3q^2*s12*(9*s12 + 10*s23) + 
           p1q^2*s23*(9*s12 + 10*s23) - p2q*p3q*(s12^2 + 10*s13*s23 + 
             s12*(s13 + 2*s23)) - p1q*(20*p2q*s13*s23 + 
             p2q*s12*(9*s13 + s23) + p3q*(9*s12^2 + s12*s23 - 10*s23^2))))/
         ((p1q + p2q + p3q)*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
           p3q*(s12 + s23))) - (ep*(p1q + p3q)*(s12 + s13 + s23)*
         (-(p2q^5*s13^2*(9*s12 + 10*s23)) + p2q^4*p3q*s13*
           (18*s12^2 + 19*s12*s23 - 10*s13*s23) + p3q^5*s12*
           (2*s23*(-4*s13 + s23) + s12*(-9*s13 + 2*s23)) + 
          p2q^3*p3q^2*(-9*s12^3 + 9*s12^2*(2*s13 - s23) - 
            10*s13*s23*(s13 + s23) + 2*s12*(9*s13^2 + s23^2)) - 
          p2q*p3q^4*(18*s12^3 + 10*s13^2*s23 + 3*s12^2*(9*s13 + 8*s23) + 
            s12*(-9*s13^2 + 36*s13*s23 + 4*s23^2)) - p2q^2*p3q^3*
           (18*s12^3 + 26*s12^2*s23 + 10*s13*s23*(2*s13 + s23) + 
            s12*(-27*s13^2 + 38*s13*s23 + 4*s23^2)) + 
          p1q^2*s23*(p3q^3*(2*s12^2 + 11*s12*s13 + 2*s12*s23 + 10*s13*s23) + 
            p2q^3*(11*s12^2 + 20*s12*s13 + 11*s12*s23 + 10*s13*s23) + 
            2*p2q^2*p3q*(10*s12^2 + 5*s23*(s13 + s23) + s12*(s13 + 16*s23)) + 
            2*p2q*p3q^2*(10*s12^2 + 5*s23*(s13 + s23) + s12*(s13 + 
                16*s23))) + p1q*(-2*p2q^2*p3q^2*(9*s12^3 - 9*s12*s13^2 + 
              4*s12^2*s23 + 18*s12*s13*s23 + 5*s13^2*s23 - 13*s12*s23^2 - 
              5*s23^3) + p2q^4*s13*(9*s12^2 + 18*s12*s23 + 10*s23*(-s13 + 
                s23)) + p3q^4*(10*s13*s23^2 + s12^2*(-9*s13 + 4*s23) + 
              s12*s23*(3*s13 + 4*s23)) + p2q^3*p3q*(-9*s12^3 + 18*s12^2*s13 - 
              10*s13^2*s23 + s12*(18*s13^2 + 18*s13*s23 + 11*s23^2)) + 
            p2q*p3q^3*(-18*s12^3 - 2*s12^2*(9*s13 + 2*s23) + 10*s23*(-s13^2 + 
                2*s13*s23 + s23^2) + s12*(9*s13^2 - 15*s13*s23 + 
                28*s23^2)))))/(54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((p1q + p3q)*(2*p2q^4*p3q*(s12 - s13)*s13*(s12 + s13 + s23)*
           (9*s12 + 10*s23) - p2q^5*s13^2*(s12 + s13 + s23)*
           (9*s12 + 10*s23) - p2q^3*p3q^2*(s12^2 - 4*s12*s13 + 2*s13^2)*
           (s12 + s13 + s23)*(9*s12 + 10*s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p3q*(2*s12^2 + 11*s12*s13 + 2*s12*s23 + 10*s13*s23) + 
            p2q*(11*s12^2 + 20*s12*s13 + 11*s12*s23 + 10*s13*s23)) - 
          p3q^5*s12*(s12^2*(9*s13 - 2*s23) + s12*(9*s13^2 + 15*s13*s23 - 
              4*s23^2) - 2*s23*(-4*s13^2 - 3*s13*s23 + s23^2)) + 
          p2q^2*p3q^3*(-18*s12^4 + 2*s12^3*(9*s13 - 19*s23) - 
            20*s13^2*s23*(s13 + s23) + s12^2*(45*s13^2 + 53*s13*s23 - 
              20*s23^2) + s12*s13*(9*s13^2 + 26*s13*s23 + 37*s23^2)) - 
          p2q*p3q^4*(18*s12^4 + 10*s13^2*s23*(s13 + s23) + 
            s12^2*s23*(26*s13 + 15*s23) + s12^3*(27*s13 + 35*s23) + 
            s12*(-9*s13^3 + s13^2*s23 - 2*s13*s23^2 - 2*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p3q^2*(20*s13*s23^2 + 2*s12*s23*(7*s13 + 
                3*s23) + s12^2*(-9*s13 + 6*s23)) + 
            p2q^2*(-10*s13*(s13 - 2*s23)*s23 + s12^2*(9*s13 + 11*s23) + 
              s12*s23*(38*s13 + 11*s23)) + p2q*p3q*(-9*s12^3 + 26*s12^2*s23 - 
              10*s13*(s13 - 4*s23)*s23 + s12*(9*s13^2 + 79*s13*s23 + 
                35*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p3q^3*(30*s13*s23^2 + s12^2*(-36*s13 + 14*s23) + s12*s23*(s13 + 
                14*s23)) + p2q^3*(10*s13*s23*(-4*s13 + 3*s23) + 
              s12^2*(18*s13 + 11*s23) + s12*(-18*s13^2 + 56*s13*s23 + 
                11*s23^2)) + p2q^2*p3q*(-18*s12^3 + 24*s12^2*(3*s13 + s23) + 
              10*s13*s23*(-8*s13 + 7*s23) + s12*(18*s13^2 + 186*s13*s23 + 
                43*s23^2)) + p2q*p3q^2*(-54*s12^3 - 18*s12^2*(s13 - s23) + 
              10*s13*s23*(-4*s13 + 7*s23) + s12*(36*s13^2 + 158*s13*s23 + 
                73*s23^2))) + p1q*(p2q^4*s13*(9*s12^3 - 9*s12^2*(s13 - 
                3*s23) - 2*s12*(9*s13^2 + 15*s13*s23 - 14*s23^2) + 
              10*s23*(-3*s13^2 - 2*s13*s23 + s23^2)) + 
            p3q^4*(10*s13*s23^2*(s13 + s23) + s12^3*(-27*s13 + 8*s23) + 
              s12*s23*(-13*s13^2 + 5*s13*s23 + 8*s23^2) + s12^2*(-27*s13^2 - 
                32*s13*s23 + 16*s23^2)) + p2q^3*p3q*(-9*s12^4 + 
              9*s12^3*(5*s13 - s23) - 10*s13*s23*(7*s13^2 + 5*s13*s23 - 
                2*s23^2) + s12^2*(18*s13^2 + 139*s13*s23 + 10*s23^2) + 
              s12*(-36*s13^3 - 21*s13^2*s23 + 115*s13*s23^2 + 10*s23^3)) + 
            p2q^2*p3q^2*(-36*s12^4 + s12^3*(54*s13 - 55*s23) - 
              10*s13*s23*(7*s13^2 + 5*s13*s23 - 2*s23^2) + s12^2*(108*s13^2 + 
                210*s13*s23 + s23^2) + s12*(18*s13^3 + 87*s13^2*s23 + 
                179*s13*s23^2 + 20*s23^3)) + p2q*p3q^3*(-54*s12^4 - 
              s12^3*(72*s13 + 83*s23) - 10*s13*s23*(3*s13^2 + s13*s23 - 
                2*s23^2) + s12^2*(9*s13^2 + 12*s13*s23 - 2*s23^2) + 
              s12*(27*s13^3 + 56*s13^2*s23 + 106*s13*s23^2 + 27*s23^3)))))/
        (54*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k - p1]] + 
     ((ep^2*(p1q + p3q)*(s12 + s13 + s23)*(p2q^2*s13*(-8*s12 + s13) - 
          p3q^2*s12*(9*s12 + s23) + p1q^2*s23*(9*s12 + s23) + 
          p2q*p3q*(8*s12^2 - s13*s23 + 8*s12*(s13 + 2*s23)) + 
          p1q*(p2q*(-9*s12*s13 + 8*s12*s23 - 2*s13*s23) + 
            p3q*(-9*s12^2 + 8*s12*s23 + s23^2))))/(6*(p1q + p2q + p3q)*s12*
         s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(p1q + p3q)*(s12 + s13 + s23)*(p2q^5*s13^2*(9*s12 + s23) + 
          p2q^4*p3q*s13*(-18*s12^2 - 10*s12*s23 + s13*s23) + 
          p3q^5*s12*(9*s12*s13 + 16*s12*s23 + 17*s13*s23 + 16*s23^2) + 
          p2q^3*p3q^2*(9*s12^3 + 9*s12^2*(-2*s13 + s23) + 
            s13*s23*(s13 + s23) - 2*s12*(9*s13^2 - 8*s23^2)) - 
          p1q^2*s23*(p3q^3*(-16*s12^2 - 7*s12*s13 - 16*s12*s23 + s13*s23) + 
            p2q^3*(-7*s12^2 + 2*s12*s13 - 7*s12*s23 + s13*s23) + 
            p2q^2*p3q*(2*s12^2 - 16*s12*s13 - 13*s12*s23 + s13*s23 + s23^2) + 
            p2q*p3q^2*(2*s12^2 - 16*s12*s13 - 13*s12*s23 + s13*s23 + 
              s23^2)) + p2q^2*p3q^3*(18*s12^3 + 35*s12^2*s23 + 
            s13*s23*(2*s13 + s23) + s12*(-27*s13^2 + 20*s13*s23 + 
              49*s23^2)) + p2q*p3q^4*(18*s12^3 + s13^2*s23 + 
            3*s12^2*(9*s13 + 17*s23) + s12*(-9*s13^2 + 36*s13*s23 + 
              49*s23^2)) + p1q*(p2q^2*p3q^2*(18*s12^3 - 18*s12*s13^2 + 
              17*s12^2*s23 + 36*s12*s13*s23 + s13^2*s23 + 46*s12*s23^2 - 
              s23^3) - p2q^4*s13*(9*s12^2 + 18*s12*s23 + s23*(-s13 + s23)) + 
            p3q^4*(-(s13*s23^2) + 8*s12*s23*(3*s13 + 4*s23) + 
              s12^2*(9*s13 + 32*s23)) + p2q^3*p3q*(9*s12^3 - 18*s12^2*s13 + 
              s13^2*s23 + s12*(-18*s13^2 - 18*s13*s23 + 7*s23^2)) + 
            p2q*p3q^3*(18*s12^3 + s12^2*(18*s13 + 49*s23) + s23*(s13^2 - 
                2*s13*s23 - s23^2) + s12*(-9*s13^2 + 42*s13*s23 + 
                62*s23^2)))))/(6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((p1q + p3q)*(-2*p2q^4*p3q*(s12 - s13)*s13*(9*s12 + s23)*
           (s12 + s13 + s23) + p2q^5*s13^2*(9*s12 + s23)*(s12 + s13 + s23) + 
          p2q^3*p3q^2*(s12^2 - 4*s12*s13 + 2*s13^2)*(9*s12 + s23)*
           (s12 + s13 + s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p2q*(7*s12^2 - 2*s12*s13 + 7*s12*s23 - s13*s23) + 
            p3q*(16*s12^2 + 7*s12*s13 + 16*s12*s23 - s13*s23)) + 
          p2q^2*p3q^3*(18*s12^4 + 2*s13^2*s23*(s13 + s23) + 
            s12^3*(-18*s13 + 20*s23) + s12^2*(-45*s13^2 - 62*s13*s23 + 
              2*s23^2) - s12*s13*(9*s13^2 + 35*s13*s23 + 28*s23^2)) + 
          p3q^5*s12*(s12^2*(9*s13 + 16*s23) + s23*(17*s13^2 + 33*s13*s23 + 
              16*s23^2) + s12*(9*s13^2 + 42*s13*s23 + 32*s23^2)) + 
          p2q*p3q^4*(18*s12^4 + s13^2*s23*(s13 + s23) + 7*s12^2*s23*
             (5*s13 + 6*s23) + s12^3*(27*s13 + 44*s23) + 
            s12*(-9*s13^3 - 8*s13^2*s23 + 16*s13*s23^2 + 16*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p2q^2*(s13*(s13 - 2*s23)*s23 + 
              s12*s23*(-20*s13 + 7*s23) + s12^2*(-9*s13 + 7*s23)) + 
            p3q^2*(-2*s13*s23^2 + s12^2*(9*s13 + 48*s23) + s12*s23*(31*s13 + 
                48*s23)) + p2q*p3q*(9*s12^3 + 46*s12^2*s23 + 
              s13*(s13 - 4*s23)*s23 + s12*(-9*s13^2 - 16*s13*s23 + 
                37*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p3q^3*(-3*s13*s23^2 + 4*s12^2*(9*s13 + 28*s23) + 
              s12*s23*(89*s13 + 112*s23)) + p2q^2*p3q*(18*s12^3 + 
              s13*(8*s13 - 7*s23)*s23 + s12^2*(-72*s13 + 30*s23) - 
              2*s12*(9*s13^2 + 66*s13*s23 - 10*s23^2)) + 
            p2q^3*(s13*(4*s13 - 3*s23)*s23 + s12^2*(-18*s13 + 7*s23) + 
              s12*(18*s13^2 - 38*s13*s23 + 7*s23^2)) + p2q*p3q^2*
             (54*s12^3 + s13*(4*s13 - 7*s23)*s23 + 18*s12^2*(s13 + 8*s23) + 
              s12*(-36*s13^2 - 32*s13*s23 + 98*s23^2))) + 
          p1q*(p2q^4*s13*(-9*s12^3 + 9*s12^2*(s13 - 3*s23) + s12*(18*s13^2 + 
                3*s13*s23 - 19*s23^2) + s23*(3*s13^2 + 2*s13*s23 - s23^2)) + 
            p3q^4*(-(s13*s23^2*(s13 + s23)) + s12^3*(27*s13 + 64*s23) + 
              s12*s23*(58*s13^2 + 121*s13*s23 + 64*s23^2) + s12^2*(27*s13^2 + 
                149*s13*s23 + 128*s23^2)) + p2q^3*p3q*(9*s12^4 + 
              9*s12^3*(-5*s13 + s23) + s13*s23*(7*s13^2 + 5*s13*s23 - 
                2*s23^2) - s12^2*(18*s13^2 + 103*s13*s23 + s23^2) + 
              s12*(36*s13^3 - 6*s13^2*s23 - 52*s13*s23^2 - s23^3)) + 
            p2q^2*p3q^2*(36*s12^4 + s12^3*(-54*s13 + 46*s23) + 
              s13*s23*(7*s13^2 + 5*s13*s23 - 2*s23^2) + s12^2*(-108*s13^2 - 
                183*s13*s23 + 8*s23^2) - s12*(18*s13^3 + 114*s13^2*s23 + 
                107*s13*s23^2 + 2*s23^3)) + p2q*p3q^3*(54*s12^4 + 
              2*s12^3*(36*s13 + 73*s23) + s13*s23*(3*s13^2 + s13*s23 - 
                2*s23^2) + s12^2*(-9*s13^2 + 96*s13*s23 + 146*s23^2) + 
              s12*(-27*s13^3 - 38*s13^2*s23 + 38*s13*s23^2 + 54*s23^3)))))/
        (6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((ep^2*(p1q + p2q)*(s12 + s13 + s23)*(p3q^2*s12*(s12 + s13) + 
          (p1q + p2q)*s23*(-(p2q*s13) + p1q*s23) - 
          p3q*(p1q*(2*s12 + s13)*s23 + p2q*s12*(s13 + s23) + 
            p2q*s13*(s13 + 2*s23))))/(6*(p1q + p2q + p3q)*s12*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (ep*(p1q + p2q)*(s12 + s13 + s23)*(-(p3q^4*s12^2) + 
          p2q*p3q^3*s12*s13 + p2q^4*s13*(s12 + 2*(s13 + s23)) - 
          p2q^2*p3q^2*(s12^2 - 2*s13*s23 + s12*(s13 + s23)) + 
          p2q^3*p3q*(-s12^2 - s12*s13 + s13*(s13 + 3*s23)) + 
          p1q^2*(p2q*p3q*s23*(3*s13 + s23) + p2q^2*(2*s13*(s13 + s23) + 
              s12*(2*s13 + s23)) + p3q^2*(2*s13*(s13 + s23) + 
              s12*(2*s13 + s23))) + p1q*(-(p2q*p3q^2*(s12 - 2*s13)*s23) + 
            p3q^3*s12*(-s12 + s23) + p2q^2*p3q*(-s12^2 + s13^2 + s12*s23 + 
              6*s13*s23 + s23^2) + p2q^3*(4*s13*(s13 + s23) + 
              s12*(3*s13 + s23)))))/(6*p2q*p3q*(p1q + p2q + p3q)*s12*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       ((p1q + p2q)*(-(p3q^4*s12^2*(s12 + s13 + s23)) - 
          p2q*p3q^3*s12*(s12 - 2*s13)*(s12 + s13 + s23) - 
          p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23) - 
          p2q^3*p3q*(s12^2 + s12*s13 + s13^2)*(s12 + s13 + s23) + 
          p2q^4*s13*(s12^2 + 3*s12*(s13 + s23) + 2*(s13 + s23)^2) + 
          2*p1q^4*(2*s13*(s13 + s23)^2 + s12^2*(2*s13 + s23) + 
            s12*(4*s13^2 + 5*s13*s23 + s23^2)) - 2*p1q^3*(s12 + s13 + s23)*
           (p3q*(s12^2 - 2*s12*(s13 + s23) - 2*s13*(s13 + s23)) - 
            p2q*(6*s13*(s13 + s23) + s12*(5*s13 + 2*s23))) + 
          p1q^2*(s12 + s13 + s23)*(p3q^2*(-4*s12^2 + 2*s13*(s13 + s23) + 
              s12*(2*s13 + 3*s23)) + p2q^2*(14*s13*(s13 + s23) + 
              s12*(10*s13 + 3*s23)) + p2q*p3q*(-4*s12^2 + 4*s12*(s13 + s23) + 
              s13*(4*s13 + 5*s23))) + p1q*(-(p3q^3*s12*(3*s12 - s23)*
              (s12 + s13 + s23)) - p2q^2*p3q*(3*s12^3 + s13^3 - s13*s23^2 + 
              s12^2*(3*s13 + 2*s23) + s12*(s13^2 - 2*s13*s23 - s23^2)) + 
            p2q*p3q^2*(-4*s12^3 - 3*s12^2*s23 + s13*s23*(s13 + s23) + 
              s12*(4*s13^2 + 6*s13*s23 + s23^2)) + 
            p2q^3*(8*s13*(s13 + s23)^2 + s12^2*(5*s13 + s23) + 
              s12*(13*s13^2 + 14*s13*s23 + s23^2)))))/
        (6*p2q*p3q*(p1q + p2q + p3q)*s12*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*
        Eik[k - p2]] + 
     ((-3*ep*(s12 + s13 + s23)*(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + 
            p3q^3*s23^2 + 2*p2q*p3q^2*(2*s12*s13 + s23^2) + 
            2*p2q^2*p3q*(-2*s13^2 - 2*s13*s23 + s23^2)) - 
          p1q*(p2q + p3q)*(p2q^4*(s12 + 2*s13)*s23^2 + p3q^4*s23^2*
             (-s12 + s23) + p2q^3*p3q*(-4*s13^3 + 7*s13*s23^2 + 
              2*s23^2*(2*s12 + s23)) + p2q*p3q^3*(-4*s12^2*s13 + 
              2*s12*s23*(2*s13 + s23) + s23^2*(s13 + 3*s23)) + 
            4*p2q^2*p3q^2*(-(s13^2*s23) + s23^3 + s12*(2*s13^2 + s23^2))) + 
          (p2q + p3q)^2*(p2q^4*s13*(s12 + s13)*s23 + p3q^4*s23*
             (2*s13*(s13 + s23) + s12*(2*s13 + s23)) + p2q^3*p3q*
             (4*s13^3 + s12^2*s23 + 6*s13^2*s23 + s13*s23*(3*s12 + 2*s23)) + 
            p2q*p3q^3*(2*s12^2*(2*s13 + s23) + 2*s12*s23*(3*s13 + s23) + 
              s13*s23*(4*s13 + 5*s23)) + 2*p2q^2*p3q^2*(s12^2*s23 + 
              3*s13*s23*(s13 + s23) + s12*(-4*s13^2 + 2*s13*s23 + s23^2)))))/
        (2*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) + 
       (3*(-2*p1q^3*(p2q + p3q)*(-(p3q^2*(s12 - 2*s23)) + 
            p2q*p3q*(2*s12 - 4*s13 - s23) + p2q^2*(s12 + 2*s13 - s23))*s23^2*
           (s12 + s13 + s23) + 2*p1q^4*(p2q^2 - p3q^2)*s23^3*
           (s12 + s13 + s23) + (p2q + p3q)^2*(p2q^4*s13*(s12 + s13)*s23*
             (s12 + s13 + s23) + p2q^3*p3q*(s12^3*s23 + s12^2*s23^2 + 
              s12*s13*(4*s13^2 + s13*s23 - s23^2) + 2*s13^2*(2*s13^2 + 
                3*s13*s23 + s23^2)) + p2q*p3q^3*(s13*s23^2*(s13 + s23) + 
              2*s12^3*(2*s13 + s23) + s12*s13*s23*(2*s13 + 3*s23) + 
              2*s12^2*(2*s13^2 + 4*s13*s23 + s23^2)) + p3q^4*s23*
             (2*s13*(s13 + s23)^2 + s12^2*(2*s13 + s23) + s12*(4*s13^2 + 
                5*s13*s23 + s23^2)) + 2*p2q^2*p3q^2*(s12^3*s23 - 
              s13^2*s23*(s13 + s23) + s12^2*(-4*s13^2 - s13*s23 + s23^2) - 
              s12*s13*(4*s13^2 + 7*s13*s23 + 2*s23^2))) + 
          p1q^2*s23*(p2q^4*(2*s13^3 + 2*s12^2*(s13 - s23) - 2*s13^2*s23 - 
              3*s13*s23^2 + s23^3 + s12*(4*s13^2 - 4*s13*s23 - s23^2)) + 
            p2q*p3q^3*(2*s12^3 + s12*(-2*s13^2 + 8*s13*s23 - 5*s23^2) - 
              3*s23*(-4*s13^2 - 3*s13*s23 + s23^2)) + 
            p3q^4*(4*s13^3 + 8*s13^2*s23 + s13*s23^2 - 3*s23^3 + 
              4*s12^2*(s13 + s23) + s12*(8*s13^2 + 12*s13*s23 + s23^2)) + 
            2*p2q^2*p3q^2*(2*s12^3 - 3*s13^3 + s12^2*(s13 - 5*s23) + 
              5*s13^2*s23 + 9*s13*s23^2 + s23^3 - 2*s12*(2*s13^2 + 
                3*s23^2)) + p2q^3*p3q*(2*s12^3 - 8*s13^3 - 8*s12^2*s23 - 
              12*s13^2*s23 - s13*s23^2 + 3*s23^3 - s12*(10*s13^2 + 
                16*s13*s23 + 7*s23^2))) + p1q*(p2q + p3q)*
           (-(p2q^4*s23*(-2*s13^3 + 2*s13*s23^2 + s12^2*(-2*s13 + s23) + s12*
                (-4*s13^2 + s13*s23 + s23^2))) + p2q*p3q^3*
             (3*s12*(s13 - s23)*s23^2 + 4*s12^3*(s13 + s23) + 
              s23^2*(5*s13^2 + 4*s13*s23 - s23^2) + 2*s12^2*(2*s13^2 + 
                4*s13*s23 + s23^2)) + p3q^4*s23*(4*s13^3 + 8*s13^2*s23 + 
              3*s13*s23^2 - s23^3 + s12^2*(4*s13 + 3*s23) + s12*(8*s13^2 + 
                11*s13*s23 + 2*s23^2)) + p2q^3*p3q*(2*s12^3*s23 - 
              2*s12^2*s23*(s13 + s23) + s13*(4*s13^3 - 2*s13^2*s23 - 
                11*s13*s23^2 - 5*s23^3) + s12*(4*s13^3 - 10*s13^2*s23 - 
                13*s13*s23^2 - 4*s23^3)) + 2*p2q^2*p3q^2*(-4*s12^2*s13^2 + 
              3*s12^3*s23 + 2*s13*s23*(-2*s13^2 - s13*s23 + s23^2) - 
              s12*(4*s13^3 + 11*s13^2*s23 + 4*s13*s23^2 + 3*s23^3)))))/
        (2*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*
        Eik[k - p2]] + ((ep^2*(p1q + p2q)*(s12 + s13 + s23)*
         (p3q^2*s12*(s12 - 8*s13) + (p1q + p2q)*(9*s13 + s23)*
           (-(p2q*s13) + p1q*s23) + p3q*(p2q*s12*(8*s13 - s23) + 
            8*p2q*s13*(s13 + 2*s23) + p1q*(-9*s12*s13 - 2*s12*s23 + 
              8*s13*s23))))/(6*(p1q + p2q + p3q)*s12*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(p1q + p2q)*(s12 + s13 + s23)*(p3q^5*s12^2*(9*s13 + s23) + 
          p2q*p3q^4*s12*(-18*s13^2 + s12*s23 - 10*s13*s23) + 
          p2q^5*s13*(16*s23*(s13 + s23) + s12*(9*s13 + 17*s23)) + 
          p2q^2*p3q^3*(s12^2*(-18*s13 + s23) + s12*(-18*s13^2 + s23^2) + 
            s13*(9*s13^2 + 9*s13*s23 + 16*s23^2)) + p2q^3*p3q^2*
           (s12*s23*(20*s13 + s23) + s12^2*(-27*s13 + 2*s23) + 
            s13*(18*s13^2 + 35*s13*s23 + 49*s23^2)) + 
          p2q^4*p3q*(s12^2*(-9*s13 + s23) + 9*s12*s13*(3*s13 + 4*s23) + 
            s13*(18*s13^2 + 51*s13*s23 + 49*s23^2)) - 
          p1q^2*s23*(p2q^2*p3q*(2*s13^2 - 13*s13*s23 + s23^2 + 
              s12*(-16*s13 + s23)) + p2q*p3q^2*(2*s13^2 - 13*s13*s23 + 
              s23^2 + s12*(-16*s13 + s23)) + p2q^3*(s12*(-7*s13 + s23) - 
              16*s13*(s13 + s23)) + p3q^3*(-7*s13*(s13 + s23) + 
              s12*(2*s13 + s23))) + p1q*(p3q^4*s12*(-9*s13^2 - 18*s13*s23 + 
              (s12 - s23)*s23) + p2q^2*p3q^2*(18*s13^3 + 36*s12*s13*s23 + 
              17*s13^2*s23 + 46*s13*s23^2 - s23^3 + s12^2*(-18*s13 + s23)) + 
            p2q*p3q^3*(9*s13^3 + 7*s13*s23^2 + s12^2*(-18*s13 + s23) - 
              18*s12*s13*(s13 + s23)) + p2q^3*p3q*(18*s13^3 + 49*s13^2*s23 + 
              62*s13*s23^2 - s23^3 + s12^2*(-9*s13 + s23) + 2*s12*(9*s13^2 + 
                21*s13*s23 - s23^2)) + p2q^4*(32*s13*s23*(s13 + s23) + 
              s12*(9*s13^2 + 24*s13*s23 - s23^2)))))/(6*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12*s13*s23*(-(p3q*s12) + (p1q + p2q)*
           (s13 + s23))) + ((p1q + p2q)*(p3q^5*s12^2*(s12 + s13 + s23)*
           (9*s13 + s23) + 2*p2q*p3q^4*s12*(s12 - s13)*(s12 + s13 + s23)*
           (9*s13 + s23) + p2q^2*p3q^3*(2*s12^2 - 4*s12*s13 + s13^2)*
           (s12 + s13 + s23)*(9*s13 + s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p2q*s12*(7*s13 - s23) + 16*p2q*s13*(s13 + s23) + 
            7*p3q*s13*(s13 + s23) - p3q*s12*(2*s13 + s23)) + 
          p2q^3*p3q^2*(s12^3*(-9*s13 + 2*s23) + 2*s13^2*(9*s13^2 + 
              10*s13*s23 + s23^2) + s12^2*(-45*s13^2 - 35*s13*s23 + 
              2*s23^2) - 2*s12*s13*(9*s13^2 + 31*s13*s23 + 14*s23^2)) + 
          p2q^5*s13*(16*s23*(s13 + s23)^2 + s12^2*(9*s13 + 17*s23) + 
            s12*(9*s13^2 + 42*s13*s23 + 33*s23^2)) + 
          p2q^4*p3q*(s12^3*(-9*s13 + s23) + s12^2*s23*(-8*s13 + s23) + 
            s12*s13*(27*s13^2 + 35*s13*s23 + 16*s23^2) + 
            2*s13*(9*s13^3 + 22*s13^2*s23 + 21*s13*s23^2 + 8*s23^3)) + 
          2*p1q^3*(s12 + s13 + s23)*(p2q^2*(48*s13*s23*(s13 + s23) + 
              s12*(9*s13^2 + 31*s13*s23 - 2*s23^2)) + 
            p3q^2*(s12^2*s23 + 7*s13*s23*(s13 + s23) - s12*(9*s13^2 + 
                20*s13*s23 + 2*s23^2)) + p2q*p3q*(s12^2*(-9*s13 + s23) - 
              4*s12*s23*(4*s13 + s23) + s13*(9*s13^2 + 46*s13*s23 + 
                37*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*(112*s13*s23*(s13 + s23) + s12*(36*s13^2 + 89*s13*s23 - 
                3*s23^2)) + p3q^3*(7*s13*s23*(s13 + s23) + 2*s12^2*(9*s13 + 
                2*s23) - s12*(18*s13^2 + 38*s13*s23 + 3*s23^2)) + 
            p2q*p3q^2*(s12^2*(-18*s13 + 8*s23) - s12*(72*s13^2 + 
                132*s13*s23 + 7*s23^2) + 2*s13*(9*s13^2 + 15*s13*s23 + 
                10*s23^2)) + p2q^2*p3q*(4*s12^2*(-9*s13 + s23) + 
              s12*(18*s13^2 - 32*s13*s23 - 7*s23^2) + 2*s13*(27*s13^2 + 
                72*s13*s23 + 49*s23^2))) + 
          p1q*(p3q^4*s12*(-9*s13^3 - 27*s13^2*s23 - 19*s13*s23^2 - s23^3 + 
              3*s12^2*(6*s13 + s23) + s12*(9*s13^2 + 3*s13*s23 + 2*s23^2)) + 
            p2q^4*(64*s13*s23*(s13 + s23)^2 + s12^2*(27*s13^2 + 58*s13*s23 - 
                s23^2) + s12*(27*s13^3 + 149*s13^2*s23 + 121*s13*s23^2 - 
                s23^3)) + p2q*p3q^3*(s12^3*(36*s13 + 7*s23) + 
              s12^2*(-18*s13^2 - 6*s13*s23 + 5*s23^2) + s13*(9*s13^3 + 
                9*s13^2*s23 - s13*s23^2 - s23^3) - s12*(45*s13^3 + 
                103*s13^2*s23 + 52*s13*s23^2 + 2*s23^3)) - 
            p2q^2*p3q^2*(s12^3*(18*s13 - 7*s23) + s12^2*(108*s13^2 + 
                114*s13*s23 - 5*s23^2) + 2*s13*(-18*s13^3 - 23*s13^2*s23 - 
                4*s13*s23^2 + s23^3) + s12*(54*s13^3 + 183*s13^2*s23 + 
                107*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*
             (3*s12^3*(-9*s13 + s23) + s12^2*(-9*s13^2 - 38*s13*s23 + 
                s23^2) + s12*(72*s13^3 + 96*s13^2*s23 + 38*s13*s23^2 - 
                2*s23^3) + 2*s13*(27*s13^3 + 73*s13^2*s23 + 73*s13*s23^2 + 
                27*s23^3)))))/(6*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep^2*(p1q + p3q)*(s12 + s13 + s23)*(p2q^2*s13*(s12 + s13) + 
          (p1q + p3q)*s23*(-(p3q*s12) + p1q*s23) - 
          p2q*(p1q*(s12 + 2*s13)*s23 + p3q*(s12^2 + s12*s13 + 2*s12*s23 + 
              s13*s23))))/(6*(p1q + p2q + p3q)*s13*(-(p2q*s13) + 
          p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(p1q + p3q)*(s12 + s13 + s23)*(p2q^3*p3q*s12*s13 - p2q^4*s13^2 + 
          p3q^4*s12*(2*s12 + s13 + 2*s23) + p2q*p3q^3*(s12^2 - s12*s13 - 
            s13^2 + 3*s12*s23) - p2q^2*p3q^2*(s12*(s13 - 2*s23) + 
            s13*(s13 + s23)) + p1q*(p2q^2*p3q*(2*s12 - s13)*s23 + 
            p2q^3*s13*(-s13 + s23) + p3q^3*(4*s12^2 + 3*s12*s13 + 4*s12*s23 + 
              s13*s23) + p2q*p3q^2*(s12^2 - s13^2 + 6*s12*s23 + s13*s23 + 
              s23^2)) + p1q^2*(p2q*p3q*s23*(3*s12 + s23) + 
            p2q^2*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23)) + 
            p3q^2*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23)))))/
        (6*p2q*p3q*(p1q + p2q + p3q)*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - 
       ((p1q + p3q)*(-(p2q^2*p3q^2*(s12 - s13)^2*(s12 + s13 + s23)) + 
          p2q^3*p3q*(2*s12 - s13)*s13*(s12 + s13 + s23) - 
          p2q^4*s13^2*(s12 + s13 + s23) - p2q*p3q^3*(s12^2 + s12*s13 + s13^2)*
           (s12 + s13 + s23) + p3q^4*s12*(2*s12^2 + 3*s12*s13 + s13^2 + 
            4*s12*s23 + 3*s13*s23 + 2*s23^2) + 2*p1q^4*
           (2*s12^3 + 4*s12^2*(s13 + s23) + s13*s23*(s13 + s23) + 
            s12*(2*s13^2 + 5*s13*s23 + 2*s23^2)) + 2*p1q^3*(s12 + s13 + s23)*
           (p3q*(6*s12^2 + 5*s12*s13 + 6*s12*s23 + 2*s13*s23) + 
            p2q*(2*s12^2 - s13*(s13 - 2*s23) + 2*s12*(s13 + s23))) + 
          p1q^2*(s12 + s13 + s23)*(p2q^2*(2*s12^2 + 2*s12*(s13 + s23) + 
              s13*(-4*s13 + 3*s23)) + p2q*p3q*(4*s12^2 + 4*s13*(-s13 + s23) + 
              s12*(4*s13 + 5*s23)) + p3q^2*(14*s12^2 + 3*s13*s23 + 
              2*s12*(5*s13 + 7*s23))) + 
          p1q*(-(p2q^3*s13*(3*s13 - s23)*(s12 + s13 + s23)) - 
            p2q*p3q^2*(s12^3 + s12^2*s13 + s12*(3*s13^2 - 2*s13*s23 - 
                s23^2) + s13*(3*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*p3q*(s12^2*(4*s13 + s23) + s12*s23*(6*s13 + s23) + 
              s13*(-4*s13^2 - 3*s13*s23 + s23^2)) + 
            p3q^3*(8*s12^3 + s13*s23*(s13 + s23) + s12^2*(13*s13 + 16*s23) + 
              s12*(5*s13^2 + 14*s13*s23 + 8*s23^2)))))/
        (6*p2q*p3q*(p1q + p2q + p3q)*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*
        Eik[k - p3]] + 
     ((-3*ep*(s12 + s13 + s23)*(-(p1q^2*(p2q - p3q)*s23*(p2q^3*s23^2 + 
             p3q^3*s23^2 + 2*p2q^2*p3q*(2*s12*s13 + s23^2) + 
             2*p2q*p3q^2*(-2*s12^2 - 2*s12*s23 + s23^2))) + 
          p1q*(p2q + p3q)*(-(p3q^4*(2*s12 + s13)*s23^2) + p2q^4*(s13 - s23)*
             s23^2 - 4*p2q^2*p3q^2*(s12^2*(2*s13 - s23) + s23^2*(s13 + 
                s23)) + p2q*p3q^3*(4*s12^3 - 7*s12*s23^2 - 2*s23^2*(2*s13 + 
                s23)) - p2q^3*p3q*(s23^2*(2*s13 + 3*s23) + s12*(-4*s13^2 + 
                4*s13*s23 + s23^2))) + (p2q + p3q)^2*
           (p3q^4*s12*(s12 + s13)*s23 + p2q^4*s23*(2*s12^2 + s13*s23 + 
              2*s12*(s13 + s23)) + p2q*p3q^3*(4*s12^3 + 6*s12^2*s23 + 
              s13^2*s23 + s12*s23*(3*s13 + 2*s23)) + 2*p2q^2*p3q^2*
             (s13*s23*(s13 + s23) + s12^2*(-4*s13 + 3*s23) + s12*s23*(2*s13 + 
                3*s23)) + p2q^3*p3q*(4*s12^2*s23 + 2*s13*s23*(s13 + s23) + 
              s12*(4*s13^2 + 6*s13*s23 + 5*s23^2)))))/(2*p2q*p3q*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23)) + (3*(-2*p1q^4*(p2q^2 - p3q^2)*s23^3*(s12 + s13 + s23) + 
          2*p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*(p2q^2*(s13 - 2*s23) + 
            p2q*p3q*(4*s12 - 2*s13 + s23) + p3q^2*(-2*s12 - s13 + s23)) + 
          p1q^2*s23*(-(p2q*p3q^3*(8*s12^3 - 2*s13^3 + 8*s13^2*s23 + 7*s13*
                s23^2 - 3*s23^3 + s12*s23*(16*s13 + s23) + 2*s12^2*
                (5*s13 + 6*s23))) + p2q^3*p3q*(2*s13^3 - 2*s12^2*(s13 - 
                6*s23) - 5*s13*s23^2 - 3*s23^3 + s12*s23*(8*s13 + 9*s23)) + 
            p3q^4*(2*s12^3 + s12^2*(4*s13 - 2*s23) + s12*(2*s13^2 - 
                4*s13*s23 - 3*s23^2) + s23*(-2*s13^2 - s13*s23 + s23^2)) + 
            p2q^4*(4*s12^3 + 8*s12^2*(s13 + s23) + s23*(4*s13^2 + s13*s23 - 
                3*s23^2) + s12*(4*s13^2 + 12*s13*s23 + s23^2)) - 
            2*p2q^2*p3q^2*(3*s12^3 - 2*s13^3 + s12^2*(4*s13 - 5*s23) + 
              5*s13^2*s23 + 6*s13*s23^2 - s23^3 - s12*(s13^2 + 9*s23^2))) + 
          (p2q + p3q)^2*(p3q^4*s12*(s12 + s13)*s23*(s12 + s13 + s23) + 
            p2q*p3q^3*(4*s12^4 - s12*s13*s23^2 + s13^2*s23*(s13 + s23) + 
              s12^2*s23*(s13 + 2*s23) + s12^3*(4*s13 + 6*s23)) - 
            2*p2q^2*p3q^2*(-(s13^2*s23*(s13 + s23)) + s12^3*(4*s13 + s23) + 
              s12*s13*s23*(s13 + 2*s23) + s12^2*(4*s13^2 + 7*s13*s23 + 
                s23^2)) + p2q^4*s23*(2*s12^3 + 4*s12^2*(s13 + s23) + 
              s13*s23*(s13 + s23) + s12*(2*s13^2 + 5*s13*s23 + 2*s23^2)) + 
            p2q^3*p3q*(2*s13^2*s23*(s13 + s23) + s12^2*(4*s13^2 + 2*s13*s23 + 
                s23^2) + s12*(4*s13^3 + 8*s13^2*s23 + 3*s13*s23^2 + 
                s23^3))) + p1q*(p2q + p3q)*
           (-(p3q^4*s23*(-2*s12^3 - 4*s12^2*s13 + s13*s23*(s13 + s23) + s12*
                (-2*s13^2 + s13*s23 + 2*s23^2))) - 2*p2q^2*p3q^2*
             (-3*s13^3*s23 + 2*s12*(2*s13 - s23)*s23^2 + 3*s13*s23^3 + 
              4*s12^3*(s13 + s23) + s12^2*(4*s13^2 + 11*s13*s23 + 2*s23^2)) + 
            p2q^4*s23*(4*s12^3 + 8*s12^2*(s13 + s23) + s23*(3*s13^2 + 
                2*s13*s23 - s23^2) + s12*(4*s13^2 + 11*s13*s23 + 3*s23^2)) + 
            p2q*p3q^3*(4*s12^4 + s12^3*(4*s13 - 2*s23) - s12^2*s23*(10*s13 + 
                11*s23) + 2*s13*s23*(s13^2 - s13*s23 - 2*s23^2) - 
              s12*s23*(2*s13^2 + 13*s13*s23 + 5*s23^2)) + 
            p2q^3*p3q*(s12^2*(4*s13^2 + 5*s23^2) - s23*(-4*s13^3 - 
                2*s13^2*s23 + 3*s13*s23^2 + s23^3) + s12*(4*s13^3 + 
                8*s13^2*s23 + 3*s13*s23^2 + 4*s23^3)))))/
        (2*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        Eik[k - p3]] + 
     (-1/27*(ep^3*(s12 + s13 + s23)*(p3q^3*s12^2*(10*s12 + s13) - 
           (p1q + p2q)*(9*s13 + 10*s23)*(p2q*s13 - p1q*s23)^2 - 
           p3q^2*s12*(p2q*(29*s12*s13 + 2*s13^2 + 10*s12*s23) + 
             p1q*(9*s12*s13 + 30*s12*s23 + 2*s13*s23)) + 
           p3q*(p2q^2*s13*(28*s12*s13 + s13^2 + 20*s12*s23) + 
             p1q^2*s23*(18*s12*s13 + 30*s12*s23 + s13*s23) + 
             2*p1q*p2q*(9*s12*s13^2 + 9*s12*s13*s23 - s13^2*s23 + 10*s12*
                s23^2))))/((p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
           (p1q + p2q)*(s13 + s23))) + (ep^2*(s12 + s13 + s23)*
         (p2q^6*s13^3*(s12 + s13 + s23) - 10*p3q^3*(p3q*s12 - p1q*s13)*
           (s12 + s13 + s23)*(p3q*s12 - p1q*s23)^2 + p2q^5*s13^2*
           (p1q*(s13 - 2*s23)*(s12 + s13 + s23) + p3q*(-12*s12^2 + 19*s13^2 + 
              31*s13*s23 + 10*s23^2 - 4*s12*(5*s13 + 3*s23))) + 
          p2q^4*s13*(-(p1q^2*(2*s13 - s23)*s23*(s12 + s13 + s23)) + 
            p1q*p3q*(19*s13^3 - 2*s12^2*(s13 - 9*s23) - 7*s13^2*s23 - 
              52*s13*s23^2 - 20*s23^3 + s12*(-10*s13^2 + 32*s13*s23 + 
                18*s23^2)) + p3q^2*(21*s12^3 + 3*s12^2*(9*s13 + 7*s23) + 
              s13*(19*s13^2 + 33*s13*s23 + 10*s23^2) - s12*(83*s13^2 + 
                82*s13*s23 + 20*s23^2))) - p2q*p3q^2*
           (p3q^3*s12^2*(10*s12^2 + 7*s12*s13 - 30*s13^2 + 20*s12*s23 - 
              32*s13*s23) - p1q^3*s23^2*(-8*s12*s13 + 19*s13^2 + 31*s13*s23 + 
              10*s23^2) + p1q*p3q^2*s12*(4*s12^2*(2*s13 - 5*s23) + 
              s12*(s13^2 - 105*s13*s23 - 50*s23^2) + 4*s13*(5*s13^2 + 
                5*s13*s23 + s23^2)) + p1q^2*p3q*s23*(-2*s12^2*(8*s13 - 
                5*s23) + 2*s13*(10*s13^2 + 5*s13*s23 - 6*s23^2) + 
              s12*(58*s13^2 + 89*s13*s23 + 40*s23^2))) + 
          p2q^3*(p1q^3*s13*s23^2*(s12 + s13 + s23) - p1q^2*p3q*s23*
             (38*s13^3 + 43*s13^2*s23 - 11*s13*s23^2 - 10*s23^3 + 
              2*s12^2*(s13 + 5*s23) + s12*(-14*s13^2 + 20*s13*s23 + 
                10*s23^2)) + p3q^3*(-10*s12^4 + 2*s12^3*(s13 - 5*s23) + 
              2*s13^3*(5*s13 + 6*s23) + s12^2*(99*s13^2 + 71*s13*s23 + 
                10*s23^2) - s12*s13*(65*s13^2 + 86*s13*s23 + 20*s23^2)) + 
            p1q*p3q^2*(s12^3*(s13 + 20*s23) + s12^2*(17*s13^2 + 57*s13*s23 + 
                20*s23^2) + s13*(19*s13^3 - 7*s13^2*s23 - 56*s13*s23^2 - 
                20*s23^3) - 2*s12*(23*s13^3 + 5*s13^2*s23 + 21*s13*s23^2 + 
                10*s23^3))) - p2q^2*p3q*(-(p1q^3*s23^2*(-8*s12*s13 + 19*
                s13^2 + 31*s13*s23 + 10*s23^2)) + p3q^3*s12*
             (10*s12^3 + 5*s12^2*(5*s13 + 4*s23) + 2*s13^2*(15*s13 + 
                17*s23) - s12*(63*s13^2 + 73*s13*s23 + 10*s23^2)) + 
            p1q^2*p3q*s23*(38*s13^3 - 2*s12^2*(8*s13 - 5*s23) + 
              43*s13^2*s23 - 13*s13*s23^2 - 10*s23^3 + s12*(22*s13^2 + 
                107*s13*s23 + 40*s23^2)) + p1q*p3q^2*
             (4*s12^3*(2*s13 - 5*s23) + 2*s13^2*(-5*s13^2 + 5*s13*s23 + 
                12*s23^2) - s12^2*(35*s13^2 + 141*s13*s23 + 50*s23^2) + 
              s12*(28*s13^3 + 46*s13^2*s23 + 46*s13*s23^2 + 20*s23^3)))))/
        (27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(2*p1q^5*(p2q + 10*p3q)*s13*s23^2*(s12 + s13 + s23)^2 - 
          4*p1q^4*s23*(s12 + s13 + s23)^2*(p2q^2*s13*(s13 - s23) + 
            5*p3q^2*(-(s13*s23) + s12*(2*s13 + s23)) + 
            p2q*p3q*(5*s13*(2*s13 - 3*s23) + s12*(s13 + 5*s23))) + 
          (p3q*s12 - p2q*s13)^2*(-10*p3q^4*s12*(s12 + s13 + s23)^2 + 
            p2q^4*s13*(s12 + s13 + s23)^2 - p2q*p3q^3*(30*s12^3 + 
              s12^2*(41*s13 + 40*s23) + s12*(s13^2 + 10*s13*s23 + 10*s23^2) - 
              s13*(10*s13^2 + 21*s13*s23 + 11*s23^2)) + 
            p2q^3*p3q*(-10*s12^3 + 10*s12^2*s13 + s12*(41*s13^2 + 
                52*s13*s23 + 10*s23^2) + s13*(21*s13^2 + 43*s13*s23 + 
                22*s23^2)) + p2q^2*p3q^2*(-30*s12^3 - s12^2*(21*s13 + 
                20*s23) + 2*s12*(15*s13^2 + 21*s13*s23 + 5*s23^2) + 
              s13*(21*s13^2 + 44*s13*s23 + 23*s23^2))) + 
          p1q^2*(s12 + s13 + s23)*(p2q^4*s13*(s12 + s13 + s23)*
             (4*s13^2 - 6*s13*s23 + s23^2) - 10*p3q^4*s12*
             (2*s12^3 - 2*s12^2*s23 + s23*(2*s13^2 + 3*s13*s23 + s23^2) - 
              s12*(2*s13^2 + 4*s13*s23 + 3*s23^2)) + p2q*p3q^3*
             (-20*s12^4 + 20*s12^3*(4*s13 + 3*s23) + 10*s12^2*(6*s13^2 + 
                12*s13*s23 + s23^2) + s13*s23*(-20*s13^2 - 10*s13*s23 + 
                11*s23^2) - s12*(40*s13^3 + 102*s13^2*s23 + 55*s13*s23^2 + 
                10*s23^3)) + p2q^3*p3q*(-2*s12^2*(14*s13^2 - 17*s13*s23 + 
                5*s23^2) + 2*s12*(16*s13^3 - 67*s13^2*s23 + 7*s13*s23^2 + 
                5*s23^3) + s13*(60*s13^3 - 62*s13^2*s23 - 103*s13*s23^2 + 
                22*s23^3)) + p2q^2*p3q^2*(s12^3*(44*s13 + 40*s23) - 
              6*s12^2*(16*s13^2 - 4*s13*s23 + 5*s23^2) - s12*(120*s13^3 + 
                282*s13^2*s23 + 75*s13*s23^2 - 10*s23^3) + s13*(20*s13^3 - 
                62*s13^2*s23 - 63*s13*s23^2 + 23*s23^3))) + 
          p1q^3*(s12 + s13 + s23)*(p2q^3*s13*(s12 + s13 + s23)*
             (2*s13^2 - 8*s13*s23 + 3*s23^2) + 10*p3q^3*
             (s13*s23^2*(s13 + s23) + 2*s12^3*(s13 + 2*s23) + 
              2*s12^2*(s13^2 + s13*s23 + s23^2) - s12*s23*(4*s13^2 + 
                5*s13*s23 + 2*s23^2)) + p2q*p3q^2*(-38*s12^2*s13*(s13 + 
                s23) + 2*s12^3*(s13 + 20*s23) + s13*s23*(-40*s13^2 + 
                s13*s23 + 42*s23^2) - 10*s12*(4*s13^3 + 16*s13^2*s23 + 
                7*s13*s23^2 + 2*s23^3)) + p2q^2*p3q*(-4*s12^2*(s13^2 - 
                8*s13*s23 + 5*s23^2) + 2*s12*s13*(8*s13^2 - 46*s13*s23 + 
                41*s23^2) + s13*(20*s13^3 - 100*s13^2*s23 - 59*s13*s23^2 + 
                62*s23^3))) - p1q*(10*p3q^5*s12^2*(2*s12 - s13 - 2*s23)*
             (s12 + s13 + s23)^2 - p2q^5*s13^2*(3*s13 - 2*s23)*
             (s12 + s13 + s23)^2 + p2q^2*p3q^3*(20*s12^5 - 10*s12^4*(11*s13 + 
                4*s23) - s12^3*(151*s13^2 + 334*s13*s23 + 40*s23^2) + 
              2*s13^2*(-5*s13^3 + 16*s13*s23^2 + 11*s23^3) + 
              2*s12*s13*(41*s13^3 + 113*s13^2*s23 + 86*s13*s23^2 + 
                13*s23^3) + s12^2*(71*s13^3 - 41*s13^2*s23 - 98*s13*s23^2 + 
                20*s23^3)) + p2q*p3q^4*s12*(40*s12^4 - 10*s12^3*s13 - 
              s12^2*(111*s13^2 + 214*s13*s23 + 60*s23^2) + 2*s13*(10*s13^3 + 
                20*s13^2*s23 + 11*s13*s23^2 + s23^3) - s12*(41*s13^3 + 
                165*s13^2*s23 + 142*s13*s23^2 + 20*s23^3)) + 
            p2q^4*p3q*s13*(2*s12^3*(13*s13 - 9*s23) + s12^2*(-18*s13^2 + 
                56*s13*s23 + 4*s23^2) + s12*(-105*s13^3 - 16*s13^2*s23 + 
                114*s13*s23^2 + 22*s23^3) + s13*(-61*s13^3 - 81*s13^2*s23 + 
                24*s13*s23^2 + 44*s23^3)) + p2q^3*p3q^2*
             (2*s12^3*s13*(47*s13 - 43*s23) - s12^4*(43*s13 + 20*s23) + 
              s12^2*(249*s13^3 + 318*s13^2*s23 + 61*s13*s23^2 + 20*s23^3) + 
              s13^2*(-41*s13^3 - 41*s13^2*s23 + 46*s13*s23^2 + 46*s23^3) + 
              s12*s13*(71*s13^3 + 316*s13^2*s23 + 314*s13*s23^2 + 
                64*s23^3)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((ep^3*(s12 + s13 + s23)*(-(p3q^3*s12^2*(s12 + s13)) + 
          (p1q + p2q)*s23*(p2q*s13 - p1q*s23)^2 + p3q^2*s12*
           (2*p2q*s13^2 + p1q*(3*s12 + 2*s13)*s23 + p2q*s12*(2*s13 + s23)) - 
          p3q*(p1q^2*(3*s12 + s13)*s23^2 + 2*p1q*p2q*s23*(-s13^2 + s12*s23) + 
            p2q^2*(s13^3 + s12*s13*(s13 + 2*s23)))))/(3*(p1q + p2q + p3q)*s12*
         s13*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep^2*(s12 + s13 + s23)*(p2q*(p3q*s12 - p2q*s13)^2*
           (p3q^2*(2*s12 - s13 + s23) + p2q^2*(s12 + s13 + s23) - 
            p2q*p3q*(3*s13 + s23)) + p1q^3*s23^2*(p2q^2*(s12 + s13 + s23) + 
            p3q^2*(s12 + s13 + s23) - p2q*p3q*(3*s13 + s23)) + 
          p1q^2*s23*(-2*p3q^3*s12*(s12 + s13 + s23) - p2q^3*(2*s13 - s23)*
             (s12 + s13 + s23) - p2q^2*p3q*(2*s12^2 - 6*s13^2 + s13*s23 + 
              s23^2 + 2*s12*(s13 + s23)) + p2q*p3q^2*(-2*s13^2 - 3*s13*s23 + 
              s23^2 + 4*s12*(s13 + s23))) + 
          p1q*(p3q^4*s12^2*(s12 + s13 + s23) + p2q^4*s13*(s13 - 2*s23)*
             (s12 + s13 + s23) - p2q^3*p3q*(2*s12^2*(s13 + s23) + 
              2*s12*(s13 + s23)^2 + s13*(3*s13^2 - 5*s13*s23 - 2*s23^2)) - 
            p2q*p3q^3*s12*(5*s12*(s13 + s23) + 2*(s13^2 + s23^2)) + 
            p2q^2*p3q^2*(s12^3 + s12^2*(s13 + s23) + s13*(s13^2 + 3*s13*s23 - 
                2*s23^2) + s12*(7*s13^2 + 4*s13*s23 + 2*s23^2)))))/
        (3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) + (ep*(s12 + s13 + s23)*
         (2*p1q^5*s23^2*(s12 + s13 + s23) + 2*p1q^4*s23*(s12 + s13 + s23)*
           (p3q*(-2*s12 + s23) + 2*p2q*(-s13 + s23)) + p2q*(p2q + p3q)*
           (p3q*s12 - p2q*s13)^2*(p3q*(-s12 + s23) + p2q*(s12 + s13 + s23)) + 
          p1q^2*(2*p3q^3*s12*(s12 - s23)*(s12 + s13 + s23) + 
            p2q^3*(s12 + s13 + s23)*(4*s13^2 - 6*s13*s23 + s23^2) + 
            p2q*p3q^2*(4*s12^3 - s12*(2*s13 + 3*s23)^2 + s23*(-2*s13^2 - 
                2*s13*s23 + s23^2)) - p2q^2*p3q*(-2*s13^3 + 4*s13^2*s23 + 
              7*s13*s23^2 - 2*s23^3 + s12^2*(8*s13 + 6*s23) + 
              6*s12*(s13^2 + 3*s13*s23 + s23^2))) + 
          p1q^3*(p3q^2*(s12 + s13 + s23)*(2*s12^2 - 4*s12*s23 + s23^2) + 
            p2q^2*(s12 + s13 + s23)*(2*s13^2 - 8*s13*s23 + 3*s23^2) - 
            p2q*p3q*(4*s12^2*(s13 + 2*s23) + s23*(4*s13^2 + s13*s23 - 
                4*s23^2) + 2*s12*(2*s13^2 + 8*s13*s23 + 3*s23^2))) + 
          p1q*(p3q^4*s12^2*(s12 + s13 + s23) + p2q^4*s13*(3*s13 - 2*s23)*
             (s12 + s13 + s23) + p2q*p3q^3*s12*(2*s12^2 + s12*(s13 + 6*s23) - 
              2*(s13^2 + s13*s23 + s23^2)) - p2q^3*p3q*
             (2*s12^2*(3*s13 + s23) + 2*s12*(2*s13^2 + 4*s13*s23 + s23^2) + 
              s13*(-3*s13^2 - 2*s13*s23 + 4*s23^2)) + p2q^2*p3q^2*
             (3*s12^3 - s12^2*(s13 - 3*s23) + s13*(s13^2 + s13*s23 - 
                2*s23^2) - s12*(5*s13^2 + 8*s13*s23 + 4*s23^2)))))/
        (3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((ep^3*(s12 + s13 + s23)*(p1q^3*s23^2*(9*s12 + 10*s23) + 
          (p3q*s12 - p2q*s13)^2*(-(p2q*(s12 + 10*s13)) + 
            p3q*(9*s12 + 10*s23)) - p1q^2*s23*(30*p2q*s13*s23 + 
            p2q*s12*(18*s13 + s23) + p3q*(18*s12^2 + 11*s12*s23 - 
              10*s23^2)) + p1q*(p2q^2*s13*(9*s12*s13 + 2*s12*s23 + 
              30*s13*s23) + p3q^2*s12*(9*s12^2 - 8*s12*s23 - 20*s23^2) - 
            2*p2q*p3q*(s12^2*(9*s13 - s23) + 9*s12*s13*s23 + 10*s13*s23^2))))/
        (27*(p1q + p2q + p3q)*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep^2*(s12 + s13 + s23)*
         (p1q^3*s23^2*(10*p2q^3*s12*(s12 + s13 + s23) + 
            p3q^3*s12*(s12 + s13 + s23) + p2q^2*p3q*(19*s12^2 - 8*s12*s13 + 
              31*s12*s23 + 10*s23^2) + p2q*p3q^2*(19*s12^2 - 8*s12*s13 + 
              31*s12*s23 + 10*s23^2)) + (p3q*s12 - p2q*s13)^2*
           (p3q^4*s12*(s12 + s13 + s23) - 10*p2q^4*s13*(s12 + s13 + s23) + 
            p2q^3*p3q*(10*s12^2 - 3*s12*(9*s13 - 4*s23) - 10*s13*(s13 + 
                2*s23)) + p2q*p3q^3*(19*s12^2 + s12*(-18*s13 + 31*s23) - 
              10*(s13^2 + s13*s23 - s23^2)) + p2q^2*p3q^2*(19*s12^2 + 
              s12*(-45*s13 + 33*s23) - 10*(s13^2 + 2*s13*s23 - s23^2))) - 
          p1q^2*s23*(p3q^4*s12*(2*s12 - s23)*(s12 + s13 + s23) + 
            10*p2q^4*s13*(2*s12 + s23)*(s12 + s13 + s23) + 
            p2q^3*p3q*(20*s12^3 + 10*s13*s23*(s13 + 4*s23) + 
              2*s12^2*(29*s13 + 5*s23) + s12*(-16*s13^2 + 89*s13*s23 - 
                12*s23^2)) + p2q*p3q^3*(38*s12^3 + s12^2*(-14*s13 + 43*s23) + 
              s12*(2*s13^2 + 20*s13*s23 - 11*s23^2) + 10*s23*(s13^2 + 
                s13*s23 - s23^2)) + p2q^2*p3q^2*(38*s12^3 + s12^2*(22*s13 + 
                43*s23) + s12*(-16*s13^2 + 107*s13*s23 - 13*s23^2) + 
              10*s23*(s13^2 + 4*s13*s23 - s23^2))) + 
          p1q*(p3q^5*s12^2*(s12 - 2*s23)*(s12 + s13 + s23) + 
            10*p2q^5*s13^2*(s12 + s13 + s23)*(s12 + 2*s23) + 
            p2q^3*p3q^2*(10*s12^4 - 2*s12^3*(14*s13 + 5*s23) + 
              s12*s13*(-8*s13^2 + 141*s13*s23 - 46*s23^2) + s12^2*(35*s13^2 - 
                46*s13*s23 - 24*s23^2) + 10*s13*s23*(2*s13^2 + 5*s13*s23 - 
                2*s23^2)) - p2q^4*p3q*s13*(20*s12^3 - 10*s13*s23*(2*s13 + 
                5*s23) + s12^2*(s13 + 20*s23) + s12*(8*s13^2 - 105*s13*s23 + 
                4*s23^2)) + p2q*p3q^4*s12*(19*s12^3 - s12^2*(10*s13 + 
                7*s23) + 2*s23*(9*s13^2 + 9*s13*s23 - 10*s23^2) - 
              2*s12*(s13^2 - 16*s13*s23 + 26*s23^2)) + p2q^2*p3q^3*
             (19*s12^4 - s12^3*(46*s13 + 7*s23) + s12^2*(17*s13^2 - 
                10*s13*s23 - 56*s23^2) + 20*s13*s23*(s13^2 + s13*s23 - 
                s23^2) + s12*(s13^3 + 57*s13^2*s23 - 42*s13*s23^2 - 
                20*s23^3)))))/(27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(2*p1q^5*(10*p2q + p3q)*s12*s23^2*(s12 + s13 + s23)^2 - 
          4*p1q^4*s23*(s12 + s13 + s23)^2*(p3q^2*s12*(s12 - s23) + 
            5*p2q^2*(2*s12*s13 - s12*s23 + s13*s23) + 
            p2q*p3q*(10*s12^2 + s12*(s13 - 15*s23) + 5*s13*s23)) + 
          (p3q*s12 - p2q*s13)^2*(p3q^4*s12*(s12 + s13 + s23)^2 - 
            10*p2q^4*s13*(s12 + s13 + s23)^2 + p2q^3*p3q*(10*s12^3 - 
              s12^2*(s13 - 21*s23) - 10*s13*(3*s13^2 + 4*s13*s23 + s23^2) + 
              s12*(-41*s13^2 - 10*s13*s23 + 11*s23^2)) + 
            p2q*p3q^3*(21*s12^3 + s12^2*(41*s13 + 43*s23) + 10*s13*(-s13^2 + 
                s23^2) + 2*s12*(5*s13^2 + 26*s13*s23 + 11*s23^2)) + 
            p2q^2*p3q^2*(21*s12^3 + s12^2*(30*s13 + 44*s23) + 
              10*s13*(-3*s13^2 - 2*s13*s23 + s23^2) + s12*(-21*s13^2 + 
                42*s13*s23 + 23*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p3q^3*s12*(s12 + s13 + s23)*(2*s12^2 - 8*s12*s23 + 3*s23^2) + 
            p2q*p3q^2*(20*s12^4 + 4*s12^3*(4*s13 - 25*s23) - 20*s13^2*s23^2 + 
              2*s12*s23*(16*s13^2 + 41*s13*s23 + 31*s23^2) - s12^2*(4*s13^2 + 
                92*s13*s23 + 59*s23^2)) + 10*p2q^3*(2*s13*s23*(2*s13^2 + 
                s13*s23 - s23^2) + s12^2*(2*s13^2 - 4*s13*s23 + s23^2) + 
              s12*(2*s13^3 + 2*s13^2*s23 - 5*s13*s23^2 + s23^3)) - 
            p2q^2*p3q*(40*s12^3*(s13 + s23) + s12^2*(38*s13^2 + 160*s13*s23 - 
                s23^2) + 20*s13*s23*(-2*s13^2 + s23^2) - 2*s12*(s13^3 - 
                19*s13^2*s23 - 35*s13*s23^2 + 21*s23^3))) + 
          p1q^2*(s12 + s13 + s23)*(p3q^4*s12*(s12 + s13 + s23)*
             (4*s12^2 - 6*s12*s23 + s23^2) - 10*p2q^4*s13*
             (2*s13^3 - 2*s12^2*(s13 - s23) - 2*s13^2*s23 - 3*s13*s23^2 + 
              s23^3 + s12*s23*(-4*s13 + 3*s23)) + p2q*p3q^3*
             (60*s12^4 + s12^3*(32*s13 - 62*s23) + 10*s13*s23^2*(-s13 + 
                s23) + 2*s12*s23*(17*s13^2 + 7*s13*s23 + 11*s23^2) - 
              s12^2*(28*s13^2 + 134*s13*s23 + 103*s23^2)) + 
            p2q^3*p3q*(-20*s12^3*(2*s13 + s23) + 2*s12^2*(30*s13^2 - 
                51*s13*s23 - 5*s23^2) - 10*s13*(2*s13^3 - 6*s13^2*s23 - 
                s13*s23^2 + s23^3) + s12*(80*s13^3 + 120*s13^2*s23 - 
                55*s13*s23^2 + 11*s23^3)) + p2q^2*p3q^2*(20*s12^4 - 
              2*s12^3*(60*s13 + 31*s23) + 10*s13*s23*(4*s13^2 - 3*s13*s23 + 
                s23^2) - 3*s12^2*(32*s13^2 + 94*s13*s23 + 21*s23^2) + 
              s12*(44*s13^3 + 24*s13^2*s23 - 75*s13*s23^2 + 23*s23^3))) - 
          p1q*(-(p3q^5*s12^2*(3*s12 - 2*s23)*(s12 + s13 + s23)^2) - 
            10*p2q^5*s13^2*(s12 + s13 + s23)^2*(s12 - 2*s13 + 2*s23) + 
            p2q^4*p3q*s13*(20*s12^4 + s12^3*(-41*s13 + 40*s23) + 
              s12^2*(-111*s13^2 - 165*s13*s23 + 22*s23^2) + 20*s13*(2*s13^3 - 
                3*s13*s23^2 - s23^3) - 2*s12*(5*s13^3 + 107*s13^2*s23 + 
                71*s13*s23^2 - s23^3)) + p2q*p3q^4*s12*(-61*s12^4 - 
              3*s12^3*(35*s13 + 27*s23) - 2*s12^2*(9*s13^2 + 8*s13*s23 - 
                12*s23^2) + 2*s13*s23*(-9*s13^2 + 2*s13*s23 + 11*s23^2) + 
              2*s12*(13*s13^3 + 28*s13^2*s23 + 57*s13*s23^2 + 22*s23^3)) + 
            p2q^3*p3q^2*(-10*s12^5 + 82*s12^4*s13 + s12^3*(71*s13^2 + 
                226*s13*s23 + 32*s23^2) - 2*s12*s13*(55*s13^3 + 167*s13^2*
                 s23 + 49*s13*s23^2 - 13*s23^3) + 20*s13^2*(s13^3 - 
                2*s13^2*s23 - 2*s13*s23^2 + s23^3) + s12^2*(-151*s13^3 - 
                41*s13^2*s23 + 172*s13*s23^2 + 22*s23^3)) + 
            p2q^2*p3q^3*(-41*s12^5 + s12^4*(71*s13 - 41*s23) + 
              20*s13^2*s23*(-s13^2 + s23^2) + s12^3*(249*s13^2 + 
                316*s13*s23 + 46*s23^2) + s12^2*(94*s13^3 + 318*s13^2*s23 + 
                314*s13*s23^2 + 46*s23^3) + s12*s13*(-43*s13^3 - 
                86*s13^2*s23 + 61*s13*s23^2 + 64*s23^3)))))/
        (27*p2q*p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((ep^3*(s12 + s13 + s23)*(-(p2q^3*s13^2*(s12 + s13)) + 
          (p1q + p3q)*s23*(p3q*s12 - p1q*s23)^2 + p2q^2*s13*
           (p1q*(2*s12 + 3*s13)*s23 + p3q*(2*s12^2 + 2*s12*s13 + s13*s23)) - 
          p2q*(p1q^2*(s12 + 3*s13)*s23^2 + 2*p1q*p3q*s23*(-s12^2 + s13*s23) + 
            p3q^2*s12*(s12^2 + s12*s13 + 2*s13*s23))))/(3*(p1q + p2q + p3q)*
         s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep^2*(s12 + s13 + s23)*(p1q^3*s23^2*(-(p2q*p3q*(3*s12 + s23)) + 
            p2q^2*(s12 + s13 + s23) + p3q^2*(s12 + s13 + s23)) + 
          p3q*(p3q*s12 - p2q*s13)^2*(-(p2q*p3q*(3*s12 + s23)) + 
            p3q^2*(s12 + s13 + s23) + p2q^2*(-s12 + 2*s13 + s23)) - 
          p1q^2*s23*(2*p2q^3*s13*(s12 + s13 + s23) + p3q^3*(2*s12 - s23)*
             (s12 + s13 + s23) + p2q*p3q^2*(-6*s12^2 + 2*s13^2 + 2*s13*s23 + 
              s23^2 + s12*(2*s13 + s23)) + p2q^2*p3q*(2*s12^2 - 
              s23*(4*s13 + s23) + s12*(-4*s13 + 3*s23))) + 
          p1q*(p2q^4*s13^2*(s12 + s13 + s23) + p3q^4*s12*(s12 - 2*s23)*
             (s12 + s13 + s23) - p2q^3*p3q*s13*(2*s12^2 + 5*s12*s13 + 
              s23*(5*s13 + 2*s23)) - p2q*p3q^3*(3*s12^3 + s12^2*(2*s13 - 
                5*s23) + 2*s13*s23*(s13 + s23) + 2*s12*(s13^2 + 2*s13*s23 - 
                s23^2)) + p2q^2*p3q^2*(s12^3 + s12^2*(7*s13 + 3*s23) + 
              s12*(s13^2 + 4*s13*s23 - 2*s23^2) + s13*(s13^2 + s13*s23 + 
                2*s23^2)))))/(3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(2*p1q^5*s23^2*(s12 + s13 + s23)^2 + 2*p1q^4*s23*
           (s12 + s13 + s23)^2*(-2*p3q*s12 - 2*p2q*s13 + p2q*s23 + 
            2*p3q*s23) + p3q*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (s12 + s13 + s23)*(p2q*(-s13 + s23) + p3q*(s12 + s13 + s23)) + 
          p1q^3*(s12 + s13 + s23)*(p2q^2*(s12 + s13 + s23)*
             (2*s13^2 - 4*s13*s23 + s23^2) + p3q^2*(s12 + s13 + s23)*
             (2*s12^2 - 8*s12*s23 + 3*s23^2) - p2q*p3q*(4*s12^2*(s13 + s23) + 
              2*s23*(4*s13^2 + 3*s13*s23 - 2*s23^2) + s12*(4*s13^2 + 
                16*s13*s23 + s23^2))) + p1q^2*(s12 + s13 + s23)*
           (2*p2q^3*s13*(s13 - s23)*(s12 + s13 + s23) + 
            p3q^3*(s12 + s13 + s23)*(4*s12^2 - 6*s12*s23 + s23^2) - 
            p2q^2*p3q*(-4*s13^3 + 9*s13*s23^2 - s23^3 + 2*s12^2*(2*s13 + 
                s23) + 2*s12*s23*(6*s13 + s23)) + p2q*p3q^2*
             (2*s12^3 - 2*s12^2*(3*s13 + 2*s23) + 2*s23*(-3*s13^2 - 
                3*s13*s23 + s23^2) - s12*(8*s13^2 + 18*s13*s23 + 7*s23^2))) + 
          p1q*(p2q^4*s13^2*(s12 + s13 + s23)^2 + p3q^4*s12*(3*s12 - 2*s23)*
             (s12 + s13 + s23)^2 + p2q*p3q^3*(3*s12^4 - s12^3*(s13 - 5*s23) - 
              2*s13*s23*(s13 + s23)^2 - 2*s12*(s13 + s23)^2*(3*s13 + 2*s23) - 
              2*s12^2*(5*s13^2 + 5*s13*s23 + s23^2)) + p2q^2*p3q^2*
             (s12^4 + s12^3*(-4*s13 + 2*s23) - s12^2*(6*s13^2 + 12*s13*s23 + 
                s23^2) + s13*(3*s13^3 + 6*s13^2*s23 - s13*s23^2 - 4*s23^3) + 
              2*s12*(s13^3 - 3*s13^2*s23 - 7*s13*s23^2 - s23^3)) + 
            p2q^3*p3q*s13*(-2*s12^3 - s12^2*(s13 + 4*s23) + s12*(3*s13^2 + 
                5*s13*s23 - 4*s23^2) + 2*(s13^3 + 4*s13^2*s23 + 2*s13*s23^2 - 
                s23^3)))))/(3*p2q*p3q*(p1q + p2q + p3q)*s12*s13*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((-3*ep*(s12 + s13 + s23)*(2*p1q^4*(p2q + p3q)*s23^3*
           (s12 + s13 + s23) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (p3q^2*s23*(s12 + s13 + s23) + p2q^2*(4*s13^2 + s12*s23 + 
              5*s13*s23) + p2q*p3q*(s13*s23 + s12*(-4*s13 + s23))) - 
          p1q^3*s23^2*(2*p3q^2*(2*s12 - s23)*(s12 + s13 + s23) + 
            p2q^2*(4*s12*s13 + s23^2) + p2q*p3q*(4*s12^2 + 4*s13^2 + 
              2*s13*s23 - s23^2 + 2*s12*(6*s13 + s23))) - 
          p1q*(-2*p3q^4*s12*(s12 - s23)*s23*(s12 + s13 + s23) + 
            p2q^4*s13*(-4*s13^3 + 4*s13^2*s23 + 2*s12*s23^2 + 11*s13*s23^2) + 
            p2q*p3q^3*(s12^3*(4*s13 - 2*s23) + 3*s12^2*s23*(-2*s13 + s23) + 
              2*s13*s23^2*(s13 + s23) + 2*s12*s23*(2*s13^2 + 5*s13*s23 + 
                s23^2)) + p2q^3*p3q*(2*s12^2*s23^2 + s13^2*s23*(6*s13 + 
                11*s23) + 6*s12*s13*(2*s13^2 + s13*s23 + 2*s23^2)) + 
            p2q^2*p3q^2*(2*s12*s13*s23*(s13 + 9*s23) + 2*s13*s23*(-s13^2 + 
                s13*s23 + s23^2) + s12^2*(-12*s13^2 - 8*s13*s23 + 
                5*s23^2))) + p1q^2*s23*(p3q^3*(s12 + s13 + s23)*
             (2*s12^2 - 4*s12*s23 + s23^2) + p2q*p3q^2*(2*s12^3 + 
              s12^2*(6*s13 - 2*s23) - 4*s12*s13*(s13 + 4*s23) + 
              s23*(-4*s13^2 - 2*s13*s23 + s23^2)) + 2*p2q^2*p3q*
             (-2*s12^2*s13 - s12*(s13^2 + 10*s13*s23 - 2*s23^2) + 
              s13*(s13^2 + s13*s23 + 2*s23^2)) + 
            p2q^3*(s12*(2*s13^2 + s23^2) + s13*(-6*s13^2 - 2*s13*s23 + 
                7*s23^2)))))/(p2q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) - 
       (3*ep^2*(s12 + s13 + s23)*(-(p1q^3*p2q*s23^2*(-4*p3q*s12*s13 + 
             4*p2q*s13^2 + 4*p2q*s13*s23 + 3*p2q*s23^2 + 3*p3q*s23^2)) + 
          p1q^2*s23*(-(p3q^3*s23^2*(s12 + s13 + s23)) - 
            p2q*p3q^2*(2*s12 - s23)*(4*s12*s13 - 3*s23^2) - 
            4*p2q^2*p3q*s23*(-3*s12*s13 + s13^2 - 2*s12*s23 - s13*s23 + 
              s23^2) + p2q^3*(8*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + 
              (s12 - 2*s23)*s23^2)) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (-(p3q^2*s23*(s12 + s13 + s23)) + p2q^2*(-4*s13^2 - 3*s13*s23 + 
              (s12 - 2*s23)*s23) + p2q*p3q*((s13 - 2*s23)*s23 + 
              s12*(4*s13 + s23))) + p1q*(2*p3q^4*s12*s23^2*(s12 + s13 + 
              s23) + p2q^4*s13*(-4*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 - 
              2*(s12 - 2*s23)*s23^2) + p2q*p3q^3*(4*s12^3*s13 + 
              2*s13*s23^2*(s13 + s23) + 2*s12*s23^2*(s13 + 3*s23) - 
              s12^2*s23*(8*s13 + 3*s23)) + p2q^2*p3q^2*(6*s13*s23^3 + 
              2*s12*s23^2*(5*s13 + 4*s23) - s12^2*(12*s13^2 + 12*s13*s23 + 
                7*s23^2)) + p2q^3*p3q*(-2*s12^2*s23^2 + s13*s23*(8*s13^2 + 
                s13*s23 + 8*s23^2) + 4*s12*(3*s13^3 + 2*s13^2*s23 + 
                2*s13*s23^2 + s23^3)))))/(p2q*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((3*ep^2*(s12 + s13 + s23)*
         (p1q^3*p3q*s23^2*(4*p3q*s12^2 - 4*p2q*s12*s13 + 4*p3q*s12*s23 + 
            3*p2q*s23^2 + 3*p3q*s23^2) + p1q^2*s23*
           (p2q^3*s23^2*(s12 + s13 + s23) + p2q^2*p3q*(2*s13 - s23)*
             (4*s12*s13 - 3*s23^2) - p3q^3*(8*s12^3 + 4*s12^2*s23 + 
              3*s12*s23^2 + (s13 - 2*s23)*s23^2) + 4*p2q*p3q^2*s23*
             (s12^2 + s23*(-2*s13 + s23) - s12*(3*s13 + s23))) + 
          (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*s23*(s12 + s13 + s23) - 
            p2q*p3q*((s13 - 2*s23)*s23 + s12*(4*s13 + s23)) + 
            p3q^2*(4*s12^2 + 3*s12*s23 + s23*(-s13 + 2*s23))) + 
          p1q*(-2*p2q^4*s13*s23^2*(s12 + s13 + s23) + p3q^4*s12*
             (4*s12^3 - 4*s12^2*s23 - 3*s12*s23^2 + 2*(s13 - 2*s23)*s23^2) - 
            p2q*p3q^3*(-2*s13*(s13 - 2*s23)*s23^2 + 8*s12*s23^2*(s13 + s23) + 
              s12^2*s23*(8*s13 + s23) + 4*s12^3*(3*s13 + 2*s23)) + 
            p2q^2*p3q^2*(12*s12^2*s13^2 + s13*(7*s13 - 8*s23)*s23^2 - 
              2*s12*s23*(-6*s13^2 + 5*s13*s23 + 3*s23^2)) - 
            p2q^3*p3q*(2*s12^2*s23^2 - 3*s13*(s13 - 2*s23)*s23^2 + 
              2*s12*(2*s13^3 - 4*s13^2*s23 + s13*s23^2 + s23^3)))))/
        (p3q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) - (3*ep*(s12 + s13 + s23)*
         (2*p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) + 
          (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*s23*(s12 + s13 + s23) + 
            p3q^2*(4*s12^2 + 5*s12*s23 + s13*s23) + 
            p2q*p3q*(s13*s23 + s12*(-4*s13 + s23))) + p1q^3*s23^2*
           (-2*p2q^2*(2*s13 - s23)*(s12 + s13 + s23) - 
            p3q^2*(4*s12*s13 + s23^2) - p2q*p3q*(4*s12^2 + 4*s13^2 + 
              2*s13*s23 - s23^2 + 2*s12*(6*s13 + s23))) + 
          p1q^2*s23*(p2q^3*(s12 + s13 + s23)*(2*s13^2 - 4*s13*s23 + s23^2) + 
            p3q^3*(-6*s12^3 + 2*s12^2*(s13 - s23) + 7*s12*s23^2 + 
              s13*s23^2) + p2q^2*p3q*(2*s13^3 - 2*s13^2*s23 + s23^3 - 
              4*s12^2*(s13 + s23) + 2*s12*(3*s13^2 - 8*s13*s23 - s23^2)) + 
            2*p2q*p3q^2*(s12^3 + 2*s13*s23^2 + s12^2*(-s13 + s23) - 
              2*s12*(s13^2 + 5*s13*s23 - s23^2))) + 
          p1q*(2*p2q^4*s13*(s13 - s23)*s23*(s12 + s13 + s23) + 
            p3q^4*s12*(4*s12^3 - 4*s12^2*s23 - 11*s12*s23^2 - 2*s13*s23^2) - 
            p2q*p3q^3*(12*s12*s13*s23^2 + 2*s13^2*s23^2 + 6*s12^3*(2*s13 + 
                s23) + s12^2*s23*(6*s13 + 11*s23)) + p2q^2*p3q^2*
             (2*s12^3*s23 - 5*s13^2*s23^2 + 2*s12^2*(6*s13^2 - s13*s23 - 
                s23^2) - 2*s12*s23*(-4*s13^2 + 9*s13*s23 + s23^2)) - 
            p2q^3*p3q*(2*s12^2*s23*(2*s13 + s23) + s13*s23*(-2*s13^2 + 
                3*s13*s23 + 2*s23^2) + 2*s12*(2*s13^3 - 3*s13^2*s23 + 
                5*s13*s23^2 + s23^3)))))/(p3q*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep]
