P0Pol = ((ep*(-1 + (4*s12)/s13 + (4*s13)/s12))/6 + 
       (-9*(p2q + p3q)^2*s23*(s12 + s13 + s23)*
          (p2q*s13*(3*s12 + s13 + 2*s23) + p3q*s12*(s12 + 3*s13 + 2*s23)) - 
         9*p1q^2*(p2q + p3q)*s23*(s13*s23*(s13 + s23) + s12^2*(4*s13 + s23) + 
           s12*(4*s13^2 + 6*s13*s23 + s23^2)) + 
         p1q*(p3q^2*(9*s12^3*(4*s13 + s23) + 2*s12^2*s23*(18*s13 + 5*s23) + 
             s23^2*(s13^2 + 11*s13*s23 + 2*s23^2) + s12*s23*(-9*s13^2 + 27*
                s13*s23 + 11*s23^2)) + p2q*p3q*(9*s12^3*s23 + 
             s12^2*(-72*s13^2 - 45*s13*s23 + 11*s23^2) + 
             s12*s23*(-45*s13^2 + 18*s13*s23 + 22*s23^2) + 
             s23*(9*s13^3 + 11*s13^2*s23 + 22*s13*s23^2 + 4*s23^3)) + 
           p2q^2*(s12^2*s23*(-9*s13 + s23) + s23*(9*s13^3 + 10*s13^2*s23 + 11*
                s13*s23^2 + 2*s23^3) + s12*(36*s13^3 + 36*s13^2*s23 + 27*s13*
                s23^2 + 11*s23^3))))/(12*p1q*(p2q + p3q)^2*s12*s13*s23^2))*
      E0 . E0conj + ((-3*ep*(s12 - s13)*(s12 + s13 + s23))/(2*s12*s13*s23) + 
       ((s12 + s13 + s23)*(-36*p2q^2*s13*(2*s12 + s23) + 
          p1q*p3q*s23*(27*s12 - 9*s13 + 2*s23) + p1q*p2q*s23*
           (9*s12 + 9*s13 + 2*s23) - 18*p2q*p3q*(s13*s23 + 
            s12*(4*s13 + s23))))/(6*p1q*(p2q + p3q)*s12*s13*s23^2))*
      p1 . E0conj*p2 . E0 - (2*(s12 + s13 + s23)*(9*p2q^2*s13*(2*s12 + s23) - 
        p1q*p3q*s23*(9*s12 + s23) + 9*p3q^2*s12*(2*s13 + s23) - 
        p1q*p2q*s23*(9*s13 + s23) + 9*p2q*p3q*(s13*s23 + s12*(4*s13 + s23)))*
       p2 . E0*p2 . E0conj)/(3*p1q*(p2q + p3q)*s12*s13*s23^2) + 
     p1 . E0*((-1/3*(ep*(9*s12 + s23)*(s12 + s13 + s23))/(s12*s13*s23) + 
         ((s12 + s13 + s23)*(-18*p2q^2*s13*(2*s12 + s23) + 
            p1q*p2q*s23*(9*s12 + s23) + p1q*p3q*s23*(9*s12 + s23)))/
          (3*p1q*(p2q + p3q)*s12*s13*s23^2))*p1 . E0conj + 
       ((-3*ep*(s12 - s13)*(s12 + s13 + s23))/(2*s12*s13*s23) + 
         ((s12 + s13 + s23)*(-36*p2q^2*s13*(2*s12 + s23) + 
            p1q*p3q*s23*(27*s12 - 9*s13 + 2*s23) + p1q*p2q*s23*
             (9*s12 + 9*s13 + 2*s23) - 18*p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23))))/(6*p1q*(p2q + p3q)*s12*s13*s23^2))*p2 . E0conj)
 
P0Avg = (ep*(1 - (4*s12)/s13 - (4*s13)/s12))/6 + 
     (9*(p2q + p3q)^4*s23*(s12 + s13 + s23)*(p2q*s13*(3*s12 + s13 + 2*s23) + 
         p3q*s12*(s12 + 3*s13 + 2*s23)) + 9*p1q^4*(p2q + p3q)*s23*
        (s13*s23*(s13 + s23) + s12^2*(4*s13 + s23) + 
         s12*(4*s13^2 + 6*s13*s23 + s23^2)) + p1q*(p2q + p3q)^2*
        (2*p2q*p3q*(s23^2*(17*s13^2 + 7*s13*s23 - 2*s23^2) + 
           s12*s23*(90*s13^2 + 90*s13*s23 + 7*s23^2) + 
           s12^2*(36*s13^2 + 90*s13*s23 + 17*s23^2)) + 
         p3q^2*(-36*s12^3*s13 + s12^2*s23*(36*s13 + 35*s23) - 
           s23^2*(s13^2 + 11*s13*s23 + 2*s23^2) + 
           s12*s23*(72*s13^2 + 72*s13*s23 + 25*s23^2)) + 
         p2q^2*(s12^2*(72*s13 - s23)*s23 + s23^2*(35*s13^2 + 25*s13*s23 - 
             2*s23^2) + s12*(-36*s13^3 + 36*s13^2*s23 + 72*s13*s23^2 - 
             11*s23^3))) + 4*p1q^2*(3*p2q*p3q^2*(-6*s12^3*s13 - 
           s23^2*(-3*s13^2 + 2*s13*s23 + s23^2) + 
           s12*s23*(33*s13^2 + 25*s13*s23 + s23^2) + 
           3*s12^2*(4*s13^2 + 9*s13*s23 + 2*s23^2)) + 
         p3q^3*(-18*s12^3*s13 + 9*s12^2*s23*(s13 + s23) - 
           s23^3*(5*s13 + s23) + s12*s23*(27*s13^2 + 19*s13*s23 + 4*s23^2)) + 
         p2q^3*(27*s12^2*s13*s23 + s23^2*(9*s13^2 + 4*s13*s23 - s23^2) + 
           s12*(-18*s13^3 + 9*s13^2*s23 + 19*s13*s23^2 - 5*s23^3)) + 
         3*p2q^2*p3q*(s23^2*(6*s13^2 + s13*s23 - s23^2) + 
           3*s12^2*(4*s13^2 + 11*s13*s23 + s23^2) + 
           s12*(-6*s13^3 + 27*s13^2*s23 + 25*s13*s23^2 - 2*s23^3))) - 
       p1q^3*(p3q^2*(s12^2*s23*(-36*s13 + s23) + 9*s12^3*(4*s13 + s23) + 
           4*s23^2*(-2*s13^2 + s13*s23 + s23^2) + 
           s12*s23*(-81*s13^2 - 63*s13*s23 + 4*s23^2)) + 
         p2q^2*(-(s12^2*s23*(81*s13 + 8*s23)) + 
           s12*(36*s13^3 - 36*s13^2*s23 - 63*s13*s23^2 + 4*s23^3) + 
           s23*(9*s13^3 + s13^2*s23 + 4*s13*s23^2 + 4*s23^3)) + 
         p2q*p3q*(9*s12^3*s23 - s12^2*(72*s13^2 + 189*s13*s23 + 7*s23^2) + 
           s12*s23*(-189*s13^2 - 162*s13*s23 + 8*s23^2) + 
           s23*(9*s13^3 - 7*s13^2*s23 + 8*s13*s23^2 + 8*s23^3))))/
      (12*p1q*(p2q + p3q)^2*(p1q + p2q + p3q)^2*s12*s13*s23^2) + 
     ((s12 + s13 + s23)*(-(p1q^3*s23*(p3q*(9*s12 + s23) + 
           p2q*(9*s13 + s23))) + 9*p2q*p3q*(p2q + p3q)*
         (p2q*s13*(3*s12 + s13 + 2*s23) + p3q*s12*(s12 + 3*s13 + 2*s23)) + 
        p1q*(p3q^3*s12*(9*s12 + s23) + p2q^3*s13*(9*s13 + s23) + 
          p2q*p3q^2*(63*s12*s13 + 9*s12*s23 + 8*s13*s23 - 2*s23^2) + 
          p2q^2*p3q*(63*s12*s13 + 8*s12*s23 + 9*s13*s23 - 2*s23^2)) + 
        p1q^2*(p3q^2*(9*s12^2 - 8*s12*s23 - s23^2) + 
          p2q^2*(9*s13^2 - 8*s13*s23 - s23^2) + p2q*p3q*((s13 - 2*s23)*s23 + 
            s12*(54*s13 + s23))))*den[-1 + ep])/(6*p1q*(p2q + p3q)*
       (p1q + p2q + p3q)^2*s12*s13*s23)
 
P1Pol = ((-1/36*(ep^2*(-40*s13^2*(s13 + s23) + s12*s13*(15*s13 + 7*s23) + 
             s12^2*(19*s13 + 20*s23)))/(s12*s13*(s13 + s23)) + 
         (ep*(-9*(p2q + p3q)*s13*(-(p3q*s12) + p2q*s13)*(-(p3q*s12) + 
              p2q*(s13 + s23))*(s12^2 + 6*s12*(s13 + s23) + 5*(s13 + s23)^
                2) - 9*p1q^3*s23*(s13 + s23)*(5*s13*(s13 + s23)^2 + 
              s12^2*(s13 + 2*s23) + 2*s12*(3*s13^2 + 4*s13*s23 + s23^2)) + 
            p1q*(-(p2q^2*(s13 + s23)*(s13*s23*(-213*s13^2 - 178*s13*s23 + 
                   35*s23^2) + 2*s12^2*(18*s13^2 + 89*s13*s23 + 60*s23^2) + 
                 s12*s13*(108*s13^2 + 333*s13*s23 + 361*s23^2))) + 
              p3q^2*s12*(-9*s12^3*(s13 + 2*s23) + s12^2*(-9*s13^2 + 
                  133*s13*s23 + 93*s23^2) + s12*(117*s13^3 + 369*s13^2*s23 + 
                  451*s13*s23^2 - 9*s23^3) + s13*(45*s13^3 - 78*s13^2*s23 + 
                  29*s13*s23^2 + 152*s23^3)) + p2q*p3q*(-(s13*(s13 + s23)^2*
                  (45*s13^2 - 168*s13*s23 + 35*s23^2)) + s12^3*(45*s13^2 + 
                  214*s13*s23 + 129*s23^2) + s12^2*(117*s13^3 + 272*s13^2*
                   s23 + 252*s13*s23^2 - 111*s23^3) - s12*s13*(117*s13^3 + 
                  600*s13^2*s23 + 665*s13*s23^2 + 182*s23^3))) + 
            p1q^2*(-(p2q*(s13 + s23)*(s12^2*(27*s13^2 + 178*s13*s23 + 
                   129*s23^2) + s12*(54*s13^3 + 396*s13^2*s23 + 487*s13*
                    s23^2 + 9*s23^3) + s13*(-45*s13^3 - 186*s13^2*s23 + 
                   11*s13*s23^2 + 152*s23^3))) + p3q*(s13*(141*s13 - 107*s23)*
                 s23*(s13 + s23)^2 + 9*s12^3*(s13 + 2*s23)^2 + 
                s12^2*(18*s13^3 - 43*s13^2*s23 - 136*s13*s23^2 - 75*s23^3) - 
                s12*(63*s13^4 + 342*s13^3*s23 + 622*s13^2*s23^2 + 
                  334*s13*s23^3 - 9*s23^4)))))/(72*p1q*(p2q + p3q)*s12*s13*
           s23*(s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
         (-9*p1q^3*s23*(-11*s13^2*(s13 + s23)^2 + s12^2*(63*s13^2 + 74*s13*
                s23 + 20*s23^2) + 2*s12*(26*s13^3 + 63*s13^2*s23 + 47*s13*
                s23^2 + 10*s23^3)) + 9*(p2q + p3q)*(s12 + s13 + s23)*
            (p3q^2*s12^2*(54*s12*s13 + 29*s13^2 + 20*s12*s23 + 41*s13*s23) + 
             p2q^2*s13*(s12*(45*s13^2 + 56*s13*s23 + 20*s23^2) + s13*
                (20*s13^2 + 43*s13*s23 + 23*s23^2)) - p2q*p3q*s12*
              (s12*(99*s13^2 + 94*s13*s23 + 20*s23^2) + s13*(49*s13^2 + 
                 102*s13*s23 + 41*s23^2))) + 
           p1q^2*(p3q*(9*s12^3*(63*s13^2 + 128*s13*s23 + 40*s23^2) + s13*s23*
                (140*s13^3 + 321*s13^2*s23 + 470*s13*s23^2 + 289*s23^3) + 
               s12^2*(-666*s13^3 + 495*s13^2*s23 + 1769*s13*s23^2 + 
                 500*s23^3) + s12*(99*s13^4 - 585*s13^3*s23 + 14*s13^2*
                  s23^2 + 766*s13*s23^3 + 140*s23^4)) + 
             p2q*(-(s12^2*(567*s13^3 + 846*s13^2*s23 + 229*s13*s23^2 + 
                  40*s23^3)) + s12*(666*s13^4 + 459*s13^3*s23 + 5*s13^2*
                  s23^2 + 100*s13*s23^3 - 40*s23^4) + s13*(-99*s13^4 + 
                 41*s13^3*s23 + 420*s13^2*s23^2 + 569*s13*s23^3 + 
                 289*s23^4))) + p1q*(-(p3q^2*s12*(18*s12^3*(27*s13 + 
                  10*s23) + s12^2*(-261*s13^2 + 1449*s13*s23 + 500*s23^2) + 
                s12*(765*s13^3 + 1278*s13^2*s23 + 1841*s13*s23^2 + 
                  320*s23^3) + 2*s13*(90*s13^3 + 511*s13^2*s23 + 590*s13*
                   s23^2 + 329*s23^3))) + p2q^2*(2*s12^2*s23*(198*s13^2 + 
                 313*s13*s23 + 70*s23^2) + s12*(1413*s13^4 + 2628*s13^3*s23 + 
                 2282*s13^2*s23^2 + 1135*s13*s23^3 + 140*s23^4) + s13*
                (81*s13^4 + 581*s13^3*s23 + 960*s13^2*s23^2 + 749*s13*s23^3 + 
                 289*s23^4)) + p2q*p3q*(s12^3*(486*s13^2 - 297*s13*s23 - 
                 140*s23^2) - 9*s12^2*s13*(186*s13^2 + 176*s13*s23 + 
                 81*s23^2) + s12*(684*s13^4 + 130*s13^3*s23 - 5*s13^2*s23^2 + 
                 297*s13*s23^3 + 140*s23^4) + s13*(180*s13^4 + 779*s13^3*
                  s23 + 1059*s13^2*s23^2 + 749*s13*s23^3 + 289*s23^4))))/
          (144*ep*p1q*(p2q + p3q)*s12*s13^2*s23*(-(p3q*s12) + 
            (p1q + p2q)*(s13 + s23))) + (18*p1q^3*s23*(s13 + s23)*
            (-11*s13^2*(s13 + s23)^2 + s12^2*(42*s13^2 + 55*s13*s23 + 10*
                s23^2) + s12*(31*s13^3 + 86*s13^2*s23 + 65*s13*s23^2 + 10*
                s23^3)) + 18*(s12 + s13 + s23)*
            (-(p2q^3*s13*(s13 + s23)*(s12*(-10*s13^2 + 3*s13*s23 + 
                  10*s23^2) + s13*(20*s13^2 + 43*s13*s23 + 23*s23^2))) + 
             p3q^3*s12^2*(s12*(s13^2 - 21*s13*s23 - 10*s23^2) - s13*
                (29*s13^2 + 70*s13*s23 + 41*s23^2)) + p2q^2*p3q*
              (-(s13^2*(s13 + s23)^2*(20*s13 + 23*s23)) + s12^2*(-11*s13^3 + 
                 32*s13^2*s23 + 41*s13*s23^2 + 10*s23^3) + s12*s13*
                (59*s13^3 + 158*s13^2*s23 + 130*s13*s23^2 + 31*s23^3)) + 
             p2q*p3q^2*s12*(s12^2*(s13^2 - 21*s13*s23 - 10*s23^2) - 2*s12*
                (20*s13^3 + 19*s13^2*s23 - 5*s23^3) + s13*(49*s13^3 + 
                 151*s13^2*s23 + 143*s13*s23^2 + 41*s23^3))) + 
           p1q*(-(p2q^2*(s13 + s23)*(s12^2*(-504*s13^3 - 685*s13^2*s23 + 
                  298*s13*s23^2 + 140*s23^3) + s12*(1566*s13^4 + 3691*s13^3*
                   s23 + 2913*s13^2*s23^2 + 1096*s13*s23^3 + 140*s23^4) + 
                2*s13*(81*s13^4 + 705*s13^3*s23 + 1084*s13^2*s23^2 + 
                  749*s13*s23^3 + 289*s23^4))) + p3q^2*s12*(18*s12^3*
                (33*s13^2 + 55*s13*s23 + 10*s23^2) + s12^2*(-1026*s13^3 - 
                 469*s13^2*s23 + 1657*s13*s23^2 + 500*s23^3) + s12*
                (648*s13^4 + 2251*s13^3*s23 + 3102*s13^2*s23^2 + 
                 2203*s13*s23^3 + 320*s23^4) + 4*s13*(90*s13^4 + 663*s13^3*
                  s23 + 1145*s13^2*s23^2 + 901*s13*s23^3 + 329*s23^4)) - 
             p2q*p3q*(s12^3*(1098*s13^3 + 2125*s13^2*s23 + 503*s13*s23^2 - 
                 140*s23^3) + 2*s13*(s13 + s23)^2*(180*s13^3 + 723*s13^2*
                  s23 + 460*s13*s23^2 + 289*s23^3) - s12^2*s13*(2592*s13^3 + 
                 6320*s13^2*s23 + 4119*s13*s23^2 + 775*s23^3) + s12*
                (486*s13^5 - 347*s13^4*s23 - 1900*s13^3*s23^2 - 1467*s13^2*
                  s23^3 - 260*s13*s23^4 + 140*s23^5))) - 
           p1q^2*(-(p2q*(s13 + s23)*(s12^2*(648*s13^3 + 1828*s13^2*s23 + 
                  881*s13*s23^2 + 40*s23^3) + 2*s13*(99*s13^4 - 129*s13^3*
                   s23 - 472*s13^2*s23^2 - 533*s13*s23^3 - 289*s23^4) + 
                s12*(-1062*s13^4 - 1612*s13^3*s23 - 159*s13^2*s23^2 + 
                  263*s13*s23^3 + 40*s23^4))) + p3q*(2*s13*s23*(s13 + s23)^2*
                (228*s13^2 + 145*s13*s23 + 289*s23^2) + 36*s12^3*
                (21*s13^3 + 65*s13^2*s23 + 60*s13*s23^2 + 10*s23^3) + s12^2*
                (-846*s13^4 - 1126*s13^3*s23 + 1809*s13^2*s23^2 + 
                 2589*s13*s23^3 + 500*s23^4) + s12*(306*s13^5 + 172*s13^4*
                  s23 - 155*s13^3*s23^2 + 706*s13^2*s23^3 + 867*s13*s23^4 + 
                 140*s23^5))))/(144*p1q*(p2q + p3q)*s12*s13^2*s23*(s13 + s23)*
           (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*E0 . E0conj + 
       ((ep^2*(s12^3*(9*s13^2 - 10*s23^2) + 4*s13^2*s23*(9*s13^2 + 
              18*s13*s23 - s23^2) + s12^2*(18*s13^3 + 36*s13^2*s23 + 
              3*s13*s23^2 - 10*s23^3) + s12*s13*(9*s13^3 + 72*s13^2*s23 + 
              49*s13*s23^2 + 23*s23^3)))/(18*s12*s13^2*s23^2*(s13 + s23)) - 
         ((s12 + s13 + s23)*(9*p1q^6*s23^2*(-11*s13^3*(s13 + s23) + 
              40*s12^2*s23*(s13 + s23) - 3*s12*s13*(15*s13^2 + 34*s13*s23 + 
                16*s23^2)) - 9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*
             (p3q^3*s12*(40*s12^2*s23 - s13^2*(29*s13 + s23) - 6*s12*s13*
                 (9*s13 + 8*s23)) + p2q^3*s13*(40*s12^2*(s13 + s23) + 
                s13*(64*s13^2 + 65*s13*s23 + s23^2) + s12*(-19*s13^2 + 
                  46*s13*s23 + 20*s23^2)) + p2q*p3q^2*(40*s12^4 + 
                s12^3*(-28*s13 + 40*s23) + s13^2*(20*s13^2 + 21*s13*s23 + 
                  s23^2) - 4*s12^2*(7*s13^2 + 27*s13*s23 + 10*s23^2) + 
                s12*s13*(-13*s13^2 + 100*s13*s23 + 48*s23^2)) + 
              p2q^2*p3q*(-40*s12^3*(2*s13 + s23) + 2*s12^2*(s13^2 - 
                  16*s13*s23 - 20*s23^2) + 2*s13^2*(20*s13^2 + 21*s13*s23 + 
                  s23^2) + s12*s13*(-99*s13^2 + 95*s13*s23 + 68*s23^2))) + 
            p1q*(p3q^5*s12^2*(360*s12^4 - 4*s12^3*(153*s13 + 100*s23) - 
                9*s13^2*(20*s13^2 + 87*s13*s23 + 3*s23^2) + 2*s12^2*
                 (909*s13^2 + 196*s13*s23 + 700*s23^2) - s12*s13*(63*s13^2 + 
                  1943*s13*s23 + 1948*s23^2)) + p2q^5*s13^2*(-40*s12^2*
                 (9*s13^2 - s13*s23 - 10*s23^2) + s12*(-594*s13^3 - 
                  1481*s13^2*s23 + 800*s13*s23^2 + 40*s23^3) + 
                s13*(-1233*s13^3 - 424*s13^2*s23 + 1551*s13*s23^2 + 
                  670*s23^3)) + p2q^4*p3q*s13*(40*s12^3*(27*s13^2 + 
                  33*s13*s23 + 16*s23^2) + s12*s13*(1575*s13^3 - 925*s13^2*
                   s23 + 1050*s13*s23^2 - 342*s23^3) + 2*s12^2*(1071*s13^3 + 
                  1204*s13^2*s23 + 894*s13*s23^2 + 140*s23^3) + 
                s13^2*(-1134*s13^3 + 7*s13^2*s23 + 2715*s13*s23^2 + 
                  1358*s23^3)) + p2q*p3q^4*s12*(-160*s12^4*(9*s13 - 4*s23) + 
                4*s12^3*(945*s13^2 + 334*s13*s23 + 800*s23^2) + 
                18*s13^2*(20*s13^3 + 20*s13^2*s23 + 21*s13*s23^2 + s23^3) - 
                s12^2*(5184*s13^3 + 5989*s13^2*s23 + 6148*s13*s23^2 + 
                  1040*s23^3) + s12*s13*(-675*s13^3 - 768*s13^2*s23 + 
                  3773*s13*s23^2 + 1516*s23^3)) - p2q^3*p3q^2*(40*s12^4*
                 (27*s13^2 + 69*s13*s23 + 26*s23^2) + s13^3*(801*s13^3 + 
                  514*s13^2*s23 - 1209*s13*s23^2 - 706*s23^3) + s12*s13^2*
                 (-720*s13^3 + 431*s13^2*s23 - 42*s13*s23^2 + 786*s23^3) + 
                s12^3*(3222*s13^3 + 2199*s13^2*s23 + 1404*s13*s23^2 + 
                  1040*s23^3) - s12^2*s13*(3105*s13^3 + 3046*s13^2*s23 + 
                  5771*s13*s23^2 + 2076*s23^3)) + p2q^2*p3q^3*(40*s12^5*
                 (9*s13 + 35*s23) + s12^4*(2754*s13^2 - 988*s13*s23 + 
                  760*s23^2) + s12*s13^2*(1539*s13^3 + 1929*s13^2*s23 + 
                  494*s13*s23^2 - 386*s23^3) + 9*s13^3*(-20*s13^3 + 
                  11*s13^2*s23 + 41*s13*s23^2 + 2*s23^3) - s12^3*
                 (6615*s13^3 + 6521*s13^2*s23 + 6244*s13*s23^2 + 
                  2080*s23^3) + s12^2*s13*(3780*s13^3 + 2781*s13^2*s23 + 
                  8183*s13*s23^2 + 3312*s23^3))) + p1q^5*s23*
             (p3q*(-360*s12^3*s23*(3*s13 + 4*s23) + s12^2*(810*s13^3 + 
                  2934*s13^2*s23 + 2308*s13*s23^2 + 400*s23^3) + 
                s13*s23*(-162*s13^3 - 181*s13^2*s23 + 705*s13*s23^2 + 
                  652*s23^3) + s12*(198*s13^4 - 1341*s13^3*s23 - 1859*s13^2*
                   s23^2 - 352*s13*s23^3 - 320*s23^4)) + 
              p2q*(40*s12^2*s23*(-9*s13^2 + s13*s23 + 10*s23^2) + 
                s12*(810*s13^4 + 432*s13^3*s23 - 941*s13^2*s23^2 - 
                  532*s13*s23^3 - 320*s23^4) + s13*(198*s13^4 - 63*s13^3*
                   s23 - 280*s13^2*s23^2 + 705*s13*s23^3 + 652*s23^4))) + 
            p1q^2*(p3q^4*s12*(360*s12^5 - 4*s12^4*(243*s13 + 370*s23) + 
                9*s13^2*s23*(40*s13^2 + 87*s13*s23 + 3*s23^2) + 
                2*s12^3*(1215*s13^2 + 1134*s13*s23 + 760*s23^2) - 
                s12^2*(1314*s13^3 + 5539*s13^2*s23 + 1788*s13*s23^2 + 
                  2040*s23^3) + s12*s13*(-261*s13^3 - 73*s13^2*s23 + 
                  3142*s13*s23^2 + 3252*s23^3)) + p2q^4*s13*(2*s12^2*
                 (342*s13^3 + 715*s13^2*s23 + 360*s13*s23^2 + 140*s23^3) + 
                s13*(-675*s13^4 + 1582*s13^3*s23 + 3527*s13^2*s23^2 - 
                  331*s13*s23^3 - 1313*s23^4) + s12*(-1458*s13^4 + 
                  8*s13^3*s23 + 2771*s13^2*s23^2 - 998*s13*s23^3 + 
                  460*s23^4)) + p2q^3*p3q*(-2*s12^3*(882*s13^3 + 271*s13^2*
                   s23 - 640*s13*s23^2 - 500*s23^3) + s13^2*(-216*s13^4 + 
                  1473*s13^3*s23 + 3307*s13^2*s23^2 - 1737*s13*s23^3 - 
                  2635*s23^4) + s12*s13*(-1674*s13^4 + 3023*s13^3*s23 + 
                  6616*s13^2*s23^2 - 2923*s13*s23^3 - 816*s23^4) + 
                2*s12^2*(2835*s13^4 + 1607*s13^3*s23 + 889*s13^2*s23^2 - 
                  128*s13*s23^3 + 500*s23^4)) + p2q*p3q^3*(-80*s12^5*
                 (18*s13 + 5*s23) + s12^4*(4374*s13^2 + 3832*s13*s23 + 
                  600*s23^2) + 9*s13^2*s23*(40*s13^3 + 38*s13^2*s23 - 
                  19*s13*s23^2 - s23^3) - s12^3*(8208*s13^3 + 9635*s13^2*
                   s23 + 3672*s13*s23^2 + 5200*s23^3) + s12*s13*(522*s13^4 + 
                  2558*s13^3*s23 + 2856*s13^2*s23^2 - 1401*s13*s23^3 - 
                  1736*s23^4) + s12^2*(2088*s13^4 + 2561*s13^3*s23 + 
                  11553*s13^2*s23^2 + 8040*s13*s23^3 + 1000*s23^4)) + 
              p2q^2*p3q^2*(80*s12^4*(27*s13^2 + 2*s13*s23 - 25*s23^2) - 
                2*s12^3*(3807*s13^3 + 2823*s13^2*s23 + 284*s13*s23^2 + 
                  1080*s23^3) + s12*s13*(-558*s13^4 + 5537*s13^3*s23 + 
                  6638*s13^2*s23^2 - 3353*s13*s23^3 - 3012*s23^4) + 
                s13^2*(-261*s13^4 + 323*s13^3*s23 + 1238*s13^2*s23^2 - 
                  1253*s13*s23^3 - 1331*s23^4) + s12^2*(8127*s13^4 + 
                  3986*s13^3*s23 + 8893*s13^2*s23^2 + 4252*s13*s23^3 + 
                  2000*s23^4))) + p1q^4*(p3q^2*(1080*s12^4*s23*(s13 + 
                  2*s23) + s13*s23^2*(-81*s13^3 - 163*s13^2*s23 + 
                  714*s13*s23^2 + 652*s23^3) - s12^3*(405*s13^3 + 3114*s13^2*
                   s23 + 4292*s13*s23^2 + 1560*s23^3) - s12*s23*(-504*s13^4 + 
                  898*s13^3*s23 + 3313*s13^2*s23^2 + 2308*s13*s23^3 + 
                  320*s23^4) + s12^2*(-99*s13^4 + 2997*s13^3*s23 + 
                  6148*s13^2*s23^2 + 1748*s13*s23^3 + 1360*s23^4)) + 
              p2q*p3q*(-80*s12^3*s23*(9*s13^2 + 19*s13*s23 + 15*s23^2) + 
                2*s12^2*(405*s13^4 + 1215*s13^3*s23 + 1999*s13^2*s23^2 + 
                  928*s13*s23^3 + 720*s23^4) + s13*s23*(180*s13^4 - 
                  430*s13^3*s23 - 2205*s13^2*s23^2 + 793*s13*s23^3 + 
                  1956*s23^4) + s12*(198*s13^5 + 3636*s13^4*s23 + 786*s13^3*
                   s23^2 - 4419*s13^2*s23^3 - 1868*s13*s23^4 - 960*s23^5)) - 
              p2q^2*(2*s12^2*s23*(36*s13^3 + 409*s13^2*s23 + 360*s13*s23^2 + 
                  140*s23^3) + s13*(99*s13^5 - 279*s13^4*s23 + 547*s13^3*
                   s23^2 + 2438*s13^2*s23^3 - 79*s13*s23^4 - 1304*s23^5) + 
                s12*(405*s13^5 - 1872*s13^4*s23 - 1846*s13^3*s23^2 + 
                  242*s13^2*s23^3 - 692*s13*s23^4 + 640*s23^5))) + 
            p1q^3*(-(p3q^3*(360*s12^5*(s13 + 4*s23) + 9*s13^2*s23^2*
                  (20*s13^2 + 29*s13*s23 + s23^2) - 2*s12^4*(549*s13^2 + 
                   1694*s13*s23 + 1140*s23^2) + s12^3*(1557*s13^3 + 
                   6719*s13^2*s23 + 3052*s13*s23^2 + 2160*s23^3) + 
                 s12*s13*s23*(-342*s13^3 - 299*s13^2*s23 + 2399*s13*s23^2 + 
                   2388*s23^3) + s12^2*(342*s13^4 - 2393*s13^3*s23 - 
                   6329*s13^2*s23^2 - 3052*s13*s23^3 - 1320*s23^4))) + 
              p2q*p3q^2*(40*s12^4*(27*s13^2 + 73*s13*s23 + 30*s23^2) - 
                s12^3*(3618*s13^3 + 7591*s13^2*s23 + 3716*s13*s23^2 + 
                  2000*s23^3) + s13*s23*(54*s13^4 - 511*s13^3*s23 - 
                  2338*s13^2*s23^2 - 617*s13*s23^3 + 652*s23^4) + 
                s12^2*(2673*s13^4 + 5346*s13^3*s23 + 9249*s13^2*s23^2 + 
                  3300*s13*s23^3 + 3680*s23^4) + s12*(360*s13^5 + 4376*s13^4*
                   s23 + 2384*s13^3*s23^2 - 7255*s13^2*s23^3 - 5972*s13*
                   s23^4 - 320*s23^5)) + p2q^3*(2*s12^2*(342*s13^4 + 
                  479*s13^3*s23 - 69*s13^2*s23^2 - 60*s13*s23^3 - 
                  160*s23^4) + s12*(-1098*s13^5 + 2137*s13^4*s23 + 
                  2800*s13^3*s23^2 - 1257*s13^2*s23^3 + 1252*s13*s23^4 - 
                  320*s23^5) + s13*(-117*s13^5 + 1502*s13^4*s23 + 1384*s13^3*
                   s23^2 - 3258*s13^2*s23^3 - 1939*s13*s23^4 + 652*s23^5)) + 
              p2q^2*p3q*(-2*s12^3*(702*s13^3 + 751*s13^2*s23 - 100*s13*
                   s23^2 - 620*s23^3) + 2*s12^2*(1809*s13^4 + 1591*s13^3*
                   s23 + 887*s13^2*s23^2 - 494*s13*s23^3 + 1020*s23^4) - 
                s12*(999*s13^5 - 6963*s13^4*s23 - 6757*s13^3*s23^2 + 
                  5141*s13^2*s23^3 + 2332*s13*s23^4 + 640*s23^5) + 
                s13*(-18*s13^5 + 539*s13^4*s23 + 9*s13^3*s23^2 - 5263*s13^2*
                   s23^3 - 2547*s13*s23^4 + 1304*s23^5)))))/
          (72*ep*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (ep*(-9*p1q^6*s23^3*(s13 + s23)^2*(10*s12^3*s23^2 + 
              5*s13^3*(s13 + s23)^2 + 2*s12*s13*(3*s13^3 + 3*s13^2*s23 + 
                4*s13*s23^2 + 4*s23^3) + s12^2*(s13^3 + 18*s13*s23^2 + 
                10*s23^3)) + 9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*s23*
             (s13 + s23)*(s12 + s13 + s23)*(-(p2q^3*s13*(s13 + s23)*
                (-10*s12^2*s23 + s12*(s13^2 + 2*s13*s23 - 10*s23^2) + 
                 s13*(13*s13^2 + 5*s13*s23 - 8*s23^2))) + p3q^3*s12*(
                10*s12^2*s23^2 + 5*s13^3*(s13 + s23) + s12*(s13^3 + 
                  8*s13*s23^2)) + p2q^2*p3q*(-2*s13^2*(5*s13 - 4*s23)*
                 (s13 + s23)^2 - 10*s12^3*s23*(2*s13 + s23) + 
                s12^2*(s13^3 + 4*s13^2*s23 - 18*s13*s23^2 - 10*s23^3) + 
                s12*s13*(19*s13^3 + 19*s13^2*s23 + 2*s13*s23^2 + 2*s23^3)) + 
              p2q*p3q^2*(10*s12^4*s23 - 2*s12^3*(s13 - 5*s23)*s23 - 
                5*s13^3*(s13 + s23)^2 + s12*s13*(9*s13^3 + s13^2*s23 - 
                  16*s13*s23^2 - 8*s23^3) - 2*s12^2*(3*s13^3 + 4*s13^2*s23 + 
                  6*s13*s23^2 + 5*s23^3))) + p1q^5*s23^2*(s13 + s23)*
             (p3q*(90*s12^4*s23^2*(3*s13 + 4*s23) + s12^3*(54*s13^4 + 
                  45*s13^3*s23 + 278*s13^2*s23^2 + 608*s13*s23^3 + 
                  250*s23^4) + s12^2*(180*s13^5 + 351*s13^4*s23 + 498*s13^3*
                   s23^2 + 23*s13^2*s23^3 - 254*s13*s23^4 - 40*s23^5) + 
                s13*s23*(135*s13^5 + 407*s13^4*s23 + 463*s13^3*s23^2 + 
                  177*s13^2*s23^3 + 78*s13*s23^4 + 92*s23^5) + 
                s12*(126*s13^6 + 513*s13^5*s23 + 663*s13^4*s23^2 + 
                  307*s13^3*s23^3 - 79*s13^2*s23^4 + 40*s13*s23^5 + 
                  70*s23^6)) + p2q*(2*s12^3*(18*s13^4 + 9*s13^3*s23 + 
                  31*s13^2*s23^2 - 20*s13*s23^3 - 55*s23^4) + 
                s12^2*(90*s13^5 + 162*s13^4*s23 + 669*s13^3*s23^2 + 
                  365*s13^2*s23^3 - 182*s13*s23^4 - 40*s23^5) + 
                2*s13*(45*s13^6 + 180*s13^5*s23 + 307*s13^4*s23^2 + 
                  317*s13^3*s23^3 + 174*s13^2*s23^4 + 75*s13*s23^5 + 
                  46*s23^6) + s12*(144*s13^6 + 432*s13^5*s23 + 735*s13^4*
                   s23^2 + 856*s13^3*s23^3 + 389*s13^2*s23^4 + 130*s13*
                   s23^5 + 70*s23^6))) + p1q*(p2q^5*s13^2*(s13 + s23)*(
                2*s12^3*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*s23^2 - 
                  20*s13*s23^3 - 55*s23^4) + s12^2*(72*s13^5 + 126*s13^4*
                   s23 + 471*s13^3*s23^2 + 545*s13^2*s23^3 - 2*s13*s23^4 - 
                  220*s23^5) + 2*s13*s23*(-36*s13^5 + 109*s13^4*s23 + 
                  497*s13^3*s23^2 + 417*s13^2*s23^3 + 39*s13*s23^4 - 
                  26*s23^5) + s12*(36*s13^6 + 36*s13^5*s23 + 447*s13^4*
                   s23^2 + 1252*s13^3*s23^3 + 821*s13^2*s23^4 - 14*s13*
                   s23^5 - 110*s23^6)) - p3q^5*s12^2*(90*s12^5*s23^2*
                 (s13 + s23) + 9*s13^3*s23*(s13 + s23)^3*(5*s13 + 7*s23) + 
                2*s12^4*(18*s13^4 + 9*s13^3*s23 - 23*s13^2*s23^2 - 
                  29*s13*s23^3 - 10*s23^4) + s12^3*(72*s13^5 + 63*s13^4*s23 + 
                  147*s13^3*s23^2 - 274*s13^2*s23^3 - 110*s13*s23^4 + 
                  230*s23^5) + s12*s13*s23*(171*s13^5 + 452*s13^4*s23 + 
                  490*s13^3*s23^2 + 456*s13^2*s23^3 + 555*s13*s23^4 + 
                  308*s23^5) + s12^2*(36*s13^6 + 171*s13^5*s23 + 141*s13^4*
                   s23^2 + 145*s13^3*s23^3 + 605*s13^2*s23^4 + 886*s13*
                   s23^5 + 340*s23^6)) - p2q^4*p3q*s13*(-(s13^2*s23*
                  (s13 + s23)^2*(27*s13^4 + 796*s13^3*s23 + 1255*s13^2*
                    s23^2 + 62*s13*s23^3 - 104*s23^4)) - s12*s13*(s13 + s23)^
                  2*(72*s13^5 + 333*s13^4*s23 + 798*s13^3*s23^2 + 139*s13^2*
                   s23^3 - 610*s13*s23^4 - 404*s23^5) + 2*s12^4*(54*s13^5 + 
                  63*s13^4*s23 + 111*s13^3*s23^2 + 227*s13^2*s23^3 + 
                  200*s13*s23^4 + 70*s23^5) + s12^3*(144*s13^6 + 423*s13^5*
                   s23 + 1721*s13^4*s23^2 + 3316*s13^3*s23^3 + 3148*s13^2*
                   s23^4 + 1464*s13*s23^5 + 280*s23^6) + s12^2*(-36*s13^7 - 
                  153*s13^6*s23 - 303*s13^5*s23^2 + 1889*s13^4*s23^3 + 
                  4835*s13^3*s23^4 + 4168*s13^2*s23^5 + 1468*s13*s23^6 + 
                  140*s23^7)) + p2q*p3q^4*s12*(18*s13^3*s23*(s13 + s23)^3*
                 (5*s13^2 - 3*s13*s23 + 5*s23^2) - 4*s12^5*(18*s13^4 + 
                  9*s13^3*s23 - 104*s13^2*s23^2 - 65*s13*s23^3 + 35*s23^4) - 
                2*s12^4*(18*s13^5 + 90*s13^4*s23 + 405*s13^3*s23^2 + 
                  385*s13^2*s23^3 + 597*s13*s23^4 + 465*s23^5) + 
                s12^3*(144*s13^6 - 162*s13^5*s23 - 3*s13^4*s23^2 - 
                  1424*s13^3*s23^3 - 2849*s13^2*s23^4 - 2002*s13*s23^5 - 
                  540*s23^6) + 2*s12*s13*s23*(162*s13^6 + 273*s13^5*s23 + 
                  295*s13^4*s23^2 + 515*s13^3*s23^3 + 705*s13^2*s23^4 + 
                  492*s13*s23^5 + 118*s23^6) + s12^2*(108*s13^7 + 216*s13^6*
                   s23 - 211*s13^5*s23^2 + 55*s13^4*s23^3 + 697*s13^3*s23^4 + 
                  821*s13^2*s23^5 + 588*s13*s23^6 + 250*s23^7)) + 
              p2q^3*p3q^2*(-2*s13^3*s23*(s13 + s23)^2*(9*s13^4 - 217*s13^3*
                   s23 - 343*s13^2*s23^2 - 11*s13*s23^3 + 26*s23^4) + 
                2*s12^5*(54*s13^5 + 45*s13^4*s23 + 102*s13^3*s23^2 + 
                  421*s13^2*s23^3 + 445*s13*s23^4 + 125*s23^5) + 
                s12^4*s23*(216*s13^5 + 1923*s13^4*s23 + 3790*s13^3*s23^2 + 
                  3969*s13^2*s23^3 + 2226*s13*s23^4 + 500*s23^5) + 
                s12*s13^2*(36*s13^7 - 180*s13^6*s23 - 969*s13^5*s23^2 - 
                  2491*s13^4*s23^3 - 3505*s13^3*s23^4 - 3015*s13^2*s23^5 - 
                  1726*s13*s23^6 - 478*s23^7) - s12^2*s13*(144*s13^7 + 
                  1026*s13^6*s23 + 2871*s13^5*s23^2 + 5516*s13^4*s23^3 + 
                  5733*s13^3*s23^4 + 2966*s13^2*s23^5 + 644*s13*s23^6 + 
                  44*s23^7) + s12^3*(-288*s13^7 - 738*s13^6*s23 - 2449*s13^5*
                   s23^2 - 731*s13^4*s23^3 + 3107*s13^3*s23^4 + 3221*s13^2*
                   s23^5 + 1292*s13*s23^6 + 250*s23^7)) + p2q^2*p3q^3*(
                -9*s13^4*s23*(s13 + s23)^3*(5*s13^2 - 13*s13*s23 - 
                  10*s23^2) - 2*s12^6*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*
                   s23^2 + 205*s13*s23^3 + 170*s23^4) + s12^5*(144*s13^5 + 
                  45*s13^4*s23 - 1125*s13^3*s23^2 - 1624*s13^2*s23^3 - 
                  1188*s13*s23^4 - 540*s23^5) - s12*s13^2*s23*(135*s13^6 + 
                  492*s13^5*s23 + 880*s13^4*s23^2 + 638*s13^3*s23^3 + 
                  273*s13^2*s23^4 + 342*s13*s23^5 + 184*s23^6) + 
                s12^4*(288*s13^6 + 711*s13^5*s23 + 2427*s13^4*s23^2 + 
                  1957*s13^3*s23^3 + 1081*s13^2*s23^4 + 998*s13*s23^5 + 
                  300*s23^6) + s12^3*s23*(846*s13^6 + 1339*s13^5*s23 + 
                  4322*s13^4*s23^2 + 7258*s13^3*s23^3 + 5807*s13^2*s23^4 + 
                  2468*s13*s23^5 + 500*s23^6) + s12^2*s13*(-108*s13^7 + 
                  108*s13^6*s23 + 471*s13^5*s23^2 + 931*s13^4*s23^3 + 
                  2133*s13^3*s23^4 + 2633*s13^2*s23^5 + 1588*s13*s23^6 + 
                  332*s23^7))) - p1q^4*s23*(p2q^2*(s13 + s23)*(2*s12^3*
                 (36*s13^5 - 64*s13^3*s23^2 - 93*s13^2*s23^3 - 70*s13*s23^4 - 
                  25*s23^5) + s12^2*(153*s13^6 - 117*s13^5*s23 + 204*s13^4*
                   s23^2 - 824*s13^3*s23^3 - 1040*s13^2*s23^4 - 292*s13*
                   s23^5 - 190*s23^6) + s13*(45*s13^7 + 459*s13^6*s23 + 
                  931*s13^5*s23^2 + 391*s13^4*s23^3 - 842*s13^3*s23^4 - 
                  702*s13^2*s23^5 - 170*s13*s23^6 - 184*s23^7) + 
                2*s12*(63*s13^7 + 153*s13^6*s23 + 24*s13^5*s23^2 - 
                  212*s13^4*s23^3 - 584*s13^3*s23^4 - 421*s13^2*s23^5 - 
                  213*s13*s23^6 - 70*s23^7)) + p3q^2*(270*s12^5*s23^2*
                 (s13^2 + 3*s13*s23 + 2*s23^2) + s13*s23^2*(s13 + s23)^2*
                 (27*s13^4 - 2*s13^3*s23 - 65*s13^2*s23^2 + 32*s13*s23^3 - 
                  92*s23^4) + s12^4*(81*s13^5 + 180*s13^4*s23 + 151*s13^3*
                   s23^2 + 394*s13^2*s23^3 + 452*s13*s23^4 + 120*s23^5) + 
                s12^3*(198*s13^6 + 594*s13^5*s23 + 969*s13^4*s23^2 + 
                  389*s13^3*s23^3 - 1370*s13^2*s23^4 - 1196*s13*s23^5 - 
                  100*s23^6) + s12*s23*(378*s13^7 + 1723*s13^6*s23 + 
                  2861*s13^5*s23^2 + 2069*s13^4*s23^3 + 783*s13^3*s23^4 + 
                  466*s13^2*s23^5 + 166*s13*s23^6 - 70*s23^7) + 
                s12^2*(117*s13^7 + 828*s13^6*s23 + 1947*s13^5*s23^2 + 
                  1664*s13^4*s23^3 + 602*s13^3*s23^4 + 614*s13^2*s23^5 + 
                  770*s13*s23^6 + 250*s23^7)) + p2q*p3q*(s13*s23*(s13 + s23)^
                  2*(414*s13^5 + 463*s13^4*s23 - 398*s13^3*s23^2 - 
                  853*s13^2*s23^3 + 118*s13*s23^4 - 276*s23^5) + 
                2*s12^4*(36*s13^5 + 72*s13^4*s23 - 91*s13^3*s23^2 - 
                  352*s13^2*s23^3 - 395*s13*s23^4 - 165*s23^5) + 
                s12^3*(198*s13^6 + 504*s13^5*s23 + 625*s13^4*s23^2 + 
                  291*s13^3*s23^3 - 724*s13^2*s23^4 - 576*s13*s23^5 + 
                  30*s23^6) + s12^2*(108*s13^7 + 270*s13^6*s23 + 1107*s13^5*
                   s23^2 + 702*s13^4*s23^3 - 47*s13^3*s23^4 + 1118*s13^2*
                   s23^5 + 1152*s13*s23^6 + 150*s23^7) - s12*(18*s13^8 - 
                  252*s13^7*s23 - 889*s13^6*s23^2 - 919*s13^5*s23^3 + 
                  351*s13^4*s23^4 + 849*s13^3*s23^5 + 226*s13^2*s23^6 + 
                  238*s13*s23^7 + 210*s23^8))) + 
            p1q^2*(p2q^4*s13*(s13 + s23)*(2*s12^3*(36*s13^5 - 18*s13^4*s23 - 
                  100*s13^3*s23^2 - 111*s13^2*s23^3 - 70*s13*s23^4 - 
                  25*s23^5) + s13*s23*(324*s13^6 + 1174*s13^5*s23 + 
                  1165*s13^4*s23^2 - 581*s13^3*s23^3 - 1053*s13^2*s23^4 - 
                  269*s13*s23^5 - 112*s23^6) + s12^2*(144*s13^6 + 126*s13^5*
                   s23 + 600*s13^4*s23^2 - 347*s13^3*s23^3 - 1067*s13^2*
                   s23^4 - 562*s13*s23^5 - 100*s23^6) + 2*s12*(36*s13^7 + 
                  243*s13^6*s23 + 582*s13^5*s23^2 + 553*s13^4*s23^3 - 
                  377*s13^3*s23^4 - 637*s13^2*s23^5 - 267*s13*s23^6 - 
                  25*s23^7)) + p3q^4*s12*(-90*s12^6*s23^2*(s13 + s23) + 
                9*s13^3*(10*s13 - s23)*s23^2*(s13 + s23)^3 + 
                s12^5*(-36*s13^4 - 18*s13^3*s23 + 136*s13^2*s23^2 + 
                  418*s13*s23^3 + 290*s23^4) + s12^4*(-36*s13^5 + 
                  63*s13^4*s23 - 139*s13^3*s23^2 + 168*s13^2*s23^3 + 
                  276*s13*s23^4 - 20*s23^5) + s12^3*(36*s13^6 - 45*s13^5*
                   s23 - 84*s13^4*s23^2 - 23*s13^3*s23^3 - 1240*s13^2*s23^4 - 
                  1040*s13*s23^5 + 80*s23^6) + s12*s13*s23*(117*s13^6 + 
                  722*s13^5*s23 + 1216*s13^4*s23^2 + 900*s13^3*s23^3 + 
                  627*s13^2*s23^4 + 830*s13*s23^5 + 492*s23^6) + 
                s12^2*(36*s13^7 - 9*s13^6*s23 - 113*s13^5*s23^2 - 300*s13^4*
                   s23^3 - 28*s13^3*s23^4 + 598*s13^2*s23^5 + 1034*s13*
                   s23^6 + 480*s23^7)) + p2q*p3q^3*(9*s13^3*s23^2*
                 (s13 + s23)^3*(10*s13^2 - 11*s13*s23 - 5*s23^2) + 
                s12^6*(-36*s13^4 - 18*s13^3*s23 + 388*s13^2*s23^2 + 
                  490*s13*s23^3 + 110*s23^4) + s12^5*(108*s13^5 + 207*s13^4*
                   s23 - 737*s13^3*s23^2 - 1364*s13^2*s23^3 - 738*s13*s23^4 - 
                  100*s23^5) + s12^4*(252*s13^6 + 459*s13^5*s23 + 1244*s13^4*
                   s23^2 + 667*s13^3*s23^3 - 1160*s13^2*s23^4 + 370*s13*
                   s23^5 + 1040*s23^6) - s12*s13*s23*(234*s13^7 + 238*s13^6*
                   s23 + 3*s13^5*s23^2 + 537*s13^4*s23^3 + 1247*s13^3*s23^4 + 
                  1045*s13^2*s23^5 + 592*s13*s23^6 + 256*s23^7) + 
                s12^3*(36*s13^7 + 1143*s13^6*s23 + 2389*s13^5*s23^2 + 
                  3294*s13^4*s23^3 + 4472*s13^3*s23^4 + 5538*s13^2*s23^5 + 
                  4078*s13*s23^6 + 1020*s23^7) + s12^2*(-72*s13^8 + 
                  675*s13^7*s23 + 3580*s13^6*s23^2 + 5267*s13^5*s23^3 + 
                  3586*s13^4*s23^4 + 1912*s13^3*s23^5 + 1574*s13^2*s23^6 + 
                  424*s13*s23^7 - 230*s23^8)) - p2q^3*p3q*(
                -(s13^2*s23*(s13 + s23)^2*(513*s13^5 + 726*s13^4*s23 - 
                   866*s13^3*s23^2 - 2066*s13^2*s23^3 - 91*s13*s23^4 - 
                   224*s23^5)) + 2*s12^4*(90*s13^6 + 117*s13^5*s23 - 
                  187*s13^4*s23^2 - 381*s13^3*s23^3 - 32*s13^2*s23^4 + 
                  235*s13*s23^5 + 115*s23^6) + s12^3*(252*s13^7 + 945*s13^6*
                   s23 + 3015*s13^5*s23^2 + 3207*s13^4*s23^3 + 1841*s13^3*
                   s23^4 + 1692*s13^2*s23^5 + 1466*s13*s23^6 + 460*s23^7) + 
                s12^2*(-36*s13^8 + 1395*s13^7*s23 + 3612*s13^6*s23^2 + 
                  7496*s13^5*s23^3 + 9544*s13^4*s23^4 + 6423*s13^3*s23^5 + 
                  3076*s13^2*s23^6 + 1352*s13*s23^7 + 230*s23^8) + 
                s12*s13*(-108*s13^8 + 171*s13^7*s23 + 1927*s13^6*s23^2 + 
                  5440*s13^5*s23^3 + 8844*s13^4*s23^4 + 8345*s13^3*s23^5 + 
                  4501*s13^2*s23^6 + 1564*s13*s23^7 + 356*s23^8)) + 
              p2q^2*p3q^2*(s13^2*s23*(s13 + s23)^2*(117*s13^5 + 38*s13^4*
                   s23 - 830*s13^3*s23^2 - 1098*s13^2*s23^3 + 21*s13*s23^4 - 
                  112*s23^5) + 4*s12^5*(36*s13^5 + 54*s13^4*s23 - 145*s13^3*
                   s23^2 - 203*s13^2*s23^3 + 75*s13*s23^4 + 115*s23^5) + 
                2*s12^4*(18*s13^6 + 243*s13^5*s23 + 1175*s13^4*s23^2 + 
                  1644*s13^3*s23^3 + 1395*s13^2*s23^4 + 1226*s13*s23^5 + 
                  500*s23^6) + s12^3*(-324*s13^7 + 315*s13^6*s23 + 
                  317*s13^5*s23^2 + 2555*s13^4*s23^3 + 5415*s13^3*s23^4 + 
                  4842*s13^2*s23^5 + 1934*s13*s23^6 + 80*s23^7) + 
                s12*s13*(36*s13^8 - 1179*s13^7*s23 - 4139*s13^6*s23^2 - 
                  7038*s13^5*s23^3 - 7924*s13^4*s23^4 - 6187*s13^3*s23^5 - 
                  3387*s13^2*s23^6 - 1572*s13*s23^7 - 562*s23^8) - 
                s12^2*(180*s13^8 + 1251*s13^7*s23 + 1516*s13^6*s23^2 + 
                  2582*s13^5*s23^3 + 3518*s13^4*s23^4 + 2429*s13^3*s23^5 + 
                  1508*s13^2*s23^6 + 1320*s13*s23^7 + 460*s23^8))) + 
            p1q^3*(p3q^3*(-9*s13^3*(5*s13 - 3*s23)*s23^3*(s13 + s23)^3 + 
                90*s12^6*s23^2*(s13^2 + 5*s13*s23 + 4*s23^2) + 
                s12^5*(36*s13^5 + 135*s13^4*s23 + 17*s13^3*s23^2 - 
                  214*s13^2*s23^3 - 392*s13*s23^4 - 240*s23^5) + 
                s12^4*(72*s13^6 + 261*s13^5*s23 + 327*s13^4*s23^2 + 
                  295*s13^3*s23^3 - 1137*s13^2*s23^4 - 1164*s13*s23^5 - 
                  60*s23^6) - s12*s13*s23^2*(90*s13^6 + 499*s13^5*s23 + 
                  860*s13^4*s23^2 + 618*s13^3*s23^3 + 390*s13^2*s23^4 + 
                  571*s13*s23^5 + 348*s23^6) + s12^2*s23*(207*s13^7 + 
                  1226*s13^6*s23 + 2275*s13^5*s23^2 + 1861*s13^4*s23^3 + 
                  692*s13^3*s23^4 + 141*s13^2*s23^5 - 326*s13*s23^6 - 
                  300*s23^7) + s12^3*(36*s13^7 + 333*s13^6*s23 + 1158*s13^5*
                   s23^2 + 1021*s13^4*s23^3 + 589*s13^3*s23^4 + 1619*s13^2*
                   s23^5 + 1500*s13*s23^6 + 240*s23^7)) + p2q^3*(s13 + s23)*(
                2*s12^3*(18*s13^6 - 63*s13^5*s23 - 104*s13^4*s23^2 + 
                  9*s13^3*s23^3 + 47*s13^2*s23^4 + 20*s13*s23^5 + 35*s23^6) + 
                2*s13*s23*(117*s13^7 + 64*s13^6*s23 - 650*s13^5*s23^2 - 
                  1228*s13^4*s23^3 - 493*s13^3*s23^4 + 46*s13^2*s23^5 - 
                  46*s13*s23^6 + 46*s23^7) + s12^2*(72*s13^7 - 162*s13^6*
                   s23 + 219*s13^5*s23^2 - 1015*s13^4*s23^3 - 739*s13^3*
                   s23^4 + 171*s13^2*s23^5 + 122*s13*s23^6 + 140*s23^7) + 
                s12*(36*s13^8 + 198*s13^7*s23 + 69*s13^6*s23^2 - 608*s13^5*
                   s23^3 - 1760*s13^4*s23^4 - 984*s13^3*s23^5 - 115*s13^2*
                   s23^6 + 174*s13*s23^7 + 70*s23^8)) + p2q*p3q^2*(
                2*s12^5*(18*s13^5 + 63*s13^4*s23 - 122*s13^3*s23^2 - 
                  557*s13^2*s23^3 - 565*s13*s23^4 - 165*s23^5) - 
                2*s13*s23^2*(s13 + s23)^2*(189*s13^5 + 443*s13^4*s23 + 
                  199*s13^3*s23^2 - 177*s13^2*s23^3 + 72*s13*s23^4 - 
                  46*s23^5) + s12^4*s23*(72*s13^5 + 419*s13^4*s23 + 
                  874*s13^3*s23^2 + 121*s13^2*s23^3 + 34*s13*s23^4 + 
                  220*s23^5) + s12^3*(-108*s13^7 - 288*s13^6*s23 - 
                  315*s13^5*s23^2 + 209*s13^4*s23^3 + 1107*s13^3*s23^4 + 
                  2697*s13^2*s23^5 + 1434*s13*s23^6 - 300*s23^7) - 
                s12*s23*(630*s13^8 + 2614*s13^7*s23 + 5612*s13^6*s23^2 + 
                  7179*s13^5*s23^3 + 5173*s13^4*s23^4 + 2527*s13^3*s23^5 + 
                  1795*s13^2*s23^6 + 820*s13*s23^7 - 70*s23^8) - 
                s12^2*(72*s13^8 + 864*s13^7*s23 + 1612*s13^6*s23^2 + 
                  2518*s13^5*s23^3 + 2663*s13^4*s23^4 + 2396*s13^3*s23^5 + 
                  2773*s13^2*s23^6 + 2442*s13*s23^7 + 780*s23^8)) - 
              p2q^2*p3q*(2*s12^4*(36*s13^6 + 90*s13^5*s23 - 46*s13^4*s23^2 - 
                  384*s13^3*s23^3 - 314*s13^2*s23^4 + 85*s13*s23^5 + 
                  130*s23^6) - s13*s23*(s13 + s23)^2*(279*s13^6 - 610*s13^5*
                   s23 - 2206*s13^4*s23^2 - 1426*s13^3*s23^3 + 819*s13^2*
                   s23^4 - 328*s13*s23^5 + 184*s23^6) + s12^2*s23*
                 (1071*s13^7 + 2619*s13^6*s23 + 5598*s13^5*s23^2 + 
                  6134*s13^4*s23^3 + 3359*s13^3*s23^4 + 2765*s13^2*s23^5 + 
                  2070*s13*s23^6 + 340*s23^7) + s12^3*(108*s13^7 + 
                  693*s13^6*s23 + 2005*s13^5*s23^2 + 1641*s13^4*s23^3 + 
                  693*s13^3*s23^4 + 930*s13^2*s23^5 + 1468*s13*s23^6 + 
                  740*s23^7) + s12*(-36*s13^9 + 279*s13^8*s23 + 2104*s13^7*
                   s23^2 + 5661*s13^6*s23^3 + 8192*s13^5*s23^4 + 5985*s13^4*
                   s23^5 + 2192*s13^3*s23^6 + 895*s13^2*s23^7 + 228*s13*
                   s23^8 - 140*s23^9)))))/(36*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s13^3*s23^2*(s13 + s23)^2*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (-18*p1q^6*s23^3*(s13 + s23)*(11*s13^3*(s13 + s23)^3 - 
             10*s12^3*s23^2*(4*s13 + 3*s23) + s12*s13*(s13 + s23)^2*
              (s13^2 + 13*s13*s23 + 16*s23^2) - s12^2*(10*s13^4 - 3*s13^3*
                s23 + 11*s13^2*s23^2 + 54*s13*s23^3 + 30*s23^4)) - 
           18*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*
            (p3q^3*s12*(-(s13^2*(s13 + s23)^2*(29*s13 + s23)) + 10*s12^2*
                s23^2*(4*s13 + 3*s23) + s12*s13*(s13^3 - 12*s13^2*s23 - 
                 29*s13*s23^2 - 16*s23^3)) + p2q*p3q^2*(s13^2*(s13 + s23)^3*
                (20*s13 + s23) + 10*s12^4*s23*(4*s13 + 3*s23) - s12*s13*
                (s13 + s23)^2*(68*s13^2 - 35*s13*s23 - 16*s23^2) + 2*s12^2*
                (s13 + s23)^2*(53*s13^2 - 23*s13*s23 - 15*s23^2) - 2*s12^3*
                (s13^3 + 9*s13^2*s23 - 12*s13*s23^2 - 15*s23^3)) + 
             p2q^3*s13*(s13 + s23)*(s13*(88*s13 - 23*s23)*(s13 + s23)^2 + 10*
                s12^2*s23*(4*s13 + 3*s23) + s12*(-48*s13^3 - 33*s13^2*s23 + 
                 35*s13*s23^2 + 20*s23^3)) - p2q^2*p3q*(-2*s13^2*
                (20*s13 - 11*s23)*(s13 + s23)^3 + s12*s13*(s13 + s23)^2*
                (257*s13^2 + 37*s13*s23 - 36*s23^2) + 10*s12^3*s23*
                (8*s13^2 + 10*s13*s23 + 3*s23^2) + s12^2*(-5*s13^4 - 
                 8*s13^3*s23 + 41*s13^2*s23^2 + 74*s13*s23^3 + 30*s23^4))) - 
           p1q^5*s23^2*(p2q*(s13 + s23)*(4*s12^3*(27*s13^4 + 54*s13^3*s23 + 
                 202*s13^2*s23^2 - 75*s13*s23^3 - 155*s23^4) + s12^2*
                (576*s13^5 + 450*s13^4*s23 + 1963*s13^3*s23^2 + 1277*s13^2*
                  s23^3 - 472*s13*s23^4 - 160*s23^5) - 2*s13*(198*s13^6 + 
                 279*s13^5*s23 - 253*s13^4*s23^2 - 535*s13^3*s23^3 + 
                 169*s13^2*s23^4 + 644*s13*s23^5 + 274*s23^6) + s12*
                (72*s13^6 + 432*s13^5*s23 + 1877*s13^4*s23^2 + 2174*s13^3*
                  s23^3 + 397*s13^2*s23^4 + 360*s13*s23^5 + 460*s23^6)) + 
             p3q*(180*s12^4*s23^2*(12*s13^2 + 25*s13*s23 + 12*s23^2) + 4*s13*
                s23*(s13 + s23)^2*(108*s13^4 + 275*s13^3*s23 + 267*s13^2*
                  s23^2 - 77*s13*s23^3 - 137*s23^4) + 2*s12^3*(234*s13^5 + 
                 279*s13^4*s23 + 8*s13^3*s23^2 + 947*s13^2*s23^3 + 
                 1754*s13*s23^4 + 770*s23^5) + s12^2*(180*s13^6 + 
                 1872*s13^5*s23 + 4141*s13^4*s23^2 - 18*s13^3*s23^3 - 
                 5531*s13^2*s23^4 - 3224*s13*s23^5 - 160*s23^6) + s12*
                (-288*s13^7 + 990*s13^6*s23 + 8249*s13^5*s23^2 + 14995*s13^4*
                  s23^3 + 10023*s13^3*s23^4 + 1999*s13^2*s23^5 + 
                 460*s13*s23^6 + 460*s23^7))) + 
           p1q*(-(p2q^5*s13^2*(s13 + s23)*(4*s12^3*(27*s13^4 + 54*s13^3*s23 + 
                  202*s13^2*s23^2 - 75*s13*s23^3 - 155*s23^4) + 
                s12^2*(216*s13^5 - 144*s13^4*s23 + 4771*s13^3*s23^2 + 
                  3923*s13^2*s23^3 - 1588*s13*s23^4 - 880*s23^5) + 
                2*s13*s23*(1710*s13^5 + 3331*s13^4*s23 + 229*s13^3*s23^2 - 
                  2635*s13^2*s23^3 - 1103*s13*s23^4 + 140*s23^5) + 
                s12*(108*s13^6 + 3060*s13^5*s23 + 6665*s13^4*s23^2 + 
                  4442*s13^3*s23^3 + 181*s13^2*s23^4 - 648*s13*s23^5 - 
                  260*s23^6))) + p3q^5*s12^2*(180*s12^5*s23^2*(4*s13 + 
                 3*s23) - 18*s13^2*s23*(s13 + s23)^3*(20*s13^2 + 91*s13*s23 + 
                 3*s23^2) + 4*s12^4*(27*s13^4 + 45*s13^3*s23 - 59*s13^2*
                  s23^2 - 102*s13*s23^3 - 20*s23^4) + s12*s13*s23*
                (594*s13^5 + 299*s13^4*s23 - 1855*s13^3*s23^2 - 3803*s13^2*
                  s23^3 - 3655*s13*s23^4 - 1412*s23^5) + 2*s12^3*
                (108*s13^5 + 1377*s13^4*s23 + 2354*s13^3*s23^2 + 175*s13^2*
                  s23^3 + 250*s13*s23^4 + 730*s23^5) + s12^2*(108*s13^6 + 
                 3528*s13^5*s23 + 9797*s13^4*s23^2 + 8654*s13^3*s23^3 + 
                 3493*s13^2*s23^4 + 3456*s13*s23^5 + 2080*s23^6)) + 
             p2q^4*p3q*s13*(-2*s13^2*s23*(s13 + s23)^2*(1440*s13^4 + 
                 659*s13^3*s23 - 2136*s13^2*s23^2 - 1253*s13*s23^3 + 
                 262*s23^4) + 4*s12^4*(81*s13^5 + 216*s13^4*s23 + 
                 714*s13^3*s23^2 + 1079*s13^2*s23^3 + 780*s13*s23^4 + 
                 230*s23^5) + 2*s12^3*(216*s13^6 + 171*s13^5*s23 + 
                 3185*s13^4*s23^2 + 7677*s13^3*s23^3 + 7807*s13^2*s23^4 + 
                 3850*s13*s23^5 + 740*s23^6) + s12*s13*(-216*s13^7 + 
                 8406*s13^6*s23 + 25565*s13^5*s23^2 + 24299*s13^4*s23^3 + 
                 4651*s13^3*s23^4 - 5649*s13^2*s23^5 - 3772*s13*s23^6 - 
                 828*s23^7) + s12^2*(-108*s13^7 + 10764*s13^6*s23 + 
                 20785*s13^5*s23^2 + 14524*s13^4*s23^3 + 10877*s13^3*s23^4 + 
                 9258*s13^2*s23^5 + 3392*s13*s23^6 + 560*s23^7)) + 
             p2q*p3q^4*s12*(36*s13^2*s23*(s13 + s23)^3*(20*s13^3 + 
                 24*s13^2*s23 + 21*s13*s23^2 + s23^3) + 8*s12^5*(27*s13^4 + 
                 54*s13^3*s23 - 338*s13^2*s23^2 - 120*s13*s23^3 + 
                 115*s23^4) + 4*s12^4*(27*s13^5 + 288*s13^4*s23 + 
                 1028*s13^3*s23^2 + 1008*s13^2*s23^3 + 2086*s13*s23^4 + 
                 1425*s23^5) - 2*s12*s13*s23*(1440*s13^6 + 6708*s13^5*s23 + 
                 10903*s13^4*s23^2 + 5455*s13^3*s23^3 - 2569*s13^2*s23^4 - 
                 2951*s13*s23^5 - 562*s23^6) + s12^3*(-432*s13^6 - 
                 2988*s13^5*s23 + 331*s13^4*s23^2 + 9966*s13^3*s23^3 + 
                 8151*s13^2*s23^4 + 5272*s13*s23^5 + 3240*s23^6) - s12^2*
                (324*s13^7 + 7308*s13^6*s23 + 22781*s13^5*s23^2 + 
                 24313*s13^4*s23^3 + 12267*s13^3*s23^4 + 10839*s13^2*s23^5 + 
                 8308*s13*s23^6 + 1540*s23^7)) - p2q^3*p3q^2*(2*s13^3*s23*
                (s13 + s23)^2*(846*s13^4 + 1351*s13^3*s23 + 408*s13^2*s23^2 - 
                 73*s13*s23^3 + 104*s23^4) + 4*s12^5*(81*s13^5 + 189*s13^4*
                  s23 + 660*s13^3*s23^2 + 1777*s13^2*s23^3 + 1530*s13*s23^4 + 
                 385*s23^5) + s12^4*s23*(36*s13^5 + 9015*s13^4*s23 + 
                 20310*s13^3*s23^2 + 21467*s13^2*s23^3 + 12616*s13*s23^4 + 
                 3080*s23^5) + s12^2*s13*(-432*s13^7 + 4032*s13^6*s23 + 
                 26545*s13^5*s23^2 + 43932*s13^4*s23^3 + 25567*s13^3*s23^4 - 
                 1346*s13^2*s23^5 - 6986*s13*s23^6 - 2244*s23^7) + s12^3*
                (-864*s13^7 + 10512*s13^6*s23 + 30751*s13^5*s23^2 + 
                 35675*s13^4*s23^3 + 18241*s13^3*s23^4 + 5973*s13^2*s23^5 + 
                 4252*s13*s23^6 + 1540*s23^7) + s12*s13^2*(108*s13^7 - 
                 5508*s13^6*s23 - 12985*s13^5*s23^2 - 6499*s13^4*s23^3 + 
                 7213*s13^3*s23^4 + 12411*s13^2*s23^5 + 8468*s13*s23^6 + 
                 2400*s23^7)) + p2q^2*p3q^3*(-18*s13^3*s23*(s13 + s23)^3*
                (20*s13^3 - 7*s13^2*s23 - 41*s13*s23^2 - 2*s23^3) + 4*s12^6*
                (27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 + 825*s13*s23^3 + 
                 520*s23^4) + s12^5*(-432*s13^5 - 666*s13^4*s23 + 
                 6016*s13^3*s23^2 + 7518*s13^2*s23^3 + 6188*s13*s23^4 + 
                 3240*s23^5) + s12^4*(-864*s13^6 + 1584*s13^5*s23 + 
                 4799*s13^4*s23^2 + 2066*s13^3*s23^3 - 10173*s13^2*s23^4 - 
                 10388*s13*s23^5 - 1920*s23^6) + s12*s13^2*s23*(3978*s13^6 + 
                 15963*s13^5*s23 + 27037*s13^4*s23^2 + 22213*s13^3*s23^3 + 
                 6161*s13^2*s23^4 - 2276*s13*s23^5 - 1276*s23^6) - s12^3*s23*
                (720*s13^6 + 8233*s13^5*s23 + 20571*s13^4*s23^2 + 
                 19979*s13^3*s23^3 + 17609*s13^2*s23^4 + 12628*s13*s23^5 + 
                 3080*s23^6) + s12^2*s13*(324*s13^7 + 1152*s13^6*s23 - 
                 1995*s13^5*s23^2 - 10620*s13^4*s23^3 - 7497*s13^3*s23^4 + 
                 8082*s13^2*s23^5 + 10430*s13*s23^6 + 2808*s23^7))) + 
           2*p1q^4*s23*(-(p2q^2*(s13 + s23)*(s12^3*(-108*s13^5 - 414*s13^4*
                   s23 + 191*s13^3*s23^2 + 847*s13^2*s23^3 + 590*s13*s23^4 + 
                  190*s23^5) + s12^2*(-306*s13^6 - 450*s13^5*s23 - 
                  1729*s13^4*s23^2 + 1433*s13^3*s23^3 + 1884*s13^2*s23^4 + 
                  516*s13*s23^5 + 650*s23^6) + s13*(99*s13^7 - 261*s13^6*
                   s23 + 169*s13^5*s23^2 + 2505*s13^4*s23^3 + 3442*s13^3*
                   s23^4 + 1076*s13^2*s23^5 - 938*s13*s23^6 - 548*s23^7) - 
                s12*(99*s13^7 + 486*s13^6*s23 + 1049*s13^5*s23^2 - 
                  945*s13^4*s23^3 - 2452*s13^3*s23^4 + 287*s13^2*s23^5 + 
                  352*s13*s23^6 - 460*s23^7))) + p3q^2*(270*s12^5*s23^2*
                (4*s13^2 + 11*s13*s23 + 6*s23^2) - 2*s13*s23^2*(s13 + s23)^2*
                (27*s13^4 + 158*s13^3*s23 + 222*s13^2*s23^2 - 86*s13*s23^3 - 
                 137*s23^4) - s12*s23*(s13 + s23)^2*(-630*s13^5 - 
                 740*s13^4*s23 + 1341*s13^3*s23^2 + 1395*s13^2*s23^3 + 
                 592*s13*s23^4 + 230*s23^5) + s12^4*(198*s13^5 + 423*s13^4*
                  s23 - 110*s13^3*s23^2 - 339*s13^2*s23^3 + 406*s13*s23^4 + 
                 420*s23^5) + s12^3*(207*s13^6 + 2367*s13^5*s23 + 
                 6958*s13^4*s23^2 + 4749*s13^3*s23^3 - 3747*s13^2*s23^4 - 
                 3648*s13*s23^5 - 200*s23^6) + s12^2*(9*s13^7 + 2385*s13^6*
                  s23 + 11039*s13^5*s23^2 + 18120*s13^4*s23^3 + 12910*s13^3*
                  s23^4 + 4243*s13^2*s23^5 + 1640*s13*s23^6 + 770*s23^7)) + 
             p2q*p3q*(2*s12^4*(54*s13^5 + 189*s13^4*s23 - 154*s13^3*s23^2 - 
                 984*s13^2*s23^3 - 1210*s13*s23^4 - 465*s23^5) + 2*s13*s23*
                (s13 + s23)^2*(180*s13^5 + 82*s13^4*s23 - 309*s13^3*s23^2 - 
                 649*s13^2*s23^3 + 173*s13*s23^4 + 411*s23^5) + s12^3*
                (144*s13^6 + 891*s13^5*s23 + 1673*s13^4*s23^2 + 525*s13^3*
                  s23^3 - 1899*s13^2*s23^4 - 1098*s13*s23^5 + 150*s23^6) + 
               s12^2*(342*s13^7 + 3294*s13^6*s23 + 9438*s13^5*s23^2 + 
                 7589*s13^4*s23^3 + 818*s13^3*s23^4 + 1321*s13^2*s23^5 + 
                 2076*s13*s23^6 + 390*s23^7) + s12*(306*s13^8 + 3519*s13^7*
                  s23 + 10807*s13^6*s23^2 + 9729*s13^5*s23^3 - 3827*s13^4*
                  s23^4 - 8796*s13^3*s23^5 - 3268*s13^2*s23^6 - 1124*s13*
                  s23^7 - 690*s23^8))) - 2*p1q^2*(p2q^4*s13*(s13 + s23)*
              (s12^3*(108*s13^5 - 216*s13^4*s23 - 1451*s13^3*s23^2 - 
                 1477*s13^2*s23^3 - 590*s13*s23^4 - 190*s23^5) + s12^2*
                (216*s13^6 - 126*s13^5*s23 + 397*s13^4*s23^2 - 4790*s13^3*
                  s23^3 - 4656*s13^2*s23^4 - 597*s13*s23^5 - 470*s23^6) + s13*
                s23*(1062*s13^6 - 556*s13^5*s23 - 6366*s13^4*s23^2 - 
                 6385*s13^3*s23^3 - 545*s13^2*s23^4 + 1433*s13*s23^5 + 
                 341*s23^6) + 2*s12*(54*s13^7 + 576*s13^6*s23 + 286*s13^5*
                  s23^2 - 2313*s13^4*s23^3 - 3116*s13^3*s23^4 - 617*s13^2*
                  s23^5 + 122*s13*s23^6 - 140*s23^7)) + p3q^4*s12*
              (-90*s12^6*s23^2*(4*s13 + 3*s23) - 9*s13^2*s23^2*(s13 + s23)^3*
                (40*s13^2 + 95*s13*s23 + 3*s23^2) + s12^5*(-54*s13^4 - 
                 90*s13^3*s23 + 478*s13^2*s23^2 + 1554*s13*s23^3 + 
                 850*s23^4) - s12^4*(54*s13^5 + 1125*s13^4*s23 + 2202*s13^3*
                  s23^2 + 373*s13^2*s23^3 - 448*s13*s23^4 + 40*s23^5) + s12*
                s13*s23*(306*s13^6 + 1810*s13^5*s23 + 3049*s13^4*s23^2 + 
                 1427*s13^3*s23^3 - 1997*s13^2*s23^4 - 3133*s13*s23^5 - 
                 1254*s23^6) + 2*s12^3*(27*s13^6 - 108*s13^5*s23 + 
                 593*s13^4*s23^2 + 1086*s13^3*s23^3 - 947*s13^2*s23^4 - 
                 880*s13*s23^5 + 170*s23^6) + s12^2*(54*s13^7 + 1125*s13^6*
                  s23 + 7890*s13^5*s23^2 + 16746*s13^4*s23^3 + 13686*s13^3*
                  s23^4 + 4601*s13^2*s23^5 + 2502*s13*s23^6 + 1500*s23^7)) - 
             p2q^3*p3q*(-(s13^2*s23*(s13 + s23)^2*(432*s13^5 - 1770*s13^4*
                   s23 - 2560*s13^3*s23^2 + 201*s13^2*s23^3 + 1810*s13*
                   s23^4 + 691*s23^5)) + s12^4*(270*s13^6 + 432*s13^5*s23 - 
                 1319*s13^4*s23^2 - 1654*s13^3*s23^3 + 827*s13^2*s23^4 + 
                 1880*s13*s23^5 + 730*s23^6) + s12^3*(378*s13^7 + 
                 1467*s13^6*s23 + 4654*s13^5*s23^2 + 4089*s13^4*s23^3 + 
                 3294*s13^3*s23^4 + 4378*s13^2*s23^5 + 3818*s13*s23^6 + 
                 1460*s23^7) + s12*s13*(-162*s13^8 + 873*s13^7*s23 + 
                 3017*s13^6*s23^2 + 10720*s13^5*s23^3 + 21099*s13^4*s23^4 + 
                 13956*s13^3*s23^5 - 1030*s13^2*s23^6 - 2757*s13*s23^7 - 
                 132*s23^8) + s12^2*(-54*s13^8 + 2340*s13^7*s23 + 
                 7094*s13^6*s23^2 + 19037*s13^5*s23^3 + 23569*s13^4*s23^4 + 
                 9261*s13^3*s23^5 + 865*s13^2*s23^6 + 1806*s13*s23^7 + 
                 730*s23^8)) + p2q*p3q^3*(-9*s13^2*s23^2*(s13 + s23)^3*
                (40*s13^3 + 46*s13^2*s23 - 19*s13*s23^2 - s23^3) - 2*s12^6*
                (27*s13^4 + 54*s13^3*s23 - 698*s13^2*s23^2 - 750*s13*s23^3 - 
                 155*s23^4) + s12^5*(162*s13^5 + 405*s13^4*s23 - 1792*s13^3*
                  s23^2 - 3569*s13^2*s23^3 - 1734*s13*s23^4 - 200*s23^5) + 2*
                s12^4*(189*s13^6 + 2187*s13^5*s23 + 5005*s13^4*s23^2 + 
                 2542*s13^3*s23^3 - 950*s13^2*s23^4 + 1495*s13*s23^5 + 
                 1670*s23^6) - s12*s13*s23*(612*s13^7 + 3890*s13^6*s23 + 
                 11476*s13^5*s23^2 + 15863*s13^4*s23^3 + 9065*s13^3*s23^4 - 
                 185*s13^2*s23^5 - 2277*s13*s23^6 - 692*s23^7) + s12^3*
                (54*s13^7 + 3195*s13^6*s23 + 17277*s13^5*s23^2 + 30698*s13^4*
                  s23^3 + 20443*s13^3*s23^4 + 8035*s13^2*s23^5 + 
                 6934*s13*s23^6 + 3120*s23^7) - s12^2*(108*s13^8 + 
                 1278*s13^7*s23 + 2889*s13^6*s23^2 + 4123*s13^5*s23^3 + 
                 7083*s13^4*s23^4 + 10673*s13^3*s23^5 + 9102*s13^2*s23^6 + 
                 3998*s13*s23^7 + 730*s23^8)) + p2q^2*p3q^2*(s13^2*s23*
                (s13 + s23)^2*(306*s13^5 - 80*s13^4*s23 - 854*s13^3*s23^2 - 
                 493*s13^2*s23^3 + 574*s13*s23^4 + 359*s23^5) + 4*s12^5*
                (54*s13^5 + 162*s13^4*s23 - 388*s13^3*s23^2 - 421*s13^2*
                  s23^3 + 440*s13*s23^4 + 365*s23^5) + s12^4*(54*s13^6 + 
                 1062*s13^5*s23 + 6237*s13^4*s23^2 + 7500*s13^3*s23^3 + 
                 5737*s13^2*s23^4 + 6416*s13*s23^5 + 3080*s23^6) + s12^3*
                (-486*s13^7 - 2169*s13^6*s23 + 3034*s13^5*s23^2 + 
                 18461*s13^4*s23^3 + 15880*s13^3*s23^4 + 4318*s13^2*s23^5 + 
                 1092*s13*s23^6 + 160*s23^7) + s12*s13*(54*s13^8 - 
                 279*s13^7*s23 - 3231*s13^6*s23^2 - 17287*s13^5*s23^3 - 
                 31252*s13^4*s23^4 - 19119*s13^3*s23^5 + 1737*s13^2*s23^6 + 
                 5097*s13*s23^7 + 1104*s23^8) - s12^2*(270*s13^8 + 
                 3168*s13^7*s23 + 10192*s13^6*s23^2 + 18504*s13^5*s23^3 + 
                 16783*s13^4*s23^4 + 7662*s13^3*s23^5 + 4309*s13^2*s23^6 + 
                 4080*s13*s23^7 + 1460*s23^8))) + 
           p1q^3*(-(p3q^3*(18*s13^2*s23^3*(s13 + s23)^3*(20*s13^2 + 
                  33*s13*s23 + s23^2) + 180*s12^6*s23^2*(4*s13^2 + 
                  19*s13*s23 + 12*s23^2) + 2*s12^5*(54*s13^5 + 261*s13^4*
                   s23 + 44*s13^3*s23^2 - 1179*s13^2*s23^3 - 1786*s13*s23^4 - 
                  660*s23^5) + s12^4*(216*s13^6 + 2682*s13^5*s23 + 
                  11089*s13^4*s23^2 + 12516*s13^3*s23^3 - 2551*s13^2*s23^4 - 
                  5664*s13*s23^5 - 240*s23^6) + s12*s13*s23^2*(-720*s13^6 - 
                  3874*s13^5*s23 - 7555*s13^4*s23^2 - 5513*s13^3*s23^3 + 
                  1835*s13^2*s23^4 + 4879*s13*s23^5 + 1932*s23^6) + 
                s12^3*(108*s13^7 + 2880*s13^6*s23 + 13289*s13^5*s23^2 + 
                  20835*s13^4*s23^3 + 15963*s13^3*s23^4 + 10625*s13^2*s23^5 + 
                  6120*s13*s23^6 + 1320*s23^7) - s12^2*s23*(-720*s13^7 + 
                  106*s13^6*s23 + 14414*s13^5*s23^2 + 33315*s13^4*s23^3 + 
                  27852*s13^3*s23^4 + 10121*s13^2*s23^5 + 4076*s13*s23^6 + 
                  1920*s23^7))) - p2q^3*(s13 + s23)*(2*s12^3*(54*s13^6 - 
                 432*s13^5*s23 - 1963*s13^4*s23^2 - 974*s13^3*s23^3 + 
                 163*s13^2*s23^4 + 190*s13*s23^5 + 230*s23^6) + 2*s13*s23*
                (243*s13^7 - 1781*s13^6*s23 - 4293*s13^5*s23^2 - 1030*s13^4*
                  s23^3 + 3555*s13^3*s23^4 + 2637*s13^2*s23^5 + 
                 47*s13*s23^6 - 274*s23^7) + s12^2*(216*s13^7 - 1584*s13^6*
                  s23 - 5327*s13^5*s23^2 - 15701*s13^4*s23^3 - 5867*s13^3*
                  s23^4 + 1979*s13^2*s23^5 - 408*s13*s23^6 + 920*s23^7) + s12*
                (108*s13^8 - 234*s13^7*s23 - 5269*s13^6*s23^2 - 15414*s13^5*
                  s23^3 - 11786*s13^4*s23^4 + 2044*s13^3*s23^5 + 587*s13^2*
                  s23^6 - 1336*s13*s23^7 + 460*s23^8)) + 
             p2q*p3q^2*(2*s13*s23^2*(s13 + s23)^2*(216*s13^5 + 74*s13^4*s23 - 
                 679*s13^3*s23^2 - 1238*s13^2*s23^3 - 187*s13*s23^4 + 
                 274*s23^5) + 4*s12^5*(-27*s13^5 - 135*s13^4*s23 + 
                 356*s13^3*s23^2 + 1809*s13^2*s23^3 + 1730*s13*s23^4 + 
                 465*s23^5) - s12^4*s23*(180*s13^5 + 2795*s13^4*s23 + 
                 4502*s13^3*s23^2 + 151*s13^2*s23^3 + 224*s13*s23^4 + 
                 1240*s23^5) + s12^3*(324*s13^7 + 4194*s13^6*s23 + 
                 8709*s13^5*s23^2 + 5551*s13^4*s23^3 - 2325*s13^3*s23^4 - 
                 10281*s13^2*s23^5 - 3284*s13*s23^6 + 2280*s23^7) + s12*s23*
                (1440*s13^8 + 11506*s13^7*s23 + 37280*s13^6*s23^2 + 
                 49785*s13^5*s23^3 + 19627*s13^4*s23^4 - 13971*s13^3*s23^5 - 
                 15427*s13^2*s23^6 - 4860*s13*s23^7 - 460*s23^8) + s12^2*
                (216*s13^8 + 5274*s13^7*s23 + 25604*s13^6*s23^2 + 
                 62722*s13^5*s23^3 + 73465*s13^4*s23^4 + 37834*s13^3*s23^5 + 
                 10237*s13^2*s23^6 + 9252*s13*s23^7 + 4920*s23^8)) + 
             p2q^2*p3q*(-2*s13*s23*(s13 + s23)^2*(144*s13^6 - 674*s13^5*s23 + 
                 186*s13^4*s23^2 + 1765*s13^3*s23^3 + 2528*s13^2*s23^4 + 
                 499*s13*s23^5 - 548*s23^6) + 2*s12^4*(108*s13^6 + 
                 108*s13^5*s23 - 929*s13^4*s23^2 - 1960*s13^3*s23^3 - 
                 811*s13^2*s23^4 + 1250*s13*s23^5 + 880*s23^6) + s12^2*s23*
                (954*s13^7 + 12681*s13^6*s23 + 49446*s13^5*s23^2 + 
                 55022*s13^4*s23^3 + 12592*s13^3*s23^4 - 3291*s13^2*s23^5 + 
                 3980*s13*s23^6 + 2080*s23^7) + 2*s12^3*(162*s13^7 + 
                 531*s13^6*s23 + 2144*s13^5*s23^2 + 1739*s13^4*s23^3 + 
                 376*s13^3*s23^4 + 1016*s13^2*s23^5 + 3734*s13*s23^6 + 
                 2380*s23^7) - s12*(108*s13^9 + 180*s13^8*s23 - 6965*s13^7*
                  s23^2 - 41021*s13^6*s23^3 - 69286*s13^5*s23^4 - 
                 34782*s13^4*s23^5 + 8611*s13^3*s23^6 + 9223*s13^2*s23^7 + 
                 2052*s13*s23^8 + 920*s23^9))))/(72*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s13^3*s23^2*(s13 + s23)^2*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((ep^2*(s12 + s13)*(s12^2*(9*s13^2 - 10*s23^2) + 
            3*s12*s13*(6*s13^2 + 6*s13*s23 + s23^2) + 
            s13^2*(9*s13^2 + 18*s13*s23 + 49*s23^2)))/(18*s12*s13^2*s23^2*
           (s13 + s23)) + (-18*p1q^6*s12*(10*s12 - 7*s13)*s23^3*(s13 + s23)*
            (s12 + s13 + s23) + 18*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
            (s12 + s13 + s23)*(p3q^2*s12^2*(10*s12^2 - 7*s12*s13 + 20*
                s13^2) - p2q*p3q*s12*(10*s12^2 - 7*s12*s13 + 20*s13^2)*
              (2*s13 + s23) + p2q^2*s13*(10*s12^2*(s13 + s23) + 11*s13^2*
                (s13 + s23) - s12*s13*(16*s13 + 7*s23))) + 
           2*p1q^5*s23^2*(s12 + s13 + s23)*(p2q*(s12*s13*(9*s13^2 - 
                 110*s13*s23 - 47*s23^2) + 10*s12^2*(9*s13^2 - s13*s23 - 
                 10*s23^2) + 3*s13^2*(-36*s13^2 + 65*s13*s23 + 101*s23^2)) + 
             p3q*(90*s12^3*(3*s13 + 4*s23) + s12*s13*(171*s13^2 + 
                 70*s13*s23 - 110*s23^2) - s12^2*(189*s13^2 + 262*s13*s23 + 
                 10*s23^2) + 3*s13^2*(-3*s13^2 + 98*s13*s23 + 101*s23^2))) - 
           p1q^4*s23*(s12 + s13 + s23)*(-(p2q^2*(s12^2*(36*s13^3 + 
                  409*s13^2*s23 + 360*s13*s23^2 + 140*s23^3) + 6*s13^2*
                 (96*s13^3 - 94*s13^2*s23 + 15*s13*s23^2 + 205*s23^3) - 
                2*s12*s13*(126*s13^3 - 211*s13^2*s23 + 117*s13*s23^2 + 
                  283*s23^3))) + p3q^2*(540*s12^4*(s13 + 2*s23) - 2*s12^3*
                (189*s13^2 + 398*s13*s23 + 30*s23^2) + 2*s12^2*(351*s13^3 + 
                 320*s13^2*s23 - 410*s13*s23^2 - 80*s23^3) - 6*s13^2*
                (3*s13^3 - 9*s13^2*s23 + 89*s13*s23^2 + 101*s23^3) + s12*s13*
                (126*s13^3 + 1365*s13^2*s23 + 2173*s13*s23^2 + 346*s23^3)) + 
             p2q*p3q*(-40*s12^3*(9*s13^2 + 19*s13*s23 + 15*s23^2) + s12^2*
                (540*s13^3 + 15*s13^2*s23 - 622*s13*s23^2 - 300*s23^3) - 12*
                s13^2*(3*s13^3 - 95*s13^2*s23 + 55*s13*s23^2 + 153*s23^3) + 
               s12*s13*(252*s13^3 + 457*s13^2*s23 + 1921*s13*s23^2 + 
                 912*s23^3))) + 2*p1q*(p2q + p3q)*
            (-(p3q^4*s12^3*(10*s12^3*(9*s13 + 35*s23) + s12*s13*(117*s13^2 + 
                  418*s13*s23 - 362*s23^2) + 3*s13^2*(60*s13^2 + 341*s13*
                   s23 + 281*s23^2) + s12^2*(27*s13^2 + 78*s13*s23 + 
                  350*s23^2))) + p2q^4*s13^2*(3*s13^2*(s13 + s23)^2*
                (33*s13 + 38*s23) + 10*s12^3*(9*s13^2 - s13*s23 - 10*s23^2) + 
               s12*s13*(-45*s13^3 + 130*s13^2*s23 + 128*s13*s23^2 - 
                 47*s23^3) - s12^2*(54*s13^3 - 141*s13^2*s23 + 157*s13*
                  s23^2 + 100*s23^3)) + p2q*p3q^3*s12^2*(-10*s12^4*
                (9*s13 + 35*s23) + 9*s12^3*(27*s13^2 + 68*s13*s23 - 
                 10*s23^2) + 3*s13^2*(126*s13^3 + 699*s13^2*s23 + 
                 794*s13*s23^2 + 221*s23^3) + s12^2*(-198*s13^3 - 
                 301*s13^2*s23 + 1013*s13*s23^2 + 260*s23^3) - s12*s13*
                (153*s13^3 + 498*s13^2*s23 + 1322*s13*s23^2 + 299*s23^3)) + 
             p2q^3*p3q*s13*(3*s13^3*(s13 + s23)^2*(6*s13 + 35*s23) - 10*s12^4*
                (27*s13^2 + 33*s13*s23 + 16*s23^2) + s12^3*(171*s13^3 + 
                 125*s13^2*s23 - 244*s13*s23^2 - 160*s23^3) + 3*s12^2*s13*
                (-54*s13^3 + 121*s13^2*s23 + 154*s13*s23^2 + 82*s23^3) - s12*
                s13^2*(585*s13^3 + 1283*s13^2*s23 + 1207*s13*s23^2 + 
                 509*s23^3)) + p2q^2*p3q^2*s12*(10*s12^4*(27*s13^2 + 
                 69*s13*s23 + 26*s23^2) + s12^2*s13*(432*s13^3 + 858*s13^2*
                  s23 - 605*s13*s23^2 - 459*s23^3) - 3*s13^3*(72*s13^3 + 
                 297*s13^2*s23 + 373*s13*s23^2 + 148*s23^3) + s12^3*
                (-270*s13^3 - 204*s13^2*s23 + 491*s13*s23^2 + 260*s23^3) + 
               s12*s13^2*(756*s13^3 + 2859*s13^2*s23 + 3136*s13*s23^2 + 
                 1018*s23^3))) - p1q^2*(s12 + s13 + s23)*
            (p3q^4*s12^2*(180*s12^4 - 2*s12^3*(63*s13 + 10*s23) + 6*s13^2*
                (27*s13^2 - 206*s13*s23 - 483*s23^2) + 20*s12^2*(18*s13^2 - 
                 37*s13*s23 - 51*s23^2) + s12*s13*(162*s13^2 + 1213*s13*s23 + 
                 1416*s23^2)) + p2q^4*s13*(2*s12*s13*(18*s13^3 + 184*s13^2*
                  s23 + 117*s13*s23^2 - 283*s23^3) + s12^2*(342*s13^3 + 
                 715*s13^2*s23 + 360*s13*s23^2 + 140*s23^3) + 6*s13^2*
                (60*s13^3 - 31*s13^2*s23 + 84*s13*s23^2 + 175*s23^3)) + 
             p2q^3*p3q*(s12^2*s13*(504*s13^3 - 779*s13^2*s23 - 666*s13*
                  s23^2 - 538*s23^3) + 12*s13^3*(27*s13^3 - 39*s13^2*s23 + 
                 106*s13*s23^2 + 172*s23^3) + 2*s12*s13^2*(-477*s13^3 + 
                 936*s13^2*s23 + 1471*s13*s23^2 + 238*s23^3) + s12^3*
                (-882*s13^3 - 271*s13^2*s23 + 640*s13*s23^2 + 500*s23^3)) - 
             p2q*p3q^3*s12*(40*s12^4*(18*s13 + 5*s23) + s12^3*(-504*s13^2 + 
                 1074*s13*s23 + 2020*s23^2) + s12^2*(1278*s13^3 - 
                 2431*s13^2*s23 - 3732*s13*s23^2 - 500*s23^3) + 6*s13^2*
                (81*s13^3 - 52*s13^2*s23 - 265*s13*s23^2 - 262*s23^3) + s12*
                s13*(324*s13^3 + 5891*s13^2*s23 + 7400*s13*s23^2 + 
                 818*s23^3)) + p2q^2*p3q^2*(40*s12^4*(27*s13^2 + 2*s13*s23 - 
                 25*s23^2) + s12^2*s13*(1512*s13^3 - 5105*s13^2*s23 - 
                 5528*s13*s23^2 - 1496*s23^3) + 6*s13^3*(54*s13^3 + 
                 40*s13^2*s23 + 155*s13*s23^2 + 169*s23^3) + s12^3*
                (-918*s13^3 + 1469*s13^2*s23 + 2956*s13*s23^2 + 1000*s23^3) + 
               2*s12*s13^2*(-81*s13^3 + 1547*s13^2*s23 + 2230*s13*s23^2 + 
                 1307*s23^3))) + p1q^3*(s12 + s13 + s23)*
            (p3q^3*s12*(180*s12^4*(s13 + 4*s23) - 2*s12^3*(63*s13^2 + 
                 262*s13*s23 + 30*s23^2) + 6*s13^2*(27*s13^3 + 42*s13^2*s23 - 
                 235*s13*s23^2 - 363*s23^3) + 20*s12^2*(18*s13^3 + 
                 43*s13^2*s23 - 58*s13*s23^2 - 33*s23^3) + s12*s13*
                (162*s13^3 + 939*s13^2*s23 + 2654*s13*s23^2 + 1164*s23^3)) - 
             p2q*p3q^2*(20*s12^4*(27*s13^2 + 73*s13*s23 + 30*s23^2) + s12*s13*
                s23*(1221*s13^3 + 4285*s13^2*s23 + 5402*s13*s23^2 + 
                 346*s23^3) + s12^3*(-540*s13^3 - 819*s13^2*s23 + 
                 1242*s13*s23^2 + 1280*s23^3) + s12^2*(756*s13^4 + 
                 331*s13^3*s23 - 3034*s13^2*s23^2 - 2788*s13*s23^3 - 
                 160*s23^4) + 6*s13^2*(27*s13^4 + 33*s13^3*s23 + 175*s13^2*
                  s23^2 + 68*s13*s23^3 - 101*s23^4)) + 
             p2q^3*(-6*s13^2*(60*s13^4 - 89*s13^3*s23 + 180*s13^2*s23^2 + 
                 225*s13*s23^3 - 104*s23^4) + s12^2*(-342*s13^4 - 
                 479*s13^3*s23 + 69*s13^2*s23^2 + 60*s13*s23^3 + 160*s23^4) - 
               2*s12*s13*(18*s13^4 + 434*s13^3*s23 - 132*s13^2*s23^2 - 
                 339*s13*s23^3 + 173*s23^4)) + p2q^2*p3q*
              (s12^3*(702*s13^3 + 751*s13^2*s23 - 100*s13*s23^2 - 
                 620*s23^3) + s12*s13*(756*s13^4 - 1657*s13^3*s23 - 
                 2647*s13^2*s23^2 - 2546*s13*s23^3 - 692*s23^4) - 6*s13^2*
                (27*s13^4 - 50*s13^3*s23 + 448*s13^2*s23^2 + 320*s13*s23^3 - 
                 205*s23^4) + s12^2*(-378*s13^4 - 453*s13^3*s23 + 
                 737*s13^2*s23^2 + 1684*s13*s23^3 + 320*s23^4))))/
          (36*ep*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (ep*(-9*(p2q + p3q)^2*(-(p3q*s12) + p2q*s13)^3*s23*(s13 + s23)*
             (-(p3q*s12) + p2q*(s13 + s23))*(-5*s12^3*s23 + 
              4*s13^2*(s13 + s23)^2 - s12^2*s23*(4*s13 + 5*s23) + 
              s12*s13*(4*s13^2 + 5*s13*s23 + s23^2)) - 9*p1q^6*s23^4*
             (s13 + s23)^2*(5*s12^3*s23 + 4*s13^2*(s13 + s23)^2 + 
              s12^2*s23*(14*s13 + 5*s23) + s12*s13*(4*s13^2 + 13*s13*s23 + 
                9*s23^2)) + p1q^5*s23^2*(s13 + s23)*
             (p2q*(s12^3*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*s23^2 - 
                  20*s13*s23^3 - 55*s23^4) + s12*s13*(54*s13^5 + 117*s13^4*
                   s23 - 11*s13^3*s23^2 - 14*s13^2*s23^3 - 131*s13*s23^4 - 
                  151*s23^5) + s13^2*(18*s13^5 + 27*s13^4*s23 - 161*s13^3*
                   s23^2 - 369*s13^2*s23^3 - 317*s13*s23^4 - 118*s23^5) + 
                s12^2*(54*s13^5 + 99*s13^4*s23 + 127*s13^3*s23^2 - 
                  44*s13^2*s23^3 - 216*s13*s23^4 - 55*s23^5)) + 
              p3q*(45*s12^4*s23^2*(3*s13 + 4*s23) + s12^3*(18*s13^4 + 
                  9*s13^3*s23 + 274*s13^2*s23^2 + 529*s13*s23^3 + 
                  170*s23^4) + s13^2*(18*s13^5 - 81*s13^4*s23 - 449*s13^3*
                   s23^2 - 585*s13^2*s23^3 - 317*s13*s23^4 - 82*s23^5) + 
                s12*s13*(54*s13^5 + 45*s13^4*s23 - 218*s13^3*s23^2 - 
                  131*s13^2*s23^3 - 32*s13*s23^4 - 70*s23^5) + 
                s12^2*(54*s13^5 + 135*s13^4*s23 + 172*s13^3*s23^2 + 
                  280*s13^2*s23^3 + 144*s13*s23^4 - 10*s23^5))) + 
            p1q*(p2q + p3q)^2*(p2q^3*s13^2*(s13 + s23)*(s12^3*(18*s13^4 + 
                  9*s13^3*s23 + 31*s13^2*s23^2 - 20*s13*s23^3 - 55*s23^4) + 
                s12^2*(54*s13^5 + 81*s13^4*s23 - 89*s13^3*s23^2 - 
                  62*s13^2*s23^3 - 36*s13*s23^4 - 55*s23^5) + 
                s13^2*(18*s13^5 + 27*s13^4*s23 - 17*s13^3*s23^2 + 
                  63*s13^2*s23^3 + 115*s13*s23^4 + 26*s23^5) + s12*s13*
                 (54*s13^5 + 99*s13^4*s23 - 101*s13^3*s23^2 + 40*s13^2*
                   s23^3 + 175*s13*s23^4 + 29*s23^5)) - p3q^3*s12^3*(
                s12^3*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*s23^2 + 205*s13*
                   s23^3 + 170*s23^4) + s13^2*(18*s13^5 + 27*s13^4*s23 - 
                  197*s13^3*s23^2 - 477*s13^2*s23^3 - 425*s13*s23^4 - 
                  154*s23^5) + s12*s13*(54*s13^5 + 99*s13^4*s23 - 281*s13^3*
                   s23^2 - 365*s13^2*s23^3 - 95*s13*s23^4 - 16*s23^5) + 
                s12^2*(54*s13^5 + 81*s13^4*s23 - 89*s13^3*s23^2 + 118*s13^2*
                   s23^3 + 369*s13*s23^4 + 170*s23^5)) - p2q^2*p3q*s12*s13*(
                s12^3*(54*s13^5 + 63*s13^4*s23 + 111*s13^3*s23^2 + 
                  227*s13^2*s23^3 + 200*s13*s23^4 + 70*s23^5) + 
                s13^2*(54*s13^6 + 117*s13^5*s23 - 177*s13^4*s23^2 - 
                  529*s13^3*s23^3 - 501*s13^2*s23^4 - 304*s13*s23^5 - 
                  92*s23^6) + s12*s13*(162*s13^6 + 405*s13^5*s23 - 
                  285*s13^4*s23^2 - 631*s13^3*s23^3 + 11*s13^2*s23^4 + 
                  176*s13*s23^5 + 22*s23^6) + s12^2*(162*s13^6 + 351*s13^5*
                   s23 - 105*s13^4*s23^2 - 184*s13^3*s23^3 + 317*s13^2*
                   s23^4 + 312*s13*s23^5 + 70*s23^6)) + p2q*p3q^2*s12^2*(
                s12^3*(54*s13^5 + 45*s13^4*s23 + 102*s13^3*s23^2 + 
                  421*s13^2*s23^3 + 445*s13*s23^4 + 125*s23^5) + 
                s13^2*(54*s13^6 + 99*s13^5*s23 - 384*s13^4*s23^2 - 
                  1052*s13^3*s23^3 - 1104*s13^2*s23^4 - 599*s13*s23^5 - 
                  118*s23^6) + s12*s13*(162*s13^6 + 351*s13^5*s23 - 
                  564*s13^4*s23^2 - 935*s13^3*s23^3 - 299*s13^2*s23^4 - 
                  44*s13*s23^5 - 7*s23^6) + s12^2*(162*s13^6 + 297*s13^5*
                   s23 - 186*s13^4*s23^2 + 85*s13^3*s23^3 + 784*s13^2*s23^4 + 
                  573*s13*s23^5 + 125*s23^6))) + p1q^4*s23*
             (-(p2q^2*(s13 + s23)*(s12^3*(36*s13^5 - 64*s13^3*s23^2 - 
                   93*s13^2*s23^3 - 70*s13*s23^4 - 25*s23^5) + 
                 s12^2*(108*s13^6 - 54*s13^5*s23 - 511*s13^4*s23^2 - 
                   405*s13^3*s23^3 - 227*s13^2*s23^4 - 56*s13*s23^5 - 
                   25*s23^6) + s12*s13*(108*s13^6 - 787*s13^4*s23^2 - 
                   447*s13^3*s23^3 - 270*s13^2*s23^4 - 283*s13*s23^5 + 
                   59*s23^6) + 2*s13^2*(18*s13^6 + 27*s13^5*s23 - 116*s13^4*
                    s23^2 - 154*s13^3*s23^3 - 38*s13^2*s23^4 + 55*s13*s23^5 + 
                   64*s23^6))) + p3q^2*(-135*s12^5*s23^2*(s13^2 + 3*s13*s23 + 
                  2*s23^2) + s13^2*s23*(s13 + s23)^2*(162*s13^4 + 261*s13^3*
                   s23 - 26*s13^2*s23^2 - 91*s13*s23^3 - 46*s23^4) - 
                s12^4*(36*s13^5 + 72*s13^4*s23 + 197*s13^3*s23^2 + 
                  737*s13^2*s23^3 + 811*s13*s23^4 + 240*s23^5) + 
                s12^3*(-108*s13^6 - 288*s13^5*s23 - 29*s13^4*s23^2 + 
                  368*s13^3*s23^3 + 251*s13^2*s23^4 + 134*s13*s23^5 + 
                  65*s23^6) + s12*s13*(-36*s13^7 + 144*s13^6*s23 + 
                  1051*s13^5*s23^2 + 1840*s13^4*s23^3 + 1563*s13^3*s23^4 + 
                  925*s13^2*s23^5 + 342*s13*s23^6 + 11*s23^7) + 
                s12^2*(-108*s13^7 - 234*s13^6*s23 + 535*s13^5*s23^2 + 
                  1421*s13^4*s23^3 + 918*s13^3*s23^4 + 489*s13^2*s23^5 + 
                  326*s13*s23^6 + 35*s23^7)) + p2q*p3q*(s12^4*(-36*s13^5 - 
                  72*s13^4*s23 + 91*s13^3*s23^2 + 352*s13^2*s23^3 + 
                  395*s13*s23^4 + 165*s23^5) - s13^2*(s13 + s23)^2*
                 (36*s13^5 - 252*s13^4*s23 - 619*s13^3*s23^2 + 76*s13^2*
                   s23^3 + 181*s13*s23^4 + 174*s23^5) + s12^3*(-144*s13^6 - 
                  360*s13^5*s23 + 233*s13^4*s23^2 + 1362*s13^3*s23^3 + 
                  1656*s13^2*s23^4 + 1003*s13*s23^5 + 225*s23^6) + 
                s12*s13*(-144*s13^7 + 216*s13^6*s23 + 2369*s13^5*s23^2 + 
                  3452*s13^4*s23^3 + 2028*s13^3*s23^4 + 1064*s13^2*s23^5 + 
                  431*s13*s23^6 - 48*s23^7) + s12^2*(-216*s13^7 - 252*s13^6*
                   s23 + 1352*s13^5*s23^2 + 2652*s13^4*s23^3 + 1676*s13^3*
                   s23^4 + 907*s13^2*s23^5 + 515*s13*s23^6 + 60*s23^7))) + 
            p1q^2*(p3q^4*s12^2*(-45*s12^5*s23^2*(s13 + s23) - 
                s12^4*(18*s13^4 + 9*s13^3*s23 + 22*s13^2*s23^2 + 
                  61*s13*s23^3 + 35*s23^4) + s12^2*s23*(144*s13^5 + 
                  363*s13^4*s23 - 27*s13^3*s23^2 + 305*s13^2*s23^3 + 
                  681*s13*s23^4 + 240*s23^5) + s12^3*(-36*s13^5 + 
                  18*s13^4*s23 + 219*s13^3*s23^2 + 324*s13^2*s23^3 + 
                  434*s13*s23^4 + 250*s23^5) + s13^2*(18*s13^6 + 117*s13^5*
                   s23 + 64*s13^4*s23^2 - 528*s13^3*s23^3 - 956*s13^2*s23^4 - 
                  709*s13*s23^5 - 246*s23^6) + s12*s13*(36*s13^6 + 
                  234*s13^5*s23 + 195*s13^4*s23^2 - 578*s13^3*s23^3 - 
                  351*s13^2*s23^4 + 150*s13*s23^5 + 6*s23^6)) + 
              p2q^4*s13*(s13 + s23)*(s12^3*(36*s13^5 - 18*s13^4*s23 - 
                  100*s13^3*s23^2 - 111*s13^2*s23^3 - 70*s13*s23^4 - 
                  25*s23^5) + s12*s13*(108*s13^6 + 198*s13^5*s23 - 
                  265*s13^4*s23^2 + 219*s13^3*s23^3 + 198*s13^2*s23^4 - 
                  247*s13*s23^5 - 31*s23^6) + s12^2*(108*s13^6 + 54*s13^5*
                   s23 - 385*s13^4*s23^2 - 117*s13^3*s23^3 - 47*s13^2*s23^4 - 
                  146*s13*s23^5 - 25*s23^6) + 2*s13^2*(18*s13^6 + 
                  63*s13^5*s23 + 28*s13^4*s23^2 + 26*s13^3*s23^3 - 
                  2*s13^2*s23^4 - 17*s13*s23^5 + 28*s23^6)) + 
              p2q*p3q^3*s12*(s12^5*(-18*s13^4 - 9*s13^3*s23 + 194*s13^2*
                   s23^2 + 245*s13*s23^3 + 55*s23^4) + s12^4*(36*s13^5 + 
                  90*s13^4*s23 + 262*s13^3*s23^2 + 629*s13^2*s23^3 + 
                  971*s13*s23^4 + 525*s23^5) + s12^3*(180*s13^6 + 450*s13^5*
                   s23 - 289*s13^4*s23^2 - 1526*s13^3*s23^3 - 314*s13^2*
                   s23^4 + 908*s13*s23^5 + 355*s23^6) + s12^2*(144*s13^7 + 
                  576*s13^6*s23 - 436*s13^5*s23^2 - 2545*s13^4*s23^3 - 
                  1610*s13^3*s23^4 - 429*s13^2*s23^5 - 461*s13*s23^6 - 
                  115*s23^7) - s12*s13*(18*s13^7 - 63*s13^6*s23 + 
                  63*s13^5*s23^2 + 1509*s13^4*s23^3 + 2389*s13^3*s23^4 + 
                  1767*s13^2*s23^5 + 676*s13*s23^6 + 13*s23^7) + 
                2*s13^2*(-18*s13^7 - 81*s13^6*s23 - 64*s13^5*s23^2 + 
                  107*s13^4*s23^3 + 325*s13^3*s23^4 + 354*s13^2*s23^5 + 
                  201*s13*s23^6 + 64*s23^7)) + p2q^3*p3q*(s13^3*(s13 + s23)^2*
                 (54*s13^5 + 63*s13^4*s23 - 150*s13^3*s23^2 + 191*s13^2*
                   s23^3 - 98*s13*s23^4 + 112*s23^5) + s12^4*(-90*s13^6 - 
                  117*s13^5*s23 + 187*s13^4*s23^2 + 381*s13^3*s23^3 + 
                  32*s13^2*s23^4 - 235*s13*s23^5 - 115*s23^6) + 2*s12*s13^2*
                 (36*s13^7 - 90*s13^6*s23 - 559*s13^5*s23^2 - 31*s13^4*
                   s23^3 + 1029*s13^3*s23^4 + 634*s13^2*s23^5 + 40*s13*
                   s23^6 + 33*s23^7) - s12^2*s13*(108*s13^7 + 846*s13^6*s23 + 
                  1067*s13^5*s23^2 - 35*s13^4*s23^3 - 1016*s13^3*s23^4 - 
                  301*s13^2*s23^5 + 294*s13*s23^6 + 63*s23^7) - 
                s12^3*(216*s13^7 + 612*s13^6*s23 - 124*s13^5*s23^2 - 
                  1160*s13^4*s23^3 - 949*s13^3*s23^4 + 114*s13^2*s23^5 + 
                  433*s13*s23^6 + 115*s23^7)) + p2q^2*p3q^2*(s12^4*s13*
                 (90*s13^5 + 369*s13^4*s23 - 393*s13^3*s23^2 - 1622*s13^2*
                   s23^3 - 1109*s13*s23^4 - 134*s23^5) + s13^3*(s13 + s23)^2*
                 (18*s13^5 + 9*s13^4*s23 - 44*s13^3*s23^2 + 141*s13^2*s23^3 - 
                  8*s13*s23^4 + 56*s23^5) + 2*s12^5*(36*s13^5 + 54*s13^4*
                   s23 - 145*s13^3*s23^2 - 203*s13^2*s23^3 + 75*s13*s23^4 + 
                  115*s23^5) - s12^2*s13*(252*s13^7 + 702*s13^6*s23 - 
                  289*s13^5*s23^2 - 870*s13^4*s23^3 - 359*s13^3*s23^4 + 
                  474*s13^2*s23^5 + 553*s13*s23^6 + 51*s23^7) + s12*s13^2*
                 (-72*s13^7 - 468*s13^6*s23 - 522*s13^5*s23^2 + 1089*s13^4*
                   s23^3 + 2822*s13^3*s23^4 + 2142*s13^2*s23^5 + 760*s13*
                   s23^6 + 225*s23^7) - s12^3*(144*s13^7 - 72*s13^6*s23 - 
                  484*s13^5*s23^2 + 11*s13^4*s23^3 + 129*s13^3*s23^4 + 
                  670*s13^2*s23^5 + 875*s13*s23^6 + 230*s23^7))) + 
            p1q^3*(p3q^3*s12*(45*s12^5*s23^2*(s13^2 + 5*s13*s23 + 4*s23^2) + 
                s12^4*(18*s13^5 + 63*s13^4*s23 + 49*s13^3*s23^2 + 253*s13^2*
                   s23^3 + 389*s13*s23^4 + 150*s23^5) + s12^3*(54*s13^6 + 
                  171*s13^5*s23 - 89*s13^4*s23^2 - 679*s13^3*s23^3 - 
                  689*s13^2*s23^4 - 461*s13*s23^5 - 180*s23^6) + 
                s13^2*s23*(-36*s13^6 - 252*s13^5*s23 - 263*s13^4*s23^2 + 
                  393*s13^3*s23^3 + 841*s13^2*s23^4 + 575*s13*s23^5 + 
                  174*s23^6) + s12^2*(54*s13^7 + 153*s13^6*s23 - 344*s13^5*
                   s23^2 - 1156*s13^4*s23^3 - 673*s13^3*s23^4 - 574*s13^2*
                   s23^5 - 649*s13*s23^6 - 150*s23^7) + s12*s13*(18*s13^7 + 
                  9*s13^6*s23 - 467*s13^5*s23^2 - 812*s13^4*s23^3 - 
                  346*s13^3*s23^4 - 459*s13^2*s23^5 - 451*s13*s23^6 - 
                  24*s23^7)) + p2q^3*(s13 + s23)*(s12^3*(18*s13^6 - 
                  63*s13^5*s23 - 104*s13^4*s23^2 + 9*s13^3*s23^3 + 
                  47*s13^2*s23^4 + 20*s13*s23^5 + 35*s23^6) + 
                s13^2*(18*s13^7 + 27*s13^6*s23 - 107*s13^5*s23^2 + 
                  86*s13^4*s23^3 + 278*s13^3*s23^4 + 277*s13^2*s23^5 + 
                  155*s13*s23^6 - 46*s23^7) + s12*s13*(54*s13^7 - 
                  45*s13^6*s23 - 299*s13^5*s23^2 + 795*s13^4*s23^3 + 
                  436*s13^3*s23^4 - 145*s13^2*s23^5 + 185*s13*s23^6 + 
                  11*s23^7) + s12^2*(54*s13^7 - 135*s13^6*s23 - 260*s13^5*
                   s23^2 + 438*s13^4*s23^3 + 312*s13^3*s23^4 + 54*s13^2*
                   s23^5 + 76*s13*s23^6 + 35*s23^7)) + p2q*p3q^2*(
                s12^5*(18*s13^5 + 63*s13^4*s23 - 122*s13^3*s23^2 - 
                  557*s13^2*s23^3 - 565*s13*s23^4 - 165*s23^5) - 
                s13^2*s23*(s13 + s23)^2*(36*s13^5 - 144*s13^4*s23 - 
                  493*s13^3*s23^2 - 156*s13^2*s23^3 - 37*s13*s23^4 + 
                  46*s23^5) + s12^4*(18*s13^6 + 117*s13^5*s23 - 133*s13^4*
                   s23^2 - 1267*s13^3*s23^3 - 1923*s13^2*s23^4 - 1383*s13*
                   s23^5 - 445*s23^6) - s12^3*(54*s13^7 + 117*s13^6*s23 + 
                  328*s13^5*s23^2 + 387*s13^4*s23^3 - 461*s13^3*s23^4 + 
                  308*s13^2*s23^5 + 916*s13*s23^6 + 245*s23^7) + 
                s12*s13*(-36*s13^8 - 342*s13^7*s23 - 407*s13^6*s23^2 + 
                  1519*s13^5*s23^3 + 3716*s13^4*s23^4 + 3087*s13^3*s23^5 + 
                  1548*s13^2*s23^6 + 568*s13*s23^7 + 11*s23^8) + 
                s12^2*(-90*s13^8 - 477*s13^7*s23 - 688*s13^6*s23^2 + 
                  653*s13^5*s23^3 + 2292*s13^4*s23^4 + 680*s13^3*s23^5 - 
                  350*s13^2*s23^6 + 183*s13*s23^7 + 35*s23^8)) + 
              p2q^2*p3q*(s12^4*(-36*s13^6 - 90*s13^5*s23 + 46*s13^4*s23^2 + 
                  384*s13^3*s23^3 + 314*s13^2*s23^4 - 85*s13*s23^5 - 
                  130*s23^6) + s13^2*(s13 + s23)^2*(18*s13^6 - 63*s13^5*s23 + 
                  64*s13^4*s23^2 + 875*s13^3*s23^3 + 340*s13^2*s23^4 + 
                  238*s13*s23^5 - 92*s23^6) - s12^3*(90*s13^7 + 459*s13^6*
                   s23 + 493*s13^5*s23^2 - 908*s13^4*s23^3 - 2162*s13^3*
                   s23^4 - 1026*s13^2*s23^5 + 59*s13*s23^6 + 60*s23^7) + 
                s12*s13*(18*s13^8 - 441*s13^7*s23 - 760*s13^6*s23^2 + 
                  2530*s13^5*s23^3 + 5436*s13^4*s23^4 + 3221*s13^3*s23^5 + 
                  1184*s13^2*s23^6 + 590*s13*s23^7 + 22*s23^8) + 
                s12^2*(-54*s13^8 - 783*s13^7*s23 - 1147*s13^6*s23^2 + 
                  1526*s13^5*s23^3 + 3964*s13^4*s23^4 + 1964*s13^3*s23^5 + 
                  312*s13^2*s23^6 + 318*s13*s23^7 + 70*s23^8)))))/
          (18*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23^2*(s13 + s23)^2*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (18*p1q^6*s23^4*(s13 + s23)*(-(s12*s13*(3*s13 - 2*s23)*(s13 + s23)^
                2) - 12*s13^2*(s13 + s23)^3 + 5*s12^3*s23*(4*s13 + 3*s23) + 
             s12^2*(9*s13^3 + 31*s13^2*s23 + 37*s13*s23^2 + 15*s23^3)) - 
           18*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*
            (p3q^2*s12^2*(52*s13^2*(s13 + s23)^2 + 5*s12^2*s23*(4*s13 + 
                 3*s23) - s12*s13*(s13^2 + 9*s13*s23 + 8*s23^2)) - 
             p2q*p3q*s12*(2*s13 + s23)*(52*s13^2*(s13 + s23)^2 + 5*s12^2*s23*
                (4*s13 + 3*s23) - s12*s13*(s13^2 + 9*s13*s23 + 8*s23^2)) + 
             p2q^2*s13*(s13 + s23)*(34*s13^2*(s13 + s23)^2 + 5*s12^2*s23*
                (4*s13 + 3*s23) - s12*s13*(19*s13^2 + 27*s13*s23 + 
                 8*s23^2))) - 2*p1q^5*s23^2*(p2q*(s13 + s23)*
              (s12^3*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 - 
                 75*s13*s23^3 - 155*s23^4) + s12*s13*(81*s13^5 - 126*s13^4*
                  s23 - 177*s13^3*s23^2 + 301*s13^2*s23^3 + 13*s13*s23^4 - 
                 218*s23^5) + s12^2*(81*s13^5 + 486*s13^4*s23 + 524*s13^3*
                  s23^2 - 239*s13^2*s23^3 - 468*s13*s23^4 - 155*s23^5) + 
               s13^2*(27*s13^5 - 558*s13^4*s23 - 1435*s13^3*s23^2 - 
                 415*s13^2*s23^3 + 1068*s13*s23^4 + 633*s23^5)) + 
             p3q*(45*s12^4*s23^2*(12*s13^2 + 25*s13*s23 + 12*s23^2) + s13^2*
                (s13 + s23)^2*(27*s13^4 - 63*s13^3*s23 + 86*s13^2*s23^2 + 
                 741*s13*s23^3 + 525*s23^4) + s12^3*(27*s13^5 + 234*s13^4*
                  s23 + 967*s13^3*s23^2 + 1837*s13^2*s23^3 + 1597*s13*s23^4 + 
                 520*s23^5) + s12*s13*(81*s13^6 + 396*s13^5*s23 + 
                 1029*s13^4*s23^2 + 1492*s13^3*s23^3 + 836*s13^2*s23^4 - 
                 142*s13*s23^5 - 200*s23^6) + s12^2*(81*s13^6 + 639*s13^5*
                  s23 + 1289*s13^4*s23^2 + 672*s13^3*s23^3 - 347*s13^2*
                  s23^4 - 308*s13*s23^5 - 20*s23^6))) - 
           2*p1q*(p2q^5*s13^2*(s13 + s23)*(s12^3*(27*s13^4 + 54*s13^3*s23 + 
                 202*s13^2*s23^2 - 75*s13*s23^3 - 155*s23^4) + s13^2*
                (27*s13^5 + 360*s13^4*s23 + 509*s13^3*s23^2 - 91*s13^2*
                  s23^3 - 444*s13*s23^4 - 177*s23^5) + s12^2*(81*s13^5 - 
                 9*s13^4*s23 + 362*s13^3*s23^2 + 274*s13^2*s23^3 - 
                 288*s13*s23^4 - 155*s23^5) + s12*s13*(81*s13^5 + 
                 297*s13^4*s23 + 192*s13^3*s23^2 - 50*s13^2*s23^3 - 
                 104*s13*s23^4 - 38*s23^5)) - p3q^5*s12^3*
              (s12^3*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 + 
                 825*s13*s23^3 + 520*s23^4) + s12*s13*(81*s13^5 + 
                 621*s13^4*s23 + 2451*s13^3*s23^2 + 3136*s13^2*s23^3 + 
                 787*s13*s23^4 - 398*s23^5) + s12^2*(81*s13^5 + 153*s13^4*
                  s23 + 137*s13^3*s23^2 + 427*s13^2*s23^3 + 927*s13*s23^4 + 
                 520*s23^5) + s13^2*(27*s13^5 + 522*s13^4*s23 + 2993*s13^3*
                  s23^2 + 6389*s13^2*s23^3 + 5712*s13*s23^4 + 1821*s23^5)) - 
             p2q^4*p3q*s13*(-2*s13^3*(s13 + s23)^2*(27*s13^4 + 252*s13^3*
                  s23 + 5*s13^2*s23^2 - 366*s13*s23^3 - 186*s23^4) + s12^4*
                (81*s13^5 + 216*s13^4*s23 + 714*s13^3*s23^2 + 1079*s13^2*
                  s23^3 + 780*s13*s23^4 + 230*s23^5) + s12^2*s13*
                (81*s13^6 + 1395*s13^5*s23 + 1247*s13^4*s23^2 - 1416*s13^3*
                  s23^3 - 1833*s13^2*s23^4 - 498*s13*s23^5 - 54*s23^6) + 
               s12^3*(189*s13^6 + 135*s13^5*s23 - 659*s13^4*s23^2 - 
                 571*s13^3*s23^3 + 765*s13^2*s23^4 + 916*s13*s23^5 + 
                 230*s23^6) + s12*s13^2*(-81*s13^6 + 864*s13^5*s23 + 
                 3933*s13^4*s23^2 + 6437*s13^3*s23^3 + 5598*s13^2*s23^4 + 
                 2771*s13*s23^5 + 622*s23^6)) - p2q*p3q^4*s12^2*
              (2*s12^4*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 + 
                 825*s13*s23^3 + 520*s23^4) + s12^3*(81*s13^5 + 117*s13^4*
                  s23 - 386*s13^3*s23^2 - 923*s13^2*s23^3 + 324*s13*s23^4 + 
                 655*s23^5) + s12^2*(-81*s13^6 + 1026*s13^5*s23 + 
                 4959*s13^4*s23^2 + 5700*s13^3*s23^3 - 302*s13^2*s23^4 - 
                 2365*s13*s23^5 - 385*s23^6) + s12*s13*(-189*s13^6 - 
                 252*s13^5*s23 + 2125*s13^4*s23^2 + 7318*s13^3*s23^3 + 
                 8906*s13^2*s23^4 + 4022*s13*s23^5 + 326*s23^6) - s13^2*
                (81*s13^6 + 1269*s13^5*s23 + 6009*s13^4*s23^2 + 13160*s13^3*
                  s23^3 + 14237*s13^2*s23^4 + 7251*s13*s23^5 + 1353*s23^6)) + 
             p2q^3*p3q^2*(s13^4*(s13 + s23)^2*(27*s13^4 + 171*s13^3*s23 - 
                 166*s13^2*s23^2 - 465*s13*s23^3 - 195*s23^4) + s12^5*
                (81*s13^5 + 189*s13^4*s23 + 660*s13^3*s23^2 + 1777*s13^2*
                  s23^3 + 1530*s13*s23^4 + 385*s23^5) + s12^3*s13*
                (-216*s13^6 + 1431*s13^5*s23 + 6103*s13^4*s23^2 + 
                 7697*s13^3*s23^3 + 2146*s13^2*s23^4 - 1711*s13*s23^5 - 
                 786*s23^6) + s12^4*(81*s13^6 - 54*s13^5*s23 - 1143*s13^4*
                  s23^2 - 1388*s13^3*s23^3 + 334*s13^2*s23^4 + 1109*s13*
                  s23^5 + 385*s23^6) - s12*s13^3*(81*s13^6 + 2214*s13^5*s23 + 
                 6993*s13^4*s23^2 + 10132*s13^3*s23^3 + 8790*s13^2*s23^4 + 
                 4612*s13*s23^5 + 1094*s23^6) + s12^2*s13^2*(-324*s13^6 - 
                 765*s13^5*s23 + 5480*s13^4*s23^2 + 17486*s13^3*s23^3 + 
                 19583*s13^2*s23^4 + 9882*s13*s23^5 + 1944*s23^6)) + 
             p2q^2*p3q^3*s12*(-(s12^5*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*
                   s23^2 + 825*s13*s23^3 + 520*s23^4)) + s12^4*(81*s13^5 + 
                 225*s13^4*s23 + 1183*s13^3*s23^2 + 3127*s13^2*s23^3 + 
                 2133*s13*s23^4 + 250*s23^5) + s12^2*s13*(216*s13^6 + 
                 2421*s13^5*s23 + 6568*s13^4*s23^2 + 6324*s13^3*s23^3 - 
                 513*s13^2*s23^4 - 3151*s13*s23^5 - 882*s23^6) - s13^3*
                (81*s13^6 + 972*s13^5*s23 + 2571*s13^4*s23^2 + 3553*s13^3*
                  s23^3 + 3346*s13^2*s23^4 + 1983*s13*s23^5 + 510*s23^6) + 
               s12^3*(324*s13^6 - 243*s13^5*s23 - 2937*s13^4*s23^2 - 
                 2873*s13^3*s23^3 + 2203*s13^2*s23^4 + 3306*s13*s23^5 + 
                 770*s23^6) + s12*s13^2*(-81*s13^6 + 1971*s13^5*s23 + 
                 13089*s13^4*s23^2 + 29866*s13^3*s23^3 + 31973*s13^2*s23^4 + 
                 16192*s13*s23^5 + 3088*s23^6))) + p1q^4*s23*
            (p2q^2*(s13 + s23)*(s12^3*(108*s13^5 + 414*s13^4*s23 - 
                 191*s13^3*s23^2 - 847*s13^2*s23^3 - 590*s13*s23^4 - 
                 190*s23^5) + 4*s13^2*(27*s13^6 - 459*s13^5*s23 - 
                 1057*s13^4*s23^2 - 123*s13^3*s23^3 + 394*s13^2*s23^4 - 
                 534*s13*s23^5 - 480*s23^6) + s12^2*(324*s13^6 + 954*s13^5*
                  s23 - 703*s13^4*s23^2 - 3196*s13^3*s23^3 - 1249*s13^2*
                  s23^4 + 64*s13*s23^5 - 190*s23^6) + 2*s12*s13*(162*s13^6 - 
                 648*s13^5*s23 - 1389*s13^4*s23^2 - 718*s13^3*s23^3 - 
                 1053*s13^2*s23^4 - 372*s13*s23^5 + 382*s23^6)) + 
             p3q^2*(270*s12^5*s23^2*(4*s13^2 + 11*s13*s23 + 6*s23^2) - 2*
                s13^2*s23*(s13 + s23)^2*(117*s13^4 + 99*s13^3*s23 + 
                 32*s13^2*s23^2 + 507*s13*s23^3 + 417*s23^4) + s12*s13*
                (s13 + s23)^2*(108*s13^5 - 54*s13^4*s23 + 1091*s13^3*s23^2 + 
                 3814*s13^2*s23^3 + 2967*s13*s23^4 + 364*s23^5) + 2*s12^4*
                (54*s13^5 + 252*s13^4*s23 + 899*s13^3*s23^2 + 1959*s13^2*
                  s23^3 + 2003*s13*s23^4 + 750*s23^5) + s12^3*(324*s13^6 + 
                 2844*s13^5*s23 + 6650*s13^4*s23^2 + 4376*s13^3*s23^3 - 
                 2048*s13^2*s23^4 - 2554*s13*s23^5 - 350*s23^6) + s12^2*
                (324*s13^7 + 2736*s13^6*s23 + 8895*s13^5*s23^2 + 14043*s13^4*
                  s23^3 + 9901*s13^3*s23^4 + 935*s13^2*s23^5 - 1556*s13*
                  s23^6 - 230*s23^7)) + p2q*p3q*(2*s13^2*(s13 + s23)^2*
                (54*s13^5 - 207*s13^4*s23 + 163*s13^3*s23^2 + 1026*s13^2*
                  s23^3 - 975*s13*s23^4 - 1377*s23^5) + 2*s12^4*(54*s13^5 + 
                 189*s13^4*s23 - 154*s13^3*s23^2 - 984*s13^2*s23^3 - 
                 1210*s13*s23^4 - 465*s23^5) + s12^3*(432*s13^6 + 
                 1584*s13^5*s23 + 573*s13^4*s23^2 - 4636*s13^3*s23^3 - 
                 8435*s13^2*s23^4 - 5638*s13*s23^5 - 1350*s23^6) + 2*s12^2*
                (324*s13^7 + 1296*s13^6*s23 + 1180*s13^5*s23^2 - 535*s13^4*
                  s23^3 - 980*s13^3*s23^4 - 737*s13^2*s23^5 - 670*s13*s23^6 - 
                 210*s23^7) + s12*s13*(432*s13^7 + 1188*s13^6*s23 + 
                 1841*s13^5*s23^2 + 3924*s13^4*s23^3 + 5768*s13^3*s23^4 + 
                 5228*s13^2*s23^5 + 3427*s13*s23^6 + 1128*s23^7))) + 
           p1q^2*(-(p2q^4*s13*(s13 + s23)*(s12^3*(108*s13^5 - 216*s13^4*s23 - 
                  1451*s13^3*s23^2 - 1477*s13^2*s23^3 - 590*s13*s23^4 - 
                  190*s23^5) + 4*s13^2*(27*s13^6 - 207*s13^5*s23 - 
                  958*s13^4*s23^2 - 1140*s13^3*s23^3 - 731*s13^2*s23^4 - 
                  597*s13*s23^5 - 282*s23^6) + s12^2*(324*s13^6 - 306*s13^5*
                   s23 - 2611*s13^4*s23^2 - 5032*s13^3*s23^3 - 2617*s13^2*
                   s23^4 - 116*s13*s23^5 - 190*s23^6) + 2*s12*s13*
                 (162*s13^6 - 459*s13^5*s23 - 2019*s13^4*s23^2 - 2428*s13^3*
                   s23^3 - 1917*s13^2*s23^4 - 435*s13*s23^5 + 292*s23^6))) + 
             p3q^4*s12^2*(90*s12^5*s23^2*(4*s13 + 3*s23) + s12^4*
                (54*s13^4 + 90*s13^3*s23 + 242*s13^2*s23^2 + 426*s13*s23^3 + 
                 230*s23^4) + s12^2*s23*(774*s13^5 + 2909*s13^4*s23 + 
                 3282*s13^3*s23^2 - 259*s13^2*s23^3 - 3006*s13*s23^4 - 
                 1500*s23^5) + 2*s12^3*(54*s13^5 + 486*s13^4*s23 + 
                 646*s13^3*s23^2 - 653*s13^2*s23^3 - 1717*s13*s23^4 - 
                 770*s23^5) - s12*s13*(108*s13^6 + 54*s13^5*s23 + 
                 797*s13^4*s23^2 + 4051*s13^3*s23^3 + 4547*s13^2*s23^4 - 
                 337*s13*s23^5 - 1524*s23^6) - 2*s13^2*(27*s13^6 - 
                 27*s13^5*s23 + 671*s13^4*s23^2 + 4676*s13^3*s23^3 + 
                 9831*s13^2*s23^4 + 8535*s13*s23^5 + 2655*s23^6)) + 
             p2q*p3q^3*s12*(2*s12^5*(27*s13^4 + 54*s13^3*s23 - 698*s13^2*
                  s23^2 - 750*s13*s23^3 - 155*s23^4) - 2*s12^4*(54*s13^5 + 
                 261*s13^4*s23 + 891*s13^3*s23^2 + 2547*s13^2*s23^3 + 
                 3713*s13*s23^4 + 1635*s23^5) - s12^3*(540*s13^6 + 
                 5454*s13^5*s23 + 8485*s13^4*s23^2 + 992*s13^3*s23^3 - 
                 1991*s13^2*s23^4 + 2848*s13*s23^5 + 2230*s23^6) + s12*s13*
                (54*s13^7 - 1566*s13^6*s23 - 12107*s13^5*s23^2 - 35951*s13^4*
                  s23^3 - 53723*s13^3*s23^4 - 39735*s13^2*s23^5 - 
                 12508*s13*s23^6 - 872*s23^7) - s12^2*(432*s13^7 + 
                 5742*s13^6*s23 + 20298*s13^5*s23^2 + 32271*s13^4*s23^3 + 
                 20346*s13^3*s23^4 - 1373*s13^2*s23^5 - 5186*s13*s23^6 - 
                 730*s23^7) + 4*s13^2*(27*s13^7 - 162*s13^6*s23 - 
                 931*s13^5*s23^2 - 824*s13^4*s23^3 + 1468*s13^3*s23^4 + 
                 3347*s13^2*s23^5 + 2448*s13*s23^6 + 651*s23^7)) + 
             p2q^3*p3q*(-2*s13^3*(s13 + s23)^2*(81*s13^5 - 351*s13^4*s23 - 
                 1632*s13^3*s23^2 - 1235*s13^2*s23^3 - 1407*s13*s23^4 - 
                 1092*s23^5) + s12^4*(270*s13^6 + 432*s13^5*s23 - 
                 1319*s13^4*s23^2 - 1654*s13^3*s23^3 + 827*s13^2*s23^4 + 
                 1880*s13*s23^5 + 730*s23^6) + s12^2*s13*(324*s13^7 - 
                 1242*s13^6*s23 - 4383*s13^5*s23^2 + 2069*s13^4*s23^3 + 
                 8937*s13^3*s23^4 + 3933*s13^2*s23^5 - 850*s13*s23^6 - 
                 492*s23^7) + s12^3*(648*s13^7 + 1746*s13^6*s23 - 
                 76*s13^5*s23^2 - 4769*s13^4*s23^3 - 3648*s13^3*s23^4 + 
                 985*s13^2*s23^5 + 2038*s13*s23^6 + 730*s23^7) + 2*s12*s13^2*
                (-108*s13^7 - 1089*s13^6*s23 - 2468*s13^5*s23^2 + 
                 1563*s13^4*s23^3 + 11362*s13^3*s23^4 + 13554*s13^2*s23^5 + 
                 5996*s13*s23^6 + 754*s23^7)) + p2q^2*p3q^2*
              (-2*s13^3*(s13 + s23)^2*(27*s13^5 - 351*s13^4*s23 - 
                 1282*s13^3*s23^2 - 1195*s13^2*s23^3 - 939*s13*s23^4 - 
                 528*s23^5) - 4*s12^5*(54*s13^5 + 162*s13^4*s23 - 
                 388*s13^3*s23^2 - 421*s13^2*s23^3 + 440*s13*s23^4 + 
                 365*s23^5) + s12^4*s13*(-270*s13^5 - 1296*s13^4*s23 + 
                 355*s13^3*s23^2 + 6762*s13^2*s23^3 + 7955*s13*s23^4 + 
                 2704*s23^5) + s12^2*s13*(756*s13^7 + 6426*s13^6*s23 + 
                 12265*s13^5*s23^2 + 3971*s13^4*s23^3 - 14395*s13^3*s23^4 - 
                 18171*s13^2*s23^5 - 8354*s13*s23^6 - 1554*s23^7) + s12^3*
                (432*s13^7 + 5130*s13^6*s23 + 5252*s13^5*s23^2 - 9205*s13^4*
                  s23^3 - 10804*s13^3*s23^4 + 2555*s13^2*s23^5 + 
                 5510*s13*s23^6 + 1460*s23^7) + 2*s12*s13^2*(108*s13^7 + 
                 621*s13^6*s23 + 2003*s13^5*s23^2 + 8077*s13^4*s23^3 + 
                 18224*s13^3*s23^4 + 20200*s13^2*s23^5 + 10911*s13*s23^6 + 
                 2348*s23^7))) + p1q^3*(-(p2q^3*(s13 + s23)*(
                s12^3*(54*s13^6 - 432*s13^5*s23 - 1963*s13^4*s23^2 - 
                  974*s13^3*s23^3 + 163*s13^2*s23^4 + 190*s13*s23^5 + 
                  230*s23^6) + 2*s12*s13*(81*s13^7 - 783*s13^6*s23 - 
                  1446*s13^5*s23^2 - 872*s13^4*s23^3 - 963*s13^3*s23^4 + 
                  391*s13^2*s23^5 + 642*s13*s23^6 - 182*s23^7) + 
                s12^2*(162*s13^7 - 954*s13^6*s23 - 4577*s13^5*s23^2 - 
                  5363*s13^4*s23^3 + 215*s13^3*s23^4 + 1363*s13^2*s23^5 + 
                  16*s13*s23^6 + 230*s23^7) + 2*s13^2*(27*s13^7 - 522*s13^6*
                   s23 - 616*s13^5*s23^2 + 1401*s13^4*s23^3 + 1077*s13^3*
                   s23^4 - 1066*s13^2*s23^5 - 240*s13*s23^6 + 435*s23^7))) - 
             p3q^3*s12*(90*s12^5*s23^2*(4*s13^2 + 19*s13*s23 + 12*s23^2) + 2*
                s12^4*(27*s13^5 + 126*s13^4*s23 + 337*s13^3*s23^2 + 
                 855*s13^2*s23^3 + 1087*s13*s23^4 + 480*s23^5) + 2*s13^2*s23*
                (108*s13^6 + 513*s13^5*s23 + 368*s13^4*s23^2 - 2461*s13^3*
                  s23^3 - 6273*s13^2*s23^4 - 5568*s13*s23^5 - 1719*s23^6) + 2*
                s12^3*(81*s13^6 + 810*s13^5*s23 + 2486*s13^4*s23^2 + 
                 2189*s13^3*s23^3 - 1101*s13^2*s23^4 - 2023*s13*s23^5 - 
                 540*s23^6) + s12^2*(162*s13^7 + 1746*s13^6*s23 + 
                 6945*s13^5*s23^2 + 12996*s13^4*s23^3 + 10939*s13^3*s23^4 + 
                 1400*s13^2*s23^5 - 2794*s13*s23^6 - 960*s23^7) + s12*s13*
                (54*s13^7 + 594*s13^6*s23 + 2359*s13^5*s23^2 + 5389*s13^4*
                  s23^3 + 7523*s13^3*s23^4 + 6563*s13^2*s23^5 + 3926*s13*
                  s23^6 + 1236*s23^7)) + p2q*p3q^2*(2*s13^2*s23*(s13 + s23)^2*
                (216*s13^5 + 279*s13^4*s23 + s13^3*s23^2 + 388*s13^2*s23^3 - 
                 87*s13*s23^4 - 417*s23^5) + s12^5*(-54*s13^5 - 270*s13^4*
                  s23 + 712*s13^3*s23^2 + 3618*s13^2*s23^3 + 3460*s13*s23^4 + 
                 930*s23^5) + s12^4*(-54*s13^6 - 648*s13^5*s23 + 561*s13^4*
                  s23^2 + 5794*s13^3*s23^3 + 11147*s13^2*s23^4 + 
                 9238*s13*s23^5 + 2770*s23^6) + s12^3*(162*s13^7 + 
                 2700*s13^6*s23 + 8588*s13^5*s23^2 + 8535*s13^4*s23^3 + 
                 1214*s13^3*s23^4 - 445*s13^2*s23^5 + 2636*s13*s23^6 + 
                 1610*s23^7) + 2*s12^2*(135*s13^8 + 1917*s13^7*s23 + 
                 6949*s13^6*s23^2 + 11878*s13^5*s23^3 + 10350*s13^4*s23^4 + 
                 3417*s13^3*s23^5 - 1986*s13^2*s23^6 - 1719*s13*s23^7 - 
                 115*s23^8) + s12*s13*(108*s13^8 + 1188*s13^7*s23 + 
                 3719*s13^6*s23^2 + 10868*s13^5*s23^3 + 27744*s13^4*s23^4 + 
                 40856*s13^3*s23^5 + 30013*s13^2*s23^6 + 9036*s13*s23^7 + 
                 364*s23^8)) + p2q^2*p3q*(-2*s13^2*(s13 + s23)^2*
                (27*s13^6 - 297*s13^5*s23 - 130*s13^4*s23^2 + 333*s13^3*
                  s23^3 - 1823*s13^2*s23^4 - 750*s13*s23^5 + 852*s23^6) + 
               s12^4*(108*s13^6 + 108*s13^5*s23 - 929*s13^4*s23^2 - 
                 1960*s13^3*s23^3 - 811*s13^2*s23^4 + 1250*s13*s23^5 + 
                 880*s23^6) + 2*s12^3*(135*s13^7 + 594*s13^6*s23 + 
                 801*s13^5*s23^2 - 978*s13^4*s23^3 - 2941*s13^3*s23^4 - 
                 2399*s13^2*s23^5 - 433*s13*s23^6 + 210*s23^7) + s12^2*
                (162*s13^8 - 324*s13^7*s23 + 2474*s13^6*s23^2 + 11635*s13^5*
                  s23^3 + 12779*s13^4*s23^4 + 3449*s13^3*s23^5 - 2883*s13^2*
                  s23^6 - 2448*s13*s23^7 - 460*s23^8) + s12*s13*(-54*s13^8 - 
                 918*s13^7*s23 - 1525*s13^6*s23^2 + 7168*s13^5*s23^3 + 
                 26384*s13^4*s23^4 + 32172*s13^3*s23^5 + 17567*s13^2*s23^6 + 
                 4678*s13*s23^7 + 728*s23^8))))/(36*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s13^3*s23^2*(s13 + s23)^2*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((ep^2*(s12^3*(9*s13^2 - 10*s23^2) + 2*s13*s23^2*(13*s13^2 - 
                10*s13*s23 - 3*s23^2) + s12^2*(9*s13^3 + 27*s13^2*s23 - 
                6*s13*s23^2 - 20*s23^3) - s12*s23*(-45*s13^3 + 2*s13^2*s23 + 
                12*s13*s23^2 + 10*s23^3)))/(18*s12*s13^2*s23^2*(s13 + s23)) - 
           ((s12 + s13 + s23)*(180*p1q^6*s12*s23^3*(s13 + s23)*(s12 + s13 + 
                s23) - 18*(p3q*s12 - p2q*s13)*(10*p3q^5*s12^3*s23*
                 (s12 + s13 + s23) + p2q*p3q^4*s12^2*(10*s12^3 + 10*s12^2*
                   (s13 + 3*s23) - 10*s23*(2*s13^2 + 3*s13*s23 + s23^2) + 
                  s12*(-17*s13^2 - 10*s13*s23 + 10*s23^2)) - p2q^5*s13^2*
                 (10*s12^2*(s13 + s23) + 11*s13^2*(s13 + s23) + 
                  s12*(s13^2 + 20*s13*s23 + 10*s23^2)) + p2q^2*p3q^3*s12*
                 (10*s12^4 + 10*s12^3*(-2*s13 + s23) + 2*s13*s23*(s13^2 + 
                    10*s13*s23 + 5*s23^2) - s12^2*(47*s13^2 + 80*s13*s23 + 
                    20*s23^2) + s12*(5*s13^3 + 7*s13^2*s23 - 40*s13*s23^2 - 
                    20*s23^3)) + p2q^4*p3q*s13*(10*s12^3*(3*s13 + 2*s23) - 
                  s13^2*(20*s13^2 + 21*s13*s23 + s23^2) + s12^2*(11*s13^2 + 
                    50*s13*s23 + 30*s23^2) + s12*(13*s13^3 - 26*s13^2*s23 + 
                    10*s23^3)) + p2q^3*p3q^2*(8*s13^3*s23*(s13 + s23) - 
                  20*s12^3*s23*(2*s13 + s23) - 10*s12^4*(3*s13 + s23) + 
                  s12^2*(35*s13^3 + 87*s13^2*s23 + 20*s13*s23^2 - 10*s23^3) + 
                  2*s12*s13*(16*s13^3 + 7*s13^2*s23 + 15*s13*s23^2 + 
                    10*s23^3))) - p1q^5*s23^2*(p3q*(180*s12^3*(3*s13 + 
                    4*s23) + 40*s12^2*(9*s13^2 + 22*s13*s23 + 13*s23^2) + 
                  s12*(180*s13^3 - 351*s13^2*s23 - 580*s13*s23^2 - 
                    40*s23^3) + s23*(149*s13^3 + 149*s13^2*s23 + 160*s13*
                     s23^2 + 160*s23^3)) + p2q*(20*s12^2*(9*s13^2 - s13*s23 - 
                    10*s23^2) + s12*(846*s13^3 + 855*s13^2*s23 - 40*s13*
                     s23^2 - 40*s23^3) + s23*(149*s13^3 + 149*s13^2*s23 + 
                    160*s13*s23^2 + 160*s23^3))) - p1q^4*s23*(
                -(p3q^2*(540*s12^4*(s13 + 2*s23) + 20*s12^3*(9*s13^2 + 
                     25*s13*s23 + 15*s23^2) + 2*s12^2*(180*s13^3 - 261*s13^2*
                      s23 - 840*s13*s23^2 - 50*s23^3) - s23^2*(149*s13^3 + 
                     149*s13^2*s23 + 160*s13*s23^2 + 160*s23^3) + s12*s23*
                    (118*s13^3 + 789*s13^2*s23 + 900*s13*s23^2 + 
                     520*s23^3))) + p2q^2*(s12^2*(36*s13^3 + 409*s13^2*s23 + 
                    360*s13*s23^2 + 140*s23^3) + 2*s12*(-648*s13^4 + 
                    81*s13^3*s23 + 904*s13^2*s23^2 + 270*s13*s23^3 + 
                    230*s23^4) + s23*(-163*s13^4 + 144*s13^3*s23 - 13*s13^2*
                     s23^2 + 320*s23^4)) + p2q*p3q*(40*s12^3*(9*s13^2 + 
                    19*s13*s23 + 15*s23^2) - s12^2*(594*s13^3 + 707*s13^2*
                     s23 - 600*s13*s23^2 + 120*s23^3) + s12*(-342*s13^4 + 
                    1520*s13^3*s23 + 1019*s13^2*s23^2 - 900*s13*s23^3 - 
                    240*s23^4) + s23*(-361*s13^4 + 95*s13^3*s23 + 136*s13^2*
                     s23^2 + 160*s13*s23^3 + 480*s23^4))) + 
              p1q*(20*p3q^5*s12^3*(9*s12^3 - s12^2*s23 + s12*(9*s13^2 - 
                    18*s13*s23 + 25*s23^2) + s23*(16*s13^2 + 36*s13*s23 + 
                    35*s23^2)) - p2q^5*s13^2*(477*s13^4 + 527*s13^3*s23 + 
                  50*s13^2*s23^2 + 160*s13*s23^3 + 160*s23^4 + 20*s12^2*
                   (9*s13^2 - s13*s23 - 10*s23^2) + s12*(846*s13^3 + 
                    1503*s13^2*s23 - 40*s13*s23^2 - 40*s23^3)) + 
                p2q*p3q^4*s12^2*(-80*s12^3*(9*s13 - 4*s23) + 12*s12^2*
                   (96*s13^2 + 65*s13*s23 + 160*s23^2) - s23*(717*s13^3 + 
                    869*s13^2*s23 + 1200*s13*s23^2 + 520*s23^3) + 
                  s12*(-765*s13^3 + 613*s13^2*s23 + 1200*s13*s23^2 + 
                    1080*s23^3)) + p2q^2*p3q^3*s12*(20*s12^4*(9*s13 + 
                    35*s23) + 6*s12^3*(321*s13^2 + 170*s13*s23 + 180*s23^2) + 
                  2*s13*s23*(156*s13^3 - 31*s13^2*s23 - 21*s13*s23^2 - 
                    20*s23^3) - s12^2*(3159*s13^3 + 2890*s13^2*s23 + 
                    2320*s13*s23^2 + 660*s23^3) + s12*(549*s13^4 - 2928*s13^3*
                     s23 - 2110*s13^2*s23^2 - 2480*s13*s23^3 - 1040*s23^4)) + 
                p2q^4*p3q*s13*(20*s12^3*(27*s13^2 + 33*s13*s23 + 16*s23^2) + 
                  2*s12^2*(1359*s13^3 + 1676*s13^2*s23 + 860*s13*s23^2 + 
                    140*s23^3) + s13*(-441*s13^4 - 406*s13^3*s23 + 359*s13^2*
                     s23^2 + 4*s13*s23^3 - 320*s23^4) + s12*(99*s13^4 + 
                    1374*s13^3*s23 + 2763*s13^2*s23^2 + 380*s13*s23^3 - 
                    40*s23^4)) - p2q^3*p3q^2*(20*s12^4*(27*s13^2 + 
                    69*s13*s23 + 26*s23^2) - s13^2*s23*(85*s13^3 + 247*s13^2*
                     s23 + 2*s13*s23^2 - 160*s23^3) + s12^3*(3258*s13^3 + 
                    3837*s13^2*s23 + 2840*s13*s23^2 + 1040*s23^3) - 
                  s12*s13*(477*s13^4 + 2433*s13^3*s23 + 2175*s13^2*s23^2 + 
                    298*s13*s23^3 - 80*s23^4) + s12^2*(-2385*s13^4 + 
                    13*s13^3*s23 - 99*s13^2*s23^2 + 1000*s13*s23^3 + 
                    520*s23^4))) + p1q^3*(p3q^3*s12*(-180*s12^4*(s13 + 
                    4*s23) + 20*s12^3*s23*(10*s13 + 21*s23) - 3*s12^2*
                   (60*s13^3 + 3*s13^2*s23 - 540*s13*s23^2 - 20*s23^3) + 
                  2*s23^2*(149*s13^3 + 309*s13^2*s23 + 340*s13*s23^2 + 
                    330*s23^3) - s12*s23*(-211*s13^3 + 951*s13^2*s23 + 
                    1680*s13*s23^2 + 420*s23^3)) + p2q*p3q^2*
                 (20*s12^4*(27*s13^2 + 73*s13*s23 + 30*s23^2) - 2*s12^3*
                   (243*s13^3 + 569*s13^2*s23 - 140*s13*s23^2 + 200*s23^3) + 
                  s23^2*(280*s13^4 + 113*s13^3*s23 + 153*s13^2*s23^2 + 
                    160*s13*s23^3 - 160*s23^4) + s12^2*(198*s13^4 + 
                    823*s13^3*s23 + 1161*s13^2*s23^2 - 1140*s13*s23^3 + 
                    840*s23^4) + s12*s23*(316*s13^4 - 573*s13^3*s23 + 
                    532*s13^2*s23^2 + 2000*s13*s23^3 + 1680*s23^4)) + 
                p2q^3*(s12^2*(342*s13^4 + 479*s13^3*s23 - 69*s13^2*s23^2 - 
                    60*s13*s23^3 - 160*s23^4) + s12*(-486*s13^5 + 2547*s13^4*
                     s23 + 3046*s13^3*s23^2 - 273*s13^2*s23^3 + 240*s13*
                     s23^4 - 320*s23^5) + s23*(265*s13^5 + 834*s13^4*s23 + 
                    251*s13^3*s23^2 + 322*s13^2*s23^3 + 480*s13*s23^4 - 
                    160*s23^5)) + p2q^2*p3q*(s12^3*(-702*s13^3 - 751*s13^2*
                     s23 + 100*s13*s23^2 + 620*s23^3) + s12^2*(972*s13^4 + 
                    425*s13^3*s23 + 1917*s13^2*s23^2 + 1380*s13*s23^3 + 
                    1640*s23^4) + s23*(-131*s13^5 + 916*s13^4*s23 + 
                    562*s13^3*s23^2 + 475*s13^2*s23^3 + 640*s13*s23^4 - 
                    320*s23^5) + s12*(-18*s13^5 + 3871*s13^4*s23 + 1743*s13^3*
                     s23^2 - 1565*s13^2*s23^3 + 1200*s13*s23^4 + 
                    700*s23^5))) + p1q^2*(p3q^4*s12^2*(180*s12^4 - 
                  20*s12^3*(9*s13 + 28*s23) + 20*s12^2*(9*s13^2 - 26*s13*
                     s23 + s23^2) + s12*(-180*s13^3 + 131*s13^2*s23 + 
                    1300*s13*s23^2 - 260*s23^3) - s23*(149*s13^3 + 789*s13^2*
                     s23 + 1060*s13*s23^2 + 1020*s23^3)) + p2q^4*s13*
                 (-279*s13^5 - 64*s13^4*s23 + 621*s13^3*s23^2 + 86*s13^2*
                   s23^3 + 320*s23^5 + s12^2*(342*s13^3 + 715*s13^2*s23 + 
                    360*s13*s23^2 + 140*s23^3) + s12*(-1314*s13^4 + 
                    108*s13^3*s23 + 2582*s13^2*s23^2 + 540*s13*s23^3 + 
                    460*s23^4)) - p2q*p3q^3*s12*(40*s12^4*(18*s13 + 5*s23) - 
                  2*s12^3*(603*s13^2 + 500*s13*s23 + 50*s23^2) + 5*s12^2*
                   (270*s13^3 + 277*s13^2*s23 + 40*s13*s23^2 + 460*s23^3) - 
                  4*s23*(34*s13^4 - 29*s13^3*s23 + 24*s13^2*s23^2 + 
                    80*s13*s23^3 + 125*s23^4) + s12*(-279*s13^4 + 745*s13^3*
                     s23 + 1555*s13^2*s23^2 + 3400*s13*s23^3 + 2100*s23^4)) + 
                p2q^3*p3q*(s12^3*(-882*s13^3 - 271*s13^2*s23 + 640*s13*
                     s23^2 + 500*s23^3) + s12^2*(3474*s13^4 + 1923*s13^3*
                     s23 + 1850*s13^2*s23^2 + 1380*s13*s23^3 + 1000*s23^4) + 
                  s12*(-270*s13^5 + 5335*s13^4*s23 + 5927*s13^3*s23^2 + 
                    5*s13^2*s23^3 + 840*s13*s23^4 + 500*s23^5) + 
                  s13*(-81*s13^5 - 87*s13^4*s23 + 1076*s13^3*s23^2 + 
                    584*s13^2*s23^3 + 142*s13*s23^4 + 640*s23^5)) + 
                p2q^2*p3q^2*(40*s12^4*(27*s13^2 + 2*s13*s23 - 25*s23^2) - 
                  s12^3*(3186*s13^3 + 3155*s13^2*s23 + 2480*s13*s23^2 + 
                    2080*s23^3) + s12^2*(1719*s13^4 - 2034*s13^3*s23 + 
                    616*s13^2*s23^2 - 1100*s13*s23^3 - 80*s23^4) + 
                  s13*s23*(13*s13^4 + 527*s13^3*s23 + 336*s13^2*s23^2 + 
                    142*s13*s23^3 + 320*s23^4) + s12*(-18*s13^5 + 2717*s13^4*
                     s23 + 1231*s13^3*s23^2 - 619*s13^2*s23^3 + 700*s13*
                     s23^4 + 1000*s23^5)))))/(36*ep*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13^3*s23*(-(p3q^3*s12^3) + 
              (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
              p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
           (ep*(-45*p1q^6*s12*s23^5*(s13 + s23)^2*(s12^2 + 3*s12*s13 + 
                2*s13^2 + 2*s12*s23 + 3*s13*s23 + s23^2) + 
              9*(p3q*s12 - p2q*s13)^2*s23*(s13 + s23)*(s12 + s13 + s23)*(
                5*p3q^4*s12^2*s23^2*(s12 + 2*s13 + s23) + p2q^4*s13*
                 (s13 + s23)*(-9*s13^3 + 5*s12^2*s23 - 10*s13^2*s23 + 
                  4*s13*s23^2 + 5*s23^3 + s12*(-s13^2 + 4*s13*s23 + 
                    10*s23^2)) + p2q*p3q^3*s12*(5*s12^3*s23 + 5*s12^2*s23*
                   (s13 + 3*s23) + s12*(-4*s13^3 - 10*s13^2*s23 + 
                    5*s13*s23^2 + 5*s23^3) - s23*(4*s13^3 + 19*s13^2*s23 + 
                    20*s13*s23^2 + 5*s23^3)) + p2q^2*p3q^2*(5*s12^4*s23 + 
                  5*s12^3*s23*(-s13 + s23) + s13*s23*(s13 + s23)^2*
                   (4*s13 + 5*s23) - s12^2*(3*s13^3 + 19*s13^2*s23 + 
                    30*s13*s23^2 + 10*s23^3) + s12*(13*s13^4 + 20*s13^3*s23 - 
                    13*s13^2*s23^2 - 30*s13*s23^3 - 10*s23^4)) + 
                p2q^3*p3q*(-5*s12^3*s23*(2*s13 + s23) - s13*(s13 + s23)^2*
                   (9*s13^2 - 3*s13*s23 - 10*s23^2) + s12^2*(s13^3 - 
                    4*s13^2*s23 - 20*s13*s23^2 - 10*s23^3) + s12*(12*s13^4 + 
                    27*s13^3*s23 + 20*s13^2*s23^2 - 5*s23^4))) + 
              p1q^5*s23^2*(s13 + s23)*(p2q*(s12^3*(18*s13^4 + 9*s13^3*s23 + 
                    31*s13^2*s23^2 - 20*s13*s23^3 - 55*s23^4) + 
                  s12^2*(18*s13^5 + 36*s13^4*s23 + 334*s13^3*s23^2 + 
                    151*s13^2*s23^3 - 195*s13*s23^4 - 75*s23^5) + 
                  s12*s23*(162*s13^5 + 609*s13^4*s23 + 632*s13^3*s23^2 + 
                    70*s13^2*s23^3 - 60*s13*s23^4 + 15*s23^5) + 
                  s23^2*(123*s13^5 + 331*s13^4*s23 + 258*s13^3*s23^2 + 
                    130*s13^2*s23^3 + 115*s13*s23^4 + 35*s23^5)) + 
                p3q*(45*s12^4*s23^2*(3*s13 + 4*s23) + s12^3*(18*s13^4 + 
                    9*s13^3*s23 + 301*s13^2*s23^2 + 655*s13*s23^3 + 
                    305*s23^4) + s12*s23*(126*s13^5 + 231*s13^4*s23 - 
                    241*s13^3*s23^2 - 686*s13^2*s23^3 - 285*s13*s23^4 + 
                    15*s23^5) + s23^2*(87*s13^5 + 178*s13^4*s23 + 15*s13^3*
                     s23^2 - 41*s13^2*s23^3 + 70*s13*s23^4 + 35*s23^5) + 
                  s12^2*(18*s13^5 + 163*s13^3*s23^2 + 196*s13^2*s23^3 + 
                    165*s13*s23^4 + 105*s23^5))) + p1q^4*s23*(
                -(p3q^2*(135*s12^5*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) - 
                   s23^3*(s13 + s23)^2*(87*s13^4 + 91*s13^3*s23 - 76*s13^2*
                      s23^2 + 35*s13*s23^3 + 35*s23^4) + s12^4*(36*s13^5 + 
                     72*s13^4*s23 + 224*s13^3*s23^2 + 818*s13^2*s23^3 + 
                     955*s13*s23^4 + 330*s23^5) + s12^3*(36*s13^6 + 
                     36*s13^5*s23 + 29*s13^4*s23^2 - 293*s13^3*s23^3 - 
                     947*s13^2*s23^4 - 570*s13*s23^5 + 10*s23^6) + 
                   s12^2*s23*(234*s13^6 + 822*s13^5*s23 + 210*s13^4*s23^2 - 
                     1770*s13^3*s23^3 - 1972*s13^2*s23^4 - 465*s13*s23^5 + 
                     75*s23^6) + s12*s23^2*(48*s13^6 + 251*s13^5*s23 + 
                     547*s13^4*s23^2 + 863*s13^3*s23^3 + 979*s13^2*s23^4 + 
                     550*s13*s23^5 + 90*s23^6))) - p2q^2*(s13 + s23)*
                 (s12^3*(36*s13^5 - 64*s13^3*s23^2 - 93*s13^2*s23^3 - 
                    70*s13*s23^4 - 25*s23^5) + s12^2*(36*s13^6 - 90*s13^5*
                     s23 + 47*s13^4*s23^2 - 573*s13^3*s23^3 - 656*s13^2*
                     s23^4 - 210*s13*s23^5 - 120*s23^6) - s23^2*(-264*s13^6 - 
                    488*s13^5*s23 + 83*s13^4*s23^2 + 319*s13^3*s23^3 + 
                    147*s13^2*s23^4 + 205*s13*s23^5 + 70*s23^6) - 
                  s12*s23*(-180*s13^6 - 309*s13^5*s23 + 467*s13^4*s23^2 + 
                    1196*s13^3*s23^3 + 620*s13^2*s23^4 + 345*s13*s23^5 + 
                    165*s23^6)) + p2q*p3q*(s23^2*(s13 + s23)^2*(-111*s13^5 + 
                    268*s13^4*s23 + 704*s13^3*s23^2 - 55*s13^2*s23^3 + 
                    125*s13*s23^4 + 105*s23^5) + s12^4*(-36*s13^5 - 
                    72*s13^4*s23 + 91*s13^3*s23^2 + 352*s13^2*s23^3 + 
                    395*s13*s23^4 + 165*s23^5) + s12^3*(-72*s13^6 - 
                    144*s13^5*s23 - 10*s13^4*s23^2 + 567*s13^3*s23^3 + 
                    1335*s13^2*s23^4 + 935*s13*s23^5 + 150*s23^6) + 
                  s12*s23*(-108*s13^7 + 39*s13^6*s23 + 1293*s13^5*s23^2 + 
                    2178*s13^4*s23^3 + 458*s13^3*s23^4 - 1139*s13^2*s23^5 - 
                    535*s13*s23^6 + 30*s23^7) - s12^2*(36*s13^7 + 180*s13^6*
                     s23 + 725*s13^5*s23^2 + 125*s13^4*s23^3 - 1100*s13^3*
                     s23^4 - 444*s13^2*s23^5 + 330*s13*s23^6 + 90*s23^7))) + 
              p1q*(-(p3q^5*s12^3*(45*s12^4*s23^2*(s13 + s23) + s12^3*
                    (18*s13^4 + 9*s13^3*s23 + 31*s13^2*s23^2 + 70*s13*s23^3 + 
                     35*s23^4) + s12^2*(18*s13^5 - 26*s13^3*s23^2 - 
                     308*s13^2*s23^3 - 150*s13*s23^4 + 105*s23^5) + 
                   s23^2*(78*s13^5 + 241*s13^4*s23 + 483*s13^3*s23^2 + 
                     805*s13^2*s23^3 + 655*s13*s23^4 + 170*s23^5) + 
                   s12*s23*(126*s13^5 + 213*s13^4*s23 - 142*s13^3*s23^2 - 
                     74*s13^2*s23^3 + 480*s13*s23^4 + 285*s23^5))) + 
                p2q^5*s13^2*(s13 + s23)*(s12^3*(18*s13^4 + 9*s13^3*s23 + 
                    31*s13^2*s23^2 - 20*s13*s23^3 - 55*s23^4) + s12*s23*
                   (-99*s13^5 + 132*s13^4*s23 + 767*s13^3*s23^2 + 547*s13^2*
                     s23^3 - 114*s13*s23^4 - 165*s23^5) + s12^2*(18*s13^5 + 
                    18*s13^4*s23 + 226*s13^3*s23^2 + 259*s13^2*s23^3 - 
                    87*s13*s23^4 - 165*s23^5) + s23*(-243*s13^6 - 471*s13^5*
                     s23 + 115*s13^4*s23^2 + 654*s13^3*s23^3 + 319*s13^2*
                     s23^4 - 47*s13*s23^5 - 55*s23^6)) - p2q*p3q^4*s12^2*
                 (2*s12^4*(18*s13^4 + 9*s13^3*s23 - 104*s13^2*s23^2 - 
                    65*s13*s23^3 + 35*s23^4) + s12^3*(-18*s13^5 + 27*s13^4*
                     s23 + 98*s13^3*s23^2 - 47*s13^2*s23^3 + 515*s13*s23^4 + 
                    535*s23^5) - s23^2*(351*s13^6 + 1224*s13^5*s23 + 
                    1717*s13^4*s23^2 + 1836*s13^3*s23^3 + 1627*s13^2*s23^4 + 
                    760*s13*s23^5 + 125*s23^6) + s12*s23*(-495*s13^6 - 
                    1176*s13^5*s23 - 322*s13^4*s23^2 + 1249*s13^3*s23^3 + 
                    1270*s13^2*s23^4 + 605*s13*s23^5 + 145*s23^6) + 
                  s12^2*(-54*s13^6 + 189*s13^5*s23 + 540*s13^4*s23^2 + 
                    1350*s13^3*s23^3 + 2158*s13^2*s23^4 + 2010*s13*s23^5 + 
                    735*s23^6)) - p2q^4*p3q*s13*(2*s13*s23*(s13 + s23)^2*
                   (81*s13^5 - 87*s13^4*s23 - 397*s13^3*s23^2 - 122*s13^2*
                     s23^3 + 82*s13*s23^4 + 55*s23^5) + s12^4*(54*s13^5 + 
                    63*s13^4*s23 + 111*s13^3*s23^2 + 227*s13^2*s23^3 + 
                    200*s13*s23^4 + 70*s23^5) + s12*s23*(s13 + s23)^2*
                   (-837*s13^5 - 1560*s13^4*s23 - 247*s13^3*s23^2 + 
                    916*s13^2*s23^3 + 642*s13*s23^4 + 70*s23^5) + 
                  s12^3*(18*s13^6 + 45*s13^5*s23 + 724*s13^4*s23^2 + 
                    1765*s13^3*s23^3 + 1865*s13^2*s23^4 + 962*s13*s23^5 + 
                    210*s23^6) + s12^2*(-36*s13^7 - 342*s13^6*s23 - 
                    524*s13^5*s23^2 + 1280*s13^4*s23^3 + 3758*s13^3*s23^4 + 
                    3524*s13^2*s23^5 + 1434*s13*s23^6 + 210*s23^7)) - 
                p2q^2*p3q^3*s12*(s12^5*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*
                     s23^2 + 205*s13*s23^3 + 170*s23^4) + s12^4*(-90*s13^5 - 
                    63*s13^4*s23 + 553*s13^3*s23^2 + 1046*s13^2*s23^3 + 
                    985*s13*s23^4 + 440*s23^5) + s13*s23^2*(468*s13^6 + 
                    1653*s13^5*s23 + 2021*s13^4*s23^2 + 1167*s13^3*s23^3 + 
                    533*s13^2*s23^4 + 272*s13*s23^5 + 70*s23^6) + 
                  s12^3*(-54*s13^6 - 225*s13^5*s23 - 627*s13^4*s23^2 + 
                    203*s13^3*s23^3 + 589*s13^2*s23^4 + 265*s13*s23^5 + 
                    120*s23^6) + s12^2*(54*s13^7 - 729*s13^6*s23 - 2412*s13^5*
                     s23^2 - 4044*s13^4*s23^3 - 4607*s13^3*s23^4 - 4072*s13^2*
                     s23^5 - 2075*s13*s23^6 - 400*s23^7) - s12*s23*
                   (-774*s13^7 - 2043*s13^6*s23 - 531*s13^5*s23^2 + 
                    3265*s13^4*s23^3 + 4981*s13^3*s23^4 + 3734*s13^2*s23^5 + 
                    1490*s13*s23^6 + 250*s23^7)) + p2q^3*p3q^2*
                 (s13^2*s23^2*(s13 + s23)^2*(195*s13^4 + 280*s13^3*s23 - 
                    112*s13^2*s23^2 - 172*s13*s23^3 - 55*s23^4) + 
                  s12^5*(54*s13^5 + 45*s13^4*s23 + 102*s13^3*s23^2 + 
                    421*s13^2*s23^3 + 445*s13*s23^4 + 125*s23^5) + 
                  s12^4*(-54*s13^6 - 36*s13^5*s23 + 870*s13^4*s23^2 + 
                    2277*s13^3*s23^3 + 2820*s13^2*s23^4 + 1690*s13*s23^5 + 
                    375*s23^6) + s12*s13*s23*(567*s13^7 + 1230*s13^6*s23 - 
                    733*s13^5*s23^2 - 4024*s13^4*s23^3 - 4493*s13^3*s23^4 - 
                    2614*s13^2*s23^5 - 889*s13*s23^6 - 140*s23^7) + 
                  s12^3*(-90*s13^7 - 432*s13^6*s23 - 1055*s13^5*s23^2 + 
                    859*s13^4*s23^3 + 3943*s13^3*s23^4 + 4071*s13^2*s23^5 + 
                    1905*s13*s23^6 + 375*s23^7) + s12^2*(18*s13^8 - 
                    1134*s13^7*s23 - 4418*s13^6*s23^2 - 6454*s13^5*s23^3 - 
                    4002*s13^4*s23^4 - 451*s13^3*s23^5 + 838*s13^2*s23^6 + 
                    520*s13*s23^7 + 125*s23^8))) + p1q^2*(p3q^4*s12^2*
                 (-45*s12^5*s23^2*(s13 + s23) + s12^4*(-18*s13^4 - 9*s13^3*
                     s23 + 14*s13^2*s23^2 + 110*s13*s23^3 + 100*s23^4) + 
                  s12^3*s23*(63*s13^4 + 84*s13^3*s23 + 516*s13^2*s23^2 + 
                    575*s13*s23^3 + 135*s23^4) + 2*s12^2*(9*s13^6 - 
                    36*s13^5*s23 - 115*s13^4*s23^2 - 68*s13^3*s23^3 - 
                    293*s13^2*s23^4 - 255*s13*s23^5 + 15*s23^6) + 
                  s23^2*(87*s13^6 + 421*s13^5*s23 + 675*s13^4*s23^2 + 
                    670*s13^3*s23^3 + 964*s13^2*s23^4 + 875*s13*s23^5 + 
                    240*s23^6) + s12*s23*(126*s13^6 + 531*s13^5*s23 + 
                    265*s13^4*s23^2 - 1199*s13^3*s23^3 - 1474*s13^2*s23^4 - 
                    55*s13*s23^5 + 280*s23^6)) - p2q^4*s13*(s13 + s23)*
                 (s12^3*(-36*s13^5 + 18*s13^4*s23 + 100*s13^3*s23^2 + 
                    111*s13^2*s23^3 + 70*s13*s23^4 + 25*s23^5) + 
                  s12^2*(-36*s13^6 - 27*s13^5*s23 - 245*s13^4*s23^2 + 
                    312*s13^3*s23^3 + 665*s13^2*s23^4 + 354*s13*s23^5 + 
                    75*s23^6) + s12*s23*(-153*s13^6 - 678*s13^5*s23 - 
                    550*s13^4*s23^2 + 710*s13^3*s23^3 + 998*s13^2*s23^4 + 
                    498*s13*s23^5 + 75*s23^6) + s23*(162*s13^7 - 84*s13^6*
                     s23 - 920*s13^5*s23^2 - 529*s13^4*s23^3 + 400*s13^3*
                     s23^4 + 444*s13^2*s23^5 + 214*s13*s23^6 + 25*s23^7)) - 
                p2q*p3q^3*s12*(s12^5*(18*s13^4 + 9*s13^3*s23 - 194*s13^2*
                     s23^2 - 245*s13*s23^3 - 55*s23^4) + s12^4*(-72*s13^5 - 
                    135*s13^4*s23 + 107*s13^3*s23^2 + 160*s13^2*s23^3 + 
                    40*s13*s23^4 - 5*s23^5) + s12^3*(-54*s13^6 + 18*s13^5*
                     s23 + 252*s13^4*s23^2 + 1323*s13^3*s23^3 + 2033*s13^2*
                     s23^4 + 360*s13*s23^5 - 470*s23^6) + s12^2*(36*s13^7 - 
                    585*s13^6*s23 - 2011*s13^5*s23^2 - 2027*s13^4*s23^3 - 
                    201*s13^3*s23^4 - 1144*s13^2*s23^5 - 2600*s13*s23^6 - 
                    1030*s23^7) + s23^2*(174*s13^7 + 836*s13^6*s23 + 
                    1496*s13^5*s23^2 + 1411*s13^4*s23^3 + 898*s13^3*s23^4 + 
                    686*s13^2*s23^5 + 480*s13*s23^6 + 115*s23^7) - 
                  s12*s23*(-333*s13^7 - 792*s13^6*s23 - 56*s13^5*s23^2 + 
                    1804*s13^4*s23^3 + 3458*s13^3*s23^4 + 3937*s13^2*s23^5 + 
                    2195*s13*s23^6 + 395*s23^7)) + p2q^2*p3q^2*
                 (s13*s23^2*(s13 + s23)^2*(87*s13^5 - 83*s13^4*s23 - 
                    312*s13^3*s23^2 + 124*s13^2*s23^3 + s13*s23^4 - 
                    25*s23^5) + 2*s12^5*(36*s13^5 + 54*s13^4*s23 - 145*s13^3*
                     s23^2 - 203*s13^2*s23^3 + 75*s13*s23^4 + 115*s23^5) + 
                  s12^4*(-54*s13^6 + 36*s13^5*s23 + 498*s13^4*s23^2 + 
                    517*s13^3*s23^3 + 934*s13^2*s23^4 + 1580*s13*s23^5 + 
                    730*s23^6) + s12^3*(-108*s13^7 + 216*s13^6*s23 + 
                    930*s13^5*s23^2 + 2815*s13^4*s23^3 + 3994*s13^3*s23^4 + 
                    3935*s13^2*s23^5 + 2465*s13*s23^6 + 540*s23^7) + 
                  s12^2*(18*s13^8 - 1044*s13^7*s23 - 3266*s13^6*s23^2 - 
                    3547*s13^5*s23^3 - 174*s13^4*s23^4 + 2487*s13^3*s23^5 + 
                    1663*s13^2*s23^6 - 45*s13*s23^7 - 190*s23^8) - 
                  s12*s23*(-288*s13^8 - 261*s13^7*s23 + 1673*s13^6*s23^2 + 
                    3301*s13^5*s23^3 + 2260*s13^4*s23^4 + 1251*s13^3*s23^5 + 
                    1521*s13^2*s23^6 + 1105*s13*s23^7 + 230*s23^8)) - 
                p2q^3*p3q*(s13*s23*(s13 + s23)^2*(81*s13^6 - 342*s13^5*s23 - 
                    231*s13^4*s23^2 + 880*s13^3*s23^3 + 266*s13^2*s23^4 + 
                    188*s13*s23^5 + 50*s23^6) + s12^4*(90*s13^6 + 117*s13^5*
                     s23 - 187*s13^4*s23^2 - 381*s13^3*s23^3 - 32*s13^2*
                     s23^4 + 235*s13*s23^5 + 115*s23^6) + s12^3*(36*s13^7 + 
                    225*s13^6*s23 + 857*s13^5*s23^2 + 472*s13^4*s23^3 + 
                    134*s13^3*s23^4 + 920*s13^2*s23^5 + 1070*s13*s23^6 + 
                    345*s23^7) + s12*s23*(-693*s13^8 - 1887*s13^7*s23 - 
                    364*s13^6*s23^2 + 3297*s13^5*s23^3 + 3961*s13^4*s23^4 + 
                    2362*s13^3*s23^5 + 1453*s13^2*s23^6 + 700*s13*s23^7 + 
                    115*s23^8) + s12^2*(-54*s13^8 + 414*s13^7*s23 + 
                    1557*s13^6*s23^2 + 3254*s13^5*s23^3 + 3540*s13^4*s23^4 + 
                    2472*s13^3*s23^5 + 2117*s13^2*s23^6 + 1485*s13*s23^7 + 
                    345*s23^8))) + p1q^3*(p3q^3*s12*(45*s12^5*s23^2*
                   (s13^2 + 5*s13*s23 + 4*s23^2) + s12^4*(18*s13^5 + 
                    63*s13^4*s23 + 58*s13^3*s23^2 + 208*s13^2*s23^3 + 
                    245*s13*s23^4 + 60*s23^5) + s12^3*(18*s13^6 + 18*s13^5*
                     s23 - 89*s13^4*s23^2 - 412*s13^3*s23^3 - 1388*s13^2*
                     s23^4 - 1120*s13*s23^5 - 150*s23^6) + s12*s23^2*
                   (-165*s13^6 - 419*s13^5*s23 + 302*s13^4*s23^2 + 1946*s13^3*
                     s23^3 + 2215*s13^2*s23^4 + 755*s13*s23^5 - 30*s23^6) + 
                  s12^2*s23*(90*s13^6 + 555*s13^5*s23 + 450*s13^4*s23^2 - 
                    733*s13^3*s23^3 - 723*s13^2*s23^4 + 120*s13*s23^5 + 
                    90*s23^6) - s23^3*(174*s13^6 + 608*s13^5*s23 + 627*s13^4*
                     s23^2 + 251*s13^3*s23^3 + 413*s13^2*s23^4 + 505*s13*
                     s23^5 + 150*s23^6)) + p2q^3*(s13 + s23)*
                 (s12^3*(18*s13^6 - 63*s13^5*s23 - 104*s13^4*s23^2 + 
                    9*s13^3*s23^3 + 47*s13^2*s23^4 + 20*s13*s23^5 + 
                    35*s23^6) + s23^2*(303*s13^7 + 316*s13^6*s23 - 709*s13^5*
                     s23^2 - 841*s13^4*s23^3 - 291*s13^3*s23^4 - 142*s13^2*
                     s23^5 + 65*s13*s23^6 + 35*s23^7) + s12^2*(18*s13^7 - 
                    36*s13^6*s23 + 163*s13^5*s23^2 - 438*s13^4*s23^3 - 
                    204*s13^3*s23^4 + 181*s13^2*s23^5 + 105*s13*s23^6 + 
                    105*s23^7) + s12*s23*(162*s13^7 + 213*s13^6*s23 - 
                    589*s13^5*s23^2 - 1102*s13^4*s23^3 - 275*s13^3*s23^4 - 
                    8*s13^2*s23^5 + 150*s13*s23^6 + 105*s23^7)) + 
                p2q*p3q^2*(s12^5*(18*s13^5 + 63*s13^4*s23 - 122*s13^3*s23^2 - 
                    557*s13^2*s23^3 - 565*s13*s23^4 - 165*s23^5) + 
                  s23^3*(s13 + s23)^2*(-30*s13^5 + 229*s13^4*s23 + 504*s13^3*
                     s23^2 - 20*s13^2*s23^3 + 10*s13*s23^4 + 35*s23^5) - 
                  s12^4*(18*s13^6 + 36*s13^5*s23 + 79*s13^4*s23^2 + 
                    505*s13^3*s23^3 + 1299*s13^2*s23^4 + 800*s13*s23^5 + 
                    55*s23^6) + s12^3*(-36*s13^7 + 18*s13^6*s23 + 544*s13^5*
                     s23^2 + 1297*s13^4*s23^3 + 1289*s13^3*s23^4 + 1602*s13^2*
                     s23^5 + 980*s13*s23^6 - 40*s23^7) - s12*s23^2*
                   (120*s13^7 + 431*s13^6*s23 + 391*s13^5*s23^2 - 25*s13^4*
                     s23^3 + 646*s13^3*s23^4 + 2051*s13^2*s23^5 + 1655*s13*
                     s23^6 + 355*s23^7) - s12^2*s23*(288*s13^7 + 1041*s13^6*
                     s23 + 1727*s13^5*s23^2 - 10*s13^4*s23^3 - 2862*s13^3*
                     s23^4 - 2058*s13^2*s23^5 + 520*s13*s23^6 + 540*s23^7)) - 
                p2q^2*p3q*(-(s23^2*(s13 + s23)^2*(105*s13^6 - 395*s13^5*s23 - 
                     520*s13^4*s23^2 + 673*s13^3*s23^3 - 57*s13^2*s23^4 + 
                     40*s13*s23^5 + 70*s23^6)) + s12^4*(36*s13^6 + 90*s13^5*
                     s23 - 46*s13^4*s23^2 - 384*s13^3*s23^3 - 314*s13^2*
                     s23^4 + 85*s13*s23^5 + 130*s23^6) + s12^3*(18*s13^7 + 
                    225*s13^6*s23 + 538*s13^5*s23^2 - 239*s13^4*s23^3 - 
                    836*s13^3*s23^4 - 16*s13^2*s23^5 + 885*s13*s23^6 + 
                    500*s23^7) + s12*s23*(-126*s13^8 + 69*s13^7*s23 + 
                    1173*s13^6*s23^2 + 988*s13^5*s23^3 - 1273*s13^4*s23^4 - 
                    1104*s13^3*s23^5 + 974*s13^2*s23^6 + 895*s13*s23^7 + 
                    100*s23^8) + s12^2*(-18*s13^8 + 414*s13^7*s23 + 
                    1136*s13^6*s23^2 + 1943*s13^5*s23^3 + 844*s13^4*s23^4 - 
                    605*s13^3*s23^5 + 1005*s13^2*s23^6 + 1875*s13*s23^7 + 
                    540*s23^8)))))/(18*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
             s13^3*s23^2*(s13 + s23)^2*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (90*p1q^6*s12*s23^4*(s13 + s23)*
              (s12^2*s23*(4*s13 + 3*s23) + (s13 + s23)^2*(s13^2 + 5*s13*s23 + 
                 3*s23^2) + s12*(s13^3 + 10*s13^2*s23 + 15*s13*s23^2 + 
                 6*s23^3)) - 18*(-(p3q*s12) + p2q*s13)*s23*(s12 + s13 + s23)*
              (-5*p3q^5*s12^3*s23*(s13^3 + 6*s13^2*s23 + 3*s23^2*
                  (s12 + s23) + 4*s13*s23*(s12 + 2*s23)) + p2q^5*s13^2*
                (s13 + s23)*(5*s12^2*s23*(4*s13 + 3*s23) + (s13 + s23)^2*
                  (29*s13^2 - 12*s13*s23 + 5*s23^2) + s12*(-35*s13^3 - 
                   27*s13^2*s23 + 28*s13*s23^2 + 20*s23^3)) + p2q^4*p3q*s13*
                (-5*s12^3*s23*(12*s13^2 + 17*s13*s23 + 6*s23^2) + 
                 s13*(s13 + s23)^3*(47*s13^2 - 17*s13*s23 + 10*s23^2) - 
                 s12*(s13 + s23)^2*(122*s13^3 - 19*s13^2*s23 - 17*s13*s23^2 + 
                   20*s23^3) + s12^2*(52*s13^4 + 71*s13^3*s23 - 69*s13^2*
                    s23^2 - 138*s13*s23^3 - 50*s23^4)) - p2q*p3q^4*s12^2*
                (5*s12^3*s23*(4*s13 + 3*s23) + 5*s12^2*s23*(4*s13^2 + 
                   15*s13*s23 + 9*s23^2) + s12*(11*s13^4 - 21*s13^2*s23^2 + 
                   10*s13*s23^3 + 15*s23^4) - s23*(3*s13^4 + 56*s13^3*s23 + 
                   113*s13^2*s23^2 + 75*s13*s23^3 + 15*s23^4)) + p2q^3*p3q^2*
                (-(s13^2*(23*s13 - 5*s23)*s23*(s13 + s23)^3) + 5*s12^4*s23*
                  (12*s13^2 + 13*s13*s23 + 3*s23^2) - s12*s13*(s13 + s23)^2*
                  (123*s13^3 + 31*s13*s23^2 + 40*s23^3) + s12^3*(-17*s13^4 - 
                   29*s13^3*s23 + 73*s13^2*s23^2 + 105*s13*s23^3 + 
                   30*s23^4) + s12^2*(121*s13^5 + 134*s13^4*s23 - 123*s13^3*
                    s23^2 - 161*s13^2*s23^3 - 10*s13*s23^4 + 15*s23^5)) + 
               p2q^2*p3q^3*s12*(-5*s12^4*s23*(4*s13 + 3*s23) + s13*s23*
                  (s13 + s23)^2*(25*s13^2 - 28*s13*s23 - 20*s23^2) + 
                 5*s12^3*s23*(8*s13^2 + 2*s13*s23 - 3*s23^2) + 
                 s12^2*(-28*s13^4 + 36*s13^3*s23 + 209*s13^2*s23^2 + 
                   165*s13*s23^3 + 30*s23^4) + s12*(87*s13^5 + 122*s13^4*
                    s23 + 55*s13^3*s23^2 + 105*s13^2*s23^3 + 115*s13*s23^4 + 
                   30*s23^5))) - p1q^5*s23^2*(p2q*(s13 + s23)*
                (2*s12^3*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 - 
                   75*s13*s23^3 - 155*s23^4) + s12^2*(54*s13^5 + 810*s13^4*
                    s23 + 2821*s13^3*s23^2 + 1405*s13^2*s23^3 - 800*s13*
                    s23^4 - 390*s23^5) + 2*s12*s23*(288*s13^5 + 1623*s13^4*
                    s23 + 2152*s13^3*s23^2 + 667*s13^2*s23^3 - 35*s13*s23^4 + 
                   75*s23^5) + s23^2*(321*s13^5 + 1125*s13^4*s23 + 
                   1327*s13^3*s23^2 + 873*s13^2*s23^3 + 580*s13*s23^4 + 
                   230*s23^5)) + p3q*(90*s12^4*s23^2*(12*s13^2 + 25*s13*s23 + 
                   12*s23^2) + s23^2*(s13 + s23)^2*(447*s13^4 + 966*s13^3*
                    s23 + 469*s13^2*s23^2 + 260*s13*s23^3 + 230*s23^4) + 
                 2*s12^3*(27*s13^5 + 171*s13^4*s23 + 1291*s13^3*s23^2 + 
                   3187*s13^2*s23^3 + 2965*s13*s23^4 + 925*s23^5) + 
                 2*s12*s23*(297*s13^6 + 1362*s13^5*s23 + 1579*s13^4*s23^2 - 
                   385*s13^3*s23^3 - 1429*s13^2*s23^4 - 455*s13*s23^5 + 
                   75*s23^6) + s12^2*(54*s13^6 + 1062*s13^5*s23 + 3559*s13^4*
                    s23^2 + 4568*s13^3*s23^3 + 3377*s13^2*s23^4 + 2050*s13*
                    s23^5 + 690*s23^6))) + p1q^4*s23*(p2q^2*(s13 + s23)*
                (s12^3*(108*s13^5 + 414*s13^4*s23 - 191*s13^3*s23^2 - 
                   847*s13^2*s23^3 - 590*s13*s23^4 - 190*s23^5) + 
                 s12*s23*(1026*s13^6 + 4611*s13^5*s23 + 1801*s13^4*s23^2 - 
                   5607*s13^3*s23^3 - 4293*s13^2*s23^4 - 1900*s13*s23^5 - 
                   1110*s23^6) + s12^2*(108*s13^6 + 1692*s13^5*s23 + 
                   3401*s13^4*s23^2 - 2814*s13^3*s23^3 - 4491*s13^2*s23^4 - 
                   1700*s13*s23^5 - 840*s23^6) - s23^2*(-183*s13^6 - 
                   438*s13^5*s23 + 442*s13^4*s23^2 + 1016*s13^3*s23^3 + 
                   649*s13^2*s23^4 + 790*s13*s23^5 + 460*s23^6)) + p3q^2*
                (270*s12^5*s23^2*(4*s13^2 + 11*s13*s23 + 6*s23^2) - 
                 s23^3*(s13 + s23)^2*(447*s13^4 + 966*s13^3*s23 + 469*s13^2*
                    s23^2 + 260*s13*s23^3 + 230*s23^4) + 2*s12*s23^2*
                  (s13 + s23)^2*(150*s13^4 + 408*s13^3*s23 + 969*s13^2*
                    s23^2 + 880*s13*s23^3 + 270*s23^4) + 2*s12^4*(54*s13^5 + 
                   234*s13^4*s23 + 1151*s13^3*s23^2 + 3021*s13^2*s23^3 + 
                   3065*s13*s23^4 + 1020*s23^5) + 2*s12^3*(54*s13^6 + 
                   927*s13^5*s23 + 2812*s13^4*s23^2 + 2064*s13^3*s23^3 - 
                   1020*s13^2*s23^4 - 910*s13*s23^5 + 110*s23^6) + 
                 s12^2*s23*(1134*s13^6 + 5160*s13^5*s23 + 6363*s13^4*s23^2 - 
                   778*s13^3*s23^3 - 5185*s13^2*s23^4 - 1420*s13*s23^5 + 
                   570*s23^6)) + p2q*p3q*(2*s12^4*(54*s13^5 + 189*s13^4*s23 - 
                   154*s13^3*s23^2 - 984*s13^2*s23^3 - 1210*s13*s23^4 - 
                   465*s23^5) - s23^2*(s13 + s23)^2*(-957*s13^5 - 960*s13^4*
                    s23 + 1591*s13^3*s23^2 + 1004*s13^2*s23^3 + 500*s13*
                    s23^4 + 690*s23^5) + s12^3*(216*s13^6 + 1386*s13^5*s23 + 
                   2625*s13^4*s23^2 - 348*s13^3*s23^3 - 5943*s13^2*s23^4 - 
                   4670*s13*s23^5 - 780*s23^6) + s12*s23*(1008*s13^7 + 
                   4245*s13^6*s23 + 1510*s13^5*s23^2 - 7748*s13^4*s23^3 - 
                   5356*s13^3*s23^4 + 2775*s13^2*s23^5 + 1810*s13*s23^6 - 
                   300*s23^7) + s12^2*(108*s13^7 + 2016*s13^6*s23 + 
                   5303*s13^5*s23^2 + 1604*s13^4*s23^3 - 3817*s13^3*s23^4 - 
                   1206*s13^2*s23^5 + 1440*s13*s23^6 + 540*s23^7))) + 
             p1q*(2*p3q^5*s12^3*(45*s12^4*s23^2*(4*s13 + 3*s23) + 
                 s12^3*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 + 
                   285*s13*s23^3 + 115*s23^4) + s12^2*(27*s13^5 + 414*s13^4*
                    s23 + 587*s13^3*s23^2 - 355*s13^2*s23^3 + 5*s13*s23^4 + 
                   345*s23^5) + s23^2*(255*s13^5 + 1116*s13^4*s23 + 
                   2252*s13^3*s23^2 + 2736*s13^2*s23^3 + 1865*s13*s23^4 + 
                   520*s23^5) + s12*s23*(297*s13^5 + 1083*s13^4*s23 + 
                   1045*s13^3*s23^2 + 1099*s13^2*s23^3 + 1765*s13*s23^4 + 
                   885*s23^5)) - p2q^5*s13^2*(s13 + s23)*
                (2*s12^3*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 - 
                   75*s13*s23^3 - 155*s23^4) + s12^2*(54*s13^5 + 18*s13^4*
                    s23 + 3505*s13^3*s23^2 + 3673*s13^2*s23^3 - 188*s13*
                    s23^4 - 570*s23^5) + s12*s23*(909*s13^5 + 4497*s13^4*
                    s23 + 7211*s13^3*s23^2 + 4367*s13^2*s23^3 + 614*s13*
                    s23^4 - 210*s23^5) + s23*(1125*s13^6 + 2805*s13^5*s23 + 
                   2439*s13^4*s23^2 + 1435*s13^3*s23^3 + 1278*s13^2*s23^4 + 
                   652*s13*s23^5 + 50*s23^6)) + p2q*p3q^4*s12^2*
                (4*s12^4*(27*s13^4 + 54*s13^3*s23 - 338*s13^2*s23^2 - 
                   120*s13*s23^3 + 115*s23^4) + s12^3*(-54*s13^5 + 
                   882*s13^4*s23 + 1568*s13^3*s23^2 + 1182*s13^2*s23^3 + 
                   4700*s13*s23^4 + 3310*s23^5) - s23^2*(1269*s13^6 + 
                   5082*s13^5*s23 + 8328*s13^4*s23^2 + 9076*s13^3*s23^3 + 
                   7761*s13^2*s23^4 + 3970*s13*s23^5 + 770*s23^6) + 
                 s12*s23*(-1503*s13^6 - 5235*s13^5*s23 - 3027*s13^4*s23^2 + 
                   5319*s13^3*s23^3 + 6724*s13^2*s23^4 + 3120*s13*s23^5 + 
                   850*s23^6) + 3*s12^2*(-54*s13^6 - 489*s13^5*s23 + 
                   261*s13^4*s23^2 + 3029*s13^3*s23^3 + 4773*s13^2*s23^4 + 
                   4090*s13*s23^5 + 1490*s23^6)) + p2q^4*p3q*s13*
                (-(s13*s23*(s13 + s23)^2*(927*s13^5 + 1299*s13^4*s23 + 
                    357*s13^3*s23^2 - 79*s13^2*s23^3 + 196*s13*s23^4 + 
                    100*s23^5)) + 2*s12^4*(81*s13^5 + 216*s13^4*s23 + 
                   714*s13^3*s23^2 + 1079*s13^2*s23^3 + 780*s13*s23^4 + 
                   230*s23^5) + 2*s12^3*(27*s13^6 + 72*s13^5*s23 + 
                   2671*s13^4*s23^2 + 5975*s13^3*s23^3 + 5498*s13^2*s23^4 + 
                   2534*s13*s23^5 + 510*s23^6) + s12*s23*(2286*s13^7 + 
                   6747*s13^6*s23 + 11066*s13^5*s23^2 + 15772*s13^4*s23^3 + 
                   14652*s13^3*s23^4 + 6413*s13^2*s23^5 + 1028*s13*s23^6 + 
                   100*s23^7) + s12^2*(-108*s13^7 + 2295*s13^6*s23 + 
                   8488*s13^5*s23^2 + 18944*s13^4*s23^3 + 24810*s13^3*s23^4 + 
                   16007*s13^2*s23^5 + 4636*s13*s23^6 + 660*s23^7)) + p2q^2*
                p3q^3*s12*(2*s12^5*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*
                    s23^2 + 825*s13*s23^3 + 520*s23^4) + s12^4*(-270*s13^5 - 
                   432*s13^4*s23 + 3772*s13^3*s23^2 + 6924*s13^2*s23^3 + 
                   6490*s13*s23^4 + 2660*s23^5) + 4*s13*s23^2*(171*s13^6 + 
                   678*s13^5*s23 + 786*s13^4*s23^2 + 173*s13^3*s23^3 - 
                   150*s13^2*s23^4 - 19*s13*s23^5 + 25*s23^6) + 
                 s12^3*(-162*s13^6 - 1611*s13^5*s23 - 2280*s13^4*s23^2 + 
                   1867*s13^3*s23^3 + 2238*s13^2*s23^4 + 910*s13*s23^5 + 
                   660*s23^6) + s12^2*(162*s13^7 + 486*s13^6*s23 - 
                   7677*s13^5*s23^2 - 23620*s13^4*s23^3 - 27403*s13^3*s23^4 - 
                   21884*s13^2*s23^5 - 12030*s13*s23^6 - 2500*s23^7) - 
                 s12*s23*(-297*s13^7 + 1521*s13^6*s23 + 12621*s13^5*s23^2 + 
                   25619*s13^4*s23^3 + 25954*s13^3*s23^4 + 17678*s13^2*
                    s23^5 + 8000*s13*s23^6 + 1540*s23^7)) - p2q^3*p3q^2*
                (-(s13^2*s23^2*(s13 + s23)^2*(75*s13^4 + 60*s13^3*s23 + 
                    197*s13^2*s23^2 + 82*s13*s23^3 - 50*s23^4)) + 
                 2*s12^5*(81*s13^5 + 189*s13^4*s23 + 660*s13^3*s23^2 + 
                   1777*s13^2*s23^3 + 1530*s13*s23^4 + 385*s23^5) + 
                 s12^4*(-162*s13^6 - 144*s13^5*s23 + 5895*s13^4*s23^2 + 
                   15302*s13^3*s23^3 + 17845*s13^2*s23^4 + 10430*s13*s23^5 + 
                   2310*s23^6) - s12*s13*s23*(1539*s13^7 + 6447*s13^6*s23 + 
                   15136*s13^5*s23^2 + 21224*s13^4*s23^3 + 15555*s13^3*
                    s23^4 + 5101*s13^2*s23^5 + 742*s13*s23^6 + 200*s23^7) + 
                 s12^3*(-270*s13^7 + 765*s13^6*s23 + 6662*s13^5*s23^2 + 
                   20287*s13^4*s23^3 + 27024*s13^3*s23^4 + 21654*s13^2*
                    s23^5 + 10940*s13*s23^6 + 2310*s23^7) + s12^2*(54*s13^8 + 
                   1008*s13^7*s23 + 985*s13^6*s23^2 - 1429*s13^5*s23^3 - 
                   60*s13^4*s23^4 + 4671*s13^3*s23^5 + 6031*s13^2*s23^6 + 
                   3370*s13*s23^7 + 770*s23^8))) + p1q^2*(p3q^4*s12^2*
                (90*s12^5*s23^2*(4*s13 + 3*s23) + 2*s12^4*(27*s13^4 + 
                   54*s13^3*s23 + 22*s13^2*s23^2 - 390*s13*s23^3 - 
                   290*s23^4) - 2*s12^3*s23*(-279*s13^4 - 223*s13^3*s23 + 
                   1426*s13^2*s23^2 + 1640*s13*s23^3 + 405*s23^4) - 
                 s12^2*(54*s13^6 + 396*s13^5*s23 + 1609*s13^4*s23^2 + 
                   1586*s13^3*s23^3 - 1951*s13^2*s23^4 - 1460*s13*s23^5 + 
                   300*s23^6) - 2*s12*s23*(297*s13^6 + 1746*s13^5*s23 + 
                   3079*s13^4*s23^2 + 893*s13^3*s23^3 - 932*s13^2*s23^4 + 
                   805*s13*s23^5 + 920*s23^6) - s23^2*(447*s13^6 + 
                   2880*s13^5*s23 + 7042*s13^4*s23^2 + 9282*s13^3*s23^3 + 
                   8383*s13^2*s23^4 + 5210*s13*s23^5 + 1500*s23^6)) - p2q^4*
                s13*(s13 + s23)*(s12^3*(108*s13^5 - 216*s13^4*s23 - 
                   1451*s13^3*s23^2 - 1477*s13^2*s23^3 - 590*s13*s23^4 - 
                   190*s23^5) + s12*s23*(1413*s13^6 + 5241*s13^5*s23 + 
                   1639*s13^4*s23^2 - 7335*s13^3*s23^3 - 6498*s13^2*s23^4 - 
                   2602*s13*s23^5 - 930*s23^6) + s12^2*(108*s13^6 + 
                   846*s13^5*s23 + 2429*s13^4*s23^2 - 4506*s13^3*s23^3 - 
                   6633*s13^2*s23^4 - 2186*s13*s23^5 - 750*s23^6) - 
                 s23*(-603*s13^7 - 714*s13^6*s23 + 912*s13^5*s23^2 + 
                   2134*s13^4*s23^3 + 1637*s13^3*s23^4 + 1162*s13^2*s23^5 + 
                   1006*s13*s23^6 + 370*s23^7)) + p2q*p3q^3*s12*
                (2*s12^5*(27*s13^4 + 54*s13^3*s23 - 698*s13^2*s23^2 - 
                   750*s13*s23^3 - 155*s23^4) - 2*s12^4*(108*s13^5 + 
                   144*s13^4*s23 - 234*s13^3*s23^2 - 280*s13^2*s23^3 + 
                   45*s13*s23^4 + 55*s23^5) - s12^3*(162*s13^6 + 3078*s13^5*
                    s23 + 6541*s13^4*s23^2 + 360*s13^3*s23^3 - 5485*s13^2*
                    s23^4 + 1540*s13*s23^5 + 3140*s23^6) + s12^2*(108*s13^7 - 
                   567*s13^6*s23 - 8098*s13^5*s23^2 - 18447*s13^4*s23^3 - 
                   16802*s13^3*s23^4 - 16838*s13^2*s23^5 - 17180*s13*s23^6 - 
                   6460*s23^7) + 2*s23^2*(285*s13^7 + 1221*s13^6*s23 + 
                   1864*s13^5*s23^2 + 1588*s13^4*s23^3 + 1448*s13^3*s23^4 + 
                   1638*s13^2*s23^5 + 1215*s13*s23^6 + 365*s23^7) - 
                 s12*s23*(-1107*s13^7 - 2952*s13^6*s23 + 1961*s13^5*s23^2 + 
                   14391*s13^4*s23^3 + 23506*s13^3*s23^4 + 22491*s13^2*
                    s23^5 + 11800*s13*s23^6 + 2390*s23^7)) + p2q^2*p3q^2*
                (-(s13*s23^2*(s13 + s23)^2*(123*s13^5 - 684*s13^4*s23 - 
                    2273*s13^3*s23^2 - 1236*s13^2*s23^3 - 380*s13*s23^4 - 
                    370*s23^5)) - 4*s12^5*(54*s13^5 + 162*s13^4*s23 - 
                   388*s13^3*s23^2 - 421*s13^2*s23^3 + 440*s13*s23^4 + 
                   365*s23^5) + s12^4*(162*s13^6 - 1674*s13^5*s23 - 
                   6431*s13^4*s23^2 - 6872*s13^3*s23^3 - 8887*s13^2*s23^4 - 
                   11020*s13*s23^5 - 4540*s23^6) + s12^3*(324*s13^7 + 
                   2097*s13^6*s23 - 5377*s13^5*s23^2 - 25646*s13^4*s23^3 - 
                   29133*s13^3*s23^4 - 22237*s13^2*s23^5 - 13590*s13*s23^6 - 
                   3240*s23^7) + s12^2*(-54*s13^8 + 1179*s13^7*s23 + 
                   6728*s13^6*s23^2 + 7832*s13^5*s23^3 - 4539*s13^4*s23^4 - 
                   12711*s13^3*s23^5 - 6705*s13^2*s23^6 + 830*s13*s23^7 + 
                   1300*s23^8) + s12*s23*(-432*s13^8 + 2124*s13^7*s23 + 
                   16987*s13^6*s23^2 + 30358*s13^5*s23^3 + 19972*s13^4*
                    s23^4 + 6056*s13^3*s23^5 + 6081*s13^2*s23^6 + 5530*s13*
                    s23^7 + 1460*s23^8)) + p2q^3*p3q*(-(s13*s23*(s13 + s23)^2*
                   (81*s13^6 + 126*s13^5*s23 - 951*s13^4*s23^2 - 3636*s13^3*
                     s23^3 - 2356*s13^2*s23^4 - 1016*s13*s23^5 - 
                    740*s23^6)) + s12^4*(270*s13^6 + 432*s13^5*s23 - 
                   1319*s13^4*s23^2 - 1654*s13^3*s23^3 + 827*s13^2*s23^4 + 
                   1880*s13*s23^5 + 730*s23^6) + s12^3*(108*s13^7 + 
                   2808*s13^6*s23 + 7898*s13^5*s23^2 + 4727*s13^4*s23^3 + 
                   2980*s13^3*s23^4 + 7361*s13^2*s23^5 + 6850*s13*s23^6 + 
                   2190*s23^7) + s12*s23*(387*s13^8 + 4512*s13^7*s23 + 
                   27483*s13^6*s23^2 + 56698*s13^5*s23^3 + 47477*s13^4*
                    s23^4 + 17444*s13^3*s23^5 + 6607*s13^2*s23^6 + 
                   4030*s13*s23^7 + 730*s23^8) + s12^2*(-162*s13^8 + 
                   1836*s13^7*s23 + 14886*s13^6*s23^2 + 39068*s13^5*s23^3 + 
                   41147*s13^4*s23^4 + 20322*s13^3*s23^5 + 11185*s13^2*
                    s23^6 + 8260*s13*s23^7 + 2190*s23^8))) + 
             p1q^3*(-(p3q^3*s12*(90*s12^5*s23^2*(4*s13^2 + 19*s13*s23 + 
                    12*s23^2) + 2*s12^4*(27*s13^5 + 135*s13^4*s23 + 
                    409*s13^3*s23^2 + 981*s13^2*s23^3 + 835*s13*s23^4 + 
                    210*s23^5) + s12^3*(54*s13^6 + 882*s13^5*s23 + 3397*s13^4*
                     s23^2 + 2004*s13^3*s23^3 - 5615*s13^2*s23^4 - 5320*s13*
                     s23^5 - 780*s23^6) + s12*s23^2*(-741*s13^6 - 3342*s13^5*
                     s23 - 2970*s13^4*s23^2 + 4502*s13^3*s23^3 + 7941*s13^2*
                     s23^4 + 2690*s13*s23^5 - 300*s23^6) + 6*s12^2*s23*
                   (81*s13^6 + 349*s13^5*s23 + 404*s13^4*s23^2 - 70*s13^3*
                     s23^3 - 181*s13^2*s23^4 + 100*s13*s23^5 + 90*s23^6) - 
                  2*s23^3*(447*s13^6 + 2115*s13^5*s23 + 3874*s13^4*s23^2 + 
                    3786*s13^3*s23^3 + 2695*s13^2*s23^4 + 1595*s13*s23^5 + 
                    480*s23^6))) + p2q^3*(s13 + s23)*(s12^3*(-54*s13^6 + 
                   432*s13^5*s23 + 1963*s13^4*s23^2 + 974*s13^3*s23^3 - 
                   163*s13^2*s23^4 - 190*s13*s23^5 - 230*s23^6) + 
                 s12*s23*(-396*s13^7 + 570*s13^6*s23 + 10561*s13^5*s23^2 + 
                   16011*s13^4*s23^3 + 5989*s13^3*s23^4 + 693*s13^2*s23^5 - 
                   50*s13*s23^6 - 690*s23^7) + s23^2*(741*s13^7 + 2526*s13^6*
                    s23 + 4184*s13^5*s23^2 + 3544*s13^4*s23^3 + 2035*s13^3*
                    s23^4 + 1280*s13^2*s23^5 + 160*s13*s23^6 - 230*s23^7) - 
                 2*s12^2*(27*s13^7 + 45*s13^6*s23 - 1474*s13^5*s23^2 - 
                   5628*s13^4*s23^3 - 2956*s13^3*s23^4 + 285*s13^2*s23^5 + 
                   200*s13*s23^6 + 345*s23^7)) + p2q*p3q^2*
                (s23^3*(s13 + s23)^2*(714*s13^5 + 1215*s13^4*s23 - 
                   118*s13^3*s23^2 - 39*s13^2*s23^3 + 110*s13*s23^4 - 
                   230*s23^5) + s12^5*(-54*s13^5 - 270*s13^4*s23 + 
                   712*s13^3*s23^2 + 3618*s13^2*s23^3 + 3460*s13*s23^4 + 
                   930*s23^5) + s12^4*(54*s13^6 - 252*s13^5*s23 - 834*s13^4*
                    s23^2 + 2192*s13^3*s23^3 + 7180*s13^2*s23^4 + 4410*s13*
                    s23^5 + 310*s23^6) + s12^3*(108*s13^7 + 1368*s13^6*s23 + 
                   3197*s13^5*s23^2 + 3343*s13^4*s23^3 + 1189*s13^3*s23^4 - 
                   4117*s13^2*s23^5 - 2540*s13*s23^6 + 520*s23^7) + 
                 s12*s23^2*(1092*s13^7 + 6267*s13^6*s23 + 11550*s13^5*s23^2 + 
                   11436*s13^4*s23^3 + 12410*s13^3*s23^4 + 14239*s13^2*
                    s23^5 + 9120*s13*s23^6 + 2230*s23^7) + s12^2*s23*
                  (972*s13^7 + 6009*s13^6*s23 + 14619*s13^5*s23^2 + 
                   15078*s13^4*s23^3 + 4645*s13^3*s23^4 + 1209*s13^2*s23^5 + 
                   5980*s13*s23^6 + 3600*s23^7)) + p2q^2*p3q*
                (-(s23^2*(s13 + s23)^2*(429*s13^6 - 1203*s13^5*s23 - 
                    4262*s13^4*s23^2 - 1531*s13^3*s23^3 - 581*s13^2*s23^4 - 
                    500*s13*s23^5 + 460*s23^6)) + s12^4*(108*s13^6 + 
                   108*s13^5*s23 - 929*s13^4*s23^2 - 1960*s13^3*s23^3 - 
                   811*s13^2*s23^4 + 1250*s13*s23^5 + 880*s23^6) + 
                 2*s12^3*(27*s13^7 + 657*s13^6*s23 + 1521*s13^5*s23^2 + 
                   302*s13^4*s23^3 + 268*s13^3*s23^4 + 2397*s13^2*s23^5 + 
                   3545*s13*s23^6 + 1630*s23^7) + s12^2*(-54*s13^8 + 
                   558*s13^7*s23 + 8936*s13^6*s23^2 + 26111*s13^5*s23^3 + 
                   24686*s13^4*s23^4 + 9899*s13^3*s23^5 + 10430*s13^2*s23^6 + 
                   11090*s13*s23^7 + 3420*s23^8) + s12*(-270*s13^8*s23 + 
                   3228*s13^7*s23^2 + 23776*s13^6*s23^3 + 42730*s13^5*s23^4 + 
                   25940*s13^4*s23^5 + 5184*s13^3*s23^6 + 5946*s13^2*s23^7 + 
                   4830*s13*s23^8 + 580*s23^9))))/(36*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13^3*s23^2*(s13 + s23)^2*
             (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*
          p1 . E0conj + ((ep^2*(s12^3*(9*s13^2 - 10*s23^2) + 
              s13^2*s23*(9*s13^2 + 90*s13*s23 + 41*s23^2) + s12^2*(18*s13^3 + 
                9*s13^2*s23 - 16*s13*s23^2 - 10*s23^3) + s12*s13*(9*s13^3 + 
                18*s13^2*s23 + 48*s13*s23^2 + 4*s23^3)))/(18*s12*s13^2*s23^2*
             (s13 + s23)) - ((s12 + s13 + s23)*(9*p1q^6*s23^2*(11*s13^3*
                 (s13 + s23) + 40*s12^2*s23*(s13 + s23) + s12*(45*s13^3 + 
                  114*s13^2*s23 + 100*s13*s23^2 + 40*s23^3)) - 
              9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q^3*s12*(40*s12^3 + 
                  40*s12^2*(s13 + s23) + s13^2*(29*s13 + s23) - 2*s12*s13*
                   (7*s13 + 10*s23)) + p2q^3*s13*(40*s12^2*(s13 + s23) + 
                  s13*(24*s13^2 + 23*s13*s23 - s23^2) + s12*(-41*s13^2 + 
                    6*s13*s23 + 20*s23^2)) + p2q*p3q^2*(40*s12^4 - 
                  40*s12^3*s13 - 40*s12^2*(s13^2 + 3*s13*s23 + s23^2) - 
                  s13^2*(20*s13^2 + 21*s13*s23 + s23^2) + s12*s13*
                   (-35*s13^2 + 32*s13*s23 + 20*s23^2)) + p2q^2*p3q*
                 (-40*s12^3*(2*s13 + s23) + 2*s12^2*(7*s13^2 - 30*s13*s23 - 
                    20*s23^2) + 2*s13^2*(20*s13^2 + 21*s13*s23 + s23^2) + 
                  s12*s13*(-69*s13^2 + 41*s13*s23 + 40*s23^2))) + 
              p1q*(p3q^5*s12^2*(40*s12^3*(9*s13 + 35*s23) + s12*s13*
                   (-27*s13^2 + 73*s13*s23 - 860*s23^2) + 9*s13^2*(20*s13^2 + 
                    87*s13*s23 + 3*s23^2) + 2*s12^2*(423*s13^2 + 790*s13*
                     s23 + 700*s23^2)) - p2q^5*s13^2*(40*s12^2*(9*s13^2 - 
                    s13*s23 - 10*s23^2) + s13*(477*s13^3 + 910*s13^2*s23 + 
                    203*s13*s23^2 - 302*s23^3) + s12*(522*s13^3 + 1769*s13^2*
                     s23 + 532*s13*s23^2 - 40*s23^3)) + p2q^4*p3q*s13*
                 (40*s12^3*(27*s13^2 + 33*s13*s23 + 16*s23^2) - 
                  s13^2*(774*s13^3 + 1271*s13^2*s23 + 55*s13*s23^2 - 
                    658*s23^3) + s12*s13*(531*s13^3 + 83*s13^2*s23 + 
                    462*s13*s23^2 - 218*s23^3) + 2*s12^2*(585*s13^3 + 
                    718*s13^2*s23 + 534*s13*s23^2 + 140*s23^3)) + 
                p2q*p3q^4*s12*(80*s12^4*(9*s13 + 35*s23) + 4*s12^3*
                   (153*s13^2 + 100*s13*s23 + 440*s23^2) - 18*s13^2*
                   (20*s13^3 + 20*s13^2*s23 + 21*s13*s23^2 + s23^3) + 
                  s12*s13*(-387*s13^3 - 1866*s13^2*s23 + 923*s13*s23^2 + 
                    680*s23^3) - s12^2*(1944*s13^3 + 1993*s13^2*s23 + 
                    4800*s13*s23^2 + 1040*s23^3)) - p2q^3*p3q^2*
                 (40*s12^4*(27*s13^2 + 69*s13*s23 + 26*s23^2) - s12*s13^2*
                   (1296*s13^3 + 3817*s13^2*s23 + 2178*s13*s23^2 - 
                    502*s23^3) + s13^3*(441*s13^3 + 1108*s13^2*s23 + 
                    545*s13*s23^2 - 338*s23^3) + s12^3*(54*s13^3 - 501*s13^2*
                     s23 + 1800*s13*s23^2 + 1040*s23^3) - s12^2*s13*
                   (1701*s13^3 - 680*s13^2*s23 + 1913*s13*s23^2 + 
                    1240*s23^3)) + p2q^2*p3q^3*(40*s12^5*(9*s13 + 35*s23) - 
                  2*s12^4*(657*s13^2 + 1970*s13*s23 + 340*s23^2) + 
                  s12*s13^2*(855*s13^3 + 2901*s13^2*s23 + 1130*s13*s23^2 - 
                    262*s23^3) + 9*s13^3*(20*s13^3 - 11*s13^2*s23 - 
                    41*s13*s23^2 - 2*s23^3) + s12^2*s13*(576*s13^3 - 
                    4077*s13^2*s23 + 2141*s13*s23^2 + 1640*s23^3) - 
                  s12^3*(2727*s13^3 + 2885*s13^2*s23 + 6380*s13*s23^2 + 
                    2080*s23^3))) - p1q^5*s23*(p2q*(-40*s12^2*s23*(-9*s13^2 + 
                    s13*s23 + 10*s23^2) + s12*(810*s13^4 + 2160*s13^3*s23 + 
                    329*s13^2*s23^2 - 800*s13*s23^3 - 400*s23^4) + 
                  s13*(198*s13^4 - 135*s13^3*s23 + 226*s13^2*s23^2 + 
                    311*s13*s23^3 - 320*s23^4)) + p3q*(360*s12^3*s23*
                   (3*s13 + 4*s23) + s13*s23*(162*s13^3 + 721*s13^2*s23 + 
                    311*s13*s23^2 - 320*s23^3) + 2*s12^2*(405*s13^3 + 
                    1449*s13^2*s23 + 1510*s13*s23^2 + 700*s23^3) + 
                  s12*(198*s13^4 + 315*s13^3*s23 - 697*s13^2*s23^2 - 
                    620*s13*s23^3 - 40*s23^4))) + p1q^2*(p3q^4*s12*
                 (360*s12^5 + 40*s12^4*(9*s13 + 8*s23) - 9*s13^2*s23*
                   (40*s13^2 + 87*s13*s23 + 3*s23^2) - 2*s12^3*(63*s13^2 + 
                    810*s13*s23 + 1040*s23^2) - s12*s13*(261*s13^3 + 
                    541*s13^2*s23 + 826*s13*s23^2 - 1500*s23^3) - 
                  s12^2*(306*s13^3 + 1687*s13^2*s23 + 2860*s13*s23^2 + 
                    2040*s23^3)) - p2q*p3q^3*(80*s12^5*(18*s13 + 5*s23) + 
                  s12^4*(954*s13^2 + 3980*s13*s23 + 4440*s23^2) + 9*s13^2*s23*
                   (40*s13^3 + 38*s13^2*s23 - 19*s13*s23^2 - s23^3) + 
                  s12^3*(1296*s13^3 + 1499*s13^2*s23 + 3340*s13*s23^2 + 
                    3040*s23^3) + s12^2*(-72*s13^4 + 3379*s13^3*s23 + 
                    547*s13^2*s23^2 - 4780*s13*s23^3 - 1000*s23^4) - 
                  s12*s13*(522*s13^4 + 2558*s13^3*s23 + 1720*s13^2*s23^2 + 
                    685*s13*s23^3 - 820*s23^4)) + p2q^4*s13*
                 (2*s12^2*(342*s13^3 + 715*s13^2*s23 + 360*s13*s23^2 + 
                    140*s23^3) + s13*(117*s13^4 - 218*s13^3*s23 + 1387*s13^2*
                     s23^2 + 1379*s13*s23^3 - 631*s23^4) + s12*(-1098*s13^4 + 
                    944*s13^3*s23 + 2861*s13^2*s23^2 + 946*s13*s23^3 + 
                    460*s23^4)) + p2q^3*p3q*(-2*s12^3*(882*s13^3 + 271*s13^2*
                     s23 - 640*s13*s23^2 - 500*s23^3) + s13^2*(-216*s13^4 - 
                    723*s13^3*s23 + 1735*s13^2*s23^2 + 1673*s13*s23^3 - 
                    1289*s23^4) + s12*s13*(-1458*s13^4 + 4895*s13^3*s23 + 
                    6620*s13^2*s23^2 + 1879*s13*s23^3 + 100*s23^4) + 
                  2*s12^2*(1143*s13^4 - 463*s13^3*s23 + 295*s13^2*s23^2 + 
                    970*s13*s23^3 + 500*s23^4)) + p2q^2*p3q^2*
                 (80*s12^4*(27*s13^2 + 2*s13*s23 - 25*s23^2) + 2*s12^3*s13*
                   (-297*s13^2 + 1137*s13*s23 + 760*s23^2) + s12*s13*
                   (450*s13^4 + 7085*s13^3*s23 + 6586*s13^2*s23^2 + 
                    1645*s13*s23^3 - 1180*s23^4) + s13^2*(-261*s13^4 - 
                    793*s13^3*s23 + 330*s13^2*s23^2 + 789*s13*s23^3 - 
                    649*s23^4) + s12^2*(2763*s13^4 - 4222*s13^3*s23 + 
                    509*s13^2*s23^2 + 4940*s13*s23^3 + 2000*s23^4))) + 
              p1q^4*(p3q^2*(1080*s12^4*s23*(s13 + 2*s23) - s13*s23^2*
                   (81*s13^3 + 559*s13^2*s23 + 302*s13*s23^2 - 320*s23^3) + 
                  s12^3*(405*s13^3 + 2718*s13^2*s23 + 3700*s13*s23^2 + 
                    2040*s23^3) + s12^2*(99*s13^4 + 351*s13^3*s23 - 
                    1520*s13^2*s23^2 - 2140*s13*s23^3 - 440*s23^4) + 
                  s12*s23*(504*s13^4 + 1190*s13^3*s23 + 627*s13^2*s23^2 - 
                    1420*s13*s23^3 - 320*s23^4)) - p2q^2*(2*s12^2*s23*
                   (36*s13^3 + 409*s13^2*s23 + 360*s13*s23^2 + 140*s23^3) + 
                  s13*(-99*s13^5 + 711*s13^4*s23 - 137*s13^3*s23^2 + 
                    694*s13^2*s23^3 + 1289*s13*s23^4 - 640*s23^5) + 
                  s12*(-405*s13^5 - 1224*s13^4*s23 + 3014*s13^3*s23^2 + 
                    2906*s13^2*s23^3 + 640*s13*s23^4 + 280*s23^5)) - 
                p2q*p3q*(80*s12^3*s23*(9*s13^2 + 19*s13*s23 + 15*s23^2) + 
                  s13*s23*(-180*s13^4 - 650*s13^3*s23 + 1649*s13^2*s23^2 + 
                    1591*s13*s23^3 - 960*s23^4) + 2*s12^2*(405*s13^4 + 
                    81*s13^3*s23 + 1277*s13^2*s23^2 + 2150*s13*s23^3 + 
                    900*s23^4) + s12*(198*s13^5 + 792*s13^4*s23 + 2634*s13^3*
                     s23^2 + 587*s13^2*s23^3 + 1340*s13*s23^4 + 
                    600*s23^5))) + p1q^3*(p3q^3*(-360*s12^5*(s13 + 4*s23) + 
                  9*s13^2*s23^2*(20*s13^2 + 29*s13*s23 + s23^2) - 
                  2*s12^4*(423*s13^2 + 970*s13*s23 + 660*s23^2) + s12*s13*s23*
                   (342*s13^3 + 1127*s13^2*s23 + 929*s13*s23^2 - 
                    1140*s23^3) + s12^3*(-135*s13^3 + 949*s13^2*s23 + 
                    2780*s13*s23^2 + 1440*s23^3) + s12^2*(-342*s13^4 - 
                    163*s13^3*s23 + 525*s13^2*s23^2 + 2740*s13*s23^3 + 
                    1320*s23^4)) + p2q*p3q^2*(40*s12^4*(27*s13^2 + 
                    73*s13*s23 + 30*s23^2) + s12^3*(1566*s13^3 + 3677*s13^2*
                     s23 + 6760*s13*s23^2 + 3760*s23^3) + s13*s23*(54*s13^4 + 
                    641*s13^3*s23 - 180*s13^2*s23^2 - 951*s13*s23^3 + 
                    320*s23^4) + s12^2*(423*s13^4 + 1800*s13^3*s23 + 
                    1465*s13^2*s23^2 + 3240*s13*s23^3 + 2240*s23^4) + 
                  s12*(360*s13^5 + 3440*s13^4*s23 + 4848*s13^3*s23^2 + 
                    2765*s13^2*s23^3 - 2920*s13*s23^4 - 320*s23^5)) + 
                p2q^3*(2*s12^2*(342*s13^4 + 479*s13^3*s23 - 69*s13^2*s23^2 - 
                    60*s13*s23^3 - 160*s23^4) + s12*(198*s13^5 + 4693*s13^4*
                     s23 + 2764*s13^3*s23^2 - 645*s13^2*s23^3 - 80*s13*
                     s23^4 - 320*s23^5) + s13*(477*s13^5 - 28*s13^4*s23 + 
                    1700*s13^3*s23^2 + 708*s13^2*s23^3 - 1609*s13*s23^4 + 
                    320*s23^5)) - p2q^2*p3q*(2*s12^3*(702*s13^3 + 751*s13^2*
                     s23 - 100*s13*s23^2 - 620*s23^3) + 2*s12^2*(459*s13^4 + 
                    713*s13^3*s23 - 293*s13^2*s23^2 - 190*s13*s23^3 - 
                    300*s23^4) + s13*(18*s13^5 + s13^4*s23 - 2305*s13^3*
                     s23^2 + 57*s13^2*s23^3 + 2569*s13*s23^4 - 640*s23^5) + 
                  s12*(765*s13^5 - 4227*s13^4*s23 - 3317*s13^3*s23^2 - 
                    831*s13^2*s23^3 + 1860*s13*s23^4 + 640*s23^5)))))/
            (72*ep*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23*
             (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
           (ep*(-9*p1q^6*s23^3*(s13 + s23)^2*(10*s12^3*s23^2 - 
                s13*(s13 + s23)^2*(5*s13^2 - 8*s13*s23 - 10*s23^2) + 
                s12^2*(-s13^3 + 40*s13*s23^2 + 20*s23^3) + s12*(-6*s13^4 + 
                  2*s13^3*s23 + 48*s13^2*s23^2 + 50*s13*s23^3 + 10*s23^4)) + 
              9*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*s23*(s13 + s23)*(s12 + 
                s13 + s23)*(p3q^2*s12*(10*s12^3*s23 - 5*s13^3*(s13 + s23) + 
                  10*s12^2*s23*(s13 + s23) - s12*s13*(9*s13^2 + 20*s13*s23 + 
                    10*s23^2)) - p2q^2*s13*(s13 + s23)*(-10*s12^2*s23 + 
                  s12*(s13^2 - 8*s13*s23 - 10*s23^2) + s13*(13*s13^2 + 
                    23*s13*s23 + 10*s23^2)) + p2q*p3q*(5*s13^3*(s13 + s23)^
                    2 - 10*s12^3*s23*(2*s13 + s23) + s12^2*(s13^3 - 
                    18*s13^2*s23 - 30*s13*s23^2 - 10*s23^3) + 2*s12*s13*
                   (11*s13^3 + 26*s13^2*s23 + 20*s13*s23^2 + 5*s23^3))) - 
              p1q^5*s23^2*(s13 + s23)*(p3q*(-90*s12^4*s23^2*(3*s13 + 4*s23) - 
                  s12^3*(18*s13^4 - 9*s13^3*s23 + 872*s13^2*s23^2 + 
                    1760*s13*s23^3 + 700*s23^4) + s12^2*(36*s13^5 + 
                    99*s13^4*s23 - 424*s13^3*s23^2 - 1667*s13^2*s23^3 - 
                    1430*s13*s23^4 - 320*s23^5) + s13*s23*(135*s13^5 + 
                    383*s13^4*s23 + 363*s13^3*s23^2 + 437*s13^2*s23^3 + 
                    482*s13*s23^4 + 160*s23^5) + s12*(54*s13^6 + 297*s13^5*
                     s23 + 831*s13^4*s23^2 + 715*s13^3*s23^3 + 407*s13^2*
                     s23^4 + 220*s13*s23^5 + 20*s23^6)) + 
                p2q*(-2*s12^3*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*s23^2 - 
                    20*s13*s23^3 - 55*s23^4) + s12^2*(-54*s13^5 - 108*s13^4*
                     s23 - 253*s13^3*s23^2 + 151*s13^2*s23^3 + 640*s13*
                     s23^4 + 220*s23^5) + s12*(72*s13^6 - 108*s13^5*s23 - 
                    483*s13^4*s23^2 - 176*s13^3*s23^3 + 947*s13^2*s23^4 + 
                    850*s13*s23^5 + 110*s23^6) + 2*s13*(45*s13^6 + 27*s13^5*
                     s23 - 299*s13^4*s23^2 - 552*s13^3*s23^3 - 119*s13^2*
                     s23^4 + 277*s13*s23^5 + 125*s23^6))) + p1q*(p2q + p3q)^
                2*(p3q^3*s12^2*(9*s13^3*s23*(s13 + s23)^3*(5*s13 + 7*s23) - 
                  2*s12^4*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*s23^2 + 
                    205*s13*s23^3 + 170*s23^4) + s12*s13*s23*(117*s13^5 + 
                    554*s13^4*s23 + 1236*s13^3*s23^2 + 1778*s13^2*s23^3 + 
                    1319*s13*s23^4 + 340*s23^5) - s12^3*(72*s13^5 + 
                    81*s13^4*s23 - 197*s13^3*s23^2 + 704*s13^2*s23^3 + 
                    1520*s13*s23^4 + 680*s23^5) + s12^2*(-36*s13^6 + 
                    9*s13^5*s23 + 885*s13^4*s23^2 + 1147*s13^3*s23^3 - 
                    43*s13^2*s23^4 - 770*s13*s23^5 - 340*s23^6)) - 
                p2q^3*s13^2*(s13 + s23)*(-2*s12^3*(18*s13^4 + 9*s13^3*s23 + 
                    31*s13^2*s23^2 - 20*s13*s23^3 - 55*s23^4) + 2*s13*s23*
                   (54*s13^5 + 43*s13^4*s23 - 318*s13^3*s23^2 - 524*s13^2*
                     s23^3 - 272*s13*s23^4 - 55*s23^5) + s12^2*(-72*s13^5 - 
                    72*s13^4*s23 + 197*s13^3*s23^2 + 151*s13^2*s23^3 + 
                    244*s13*s23^4 + 220*s23^5) + s12*(-36*s13^6 + 54*s13^5*
                     s23 + 543*s13^4*s23^2 + 202*s13^3*s23^3 - 187*s13^2*
                     s23^4 + 94*s13*s23^5 + 110*s23^6)) - p2q^2*p3q*s13*
                 (-9*s13^3*s23*(s13 + s23)^3*(5*s13^2 - 13*s13*s23 - 
                    10*s23^2) + 2*s12^4*(54*s13^5 + 63*s13^4*s23 + 111*s13^3*
                     s23^2 + 227*s13^2*s23^3 + 200*s13*s23^4 + 70*s23^5) - 
                  s12*s13*s23*(333*s13^6 + 906*s13^5*s23 + 622*s13^4*s23^2 + 
                    372*s13^3*s23^3 + 817*s13^2*s23^4 + 634*s13*s23^5 + 
                    140*s23^6) + s12^3*(216*s13^6 + 369*s13^5*s23 - 
                    483*s13^4*s23^2 - 154*s13^3*s23^3 + 1216*s13^2*s23^4 + 
                    1084*s13*s23^5 + 280*s23^6) + s12^2*(108*s13^7 - 
                    45*s13^6*s23 - 2259*s13^5*s23^2 - 3627*s13^4*s23^3 - 
                    1553*s13^3*s23^4 + 452*s13^2*s23^5 + 544*s13*s23^6 + 
                    140*s23^7)) + p2q*p3q^2*s12*(-18*s13^3*s23*(s13 + s23)^3*
                   (5*s13^2 - 3*s13*s23 + 5*s23^2) + 2*s12^4*(54*s13^5 + 
                    45*s13^4*s23 + 102*s13^3*s23^2 + 421*s13^2*s23^3 + 
                    445*s13*s23^4 + 125*s23^5) - 2*s12*s13*s23*(171*s13^6 + 
                    633*s13^5*s23 + 1222*s13^4*s23^2 + 1899*s13^3*s23^3 + 
                    1774*s13^2*s23^4 + 760*s13*s23^5 + 125*s23^6) + 
                  s12^3*(216*s13^6 + 306*s13^5*s23 - 555*s13^4*s23^2 + 
                    934*s13^3*s23^3 + 3239*s13^2*s23^4 + 2300*s13*s23^5 + 
                    500*s23^6) + s12^2*(108*s13^7 - 36*s13^6*s23 - 2547*s13^5*
                     s23^2 - 3849*s13^4*s23^3 - 1099*s13^3*s23^4 + 1417*s13^2*
                     s23^5 + 1160*s13*s23^6 + 250*s23^7))) + 
              p1q^4*s23*(p2q^2*(s13 + s23)*(2*s12^3*(-36*s13^5 + 64*s13^3*
                     s23^2 + 93*s13^2*s23^3 + 70*s13*s23^4 + 25*s23^5) + 
                  s12^2*(-135*s13^6 + 171*s13^5*s23 + 1132*s13^4*s23^2 + 
                    1132*s13^3*s23^3 + 726*s13^2*s23^4 + 240*s13*s23^5 + 
                    100*s23^6) + s13*(45*s13^7 - 225*s13^6*s23 - 935*s13^5*
                     s23^2 - 571*s13^4*s23^3 + 1606*s13^3*s23^4 + 1710*s13^2*
                     s23^5 - 32*s13*s23^6 - 230*s23^7) - 2*s12*(9*s13^7 + 
                    45*s13^6*s23 - 597*s13^5*s23^2 - 1018*s13^4*s23^3 - 
                    979*s13^3*s23^4 - 344*s13^2*s23^5 + 65*s13*s23^6 - 
                    25*s23^7)) - p3q^2*(270*s12^5*s23^2*(s13^2 + 3*s13*s23 + 
                    2*s23^2) + s13*s23^2*(s13 + s23)^2*(135*s13^4 + 
                    248*s13^3*s23 - 47*s13^2*s23^2 + 70*s13*s23^3 + 
                    70*s23^4) + s12^4*(63*s13^5 + 108*s13^4*s23 + 691*s13^3*
                     s23^2 + 2716*s13^2*s23^3 + 3080*s13*s23^4 + 
                    1020*s23^5) + s12^3*(90*s13^6 + 18*s13^5*s23 - 673*s13^4*
                     s23^2 - 361*s13^3*s23^3 + 1350*s13^2*s23^4 + 1390*s13*
                     s23^5 + 350*s23^6) + s12^2*(27*s13^7 - 288*s13^6*s23 - 
                    2517*s13^5*s23^2 - 5472*s13^4*s23^3 - 5770*s13^3*s23^4 - 
                    4020*s13^2*s23^5 - 1640*s13*s23^6 - 200*s23^7) - 
                  s12*s23*(162*s13^7 + 577*s13^6*s23 + 63*s13^5*s23^2 - 
                    393*s13^4*s23^3 + 1153*s13^3*s23^4 + 1814*s13^2*s23^5 + 
                    690*s13*s23^6 + 70*s23^7)) + p2q*p3q*(s13*s23*(s13 + s23)^
                    2*(126*s13^5 + 91*s13^4*s23 - 10*s13^3*s23^2 + 983*s13^2*
                     s23^3 - 142*s13*s23^4 - 300*s23^5) + s12^4*(-72*s13^5 - 
                    144*s13^4*s23 + 182*s13^3*s23^2 + 704*s13^2*s23^3 + 
                    790*s13*s23^4 + 330*s23^5) + s12^3*(-234*s13^6 - 
                    504*s13^5*s23 + 1071*s13^4*s23^2 + 4149*s13^3*s23^3 + 
                    5258*s13^2*s23^4 + 3300*s13*s23^5 + 780*s23^6) + 
                  s12^2*(-324*s13^7 - 378*s13^6*s23 + 2875*s13^5*s23^2 + 
                    7322*s13^4*s23^3 + 8537*s13^3*s23^4 + 7074*s13^2*s23^5 + 
                    3420*s13*s23^6 + 570*s23^7) + s12*(-162*s13^8 + 
                    36*s13^7*s23 + 2419*s13^6*s23^2 + 3401*s13^5*s23^3 + 
                    1477*s13^4*s23^4 + 1405*s13^3*s23^5 + 1598*s13^2*s23^6 + 
                    610*s13*s23^7 + 120*s23^8))) + p1q^2*(p2q^4*s13*
                 (s13 + s23)*(2*s12^3*(36*s13^5 - 18*s13^4*s23 - 100*s13^3*
                     s23^2 - 111*s13^2*s23^3 - 70*s13*s23^4 - 25*s23^5) + 
                  s12^2*(144*s13^6 + 36*s13^5*s23 - 880*s13^4*s23^2 - 
                    511*s13^3*s23^3 - 357*s13^2*s23^4 - 438*s13*s23^5 - 
                    100*s23^6) + s13*s23*(180*s13^6 + 818*s13^5*s23 + 
                    1291*s13^4*s23^2 - 49*s13^3*s23^3 - 909*s13^2*s23^4 - 
                    157*s13*s23^5 + 50*s23^6) + 2*s12*(36*s13^7 + 126*s13^6*
                     s23 - 309*s13^5*s23^2 - 100*s13^4*s23^3 - 7*s13^3*
                     s23^4 - 245*s13^2*s23^5 - 124*s13*s23^6 - 25*s23^7)) - 
                p3q^4*s12*(90*s12^6*s23^2*(s13 + s23) + 9*s13^3*(10*s13 - 
                    s23)*s23^2*(s13 + s23)^3 + 2*s12^5*(18*s13^4 + 9*s13^3*
                     s23 + 76*s13^2*s23^2 + 160*s13*s23^3 + 80*s23^4) + 
                  s12^4*(36*s13^5 - 117*s13^4*s23 - 565*s13^3*s23^2 - 
                    702*s13^2*s23^3 - 770*s13*s23^4 - 430*s23^5) + 
                  s12*s13*s23*(-9*s13^6 + 320*s13^5*s23 + 882*s13^4*s23^2 + 
                    1256*s13^3*s23^3 + 1991*s13^2*s23^4 + 1768*s13*s23^5 + 
                    480*s23^6) - s12^3*(36*s13^6 + 297*s13^5*s23 + 760*s13^4*
                     s23^2 + 747*s13^3*s23^3 + 2338*s13^2*s23^4 + 2850*s13*
                     s23^5 + 980*s23^6) - s12^2*(36*s13^7 + 171*s13^6*s23 - 
                    781*s13^5*s23^2 - 3286*s13^4*s23^3 - 2484*s13^3*s23^4 + 
                    616*s13^2*s23^5 + 1370*s13*s23^6 + 480*s23^7)) - 
                p2q^3*p3q*(-(s13^2*s23*(s13 + s23)^2*(27*s13^5 + 102*s13^4*
                      s23 + 242*s13^3*s23^2 - 1262*s13^2*s23^3 - 209*s13*
                      s23^4 + 100*s23^5)) + 2*s12^4*(90*s13^6 + 117*s13^5*
                     s23 - 187*s13^4*s23^2 - 381*s13^3*s23^3 - 32*s13^2*
                     s23^4 + 235*s13*s23^5 + 115*s23^6) + s12^3*(252*s13^7 + 
                    729*s13^6*s23 - 1549*s13^5*s23^2 - 4583*s13^4*s23^3 - 
                    3471*s13^3*s23^4 + 376*s13^2*s23^5 + 1540*s13*s23^6 + 
                    460*s23^7) + s12*s13*(-108*s13^8 + 423*s13^7*s23 + 
                    4331*s13^6*s23^2 + 6274*s13^5*s23^3 + 1320*s13^4*s23^4 - 
                    2145*s13^3*s23^5 - 1565*s13^2*s23^6 - 704*s13*s23^7 - 
                    130*s23^8) + s12^2*(-36*s13^8 + 945*s13^7*s23 + 
                    360*s13^6*s23^2 - 5068*s13^5*s23^3 - 8960*s13^4*s23^4 - 
                    4607*s13^3*s23^5 + 376*s13^2*s23^6 + 940*s13*s23^7 + 
                    230*s23^8)) + p2q*p3q^3*(-9*s13^3*s23^2*(s13 + s23)^3*
                   (10*s13^2 - 11*s13*s23 - 5*s23^2) + s12^6*(-36*s13^4 - 
                    18*s13^3*s23 + 388*s13^2*s23^2 + 490*s13*s23^3 + 
                    110*s23^4) + s12^5*(108*s13^5 + 243*s13^4*s23 + 
                    1047*s13^3*s23^2 + 2302*s13^2*s23^3 + 2600*s13*s23^4 + 
                    1160*s23^5) + s12^4*(252*s13^6 + 333*s13^5*s23 - 
                    1700*s13^4*s23^2 - 3083*s13^3*s23^3 + 1888*s13^2*s23^4 + 
                    4750*s13*s23^5 + 1760*s23^6) + s12*s13*s23*(-18*s13^7 + 
                    118*s13^6*s23 + 709*s13^5*s23^2 + 1493*s13^4*s23^3 + 
                    1601*s13^3*s23^4 + 1411*s13^2*s23^5 + 960*s13*s23^6 + 
                    230*s23^7) + s12^3*(36*s13^7 - 81*s13^6*s23 - 4215*s13^5*
                     s23^2 - 12032*s13^4*s23^3 - 11116*s13^3*s23^4 - 
                    3452*s13^2*s23^5 + 510*s13*s23^6 + 480*s23^7) - 
                  s12^2*(72*s13^8 + 171*s13^7*s23 - 1160*s13^6*s23^2 - 
                    2781*s13^5*s23^3 - 962*s13^4*s23^4 + 4036*s13^3*s23^5 + 
                    4986*s13^2*s23^6 + 1900*s13*s23^7 + 230*s23^8)) + 
                p2q^2*p3q^2*(s13^2*s23*(s13 + s23)^2*(9*s13^5 - 212*s13^4*
                     s23 - 60*s13^3*s23^2 - 326*s13^2*s23^3 + 43*s13*s23^4 + 
                    50*s23^5) + 4*s12^5*(36*s13^5 + 54*s13^4*s23 - 145*s13^3*
                     s23^2 - 203*s13^2*s23^3 + 75*s13*s23^4 + 115*s23^5) + 
                  s12^4*(36*s13^6 + 324*s13^5*s23 - 2140*s13^4*s23^2 - 
                    5498*s13^3*s23^3 - 3140*s13^2*s23^4 + 440*s13*s23^5 + 
                    460*s23^6) - s12^3*(324*s13^7 - 171*s13^6*s23 - 
                    1249*s13^5*s23^2 + 2049*s13^4*s23^3 + 5519*s13^3*s23^4 + 
                    5136*s13^2*s23^5 + 2530*s13*s23^6 + 460*s23^7) + 
                  s12^2*(-180*s13^8 + 27*s13^7*s23 + 6572*s13^6*s23^2 + 
                    15990*s13^5*s23^3 + 15286*s13^4*s23^4 + 4005*s13^3*
                     s23^5 - 3056*s13^2*s23^6 - 2260*s13*s23^7 - 460*s23^8) + 
                  s12*s13*(36*s13^8 - 27*s13^7*s23 - 751*s13^6*s23^2 + 
                    284*s13^5*s23^3 + 4284*s13^4*s23^4 + 5645*s13^3*s23^5 + 
                    3885*s13^2*s23^6 + 1962*s13*s23^7 + 410*s23^8))) + 
              p1q^3*(p3q^3*(9*s13^3*(5*s13 - 3*s23)*s23^3*(s13 + s23)^3 + 
                  90*s12^6*s23^2*(s13^2 + 5*s13*s23 + 4*s23^2) + 
                  s12^5*(36*s13^5 + 117*s13^4*s23 + 197*s13^3*s23^2 + 
                    1136*s13^2*s23^3 + 1660*s13*s23^4 + 660*s23^5) + 
                  s12^4*(72*s13^6 + 99*s13^5*s23 - 665*s13^4*s23^2 - 
                    1667*s13^3*s23^3 - 965*s13^2*s23^4 - 180*s13*s23^5 - 
                    60*s23^6) + s12*s13*s23^2*(126*s13^6 + 721*s13^5*s23 + 
                    1038*s13^4*s23^2 + 676*s13^3*s23^3 + 952*s13^2*s23^4 + 
                    1019*s13*s23^5 + 300*s23^6) + s12^3*(36*s13^7 - 
                    81*s13^6*s23 - 1506*s13^5*s23^2 - 3993*s13^4*s23^3 - 
                    4809*s13^3*s23^4 - 4775*s13^2*s23^5 - 3000*s13*s23^6 - 
                    660*s23^7) - s12^2*s23*(63*s13^7 + 194*s13^6*s23 - 
                    1455*s13^5*s23^2 - 3675*s13^4*s23^3 - 1274*s13^3*s23^4 + 
                    1745*s13^2*s23^5 + 1310*s13*s23^6 + 300*s23^7)) + 
                p2q^3*(s13 + s23)*(2*s12^3*(18*s13^6 - 63*s13^5*s23 - 
                    104*s13^4*s23^2 + 9*s13^3*s23^3 + 47*s13^2*s23^4 + 
                    20*s13*s23^5 + 35*s23^6) + 2*s13*s23*(108*s13^7 + 
                    164*s13^6*s23 - 401*s13^5*s23^2 - 1295*s13^4*s23^3 - 
                    606*s13^3*s23^4 + 382*s13^2*s23^5 + 115*s13*s23^6 - 
                    35*s23^7) + s12^2*(72*s13^7 - 180*s13^6*s23 - 413*s13^5*
                     s23^2 + 1015*s13^4*s23^3 + 955*s13^3*s23^4 + 299*s13^2*
                     s23^5 + 240*s13*s23^6 + 140*s23^7) + s12*(36*s13^8 + 
                    162*s13^7*s23 - 363*s13^6*s23^2 + 1070*s13^5*s23^3 + 
                    1550*s13^4*s23^4 + 1026*s13^3*s23^5 + 615*s13^2*s23^6 + 
                    130*s13*s23^7 + 70*s23^8)) + p2q*p3q^2*
                 (2*s12^5*(18*s13^5 + 63*s13^4*s23 - 122*s13^3*s23^2 - 
                    557*s13^2*s23^3 - 565*s13*s23^4 - 165*s23^5) - 
                  2*s13*s23^2*(s13 + s23)^2*(81*s13^5 + 193*s13^4*s23 + 
                    351*s13^3*s23^2 - 26*s13^2*s23^3 + 10*s13*s23^4 + 
                    35*s23^5) - s12^4*s23*(-90*s13^5 + 843*s13^4*s23 + 
                    4418*s13^3*s23^2 + 6565*s13^2*s23^3 + 4400*s13*s23^4 + 
                    1220*s23^5) - s12^3*(108*s13^7 - 445*s13^5*s23^2 + 
                    399*s13^4*s23^3 + 2705*s13^3*s23^4 + 6359*s13^2*s23^5 + 
                    5330*s13*s23^6 + 1380*s23^7) + s12^2*(-72*s13^8 - 
                    54*s13^7*s23 + 2638*s13^6*s23^2 + 10914*s13^5*s23^3 + 
                    17115*s13^4*s23^4 + 10338*s13^3*s23^5 + 1347*s13^2*
                     s23^6 - 910*s13*s23^7 - 420*s23^8) + s12*s23*
                   (-90*s13^8 + 118*s13^7*s23 + 2562*s13^6*s23^2 + 4165*s13^5*
                     s23^3 + 2391*s13^4*s23^4 + 2745*s13^3*s23^5 + 3175*s13^2*
                     s23^6 + 1080*s13*s23^7 + 70*s23^8)) + p2q^2*p3q*
                 (s13*s23*(s13 + s23)^2*(9*s13^6 - 158*s13^5*s23 - 670*s13^4*
                     s23^2 - 1550*s13^3*s23^3 + 813*s13^2*s23^4 + 280*s13*
                     s23^5 - 140*s23^6) - 2*s12^4*(36*s13^6 + 90*s13^5*s23 - 
                    46*s13^4*s23^2 - 384*s13^3*s23^3 - 314*s13^2*s23^4 + 
                    85*s13*s23^5 + 130*s23^6) + s12^2*s23*(-1161*s13^7 - 
                    1127*s13^6*s23 + 6992*s13^5*s23^2 + 15608*s13^4*s23^3 + 
                    11857*s13^3*s23^4 + 4297*s13^2*s23^5 + 870*s13*s23^6 + 
                    20*s23^7) - s12^3*(108*s13^7 + 675*s13^6*s23 + 57*s13^5*
                     s23^2 - 3935*s13^4*s23^3 - 6689*s13^3*s23^4 - 3014*s13^2*
                     s23^5 + 420*s13*s23^6 + 380*s23^7) + s12*(36*s13^9 - 
                    657*s13^8*s23 - 2504*s13^7*s23^2 + 919*s13^6*s23^3 + 
                    7070*s13^5*s23^4 + 6559*s13^4*s23^5 + 4370*s13^3*s23^6 + 
                    2991*s13^2*s23^7 + 980*s13*s23^8 + 140*s23^9)))))/
            (36*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23^2*
             (s13 + s23)^2*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
               (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (18*p1q^6*s23^3*(s13 + s23)*(10*s12^3*s23^2*
                (4*s13 + 3*s23) + s13*(s13 + s23)^3*(11*s13^2 - 14*s13*s23 + 
                 10*s23^2) + s12*(s13 + s23)^2*(s13^3 + 27*s13^2*s23 + 
                 80*s13*s23^2 + 30*s23^3) + s12^2*(-10*s13^4 + 31*s13^3*s23 + 
                 151*s13^2*s23^2 + 170*s13*s23^3 + 60*s23^4)) - 
             18*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*
              (p3q^3*s12*(s13^2*(s13 + s23)^2*(29*s13 + s23) + 10*s12^3*s23*
                  (4*s13 + 3*s23) + 10*s12^2*s23*(4*s13^2 + 7*s13*s23 + 
                   3*s23^2) + s12*s13*(21*s13^3 + 10*s13^2*s23 - 31*s13*
                    s23^2 - 20*s23^3)) + p2q^3*s13*(s13 + s23)*
                (s13*(38*s13 - 11*s23)*(s13 + s23)^2 + 10*s12^2*s23*
                  (4*s13 + 3*s23) + s12*(-60*s13^3 - 75*s13^2*s23 + 
                   5*s13*s23^2 + 20*s23^3)) + p2q*p3q^2*
                (-(s13^2*(s13 + s23)^3*(20*s13 + s23)) + 10*s12^4*s23*
                  (4*s13 + 3*s23) - 10*s12^3*s13*s23*(4*s13 + 3*s23) - 
                 s12*s13*(s13 + s23)^2*(84*s13^2 - 19*s13*s23 - 20*s23^2) + 
                 2*s12^2*(27*s13^4 + 9*s13^3*s23 - 73*s13^2*s23^2 - 
                   70*s13*s23^3 - 15*s23^4)) - p2q^2*p3q*
                (-2*s13^2*(27*s13 - 4*s23)*(s13 + s23)^3 + s12*s13*
                  (s13 + s23)^2*(137*s13^2 - 7*s13*s23 - 40*s23^2) + 
                 10*s12^3*s23*(8*s13^2 + 10*s13*s23 + 3*s23^2) + 
                 s12^2*(-33*s13^4 - 48*s13^3*s23 + 45*s13^2*s23^2 + 
                   90*s13*s23^3 + 30*s23^4))) - p1q^5*s23^2*(p2q*(s13 + s23)*
                (4*s12^3*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 - 
                   75*s13*s23^3 - 155*s23^4) + s12^2*(-144*s13^5 + 
                   3114*s13^4*s23 + 5775*s13^3*s23^2 + 577*s13^2*s23^3 - 
                   3000*s13*s23^4 - 1240*s23^5) + s12*(144*s13^6 + 
                   1764*s13^5*s23 + 6895*s13^4*s23^2 + 7310*s13^3*s23^3 - 
                   1025*s13^2*s23^4 - 3520*s13*s23^5 - 620*s23^6) + 
                 2*s13*(198*s13^6 - 189*s13^5*s23 - 782*s13^4*s23^2 + 
                   818*s13^3*s23^3 + 1746*s13^2*s23^4 + 123*s13*s23^5 - 
                   410*s23^6)) + p3q*(180*s12^4*s23^2*(12*s13^2 + 
                   25*s13*s23 + 12*s23^2) + 2*s13*s23*(s13 + s23)^2*
                  (90*s13^4 + 757*s13^3*s23 + 1384*s13^2*s23^2 + 317*s13*
                    s23^3 - 320*s23^4) + 2*s12^3*(-126*s13^5 + 531*s13^4*
                    s23 + 4508*s13^3*s23^2 + 9101*s13^2*s23^3 + 7370*s13*
                    s23^4 + 2120*s23^5) + s12^2*(252*s13^6 + 2592*s13^5*s23 + 
                   9033*s13^4*s23^2 + 16378*s13^3*s23^3 + 16945*s13^2*s23^4 + 
                   9260*s13*s23^5 + 2000*s23^6) + s12*(504*s13^7 + 
                   2466*s13^6*s23 + 4735*s13^5*s23^2 + 3585*s13^4*s23^3 - 
                   1311*s13^3*s23^4 - 3663*s13^2*s23^5 - 1620*s13*s23^6 - 
                   80*s23^7))) + p1q*(-(p2q^5*s13^2*(s13 + s23)*
                 (4*s12^3*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 - 
                    75*s13*s23^3 - 155*s23^4) + s12^2*(216*s13^5 + 144*s13^4*
                     s23 + 3687*s13^3*s23^2 + 4519*s13^2*s23^3 + 60*s13*
                     s23^4 - 880*s23^5) + 2*s13*s23*(603*s13^5 + 1792*s13^4*
                     s23 + 2186*s13^3*s23^2 + 1296*s13^2*s23^3 + 267*s13*
                     s23^4 - 32*s23^5) + s12*(108*s13^6 + 1134*s13^5*s23 + 
                    5005*s13^4*s23^2 + 8732*s13^3*s23^3 + 5509*s13^2*s23^4 + 
                    656*s13*s23^5 - 260*s23^6))) + p3q^5*s12^2*
                (18*s13^2*s23*(s13 + s23)^3*(20*s13^2 + 91*s13*s23 + 
                   3*s23^2) + 4*s12^4*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*
                    s23^2 + 825*s13*s23^3 + 520*s23^4) + s12*s13*s23*
                  (936*s13^5 + 5753*s13^4*s23 + 9151*s13^3*s23^2 + 
                   3087*s13^2*s23^3 - 2787*s13*s23^4 - 1540*s23^5) + 
                 2*s12^3*(108*s13^5 + 207*s13^4*s23 + 1038*s13^3*s23^2 + 
                   4019*s13^2*s23^3 + 5250*s13*s23^4 + 2080*s23^5) + 
                 s12^2*(108*s13^6 + 774*s13^5*s23 + 4105*s13^4*s23^2 + 
                   7688*s13^3*s23^3 + 7669*s13^2*s23^4 + 5660*s13*s23^5 + 
                   2080*s23^6)) + p2q^4*p3q*s13*(-2*s13^2*s23*(s13 + s23)^2*
                  (1026*s13^4 + 1613*s13^3*s23 + 1058*s13^2*s23^2 + 
                   193*s13*s23^3 - 118*s23^4) + 4*s12^4*(81*s13^5 + 
                   216*s13^4*s23 + 714*s13^3*s23^2 + 1079*s13^2*s23^3 + 
                   780*s13*s23^4 + 230*s23^5) + 2*s12^3*(216*s13^6 + 
                   243*s13^5*s23 + 839*s13^4*s23^2 + 3131*s13^3*s23^3 + 
                   4719*s13^2*s23^4 + 3050*s13*s23^5 + 740*s23^6) + 
                 s12*s13*(-216*s13^7 + 2160*s13^6*s23 + 8419*s13^5*s23^2 + 
                   11377*s13^4*s23^3 + 8765*s13^3*s23^4 + 4743*s13^2*s23^5 + 
                   1236*s13*s23^6 - 76*s23^7) + s12^2*(-108*s13^7 + 
                   3834*s13^6*s23 + 7245*s13^5*s23^2 + 5106*s13^4*s23^3 + 
                   4637*s13^3*s23^4 + 4978*s13^2*s23^5 + 2544*s13*s23^6 + 
                   560*s23^7)) + p2q*p3q^4*s12*(-36*s13^2*s23*(s13 + s23)^3*
                  (20*s13^3 + 24*s13^2*s23 + 21*s13*s23^2 + s23^3) + 
                 8*s12^5*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 + 
                   825*s13*s23^3 + 520*s23^4) + 4*s12^4*(27*s13^5 + 
                   18*s13^4*s23 + 378*s13^3*s23^2 + 2242*s13^2*s23^3 + 
                   3720*s13*s23^4 + 1695*s23^5) - 2*s12*s13*s23*(1503*s13^6 + 
                   6816*s13^5*s23 + 12427*s13^4*s23^2 + 9377*s13^3*s23^3 + 
                   792*s13^2*s23^4 - 2061*s13*s23^5 - 590*s23^6) + 
                 s12^3*(-432*s13^6 + 1008*s13^5*s23 + 5591*s13^4*s23^2 + 
                   2650*s13^3*s23^3 - 6461*s13^2*s23^4 - 3200*s13*s23^5 + 
                   1080*s23^6) - s12^2*(324*s13^7 + 918*s13^6*s23 + 
                   1367*s13^5*s23^2 + 4223*s13^4*s23^3 + 12425*s13^3*s23^4 + 
                   18055*s13^2*s23^5 + 10300*s13*s23^6 + 1540*s23^7)) - p2q^3*
                p3q^2*(2*s13^3*s23*(s13 + s23)^2*(567*s13^4 + 1279*s13^3*
                    s23 + 1465*s13^2*s23^2 + 605*s13*s23^3 - 68*s23^4) + 
                 4*s12^5*(81*s13^5 + 189*s13^4*s23 + 660*s13^3*s23^2 + 
                   1777*s13^2*s23^3 + 1530*s13*s23^4 + 385*s23^5) + 
                 s12^4*s23*(-540*s13^5 - 1797*s13^4*s23 + 4742*s13^3*s23^2 + 
                   15559*s13^2*s23^3 + 12680*s13*s23^4 + 3080*s23^5) + 
                 s12*s13^2*(108*s13^7 - 4734*s13^6*s23 - 19919*s13^5*s23^2 - 
                   37001*s13^4*s23^3 - 38365*s13^3*s23^4 - 20421*s13^2*
                    s23^5 - 3156*s13*s23^6 + 824*s23^7) + s12^3*(-864*s13^7 + 
                   3438*s13^6*s23 + 12277*s13^5*s23^2 + 12149*s13^4*s23^3 + 
                   2699*s13^3*s23^4 + 1925*s13^2*s23^5 + 4260*s13*s23^6 + 
                   1540*s23^7) - s12^2*s13*(432*s13^7 + 1134*s13^6*s23 - 
                   5397*s13^5*s23^2 - 14792*s13^4*s23^3 - 10215*s13^3*s23^4 + 
                   3320*s13^2*s23^5 + 6822*s13*s23^6 + 2300*s23^7)) + p2q^2*
                p3q^3*(18*s13^3*s23*(s13 + s23)^3*(20*s13^3 - 7*s13^2*s23 - 
                   41*s13*s23^2 - 2*s23^3) + 4*s12^6*(27*s13^4 + 54*s13^3*
                    s23 + 202*s13^2*s23^2 + 825*s13*s23^3 + 520*s23^4) - 
                 2*s12^5*(216*s13^5 + 549*s13^4*s23 + 1602*s13^3*s23^2 + 
                   3089*s13^2*s23^3 + 870*s13*s23^4 - 540*s23^5) + 
                 s12*s13^2*s23*(3204*s13^6 + 13353*s13^5*s23 + 24523*s13^4*
                    s23^2 + 23999*s13^3*s23^3 + 11457*s13^2*s23^4 + 
                   1308*s13*s23^5 - 524*s23^6) - s12^3*s23*(3510*s13^6 + 
                   14971*s13^5*s23 + 25813*s13^4*s23^2 + 24785*s13^3*s23^3 + 
                   22673*s13^2*s23^4 + 14500*s13*s23^5 + 3080*s23^6) - 
                 s12^4*(864*s13^6 - 558*s13^5*s23 - 1723*s13^4*s23^2 + 
                   13448*s13^3*s23^3 + 32809*s13^2*s23^4 + 22460*s13*s23^5 + 
                   4080*s23^6) + s12^2*s13*(324*s13^7 - 2538*s13^6*s23 - 
                   19215*s13^5*s23^2 - 41510*s13^4*s23^3 - 33901*s13^3*
                    s23^4 - 2278*s13^2*s23^5 + 9226*s13*s23^6 + 
                   2920*s23^7))) + 2*p1q^4*s23*(p3q^2*(270*s12^5*s23^2*
                  (4*s13^2 + 11*s13*s23 + 6*s23^2) - s13*s23^2*(s13 + s23)^2*
                  (9*s13^4 + 352*s13^3*s23 + 1015*s13^2*s23^2 + 362*s13*
                    s23^3 - 230*s23^4) + s12*s23*(s13 + s23)^2*(378*s13^5 + 
                   1937*s13^4*s23 + 3079*s13^3*s23^2 + 446*s13^2*s23^3 - 
                   1130*s13*s23^4 - 230*s23^5) + s12^4*(18*s13^5 + 
                   549*s13^4*s23 + 4210*s13^3*s23^2 + 10299*s13^2*s23^3 + 
                   9730*s13*s23^4 + 3120*s23^5) + s12^3*(225*s13^6 + 
                   1845*s13^5*s23 + 4866*s13^4*s23^2 + 7139*s13^3*s23^3 + 
                   6913*s13^2*s23^4 + 4260*s13*s23^5 + 1150*s23^6) + 
                 s12^2*(207*s13^7 + 1863*s13^6*s23 + 4933*s13^5*s23^2 + 
                   4667*s13^4*s23^3 - 2128*s13^3*s23^4 - 7338*s13^2*s23^5 - 
                   4320*s13*s23^6 - 580*s23^7)) + p2q^2*(s13 + s23)*
                (s12^3*(108*s13^5 + 414*s13^4*s23 - 191*s13^3*s23^2 - 
                   847*s13^2*s23^3 - 590*s13*s23^4 - 190*s23^5) + 
                 s12^2*(126*s13^6 + 2196*s13^5*s23 + 969*s13^4*s23^2 - 
                   4577*s13^3*s23^3 - 3856*s13^2*s23^4 - 1120*s13*s23^5 - 
                   380*s23^6) + s12*(117*s13^7 + 630*s13^6*s23 + 1774*s13^5*
                    s23^2 - 1916*s13^4*s23^3 - 8011*s13^3*s23^4 - 4304*s13^2*
                    s23^5 + 20*s13*s23^6 - 190*s23^7) + s13*(99*s13^7 - 
                   963*s13^6*s23 - 1852*s13^5*s23^2 + 167*s13^4*s23^3 - 
                   952*s13^3*s23^4 - 3534*s13^2*s23^5 - 1075*s13*s23^6 + 
                   550*s23^7)) + p2q*p3q*(2*s12^4*(54*s13^5 + 189*s13^4*s23 - 
                   154*s13^3*s23^2 - 984*s13^2*s23^3 - 1210*s13*s23^4 - 
                   465*s23^5) + s13*s23*(s13 + s23)^2*(108*s13^5 + 
                   794*s13^4*s23 + 155*s13^3*s23^2 - 3428*s13^2*s23^3 - 
                   1717*s13*s23^4 + 780*s23^5) + s12^3*(504*s13^6 + 
                   2079*s13^5*s23 + 1525*s13^4*s23^2 - 5509*s13^3*s23^3 - 
                   12479*s13^2*s23^4 - 9210*s13*s23^5 - 2280*s23^6) + 
                 2*s12^2*(153*s13^7 + 639*s13^6*s23 + 305*s13^5*s23^2 - 
                   2013*s13^4*s23^3 - 5645*s13^3*s23^4 - 7453*s13^2*s23^5 - 
                   4485*s13*s23^6 - 885*s23^7) - s12*(90*s13^8 + 693*s13^7*
                    s23 + 2247*s13^6*s23^2 + 4169*s13^5*s23^3 + 6111*s13^4*
                    s23^4 + 6018*s13^3*s23^5 + 3412*s13^2*s23^6 + 1400*s13*
                    s23^7 + 420*s23^8))) - 2*p1q^2*(-(p2q^4*s13*(s13 + s23)*
                 (s12^3*(-108*s13^5 + 216*s13^4*s23 + 1451*s13^3*s23^2 + 
                    1477*s13^2*s23^3 + 590*s13*s23^4 + 190*s23^5) + 
                  s13*s23*(243*s13^6 + 718*s13^5*s23 + 1030*s13^4*s23^2 + 
                    2851*s13^3*s23^3 + 3588*s13^2*s23^4 + 931*s13*s23^5 - 
                    361*s23^6) + s12^2*(-216*s13^6 - 666*s13^5*s23 + 
                    579*s13^4*s23^2 + 4748*s13^3*s23^3 + 4594*s13^2*s23^4 + 
                    1705*s13*s23^5 + 470*s23^6) + s12*(-108*s13^7 - 
                    639*s13^6*s23 - 1531*s13^5*s23^2 + 1367*s13^4*s23^3 + 
                    6787*s13^3*s23^4 + 4664*s13^2*s23^5 + 844*s13*s23^6 + 
                    280*s23^7))) + p3q^4*s12*(-90*s12^6*s23^2*(4*s13 + 
                   3*s23) + 9*s13^2*s23^2*(s13 + s23)^3*(40*s13^2 + 
                   95*s13*s23 + 3*s23^2) - 2*s12^5*(27*s13^4 + 54*s13^3*s23 + 
                   382*s13^2*s23^2 + 600*s13*s23^3 + 250*s23^4) + 
                 s12^4*(-54*s13^5 - 135*s13^4*s23 - 40*s13^3*s23^2 + 
                   1201*s13^2*s23^3 + 2630*s13*s23^4 + 1310*s23^5) + 
                 s12*s13*s23*(261*s13^6 + 2098*s13^5*s23 + 6995*s13^4*s23^2 + 
                   9825*s13^3*s23^3 + 4362*s13^2*s23^4 - 1535*s13*s23^5 - 
                   1230*s23^6) + s12^3*(54*s13^6 + 54*s13^5*s23 - 299*s13^4*
                    s23^2 + 2542*s13^3*s23^3 + 8851*s13^2*s23^4 + 9150*s13*
                    s23^5 + 3040*s23^6) + 2*s12^2*(27*s13^7 + 171*s13^6*s23 + 
                   425*s13^5*s23^2 + 1696*s13^4*s23^3 + 3487*s13^3*s23^4 + 
                   3467*s13^2*s23^5 + 2225*s13*s23^6 + 750*s23^7)) + p2q*
                p3q^3*(9*s13^2*s23^2*(s13 + s23)^3*(40*s13^3 + 46*s13^2*s23 - 
                   19*s13*s23^2 - s23^3) - 2*s12^6*(27*s13^4 + 54*s13^3*s23 - 
                   698*s13^2*s23^2 - 750*s13*s23^3 - 155*s23^4) + 
                 s12^5*(162*s13^5 + 405*s13^4*s23 + 3106*s13^3*s23^2 + 
                   8103*s13^2*s23^3 + 9250*s13*s23^4 + 3580*s23^5) + 
                 s12^4*(378*s13^6 + 2484*s13^5*s23 + 3351*s13^4*s23^2 + 
                   5180*s13^3*s23^3 + 14395*s13^2*s23^4 + 15990*s13*s23^5 + 
                   5500*s23^6) - s12*s13*s23*(522*s13^7 + 2882*s13^6*s23 + 
                   7812*s13^5*s23^2 + 12087*s13^4*s23^3 + 10387*s13^3*s23^4 + 
                   3683*s13^2*s23^5 - 709*s13*s23^6 - 640*s23^7) + 
                 s12^3*(54*s13^7 + 2565*s13^6*s23 + 9567*s13^5*s23^2 + 
                   15874*s13^4*s23^3 + 11683*s13^3*s23^4 + 3955*s13^2*s23^5 + 
                   2570*s13*s23^6 + 1500*s23^7) + s12^2*(-108*s13^8 + 
                   72*s13^7*s23 + 4306*s13^6*s23^2 + 16019*s13^5*s23^3 + 
                   20743*s13^4*s23^4 + 5455*s13^3*s23^5 - 7535*s13^2*s23^6 - 
                   5030*s13*s23^7 - 730*s23^8)) - p2q^3*p3q*
                (-(s13^2*s23*(s13 + s23)^2*(216*s13^5 - 15*s13^4*s23 - 
                    424*s13^3*s23^2 - 2974*s13^2*s23^3 - 1472*s13*s23^4 + 
                    749*s23^5)) + s12^4*(270*s13^6 + 432*s13^5*s23 - 
                   1319*s13^4*s23^2 - 1654*s13^3*s23^3 + 827*s13^2*s23^4 + 
                   1880*s13*s23^5 + 730*s23^6) + s12^3*(378*s13^7 + 
                   3087*s13^6*s23 + 3168*s13^5*s23^2 - 4131*s13^4*s23^3 - 
                   3962*s13^3*s23^4 + 3968*s13^2*s23^5 + 5070*s13*s23^6 + 
                   1460*s23^7) + s12*s13*(-162*s13^8 - 1647*s13^7*s23 - 
                   1765*s13^6*s23^2 + 10792*s13^5*s23^3 + 31045*s13^4*s23^4 + 
                   30562*s13^3*s23^5 + 11474*s13^2*s23^6 + 805*s13*s23^7 - 
                   80*s23^8) + s12^2*(-54*s13^8 + 1224*s13^7*s23 + 
                   6721*s13^6*s23^2 + 13801*s13^5*s23^3 + 12530*s13^4*s23^4 + 
                   7307*s13^3*s23^5 + 5275*s13^2*s23^6 + 3110*s13*s23^7 + 
                   730*s23^8)) + p2q^2*p3q^2*(4*s12^5*(54*s13^5 + 162*s13^4*
                    s23 - 388*s13^3*s23^2 - 421*s13^2*s23^3 + 440*s13*s23^4 + 
                   365*s23^5) + s13^2*s23*(s13 + s23)^2*(261*s13^5 + 
                   514*s13^4*s23 + 563*s13^3*s23^2 - 993*s13^2*s23^3 - 
                   684*s13*s23^4 + 379*s23^5) + s12^4*(54*s13^6 + 1908*s13^5*
                    s23 - 161*s13^4*s23^2 - 7390*s13^3*s23^3 - 4805*s13^2*
                    s23^4 + 1900*s13*s23^5 + 1460*s23^6) - s12^3*(486*s13^7 + 
                   1872*s13^6*s23 - 2464*s13^5*s23^2 - 11243*s13^4*s23^3 - 
                   3340*s13^3*s23^4 + 9443*s13^2*s23^5 + 7300*s13*s23^6 + 
                   1460*s23^7) + s12*s13*(54*s13^8 - 630*s13^7*s23 - 
                   6797*s13^6*s23^2 - 24573*s13^5*s23^3 - 41440*s13^4*s23^4 - 
                   34034*s13^3*s23^5 - 11053*s13^2*s23^6 + 1001*s13*s23^7 + 
                   1000*s23^8) - s12^2*(270*s13^8 + 4023*s13^7*s23 + 
                   9568*s13^6*s23^2 + 4940*s13^5*s23^3 - 4562*s13^4*s23^4 + 
                   1013*s13^3*s23^5 + 9280*s13^2*s23^6 + 6440*s13*s23^7 + 
                   1460*s23^8))) + p1q^3*(-(p3q^3*(-18*s13^2*s23^3*
                   (s13 + s23)^3*(20*s13^2 + 33*s13*s23 + s23^2) + 
                  180*s12^6*s23^2*(4*s13^2 + 19*s13*s23 + 12*s23^2) + 
                  2*s12^5*(54*s13^5 + 261*s13^4*s23 + 1448*s13^3*s23^2 + 
                    4851*s13^2*s23^3 + 5630*s13*s23^4 + 2040*s23^5) - 
                  s12*s13*s23^2*(540*s13^6 + 4000*s13^5*s23 + 12593*s13^4*
                     s23^2 + 17607*s13^3*s23^3 + 8835*s13^2*s23^4 - 
                    1379*s13*s23^5 - 1740*s23^6) + s12^4*(216*s13^6 + 
                    1746*s13^5*s23 + 4029*s13^4*s23^2 + 4532*s13^3*s23^3 + 
                    1713*s13^2*s23^4 - 360*s13*s23^5 - 240*s23^6) + 
                  s12^3*(108*s13^7 + 1692*s13^6*s23 + 5599*s13^5*s23^2 + 
                    6761*s13^4*s23^3 - 5683*s13^3*s23^4 - 21649*s13^2*s23^5 - 
                    17160*s13*s23^6 - 4080*s23^7) + s12^2*s23*(468*s13^7 + 
                    2936*s13^6*s23 + 7760*s13^5*s23^2 + 6341*s13^4*s23^3 - 
                    4874*s13^3*s23^4 - 11063*s13^2*s23^5 - 7220*s13*s23^6 - 
                    1920*s23^7))) + p2q^3*(s13 + s23)*(-2*s12^3*(54*s13^6 - 
                   432*s13^5*s23 - 1963*s13^4*s23^2 - 974*s13^3*s23^3 + 
                   163*s13^2*s23^4 + 190*s13*s23^5 + 230*s23^6) + 
                 s12^2*(-216*s13^7 + 144*s13^6*s23 + 9723*s13^5*s23^2 + 
                   17537*s13^4*s23^3 + 5527*s13^3*s23^4 - 1887*s13^2*s23^5 - 
                   1240*s13*s23^6 - 920*s23^7) + 2*s13*s23*(603*s13^7 + 
                   818*s13^6*s23 + 545*s13^5*s23^2 + 3658*s13^4*s23^3 + 
                   3829*s13^3*s23^4 - 898*s13^2*s23^5 - 1169*s13*s23^6 + 
                   230*s23^7) + s12*(-108*s13^8 + 486*s13^7*s23 + 4607*s13^6*
                    s23^2 + 17768*s13^5*s23^3 + 22416*s13^4*s23^4 + 
                   3342*s13^3*s23^5 - 4299*s13^2*s23^6 - 400*s13*s23^7 - 
                   460*s23^8)) + p2q*p3q^2*(2*s13*s23^2*(s13 + s23)^2*
                  (126*s13^5 + 425*s13^4*s23 + 1003*s13^3*s23^2 - 507*s13^2*
                    s23^3 - 741*s13*s23^4 + 230*s23^5) + 4*s12^5*(-27*s13^5 - 
                   135*s13^4*s23 + 356*s13^3*s23^2 + 1809*s13^2*s23^3 + 
                   1730*s13*s23^4 + 465*s23^5) + s12^4*s23*(-1620*s13^5 + 
                   2249*s13^4*s23 + 20474*s13^3*s23^2 + 36805*s13^2*s23^3 + 
                   27520*s13*s23^4 + 7400*s23^5) + s12^3*(324*s13^7 + 
                   2574*s13^6*s23 + 8471*s13^5*s23^2 + 14105*s13^4*s23^3 + 
                   28113*s13^3*s23^4 + 44129*s13^2*s23^5 + 33060*s13*s23^6 + 
                   8760*s23^7) + s12*s23*(936*s13^8 + 7330*s13^7*s23 + 
                   27550*s13^6*s23^2 + 57159*s13^5*s23^3 + 61121*s13^4*
                    s23^4 + 25231*s13^3*s23^5 - 4887*s13^2*s23^6 - 
                   5460*s13*s23^7 - 460*s23^8) + s12^2*(216*s13^8 + 
                   4590*s13^7*s23 + 18090*s13^6*s23^2 + 30654*s13^5*s23^3 + 
                   30573*s13^4*s23^4 + 22650*s13^3*s23^5 + 12155*s13^2*
                    s23^6 + 6540*s13*s23^7 + 2760*s23^8)) + p2q^2*p3q*
                (-2*s13*s23*(s13 + s23)^2*(18*s13^6 - 35*s13^5*s23 - 
                   1232*s13^4*s23^2 - 3602*s13^3*s23^3 + 906*s13^2*s23^4 + 
                   2149*s13*s23^5 - 460*s23^6) + 2*s12^4*(108*s13^6 + 
                   108*s13^5*s23 - 929*s13^4*s23^2 - 1960*s13^3*s23^3 - 
                   811*s13^2*s23^4 + 1250*s13*s23^5 + 880*s23^6) + 
                 s12^2*s23*(1386*s13^7 + 10805*s13^6*s23 + 22780*s13^5*
                    s23^2 + 18902*s13^4*s23^3 + 5414*s13^3*s23^4 - 
                   3547*s13^2*s23^5 - 3020*s13*s23^6 - 80*s23^7) + 
                 2*s12^3*(162*s13^7 + 1971*s13^6*s23 + 2500*s13^5*s23^2 - 
                   3091*s13^4*s23^3 - 5722*s13^3*s23^4 - 1020*s13^2*s23^5 + 
                   2490*s13*s23^6 + 1300*s23^7) - s12*(108*s13^9 + 
                   2376*s13^8*s23 + 1977*s13^7*s23^2 - 19393*s13^6*s23^3 - 
                   50874*s13^5*s23^4 - 43586*s13^4*s23^5 - 6727*s13^3*s23^6 + 
                   8747*s13^2*s23^7 + 4580*s13*s23^8 + 920*s23^9))))/
            (72*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^3*s23^2*
             (s13 + s23)^2*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
               (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p2 . E0conj))*Int[DS[k]*DS[k + p1 + p2]] + 
     ((-1/36*(ep^2*(-40*s12^3 + 5*s12^2*(3*s13 - 8*s23) + 20*s13^2*s23 + 
             s12*s13*(19*s13 + 7*s23)))/(s12*s13*(s12 + s23)) + 
         (ep*(-9*(p2q + p3q)*s12*(-(p3q*s12) + p2q*s13)*(5*s12^2 + 
              6*s12*s13 + s13^2 + 10*s12*s23 + 6*s13*s23 + 5*s23^2)*
             (p2q*s13 - p3q*(s12 + s23)) - 9*p1q^3*s23*(s12 + s23)*
             (5*s12^3 + 2*s13*s23*(s13 + s23) + 2*s12^2*(3*s13 + 5*s23) + 
              s12*(s13^2 + 8*s13*s23 + 5*s23^2)) + 
            p1q^2*(p3q*(s12 + s23)*(45*s12^4 - 6*s12^3*(9*s13 - 31*s23) - 
                3*s13*s23^2*(43*s13 + 3*s23) - s12^2*(27*s13^2 + 396*s13*
                   s23 + 11*s23^2) - s12*s23*(178*s13^2 + 487*s13*s23 + 
                  152*s23^2)) - p2q*(3*s12^4*(21*s13 - 47*s23) + 
                s12^3*(-18*s13^2 + 342*s13*s23 - 175*s23^2) - 3*s13*s23^2*
                 (12*s13^2 - 25*s13*s23 + 3*s23^2) + s12^2*(-9*s13^3 + 
                  43*s13^2*s23 + 622*s13*s23^2 + 73*s23^3) + s12*s23*
                 (-36*s13^3 + 136*s13^2*s23 + 334*s13*s23^2 + 107*s23^3))) + 
            p1q*(-(p3q^2*(s12 + s23)*(3*s12^3*(36*s13 - 71*s23) + 
                 120*s13^2*s23^2 + s12^2*(36*s13^2 + 333*s13*s23 - 
                   178*s23^2) + s12*s23*(178*s13^2 + 361*s13*s23 + 
                   35*s23^2))) + p2q*p3q*(-45*s12^5 - 39*s12^4*(3*s13 - 
                  2*s23) + 3*s13^2*(43*s13 - 37*s23)*s23^2 + 
                s12^3*(117*s13^2 - 600*s13*s23 + 256*s23^2) + s12*s23*
                 (214*s13^3 + 252*s13^2*s23 - 182*s13*s23^2 - 35*s23^3) + 
                s12^2*(45*s13^3 + 272*s13^2*s23 - 665*s13*s23^2 + 
                  98*s23^3)) + p2q^2*s13*(45*s12^4 + 39*s12^3*(3*s13 - 
                  2*s23) - 3*s13*s23*(6*s13^2 - 31*s13*s23 + 3*s23^2) + 
                s12^2*(-9*s13^2 + 369*s13*s23 + 29*s23^2) + 
                s12*(-9*s13^3 + 133*s13^2*s23 + 451*s13*s23^2 + 
                  152*s23^3)))))/(72*p1q*(p2q + p3q)*s12*s13*s23*(s12 + s23)*
           (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
         (-9*p1q^3*s23*(-11*s12^4 + s12^3*(52*s13 - 22*s23) + 
             20*s13*s23^2*(s13 + s23) + 2*s12*s13*s23*(37*s13 + 47*s23) + 
             s12^2*(63*s13^2 + 126*s13*s23 - 11*s23^2)) + 
           9*(p2q + p3q)*(s12 + s13 + s23)*(p2q^2*s13^2*(29*s12^2 + 54*s12*
                s13 + 41*s12*s23 + 20*s13*s23) - p2q*p3q*s13*(49*s12^3 + 20*
                s13*s23^2 + 3*s12^2*(33*s13 + 34*s23) + s12*s23*(94*s13 + 
                 41*s23)) + p3q^2*s12*(20*s12^3 + 20*s13*s23^2 + s12*s23*
                (56*s13 + 23*s23) + s12^2*(45*s13 + 43*s23))) + 
           p1q^2*(p3q*(-99*s12^5 - 40*s13*s23^3*(s13 + s23) + s12^4*
                (666*s13 + 41*s23) + s12*s23^2*(-229*s13^2 + 100*s13*s23 + 
                 289*s23^2) + s12^3*(-567*s13^2 + 459*s13*s23 + 420*s23^2) + 
               s12^2*s23*(-846*s13^2 + 5*s13*s23 + 569*s23^2)) + 
             p2q*(s12^4*(99*s13 + 140*s23) + 20*s13*s23^2*(18*s13^2 + 
                 25*s13*s23 + 7*s23^2) + s12^3*(-666*s13^2 - 585*s13*s23 + 
                 321*s23^2) + s12*s23*(1152*s13^3 + 1769*s13^2*s23 + 
                 766*s13*s23^2 + 289*s23^3) + s12^2*(567*s13^3 + 495*s13^2*
                  s23 + 14*s13*s23^2 + 470*s23^3))) + 
           p1q*(p3q^2*(81*s12^5 + 140*s13*s23^3*(s13 + s23) + 12*s12^3*s23*
                (219*s13 + 80*s23) + s12^4*(1413*s13 + 581*s23) + s12*s23^2*
                (626*s13^2 + 1135*s13*s23 + 289*s23^2) + s12^2*s23*
                (396*s13^2 + 2282*s13*s23 + 749*s23^2)) - 
             p2q^2*s13*(180*s12^4 + s12^3*(765*s13 + 1022*s23) + 20*s13*s23*
                (9*s13^2 + 25*s13*s23 + 16*s23^2) + s12^2*(-261*s13^2 + 
                 1278*s13*s23 + 1180*s23^2) + s12*(486*s13^3 + 1449*s13^2*
                  s23 + 1841*s13*s23^2 + 658*s23^3)) + 
             p2q*p3q*(180*s12^5 + 19*s12^4*(36*s13 + 41*s23) + 140*s13*s23^2*
                (-s13^2 + s23^2) + s12^3*(-1674*s13^2 + 130*s13*s23 + 
                 1059*s23^2) + s12*s23*(-297*s13^3 - 729*s13^2*s23 + 
                 297*s13*s23^2 + 289*s23^3) + s12^2*(486*s13^3 - 1584*s13^2*
                  s23 - 5*s13*s23^2 + 749*s23^3))))/(144*ep*p1q*(p2q + p3q)*
           s12^2*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
         (-18*p1q^3*s23*(s12 + s23)*(11*s12^4 - 10*s13*s23^2*(s13 + s23) - 
             5*s12*s13*s23*(11*s13 + 13*s23) + s12^3*(-31*s13 + 22*s23) + 
             s12^2*(-42*s13^2 - 86*s13*s23 + 11*s23^2)) - 
           18*(s12 + s13 + s23)*(p2q^3*s13^2*(29*s12^3 - s12^2*
                (s13 - 70*s23) + 10*s13*s23^2 + s12*s23*(21*s13 + 41*s23)) + 
             p3q^3*s12*(s12 + s23)*(20*s12^3 + 10*s13*s23^2 + s12*s23*
                (3*s13 + 23*s23) + s12^2*(-10*s13 + 43*s23)) + 
             p2q*p3q^2*(20*s12^5 - 10*s13^2*s23^3 - s12*s13*s23^2*
                (41*s13 + 31*s23) + s12^4*(-59*s13 + 63*s23) + s12^2*s23*
                (-32*s13^2 - 130*s13*s23 + 23*s23^2) + s12^3*(11*s13^2 - 
                 158*s13*s23 + 66*s23^2)) - p2q^2*p3q*s13*(49*s12^4 + 10*s13*
                s23^2*(-s13 + s23) + s12^3*(-40*s13 + 151*s23) + s12^2*
                (s13^2 - 38*s13*s23 + 143*s23^2) + s12*(-21*s13^2*s23 + 
                 41*s23^3))) + p1q^2*(p3q*(s12 + s23)*(198*s12^5 + 40*s13*
                s23^3*(s13 + s23) - 6*s12^4*(177*s13 + 43*s23) + s12^2*s23*
                (1828*s13^2 - 159*s13*s23 - 1066*s23^2) + s12*s23^2*
                (881*s13^2 + 263*s13*s23 - 578*s23^2) + 4*s12^3*(162*s13^2 - 
                 403*s13*s23 - 236*s23^2)) - p2q*(6*s12^5*(51*s13 + 76*s23) + 
               20*s13*s23^3*(18*s13^2 + 25*s13*s23 + 7*s23^2) + s12^4*
                (-846*s13^2 + 172*s13*s23 + 1202*s23^2) + s12*s23^2*
                (2160*s13^3 + 2589*s13^2*s23 + 867*s13*s23^2 + 578*s23^3) + 
               s12^2*s23*(2340*s13^3 + 1809*s13^2*s23 + 706*s13*s23^2 + 
                 1446*s23^3) + s12^3*(756*s13^3 - 1126*s13^2*s23 - 
                 155*s13*s23^2 + 1614*s23^3))) + 
           p1q*(-(p3q^2*(s12 + s23)*(162*s12^5 + 140*s13*s23^3*(s13 + s23) + 
                6*s12^4*(261*s13 + 235*s23) + 2*s12*s23^2*(149*s13^2 + 
                  548*s13*s23 + 289*s23^2) + s12^2*s23*(-685*s13^2 + 
                  2913*s13*s23 + 1498*s23^2) + s12^3*(-504*s13^2 + 
                  3691*s13*s23 + 2168*s23^2))) - p2q*p3q*(360*s12^6 + 6*s12^5*
                (81*s13 + 361*s23) + 140*s13*s23^3*(-s13^2 + s23^2) + s12^4*
                (-2592*s13^2 - 347*s13*s23 + 4172*s23^2) + s12*s23^2*
                (503*s13^3 - 775*s13^2*s23 - 260*s13*s23^2 + 578*s23^3) + 2*
                s12^3*(549*s13^3 - 3160*s13^2*s23 - 950*s13*s23^2 + 
                 1932*s23^3) + s12^2*s23*(2125*s13^3 - 4119*s13^2*s23 - 
                 1467*s13*s23^2 + 2076*s23^3)) + p2q^2*s13*(360*s12^5 + 12*
                s12^4*(54*s13 + 221*s23) + 20*s13*s23^2*(9*s13^2 + 
                 25*s13*s23 + 16*s23^2) + s12^3*(-1026*s13^2 + 2251*s13*s23 + 
                 4580*s23^2) + s12*s23*(990*s13^3 + 1657*s13^2*s23 + 
                 2203*s13*s23^2 + 1316*s23^3) + s12^2*(594*s13^3 - 
                 469*s13^2*s23 + 3102*s13*s23^2 + 3604*s23^3))))/
          (144*p1q*(p2q + p3q)*s12^2*s13*s23*(s12 + s23)*(-(p2q*s13) + 
            p1q*(s12 + s23) + p3q*(s12 + s23))))*E0 . E0conj + 
       ((ep^2*(9*s12^5 + 18*s12^4*(s13 - s23) + 10*s13^2*s23^3 - 
            s12*s13*s23^2*(10*s13 + 23*s23) + s12^3*(9*s13^2 - 36*s13*s23 - 
              23*s23^2) + s12^2*s23*(-18*s13^2 + 3*s13*s23 + 4*s23^2)))/
          (18*s12^2*s13*s23^2*(s12 + s23)) - 
         ((s12 + s13 + s23)*(9*p1q^6*s12*s23^2*(11*s12^3 + 74*s12*s13*s23 + 
              20*s13*s23^2 + s12^2*(45*s13 + 11*s23)) - 9*(p2q + p3q)*
             (p3q*s12 - p2q*s13)^2*(-(p3q^3*s12*(20*s12^3 + 20*s13*s23^2 + 
                 s12*s23*(74*s13 + s23) + 3*s12^2*(15*s13 + 7*s23))) + 
              p2q^3*s13*(29*s12^3 + 40*s13^2*(s13 - s23) + s12^2*(134*s13 + 
                  s23) + 4*s12*s13*(-7*s13 + 12*s23)) + p2q*p3q^2*(4*s12^4 + 
                4*s12*s13*(25*s13 - 17*s23)*s23 + 40*s13^2*s23^2 + 
                s12^3*(-125*s13 + 2*s23) + s12^2*(94*s13^2 - 203*s13*s23 - 
                  2*s23^2)) - p2q^2*p3q*(20*s12^4 + 40*s13^2*(2*s13 - s23)*
                 s23 + 21*s12^3*(7*s13 + s23) + s12^2*(-164*s13^2 + 
                  180*s13*s23 + s23^2) + 8*s12*s13*(10*s13^2 - 17*s13*s23 + 
                  6*s23^2))) + p1q*(p3q^5*s12^2*(837*s12^4 + 2*s12^3*
                 (585*s13 - 214*s23) + s12^2*(1237*s13 - 2007*s23)*s23 - 
                40*s13*s23^3 - 2*s12*s23^2*(306*s13 + 335*s23)) + 
              p2q^5*s13^2*(180*s12^4 + 783*s12^3*(s13 + s23) + 
                s12^2*(-2070*s13^2 + 5315*s13*s23 + 27*s23^2) - 
                40*s13^2*(9*s13^2 - 45*s13*s23 + 35*s23^2) + 4*s12*s13*
                 (243*s13^2 - 460*s13*s23 + 487*s23^2)) + p2q*p3q^4*s12*(
                666*s12^5 + s12^4*(1413*s13 - 1351*s23) - 280*s13^2*s23^3 + 
                2*s12*s13*s23^2*(-1186*s13 + 171*s23) + s12^3*(-4266*s13^2 + 
                  3893*s13*s23 - 3591*s23^2) - 2*s12^2*s23*(2634*s13^2 - 
                  587*s13*s23 + 679*s23^2)) + p2q^2*p3q^3*(729*s12^6 + 
                4*s12*s13^2*(970*s13 - 519*s23)*s23^2 + 1040*s13^3*s23^3 + 
                s12^5*(2556*s13 + 22*s23) + s12^4*(-8757*s13^2 + 6343*s13*
                   s23 - 1629*s23^2) + 3*s12^2*s13*s23*(2725*s13^2 - 
                  3609*s13*s23 + 262*s23^2) + 2*s12^3*(3231*s13^3 - 
                  8097*s13^2*s23 + 1885*s13*s23^2 - 353*s23^3)) - 
              p2q^4*p3q*s13*(360*s12^5 + 9*s12^4*(93*s13 + 40*s23) - 
                80*s13^2*s23*(27*s13^2 - 53*s13*s23 + 13*s23^2) + 
                s12^3*(-8028*s13^2 + 6108*s13*s23 + 378*s23^2) - 
                4*s12*s13*(540*s13^3 - 1748*s13^2*s23 + 1836*s13*s23^2 - 
                  379*s23^3) + s12^2*(5364*s13^3 - 16105*s13^2*s23 + 
                  6425*s13*s23^2 + 18*s23^3)) + p2q^3*p3q^2*(180*s12^6 - 
                9*s12^5*(75*s13 + 11*s23) + 40*s13^3*s23^2*(-71*s13 + 
                  52*s23) + s12^4*(-9180*s13^2 + 771*s13*s23 - 369*s23^2) - 
                4*s12*s13^2*s23*(1495*s13^2 - 2319*s13*s23 + 828*s23^2) + 
                s12^3*(10899*s13^3 - 19905*s13^2*s23 + 1282*s13*s23^2 - 
                  18*s23^3) + s12^2*s13*(-5166*s13^3 + 17921*s13^2*s23 - 
                  14907*s13*s23^2 + 386*s23^3))) + 
            p1q^4*(-(p2q*p3q*(120*s13*(17*s13 - 8*s23)*s23^4 + 18*s12^5*
                  (11*s13 + 14*s23) + s12^4*(810*s13^2 + 3132*s13*s23 - 
                   2710*s23^2) + s12^3*s23*(1350*s13^2 - 128*s13*s23 - 
                   885*s23^2) + 4*s12*s23^3*(775*s13^2 - 923*s13*s23 + 
                   489*s23^2) + s12^2*s23^2*(3968*s13^2 - 8261*s13*s23 + 
                   4465*s23^2))) + p2q^2*(-36*s12^5*s23 + 80*s13*s23^3*
                 (18*s13^2 - 21*s13*s23 + 4*s23^2) + 9*s12^4*(11*s13^2 - 
                  28*s13*s23 + 21*s23^2) + s12^2*s23*(2358*s13^3 - 
                  4868*s13^2*s23 + 7659*s13*s23^2 - 1926*s23^3) + 
                s12^3*(405*s13^3 - 1593*s13^2*s23 + 3628*s13*s23^2 - 
                  905*s23^3) + 4*s12*s23^2*(675*s13^3 - 847*s13^2*s23 + 
                  750*s13*s23^2 - 163*s23^3)) + p3q^2*(99*s12^6 + 
                27*s12^5*(15*s13 - 53*s23) + s12^2*(710*s13 - 2539*s23)*
                 s23^3 + 8*s12*(55*s13 - 163*s23)*s23^4 + 640*s13*s23^5 + 
                s12^4*s23*(-1368*s13 + 1675*s23) + s12^3*(-2690*s13*s23^2 + 
                  2258*s23^3))) + p1q^2*(p3q^4*s12*(1395*s12^5 + 
                2*s12^4*(765*s13 - 977*s23) + s12^3*(728*s13 - 2519*s23)*
                 s23 - 460*s13*s23^4 + s12*s23^3*(-134*s13 + 1313*s23) + 
                s12^2*s23^2*(-2303*s13 + 2431*s23)) + p2q*p3q^3*(864*s12^6 - 
                1000*s13^2*s23^4 + 4*s12*s13*s23^3*(-205*s13 + 204*s23) - 
                3*s12^5*(78*s13 + 803*s23) - 7*s12^4*(666*s13^2 - 
                  103*s13*s23 + 109*s23^2) + 5*s12^2*s23^2*(-622*s13^2 + 
                  775*s13*s23 + 527*s23^2) + s12^3*s23*(-4772*s13^2 - 
                  732*s13*s23 + 5865*s23^2)) + p2q^4*s13*(45*s12^4*
                 (13*s13 - 8*s23) + s12^3*(1638*s13^2 - 2399*s13*s23 - 
                  783*s23^2) + 40*s13^2*s23*(36*s13^2 - 89*s13*s23 + 
                  51*s23^2) + 4*s12*s13*(180*s13^3 - 937*s13^2*s23 + 
                  1155*s13*s23^2 - 813*s23^3) - s12^2*(1710*s13^3 - 
                  7965*s13^2*s23 + 8938*s13*s23^2 + 27*s23^3)) + 
              p2q^2*p3q^2*(909*s12^6 + 80*s13^2*(52*s13 - 25*s23)*s23^3 + 
                s12^5*(234*s13 + 157*s23) + s12^4*(-5103*s13^2 + 651*s13*
                   s23 + 622*s23^2) + 4*s12*s13*s23^2*(1620*s13^2 - 
                  1811*s13*s23 + 753*s23^2) + s12^2*s23*(8584*s13^3 - 
                  19949*s13^2*s23 + 8581*s13*s23^2 + 1331*s23^3) + 
                s12^3*(5778*s13^3 - 14196*s13^2*s23 + 2282*s13*s23^2 + 
                  3281*s23^3)) - p2q^3*p3q*(18*s12^5*(83*s13 + 20*s23) + 
                40*s13^2*s23^2*(116*s13^2 - 155*s13*s23 + 25*s23^2) + 
                2*s12^4*(1368*s13^2 + 967*s13*s23 + 171*s23^2) + 
                4*s12*s13*s23*(1495*s13^3 - 2784*s13^2*s23 + 2419*s13*s23^2 - 
                  434*s23^3) - 3*s12^3*(1884*s13^3 - 4781*s13^2*s23 + 
                  108*s13*s23^2 + 57*s23^3) + s12^2*(3366*s13^4 - 14497*s13^3*
                   s23 + 26353*s13^2*s23^2 - 4545*s13*s23^3 - 9*s23^4))) + 
            p1q^3*(p2q*p3q^2*(342*s12^6 + 40*s13*s23^4*(-67*s13 + 16*s23) - 
                s12^5*(513*s13 + 1139*s23) + s12^2*s23^2*(-3248*s13^2 + 
                  10233*s13*s23 + 87*s23^2) - 4*s12*s23^3*(595*s13^2 - 
                  929*s13*s23 + 326*s23^2) + s12^4*(-2862*s13^2 - 
                  3649*s13*s23 + 5367*s23^2) + s12^3*s23*(-2276*s13^2 - 
                  1463*s13*s23 + 9103*s23^2)) + p2q^2*p3q*(324*s12^6 + 
                s12^5*(-360*s13 + 342*s23) + 80*s13*s23^3*(57*s13^2 - 
                  50*s13*s23 + 4*s23^2) + s12^4*(-1161*s13^2 - 1934*s13*s23 + 
                  2611*s23^2) + s12^2*s23*(5953*s13^3 - 15317*s13^2*s23 + 
                  18059*s13*s23^2 - 595*s23^3) + 4*s12*s23^2*(1550*s13^3 - 
                  2219*s13^2*s23 + 1666*s13*s23^2 - 163*s23^3) + 
                s12^3*(2538*s13^3 - 4684*s13^2*s23 + 6186*s13*s23^2 + 
                  3154*s23^3)) + p3q^3*(837*s12^6 + 10*s12^5*(117*s13 - 
                  257*s23) + 320*s13*s23^5 - 4*s12*s23^4*(140*s13 + 
                  163*s23) + s12^2*s23^3*(-99*s13 + 691*s23) + s12^4*s23*
                 (-401*s13 + 776*s23) + s12^3*(-3328*s13*s23^2 + 
                  5958*s23^3)) + p2q^3*(-324*s12^5*s13 + 18*s12^4*
                 (s13^2 - 47*s13*s23 + 10*s23^2) - 120*s13^2*s23^2*
                 (18*s13^2 - 29*s13*s23 + 11*s23^2) - 4*s12*s13*s23*
                 (585*s13^3 - 1343*s13^2*s23 + 1345*s13*s23^2 - 597*s23^3) + 
                s12^3*(837*s13^3 - 4271*s13^2*s23 + 2521*s13*s23^2 + 
                  261*s23^3) + s12^2*(-846*s13^4 + 4999*s13^3*s23 - 
                  11637*s13^2*s23^2 + 6755*s13*s23^3 + 9*s23^4))) - 
            p1q^5*s23*(p2q*(198*s12^4*(s13 - s23) + 40*s13*(9*s13 - 8*s23)*
                 s23^3 + 4*s12*s23^2*(315*s13^2 - 198*s13*s23 + 163*s23^2) + 
                s12^3*(810*s13^2 - 657*s13*s23 + 995*s23^2) + s12^2*s23*
                 (2178*s13^2 - 1579*s13*s23 + 1917*s23^2)) + p3q*(198*s12^5 + 
                45*s12^4*(18*s13 - 11*s23) - 320*s13*s23^4 + 4*s12^3*s23*
                 (117*s13 + 125*s23) + s12^2*s23^2*(-1381*s13 + 1917*s23) + 
                s12*(-720*s13*s23^3 + 652*s23^4)))))/(72*ep*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12^3*s13*s23*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))) + (18*p1q^6*s12*s23^3*(s12 + s23)^2*
            (11*s12^4 + s12^3*(s13 - 2*s23) + 20*s13*s23^2*(s13 + s23) + 
             s12^2*(-10*s13^2 + 8*s13*s23 - 37*s23^2) + 
             s12*s23*(31*s13^2 + 27*s13*s23 - 24*s23^2)) - 
           18*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*
            (-(p3q^3*s12*(s12 + s23)^2*(20*s12^3 + s12*(31*s13 - 23*s23)*
                 s23 + 20*s13*s23^2 - s12^2*(10*s13 + 3*s23))) + 
             p2q*p3q^2*(s12 + s23)*(28*s12^5 + 18*s12*s13*(5*s13 - 2*s23)*
                s23^2 + 30*s13^2*s23^3 + s12^4*(11*s13 + 78*s23) - s12^3*
                (s13^2 + 72*s13*s23 - 72*s23^2) + s12^2*s23*(71*s13^2 - 
                 119*s13*s23 + 22*s23^2)) - p2q^2*p3q*(s12 + s23)*
              (20*s12^5 + 30*s13^2*(2*s13 - s23)*s23^2 + s12^4*(140*s13 + 
                 41*s23) + s12^2*s23*(-78*s13^2 + 155*s13*s23 + s23^2) + 4*
                s12*s13*s23*(20*s13^2 - 23*s13*s23 + 4*s23^2) + s12^3*
                (-2*s13^2 + 279*s13*s23 + 22*s23^2)) + p2q^3*s13*
              (29*s12^5 + 30*s13^2*(s13 - s23)*s23^2 + s12^4*(103*s13 + 
                 59*s23) + s12^2*s23*(-18*s13^2 + 133*s13*s23 + s23^2) + 8*
                s12*s13*s23*(5*s13^2 - 7*s13*s23 + 2*s23^2) + s12^3*
                (-2*s13^2 + 220*s13*s23 + 31*s23^2))) - 
           p1q^5*s23^2*(s12 + s23)*(p3q*(504*s12^7 + 18*s12^6*(14*s13 - 
                 93*s23) - 460*s13*s23^5*(s13 + s23) + s12^4*s23*
                (1494*s13^2 - 2585*s13*s23 - 2730*s23^2) + 4*s12*s23^4*
                (-350*s13^2 - 308*s13*s23 + 137*s23^2) - 18*s12^5*
                (14*s13^2 + 52*s13*s23 + 347*s23^2) + s12^2*s23^3*
                (-2233*s13^2 - 345*s13*s23 + 3820*s23^2) + s12^3*s23^2*
                (133*s13^2 - 970*s13*s23 + 4610*s23^2)) + 
             p2q*(108*s12^7 + 36*s12^6*(17*s13 - 16*s23) + 18*s12^5*
                (8*s13^2 - s13*s23 - 80*s23^2) + 20*s13*s23^4*(27*s13^2 + 
                 4*s13*s23 - 23*s23^2) - 5*s12^4*(72*s13^3 - 108*s13^2*s23 + 
                 823*s13*s23^2 - 228*s23^3) + 4*s12*s23^3*(585*s13^3 + 
                 478*s13^2*s23 - 200*s13*s23^2 + 137*s23^3) + s12^2*s23^2*
                (3114*s13^3 + 2231*s13^2*s23 - 1767*s13*s23^2 + 2956*s23^3) + 
               s12^3*s23*(738*s13^3 + 475*s13^2*s23 - 4912*s13*s23^2 + 
                 4304*s23^3))) - 2*p1q^4*s23*(-(p3q^2*(s12 + s23)*(
                207*s12^8 + 9*s12^7*(25*s13 - 233*s23) + 460*s13*s23^6*
                 (s13 + s23) + s12^2*s23^4*(635*s13^2 - 1031*s13*s23 - 
                  2858*s23^2) + s12^3*s23^3*(-1763*s13^2 + 346*s13*s23 - 
                  1060*s23^2) + 9*s12^6*(2*s13^2 - 198*s13*s23 - 451*s23^2) + 
                4*s12*s23^5*(145*s13^2 + 103*s13*s23 - 137*s23^2) + 
                s12^5*s23*(504*s13^2 - 3827*s13*s23 + 2013*s23^2) + 
                s12^4*s23^2*(-2432*s13^2 - 491*s13*s23 + 5018*s23^2))) + 
             p2q*p3q*(-108*s12^9 - 18*s12^8*(7*s13 - 31*s23) - 9*s12^7*
                (34*s13^2 - 259*s13*s23 - 142*s23^2) + 30*s13*s23^6*
                (50*s13^2 + 27*s13*s23 - 23*s23^2) + s12^5*s23*(-693*s13^3 + 
                 7078*s13^2*s23 + 5805*s13*s23^2 - 4850*s23^3) + s12^6*
                (-288*s13^3 + 702*s13^2*s23 + 8966*s13*s23^2 - 2220*s23^3) + 
               2*s12*s23^5*(2270*s13^3 + 1708*s13^2*s23 - 1126*s13*s23^2 + 
                 411*s23^3) + s12^4*s23^2*(1100*s13^3 + 8659*s13^2*s23 - 
                 9595*s13*s23^2 + 1734*s23^3) + s12^2*s23^4*(6536*s13^3 + 
                 2795*s13^2*s23 - 6695*s13*s23^2 + 4744*s23^3) + s12^3*s23^3*
                (5161*s13^3 + 2778*s13^2*s23 - 14024*s13*s23^2 + 
                 7674*s23^3)) + p2q^2*(-18*s12^8*(6*s13 - 13*s23) - 9*s12^7*
                (35*s13^2 - 52*s13*s23 - 68*s23^2) - 9*s12^6*(13*s13^3 + 
                 39*s13^2*s23 - 101*s13*s23^2 - 30*s23^3) + 10*s13*s23^5*
                (-108*s13^3 + 15*s13^2*s23 + 100*s13*s23^2 - 23*s23^3) + 2*
                s12*s23^4*(-1800*s13^4 - 547*s13^3*s23 + 1598*s13^2*s23^2 - 
                 708*s13*s23^3 + 137*s23^4) + s12^5*(90*s13^4 - 477*s13^3*
                  s23 + 2144*s13^2*s23^2 - 5173*s13*s23^3 + 210*s23^4) + 
               s12^2*s23^3*(-4257*s13^4 - 1699*s13^3*s23 + 3308*s13^2*s23^2 - 
                 6504*s13*s23^3 + 1554*s23^4) + s12^4*s23*(-81*s13^4 + 
                 308*s13^3*s23 + 4077*s13^2*s23^2 - 15023*s13*s23^3 + 
                 1894*s23^4) + s12^3*s23^2*(-1908*s13^4 + 373*s13^3*s23 + 
                 3009*s13^2*s23^2 - 14835*s13*s23^3 + 2856*s23^4))) + 
           p1q*(-(p3q^5*s12^2*(s12 + s23)*(108*s12^7 + 36*s12^6*(6*s13 - 
                  55*s23) + 260*s13*s23^5*(s13 + s23) + s12^4*s23*
                 (108*s13^2 - 5897*s13*s23 - 822*s23^2) + 18*s12^5*
                 (6*s13^2 - 104*s13*s23 - 257*s23^2) + 4*s12*s23^4*
                 (109*s13^2 + 124*s13*s23 - 70*s23^2) + s12^2*s23^3*
                 (-2827*s13^2 - 597*s13*s23 + 1498*s23^2) + s12^3*s23^2*
                 (-3323*s13^2 - 4642*s13*s23 + 3494*s23^2))) - 
             p2q*p3q^4*s12*(216*s12^9 + 108*s12^8*(s13 - 4*s23) + 560*s13^2*
                s23^6*(s13 + s23) + 4*s12*s13*s23^5*(1009*s13^2 + 
                 902*s13*s23 - 207*s23^2) - 18*s12^7*(24*s13^2 - 
                 275*s13*s23 + 155*s23^2) + s12^6*(-324*s13^3 + 5184*s13^2*
                  s23 + 9833*s13*s23^2 - 2076*s23^3) + 2*s12^2*s23^4*
                (6277*s13^3 + 5625*s13^2*s23 - 3130*s13*s23^2 - 262*s23^3) + 
               s12^3*s23^3*(17638*s13^3 + 18209*s13^2*s23 - 16733*s13*s23^2 - 
                 30*s23^3) + s12^5*s23*(-198*s13^3 + 15797*s13^2*s23 - 
                 1449*s13*s23^2 + 2428*s23^3) + s12^4*s23^2*(9006*s13^3 + 
                 20188*s13^2*s23 - 17741*s13*s23^2 + 2856*s23^3)) + 
             p2q^5*s13^2*(36*s12^7*(3*s13 + 10*s23) + 18*s12^6*(12*s13^2 + 
                 83*s13*s23 + 151*s23^2) + 20*s13^2*s23^3*(-27*s13^3 + 
                 108*s13^2*s23 + 31*s13*s23^2 - 104*s23^3) + 9*s12^5*
                (12*s13^3 - 116*s13^2*s23 + 1297*s13*s23^2 + 672*s23^3) + 
               s12^4*s23*(-2142*s13^3 + 7*s13^2*s23 + 27411*s13*s23^2 + 
                 5436*s23^3) - 4*s12*s13*s23^2*(180*s13^4 - 927*s13^3*s23 - 
                 802*s13^2*s23^2 + 1262*s13*s23^3 - 353*s23^4) + s12^2*s23^2*
                (1044*s13^4 + 1358*s13^3*s23 - 345*s13^2*s23^2 + 10939*s13*
                  s23^3 + 54*s23^4) + s12^3*s23*(36*s13^4 - 4160*s13^3*s23 + 
                 3890*s13^2*s23^2 + 26651*s13*s23^3 + 1800*s23^4)) + 
             p2q^2*p3q^3*(-108*s12^10 + 1540*s13^3*s23^6*(s13 + s23) + 72*
                s12^9*(6*s13 + 11*s23) + 4*s12*s13^2*s23^5*(2045*s13^2 + 
                 1849*s13*s23 - 561*s23^2) + 18*s12^8*(48*s13^2 + 
                 186*s13*s23 + 293*s23^2) + s12^7*s23*(7092*s13^2 + 
                 14987*s13*s23 + 10416*s23^2) + s12^2*s13*s23^4*
                (20131*s13^3 + 12817*s13^2*s23 - 14762*s13*s23^2 + 
                 2400*s23^3) + s12^3*s23^3*(25862*s13^4 + 9657*s13^3*s23 - 
                 40874*s13^2*s23^2 + 12844*s13*s23^3 + 208*s23^4) + s12^4*
                s23^2*(13587*s13^4 + 4887*s13^3*s23 - 52765*s13^2*s23^2 + 
                 30859*s13*s23^3 + 1050*s23^4) + s12^5*s23*(252*s13^4 + 
                 6339*s13^3*s23 - 26012*s13^2*s23^2 + 42373*s13*s23^3 + 
                 4152*s23^4) + s12^6*(-324*s13^4 + 4788*s13^3*s23 + 
                 4625*s13^2*s23^2 + 34029*s13*s23^3 + 9352*s23^4)) - 
             p2q^4*p3q*s13*(36*s12^8*(9*s13 + 20*s23) + 36*s12^7*
                (12*s13^2 + 61*s13*s23 + 84*s23^2) - 36*s12^6*(3*s13^3 + 
                 175*s13^2*s23 - 295*s13*s23^2 - 153*s23^3) - 20*s13^2*s23^4*
                (162*s13^3 - 154*s13^2*s23 - 239*s13*s23^2 + 77*s23^3) - 3*
                s12^5*(72*s13^4 + 2364*s13^3*s23 + 10427*s13^2*s23^2 - 
                 10278*s13*s23^3 - 1872*s23^4) + 4*s12*s13*s23^3*
                (-1890*s13^4 + 1762*s13^3*s23 + 3683*s13^2*s23^2 - 
                 2403*s13*s23^3 + 281*s23^4) + s12^3*s23^2*(5656*s13^4 - 
                 12834*s13^3*s23 - 47891*s13^2*s23^2 + 34142*s13*s23^3 + 
                 864*s23^4) + s12^4*s23*(684*s13^4 - 19505*s13^3*s23 - 
                 53585*s13^2*s23^2 + 46038*s13*s23^3 + 3240*s23^4) + s12^2*
                s23^2*(-4320*s13^5 + 7724*s13^4*s23 + 9359*s13^3*s23^2 - 
                 26927*s13^2*s23^3 + 11314*s13*s23^4 + 36*s23^5)) + 
             p2q^3*p3q^2*(36*s12^9*(9*s13 + 10*s23) + 18*s12^8*s23*
                (-5*s13 + 53*s23) - 40*s13^3*s23^5*(106*s13^2 + 29*s13*s23 - 
                 77*s23^2) - 9*s12^7*(96*s13^3 + 1004*s13^2*s23 + 
                 631*s13*s23^2 + 4*s23^3) - 4*s12*s13^2*s23^4*(3680*s13^3 + 
                 709*s13^2*s23 - 4039*s13*s23^2 + 702*s23^3) - 3*s12^6*
                (144*s13^4 + 2988*s13^3*s23 + 16787*s13^2*s23^2 + 
                 4275*s13*s23^3 + 756*s23^4) + s12^2*s13*s23^3*
                (-20026*s13^4 + 1361*s13^3*s23 + 30213*s13^2*s23^2 - 
                 22782*s13*s23^3 + 1276*s23^4) + s12^5*(108*s13^5 - 
                 612*s13^4*s23 - 18039*s13^3*s23^2 - 108844*s13^2*s23^3 - 
                 8829*s13*s23^4 - 2448*s23^5) + s12^3*s23^2*(-10748*s13^5 + 
                 9426*s13^4*s23 + 22031*s13^3*s23^2 - 72850*s13^2*s23^3 + 
                 4316*s13*s23^4 - 36*s23^5) - s12^4*s23*(234*s13^5 - 
                 6949*s13^4*s23 + 4725*s13^3*s23^2 + 120395*s13^2*s23^3 - 
                 1771*s13*s23^4 + 846*s23^5))) - 2*p1q^2*
            (p3q^4*s12*(s12 + s23)*(108*s12^8 + 54*s12^7*(4*s13 - 35*s23) + 
               280*s13*s23^6*(s13 + s23) + s12^2*s23^4*(2039*s13^2 + 
                 364*s13*s23 - 2561*s23^2) + s12^3*s23^3*(-242*s13^2 + 
                 2398*s13*s23 - 1843*s23^2) + s12*s23^5*(481*s13^2 + 
                 340*s13*s23 - 341*s23^2) + 18*s12^6*(6*s13^2 - 115*s13*s23 - 
                 182*s23^2) + 2*s12^5*s23*(-90*s13^2 - 2305*s13*s23 + 
                 903*s23^2) + s12^4*s23^2*(-3008*s13^2 - 230*s13*s23 + 
                 3461*s23^2)) + p2q*p3q^3*(162*s12^10 + 54*s12^9*
                (s13 - 15*s23) + 730*s13^2*s23^7*(s13 + s23) + 2*s12*s13*
                s23^6*(890*s13^2 + 1149*s13*s23 - 66*s23^2) - 9*s12^8*
                (42*s13^2 - 339*s13*s23 + 400*s23^2) + s12^5*s23^2*
                (4730*s13^3 + 16968*s13^2*s23 - 1625*s13*s23^2 - 
                 9934*s23^3) + 2*s12^4*s23^3*(4429*s13^3 + 7316*s13^2*s23 - 
                 6576*s13*s23^2 - 5847*s23^3) + s12^6*s23*(-279*s13^3 + 
                 11477*s13^2*s23 + 7594*s13*s23^2 - 4329*s23^3) + s12^7*
                (-270*s13^3 + 3582*s13^2*s23 + 7953*s13*s23^2 - 4032*s23^3) + 
               2*s12^3*s23^4*(3471*s13^3 + 2664*s13^2*s23 - 6511*s13*s23^2 - 
                 2688*s23^3) + s12^2*s23^5*(3393*s13^3 + 1715*s13^2*s23 - 
                 4265*s13*s23^2 - 691*s23^3)) + p2q^2*p3q^2*(54*s12^10 - 90*
                s12^9*(3*s13 + 10*s23) - 20*s13^2*s23^6*(154*s13^2 + 
                 81*s13*s23 - 73*s23^2) - 9*s12^8*(54*s13^2 + 107*s13*s23 + 
                 494*s23^2) + s12^7*(54*s13^3 - 3258*s13^2*s23 - 
                 775*s13*s23^2 - 7512*s23^3) - 2*s12*s13*s23^5*(4560*s13^3 + 
                 3301*s13^2*s23 - 2817*s13*s23^2 + 552*s23^3) + s12^6*
                (216*s13^4 - 2961*s13^3*s23 - 2073*s13^2*s23^2 + 
                 1133*s13*s23^3 - 6941*s23^4) + s12^5*s23*(234*s13^4 - 
                 8286*s13^3*s23 + 14533*s13^2*s23^2 - 5196*s13*s23^3 - 
                 5936*s23^4) - s12^2*s23^4*(13692*s13^4 + 6873*s13^3*s23 - 
                 12663*s13^2*s23^2 + 9793*s13*s23^3 + 359*s23^4) - s12^3*
                s23^3*(14262*s13^4 + 5076*s13^3*s23 - 25833*s13^2*s23^2 + 
                 23559*s13*s23^3 + 2348*s23^4) - s12^4*s23^2*(6592*s13^4 + 
                 9256*s13^3*s23 - 31178*s13^2*s23^2 + 21281*s13*s23^3 + 
                 5004*s23^4)) + p2q^4*s13*(54*s12^8*s13 + 18*s12^7*
                (3*s13^2 - 20*s13*s23 + 20*s23^2) - 9*s12^6*(6*s13^3 + 
                 119*s13^2*s23 + 52*s13*s23^2 - 215*s23^3) - 20*s13^2*s23^4*
                (54*s13^3 - 79*s13^2*s23 - 58*s13*s23^2 + 75*s23^3) + 2*s12*
                s13*s23^3*(-990*s13^4 + 1493*s13^3*s23 + 2383*s13^2*s23^2 - 
                 2013*s13*s23^3 + 627*s23^4) + s12^3*s23^2*(910*s13^4 - 
                 5454*s13^3*s23 - 9139*s13^2*s23^2 + 19067*s13*s23^3 + 
                 936*s23^4) + s12^4*s23*(153*s13^4 - 4095*s13^3*s23 - 
                 12695*s13^2*s23^2 + 18235*s13*s23^3 + 3006*s23^4) + s12^5*
                (-54*s13^4 - 558*s13^3*s23 - 7093*s13^2*s23^2 + 6303*s13*
                  s23^3 + 3672*s23^4) + s12^2*s23^2*(-720*s13^5 + 
                 1679*s13^4*s23 + 2153*s13^3*s23^2 - 4938*s13^2*s23^3 + 
                 8443*s13*s23^4 + 27*s23^5)) + p2q^3*p3q*(-108*s12^9*s13 + 18*
                s12^8*(3*s13^2 + 70*s13*s23 + 20*s23^2) + 10*s13^2*s23^5*
                (347*s13^3 - 111*s13^2*s23 - 385*s13*s23^2 + 73*s23^3) + 18*
                s12^7*(21*s13^3 + 158*s13^2*s23 + 423*s13*s23^2 + 83*s23^3) + 
               2*s12*s13*s23^4*(4580*s13^4 - 71*s13^3*s23 - 6060*s13^2*
                  s23^2 + 2435*s13*s23^3 - 346*s23^4) + s12^6*(162*s13^4 + 
                 2547*s13^3*s23 + 14996*s13^2*s23^2 + 14772*s13*s23^3 + 
                 2151*s23^4) + s12^4*s23*(117*s13^5 - 1525*s13^4*s23 + 
                 1573*s13^3*s23^2 + 60806*s13^2*s23^3 - 4323*s13*s23^4 - 
                 126*s23^5) - s12^2*s23^3*(-8663*s13^5 + 91*s13^4*s23 + 
                 9408*s13^3*s23^2 - 21610*s13^2*s23^3 + 4881*s13*s23^4 + 
                 9*s23^5) - s12^3*s23^2*(-3574*s13^5 + 4092*s13^4*s23 + 
                 97*s13^3*s23^2 - 50408*s13^2*s23^3 + 9977*s13*s23^4 + 
                 198*s23^5) + s12^5*(-54*s13^5 + 1080*s13^4*s23 + 
                 3021*s13^3*s23^2 + 40074*s13^2*s23^3 + 9991*s13*s23^4 + 
                 1080*s23^5))) + p1q^3*(-(p3q^3*(s12 + s23)*(108*s12^9 + 
                18*s12^8*(12*s13 - 143*s23) - 460*s13*s23^7*(s13 + s23) + 
                s12^4*s23^3*(4975*s13^2 + 7934*s13*s23 - 11374*s23^2) + 
                18*s12^7*(6*s13^2 - 161*s13*s23 + 61*s23^2) + 4*s12*s23^6*
                 (110*s13^2 + 152*s13*s23 + 137*s23^2) + s12^2*s23^5*
                 (747*s13^2 + 1981*s13*s23 + 1646*s23^2) - 3*s12^3*s23^4*
                 (-2099*s13^2 + 160*s13*s23 + 2078*s23^2) + s12^5*s23^2*
                 (-3827*s13^2 + 11926*s13*s23 + 6368*s23^2) + s12^6*s23*
                 (-324*s13^2 - 515*s13*s23 + 14190*s23^2))) - 
             p2q*p3q^2*(108*s12^10 - 1260*s12^9*s23 + 40*s13*s23^7*
                (98*s13^2 + 75*s13*s23 - 23*s23^2) - 36*s12^8*(9*s13^2 - 
                 46*s13*s23 + 56*s23^2) + 2*s12^5*s23^2*(542*s13^3 + 
                 13088*s13^2*s23 + 8259*s13*s23^2 - 14370*s23^3) + 2*s12^4*
                s23^3*(3695*s13^3 + 14732*s13^2*s23 - 14781*s13*s23^2 - 
                 12262*s23^3) + s12^6*s23*(-1314*s13^3 + 7733*s13^2*s23 + 
                 26685*s13*s23^2 - 8074*s23^3) + s12^3*s23^4*(12516*s13^3 + 
                 5694*s13^2*s23 - 43745*s13*s23^2 - 2140*s23^3) + 4*s12*s23^6*
                (2300*s13^3 + 2219*s13^2*s23 - 877*s13*s23^2 + 274*s23^3) + 
               s12^7*(-216*s13^3 + 1602*s13^2*s23 + 10015*s13*s23^2 + 
                 1140*s23^3) + 3*s12^2*s23^5*(3876*s13^3 + 825*s13^2*s23 - 
                 6193*s13*s23^2 + 1534*s23^3)) + p2q^2*p3q*(216*s12^9*
                (s13 + 4*s23) + 36*s12^8*(9*s13^2 + 26*s13*s23 + 67*s23^2) + 
               18*s12^7*s23*(133*s13^2 - 226*s13*s23 + 116*s23^2) + 20*s13*
                s23^6*(339*s13^3 + 47*s13^2*s23 - 269*s13*s23^2 + 23*s23^3) + 
               s12^2*s23^4*(22445*s13^4 + 9391*s13^3*s23 - 18181*s13^2*
                  s23^2 + 33499*s13*s23^3 - 2390*s23^4) - 2*s12^6*
                (54*s13^4 - 603*s13^3*s23 - 1096*s13^2*s23^2 + 7772*s13*
                  s23^3 - 1653*s23^4) + s12^3*s23^3*(16090*s13^4 + 
                 4753*s13^3*s23 - 24166*s13^2*s23^2 + 73997*s13*s23^3 - 
                 1008*s23^4) + 4*s12*s23^5*(4675*s13^4 + 2139*s13^3*s23 - 
                 4032*s13^2*s23^2 + 1397*s13*s23^3 - 137*s23^4) + s12^4*s23^2*
                (3917*s13^4 + 11519*s13^3*s23 - 32065*s13^2*s23^2 + 
                 62085*s13*s23^3 + 5872*s23^4) + s12^5*s23*(-1116*s13^4 + 
                 8467*s13^3*s23 - 15210*s13^2*s23^2 + 5703*s13*s23^3 + 
                 7804*s23^4)) - p2q^3*(108*s12^8*s13*(s13 + 4*s23) + 36*s12^7*
                (6*s13^3 + 13*s13^2*s23 + 77*s13*s23^2 - 10*s23^3) + 120*
                s13^2*s23^5*(27*s13^3 - 16*s13^2*s23 - 27*s13*s23^2 + 
                 16*s23^3) + s12^5*s23*(558*s13^4 + 601*s13^3*s23 + 
                 25192*s13^2*s23^2 - 2289*s13*s23^3 - 2880*s23^4) + 4*s12*s13*
                s23^4*(1980*s13^4 - 607*s13^3*s23 - 2927*s13^2*s23^2 + 
                 1637*s13*s23^3 - 483*s23^4) + 18*s12^6*(6*s13^4 + 
                 34*s13^3*s23 + 268*s13^2*s23^2 + 297*s13*s23^3 - 93*s23^4) + 
               s12^3*s23^2*(1260*s13^5 - 3760*s13^4*s23 + 5915*s13^3*s23^2 + 
                 40978*s13^2*s23^3 - 24107*s13*s23^4 - 648*s23^5) - s12^2*
                s23^3*(-5778*s13^5 + 1853*s13^4*s23 + 7825*s13^3*s23^2 - 
                 17973*s13^2*s23^3 + 11755*s13*s23^4 + 18*s23^5) - s12^4*s23*
                (18*s13^5 + 1145*s13^4*s23 - 5157*s13^3*s23^2 - 48361*s13^2*
                  s23^3 + 19579*s13*s23^4 + 2196*s23^5))))/
          (72*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)^2*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (ep*(9*p1q^6*s12*s23^3*(s12 + s23)^2*(5*s12^4 - 10*s13*s23^2*(s13 + 
                s23) + 2*s12^3*(3*s13 + s23) - 2*s12*s23^2*(9*s13 + 4*s23) + 
              s12^2*(s13^2 - 2*s13*s23 - 11*s23^2)) + 9*(p2q + p3q)*
             (p3q*s12 - p2q*s13)^2*s23*(s12 + s23)*(s12 + s13 + s23)*
             (p3q^3*s12*(s12 + s23)*(5*s12^3 + s12^2*(s13 - 3*s23) - 
                8*s12*s23^2 - 10*s13*s23^2) - p2q^3*s13*(5*s12^4 + 
                8*s12^2*s13*s23 + 10*s13^2*s23*(-s13 + s23) + 2*s12*s13*s23*
                 (s13 + 4*s23) + s12^3*(9*s13 + 5*s23)) + p2q^2*p3q*(
                5*s12^5 + 10*s13^2*s23^2*(-2*s13 + s23) + 4*s12^2*s13*s23*
                 (s13 + 6*s23) + s12^4*(7*s13 + 10*s23) + 2*s12*s13*s23*
                 (-10*s13^2 + 7*s13*s23 + 4*s23^2) + s12^3*(-2*s13^2 + 
                  23*s13*s23 + 5*s23^2)) + p2q*p3q^2*(2*s12^5 + 2*s12*s13*
                 (15*s13 - s23)*s23^2 + 10*s13^2*s23^3 - s12^4*(3*s13 + 
                  4*s23) + 2*s12^2*s23*(5*s13^2 + 2*s13*s23 - 4*s23^2) - 
                s12^3*(s13^2 - 3*s13*s23 + 14*s23^2))) + p1q^5*s23^2*
             (s12 + s23)*(-(p3q*(54*s12^7 + 70*s13*s23^5*(s13 + s23) + 
                 18*s12^6*(2*s13 + 17*s23) - 18*s12^5*(s13^2 - 11*s13*s23 - 
                   52*s23^2) + 2*s12*s23^4*(125*s13^2 + 216*s13*s23 + 
                   46*s23^2) + s12^2*s23^3*(453*s13^2 + 651*s13*s23 + 
                   386*s23^2) + s12^3*s23^2*(415*s13^2 + 884*s13*s23 + 
                   982*s23^2) + s12^4*s23*(-36*s13^2 + 757*s13*s23 + 
                   1372*s23^2))) + p2q*(36*s12^7 - 9*s12^6*(2*s13 + 33*s23) + 
                10*s13*s23^4*(9*s13^2 + 2*s13*s23 - 7*s23^2) - 9*s12^5*
                 (8*s13^2 + 47*s13*s23 + 145*s23^2) + s12^2*s23^2*
                 (270*s13^3 + 537*s13^2*s23 + 15*s13*s23^2 - 242*s23^3) + 
                2*s12*s23^3*(225*s13^3 + 271*s13^2*s23 - 90*s13*s23^2 - 
                  46*s23^3) - s12^3*s23*(27*s13^3 + 154*s13^2*s23 + 
                  569*s13*s23^2 + 811*s23^3) - s12^4*(18*s13^3 + 81*s13^2*
                   s23 + 1099*s13*s23^2 + 1633*s23^3))) + 
            p1q^4*s23*(-(p3q^2*(s12 + s23)*(27*s12^8 + 9*s12^7*(10*s13 - 
                   39*s23) + 140*s13*s23^6*(s13 + s23) + s12^5*s23*
                  (9*s13^2 - 1622*s13*s23 - 1007*s23^2) + 9*s12^6*(7*s13^2 - 
                   34*s13*s23 - 155*s23^2) + 4*s12*s23^5*(45*s13^2 + 
                   136*s13*s23 + 46*s23^2) + 2*s12^2*s23^4*(293*s13^2 + 
                   138*s13*s23 + 213*s23^2) + 2*s12^4*s23^2*(-613*s13^2 - 
                   235*s13*s23 + 345*s23^2) + 2*s12^3*s23^3*(7*s13^2 + 
                   314*s13*s23 + 461*s23^2))) + p2q*p3q*(-72*s12^9 + 
                s12^8*(-306*s13 + 774*s23) - 9*s12^7*(36*s13^2 - 76*s13*s23 - 
                  385*s23^2) + 30*s13*s23^6*(16*s13^2 + 9*s13*s23 - 
                  7*s23^2) + s12^4*s23^2*(1091*s13^3 + 6006*s13^2*s23 + 
                  3705*s13*s23^2 - 3210*s23^3) + s12^3*s23^3*(3015*s13^3 + 
                  3305*s13^2*s23 + 1279*s13*s23^2 - 1951*s23^3) + 
                s12^5*s23*(-216*s13^3 + 3811*s13^2*s23 + 7823*s13*s23^2 - 
                  614*s23^3) + 2*s12^2*s23^4*(1294*s13^3 + 1466*s13^2*s23 + 
                  318*s13*s23^2 - 391*s23^3) + 2*s12*s23^5*(715*s13^3 + 
                  1091*s13^2*s23 - 167*s13*s23^2 - 138*s23^3) + 
                s12^6*(-90*s13^3 - 234*s13^2*s23 + 5627*s13*s23^2 + 
                  3770*s23^3)) + p2q^2*(-36*s12^8*(2*s13 - 9*s23) + 
                s12^7*(-99*s13^2 + 666*s13*s23 + 1197*s23^2) - 9*s12^6*
                 (2*s13^3 - 40*s13^2*s23 - 425*s13*s23^2 - 152*s23^3) + 
                10*s13*s23^5*(-36*s13^3 + 3*s13^2*s23 + 32*s13*s23^2 - 
                  7*s23^3) + s12^4*s23*(36*s13^4 + 911*s13^3*s23 + 
                  4506*s13^2*s23^2 + 5195*s13*s23^3 - 608*s23^4) + 
                s12^3*s23^2*(-243*s13^4 + 1125*s13^3*s23 + 2438*s13^2*s23^2 + 
                  2633*s13*s23^3 - 459*s23^4) - 2*s12*s23^4*(585*s13^4 + 
                  464*s13^3*s23 - 711*s13^2*s23^2 - 94*s13*s23^3 + 
                  46*s23^4) - 2*s12^2*s23^3*(540*s13^4 + 434*s13^3*s23 - 
                  796*s13^2*s23^2 - 575*s13*s23^3 + 122*s23^4) + 
                s12^5*(9*s13^4 + 18*s13^3*s23 + 3017*s13^2*s23^2 + 
                  6541*s13*s23^3 + 194*s23^4))) + 
            p1q^3*(p3q^3*(s12 + s23)*(36*s12^9 + 36*s12^8*(2*s13 - 5*s23) - 
                70*s13*s23^7*(s13 + s23) + s12^2*s13*s23^5*(-63*s13 + 
                  485*s23) + 18*s12^7*(2*s13^2 - 16*s13*s23 - 19*s23^2) - 
                2*s12*s23^6*(-15*s13^2 + 76*s13*s23 + 46*s23^2) + 
                s12^3*s23^4*(1363*s13^2 + 694*s13*s23 + 218*s23^2) + 
                s12^6*s23*(-108*s13^2 - 667*s13*s23 + 1472*s23^2) + 
                s12^4*s23^3*(1891*s13^2 + 2632*s13*s23 + 1540*s23^2) + 
                s12^5*s23^2*(-739*s13^2 + 2198*s13*s23 + 3012*s23^2)) + 
              p2q*p3q^2*(36*s12^10 - 333*s12^9*s23 + 20*s13*s23^7*
                 (31*s13^2 + 24*s13*s23 - 7*s23^2) - 9*s12^8*(12*s13^2 + 
                  67*s13*s23 + 4*s23^2) + s12^3*s23^4*(5017*s13^3 + 
                  7287*s13^2*s23 + 4560*s13*s23^2 - 239*s23^3) + 
                s12^2*s23^5*(2982*s13^3 + 3389*s13^2*s23 + 2075*s13*s23^2 - 
                  224*s23^3) + 2*s12*s23^6*(675*s13^3 + 1353*s13^2*s23 + 
                  136*s13*s23^2 - 92*s23^3) + s12^4*s23^3*(3457*s13^3 + 
                  14062*s13^2*s23 + 12427*s13*s23^2 + 1564*s23^3) + 
                s12^7*(-72*s13^3 - 495*s13^2*s23 + 584*s13*s23^2 + 
                  5027*s23^3) + s12^5*s23^2*(1019*s13^3 + 8650*s13^2*s23 + 
                  19064*s13*s23^2 + 7825*s23^3) + s12^6*s23*(-225*s13^3 + 
                  325*s13^2*s23 + 10721*s13*s23^2 + 10756*s23^3)) + 
              p2q^2*p3q*(-72*s12^9*(s13 + s23) - 18*s12^8*(6*s13^2 + 
                  3*s13*s23 - 29*s23^2) + 18*s12^7*s23*(-5*s13^2 + 
                  100*s13*s23 + 174*s23^2) - 10*s13*s23^6*(111*s13^3 + 
                  19*s13^2*s23 - 85*s13*s23^2 + 7*s23^3) + s12^3*s23^3*
                 (-3408*s13^4 - 185*s13^3*s23 + 3756*s13^2*s23^2 + 
                  5623*s13*s23^3 - 268*s23^4) + s12^2*s23^4*(-3967*s13^4 - 
                  3313*s13^3*s23 + 2073*s13^2*s23^2 + 2931*s13*s23^3 - 
                  132*s23^4) - 2*s12*s23^5*(1400*s13^4 + 1633*s13^3*s23 - 
                  1404*s13^2*s23^2 - 421*s13*s23^3 + 46*s23^4) + 
                s12^4*s23^2*(-685*s13^4 - 983*s13^3*s23 + 7247*s13^2*s23^2 + 
                  11347*s13*s23^3 + 202*s23^4) + s12^5*s23*(162*s13^4 - 
                  341*s13^3*s23 + 3824*s13^2*s23^2 + 14611*s13*s23^3 + 
                  3012*s23^4) + s12^6*(36*s13^4 + 54*s13^3*s23 + 236*s13^2*
                   s23^2 + 8650*s13*s23^3 + 5120*s23^4)) + 
              p2q^3*(36*s12^8*s13*(s13 - 2*s23) + 9*s12^7*(8*s13^3 - 
                  21*s13^2*s23 - 46*s13*s23^2 + 5*s23^3) + 60*s13^2*s23^5*
                 (9*s13^3 - 5*s13^2*s23 - 9*s13*s23^2 + 5*s23^3) + 
                9*s12^6*(4*s13^4 - 3*s13^3*s23 - 240*s13^2*s23^2 - 
                  3*s13*s23^3 + 12*s23^4) + s12^5*s23*(81*s13^4 - 1846*s13^3*
                   s23 - 3899*s13^2*s23^2 + 1646*s13*s23^3 + 54*s23^4) + 
                2*s12*s13*s23^4*(585*s13^4 + 121*s13^3*s23 - 1399*s13^2*
                   s23^2 + 139*s13*s23^3 + 174*s23^4) + s12^2*s13*s23^3*
                 (720*s13^4 - 241*s13^3*s23 - 2767*s13^2*s23^2 - 1043*s13*
                   s23^3 + 919*s23^4) - s12^3*s23^2*(-81*s13^5 + 1653*s13^4*
                   s23 + 1935*s13^3*s23^2 + 1610*s13^2*s23^3 - 1540*s13*
                   s23^4 + 27*s23^5) - s12^4*s23*(9*s13^5 + 505*s13^4*s23 + 
                  3333*s13^3*s23^2 + 2553*s13^2*s23^3 - 2300*s13*s23^4 + 
                  36*s23^5))) + p1q^2*(p3q^4*s12*(s12 + s23)*(72*s12^8 + 
                72*s12^7*(2*s13 - s23) + 50*s13*s23^6*(s13 + s23) + 
                18*s12^6*(4*s13^2 - 5*s13*s23 - 59*s23^2) + 2*s12*s23^5*
                 (135*s13^2 + 236*s13*s23 + 56*s23^2) + s12^2*s23^4*
                 (973*s13^2 + 780*s13*s23 + 381*s23^2) + s12^4*s23^2*
                 (-1370*s13^2 - 668*s13*s23 + 573*s23^2) + s12^3*s23^3*
                 (113*s13^2 + 1150*s13*s23 + 985*s23^2) - s12^5*s23*
                 (18*s13^2 + 1694*s13*s23 + 1061*s23^2)) + p2q*p3q^3*(
                108*s12^10 + 9*s12^9*(4*s13 - 19*s23) + 230*s13^2*s23^7*
                 (s13 + s23) + 2*s12*s13*s23^6*(300*s13^2 + 613*s13*s23 + 
                  178*s23^2) - 9*s12^8*(28*s13^2 + 21*s13*s23 + 188*s23^2) + 
                8*s12^2*s23^5*(183*s13^3 + 311*s13^2*s23 + 212*s13*s23^2 + 
                  28*s23^3) - 3*s12^7*(60*s13^3 + 99*s13^2*s23 + 103*s13*
                   s23^2 + 397*s23^3) + s12^3*s23^4*(3739*s13^3 + 7025*s13^2*
                   s23 + 4661*s13*s23^2 + 763*s23^3) + s12^4*s23^3*
                 (5527*s13^3 + 11576*s13^2*s23 + 10881*s13*s23^2 + 
                  2724*s23^3) + s12^6*s23*(-279*s13^3 + 1478*s13^2*s23 + 
                  5316*s13*s23^2 + 3340*s23^3) + s12^5*s23^2*(3263*s13^3 + 
                  7566*s13^2*s23 + 12960*s13*s23^2 + 5303*s23^3)) - 
              p2q^4*s13*(-36*s12^8*s13 - 9*s12^7*(4*s13^2 + 13*s13*s23 - 
                  10*s23^2) + 40*s13^2*s23^4*(9*s13^3 - 13*s13^2*s23 - 
                  10*s13*s23^2 + 12*s23^3) + 9*s12^6*(4*s13^3 - 53*s13^2*
                   s23 + 66*s13*s23^2 + 29*s23^3) + s12^3*s23^2*(-577*s13^4 + 
                  31*s13^3*s23 + 674*s13^2*s23^2 + 2045*s13*s23^3 - 
                  9*s23^4) + s12^4*s23*(27*s13^4 - 810*s13^3*s23 + 
                  856*s13^2*s23^2 + 2812*s13*s23^3 + 63*s23^4) + 
                s12^5*(36*s13^4 - 333*s13^3*s23 - 503*s13^2*s23^2 + 
                  2272*s13*s23^3 + 243*s23^4) + 2*s12*s13*s23^3*(270*s13^4 - 
                  296*s13^3*s23 - 1201*s13^2*s23^2 + 511*s13*s23^3 + 
                  246*s23^4) + 2*s12^2*s13*s23^2*(90*s13^4 - 240*s13^3*s23 - 
                  925*s13^2*s23^2 + 149*s13*s23^3 + 661*s23^4)) + 
              p2q^2*p3q^2*(36*s12^10 - 9*s12^9*(20*s13 + 3*s23) - 
                20*s13^2*s23^6*(50*s13^2 + 27*s13*s23 - 23*s23^2) - 
                9*s12^8*(36*s13^2 - 27*s13*s23 + 32*s23^2) + 2*s12*s13*s23^5*
                 (-1360*s13^3 - 1842*s13^2*s23 + 609*s13*s23^2 + 281*s23^3) + 
                s12^7*(36*s13^3 - 153*s13^2*s23 + 3095*s13*s23^2 + 
                  761*s23^3) + 2*s12^2*s23^4*(-2504*s13^4 - 3091*s13^3*s23 + 
                  201*s13^2*s23^2 + 1011*s13*s23^3 + 56*s23^4) + 
                s12^3*s23^3*(-6532*s13^4 - 5673*s13^3*s23 + 1481*s13^2*
                   s23^2 + 4907*s13*s23^3 + 315*s23^4) + 3*s12^6*(48*s13^4 - 
                  57*s13^3*s23 + 698*s13^2*s23^2 + 3072*s13*s23^3 + 
                  1060*s23^4) + s12^4*s23^2*(-3136*s13^4 - 2577*s13^3*s23 + 
                  4236*s13^2*s23^2 + 10471*s13*s23^3 + 1376*s23^4) + 
                s12^5*s23*(252*s13^4 + 651*s13^3*s23 + 4322*s13^2*s23^2 + 
                  13568*s13*s23^3 + 3367*s23^4)) + p2q^3*p3q*(-72*s12^9*s13 + 
                18*s12^8*(2*s13^2 - 5*s13*s23 - 5*s23^2) + 9*s12^7*
                 (28*s13^3 - 61*s13^2*s23 - 2*s13*s23^2 - 19*s23^3) + 
                10*s13^2*s23^5*(115*s13^3 - 33*s13^2*s23 - 125*s13*s23^2 + 
                  23*s23^3) + s12^6*(108*s13^4 + 9*s13^3*s23 - 3706*s13^2*
                   s23^2 + 431*s13*s23^3 + 72*s23^4) + 2*s12*s13*s23^4*
                 (1340*s13^4 + 723*s13^3*s23 - 2500*s13^2*s23^2 - 
                  225*s13*s23^3 + 128*s23^4) + 2*s12^2*s13*s23^3*
                 (1311*s13^4 + 266*s13^3*s23 - 3198*s13^2*s23^2 - 
                  1463*s13*s23^3 + 424*s23^4) + s12^3*s23^2*(1261*s13^5 - 
                  3719*s13^4*s23 - 7692*s13^3*s23^2 - 5446*s13^2*s23^3 + 
                  1849*s13*s23^4 + 45*s23^5) + s12^4*s23*(-27*s13^5 - 
                  1822*s13^4*s23 - 8384*s13^3*s23^2 - 8364*s13^2*s23^3 + 
                  2663*s13*s23^4 + 234*s23^5) + s12^5*(-36*s13^5 + 
                  441*s13^4*s23 - 3261*s13^3*s23^2 - 8285*s13^2*s23^3 + 
                  1837*s13*s23^4 + 342*s23^5))) + 
            p1q*(p2q*p3q^4*s12*(72*s12^9 + 140*s13^2*s23^6*(s13 + s23) + 
                9*s12^8*(4*s13 + 17*s23) - 9*s12^7*(16*s13^2 + 11*s13*s23 + 
                  90*s23^2) + 4*s12*s13*s23^5*(155*s13^2 + 301*s13*s23 + 
                  101*s23^2) + s12^4*s23^2*(2091*s13^3 + 2547*s13^2*s23 + 
                  1396*s13*s23^2 - 711*s23^3) + 2*s12^2*s23^4*(1107*s13^3 + 
                  1726*s13^2*s23 + 859*s13*s23^2 + 52*s23^3) + s12^3*s23^3*
                 (3728*s13^3 + 4421*s13^2*s23 + 2909*s13*s23^2 + 250*s23^3) - 
                s12^5*s23*(171*s13^3 - 235*s13^2*s23 + 1254*s13*s23^2 + 
                  2656*s23^3) - s12^6*(108*s13^3 + 423*s13^2*s23 + 
                  1190*s13*s23^2 + 2690*s23^3)) + p2q^2*p3q^3*(36*s12^10 - 
                36*s12^9*(4*s13 - 3*s23) - 250*s13^3*s23^6*(s13 + s23) + 
                s12^7*s23*(-126*s13^2 + 1673*s13*s23 - 1444*s23^2) - 
                2*s12*s13^2*s23^5*(680*s13^2 + 793*s13*s23 - 22*s23^2) - 
                18*s12^8*(16*s13^2 - s13*s23 + 21*s23^2) + s12^2*s13*s23^4*
                 (-3201*s13^3 - 4667*s13^2*s23 + 210*s13*s23^2 + 478*s23^3) + 
                s12^6*(108*s13^4 + 90*s13^3*s23 + 3227*s13^2*s23^2 + 
                  4485*s13*s23^3 - 1472*s23^4) + s12^5*s23*(126*s13^4 + 
                  1821*s13^3*s23 + 5634*s13^2*s23^2 + 5939*s13*s23^3 - 
                  396*s23^4) + s12^3*s23^3*(-4528*s13^4 - 5123*s13^3*s23 + 
                  882*s13^2*s23^2 + 2152*s13*s23^3 + 52*s23^4) + 
                s12^4*s23^2*(-2739*s13^4 - 381*s13^3*s23 + 3285*s13^2*s23^2 + 
                  4639*s13*s23^3 + 134*s23^4)) + p2q^5*s13^2*(-9*s12^7*
                 (4*s13 - 5*s23) - 9*s12^6*(8*s13^2 - 13*s13*s23 - 
                  22*s23^2) - 9*s12^5*(4*s13^3 + 3*s13^2*s23 - 94*s13*s23^2 - 
                  36*s23^3) + 10*s13^2*s23^3*(9*s13^3 - 36*s13^2*s23 - 
                  11*s13*s23^2 + 34*s23^3) + s12^3*s23^2*(325*s13^3 + 
                  875*s13^2*s23 + 1306*s13*s23^2 + 63*s23^3) + s12^4*s23*
                 (-99*s13^3 + 703*s13^2*s23 + 1444*s13*s23^2 + 234*s23^3) + 
                s12^2*s13*s23^2*(-108*s13^3 - 510*s13^2*s23 + 795*s13*s23^2 + 
                  863*s23^3) + 2*s12*s13*s23^2*(45*s13^4 - 234*s13^3*s23 - 
                  424*s13^2*s23^2 + 459*s13*s23^3 + 154*s23^4)) - 
              p2q^4*p3q*s13*(-18*s12^8*(6*s13 - 5*s23) - 18*s12^7*
                 (8*s13^2 - 7*s13*s23 - 12*s23^2) + 18*s12^6*(2*s13^3 - 
                  21*s13^2*s23 + 73*s13*s23^2 + 11*s23^3) + 10*s13^2*s23^4*
                 (54*s13^3 - 50*s13^2*s23 - 79*s13*s23^2 + 25*s23^3) + 
                3*s12^5*(24*s13^4 - 120*s13^3*s23 + 43*s13^2*s23^2 + 
                  898*s13*s23^3 + 66*s23^4) + s12^3*s23^2*(-1370*s13^4 - 
                  3054*s13^3*s23 - 405*s13^2*s23^2 + 2608*s13*s23^3 + 
                  90*s23^4) + 2*s12*s13*s23^3*(540*s13^4 - 304*s13^3*s23 - 
                  1606*s13^2*s23^2 + 301*s13*s23^3 + 118*s23^4) + 
                s12^4*s23*(54*s13^4 - 755*s13^3*s23 + 17*s13^2*s23^2 + 
                  3238*s13*s23^3 + 216*s23^4) + s12^2*s13*s23^2*(540*s13^4 - 
                  1140*s13^3*s23 - 4797*s13^2*s23^2 + 293*s13*s23^3 + 
                  1220*s23^4)) - p2q^3*p3q^2*(9*s12^9*(12*s13 - 5*s23) + 
                9*s12^8*(11*s13 - 2*s23)*s23 - 100*s13^3*s23^5*(7*s13^2 + 
                  2*s13*s23 - 5*s23^2) - 18*s12^7*(16*s13^3 - 29*s13^2*s23 + 
                  47*s13*s23^2 - 17*s23^3) + 2*s12*s13^2*s23^4*(-1115*s13^3 - 
                  593*s13^2*s23 + 1318*s13*s23^2 + 166*s23^3) + s12^3*s13*
                 s23^2*(-1711*s13^4 + 1341*s13^3*s23 + 8238*s13^2*s23^2 + 
                  5381*s13*s23^3 - 526*s23^4) - 3*s12^6*(48*s13^4 - 
                  66*s13^3*s23 - 479*s13^2*s23^2 + 646*s13*s23^3 - 
                  192*s23^4) + s12^2*s13*s23^3*(-3072*s13^4 - 1845*s13^3*
                   s23 + 6299*s13^2*s23^2 + 2104*s13*s23^3 - 184*s23^4) + 
                s12^4*s23*(27*s13^5 + 2831*s13^4*s23 + 6740*s13^3*s23^2 + 
                  6571*s13^2*s23^3 - 881*s13*s23^4 + 90*s23^5) + 
                s12^5*(36*s13^5 - 153*s13^4*s23 + 2991*s13^3*s23^2 + 
                  3877*s13^2*s23^3 - 1640*s13*s23^4 + 387*s23^5)) + 
              p3q^5*s12^2*(s12 + s23)*(36*s12^7 + 110*s13*s23^5*(s13 + s23) + 
                18*s12^6*(4*s13 + 7*s23) + s12^4*s23*(36*s13^2 - 649*s13*
                   s23 - 868*s23^2) + 18*s12^5*(2*s13^2 + 9*s13*s23 - 
                  14*s23^2) - s12^2*s23^3*(669*s13^2 + 471*s13*s23 + 
                  26*s23^2) - s12^3*s23^2*(649*s13^2 + 1172*s13*s23 + 
                  604*s23^2) + s12*(-70*s13^2*s23^4 + 72*s13*s23^5 + 
                  52*s23^6)))))/(36*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*
           s13*s23^2*(s12 + s23)^2*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((ep^2*(s12 + s13)*(9*s12^4 + 3*s12*s13*s23^2 - 10*s13^2*s23^2 + 
            18*s12^3*(s13 + s23) + s12^2*(9*s13^2 + 18*s13*s23 + 49*s23^2)))/
          (18*s12^2*s13*s23^2*(s12 + s23)) - 
         (-18*p1q^6*(7*s12 - 10*s13)*s13*s23^3*(s12 + s23)*
            (s12 + s13 + s23) - 18*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
            (s12 + s13 + s23)*(p2q^2*s13^2*(20*s12^2 - 7*s12*s13 + 10*
                s13^2) - p2q*p3q*s13*(20*s12^2 - 7*s12*s13 + 10*s13^2)*
              (2*s12 + s23) + p3q^2*s12*(11*s12^3 + s12*s13*(10*s13 - 
                 7*s23) + 10*s13^2*s23 + s12^2*(-16*s13 + 11*s23))) + 
           2*p1q^5*s23^2*(s12 + s13 + s23)*(p3q*(108*s12^4 + 100*s13^2*
                s23^2 + s12*s13*s23*(10*s13 + 47*s23) - 3*s12^3*
                (3*s13 + 65*s23) + s12^2*(-90*s13^2 + 110*s13*s23 - 
                 303*s23^2)) + p2q*(9*s12^4 + 10*s13^2*s23*(-36*s13 + s23) - 
               3*s12^3*(57*s13 + 98*s23) + s12^2*(189*s13^2 - 70*s13*s23 - 
                 303*s23^2) + 2*s12*s13*(-135*s13^2 + 131*s13*s23 + 
                 55*s23^2))) + 2*p1q*(p2q + p3q)*
            (p2q^4*s13^3*(180*s12^4 + 350*s13^2*s23*(s13 + s23) + 3*s12^3*
                (39*s13 + 341*s23) + 2*s12*s13*(45*s13^2 + 39*s13*s23 - 
                 181*s23^2) + s12^2*(27*s13^2 + 418*s13*s23 + 843*s23^2)) + 
             p3q^4*s12^2*(-99*s12^5 + s12^4*(45*s13 - 312*s23) + 100*s13^2*
                s23^2*(s13 + s23) + s12^3*(54*s13^2 - 130*s13*s23 - 
                 327*s23^2) + s12*s13*s23*(10*s13^2 + 157*s13*s23 + 
                 47*s23^2) - s12^2*(90*s13^3 + 141*s13^2*s23 + 128*s13*
                  s23^2 + 114*s23^3)) + p2q^3*p3q*s13^2*(-378*s12^5 + 9*s12^4*
                (17*s13 - 233*s23) + 6*s12^3*(33*s13^2 + 83*s13*s23 - 
                 397*s23^2) + 10*s13^2*s23*(35*s13^2 + 9*s13*s23 - 
                 26*s23^2) + s12^2*(-243*s13^3 + 301*s13^2*s23 + 
                 1322*s13*s23^2 - 663*s23^3) + s12*s13*(90*s13^3 - 
                 612*s13^2*s23 - 1013*s13*s23^2 + 299*s23^3)) + 
             p2q*p3q^3*s12*(-18*s12^6 + 3*s12^5*(195*s13 - 47*s23) + 160*
                s13^3*s23^2*(s13 + s23) + s12^4*(162*s13^2 + 1283*s13*s23 - 
                 228*s23^2) + 2*s12*s13^2*s23*(165*s13^2 + 122*s13*s23 - 
                 123*s23^2) - s12^3*(171*s13^3 + 363*s13^2*s23 - 
                 1207*s13*s23^2 + 105*s23^3) + s12^2*s13*(270*s13^3 - 
                 125*s13^2*s23 - 462*s13*s23^2 + 509*s23^3)) - 
             p2q^2*p3q^2*s13*(-216*s12^6 + 27*s12^5*(28*s13 - 33*s23) + 260*
                s13^3*s23^2*(s13 + s23) + s12*s13^2*s23*(690*s13^2 + 
                 491*s13*s23 - 459*s23^2) + 3*s12^4*(144*s13^2 + 
                 953*s13*s23 - 373*s23^2) + s12^3*(-270*s13^3 + 858*s13^2*
                  s23 + 3136*s13*s23^2 - 444*s23^3) + s12^2*s13*(270*s13^3 - 
                 204*s13^2*s23 - 605*s13*s23^2 + 1018*s23^3))) + 
           p1q^2*(s12 + s13 + s23)*(p2q^4*s13^2*(162*s12^4 + 6*s12^3*
                (27*s13 - 206*s23) + s12^2*(360*s13^2 + 1213*s13*s23 - 
                 2898*s23^2) - 2*s12*s13*(63*s13^2 + 370*s13*s23 - 
                 708*s23^2) + 20*s13^2*(9*s13^2 - s13*s23 - 51*s23^2)) + 
             p3q^4*s12*(360*s12^5 + 6*s12^4*(6*s13 - 31*s23) + 2*s12*s13*
                (180*s13 - 283*s23)*s23^2 + 140*s13^2*s23^3 + s12^3*
                (342*s13^2 + 368*s13*s23 + 504*s23^2) + s12^2*s23*
                (715*s13^2 + 234*s13*s23 + 1050*s23^2)) - p2q^3*p3q*s13*
              (486*s12^5 + 12*s12^4*(27*s13 - 26*s23) + s12^3*(1278*s13^2 + 
                 5891*s13*s23 - 1590*s23^2) + 20*s13^2*s23*(10*s13^2 + 
                 101*s13*s23 - 25*s23^2) + 2*s12*s13*(360*s13^3 + 
                 537*s13^2*s23 - 1866*s13*s23^2 + 409*s23^3) - s12^2*
                (504*s13^3 + 2431*s13^2*s23 - 7400*s13*s23^2 + 1572*s23^3)) + 
             p2q*p3q^3*(324*s12^6 + 2*s12*s13^2*(320*s13 - 269*s23)*s23^2 + 
               500*s13^3*s23^3 - 18*s12^5*(53*s13 + 26*s23) + 24*s12^4*
                (21*s13^2 + 78*s13*s23 + 53*s23^2) + s12^2*s13*s23*
                (-271*s13^2 - 666*s13*s23 + 476*s23^2) + s12^3*(-882*s13^3 - 
                 779*s13^2*s23 + 2942*s13*s23^2 + 2064*s23^3)) + 
             p2q^2*p3q^2*(324*s12^6 - 6*s12^5*(27*s13 - 40*s23) - 1000*s13^3*
                (s13 - s23)*s23^2 + 4*s12*s13^2*s23*(20*s13^2 + 739*s13*s23 - 
                 374*s23^2) + 2*s12^4*(756*s13^2 + 1547*s13*s23 + 
                 465*s23^2) + s12^3*(-918*s13^3 - 5105*s13^2*s23 + 
                 4460*s13*s23^2 + 1014*s23^3) + s12^2*s13*(1080*s13^3 + 
                 1469*s13^2*s23 - 5528*s13*s23^2 + 2614*s23^3))) - 
           p1q^4*s23*(s12 + s13 + s23)*(p3q^2*(576*s12^5 + 2*s12*s13*
                (180*s13 - 283*s23)*s23^2 + 140*s13^2*s23^3 - 12*s12^4*
                (21*s13 + 47*s23) + s12^3*(36*s13^2 + 422*s13*s23 + 
                 90*s23^2) + s12^2*s23*(409*s13^2 - 234*s13*s23 + 
                 1230*s23^2)) + p2q*p3q*(36*s12^5 + 300*s13^2*s23^2*
                (2*s13 + s23) - 12*s12^4*(21*s13 + 95*s23) + 2*s12*s13*s23*
                (380*s13^2 + 311*s13*s23 - 456*s23^2) + s12^3*(-540*s13^2 - 
                 457*s13*s23 + 660*s23^2) + s12^2*(360*s13^3 - 15*s13^2*s23 - 
                 1921*s13*s23^2 + 1836*s23^3)) + p2q^2*(18*s12^5 - 18*s12^4*
                (7*s13 + 3*s23) - 3*s12^3*(234*s13^2 + 455*s13*s23 - 
                 178*s23^2) + 20*s13^2*s23*(-54*s13^2 + 3*s13*s23 + 
                 8*s23^2) + s12^2*(378*s13^3 - 640*s13^2*s23 - 2173*s13*
                  s23^2 + 606*s23^3) + s12*(-540*s13^4 + 796*s13^3*s23 + 
                 820*s13^2*s23^2 - 346*s13*s23^3))) + p1q^3*(s12 + s13 + s23)*
            (p3q^3*(360*s12^6 + 6*s12^5*(6*s13 - 89*s23) - 160*s13^2*s23^4 + 
               2*s12*s13*s23^3*(-30*s13 + 173*s23) - 3*s12^2*s23^2*
                (23*s13^2 + 226*s13*s23 + 208*s23^2) + 2*s12^4*(171*s13^2 + 
                 434*s13*s23 + 540*s23^2) + s12^3*s23*(479*s13^2 - 
                 264*s13*s23 + 1350*s23^2)) - p2q^3*s13*(162*s12^5 + 18*s12^4*
                (9*s13 + 14*s23) + 3*s12^3*(120*s13^2 + 313*s13*s23 - 
                 470*s23^2) + 60*s13^2*s23*(12*s13^2 - s13*s23 - 11*s23^2) + 
               s12^2*(-126*s13^3 + 860*s13^2*s23 + 2654*s13*s23^2 - 
                 2178*s23^3) + 4*s12*s13*(45*s13^3 - 131*s13^2*s23 - 
                 290*s13*s23^2 + 291*s23^3)) + p2q*p3q^2*(162*s12^6 + 20*
                s13^2*(31*s13 - 16*s23)*s23^3 - 12*s12^5*(63*s13 + 25*s23) + 
               4*s12*s13*s23^2*(25*s13^2 - 421*s13*s23 + 173*s23^2) + s12^4*
                (378*s13^2 + 1657*s13*s23 + 2688*s23^2) - s12^2*s23*
                (751*s13^3 + 737*s13^2*s23 - 2546*s13*s23^2 + 1230*s23^3) + 
               s12^3*(-702*s13^3 + 453*s13^2*s23 + 2647*s13*s23^2 + 
                 1920*s23^3)) + p2q^2*p3q*(162*s12^6 + 198*s12^5*s23 + 40*
                s13^2*s23^2*(15*s13^2 + 32*s13*s23 - 4*s23^2) + 3*s12^4*
                (252*s13^2 + 407*s13*s23 + 350*s23^2) + 2*s12*s13*s23*
                (730*s13^3 + 621*s13^2*s23 - 1394*s13*s23^2 + 173*s23^3) + 
               s12^3*(-540*s13^3 + 331*s13^2*s23 + 4285*s13*s23^2 + 
                 408*s23^3) + s12^2*(540*s13^4 - 819*s13^3*s23 - 3034*s13^2*
                  s23^2 + 5402*s13*s23^3 - 606*s23^4))))/
          (36*ep*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13*s23*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (ep*(9*(p2q + p3q)^2*(-(p3q*s12) + p2q*s13)^3*s23*(s12 + s23)*
             (-(p2q*s13) + p3q*(s12 + s23))*(4*s12^4 + s12*s13*s23*(-4*s13 + 
                s23) - 5*s13^2*s23*(s13 + s23) + 4*s12^3*(s13 + 2*s23) + 
              s12^2*s23*(5*s13 + 4*s23)) - 9*p1q^6*s23^4*(s12 + s23)^2*
             (4*s12^4 + 5*s13^2*s23*(s13 + s23) + 4*s12^3*(s13 + 2*s23) + 
              s12^2*s23*(13*s13 + 4*s23) + s12*s13*s23*(14*s13 + 9*s23)) + 
            p1q^5*s23^2*(s12 + s23)*(p2q*(18*s12^7 + 27*s12^6*(2*s13 - 
                  3*s23) + s12^5*(54*s13^2 + 45*s13*s23 - 449*s23^2) + 
                10*s13^2*s23^3*(18*s13^2 + 17*s13*s23 - s23^2) + 
                s12^4*(18*s13^3 + 135*s13^2*s23 - 218*s13*s23^2 - 
                  585*s23^3) + s12^3*s23*(9*s13^3 + 172*s13^2*s23 - 
                  131*s13*s23^2 - 317*s23^3) + s12*s13*s23^2*(135*s13^3 + 
                  529*s13^2*s23 + 144*s13*s23^2 - 70*s23^3) + 2*s12^2*s23^2*
                 (137*s13^3 + 140*s13^2*s23 - 16*s13*s23^2 - 41*s23^3)) + 
              p3q*(18*s12^7 - 55*s13^2*s23^4*(s13 + s23) + 27*s12^6*
                 (2*s13 + s23) + s12^5*(54*s13^2 + 117*s13*s23 - 161*s23^2) - 
                s12*s13*s23^3*(20*s13^2 + 216*s13*s23 + 151*s23^2) + 
                s12^4*(18*s13^3 + 99*s13^2*s23 - 11*s13*s23^2 - 369*s23^3) + 
                s12^3*s23*(9*s13^3 + 127*s13^2*s23 - 14*s13*s23^2 - 
                  317*s23^3) - s12^2*s23^2*(-31*s13^3 + 44*s13^2*s23 + 
                  131*s13*s23^2 + 118*s23^3))) - p1q*(p2q + p3q)^2*
             (-(p3q^3*s12^2*(s12 + s23)*(18*s12^7 - 55*s13^2*s23^4*
                  (s13 + s23) + 27*s12^6*(2*s13 + s23) + s12^5*(54*s13^2 + 
                   99*s13*s23 - 17*s23^2) + s12*s13*s23^3*(-20*s13^2 - 
                   36*s13*s23 + 29*s23^2) + s12^2*s23^2*(31*s13^3 - 
                   62*s13^2*s23 + 175*s13*s23^2 + 26*s23^3) + s12^4*
                  (18*s13^3 + 81*s13^2*s23 - 101*s13*s23^2 + 63*s23^3) + 
                 s12^3*s23*(9*s13^3 - 89*s13^2*s23 + 40*s13*s23^2 + 
                   115*s23^3))) + p2q^3*s13^3*(18*s12^7 + 170*s13^2*s23^4*
                 (s13 + s23) + 27*s12^6*(2*s13 + s23) + s12^5*(54*s13^2 + 
                  99*s13*s23 - 197*s23^2) + s12*s13*s23^3*(205*s13^2 + 
                  369*s13*s23 - 16*s23^2) + s12^4*(18*s13^3 + 81*s13^2*s23 - 
                  281*s13*s23^2 - 477*s23^3) + s12^2*s23^2*(31*s13^3 + 
                  118*s13^2*s23 - 95*s13*s23^2 - 154*s23^3) - s12^3*s23*
                 (-9*s13^3 + 89*s13^2*s23 + 365*s13*s23^2 + 425*s23^3)) + 
              p2q*p3q^2*s12*s13*(54*s12^8 + 70*s13^2*s23^5*(s13 + s23) + 
                9*s12^7*(18*s13 + 13*s23) + 3*s12^6*(54*s13^2 + 135*s13*s23 - 
                  59*s23^2) + 2*s12*s13*s23^4*(100*s13^2 + 156*s13*s23 + 
                  11*s23^2) + s12^5*(54*s13^3 + 351*s13^2*s23 - 285*s13*
                   s23^2 - 529*s23^3) + s12^3*s23^2*(111*s13^3 - 184*s13^2*
                   s23 + 11*s13*s23^2 - 304*s23^3) + s12^2*s23^3*(227*s13^3 + 
                  317*s13^2*s23 + 176*s13*s23^2 - 92*s23^3) - s12^4*s23*
                 (-63*s13^3 + 105*s13^2*s23 + 631*s13*s23^2 + 501*s23^3)) - 
              p2q^2*p3q*s13^2*(54*s12^8 + 125*s13^2*s23^5*(s13 + s23) + 
                9*s12^7*(18*s13 + 11*s23) + 3*s12^6*(54*s13^2 + 117*s13*s23 - 
                  128*s23^2) + s12*s13*s23^4*(445*s13^2 + 573*s13*s23 - 
                  7*s23^2) + s12^5*(54*s13^3 + 297*s13^2*s23 - 564*s13*
                   s23^2 - 1052*s23^3) + s12^3*s23^2*(102*s13^3 + 
                  85*s13^2*s23 - 299*s13*s23^2 - 599*s23^3) + s12^2*s23^3*
                 (421*s13^3 + 784*s13^2*s23 - 44*s13*s23^2 - 118*s23^3) - 
                s12^4*s23*(-45*s13^3 + 186*s13^2*s23 + 935*s13*s23^2 + 
                  1104*s23^3))) + p1q^4*s23*(-(p3q^2*(s12 + s23)*
                (36*s12^8 - 25*s13^2*s23^5*(s13 + s23) + 54*s12^7*
                  (2*s13 + s23) + 4*s12^6*(27*s13^2 - 58*s23^2) + 
                 s12*s13*s23^4*(-70*s13^2 - 56*s13*s23 + 59*s23^2) - 
                 s12^4*s23^2*(511*s13^2 + 447*s13*s23 + 76*s23^2) + 
                 s12^5*(36*s13^3 - 54*s13^2*s23 - 787*s13*s23^2 - 
                   308*s23^3) + s12^3*s23^2*(-64*s13^3 - 405*s13^2*s23 - 
                   270*s13*s23^2 + 110*s23^3) + s12^2*s23^3*(-93*s13^3 - 
                   227*s13^2*s23 - 283*s13*s23^2 + 128*s23^3))) + 
              p2q*p3q*(-36*s12^9 - 36*s12^8*(4*s13 - 5*s23) + 15*s13^2*s23^5*
                 (11*s13^2 + 15*s13*s23 + 4*s23^2) + s12^7*(-216*s13^2 + 
                  216*s13*s23 + 1087*s23^2) + s12*s13*s23^4*(395*s13^3 + 
                  1003*s13^2*s23 + 515*s13*s23^2 - 48*s23^3) + 
                s12^6*(-144*s13^3 - 252*s13^2*s23 + 2369*s13*s23^2 + 
                  1414*s23^3) + s12^4*s23*(-72*s13^4 + 233*s13^3*s23 + 
                  2652*s13^2*s23^2 + 2028*s13*s23^3 - 612*s23^4) + 
                s12^3*s23^2*(91*s13^4 + 1362*s13^3*s23 + 1676*s13^2*s23^2 + 
                  1064*s13*s23^3 - 529*s23^4) + s12^2*s23^3*(352*s13^4 + 
                  1656*s13^3*s23 + 907*s13^2*s23^2 + 431*s13*s23^3 - 
                  174*s23^4) + s12^5*(-36*s13^4 - 360*s13^3*s23 + 1352*s13^2*
                   s23^2 + 3452*s13*s23^3 + 286*s23^4)) + 
              p2q^2*(-18*s12^8*(2*s13 - 9*s23) - 9*s12^7*(12*s13^2 - 
                  16*s13*s23 - 65*s23^2) + 5*s13^2*s23^4*(-54*s13^3 - 
                  48*s13^2*s23 + 13*s13*s23^2 + 7*s23^3) + s12^6*
                 (-108*s13^3 - 234*s13^2*s23 + 1051*s13*s23^2 + 658*s23^3) + 
                s12^4*s23*(-72*s13^4 - 29*s13^3*s23 + 1421*s13^2*s23^2 + 
                  1563*s13*s23^3 - 254*s23^4) + s12^3*s23^2*(-197*s13^4 + 
                  368*s13^3*s23 + 918*s13^2*s23^2 + 925*s13*s23^3 - 
                  183*s23^4) + s12*s13*s23^3*(-405*s13^4 - 811*s13^3*s23 + 
                  134*s13^2*s23^2 + 326*s13*s23^3 + 11*s23^4) + 
                s12^5*(-36*s13^4 - 288*s13^3*s23 + 535*s13^2*s23^2 + 
                  1840*s13*s23^3 + 118*s23^4) + s12^2*s23^2*(-135*s13^5 - 
                  737*s13^4*s23 + 251*s13^3*s23^2 + 489*s13^2*s23^3 + 
                  342*s13*s23^4 - 46*s23^5))) + 
            p1q^2*(p3q^4*s12*(s12 + s23)*(36*s12^8 - 25*s13^2*s23^5*
                 (s13 + s23) + 18*s12^7*(6*s13 + 7*s23) + 2*s12^6*
                 (54*s13^2 + 99*s13*s23 + 28*s23^2) - s12*s13*s23^4*
                 (70*s13^2 + 146*s13*s23 + 31*s23^2) - s12^4*s23*(18*s13^3 + 
                  385*s13^2*s23 - 219*s13*s23^2 + 4*s23^3) - s12^3*s23^2*
                 (100*s13^3 + 117*s13^2*s23 - 198*s13*s23^2 + 34*s23^3) + 
                s12^5*(36*s13^3 + 54*s13^2*s23 - 265*s13*s23^2 + 52*s23^3) + 
                s12^2*s23^3*(-111*s13^3 - 47*s13^2*s23 - 247*s13*s23^2 + 
                  56*s23^3)) + p2q*p3q^3*(54*s12^10 - 115*s13^3*s23^6*
                 (s13 + s23) + 9*s12^9*(8*s13 + 19*s23) - 6*s12^8*
                 (18*s13^2 + 30*s13*s23 - 5*s23^2) - s12*s13^2*s23^5*
                 (235*s13^2 + 433*s13*s23 + 63*s23^2) - 2*s12^7*(108*s13^3 + 
                  423*s13^2*s23 + 559*s13*s23^2 + 23*s23^3) + 2*s12^2*s13*
                 s23^4*(16*s13^3 - 57*s13^2*s23 - 147*s13*s23^2 + 33*s23^3) - 
                s12^6*(90*s13^4 + 612*s13^3*s23 + 1067*s13^2*s23^2 + 
                  62*s13*s23^3 - 134*s23^4) + s12^5*s23*(-117*s13^4 + 
                  124*s13^3*s23 + 35*s13^2*s23^2 + 2058*s13*s23^3 + 
                  107*s23^4) + s12^3*s23^3*(381*s13^4 + 949*s13^3*s23 + 
                  301*s13^2*s23^2 + 80*s13*s23^3 + 112*s23^4) + s12^4*s23^2*
                 (187*s13^4 + 1160*s13^3*s23 + 1016*s13^2*s23^2 + 
                  1268*s13*s23^3 + 126*s23^4)) + p2q^4*s13^2*(18*s12^8 + 
                9*s12^7*(4*s13 + 13*s23) + 2*s12^6*s23*(117*s13 + 32*s23) - 
                5*s13^2*s23^3*(9*s13^3 + 7*s13^2*s23 - 50*s13*s23^2 - 
                  48*s23^3) - 3*s12^5*(12*s13^3 - 48*s13^2*s23 - 
                  65*s13*s23^2 + 176*s23^3) + s12^4*(-18*s13^4 + 18*s13^3*
                   s23 + 363*s13^2*s23^2 - 578*s13*s23^3 - 956*s23^4) + 
                s12^2*s23^2*(-22*s13^4 + 324*s13^3*s23 + 305*s13^2*s23^2 + 
                  150*s13*s23^3 - 246*s23^4) + s12*s13*s23^2*(-45*s13^4 - 
                  61*s13^3*s23 + 434*s13^2*s23^2 + 681*s13*s23^3 + 6*s23^4) - 
                s12^3*s23*(9*s13^4 - 219*s13^3*s23 + 27*s13^2*s23^2 + 
                  351*s13*s23^3 + 709*s23^4)) + p2q^2*p3q^2*(18*s12^10 - 
                9*s12^9*(8*s13 - 5*s23) + 230*s13^3*s23^5*(s13^2 - s23^2) - 
                4*s12^8*(63*s13^2 + 117*s13*s23 + 2*s23^2) + s12*s13^2*s23^4*
                 (150*s13^3 - 134*s13^2*s23 - 875*s13*s23^2 - 51*s23^3) - 
                2*s12^7*(72*s13^3 + 351*s13^2*s23 + 261*s13*s23^2 - 
                  31*s23^3) - s12^2*s13*s23^3*(406*s13^4 + 1109*s13^3*s23 + 
                  670*s13^2*s23^2 + 553*s13*s23^3 - 225*s23^4) + 
                s12^6*(90*s13^4 + 72*s13^3*s23 + 289*s13^2*s23^2 + 
                  1089*s13*s23^3 + 230*s23^4) + s12^3*s23^2*(-290*s13^5 - 
                  1622*s13^4*s23 - 129*s13^3*s23^2 - 474*s13^2*s23^3 + 
                  760*s13*s23^4 + 56*s23^5) + s12^4*s23*(108*s13^5 - 
                  393*s13^4*s23 - 11*s13^3*s23^2 + 359*s13^2*s23^3 + 
                  2142*s13*s23^4 + 104*s23^5) + s12^5*(72*s13^5 + 369*s13^4*
                   s23 + 484*s13^3*s23^2 + 870*s13^2*s23^3 + 2822*s13*s23^4 + 
                  181*s23^5)) + p2q^3*p3q*s13*(-36*s12^9 - 18*s12^8*
                 (s13 + 9*s23) + s12^7*(144*s13^2 + 63*s13*s23 - 128*s23^2) + 
                5*s13^2*s23^4*(11*s13^3 + 105*s13^2*s23 + 71*s13*s23^2 - 
                  23*s23^3) + s12^6*(180*s13^3 + 576*s13^2*s23 - 
                  63*s13*s23^2 + 214*s23^3) + s12*s13*s23^3*(245*s13^4 + 
                  971*s13^3*s23 + 908*s13^2*s23^2 - 461*s13*s23^3 - 
                  13*s23^4) + s12^5*(36*s13^4 + 450*s13^3*s23 - 436*s13^2*
                   s23^2 - 1509*s13*s23^3 + 650*s23^4) - s12^4*(18*s13^5 - 
                  90*s13^4*s23 + 289*s13^3*s23^2 + 2545*s13^2*s23^3 + 
                  2389*s13*s23^4 - 708*s23^5) + s12^2*s23^2*(194*s13^5 + 
                  629*s13^4*s23 - 314*s13^3*s23^2 - 429*s13^2*s23^3 - 
                  676*s13*s23^4 + 128*s23^5) + s12^3*s23*(-9*s13^5 + 
                  262*s13^4*s23 - 1526*s13^3*s23^2 - 1610*s13^2*s23^3 - 
                  1767*s13*s23^4 + 402*s23^5))) + 
            p1q^3*(p3q^3*(s12 + s23)*(18*s12^9 + 35*s13^2*s23^6*(s13 + s23) + 
                27*s12^8*(2*s13 + s23) + s12^7*(54*s13^2 - 45*s13*s23 - 
                  107*s23^2) + s12*s13*s23^5*(20*s13^2 + 76*s13*s23 + 
                  11*s23^2) + s12^2*s23^4*(47*s13^3 + 54*s13^2*s23 + 
                  185*s13*s23^2 - 46*s23^3) + s12^6*(18*s13^3 - 135*s13^2*
                   s23 - 299*s13*s23^2 + 86*s23^3) + s12^3*s23^3*(9*s13^3 + 
                  312*s13^2*s23 - 145*s13*s23^2 + 155*s23^3) + s12^4*s23^2*
                 (-104*s13^3 + 438*s13^2*s23 + 436*s13*s23^2 + 277*s23^3) + 
                s12^5*s23*(-63*s13^3 - 260*s13^2*s23 + 795*s13*s23^2 + 
                  278*s23^3)) + p2q*p3q^2*(18*s12^10 + 9*s12^9*(2*s13 - 
                  3*s23) - 10*s13^2*s23^6*(13*s13^2 + 6*s13*s23 - 7*s23^2) - 
                s12^8*(54*s13^2 + 441*s13*s23 + 44*s23^2) - s12^7*
                 (90*s13^3 + 783*s13^2*s23 + 760*s13*s23^2 - 940*s23^3) + 
                s12*s13*s23^5*(-85*s13^3 - 59*s13^2*s23 + 318*s13*s23^2 + 
                  22*s23^3) + 2*s12^2*s23^4*(157*s13^4 + 513*s13^3*s23 + 
                  156*s13^2*s23^2 + 295*s13*s23^3 - 46*s23^4) + 2*s12^3*s23^3*
                 (192*s13^4 + 1081*s13^3*s23 + 982*s13^2*s23^2 + 592*s13*
                   s23^3 + 27*s23^4) + s12^4*s23^2*(46*s13^4 + 908*s13^3*
                   s23 + 3964*s13^2*s23^2 + 3221*s13*s23^3 + 724*s23^4) + 
                s12^5*s23*(-90*s13^4 - 493*s13^3*s23 + 1526*s13^2*s23^2 + 
                  5436*s13*s23^3 + 1793*s23^4) + s12^6*(-36*s13^4 - 
                  459*s13^3*s23 - 1147*s13^2*s23^2 + 2530*s13*s23^3 + 
                  2154*s23^4)) + p2q^3*s13*(18*s12^8*(s13 - 2*s23) + 
                9*s12^7*(6*s13^2 + s13*s23 - 28*s23^2) + s12^6*(54*s13^3 + 
                  153*s13^2*s23 - 467*s13*s23^2 - 263*s23^3) + 30*s13^2*s23^4*
                 (6*s13^3 + 5*s13^2*s23 - 6*s13*s23^2 - 5*s23^3) + 
                s12*s13*s23^3*(225*s13^4 + 389*s13^3*s23 - 461*s13^2*s23^2 - 
                  649*s13*s23^3 - 24*s23^4) + s12^5*(18*s13^4 + 171*s13^3*
                   s23 - 344*s13^2*s23^2 - 812*s13*s23^3 + 393*s23^4) + 
                s12^3*s23^2*(49*s13^4 - 679*s13^3*s23 - 673*s13^2*s23^2 - 
                  459*s13*s23^3 + 575*s23^4) + s12^4*s23*(63*s13^4 - 
                  89*s13^3*s23 - 1156*s13^2*s23^2 - 346*s13*s23^3 + 
                  841*s23^4) + s12^2*s23^2*(45*s13^5 + 253*s13^4*s23 - 
                  689*s13^3*s23^2 - 574*s13^2*s23^3 - 451*s13*s23^4 + 
                  174*s23^5)) - p2q^2*p3q*(36*s12^9*(s13 + s23) + 
                18*s12^8*(5*s13^2 + 19*s13*s23 - 4*s23^2) + s12^7*
                 (54*s13^3 + 477*s13^2*s23 + 407*s13*s23^2 - 745*s23^3) + 
                5*s13^2*s23^5*(33*s13^3 + 89*s13^2*s23 + 49*s13*s23^2 - 
                  7*s23^3) + s12^6*(-18*s13^4 + 117*s13^3*s23 + 688*s13^2*
                   s23^2 - 1519*s13*s23^3 - 1286*s23^4) + s12*s13*s23^4*
                 (565*s13^4 + 1383*s13^3*s23 + 916*s13^2*s23^2 - 183*s13*
                   s23^3 - 11*s23^4) + s12^2*s23^3*(557*s13^5 + 1923*s13^4*
                   s23 + 308*s13^3*s23^2 + 350*s13^2*s23^3 - 568*s13*s23^4 + 
                  46*s23^5) + s12^3*s23^2*(122*s13^5 + 1267*s13^4*s23 - 
                  461*s13^3*s23^2 - 680*s13^2*s23^3 - 1548*s13*s23^4 + 
                  55*s23^5) - s12^4*s23*(63*s13^5 - 133*s13^4*s23 - 
                  387*s13^3*s23^2 + 2292*s13^2*s23^3 + 3087*s13*s23^4 + 
                  184*s23^5) - s12^5*(18*s13^5 + 117*s13^4*s23 - 328*s13^3*
                   s23^2 + 653*s13^2*s23^3 + 3716*s13*s23^4 + 842*s23^5)))))/
          (18*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)^2*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (-18*p1q^6*s23^4*(s12 + s23)*(12*s12^5 - 15*s13^2*s23^2*
              (s13 + s23) + 3*s12^4*(s13 + 12*s23) - s12*s13*s23*
              (20*s13^2 + 37*s13*s23 + 2*s23^2) + s12^2*s23*(-31*s13^2 - s13*
                s23 + 12*s23^2) + s12^3*(-9*s13^2 + 4*s13*s23 + 36*s23^2)) - 
           18*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*
            (p2q^2*s13^2*(52*s12^4 - s12^3*(s13 - 104*s23) + 4*s12*s13*
                (5*s13 - 2*s23)*s23 + 15*s13^2*s23^2 + s12^2*s23*
                (-9*s13 + 52*s23)) - p2q*p3q*s13*(2*s12 + s23)*
              (52*s12^4 - s12^3*(s13 - 104*s23) + 4*s12*s13*(5*s13 - 2*s23)*
                s23 + 15*s13^2*s23^2 + s12^2*s23*(-9*s13 + 52*s23)) + 
             p3q^2*s12*(s12 + s23)*(34*s12^4 + 4*s12*s13*(5*s13 - 2*s23)*
                s23 + 15*s13^2*s23^2 + s12^2*s23*(-27*s13 + 34*s23) + s12^3*
                (-19*s13 + 68*s23))) - 2*p1q^5*s23^2*
            (p3q*(s12 + s23)*(27*s12^7 + 9*s12^6*(9*s13 - 62*s23) - 155*s13^2*
                s23^4*(s13 + s23) + s12^5*(81*s13^2 - 126*s13*s23 - 
                 1435*s23^2) - s12*s13*s23^3*(75*s13^2 + 468*s13*s23 + 
                 218*s23^2) + s12^4*(27*s13^3 + 486*s13^2*s23 - 177*s13*
                  s23^2 - 415*s23^3) + s12^2*s23^2*(202*s13^3 - 239*s13^2*
                  s23 + 13*s13*s23^2 + 633*s23^3) + s12^3*s23*(54*s13^3 + 
                 524*s13^2*s23 + 301*s13*s23^2 + 1068*s23^3)) + 
             p2q*(27*s12^8 + 9*s12^7*(9*s13 - s23) + s12^6*(81*s13^2 + 
                 396*s13*s23 - 13*s23^2) + 20*s13^2*s23^4*(27*s13^2 + 
                 26*s13*s23 - s23^2) + s12*s13*s23^3*(1125*s13^3 + 
                 1597*s13^2*s23 - 308*s13*s23^2 - 200*s23^3) + s12^5*
                (27*s13^3 + 639*s13^2*s23 + 1029*s13*s23^2 + 850*s23^3) + 
               s12^3*s23^2*(967*s13^3 + 672*s13^2*s23 + 836*s13*s23^2 + 
                 1791*s23^3) + s12^4*s23*(234*s13^3 + 1289*s13^2*s23 + 
                 1492*s13*s23^2 + 2093*s23^3) + s12^2*s23^2*(540*s13^4 + 
                 1837*s13^3*s23 - 347*s13^2*s23^2 - 142*s13*s23^3 + 
                 525*s23^4))) + p1q^4*s23*(p3q^2*(s12 + s23)*(108*s12^8 + 108*
                s12^7*(3*s13 - 17*s23) - 190*s13^2*s23^5*(s13 + s23) + 4*
                s12^6*(81*s13^2 - 324*s13*s23 - 1057*s23^2) + 2*s12*s13*s23^4*
                (-295*s13^2 + 32*s13*s23 + 382*s23^2) + 6*s12^5*(18*s13^3 + 
                 159*s13^2*s23 - 463*s13*s23^2 - 82*s23^3) + s12^4*s23*
                (414*s13^3 - 703*s13^2*s23 - 1436*s13*s23^2 + 1576*s23^3) - 
               s12^2*s23^3*(847*s13^3 + 1249*s13^2*s23 + 744*s13*s23^2 + 
                 1920*s23^3) - s12^3*s23^2*(191*s13^3 + 3196*s13^2*s23 + 
                 2106*s13*s23^2 + 2136*s23^3)) + p2q*p3q*(108*s12^9 + 18*
                s12^8*(24*s13 - 11*s23) + 2*s12^7*(324*s13^2 + 594*s13*s23 - 
                 197*s23^2) - 30*s13^2*s23^5*(31*s13^2 + 45*s13*s23 + 
                 14*s23^2) - 2*s12*s13*s23^4*(1210*s13^3 + 2819*s13^2*s23 + 
                 670*s13*s23^2 - 564*s23^3) + s12^6*(432*s13^3 + 2592*s13^2*
                  s23 + 1841*s13*s23^2 + 2290*s23^3) + s12^4*s23*
                (378*s13^4 + 573*s13^3*s23 - 1070*s13^2*s23^2 + 5768*s13*
                  s23^3 - 4602*s23^4) + 4*s12^5*(27*s13^4 + 396*s13^3*s23 + 
                 590*s13^2*s23^2 + 981*s13*s23^3 + 620*s23^4) - s12^2*s23^3*
                (1968*s13^4 + 8435*s13^3*s23 + 1474*s13^2*s23^2 - 
                 3427*s13*s23^3 + 2754*s23^4) - 2*s12^3*s23^2*(154*s13^4 + 
                 2318*s13^3*s23 + 980*s13^2*s23^2 - 2614*s13*s23^3 + 
                 3729*s23^4)) + p2q^2*(18*s12^8*(6*s13 - 13*s23) + 18*s12^7*
                (18*s13^2 + 9*s13*s23 - 37*s23^2) + s12^6*(324*s13^3 + 
                 2736*s13^2*s23 + 1091*s13*s23^2 - 694*s23^3) + 10*s13^2*
                s23^4*(162*s13^3 + 150*s13^2*s23 - 35*s13*s23^2 - 23*s23^3) + 
               s12^4*s23*(504*s13^4 + 6650*s13^3*s23 + 14043*s13^2*s23^2 + 
                 11686*s13*s23^3 - 2926*s23^4) + s12^3*s23^2*(1798*s13^4 + 
                 4376*s13^3*s23 + 9901*s13^2*s23^2 + 10112*s13*s23^3 - 
                 2682*s23^4) + s12^5*(108*s13^4 + 2844*s13^3*s23 + 
                 8895*s13^2*s23^2 + 5942*s13*s23^3 - 1340*s23^4) + 2*s12*s13*
                s23^3*(1485*s13^4 + 2003*s13^3*s23 - 1277*s13^2*s23^2 - 
                 778*s13*s23^3 + 182*s23^4) + s12^2*s23^2*(1080*s13^5 + 
                 3918*s13^4*s23 - 2048*s13^3*s23^2 + 935*s13^2*s23^3 + 
                 3695*s13*s23^4 - 834*s23^5))) + 
           p1q^3*(-(p3q^3*(s12 + s23)*(54*s12^9 + 18*s12^8*(9*s13 - 58*s23) + 
                230*s13^2*s23^6*(s13 + s23) + 2*s12^7*(81*s13^2 - 
                  783*s13*s23 - 616*s23^2) + 2*s12*s13*s23^5*(95*s13^2 + 
                  8*s13*s23 - 182*s23^2) + s12^3*s23^3*(-974*s13^3 + 
                  215*s13^2*s23 + 782*s13*s23^2 - 480*s23^3) + 6*s12^6*
                 (9*s13^3 - 159*s13^2*s23 - 482*s13*s23^2 + 467*s23^3) + 
                s12^2*s23^4*(163*s13^3 + 1363*s13^2*s23 + 1284*s13*s23^2 + 
                  870*s23^3) - s12^4*s23^2*(1963*s13^3 + 5363*s13^2*s23 + 
                  1926*s13*s23^2 + 2132*s23^3) + s12^5*s23*(-432*s13^3 - 
                  4577*s13^2*s23 - 1744*s13*s23^2 + 2154*s23^3))) + 
             p2q*p3q^2*(-54*s12^10 - 54*s12^9*(s13 - 9*s23) + 20*s13^2*s23^6*
                (44*s13^2 + 21*s13*s23 - 23*s23^2) + 2*s12^8*(81*s13^2 - 
                 459*s13*s23 + 697*s23^2) + 2*s12*s13*s23^5*(625*s13^3 - 
                 433*s13^2*s23 - 1224*s13*s23^2 + 364*s23^3) + s12^7*
                (270*s13^3 - 324*s13^2*s23 - 1525*s13*s23^2 + 448*s23^3) + 
               s12^3*s23^3*(-1960*s13^4 - 5882*s13^3*s23 + 3449*s13^2*s23^2 + 
                 17567*s13*s23^3 - 1908*s23^4) + 2*s12^6*(54*s13^4 + 
                 594*s13^3*s23 + 1237*s13^2*s23^2 + 3584*s13*s23^3 + 
                 1287*s23^4) - s12^2*s23^4*(811*s13^4 + 4798*s13^3*s23 + 
                 2883*s13^2*s23^2 - 4678*s13*s23^3 + 1704*s23^4) + s12^4*
                s23^2*(-929*s13^4 - 1956*s13^3*s23 + 12779*s13^2*s23^2 + 
                 32172*s13*s23^3 + 4942*s23^4) + s12^5*s23*(108*s13^4 + 
                 1602*s13^3*s23 + 11635*s13^2*s23^2 + 26384*s13*s23^3 + 
                 8126*s23^4)) - p2q^3*s13*(54*s12^8*(s13 + 4*s23) + 54*s12^7*
                (3*s13^2 + 11*s13*s23 + 19*s23^2) + 120*s13^2*s23^4*
                (9*s13^3 + 8*s13^2*s23 - 9*s13*s23^2 - 8*s23^3) + s12^6*
                (162*s13^3 + 1746*s13^2*s23 + 2359*s13*s23^2 + 736*s23^3) + 
               s12^4*s23*(252*s13^4 + 4972*s13^3*s23 + 12996*s13^2*s23^2 + 
                 7523*s13*s23^3 - 12546*s23^4) + s12^3*s23^2*(674*s13^4 + 
                 4378*s13^3*s23 + 10939*s13^2*s23^2 + 6563*s13*s23^3 - 
                 11136*s23^4) + s12^5*(54*s13^4 + 1620*s13^3*s23 + 
                 6945*s13^2*s23^2 + 5389*s13*s23^3 - 4922*s23^4) + 2*s12*s13*
                s23^3*(855*s13^4 + 1087*s13^3*s23 - 2023*s13^2*s23^2 - 
                 1397*s13*s23^3 + 618*s23^4) + 2*s12^2*s23^2*(180*s13^5 + 
                 855*s13^4*s23 - 1101*s13^3*s23^2 + 700*s13^2*s23^3 + 
                 1963*s13*s23^4 - 1719*s23^5)) + p2q^2*p3q*(108*s12^9*
                (s13 + 4*s23) + 18*s12^8*(15*s13^2 + 66*s13*s23 + 79*s23^2) + 
               10*s13^2*s23^5*(93*s13^3 + 277*s13^2*s23 + 161*s13*s23^2 - 
                 23*s23^3) + s12^7*(162*s13^3 + 3834*s13^2*s23 + 
                 3719*s13*s23^2 + 1550*s23^3) + 2*s12*s13*s23^4*(1730*s13^4 + 
                 4619*s13^3*s23 + 1318*s13^2*s23^2 - 1719*s13*s23^3 + 
                 182*s23^4) + 2*s12^6*(-27*s13^4 + 1350*s13^3*s23 + 
                 6949*s13^2*s23^2 + 5434*s13*s23^3 + 669*s23^4) + s12^3*s23^2*
                (712*s13^5 + 5794*s13^4*s23 + 1214*s13^3*s23^2 + 6834*s13^2*
                  s23^3 + 30013*s13*s23^4 - 1842*s23^5) + s12^2*s23^3*
                (3618*s13^5 + 11147*s13^4*s23 - 445*s13^3*s23^2 - 
                 3972*s13^2*s23^3 + 9036*s13*s23^4 - 834*s23^5) + s12^4*s23*
                (-270*s13^5 + 561*s13^4*s23 + 8535*s13^3*s23^2 + 20700*s13^2*
                  s23^3 + 40856*s13*s23^4 - 406*s23^5) + s12^5*(-54*s13^5 - 
                 648*s13^4*s23 + 8588*s13^3*s23^2 + 23756*s13^2*s23^3 + 
                 27744*s13*s23^4 + 1380*s23^5))) + 
           2*p1q*(-(p3q^5*s12^2*(s12 + s23)*(27*s12^7 - 155*s13^2*s23^4*
                 (s13 + s23) + 9*s12^6*(9*s13 + 40*s23) - s12*s13*s23^3*
                 (75*s13^2 + 288*s13*s23 + 38*s23^2) + s12^5*(81*s13^2 + 
                  297*s13*s23 + 509*s23^2) + 2*s12^3*s23*(27*s13^3 + 
                  181*s13^2*s23 - 25*s13*s23^2 - 222*s23^3) + s12^2*s23^2*
                 (202*s13^3 + 274*s13^2*s23 - 104*s13*s23^2 - 177*s23^3) + 
                s12^4*(27*s13^3 - 9*s13^2*s23 + 192*s13*s23^2 - 91*s23^3))) + 
             p2q^5*s13^3*(27*s12^7 + 520*s13^2*s23^4*(s13 + s23) + 9*s12^6*
                (9*s13 + 58*s23) + s12*s13*s23^3*(825*s13^2 + 927*s13*s23 - 
                 398*s23^2) + s12^5*(81*s13^2 + 621*s13*s23 + 2993*s23^2) + 
               s12^2*s23^2*(202*s13^3 + 427*s13^2*s23 + 787*s13*s23^2 + 
                 1821*s23^3) + s12^3*s23*(54*s13^3 + 137*s13^2*s23 + 
                 3136*s13*s23^2 + 5712*s23^3) + s12^4*(27*s13^3 + 
                 153*s13^2*s23 + 2451*s13*s23^2 + 6389*s23^3)) + 
             p2q^4*p3q*s13^2*(-81*s12^8 - 27*s12^7*(7*s13 + 47*s23) + 5*s13^2*
                s23^4*(208*s13^2 + 131*s13*s23 - 77*s23^2) - 3*s12^6*
                (27*s13^2 + 84*s13*s23 + 2003*s23^2) + s12^5*(81*s13^3 + 
                 1026*s13^2*s23 + 2125*s13*s23^2 - 13160*s23^3) + s12*s13*
                s23^3*(1650*s13^3 + 324*s13^2*s23 - 2365*s13*s23^2 + 
                 326*s23^3) + s12^4*(54*s13^4 + 117*s13^3*s23 + 4959*s13^2*
                  s23^2 + 7318*s13*s23^3 - 14237*s23^4) + s12^3*s23*
                (108*s13^4 - 386*s13^3*s23 + 5700*s13^2*s23^2 + 8906*s13*
                  s23^3 - 7251*s23^4) + s12^2*s23^2*(404*s13^4 - 923*s13^3*
                  s23 - 302*s13^2*s23^2 + 4022*s13*s23^3 - 1353*s23^4)) + 
             p2q*p3q^4*s12*(-54*s12^9 + 230*s13^3*s23^5*(s13 + s23) - 9*s12^8*
                (9*s13 + 68*s23) + s12^7*(81*s13^2 + 864*s13*s23 - 
                 1072*s23^2) + 2*s12*s13^2*s23^4*(390*s13^2 + 458*s13*s23 - 
                 27*s23^2) + s12^6*(189*s13^3 + 1395*s13^2*s23 + 
                 3933*s13*s23^2 + 208*s23^3) + s12^2*s13*s23^3*(1079*s13^3 + 
                 765*s13^2*s23 - 498*s13*s23^2 + 622*s23^3) + s12^3*s23^2*
                (714*s13^4 - 571*s13^3*s23 - 1833*s13^2*s23^2 + 2771*s13*
                  s23^3 + 372*s23^4) + s12^4*s23*(216*s13^4 - 659*s13^3*s23 - 
                 1416*s13^2*s23^2 + 5598*s13*s23^3 + 1476*s23^4) + s12^5*
                (81*s13^4 + 135*s13^3*s23 + 1247*s13^2*s23^2 + 6437*s13*
                  s23^3 + 1826*s23^4)) - p2q^2*p3q^3*(27*s12^10 - 9*s12^9*
                (9*s13 - 25*s23) + 385*s13^4*s23^5*(s13 + s23) + s12*s13^3*
                s23^4*(1530*s13^2 + 1109*s13*s23 - 786*s23^2) + s12^8*
                (-324*s13^2 - 2214*s13*s23 + 203*s23^2) - s12^7*(216*s13^3 + 
                 765*s13^2*s23 + 6993*s13*s23^2 + 626*s23^3) + s12^2*s13^2*
                s23^3*(1777*s13^3 + 334*s13^2*s23 - 1711*s13*s23^2 + 
                 1944*s23^3) + s12^6*(81*s13^4 + 1431*s13^3*s23 + 
                 5480*s13^2*s23^2 - 10132*s13*s23^3 - 1291*s23^4) + 2*s12^3*
                s13*s23^2*(330*s13^4 - 694*s13^3*s23 + 1073*s13^2*s23^2 + 
                 4941*s13*s23^3 - 547*s23^4) + s12^5*(81*s13^5 - 
                 54*s13^4*s23 + 6103*s13^3*s23^2 + 17486*s13^2*s23^3 - 
                 8790*s13*s23^4 - 855*s23^5) + s12^4*s23*(189*s13^5 - 
                 1143*s13^4*s23 + 7697*s13^3*s23^2 + 19583*s13^2*s23^3 - 
                 4612*s13*s23^4 - 195*s23^5)) + p2q^3*p3q^2*s13*
              (81*s12^9 + 81*s12^8*(s13 + 12*s23) - 3*s12^7*(72*s13^2 + 
                 657*s13*s23 - 857*s23^2) + 10*s13^3*s23^4*(52*s13^2 - 
                 25*s13*s23 - 77*s23^2) - s12^6*(324*s13^3 + 2421*s13^2*s23 + 
                 13089*s13*s23^2 - 3553*s23^3) + 3*s12*s13^2*s23^3*
                (275*s13^3 - 711*s13^2*s23 - 1102*s13*s23^2 + 294*s23^3) + 
               s12^2*s13*s23^2*(202*s13^4 - 3127*s13^3*s23 - 2203*s13^2*
                  s23^2 + 3151*s13*s23^3 - 3088*s23^4) + s12^5*(-81*s13^4 + 
                 243*s13^3*s23 - 6568*s13^2*s23^2 - 29866*s13*s23^3 + 
                 3346*s23^4) + s12^3*s23*(54*s13^5 - 1183*s13^4*s23 + 
                 2873*s13^3*s23^2 + 513*s13^2*s23^3 - 16192*s13*s23^4 + 
                 510*s23^5) + s12^4*(27*s13^5 - 225*s13^4*s23 + 2937*s13^3*
                  s23^2 - 6324*s13^2*s23^3 - 31973*s13*s23^4 + 
                 1983*s23^5))) + p1q^2*(-(p3q^4*s12*(s12 + s23)*(108*s12^8 + 
                36*s12^7*(9*s13 - 23*s23) - 190*s13^2*s23^5*(s13 + s23) + 
                s12^6*(324*s13^2 - 918*s13*s23 - 3832*s23^2) - 2*s12*s13*
                 s23^4*(295*s13^2 + 58*s13*s23 - 292*s23^2) + 6*s12^5*
                 (18*s13^3 - 51*s13^2*s23 - 673*s13*s23^2 - 760*s23^3) - 
                s12^2*s23^3*(1477*s13^3 + 2617*s13^2*s23 + 870*s13*s23^2 + 
                  1128*s23^3) - s12^3*s23^2*(1451*s13^3 + 5032*s13^2*s23 + 
                  3834*s13*s23^2 + 2388*s23^3) - s12^4*s23*(216*s13^3 + 
                  2611*s13^2*s23 + 4856*s13*s23^2 + 2924*s23^3))) + 
             p2q^4*s13^2*(-54*s12^8 - 54*s12^7*(2*s13 - s23) - 2*s12^6*s23*
                (27*s13 + 671*s23) + s12^5*(108*s13^3 + 774*s13^2*s23 - 
                 797*s13*s23^2 - 9352*s23^3) + 10*s13^2*s23^3*(27*s13^3 + 
                 23*s13^2*s23 - 154*s13*s23^2 - 150*s23^3) + s12^4*
                (54*s13^4 + 972*s13^3*s23 + 2909*s13^2*s23^2 - 4051*s13*
                  s23^3 - 19662*s23^4) + s12^3*s23*(90*s13^4 + 1292*s13^3*
                  s23 + 3282*s13^2*s23^2 - 4547*s13*s23^3 - 17070*s23^4) + 
               s12^2*s23^2*(242*s13^4 - 1306*s13^3*s23 - 259*s13^2*s23^2 + 
                 337*s13*s23^3 - 5310*s23^4) + 2*s12*s13*s23^2*(180*s13^4 + 
                 213*s13^3*s23 - 1717*s13^2*s23^2 - 1503*s13*s23^3 + 
                 762*s23^4)) + p2q*p3q^3*(-162*s12^10 - 54*s12^9*
                (4*s13 - 7*s23) + 730*s13^3*s23^6*(s13 + s23) + 2*s12*s13^2*
                s23^5*(940*s13^2 + 1019*s13*s23 - 246*s23^2) + 6*s12^8*
                (54*s13^2 - 363*s13*s23 + 751*s23^2) + s12^2*s13*s23^4*
                (827*s13^3 + 985*s13^2*s23 - 850*s13*s23^2 + 1508*s23^3) + 2*
                s12^7*(324*s13^3 - 621*s13^2*s23 - 2468*s13*s23^2 + 
                 4850*s23^3) + s12^3*s23^3*(-1654*s13^4 - 3648*s13^3*s23 + 
                 3933*s13^2*s23^2 + 11992*s13*s23^3 + 2184*s23^4) + s12^4*
                s23^2*(-1319*s13^4 - 4769*s13^3*s23 + 8937*s13^2*s23^2 + 
                 27108*s13*s23^3 + 7182*s23^4) + s12^5*s23*(432*s13^4 - 
                 76*s13^3*s23 + 2069*s13^2*s23^2 + 22724*s13*s23^3 + 
                 10282*s23^4) + s12^6*(270*s13^4 + 1746*s13^3*s23 - 
                 4383*s13^2*s23^2 + 3126*s13*s23^3 + 11018*s23^4)) + 
             p2q^2*p3q^2*(-54*s12^10 + 54*s12^9*(4*s13 + 11*s23) - 1460*s13^3*
                s23^5*(s13^2 - s23^2) + 2*s12^8*(378*s13^2 + 621*s13*s23 + 
                 1957*s23^2) - 2*s12*s13^2*s23^4*(880*s13^3 - 1352*s13^2*
                  s23 - 2755*s13*s23^2 + 777*s23^3) + s12^7*(432*s13^3 + 
                 6426*s13^2*s23 + 4006*s13*s23^2 + 8220*s23^3) + s12^2*s13*
                s23^3*(1684*s13^4 + 7955*s13^3*s23 + 2555*s13^2*s23^2 - 
                 8354*s13*s23^3 + 4696*s23^4) + s12^6*(-270*s13^4 + 
                 5130*s13^3*s23 + 12265*s13^2*s23^2 + 16154*s13*s23^3 + 
                 9222*s23^4) + s12^3*s23^2*(1552*s13^5 + 6762*s13^4*s23 - 
                 10804*s13^3*s23^2 - 18171*s13^2*s23^3 + 21822*s13*s23^4 + 
                 1056*s23^5) + s12^4*s23*(-648*s13^5 + 355*s13^4*s23 - 
                 9205*s13^3*s23^2 - 14395*s13^2*s23^3 + 40400*s13*s23^4 + 
                 3990*s23^5) + s12^5*(-216*s13^5 - 1296*s13^4*s23 + 
                 5252*s13^3*s23^2 + 3971*s13^2*s23^3 + 36448*s13*s23^4 + 
                 7202*s23^5)) + p2q^3*p3q*s13*(108*s12^9 + 54*s12^8*
                (s13 - 12*s23) - 2*s12^7*(216*s13^2 + 783*s13*s23 + 
                 1862*s23^2) - 10*s13^2*s23^4*(31*s13^3 + 327*s13^2*s23 + 
                 223*s13*s23^2 - 73*s23^3) - s12^6*(540*s13^3 + 5742*s13^2*
                  s23 + 12107*s13*s23^2 + 3296*s23^3) - s12^5*(108*s13^4 + 
                 5454*s13^3*s23 + 20298*s13^2*s23^2 + 35951*s13*s23^3 - 
                 5872*s23^4) - 2*s12*s13*s23^3*(750*s13^4 + 3713*s13^3*s23 + 
                 1424*s13^2*s23^2 - 2593*s13*s23^3 + 436*s23^4) + s12^2*s23^2*
                (-1396*s13^5 - 5094*s13^4*s23 + 1991*s13^3*s23^2 + 
                 1373*s13^2*s23^3 - 12508*s13*s23^4 + 2604*s23^5) + s12^3*s23*
                (108*s13^5 - 1782*s13^4*s23 - 992*s13^3*s23^2 - 20346*s13^2*
                  s23^3 - 39735*s13*s23^4 + 9792*s23^5) + s12^4*(54*s13^5 - 
                 522*s13^4*s23 - 8485*s13^3*s23^2 - 32271*s13^2*s23^3 - 
                 53723*s13*s23^4 + 13388*s23^5))))/(36*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)^2*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p2 . E0*p2 . E0conj + p1 . E0*
        ((-1/18*(ep^2*(-9*s12^4 - 9*s12^3*(s13 - 4*s23) + 10*s13*s23^3 + s12*
                s23^2*(29*s13 + 6*s23) + 3*s12^2*s23*(6*s13 + 17*s23)))/
             (s12^2*s13*s23^2) - ((s12 + s13 + s23)*
             (2*p1q^4*s23^2*(p2q*(90*s12^3 + s12^2*(153*s13 - 233*s23) + 
                  243*s12*(s13 - s23)*s23 + 10*(9*s13 - 8*s23)*s23^2) + 
                p3q*(90*s12^3 - 233*s12^2*s23 - 243*s12*s23^2 - 80*s23^3)) + 
              18*p2q*(p3q*s12 - p2q*s13)*(p2q^3*s13^2*(-37*s12^2 + 
                  s12*(17*s13 - 27*s23) + 10*(s13 - s23)*s23) + p3q^3*s12*s13*
                 (17*s12^2 + 27*s12*s23 + 10*s23^2) + p2q*p3q^2*(9*s12^4 - 
                  10*s13^2*s23^2 + 9*s12^3*(6*s13 + s23) + s12*s13*s23*
                   (-37*s13 + 20*s23) + s12^2*s13*(-34*s13 + 53*s23)) + 
                p2q^2*p3q*s13*(28*s12^3 + 10*s13*(s13 - 2*s23)*s23 + 
                  s12^2*(-71*s13 + 26*s23) + s12*(17*s13^2 - 64*s13*s23 + 
                    10*s23^2))) + p1q*(2*p3q^4*s12^2*(90*s12^3 - 233*s12^2*
                   s23 - 243*s12*s23^2 - 80*s23^3) + p2q*p3q^3*s12*
                 (279*s12^4 + s12^3*(414*s13 - 725*s23) + s12^2*(1607*s13 - 
                    684*s23)*s23 + 40*s12*(9*s13 - 8*s23)*s23^2 - 
                  40*s13*s23^3) + p2q^2*p3q^2*(423*s12^5 + s12^4*(414*s13 - 
                    97*s23) - 520*s13^2*s23^3 - 2*s12*s13*s23^2*(909*s13 + 
                    40*s23) + s12^3*(-1512*s13^2 + 631*s13*s23 - 360*s23^2) + 
                  s12^2*s23*(-2581*s13^2 + 342*s13*s23 - 160*s23^2)) - 
                p2q^3*p3q*s13*(684*s12^4 + 80*s13*s23^2*(-9*s13 + 13*s23) + 
                  37*s12^3*(45*s13 + 22*s23) + 4*s12*s23*(-486*s13^2 + 
                    819*s13*s23 + 10*s23^2) + s12^2*(-1224*s13^2 + 4190*s13*
                     s23 + 18*s23^2)) + p2q^4*s13^2*(261*s12^3 + 
                  s12^2*(972*s13 - 1789*s23) - 20*s23*(9*s13^2 - 36*s13*s23 + 
                    26*s23^2) - 18*s12*(17*s13^2 - 88*s13*s23 + 81*s23^2))) - 
              p1q^3*s23*(2*p3q^2*(180*s12^4 - 556*s12^3*s23 - 253*s12^2*
                   s23^2 + 83*s12*s23^3 + 80*s23^4) + p2q*p3q*(216*s12^4 + 
                  s12^3*(828*s13 - 1427*s23) + 40*s23^3*(-17*s13 + 8*s23) - 
                  s12^2*s23*(563*s13 + 31*s23) + 4*s12*s23^2*(-396*s13 + 
                    163*s23)) + p2q^2*(18*s12^4 + 9*s12^3*(42*s13 - 17*s23) + 
                  20*s23^2*(27*s13^2 - 34*s13*s23 + 8*s23^2) + 18*s12*s23*
                   (71*s13^2 - 108*s13*s23 + 27*s23^2) + s12^2*(612*s13^2 - 
                    1895*s13*s23 + 475*s23^2))) + p1q^2*(2*p3q^3*s12*
                 (90*s12^4 - 413*s12^3*s23 + 223*s12^2*s23^2 + 406*s12*
                   s23^3 + 160*s23^4) + p2q*p3q^2*(180*s12^5 + 4*s12^4*
                   (27*s13 - 166*s23) + 500*s13*s23^4 + 2*s12*s23^3*
                   (529*s13 + 320*s23) + s12^2*s23^2*(437*s13 + 1784*s23) + 
                  s12^3*s23*(293*s13 + 1900*s23)) + p2q^2*p3q*(162*s12^5 - 
                  360*s12^4*s13 + 20*s13*s23^3*(-53*s13 + 50*s23) + 
                  4*s12*s23^2*(-684*s13^2 + 629*s13*s23 + 80*s23^2) + 
                  s12^2*s23*(-2041*s13^2 + 1855*s13*s23 + 972*s23^2) + 
                  s12^3*(-594*s13^2 - 1849*s13*s23 + 1130*s23^2)) + 
                p2q^3*s13*(-162*s12^4 + 90*s12^3*(2*s13 - 5*s23) + 
                  20*s23^2*(27*s13^2 - 53*s13*s23 + 25*s23^2) + 18*s12*s23*
                   (61*s13^2 - 152*s13*s23 + 81*s23^2) + s12^2*(306*s13^2 - 
                    2401*s13*s23 + 1598*s23^2)))))/(36*ep*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13*s23*(p3q^2*s12^2 + (p2q*s13 - 
                p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           (ep*(45*p1q^5*s12*s23^5*(s12 + s23)*(s12 + s13 + s23) + 
              9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*(
                5*p3q^2*s12*s23^2*(s12 + s23) - p2q^2*s13*s23*(s12 - s13 + 
                  s23)*(6*s12 + 5*s23) + p2q*p3q*(s12 + s23)*(5*s12^3 - 
                  5*s13*s23^2 + s12*s23*(-6*s13 + 5*s23) + s12^2*(s13 + 
                    5*s23))) + p1q^4*s23^2*(s12 + s23)*(p3q*(18*s12^5 + 
                  18*s12^4*(s13 - 9*s23) + s12^2*(25*s13 - 114*s23)*s23^2 + 
                  35*s23^4*(s13 + s23) + s12*s23^3*(34*s13 + 79*s23) - 
                  s12^3*s23*(27*s13 + 338*s23)) + p2q*(18*s12^5 + 
                  9*s12^4*(2*s13 - 13*s23) + s12^3*(27*s13 - 158*s23)*s23 + 
                  s12^2*s23*(9*s13^2 + 25*s13*s23 - 24*s23^2) + 5*s23^3*
                   (-9*s13^2 - 2*s13*s23 + 7*s23^2) + 2*s12*s23^2*
                   (-72*s13^2 - 100*s13*s23 + 17*s23^2))) + p1q^3*s23*(
                -(p3q^2*(s12 + s23)*(36*s12^6 + 18*s12^5*(2*s13 - 19*s23) + 
                   9*s12*(4*s13 - s23)*s23^4 - 35*s23^5*(s13 + s23) + 
                   s12^3*s23^2*(212*s13 + 155*s23) + s12^2*s23^3*(-47*s13 + 
                     182*s23) - s12^4*s23*(72*s13 + 379*s23))) - 
                p2q*p3q*(s12 + s23)*(36*s12^6 + 18*s12^5*(4*s13 - 23*s23) + 
                  s12^4*(36*s13^2 - 432*s13*s23 - 379*s23^2) + 10*s23^4*
                   (16*s13^2 + 9*s13*s23 - 7*s23^2) + 2*s12*s23^3*(43*s13^2 + 
                    179*s13*s23 + s23^2) + 2*s12^3*s23*(-9*s13^2 - 178*s13*
                     s23 + 53*s23^2) + s12^2*s23^2*(203*s13^2 - 408*s13*s23 + 
                    107*s23^2)) + p2q^2*(-18*s12^6*(2*s13 - 9*s23) + 
                  s12^4*s23*(-108*s13^2 + 847*s13*s23 + 184*s23^2) + 
                  s12^5*(-36*s13^2 + 342*s13*s23 + 342*s23^2) + s12^2*s23^2*
                   (135*s13^3 + 26*s13^2*s23 - 213*s13*s23^2 - 71*s23^3) + 
                  5*s23^4*(27*s13^3 - 5*s13^2*s23 - 25*s13*s23^2 + 7*s23^3) + 
                  3*s12*s23^3*(99*s13^3 + 62*s13^2*s23 - 149*s13*s23^2 + 
                    8*s23^3) - s12^3*s23*(18*s13^3 + 257*s13^2*s23 - 
                    578*s13*s23^2 + 56*s23^3))) + p1q*(p3q^4*s12^2*
                 (s12 + s23)*(18*s12^5 + 18*s12^4*(s13 - 9*s23) + 
                  s12^2*(115*s13 - 24*s23)*s23^2 + s12*(34*s13 - 11*s23)*
                   s23^3 - 55*s23^4*(s13 + s23) - s12^3*s23*(27*s13 + 
                    248*s23)) + p2q*p3q^3*s12*(s12 + s23)*(36*s12^6 - 
                  153*s12^5*s23 - 70*s13*s23^4*(s13 + s23) + s12^4*
                   (-36*s13^2 + 459*s13*s23 - 244*s23^2) + 3*s12^3*s23*
                   (24*s13^2 + 230*s13*s23 - 49*s23^2) - 10*s12*s23^3*
                   (5*s13^2 + 25*s13*s23 + 11*s23^2) - s12^2*s23^2*
                   (365*s13^2 + 181*s13*s23 + 202*s23^2)) + p2q^3*p3q*s13*
                 (-36*s12^7 + 36*s12^6*s23 + s12^4*s23*(153*s13^2 - 
                    906*s13*s23 - 50*s23^2) + 10*s13*s23^4*(-18*s13^2 + 
                    7*s13*s23 + 25*s23^2) + s12^5*(36*s13^2 - 369*s13*s23 + 
                    46*s23^2) - 2*s12^2*s23^2*(99*s13^3 - 104*s13^2*s23 - 
                    535*s13*s23^2 + 15*s23^3) + s12^3*s23*(18*s13^3 + 
                    455*s13^2*s23 + 49*s13*s23^2 + 16*s23^3) - 2*s12*s23^3*
                   (198*s13^3 + 21*s13^2*s23 - 367*s13*s23^2 + 35*s23^3)) + 
                p2q^4*s13^2*(18*s12^6 + 18*s12^5*(s13 - s23) + 2*s12^4*
                   (63*s13 - 52*s23)*s23 + s12^3*s23*(9*s13^2 + 178*s13*s23 - 
                    20*s23^2) + s12^2*s23^2*(-45*s13^2 - 184*s13*s23 + 
                    235*s23^2) + 5*s23^3*(9*s13^3 - 27*s13^2*s23 - 
                    11*s13*s23^2 + 25*s23^3) + 3*s12*s23^2*(18*s13^3 - 
                    69*s13^2*s23 - 103*s13*s23^2 + 104*s23^3)) + 
                p2q^2*p3q^2*(18*s12^8 + 125*s13^2*s23^5*(s13 + s23) - 
                  18*s12^7*(3*s13 + s23) + s12*s13*s23^4*(357*s13^2 + 
                    352*s13*s23 - 140*s23^2) - 2*s12^6*(27*s13^2 - 180*s13*
                     s23 + 61*s23^2) + s12^5*(18*s13^3 - 477*s13^2*s23 + 
                    729*s13*s23^2 - 254*s23^3) + s12^2*s23^3*(581*s13^3 + 
                    715*s13^2*s23 - 295*s13*s23^2 - 55*s23^3) - s12^3*s23^2*
                   (-313*s13^3 + 490*s13^2*s23 + 484*s13*s23^2 + 246*s23^3) - 
                  s12^4*s23*(45*s13^3 + 1401*s13^2*s23 + 14*s13*s23^2 + 
                    359*s23^3))) + p1q^2*(p3q^3*s12*(s12 + s23)*(18*s12^6 + 
                  18*s12^5*(s13 - 11*s23) - 25*s23^5*(s13 + s23) - 
                  3*s12*s23^4*(11*s13 + 26*s23) + s12^4*s23*(-63*s13 + 
                    76*s23) + s12^2*s23^3*(-196*s13 + 127*s23) + s12^3*s23^2*
                   (169*s13 + 472*s23)) + p2q*p3q^2*(s12 + s23)*(18*s12^7 - 
                  115*s13*s23^5*(s13 + s23) - 9*s12^6*(2*s13 + 21*s23) + 
                  s12^2*s23^3*(-127*s13^2 + 311*s13*s23 + 34*s23^2) - 
                  s12*s23^4*(12*s13^2 + 197*s13*s23 + 50*s23^2) + s12^3*s23^2*
                   (-293*s13^2 + 46*s13*s23 + 274*s23^2) + s12^5*(-36*s13^2 + 
                    243*s13*s23 + 364*s23^2) + s12^4*s23*(27*s13^2 + 
                    854*s13*s23 + 761*s23^2)) + p2q^3*s13*(18*s12^6*
                   (s13 - 2*s23) + 9*s12^5*(2*s13^2 - 15*s13*s23 - 4*s23^2) + 
                  s12^4*s23*(45*s13^2 - 590*s13*s23 + 64*s23^2) + s12^2*s23^2*
                   (-45*s13^3 + 104*s13^2*s23 + 387*s13*s23^2 - 11*s23^3) - 
                  5*s23^4*(27*s13^3 - 25*s13^2*s23 - 29*s13*s23^2 + 
                    23*s23^3) - 3*s12*s23^3*(69*s13^3 - 44*s13^2*s23 - 
                    229*s13*s23^2 + 64*s23^3) + s12^3*s23*(9*s13^3 + 
                    133*s13^2*s23 - 592*s13*s23^2 + 130*s23^3)) + 
                p2q^2*p3q*(-36*s12^7*(s13 + s23) + 10*s13*s23^5*(26*s13^2 + 
                    3*s13*s23 - 23*s23^2) - 18*s12^6*(s13^2 - 5*s13*s23 - 
                    14*s23^2) + s12*s23^4*(519*s13^3 + 605*s13^2*s23 - 
                    479*s13*s23^2 - 25*s23^3) + s12^2*s23^3*(428*s13^3 + 
                    410*s13^2*s23 + 206*s13*s23^2 + 87*s23^3) + s12^3*s23^2*
                   (151*s13^3 - 1021*s13^2*s23 + 833*s13*s23^2 + 394*s23^3) + 
                  s12^4*s23*(-27*s13^3 - 1144*s13^2*s23 + 901*s13*s23^2 + 
                    751*s23^3) + s12^5*(18*s13^3 - 306*s13^2*s23 + 649*s13*
                     s23^2 + 757*s23^3)))))/(18*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           (-90*p1q^5*s12*s23^4*(s12 + s23)^2*(s12 + s13 + s23) - 
             18*(-(p3q*s12) + p2q*s13)*s23*(s12 + s13 + s23)*(-5*p3q^4*s12^2*
                s23*(s12 + s23)^2 + p2q^4*s13^2*(-41*s12^3 + s12^2*
                  (s13 - 69*s23) + s12*(28*s13 - 43*s23)*s23 + 15*(s13 - s23)*
                  s23^2) - p2q*p3q^3*s12*(s12 + s23)*(5*s12^3 - 
                 20*s13*s23^2 + s12*s23*(-33*s13 + 10*s23) + s12^2*
                  (16*s13 + 15*s23)) + p2q^2*p3q^2*(13*s12^5 - 15*s13^2*
                  s23^3 + 3*s12^4*(10*s13 + 7*s23) + 2*s12*s13*s23^2*
                  (-29*s13 + 20*s23) + s12^2*s23*(-40*s13^2 + 109*s13*s23 - 
                   5*s23^2) + 3*s12^3*(5*s13^2 + 33*s13*s23 + s23^2)) + p2q^3*
                p3q*s13*(28*s12^4 + 15*s13*(s13 - 2*s23)*s23^2 + 
                 s12^3*(-26*s13 + 64*s23) + s12*s23*(28*s13^2 - 101*s13*s23 + 
                   20*s23^2) + s12^2*(s13^2 - 109*s13*s23 + 56*s23^2))) - 
             2*p1q^4*s23^2*(s12 + s23)*(p3q*(27*s12^5 + 27*s12^4*
                  (s13 - 14*s23) + 115*s23^4*(s13 + s23) + 3*s12^2*s23^2*
                  (21*s13 + 107*s23) - s12^3*s23*(441*s13 + 326*s23) + 
                 s12*s23^3*(262*s13 + 357*s23)) + p2q*(27*s12^5 + 
                 27*s12^4*(s13 - 9*s23) - s12^3*s23*(252*s13 + 101*s23) + 
                 5*s23^3*(-27*s13^2 - 4*s13*s23 + 23*s23^2) + 3*s12^2*s23*
                  (18*s13^2 - 45*s13*s23 + 122*s23^2) + 2*s12*s23^2*
                  (-171*s13^2 - 130*s13*s23 + 156*s23^2))) - 
             p1q^3*s23*(-2*p3q^2*(s12 + s23)*(54*s12^6 + 54*s12^5*
                  (s13 - 12*s23) - 115*s23^5*(s13 + s23) - 2*s12^4*s23*
                  (387*s13 + 47*s23) - s12*s23^4*(32*s13 + 127*s23) + 
                 s12^2*s23^3*(371*s13 + 303*s23) + s12^3*s23^2*(612*s13 + 
                   923*s23)) - p2q*p3q*(s12 + s23)*(108*s12^6 + 72*s12^5*
                  (3*s13 - 13*s23) + s12^2*s23^2*(-801*s13^2 + 928*s13*s23 - 
                   243*s23^2) + 4*s12*s23^3*(379*s13^2 + 507*s13*s23 - 
                   197*s23^2) + 20*s23^4*(50*s13^2 + 27*s13*s23 - 23*s23^2) + 
                 s12^4*(108*s13^2 - 1278*s13*s23 + 829*s23^2) + 2*s12^3*s23*
                  (-171*s13^2 + 509*s13*s23 + 979*s23^2)) + p2q^2*
                (-18*s12^6*(6*s13 - 13*s23) + s12^4*s23*(648*s13^2 + 
                   800*s13*s23 - 157*s23^2) - 9*s12^5*(12*s13^2 - 124*s13*
                    s23 - 15*s23^2) + 10*s23^4*(81*s13^3 - 19*s13^2*s23 - 
                   77*s13*s23^2 + 23*s23^3) + 2*s12*s23^3*(1071*s13^3 + 
                   38*s13^2*s23 - 1611*s13*s23^2 + 382*s23^3) + s12^3*s23*
                  (-486*s13^3 + 333*s13^2*s23 - 3094*s13*s23^2 + 521*s23^3) + 
                 s12^2*s23^2*(630*s13^3 - 157*s13^2*s23 - 5122*s13*s23^2 + 
                   1113*s23^3))) + p1q*(-2*p3q^4*s12^2*(s12 + s23)*
                (27*s12^5 + 9*s12^4*(3*s13 - 32*s23) + 25*s23^4*(s13 + s23) + 
                 3*s12^2*s23^2*(51*s13 + 107*s23) - s12^3*s23*(351*s13 + 
                   146*s23) + s12*s23^3*(172*s13 + 177*s23)) - p2q*p3q^3*s12*
                (s12 + s23)*(108*s12^6 - 729*s12^5*s23 - 100*s13*s23^4*
                  (s13 + s23) + s12^4*(-108*s13^2 + 423*s13*s23 - 
                   674*s23^2) + s12^3*s23*(1656*s13^2 - 1288*s13*s23 - 
                   165*s23^2) + 20*s12*s23^3*(-38*s13^2 - 34*s13*s23 + 
                   5*s23^2) - s12^2*s23^2*(2835*s13^2 + 3827*s13*s23 + 
                   228*s23^2)) - p2q^3*p3q*s13*(-108*s12^7 + 1350*s12^6*s23 + 
                 20*s13*s23^4*(-54*s13^2 + 23*s13*s23 + 77*s23^2) + 
                 7*s12^4*s23*(81*s13^2 + 1012*s13*s23 + 674*s23^2) + 
                 s12^5*(108*s13^2 + 1881*s13*s23 + 4562*s23^2) - 4*s12*s23^3*
                  (774*s13^3 - 197*s13^2*s23 - 1581*s13*s23^2 + 25*s23^3) - 
                 2*s12^2*s23^2*(738*s13^3 - 947*s13^2*s23 - 5615*s13*s23^2 + 
                   62*s23^3) + 3*s12^3*s23*(180*s13^3 + 819*s13^2*s23 + 
                   3883*s13*s23^2 + 530*s23^3)) + p2q^4*s13^2*(-54*s12^6 + 
                 s12^4*(1089*s13 - 527*s23)*s23 + s12^5*(-54*s13 + 513*s23) + 
                 s12^3*s23*(432*s13^2 + 954*s13*s23 - 4121*s23^2) + 
                 s12^2*s23*(-18*s13^3 + 972*s13^2*s23 + 1015*s13*s23^2 - 
                   5109*s23^3) + 10*s23^3*(-27*s13^3 + 81*s13^2*s23 + 
                   31*s13*s23^2 - 77*s23^3) - 2*s12*s23^2*(252*s13^3 - 
                   891*s13^2*s23 - 757*s13*s23^2 + 1426*s23^3)) + p2q^2*p3q^2*
                (-54*s12^8 - 770*s13^2*s23^5*(s13 + s23) + 27*s12^7*
                  (6*s13 + 31*s23) - 2*s12*s13*s23^4*(1421*s13^2 + 
                   1686*s13*s23 - 100*s23^2) + s12^6*(162*s13^2 + 171*s13*
                    s23 + 2425*s23^2) - s12^2*s23^3*(3611*s13^3 + 5441*s13^2*
                    s23 - 954*s13*s23^2 + 50*s23^3) + s12^3*s23^2*
                  (-675*s13^3 - 2529*s13^2*s23 + 2843*s13*s23^2 + 
                   208*s23^3) + s12^4*s23*(1458*s13^3 + 184*s13^2*s23 + 
                   2703*s13*s23^2 + 1155*s23^3) + s12^5*(-54*s13^3 + 
                   36*s13^2*s23 + 623*s13*s23^2 + 2431*s23^3))) + 
             p1q^2*(-2*p3q^3*s12*(s12 + s23)*(27*s12^6 + 9*s12^5*(3*s13 - 
                   38*s23) - 5*s12^4*(81*s13 - 86*s23)*s23 - 185*s23^5*
                  (s13 + s23) + 19*s12^3*s23^2*(45*s13 + 37*s23) - 
                 4*s12^2*s23^3*(11*s13 + 105*s23) - s12*s23^4*(364*s13 + 
                   509*s23)) - p2q*p3q^2*(s12 + s23)*(54*s12^7 - 
                 730*s13*s23^5*(s13 + s23) - 54*s12^6*(s13 + 13*s23) + 
                 s12^2*s23^3*(383*s13^2 - 1689*s13*s23 - 1816*s23^2) + 
                 s12^4*s23*(1260*s13^2 + 863*s13*s23 - 350*s23^2) - 
                 2*s12*s23^4*(466*s13^2 + 1161*s13*s23 + 370*s23^2) + 
                 s12^5*(-108*s13^2 + 180*s13*s23 + 752*s23^2) - s12^3*s23^2*
                  (1809*s13^2 + 3308*s13*s23 + 2934*s23^2)) - p2q^3*s13*
                (54*s12^6*(s13 + 4*s23) + 54*s12^5*(s13^2 - 4*s13*s23 + 
                   27*s23^2) + s12^4*s23*(-270*s13^2 + 1589*s13*s23 + 
                   1016*s23^2) + s12^2*s23^2*(-252*s13^3 + 1631*s13^2*s23 + 
                   5501*s13*s23^2 - 4206*s23^3) + s12^3*s23*(288*s13^3 + 
                   621*s13^2*s23 + 4328*s13*s23^2 - 2590*s23^3) + 
                 10*s23^4*(-81*s13^3 + 77*s13^2*s23 + 85*s13*s23^2 - 
                   73*s23^3) - 2*s12*s23^3*(891*s13^3 - 836*s13^2*s23 - 
                   1941*s13*s23^2 + 1286*s23^3)) + p2q^2*p3q*
                (108*s12^7*(s13 + 4*s23) - 20*s13*s23^5*(79*s13^2 + 
                   6*s13*s23 - 73*s23^2) + 18*s12^6*(3*s13^2 - 12*s13*s23 + 
                   25*s23^2) - s12^5*(54*s13^3 + 126*s13^2*s23 + 4103*s13*
                    s23^2 - 352*s23^3) + s12^2*s23^3*(-2243*s13^3 - 
                   3890*s13^2*s23 + 6849*s13*s23^2 + 1168*s23^3) + 
                 s12^4*s23*(900*s13^3 - 2156*s13^2*s23 - 4869*s13*s23^2 + 
                   1510*s23^3) + s12^3*s23^2*(837*s13^3 - 3676*s13^2*s23 + 
                   1965*s13*s23^2 + 1974*s23^3) + s12*(-4354*s13^3*s23^4 - 
                   2310*s13^2*s23^5 + 5254*s13*s23^6 + 370*s23^7))))/
            (36*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))))*p1 . E0conj + 
         ((ep^2*(9*s12^5 + s12*s13*(9*s13 - 4*s23)*s23^2 + 10*s13^2*s23^3 + 
              9*s12^4*(2*s13 + s23) + s12^2*s23*(9*s13^2 + 4*s13*s23 - 
                41*s23^2) + s12^3*(9*s13^2 + 18*s13*s23 - 41*s23^2)))/
            (18*s12^2*s13*s23^2*(s12 + s23)) + ((s12 + s13 + s23)*
             (9*p1q^6*s23^2*(11*s12^4 + 142*s12^2*s13*s23 + 128*s12*s13*
                 s23^2 + 40*s13*s23^3 + s12^3*(45*s13 + 11*s23)) - 
              9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q^3*s12*(-20*s12^3 + 
                  s12^2*(23*s13 - 21*s23) + s12*(34*s13 - s23)*s23 + 
                  20*s13*s23^2) + p2q^3*s13*(29*s12^3 + 4*s12*s13*(17*s13 - 
                    5*s23) + 40*s13^2*s23 + s12^2*(-94*s13 + s23)) + 
                p2q*p3q^2*(-4*s12^4 + s12^3*(155*s13 - 2*s23) - 8*s12*s13*
                   (16*s13 - 5*s23)*s23 - 40*s13^2*s23^2 + s12^2*(-82*s13^2 + 
                    149*s13*s23 + 2*s23^2)) - p2q^2*p3q*(20*s12^4 + 
                  40*s13^2*s23*(-s13 + s23) + s12^3*(-125*s13 + 21*s23) + 
                  s12^2*(176*s13^2 - 112*s13*s23 + s23^2) - 4*s12*s13*
                   (17*s13^2 - 37*s13*s23 + 5*s23^2))) + p1q^5*s23*(
                p3q*(-198*s12^5 + 400*s13*s23^4 - 27*s12^4*(30*s13 + 
                    11*s23) + 4*s12*s23^3*(153*s13 + 80*s23) + s12^2*s23^2*
                   (-769*s13 + 901*s23) + s12^3*(-2124*s13*s23 + 
                    554*s23^2)) + p2q*(40*s13*s23^3*(-36*s13 + s23) - 
                  198*s12^4*(s13 + s23) + 4*s12*s23^2*(-1017*s13^2 + 
                    45*s13*s23 + 80*s23^2) + s12^3*(-810*s13^2 + 369*s13*
                     s23 + 455*s23^2) + s12^2*s23*(-3654*s13^2 + 977*s13*
                     s23 + 901*s23^2))) + p1q*(-(p3q^5*s12^2*(81*s12^4 + 
                   s12^2*(1525*s13 - 253*s23)*s23 + 2*s12*(360*s13 - 151*s23)*
                    s23^2 - 40*s13*s23^3 + 2*s12^3*(549*s13 + 29*s23))) + 
                p2q^5*s13^2*(180*s12^4 - 9*s12^3*(83*s13 - 87*s23) + 
                  4*s12*s13*(757*s13 - 215*s23)*s23 + 1400*s13^2*s23^2 + 
                  s12^2*(1098*s13^2 - 3299*s13*s23 + 27*s23^2)) + 
                p2q*p3q^4*s12*(-306*s12^5 + 2*s12*s13*(826*s13 - 109*s23)*
                   s23^2 + 280*s13^2*s23^3 + s12^4*(-2457*s13 + 73*s23) + 
                  2*s12^2*s23*(2148*s13^2 - 881*s13*s23 + 329*s23^2) + 
                  s12^3*(3294*s13^2 - 2885*s13*s23 + 821*s23^2)) - 
                p2q^2*p3q^3*(369*s12^6 + 4*s12*s13^2*(1069*s13 - 310*s23)*
                   s23^2 + 1040*s13^3*s23^3 + 44*s12^5*(45*s13 + 14*s23) + 
                  s12^4*(-7353*s13^2 + 2095*s13*s23 + 125*s23^2) + 
                  s12^2*s13*s23*(5475*s13^2 - 6969*s13*s23 + 502*s23^2) + 
                  2*s12^3*(1647*s13^3 - 6234*s13^2*s23 + 817*s13*s23^2 - 
                    169*s23^3)) + p2q^4*p3q*s13*(-360*s12^5 + 45*s12^4*
                   (25*s13 - 8*s23) + 80*s13^2*(35*s13 - 13*s23)*s23^2 - 
                  6*s12^3*(798*s13^2 - 835*s13*s23 + 63*s23^2) + 4*s12*s13*
                   s23*(1514*s13^2 - 1499*s13*s23 + 170*s23^2) + 
                  s12^2*(2196*s13^3 - 12109*s13^2*s23 + 3575*s13*s23^2 - 
                    18*s23^3)) + p2q^3*p3q^2*(180*s12^6 + 40*s13^3*
                   (35*s13 - 52*s23)*s23^2 - 9*s12^5*(s13 + 11*s23) + 
                  3*s12^4*(1992*s13^2 + 67*s13*s23 - 123*s23^2) + 4*s12*s13^2*
                   s23*(757*s13^2 - 2353*s13*s23 + 410*s23^2) + s12^2*s13*
                   (1098*s13^3 - 14285*s13^2*s23 + 8865*s13*s23^2 - 
                    262*s23^3) - s12^3*(7011*s13^3 - 13047*s13^2*s23 + 
                    646*s13*s23^2 + 18*s23^3))) + p1q^4*(p3q^2*(99*s12^6 + 
                  s12^4*(720*s13 - 991*s23)*s23 - 280*s13*s23^5 + 
                  9*s12^5*(45*s13 + 49*s23) + 4*s12*s23^4*(-443*s13 + 
                    160*s23) - 2*s12^3*s23^2*(1085*s13 + 257*s23) + 
                  s12^2*s23^3*(-3374*s13 + 1171*s23)) - p2q*p3q*
                 (18*s12^5*(11*s13 - 14*s23) + 600*s13*s23^4*(2*s13 + s23) + 
                  s12^2*s23^2*(2584*s13^2 + 4429*s13*s23 - 2081*s23^2) + 
                  4*s12*s23^3*(764*s13^2 + 791*s13*s23 - 240*s23^2) + 
                  s12^3*s23*(1242*s13^2 + 3548*s13*s23 + 329*s23^2) + 
                  2*s12^4*(405*s13^2 + 648*s13*s23 + 815*s23^2)) + 
                p2q^2*(36*s12^5*s23 + 9*s12^4*(11*s13^2 + 28*s13*s23 - 
                    21*s23^2) + 40*s13*s23^3*(54*s13^2 - 3*s13*s23 - 
                    8*s23^2) + 4*s12*s23^2*(1323*s13^3 - 125*s13^2*s23 - 
                    528*s13*s23^2 + 80*s23^3) + s12^3*(405*s13^3 - 1053*s13^2*
                     s23 - 1540*s13*s23^2 + 509*s23^3) + s12^2*s23*
                   (3474*s13^3 - 2800*s13^2*s23 - 3719*s13*s23^2 + 
                    910*s23^3))) - p1q^2*(p3q^4*s12*(603*s12^5 + 2*s12^4*
                   (585*s13 - 77*s23) - 460*s13*s23^4 - s12^3*s23*(208*s13 + 
                    379*s23) + s12*s23^3*(-2078*s13 + 631*s23) + s12^2*s23^2*
                   (-2393*s13 + 721*s23)) + p2q*p3q^3*(864*s12^6 - 
                  1000*s13^2*s23^4 - 4*s12*s13*s23^3*(754*s13 + 25*s23) - 
                  3*s12^5*(150*s13 + 71*s23) + s12^4*(-1278*s13^2 - 
                    1151*s13*s23 + 809*s23^2) + s12^2*s23^2*(-1922*s13^2 - 
                    927*s13*s23 + 1289*s23^2) + s12^3*s23*(-632*s13^2 - 
                    736*s13*s23 + 2455*s23^2)) + p2q^4*s13*
                 (45*s12^4*(13*s13 + 8*s23) + 40*s13^2*s23*(-9*s13^2 + 
                    s13*s23 + 51*s23^2) + s12^3*(630*s13^2 - 1931*s13*s23 + 
                    783*s23^2) + s12^2*(846*s13^3 + 4113*s13^2*s23 - 
                    4970*s13*s23^2 + 27*s23^3) - 4*s12*s13*(153*s13^3 - 
                    35*s13^2*s23 - 1423*s13*s23^2 + 375*s23^3)) + 
                p2q^2*p3q^2*(909*s12^6 + 2000*s13^2*(s13 - s23)*s23^3 + 
                  s12^5*(-774*s13 + 1273*s23) + 4*s12*s13*s23^2*(1098*s13^2 - 
                    1983*s13*s23 + 295*s23^2) + 3*s12^4*(87*s13^2 - 
                    299*s13*s23 + 510*s23^2) - 3*s12^3*(414*s13^3 + 
                    1996*s13^2*s23 - 778*s13*s23^2 - 413*s23^3) + s12^2*s23*
                   (664*s13^3 - 11565*s13^2*s23 + 3583*s13*s23^2 + 
                    649*s23^3)) + p2q^3*p3q*(-18*s12^5*(83*s13 - 20*s23) - 
                  2*s12^4*(360*s13^2 + 967*s13*s23 - 171*s23^2) + 
                  40*s13^2*s23^2*(10*s13^2 + 101*s13*s23 - 25*s23^2) - 
                  s12^3*(1260*s13^3 + 8403*s13^2*s23 - 1460*s13*s23^2 + 
                    171*s23^3) + 4*s12*s13*s23*(458*s13^3 + 2701*s13^2*s23 - 
                    1604*s13*s23^2 + 205*s23^3) + s12^2*(1962*s13^4 + 
                    6361*s13^3*s23 - 14253*s13^2*s23^2 + 2459*s13*s23^3 - 
                    9*s23^4))) + p1q^3*(p3q^3*(-243*s12^6 + s12^4*(2957*s13 - 
                    460*s23)*s23 + 4*s12^3*(823*s13 - 498*s23)*s23^2 + 
                  s12^2*(711*s13 - 361*s23)*s23^3 - 320*s13*s23^5 + 
                  4*s12*s23^4*(-193*s13 + 80*s23) + 2*s12^5*(63*s13 + 
                    520*s23)) - p2q*p3q^2*(342*s12^6 + 40*s13*s23^4*
                   (-31*s13 + 16*s23) - s12^5*(747*s13 + 599*s23) + 
                  s12^2*s23^2*(-2060*s13^2 + 4261*s13*s23 + 109*s23^2) - 
                  4*s12*s23^3*(937*s13^2 - 811*s13*s23 + 160*s23^2) + 
                  s12^4*(1674*s13^2 - 913*s13*s23 + 3071*s23^2) + s12^3*s23*
                   (2332*s13^2 + 1977*s13*s23 + 3897*s23^2)) + p2q^2*p3q*
                 (-324*s12^6 + 18*s12^5*(20*s13 - 19*s23) + s12^4*
                   (-1089*s13^2 + 998*s13*s23 - 1459*s23^2) + 80*s13*s23^3*
                   (15*s13^2 + 32*s13*s23 - 4*s23^2) + 2*s12^3*(1323*s13^3 + 
                    569*s13^2*s23 - 1861*s13*s23^2 - 498*s23^3) + 4*s12*s23^2*
                   (1069*s13^3 + 2204*s13^2*s23 - 903*s13*s23^2 + 80*s23^3) + 
                  s12^2*s23*(5315*s13^3 + 7533*s13^2*s23 - 8039*s13*s23^2 + 
                    261*s23^3)) + p2q^3*(324*s12^5*s13 - 18*s12^4*(s13^2 - 
                    47*s13*s23 - 10*s23^2) + 120*s13^2*s23^2*(-12*s13^2 + 
                    s13*s23 + 11*s23^2) + s12^3*(585*s13^3 + 1715*s13^2*s23 - 
                    1693*s13*s23^2 + 261*s23^3) - 4*s12*s13*s23*(747*s13^3 - 
                    115*s13^2*s23 - 1267*s13*s23^2 + 285*s23^3) + 
                  s12^2*(-1098*s13^4 + 2669*s13^3*s23 + 5833*s13^2*s23^2 - 
                    3427*s13*s23^3 + 9*s23^4)))))/(72*ep*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13*s23*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))) + (ep*(-9*p1q^6*s23^3*(s12 + s23)*(
                5*s12^5 - 10*s13*s23^3*(s13 + s23) + 2*s12^4*(3*s13 + 
                  5*s23) - 2*s12^2*s23^2*(11*s13 + 10*s23) + 
                s12^3*(s13^2 + 6*s13*s23 - 5*s23^2) - 2*s12*s23^2*
                 (6*s13^2 + 16*s13*s23 + 5*s23^2)) + 9*(p2q + p3q)^2*
               (p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*(p2q^2*s13*
                 (5*s12^4 + 12*s12^2*s13*s23 - 2*s12*s13*(6*s13 - 5*s23)*
                   s23 - 10*s13^2*s23^2 + s12^3*(s13 + 5*s23)) + 
                p3q^2*s12*(s12 + s23)*(5*s12^3 - 10*s12*(s13 - s23)*s23 - 
                  10*s13*s23^2 + s12^2*(s13 + 15*s23)) - p2q*p3q*(5*s12^5 - 
                  10*s13^2*s23^3 + 2*s12*s13*s23^2*(-16*s13 + 5*s23) + 
                  2*s12^4*(3*s13 + 5*s23) + 2*s12^2*s13*s23*(-11*s13 + 
                    16*s23) + s12^3*(s13^2 + 28*s13*s23 + 5*s23^2))) - 
              p1q*(p2q + p3q)^2*(-(p3q^3*s12^2*(s12 + s23)*(36*s12^6 + 
                   110*s13*s23^4*(s13 + s23) + 18*s12^5*(4*s13 + 7*s23) + 
                   s12^3*s23*(54*s13^2 + 161*s13*s23 - 436*s23^2) + 
                   s12^2*s23^2*(-35*s13^2 + 121*s13*s23 - 382*s23^2) + 
                   2*s12*s23^3*(31*s13^2 + 21*s13*s23 - 55*s23^2) + 
                   2*s12^4*(18*s13^2 + 90*s13*s23 - 37*s23^2))) + 
                p2q*p3q^2*s12*(-140*s13^2*s23^5*(s13 + s23) + 9*s12^7*
                   (12*s13 + 5*s23) - 20*s12*s13*s23^4*(16*s13^2 + 
                    18*s13*s23 - 7*s23^2) + 27*s12^6*(8*s13^2 + 17*s13*s23 - 
                    s23^2) + 2*s12^2*s13*s23^3*(-131*s13^2 + 130*s13*s23 + 
                    155*s23^2) + s12^4*s23*(225*s13^3 + 1050*s13^2*s23 - 
                    529*s13*s23^2 - 297*s23^3) + 3*s12^5*(36*s13^3 + 
                    213*s13^2*s23 + 31*s13*s23^2 - 93*s23^3) + s12^3*s23^2*
                   (48*s13^3 + 1315*s13^2*s23 - 101*s13*s23^2 - 90*s23^3)) - 
                p2q^2*p3q*s13*(-250*s13^2*s23^5*(s13 + s23) + 18*s12^7*
                   (6*s13 + 5*s23) - 2*s12*s13*s23^4*(452*s13^2 + 462*s13*
                     s23 - 125*s23^2) + 18*s12^6*(12*s13^2 + 24*s13*s23 + 
                    7*s23^2) + s12^2*s13*s23^3*(-767*s13^2 - 581*s13*s23 + 
                    1034*s23^2) + 6*s12^5*(18*s13^3 + 87*s13^2*s23 + 
                    11*s13*s23^2 + 12*s23^3) + s12^3*s23^2*(3*s13^3 + 
                    1082*s13^2*s23 + 1316*s13*s23^2 + 90*s23^3) + s12^4*s23*
                   (180*s13^3 + 897*s13^2*s23 + 274*s13*s23^2 + 126*s23^3)) + 
                p2q^3*s13^2*(-340*s13^2*s23^4*(s13 + s23) + 9*s12^6*
                   (4*s13 + 5*s23) - 2*s12*s13*s23^3*(221*s13^2 + 231*s13*
                     s23 - 170*s23^2) + 9*s12^5*(8*s13^2 + 15*s13*s23 + 
                    17*s23^2) + s12^2*s13*s23^2*(-26*s13^2 + 229*s13*s23 + 
                    671*s23^2) + s12^3*s23*(45*s13^3 + 188*s13^2*s23 + 
                    257*s13*s23^2 + 63*s23^3) + s12^4*(36*s13^3 + 135*s13^2*
                     s23 + 25*s13*s23^2 + 171*s23^3))) + p1q^5*s23^2*(
                p3q*(s12 + s23)*(126*s12^6 + 18*s12^5*(10*s13 - s23) + 
                  110*s13*s23^4*(s13 + s23) + s12^3*s23*(36*s13^2 - 
                    451*s13*s23 - 940*s23^2) + s12^4*(54*s13^2 - 54*s13*s23 - 
                    902*s23^2) + s12^2*s23^2*(-35*s13^2 + 247*s13*s23 + 
                    68*s23^2) + 2*s12*s23^3*(49*s13^2 + 219*s13*s23 + 
                    125*s23^2)) + p2q*(36*s12^7 + 27*s12^6*(6*s13 - s23) + 
                  s12^5*(144*s13^2 + 387*s13*s23 - 515*s23^2) + 20*s13*s23^4*
                   (-18*s13^2 - 17*s13*s23 + s23^2) + s12^4*(18*s13^3 + 
                    369*s13^2*s23 + 395*s13*s23^2 - 807*s23^3) + s12^3*s23*
                   (27*s13^3 - 80*s13^2*s23 + 453*s13*s23^2 - 197*s23^3) + 
                  2*s12*s23^3*(-351*s13^3 - 571*s13^2*s23 + 40*s13*s23^2 + 
                    80*s23^3) + s12^2*s23^2*(-324*s13^3 - 1107*s13^2*s23 + 
                    343*s13*s23^2 + 318*s23^3))) + p1q^4*s23*(
                -(p3q^2*(s12 + s23)*(117*s12^7 + 18*s12^6*(11*s13 - 13*s23) + 
                   50*s13*s23^5*(s13 + s23) + s12^5*(81*s13^2 - 288*s13*s23 - 
                     1165*s23^2) - 2*s12^4*s23*(9*s13^2 + 46*s13*s23 + 
                     11*s23^2) - 2*s12*s23^4*(-39*s13^2 + 31*s13*s23 + 
                     115*s23^2) + 2*s12^2*s23^3*(97*s13^2 + 92*s13*s23 + 
                     227*s23^2) + 2*s12^3*s23^2*(64*s13^2 + 617*s13*s23 + 
                     738*s23^2))) - p2q*p3q*(72*s12^8 + 18*s12^7*(7*s13 - 
                    17*s23) + s12^6*(108*s13^2 - 522*s13*s23 - 1525*s23^2) + 
                  30*s13*s23^5*(11*s13^2 + 15*s13*s23 + 4*s23^2) + 
                  3*s12^5*(18*s13^3 + 6*s13^2*s23 - 599*s13*s23^2 - 
                    335*s23^3) + 2*s12*s23^4*(482*s13^3 + 970*s13^2*s23 + 
                    293*s13*s23^2 - 150*s23^3) + 2*s12^2*s23^3*(491*s13^3 + 
                    1660*s13^2*s23 + 75*s13*s23^2 - 47*s23^3) + s12^4*s23*
                   (162*s13^3 + 153*s13^2*s23 - 1706*s13*s23^2 + 
                    1487*s23^3) + s12^3*s23^2*(443*s13^3 + 1865*s13^2*s23 - 
                    873*s13*s23^2 + 1551*s23^3)) - p2q^2*(36*s12^7*
                   (2*s13 - 9*s23) + 9*s12^6*(21*s13^2 - 22*s13*s23 - 
                    109*s23^2) + s12^5*(126*s13^3 + 567*s13^2*s23 - 
                    1327*s13*s23^2 - 853*s23^3) + 10*s13*s23^4*(-54*s13^3 - 
                    48*s13^2*s23 + 13*s13*s23^2 + 7*s23^3) - 2*s12^2*s23^2*
                   (162*s13^4 + 337*s13^3*s23 - 1092*s13^2*s23^2 - 266*s13*
                     s23^3 + 24*s23^4) + s12^4*(9*s13^4 + 432*s13^3*s23 + 
                    880*s13^2*s23^2 - 2290*s13*s23^3 + 33*s23^4) - 
                  2*s12*s23^3*(459*s13^4 + 589*s13^3*s23 - 429*s13^2*s23^2 - 
                    299*s13*s23^3 + 35*s23^4) + s12^3*s23*(27*s13^4 + 
                    299*s13^3*s23 + 1750*s13^2*s23^2 - 1229*s13*s23^3 + 
                    251*s23^4))) + p1q^3*(p3q^3*(s12 + s23)*(36*s12^8 + 
                  18*s12^7*(4*s13 - 11*s23) - 70*s13*s23^6*(s13 + s23) + 
                  4*s12^6*(9*s13^2 - 81*s13*s23 - 86*s23^2) + 2*s12*s23^5*
                   (-9*s13^2 - 19*s13*s23 + 35*s23^2) - s12^3*s23^3*
                   (158*s13^2 + 1109*s13*s23 + 62*s23^2) - s12^2*s23^4*
                   (173*s13^2 + 207*s13*s23 + 392*s23^2) + s12^5*s23*
                   (-126*s13^2 + 89*s13*s23 + 1318*s23^2) + s12^4*s23^2*
                   (19*s13^2 + 431*s13*s23 + 1828*s23^2)) + p2q*p3q^2*
                 (36*s12^9 - 99*s12^8*s23 + 20*s13*s23^6*(13*s13^2 + 
                    6*s13*s23 - 7*s23^2) + s12^7*(-108*s13^2 - 225*s13*s23 + 
                    151*s23^2) - 3*s12^6*(24*s13^3 + 99*s13^2*s23 - 
                    403*s13*s23^2 - 902*s23^3) + 2*s12*s23^5*(21*s13^3 - 
                    177*s13^2*s23 - 398*s13*s23^2 + 70*s23^3) - s12^2*s23^4*
                   (1004*s13^3 + 3319*s13^2*s23 + 1015*s13*s23^2 + 
                    324*s23^3) - s12^3*s23^3*(1361*s13^3 + 4610*s13^2*s23 + 
                    987*s13*s23^2 + 801*s23^3) + s12^4*s23^2*(-758*s13^3 - 
                    3070*s13^2*s23 + 870*s13*s23^2 + 1893*s23^3) + 
                  s12^5*s23*(-171*s13^3 - 870*s13^2*s23 + 2932*s13*s23^2 + 
                    4650*s23^3)) + p2q^2*p3q*(-72*s12^8*(s13 + s23) - 
                  18*s12^7*(6*s13^2 + 29*s13*s23 - 21*s23^2) + 2*s12^6*s23*
                   (-396*s13^2 - 205*s13*s23 + 911*s23^2) + 10*s13*s23^5*
                   (33*s13^3 + 89*s13^2*s23 + 49*s13*s23^2 - 7*s23^3) + 
                  s12^3*s23^2*(469*s13^4 + 492*s13^3*s23 - 6145*s13^2*s23^2 + 
                    1402*s13*s23^3 - 50*s23^4) + s12^2*s23^3*(1415*s13^4 + 
                    3135*s13^3*s23 - 2833*s13^2*s23^2 - 1051*s13*s23^3 - 
                    2*s23^4) + 2*s12*s23^4*(652*s13^4 + 1304*s13^3*s23 + 
                    393*s13^2*s23^2 - 494*s13*s23^3 + 35*s23^4) + s12^4*s23*
                   (108*s13^4 - 867*s13^3*s23 - 6386*s13^2*s23^2 + 2381*s13*
                     s23^3 + 1036*s23^4) + s12^5*(36*s13^4 - 234*s13^3*s23 - 
                    3222*s13^2*s23^2 + 886*s13*s23^3 + 2386*s23^4)) + 
                p2q^3*(36*s12^7*s13*(s13 - 2*s23) + 9*s12^6*(8*s13^3 + 
                    5*s13^2*s23 - 62*s13*s23^2 - 5*s23^3) - 60*s13^2*s23^4*
                   (6*s13^3 + 5*s13^2*s23 - 6*s13*s23^2 - 5*s23^3) + 
                  s12^2*s13*s23^2*(-108*s13^4 + 29*s13^3*s23 + 2285*s13^2*
                     s23^2 - 119*s13*s23^3 - 371*s23^4) + s12^5*(36*s13^4 + 
                    315*s13^3*s23 - 785*s13^2*s23^2 - 689*s13*s23^3 - 
                    63*s23^4) + s12^4*s23*(207*s13^4 + 503*s13^3*s23 - 
                    2294*s13^2*s23^2 + 437*s13*s23^3 + 9*s23^4) - 2*s12*s13*
                   s23^3*(261*s13^4 + 221*s13^3*s23 - 671*s13^2*s23^2 - 
                    481*s13*s23^3 + 150*s23^4) + s12^3*s23*(9*s13^5 + 
                    280*s13^4*s23 + 1178*s13^3*s23^2 - 2073*s13^2*s23^3 + 
                    569*s13*s23^4 + 27*s23^5))) + p1q^2*(p3q^4*s12*
                 (s12 + s23)*(72*s12^7 + 144*s12^6*s13 + s12^4*(88*s13 - 
                    481*s23)*s23^2 + 50*s13*s23^5*(s13 + s23) + 
                  s12^5*(72*s13^2 - 706*s23^2) + 2*s12*s23^4*(48*s13^2 + 
                    68*s13*s23 - 25*s23^2) + 2*s12^3*s23^2*(55*s13^2 + 
                    275*s13*s23 + 261*s23^2) + s12^2*s23^3*(167*s13^2 - 
                    140*s13*s23 + 319*s23^2)) + p2q*p3q^3*(108*s12^9 + 
                  230*s13^2*s23^6*(s13 + s23) + 9*s12^8*(4*s13 + 23*s23) + 
                  2*s12*s13*s23^5*(222*s13^2 + 292*s13*s23 - 65*s23^2) - 
                  3*s12^7*(84*s13^2 - 9*s13*s23 + 101*s23^2) - 2*s12^2*s23^4*
                   (148*s13^3 + 398*s13^2*s23 + 221*s13*s23^2 + 50*s23^3) - 
                  s12^6*(180*s13^3 + 495*s13^2*s23 - 2068*s13*s23^2 + 
                    262*s23^3) + s12^3*s23^3*(-1277*s13^3 - 3209*s13^2*s23 - 
                    963*s13*s23^2 + 333*s23^3) + s12^5*s23*(-315*s13^3 - 
                    1279*s13^2*s23 + 4082*s13*s23^2 + 1206*s23^3) + 
                  s12^4*s23^2*(-986*s13^3 - 3719*s13^2*s23 + 1354*s13*s23^2 + 
                    1499*s23^3)) + p2q^4*s13*(36*s12^7*s13 + 9*s12^6*
                   (4*s13^2 + 21*s13*s23 + 10*s23^2) + 10*s13^2*s23^3*
                   (9*s13^3 + 7*s13^2*s23 - 50*s13*s23^2 - 48*s23^3) + 
                  s12^5*(-36*s13^3 + 261*s13^2*s23 + 259*s13*s23^2 + 
                    171*s23^3) + 2*s12^2*s13*s23^2*(-41*s13^3 - 370*s13^2*
                     s23 + 281*s13*s23^2 + 398*s23^3) - s12^3*s23*(45*s13^4 + 
                    61*s13^3*s23 - 1220*s13^2*s23^2 + 223*s13*s23^3 + 
                    9*s23^4) + s12^4*(-36*s13^4 + 27*s13^3*s23 + 910*s13^2*
                     s23^2 - 433*s13*s23^3 + 72*s23^4) + 2*s12*s13*s23^2*
                   (54*s13^4 + 14*s13^3*s23 - 494*s13^2*s23^2 - 439*s13*
                     s23^3 + 240*s23^4)) + p2q^2*p3q^2*(36*s12^9 - 
                  45*s12^8*(4*s13 - s23) + 460*s13^2*s23^5*(-s13^2 + s23^2) + 
                  s12^7*(-324*s13^2 - 729*s13*s23 + 133*s23^2) + 2*s12*s13*
                   s23^4*(-124*s13^3 + 390*s13^2*s23 + 849*s13*s23^2 - 
                    205*s23^3) + s12^6*(36*s13^3 - 1107*s13^2*s23 + 
                    436*s13*s23^2 + 466*s23^3) + 2*s12^2*s23^3*(585*s13^4 + 
                    1508*s13^3*s23 + 126*s13^2*s23^2 - 551*s13*s23^3 - 
                    25*s23^4) + s12^3*s23^2*(1084*s13^4 + 2245*s13^3*s23 - 
                    5205*s13^2*s23^2 - 1263*s13*s23^3 + 19*s23^4) + 
                  s12^4*s23*(270*s13^4 - 218*s13^3*s23 - 9363*s13^2*s23^2 - 
                    98*s13*s23^3 + 379*s23^4) + s12^5*(144*s13^4 - 63*s13^3*
                     s23 - 4887*s13^2*s23^2 + 1458*s13*s23^3 + 652*s23^4)) - 
                p2q^3*p3q*(72*s12^8*s13 - 18*s12^7*(2*s13^2 - 13*s13*s23 + 
                    5*s23^2) + 10*s13^2*s23^4*(11*s13^3 + 105*s13^2*s23 + 
                    71*s13*s23^2 - 23*s23^3) - s12^6*(252*s13^3 + 261*s13^2*
                     s23 - 140*s13*s23^2 + 81*s23^3) + 2*s12*s13*s23^3*
                   (274*s13^4 + 942*s13^3*s23 + 361*s13^2*s23^2 - 822*s13*
                     s23^3 + 115*s23^4) + s12^5*(-108*s13^4 - 981*s13^3*s23 + 
                    1547*s13^2*s23^2 + 141*s13*s23^3 + 153*s23^4) + 
                  2*s12^2*s13*s23^2*(248*s13^4 + 316*s13^3*s23 - 1658*s13^2*
                     s23^2 - 995*s13*s23^3 + 237*s23^4) + s12^3*s23*
                   (27*s13^5 - 663*s13^4*s23 - 4580*s13^3*s23^2 + 1488*s13^2*
                     s23^3 + 133*s13*s23^4 + 45*s23^5) + s12^4*(36*s13^5 - 
                    459*s13^4*s23 - 2362*s13^3*s23^2 + 4252*s13^2*s23^3 + 
                    52*s13*s23^4 + 189*s23^5)))))/(36*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)*
             (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + 
                p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + 
                p3q*(2*s12^2 + s12*s23 - s23^2)) + p1q*(p2q^2*s13^2*
                 (s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 2*s23^2) - 
                2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) - 
           (18*p1q^6*s23^3*(s12 + s23)*(11*s12^5 + 30*s13*s23^3*(s13 + s23) + 
               s12^4*(s13 + 32*s23) + 2*s12*s23^2*(33*s13^2 + 53*s13*s23 + 
                 5*s23^2) + s12^2*s23*(23*s13^2 + 109*s13*s23 + 30*s23^2) + 
               s12^3*(-10*s13^2 + 34*s13*s23 + 41*s23^2)) + 
             18*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23)*
              (p3q^3*s12*(s12 + s23)*(30*s12^3 - 20*s13*s23^2 + s12*s23*
                  (-s13 + 11*s23) + s12^2*(22*s13 + 41*s23)) - p2q^3*s13*
                (29*s12^4 + 4*s12*s13*(14*s13 - 5*s23)*s23 + 30*s13^2*s23^2 + 
                 s12^3*(-83*s13 + 30*s23) + s12^2*(2*s13^2 - 115*s13*s23 + 
                   s23^2)) + p2q*p3q^2*(14*s12^5 + 2*s12*s13*(53*s13 - 
                   20*s23)*s23^2 + 30*s13^2*s23^3 + s12^4*(-109*s13 + 
                   36*s23) + s12^2*s23*(59*s13^2 - 167*s13*s23 + 8*s23^2) + 
                 s12^3*(-29*s13^2 - 236*s13*s23 + 30*s23^2)) + p2q^2*p3q*
                (20*s12^5 + 30*s13^2*s23^2*(-s13 + s23) + s12^4*(-124*s13 + 
                   41*s23) - 2*s12*s13*s23*(28*s13^2 - 63*s13*s23 + 
                   10*s23^2) + s12^3*(54*s13^2 - 247*s13*s23 + 22*s23^2) + 
                 s12^2*(-2*s13^3 + 174*s13^2*s23 - 143*s13*s23^2 + s23^3))) - 
             p1q^5*s23^2*(p3q*(s12 + s23)*(288*s12^6 - 18*s12^5*(10*s13 - 
                   87*s23) - 620*s13*s23^4*(s13 + s23) + s12^2*s23^2*
                  (2041*s13^2 + 951*s13*s23 - 1466*s23^2) - 4*s12*s23^3*
                  (127*s13^2 + 507*s13*s23 + 205*s23^2) + s12^3*s23*
                  (1638*s13^2 + 5155*s13*s23 + 686*s23^2) + s12^4*
                  (-468*s13^2 + 2448*s13*s23 + 2610*s23^2)) + p2q*
                (-108*s12^7 + 36*s12^6*(5*s13 + 9*s23) - 18*s12^5*(4*s13^2 - 
                   39*s13*s23 - 89*s23^2) + 80*s13*s23^4*(27*s13^2 + 
                   26*s13*s23 - s23^2) + s12^3*s23*(486*s13^3 + 3769*s13^2*
                    s23 - 2300*s13*s23^2 - 1662*s23^3) + 3*s12^2*s23^2*
                  (1554*s13^3 + 3307*s13^2*s23 - 785*s13*s23^2 - 702*s23^3) + 
                 4*s12*s23^3*(1548*s13^3 + 2103*s13^2*s23 - 185*s13*s23^2 - 
                   160*s23^3) + s12^4*(-360*s13^3 + 108*s13^2*s23 - 
                   83*s13*s23^2 + 974*s23^3))) + 2*p1q^4*s23*
              (-(p3q^2*(s12 + s23)*(9*s12^7 + 9*s12^6*(23*s13 - 98*s23) + 
                  190*s13*s23^5*(s13 + s23) + s12^2*s23^3*(1613*s13^2 + 
                    3006*s13*s23 - 295*s23^2) + 2*s12*s23^4*(497*s13^2 + 
                    277*s13*s23 - 275*s23^2) + 9*s12^5*(22*s13^2 - 237*s13*
                     s23 - 166*s23^2) + s12^4*s23*(-1440*s13^2 - 2419*s13*
                     s23 + 835*s23^2) + s12^3*s23^2*(-232*s13^2 + 2899*s13*
                     s23 + 1693*s23^2))) - p2q*p3q*(108*s12^8 + 18*s12^7*
                  (29*s13 - 23*s23) + 9*s12^6*(38*s13^2 + 151*s13*s23 - 
                   110*s23^2) + 30*s13*s23^5*(31*s13^2 + 45*s13*s23 + 
                   14*s23^2) + s12^2*s23^3*(1402*s13^3 + 7152*s13^2*s23 + 
                   4731*s13*s23^2 - 1817*s23^3) + 2*s12*s23^4*(1321*s13^3 + 
                   3140*s13^2*s23 + 1054*s13*s23^2 - 390*s23^3) + 
                 s12^3*s23^2*(-529*s13^3 + 2178*s13^2*s23 + 6515*s13*s23^2 + 
                   441*s23^3) + s12^5*(-72*s13^3 + 972*s13^2*s23 + 
                   2729*s13*s23^2 + 1429*s23^3) + s12^4*s23*(-423*s13^3 + 
                   778*s13^2*s23 + 5364*s13*s23^2 + 3375*s23^3)) - p2q^2*
                (18*s12^7*(6*s13 - 13*s23) + 9*s12^6*(13*s13^2 - 36*s13*s23 - 
                   47*s23^2) + 9*s12^5*(11*s13^3 + 84*s13^2*s23 - 142*s13*
                    s23^2 + 11*s23^3) + 10*s13*s23^4*(-162*s13^3 - 
                   150*s13^2*s23 + 35*s13*s23^2 + 23*s23^3) + s12^2*s23^2*
                  (-2277*s13^4 - 3647*s13^3*s23 + 5859*s13^2*s23^2 + 
                   4015*s13*s23^3 - 702*s23^4) + s12^3*s23*(-135*s13^4 + 
                   884*s13^3*s23 + 6170*s13^2*s23^2 + 3256*s13*s23^3 - 
                   471*s23^4) - 2*s12*s23^3*(2052*s13^4 + 2657*s13^3*s23 - 
                   1207*s13^2*s23^2 - 862*s13*s23^3 + 115*s23^4) + 
                 s12^4*(90*s13^4 + 900*s13^3*s23 + 3206*s13^2*s23^2 - 
                   111*s13*s23^3 + 289*s23^4))) + 2*p1q^2*(p3q^4*s12*
                (s12 + s23)*(108*s12^7 + 9*s12^6*(24*s13 - 77*s23) + 
                 280*s13*s23^5*(s13 + s23) + s12*s23^4*(1309*s13^2 + 
                   1148*s13*s23 - 361*s23^2) + 9*s12^5*(12*s13^2 - 
                   197*s13*s23 - 269*s23^2) + 2*s12^2*s23^3*(334*s13^2 + 
                   1323*s13*s23 + 82*s23^2) + s12^3*s23^2*(-952*s13^2 + 
                   307*s13*s23 + 1036*s23^2) - s12^4*s23*(1080*s13^2 + 
                   3796*s13*s23 + 1109*s23^2)) + p2q*p3q^3*(162*s12^9 + 
                 54*s12^8*(s13 - 14*s23) + 730*s13^2*s23^6*(s13 + s23) + 
                 2*s12*s13*s23^5*(1151*s13^2 + 1436*s13*s23 - 40*s23^2) - 
                 9*s12^7*(42*s13^2 - 53*s13*s23 + 463*s23^2) + s12^5*s23*
                  (1611*s13^3 + 8260*s13^2*s23 + 4972*s13*s23^2 - 
                   1886*s23^3) + s12^3*s23^3*(-995*s13^3 + 121*s13^2*s23 + 
                   105*s13*s23^2 - 1461*s23^3) + s12^2*s23^4*(681*s13^3 + 
                   3253*s13^2*s23 - 623*s13*s23^2 - 749*s23^3) + s12^4*s23^2*
                  (1633*s13^3 + 3472*s13^2*s23 + 3349*s13*s23^2 - 
                   552*s23^3) - 3*s12^6*(90*s13^3 - 948*s13^2*s23 - 
                   898*s13*s23^2 + 1765*s23^3)) + p2q^2*p3q^2*(54*s12^9 - 
                 9*s12^8*(30*s13 + 101*s23) - 1460*s13^2*s23^5*(s13^2 - 
                   s23^2) - 9*s12^7*(54*s13^2 + 38*s13*s23 + 449*s23^2) + 
                 s12^6*(54*s13^3 - 1917*s13^2*s23 + 3133*s13*s23^2 - 
                   6031*s23^3) - 2*s12*s13*s23^4*(1572*s13^3 - 895*s13^2*
                    s23 - 3267*s13*s23^2 + 500*s23^3) + s12^5*(216*s13^4 - 
                   3312*s13^3*s23 - 780*s13^2*s23^2 + 5286*s13*s23^3 - 
                   3838*s23^4) + s12^3*s23^2*(634*s13^4 + 2366*s13^3*s23 + 
                   8084*s13^2*s23^2 - 6072*s13*s23^3 - 751*s23^4) + 
                 s12^2*s23^3*(-6*s13^4 + 5098*s13^3*s23 + 11100*s13^2*s23^2 - 
                   4697*s13*s23^3 - 379*s23^4) - 3*s12^4*s23*(276*s13^4 + 
                   1468*s13^3*s23 - 583*s13^2*s23^2 + 98*s13*s23^3 + 
                   419*s23^4)) + p2q^4*s13*(54*s12^7*s13 + 9*s12^6*
                  (6*s13^2 - 41*s13*s23 - 40*s23^2) + 10*s13^2*s23^3*
                  (27*s13^3 + 23*s13^2*s23 - 154*s13*s23^2 - 150*s23^3) - 
                 9*s12^5*(6*s13^3 + 38*s13^2*s23 + 43*s13*s23^2 + 
                   175*s23^3) + s12^4*(-54*s13^4 - 774*s13^3*s23 + 
                   289*s13^2*s23^2 + 2744*s13*s23^3 - 2097*s23^4) + 
                 s12^3*s23*(-783*s13^4 - 1836*s13^3*s23 + 370*s13^2*s23^2 + 
                   7093*s13*s23^3 - 909*s23^4) + 2*s12*s13*s23^2*(252*s13^4 + 
                   287*s13^3*s23 - 2302*s13^2*s23^2 - 2237*s13*s23^3 + 
                   615*s23^4) - s12^2*s23*(-18*s13^5 + 469*s13^4*s23 + 
                   3988*s13^3*s23^2 + 2797*s13^2*s23^3 - 5615*s13*s23^4 + 
                   27*s23^5)) + p2q^3*p3q*(-108*s12^8*s13 + 18*s12^7*
                  (3*s13^2 + 71*s13*s23 - 20*s23^2) - 10*s13^2*s23^4*
                  (31*s13^3 + 327*s13^2*s23 + 223*s13*s23^2 - 73*s23^3) + 
                 18*s12^6*(21*s13^3 + 80*s13^2*s23 + 296*s13*s23^2 - 
                   63*s23^3) + s12^5*(162*s13^4 + 2799*s13^3*s23 + 
                   6361*s13^2*s23^2 + 5780*s13*s23^3 - 1017*s23^4) - 
                 2*s12*s13*s23^3*(757*s13^4 + 4936*s13^3*s23 + 2763*s13^2*
                    s23^2 - 2586*s13*s23^3 + 320*s23^4) + s12^4*(-54*s13^5 + 
                   2808*s13^4*s23 + 7932*s13^3*s23^2 + 13571*s13^2*s23^3 + 
                   435*s13*s23^4 - 63*s23^5) + s12^2*s23^2*(-1495*s13^5 - 
                   6514*s13^4*s23 + 198*s13^3*s23^2 + 14871*s13^2*s23^3 - 
                   2673*s13*s23^4 + 9*s23^5) + s12^3*s23*(171*s13^5 + 
                   2326*s13^4*s23 + 8465*s13^3*s23^2 + 19409*s13^2*s23^3 - 
                   3436*s13*s23^4 + 189*s23^5))) + p1q^3*(p3q^3*(s12 + s23)*
                (108*s12^8 + 18*s12^7*(12*s13 - 55*s23) - 460*s13*s23^6*
                  (s13 + s23) + s12^3*s23^3*(4370*s13^2 + 5969*s13*s23 - 
                   1698*s23^2) + s12^2*s23^4*(1587*s13^2 - 1063*s13*s23 - 
                   1058*s23^2) + 54*s12^6*(2*s13^2 - 53*s13*s23 + 3*s23^2) + 
                 4*s12*s23^5*(-187*s13^2 - 167*s13*s23 + 115*s23^2) + 
                 s12^4*s23^2*(2441*s13^2 + 12595*s13*s23 + 5092*s23^2) + 
                 s12^5*s23*(-1872*s13^2 + 1685*s13*s23 + 6532*s23^2)) + p2q*
                p3q^2*(108*s12^9 - 1116*s12^8*s23 + 40*s13*s23^6*(44*s13^2 + 
                   21*s13*s23 - 23*s23^2) - 54*s12^7*(6*s13^2 + 10*s13*s23 + 
                   31*s23^2) + s12^2*s23^4*(2604*s13^3 + 1183*s13^2*s23 - 
                   12987*s13*s23^2 + 30*s23^3) + 4*s12*s23^5*(1238*s13^3 + 
                   259*s13^2*s23 - 1279*s13*s23^2 + 230*s23^3) + 
                 s12^6*(-216*s13^3 + 2358*s13^2*s23 + 1613*s13*s23^2 + 
                   3346*s23^3) + s12^5*s23*(1782*s13^3 + 3499*s13^2*s23 + 
                   3444*s13*s23^2 + 3708*s23^3) - s12^4*s23^2*(-14*s13^3 + 
                   3989*s13^2*s23 + 5338*s13*s23^2 + 4900*s23^3) - 
                 s12^3*s23^3*(2284*s13^3 + 2667*s13^2*s23 + 15420*s13*s23^2 + 
                   5702*s23^3)) - p2q^2*p3q*(216*s12^8*(s13 + 4*s23) + 
                 18*s12^6*s23*(153*s13^2 - 62*s13*s23 + s23^2) + 
                 36*s12^7*(9*s13^2 + 34*s13*s23 + 48*s23^2) - 20*s13*s23^5*
                  (93*s13^3 + 277*s13^2*s23 + 161*s13*s23^2 - 23*s23^3) - 
                 4*s12*s23^4*(1796*s13^4 + 5562*s13^3*s23 + 2549*s13^2*
                    s23^2 - 1432*s13*s23^3 + 115*s23^4) + s12^4*s23*
                  (432*s13^4 + 5879*s13^3*s23 + 9906*s13^2*s23^2 + 
                   3027*s13*s23^3 + 212*s23^4) + s12^3*s23^2*(-1559*s13^4 - 
                   2914*s13^3*s23 + 921*s13^2*s23^2 + 17564*s13*s23^3 + 
                   480*s23^4) - s12^2*s23^3*(7327*s13^4 + 22771*s13^3*s23 + 
                   9903*s13^2*s23^2 - 17231*s13*s23^3 + 646*s23^4) - 
                 2*s12^5*(54*s13^4 - 1413*s13^3*s23 - 3476*s13^2*s23^2 + 
                   2349*s13*s23^3 + 650*s23^4)) + p2q^3*(108*s12^7*s13*
                  (s13 + 4*s23) - 240*s13^2*s23^4*(9*s13^3 + 8*s13^2*s23 - 
                   9*s13*s23^2 - 8*s23^3) + 36*s12^6*(6*s13^3 + 17*s13^2*
                    s23 + 60*s13*s23^2 + 10*s23^3) + 18*s12^5*(6*s13^4 + 
                   88*s13^3*s23 + 65*s13^2*s23^2 + 184*s13*s23^3 + 
                   73*s23^4) - 4*s12*s13*s23^3*(1188*s13^4 + 1453*s13^3*s23 - 
                   2353*s13^2*s23^2 - 1943*s13*s23^3 + 435*s23^4) + 
                 s12^4*s23*(1386*s13^4 + 6707*s13^3*s23 + 1848*s13^2*s23^2 - 
                   563*s13*s23^3 + 1566*s23^4) + s12^2*s23^2*(-1530*s13^5 - 
                   305*s13^4*s23 + 15037*s13^3*s23^2 + 11143*s13^2*s23^3 - 
                   6515*s13*s23^4 + 18*s23^5) + s12^3*s23*(-18*s13^5 + 
                   4529*s13^4*s23 + 12524*s13^3*s23^2 + 6857*s13^2*s23^3 - 
                   6922*s13*s23^4 + 630*s23^5))) - 
             p1q*(-(p3q^5*s12^2*(s12 + s23)*(108*s12^6 + 260*s13*s23^4*
                   (s13 + s23) + 18*s12^5*(12*s13 + 7*s23) + 54*s12^4*
                   (2*s13^2 - 3*s13*s23 - 31*s23^2) + 4*s12*s23^3*
                   (-368*s13^2 - 267*s13*s23 + 16*s23^2) - s12^2*s23^2*
                   (1951*s13^2 + 4857*s13*s23 + 1306*s23^2) - s12^3*s23*
                   (288*s13^2 + 4075*s13*s23 + 3062*s23^2))) + p2q^5*s13^2*
                (36*s12^6*(3*s13 - 10*s23) - 2080*s13^2*s23^4*(s13 + s23) - 
                 4*s12*s13*s23^3*(1178*s13^2 + 1293*s13*s23 - 385*s23^2) + 
                 18*s12^5*(12*s13^2 + 58*s13*s23 - 131*s23^2) + s12^3*s23*
                  (90*s13^3 + 4205*s13^2*s23 + 11230*s13*s23^2 - 
                   1746*s23^3) + 9*s12^4*(12*s13^3 + 166*s13^2*s23 + 
                   575*s13*s23^2 - 410*s23^3) + s12^2*s23^2*(-1618*s13^3 + 
                   651*s13^2*s23 + 8531*s13*s23^2 - 54*s23^3)) + p2q*p3q^4*
                s12*(-216*s12^8 - 560*s13^2*s23^5*(s13 + s23) - 36*s12^7*
                  (3*s13 + 5*s23) - 4*s12*s13*s23^4*(469*s13^2 + 550*s13*
                    s23 - 19*s23^2) + 18*s12^6*(24*s13^2 + 78*s13*s23 + 
                   179*s23^2) - 2*s12^2*s23^3*(2251*s13^3 + 2385*s13^2*s23 - 
                   588*s13*s23^2 + 118*s23^3) + s12^3*s23^2*(-4044*s13^3 - 
                   7199*s13^2*s23 + 5165*s13*s23^2 + 1638*s23^3) + 
                 s12^4*s23*(-270*s13^3 - 3571*s13^2*s23 + 8462*s13*s23^2 + 
                   6918*s23^3) + s12^5*(324*s13^3 + 1314*s13^2*s23 + 
                   5909*s13*s23^2 + 8230*s23^3)) + p2q^2*p3q^3*(-108*s12^9 + 
                 1540*s13^3*s23^5*(s13 + s23) + 18*s12^8*(24*s13 + 19*s23) + 
                 4*s12*s13^2*s23^4*(1676*s13^2 + 1466*s13*s23 - 575*s23^2) + 
                 18*s12^7*(48*s13^2 + 205*s13*s23 + 204*s23^2) + s12^6*s23*
                  (1062*s13^2 + 4363*s13*s23 + 8012*s23^2) + s12^2*s13*s23^3*
                  (7519*s13^3 + 2905*s13^2*s23 - 12298*s13*s23^2 + 
                   824*s23^3) + s12^4*s23^2*(-9849*s13^3 - 37567*s13^2*s23 - 
                   2369*s13*s23^2 + 1854*s23^3) - s12^5*(324*s13^4 + 
                   2286*s13^3*s23 + 17585*s13^2*s23^2 + 836*s13*s23^3 - 
                   6780*s23^4) + s12^3*s23^2*(2775*s13^4 - 8790*s13^3*s23 - 
                   30550*s13^2*s23^2 + 396*s13*s23^3 - 136*s23^4)) + p2q^4*
                p3q*s13*(-36*s12^7*(9*s13 - 20*s23) - 18*s12^6*(24*s13^2 + 
                   97*s13*s23 - 128*s23^2) - 20*s13^2*s23^4*(208*s13^2 + 
                   131*s13*s23 - 77*s23^2) + 18*s12^5*(6*s13^3 + 19*s13^2*
                    s23 - 481*s13*s23^2 + 178*s23^3) - 4*s12*s13*s23^3*
                  (2356*s13^3 + 910*s13^2*s23 - 2516*s13*s23^2 + 295*s23^3) + 
                 s12^2*s23^2*(-3236*s13^4 + 8893*s13^3*s23 + 24079*s13^2*
                    s23^2 - 8354*s13*s23^3 + 36*s23^4) + 3*s12^4*(72*s13^4 + 
                   996*s13^3*s23 + 3175*s13^2*s23^2 - 6376*s13*s23^3 + 
                   804*s23^4) + s12^3*s23*(180*s13^4 + 11257*s13^3*s23 + 
                   23970*s13^2*s23^2 - 19066*s13*s23^3 + 828*s23^4)) + p2q^3*
                p3q^2*(36*s12^8*(9*s13 - 10*s23) + 18*s12^7*(20*s13 - 33*s23)*
                  s23 - 40*s13^3*s23^4*(52*s13^2 - 25*s13*s23 - 77*s23^2) - 
                 9*s12^6*(96*s13^3 + 594*s13^2*s23 + 381*s13*s23^2 - 
                   70*s23^3) - 4*s12*s13^2*s23^3*(1178*s13^3 - 2059*s13^2*
                    s23 - 3737*s13*s23^2 + 730*s23^3) - 3*s12^5*(144*s13^4 + 
                   1770*s13^3*s23 + 9265*s13^2*s23^2 + 2294*s13*s23^3 - 
                   546*s23^4) + s12^2*s13*s23^2*(-1618*s13^4 + 15761*s13^3*
                    s23 + 20329*s13^2*s23^2 - 18658*s13*s23^3 + 524*s23^4) + 
                 s12^3*s23*(90*s13^5 + 9179*s13^4*s23 + 6508*s13^3*s23^2 - 
                   43832*s13^2*s23^3 + 208*s13*s23^4 + 36*s23^5) + 
                 s12^4*(108*s13^5 + 846*s13^4*s23 - 5991*s13^3*s23^2 - 
                   50159*s13^2*s23^3 - 3733*s13*s23^4 + 810*s23^5))))/
            (72*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13*s23^2*(s12 + s23)*
             (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + 
                p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + 
                p3q*(2*s12^2 + s12*s23 - s23^2)) + p1q*(p2q^2*s13^2*
                 (s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 2*s23^2) - 
                2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     (((ep^2*(-1 - (5*s12)/s13 - (5*s13)/s12))/9 + 
         (ep*(-9*p1q^2*(p2q + p3q)*(s12 + s13)*s23*(3*s13*s23*(s13 + s23) + 
              s12^2*(8*s13 + 3*s23) + s12*(8*s13^2 + 14*s13*s23 + 3*s23^2)) - 
            9*(p2q + p3q)^2*s23*(s12 + s13 + s23)*(p2q*s13*(7*s12^2 + 
                8*s12*s13 + s13^2 + 6*s12*s23 + 2*s13*s23) + p3q*s12*(s12^2 + 
                2*s12*(4*s13 + s23) + s13*(7*s13 + 6*s23))) + 
            p1q*(p3q^2*(9*s12^4*(8*s13 + 3*s23) + s12^3*(72*s13^2 + 
                  99*s13*s23 - 84*s23^2) + 3*s13*s23^2*(-37*s13^2 + 
                  9*s13*s23 + 6*s23^2) + s12^2*s23*(45*s13^2 - 667*s13*s23 + 
                  27*s23^2) + s12*s23*(-27*s13^3 - 694*s13^2*s23 + 
                  90*s13*s23^2 + 18*s23^3)) + p2q*p3q*(27*s12^4*s23 - 
                3*s12^3*(48*s13^2 + 24*s13*s23 + 65*s23^2) - 
                s12^2*(144*s13^3 + 198*s13^2*s23 + 1433*s13*s23^2 - 
                  54*s23^3) + 3*s13*s23*(9*s13^3 - 65*s13^2*s23 + 
                  18*s13*s23^2 + 12*s23^3) + s12*s23*(-72*s13^3 - 1433*s13^2*
                   s23 + 180*s13*s23^2 + 36*s23^3)) + p2q^2*(-3*s12^3*s23*
                 (9*s13 + 37*s23) + 3*s13*s23*(9*s13^3 - 28*s13^2*s23 + 
                  9*s13*s23^2 + 6*s23^3) + s12^2*(72*s13^3 + 45*s13^2*s23 - 
                  694*s13*s23^2 + 27*s23^3) + s12*(72*s13^4 + 99*s13^3*s23 - 
                  667*s13^2*s23^2 + 90*s13*s23^3 + 18*s23^4)))))/
          (72*p1q*(p2q + p3q)^2*s12*s13*(s12 + s13)*s23^2) + 
         (-36*p1q^3*(p2q + p3q)*s23^2*(5*s13^2*s23^2*(s13 + s23) + 
             s12*s13^2*s23*(23*s13 + 28*s23) + s12^3*(58*s13^2 + 23*s13*s23 + 
               5*s23^2) + s12^2*(58*s13^3 + 104*s13^2*s23 + 28*s13*s23^2 + 5*
                s23^3)) + 9*(p2q + p3q)^3*s23*(s12 + s13 + s23)*
            (p2q*s13*(2*s12^3*(61*s13 - 10*s23) + 20*s13^3*s23 + s12^2*s13*
                (196*s13 + 87*s23) + s12*s13^2*(74*s13 + 109*s23)) + 
             p3q*s12*(-20*s13^3*s23 + s12^3*(74*s13 + 20*s23) + s12*s13^2*
                (122*s13 + 87*s23) + s12^2*s13*(196*s13 + 109*s23))) + 
           p1q^2*s23*(p3q^2*(20*s13^2*s23^2*(9*s13^2 + 16*s13*s23 + 
                 7*s23^2) + 9*s12^4*(464*s13^2 + 175*s13*s23 + 40*s23^2) + 
               s12^3*(4824*s13^3 + 7065*s13^2*s23 + 2421*s13*s23^2 + 
                 500*s23^3) + s12*s13*s23*(747*s13^3 + 1593*s13^2*s23 + 
                 1526*s13*s23^2 + 640*s23^3) + s12^2*(2088*s13^4 + 
                 4149*s13^3*s23 + 3294*s13^2*s23^2 + 1346*s13*s23^3 + 
                 140*s23^4)) + 2*p2q*p3q*(10*s13^2*s23^2*(27*s13^2 + 
                 41*s13*s23 + 14*s23^2) + 9*s12^4*(196*s13^2 + 129*s13*s23 + 
                 30*s23^2) + s12^3*(2088*s13^3 + 2871*s13^2*s23 + 
                 2007*s13*s23^2 + 410*s23^3) + s12*s13*s23*(1161*s13^3 + 
                 2007*s13^2*s23 + 1436*s13*s23^2 + 640*s23^3) + s12^2*
                (1764*s13^4 + 2871*s13^3*s23 + 1926*s13^2*s23^2 + 
                 1436*s13*s23^3 + 140*s23^4)) + p2q^2*(20*s13^2*s23^2*
                (18*s13^2 + 25*s13*s23 + 7*s23^2) + 9*s12^4*(232*s13^2 + 
                 83*s13*s23 + 20*s23^2) + s12^3*(4824*s13^3 + 4149*s13^2*
                  s23 + 1593*s13*s23^2 + 320*s23^3) + s12*s13*s23*
                (1575*s13^3 + 2421*s13^2*s23 + 1346*s13*s23^2 + 640*s23^3) + 
               s12^2*(4176*s13^4 + 7065*s13^3*s23 + 3294*s13^2*s23^2 + 
                 1526*s13*s23^3 + 140*s23^4))) + 
           p1q*(-(p3q^3*(140*s13^3*s23^3*(s13 + s23) + 9*s12^5*(232*s13^2 + 
                  83*s13*s23 + 20*s23^2) + s12*s13^2*s23^2*(486*s13^2 + 
                  1387*s13*s23 + 681*s23^2) + s12^3*s23*(1017*s13^3 + 
                  4194*s13^2*s23 + 3133*s13*s23^2 + 320*s23^3) + 
                s12^4*(2088*s13^3 + 3159*s13^2*s23 + 2079*s13*s23^2 + 
                  500*s23^3) + s12^2*s13*s23*(-747*s13^3 + 2457*s13^2*s23 + 
                  4312*s13*s23^2 + 1581*s23^3))) - 3*p2q*p3q^2*
              (20*s13^3*s23^2*(3*s13^2 + 13*s13*s23 + 10*s23^2) + 6*s12^5*
                (116*s13^2 + 83*s13*s23 + 20*s23^2) + s12^4*(-696*s13^3 + 
                 465*s13^2*s23 + 1548*s13*s23^2 + 380*s23^3) + s12*s13^2*s23*
                (249*s13^3 + 1017*s13^2*s23 + 1969*s13*s23^2 + 981*s23^3) + 
               s12^2*s13*s23*(-837*s13^3 + 2340*s13^2*s23 + 4312*s13*s23^2 + 
                 1281*s23^3) + s12^3*(-1392*s13^4 - 1767*s13^3*s23 + 
                 2919*s13^2*s23^2 + 2551*s13*s23^3 + 260*s23^4)) + 
             p2q^3*(s12^4*s23*(747*s13^2 - 486*s13*s23 - 140*s23^2) - 20*
                s13^3*s23^2*(9*s13^2 + 25*s13*s23 + 16*s23^2) - s12*s13^2*s23*
                (747*s13^3 + 2079*s13^2*s23 + 3133*s13*s23^2 + 1581*s23^3) - 
               s12^3*(2088*s13^4 + 1017*s13^3*s23 + 2457*s13^2*s23^2 + 
                 1387*s13*s23^3 + 140*s23^4) - s12^2*s13*(2088*s13^4 + 
                 3159*s13^3*s23 + 4194*s13^2*s23^2 + 4312*s13*s23^3 + 
                 681*s23^4)) - 3*p2q^2*p3q*(3*s12^5*s23*(83*s13 + 20*s23) + 
               20*s13^3*s23^2*(6*s13^2 + 19*s13*s23 + 13*s23^2) + s12^4*
                (-1392*s13^3 - 837*s13^2*s23 + 1017*s13*s23^2 + 260*s23^3) + 
               s12*s13^2*s23*(498*s13^3 + 1548*s13^2*s23 + 2551*s13*s23^2 + 
                 1281*s23^3) + s12^3*(-696*s13^4 - 1767*s13^3*s23 + 
                 2340*s13^2*s23^2 + 1969*s13*s23^3 + 200*s23^4) + s12^2*s13*
                (696*s13^4 + 465*s13^3*s23 + 2919*s13^2*s23^2 + 4312*s13*
                  s23^3 + 981*s23^4))))/(144*ep*p1q*(p2q + p3q)^2*s12^2*s13^2*
           s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) + 
         (9*p1q^3*(p2q + p3q)*s23^2*(20*s13^3*s23^2*(s13 + s23) + 
             s12*s13^3*s23*(147*s13 + 167*s23) + s12^2*s13^2*(152*s13^2 + 305*
                s13*s23 + 6*s23^2) + s12^4*(152*s13^2 + 147*s13*s23 + 20*
                s23^2) + s12^3*(304*s13^3 + 305*s13^2*s23 + 167*s13*s23^2 + 
               20*s23^3)) - 9*(p2q + p3q)^3*(s12 + s13)*s23*(s12 + s13 + s23)*
            (p3q*s12*(s12*s13^2*(37*s13 - 20*s23) - 20*s13^3*s23 + 20*s12^2*
                s13*(4*s13 + 5*s23) + s12^3*(43*s13 + 20*s23)) + 
             p2q*s13*(s12^3*(37*s13 - 20*s23) + 20*s12^2*s13*(4*s13 - s23) + 
               20*s13^3*s23 + s12*s13^2*(43*s13 + 100*s23))) + 
           p1q*(p3q^3*(140*s13^4*s23^3*(s13 + s23) + 9*s12^6*(152*s13^2 + 
                 129*s13*s23 + 20*s23^2) + s12*s13^3*s23^2*(127*s13^2 + 
                 1047*s13*s23 + 700*s23^2) + s12^5*(2736*s13^3 + 1746*s13^2*
                  s23 + 1855*s13*s23^2 + 500*s23^3) + s12^2*s13^2*s23*
                (-1161*s13^3 + 3018*s13^2*s23 + 1344*s13*s23^2 + 814*s23^3) + 
               s12^3*s13*s23*(990*s13^3 + 5206*s13^2*s23 + 2469*s13*s23^2 + 
                 1618*s23^3) + 2*s12^4*(684*s13^4 + 1368*s13^3*s23 + 
                 1995*s13^2*s23^2 + 1266*s13*s23^3 + 160*s23^4)) + 
             3*p2q*p3q^2*(20*s13^4*s23^2*(3*s13^2 + 13*s13*s23 + 10*s23^2) + 
               6*s12^6*(76*s13^2 + 129*s13*s23 + 20*s23^2) + s12^5*s23*
                (-135*s13^2 + 1279*s13*s23 + 380*s23^2) + s12^2*s13^2*s23*
                (-1104*s13^3 + 2886*s13^2*s23 + 1719*s13*s23^2 + 814*s23^3) + 
               s12*s13^3*s23*(387*s13^3 + 703*s13^2*s23 + 1542*s13*s23^2 + 
                 1006*s23^3) + s12^4*(-1368*s13^4 - 582*s13^3*s23 + 
                 3210*s13^2*s23^2 + 2037*s13*s23^3 + 260*s23^4) + 2*s12^3*s13*
                (-456*s13^4 - 582*s13^3*s23 + 2147*s13^2*s23^2 + 
                 1047*s13*s23^3 + 656*s23^4)) + 3*p2q^2*p3q*(3*s12^6*s23*
                (129*s13 + 20*s23) + 20*s13^4*s23^2*(6*s13^2 + 19*s13*s23 + 
                 13*s23^2) + s12^5*(-912*s13^3 - 1104*s13^2*s23 + 
                 703*s13*s23^2 + 260*s23^3) + s12^3*s13*s23*(-582*s13^3 + 
                 4294*s13^2*s23 + 1719*s13*s23^2 + 1006*s23^3) + s12*s13^3*
                s23*(774*s13^3 + 1279*s13^2*s23 + 2037*s13*s23^2 + 
                 1312*s23^3) - 2*s12^4*(684*s13^4 + 582*s13^3*s23 - 
                 1443*s13^2*s23^2 - 771*s13*s23^3 - 100*s23^4) + s12^2*s13^2*
                (456*s13^4 - 135*s13^3*s23 + 3210*s13^2*s23^2 + 2094*s13*
                  s23^3 + 814*s23^4)) + p2q^3*(20*s13^4*s23^2*(9*s13^2 + 
                 25*s13*s23 + 16*s23^2) + s12^5*s23*(-1161*s13^2 + 
                 127*s13*s23 + 140*s23^2) + s12*s13^3*s23*(1161*s13^3 + 
                 1855*s13^2*s23 + 2532*s13*s23^2 + 1618*s23^3) + s12^4*
                (1368*s13^4 + 990*s13^3*s23 + 3018*s13^2*s23^2 + 
                 1047*s13*s23^3 + 140*s23^4) + 2*s12^3*s13*(1368*s13^4 + 
                 1368*s13^3*s23 + 2603*s13^2*s23^2 + 672*s13*s23^3 + 
                 350*s23^4) + s12^2*s13^2*(1368*s13^4 + 1746*s13^3*s23 + 
                 3990*s13^2*s23^2 + 2469*s13*s23^3 + 814*s23^4))) - 
           p1q^2*s23*(p2q^2*(20*s13^3*s23^2*(18*s13^2 + 25*s13*s23 + 
                 7*s23^2) + 9*s12^5*(152*s13^2 + 129*s13*s23 + 20*s23^2) + 
               s12^4*(5400*s13^3 + 3393*s13^2*s23 + 1648*s13*s23^2 + 
                 320*s23^3) + s12*s13^2*s23*(2484*s13^3 + 2971*s13^2*s23 + 
                 925*s13*s23^2 + 578*s23^3) + s12^3*(6768*s13^4 + 
                 9747*s13^3*s23 + 4763*s13^2*s23^2 + 1105*s13*s23^3 + 
                 140*s23^4) + s12^2*s13*(2736*s13^4 + 4815*s13^3*s23 + 
                 3314*s13^2*s23^2 + 446*s13*s23^3 + 578*s23^4)) + 
             p3q^2*(20*s13^3*s23^2*(9*s13^2 + 16*s13*s23 + 7*s23^2) + 36*
                s12^5*(76*s13^2 + 69*s13*s23 + 10*s23^2) + s12^4*
                (6768*s13^3 + 4815*s13^2*s23 + 2971*s13*s23^2 + 500*s23^3) + 
               s12*s13^2*s23*(1161*s13^3 + 1648*s13^2*s23 + 1105*s13*s23^2 + 
                 578*s23^3) + s12^3*(5400*s13^4 + 9747*s13^3*s23 + 
                 3314*s13^2*s23^2 + 925*s13*s23^3 + 140*s23^4) + s12^2*s13*
                (1368*s13^4 + 3393*s13^3*s23 + 4763*s13^2*s23^2 + 
                 446*s13*s23^3 + 578*s23^4)) + p2q*p3q*(45*s12^5*
                (32*s13^2 + 81*s13*s23 + 12*s23^2) + 20*s13^3*s23^2*
                (27*s13^2 + 41*s13*s23 + 14*s23^2) + s12^4*(4176*s13^3 + 
                 2880*s13^2*s23 + 4619*s13*s23^2 + 820*s23^3) + s12*s13^2*s23*
                (3645*s13^3 + 4619*s13^2*s23 + 2030*s13*s23^2 + 1156*s23^3) + 
               s12^3*(4176*s13^4 + 8838*s13^3*s23 + 5413*s13^2*s23^2 + 
                 2030*s13*s23^3 + 280*s23^4) + s12^2*s13*(1440*s13^4 + 
                 2880*s13^3*s23 + 5413*s13^2*s23^2 + 892*s13*s23^3 + 
                 1156*s23^4))))/(144*p1q*(p2q + p3q)^2*s12^2*s13^2*
           (s12 + s13)*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
            p1q*s23)) + (9*(p1q^2*(p2q + p3q)*s23*(s13^3*s23*(s13 + s23) + 
              s12^4*(8*s13 + s23) + s12^3*(24*s13^2 + 12*s13*s23 + s23^2) + 
              s12^2*s13*(24*s13^2 + 22*s13*s23 + 11*s23^2) + 
              s12*s13*(8*s13^3 + 12*s13^2*s23 + 11*s13*s23^2 + 8*s23^3)) + 
            (p2q + p3q)^2*(s12 + s13)*s23*(s12 + s13 + s23)*
             (p2q*s13*(7*s12^2 + 8*s12*s13 + s13^2 + 6*s12*s23 + 2*s13*s23) + 
              p3q*s12*(s12^2 + 2*s12*(4*s13 + s23) + s13*(7*s13 + 6*s23))) - 
            p1q*(p3q^2*(s12^5*(8*s13 + s23) + 2*s12^4*(8*s13^2 + 5*s13*s23 + 
                  s23^2) + s13^2*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12^2*s23*(6*s13^3 + 9*s13^2*s23 + 17*s13*s23^2 + 2*s23^3) + 
                s12^3*(8*s13^3 + 16*s13^2*s23 + 19*s13*s23^2 + 3*s23^3) + 
                s12*s13*s23*(-s13^3 + 9*s13^2*s23 + 9*s13*s23^2 + 4*s23^3)) + 
              p2q^2*(s12^4*s23*(-s13 + s23) + s13^2*s23*(s13^3 + 2*s13^2*
                   s23 + 3*s13*s23^2 + 2*s23^3) + s12^3*(8*s13^3 + 
                  6*s13^2*s23 + 9*s13*s23^2 + 3*s23^3) + s12^2*(16*s13^4 + 
                  16*s13^3*s23 + 9*s13^2*s23^2 + 9*s13*s23^3 + 2*s23^4) + 
                s12*s13*(8*s13^4 + 10*s13^3*s23 + 19*s13^2*s23^2 + 
                  17*s13*s23^3 + 4*s23^4)) + p2q*p3q*(s12^5*s23 + 
                s12^4*(-16*s13^2 - 7*s13*s23 + 3*s23^2) + s13^2*s23*
                 (s13^3 + 3*s13^2*s23 + 6*s13*s23^2 + 4*s23^3) + 
                s12^3*(-32*s13^3 - 26*s13^2*s23 + 20*s13*s23^2 + 6*s23^3) + 
                s12*s13*s23*(-7*s13^3 + 20*s13^2*s23 + 26*s13*s23^2 + 
                  8*s23^3) + s12^2*(-16*s13^4 - 26*s13^3*s23 + 2*s13^2*
                   s23^2 + 26*s13*s23^3 + 4*s23^4))))*den[-3 + 2*ep])/
          (16*p1q*(p2q + p3q)^2*s12*s13*(s12 + s13)^2*s23^2))*E0 . E0conj + 
       (-1/9*(ep^2*(5*s12^2 + s12*s13 + 5*s13^2)*(s12^2 - s13*s23 + 
             s12*(s13 + s23)))/(s12^2*s13^2*s23) - 
         ((s12 + s13 + s23)*(36*p1q^6*s12*s23^4*(4*s12*s13^3 + 10*s12^3*s23 + 
              5*s13^3*s23 - 4*s12^2*s13*(s13 + 3*s23)) + 9*(p2q + p3q)^2*
             (p3q*s12 - p2q*s13)^2*(p3q^2*s12*s23*(-40*s12^4*s23 + 
                57*s12^2*s13^2*s23 - 20*s13^4*s23 + 2*s12^3*s13*(17*s13 + 
                  4*s23) - s12*s13^3*(34*s13 + 29*s23)) - p2q^2*s13*(
                -40*s12^5*s23 + 40*s13^4*(s13 - s23)*s23 + 4*s12*s13^3*s23*
                 (3*s13 + 2*s23) + s12^2*s13^2*s23*(166*s13 + 57*s23) + 
                s12^3*s13*(392*s13^2 + 260*s13*s23 - 29*s23^2) + 
                s12^4*(392*s13^2 - 46*s13*s23 - 20*s23^2)) - 
              2*p2q*p3q*(20*s12^6*s23 - 20*s13^5*s23^2 + 2*s12*s13^4*s23*
                 (-10*s13 + 7*s23) + 2*s12^5*s23*(3*s13 + 10*s23) + 
                s12^2*s13^3*s23*(68*s13 + 43*s23) + s12^3*s13^2*(196*s13^2 + 
                  130*s13*s23 - 43*s23^2) + 2*s12^4*s13*(98*s13^2 - 
                  4*s13*s23 - 7*s23^2))) - p1q^5*s23^3*
             (p2q*(360*s12^5*s23 + 40*s13^3*(9*s13 - 8*s23)*s23^2 + 
                s12^4*(-225*s13^2 + 288*s13*s23 - 40*s23^2) + 4*s12*s13^2*s23*
                 (225*s13^2 - 118*s13*s23 + 163*s23^2) + s12^2*s13*
                 (513*s13^3 + 270*s13^2*s23 + 1292*s13*s23^2 - 652*s23^3) + 
                s12^3*(360*s13^3 - 342*s13^2*s23 - 220*s13*s23^2 + 
                  320*s23^3)) + p3q*(1440*s12^5*s23 - 320*s13^3*s23^3 + 
                4*s12*s13^2*s23*(45*s13^2 - 55*s13*s23 + 163*s23^2) - 
                s12^4*(513*s13^2 + 1548*s13*s23 + 400*s23^2) + s12^2*s13*
                 (225*s13^3 - 486*s13^2*s23 + 1292*s13*s23^2 - 652*s23^3) + 
                s12^3*(-360*s13^3 + 1242*s13^2*s23 + 32*s13*s23^2 + 
                  320*s23^3))) - p1q*(p2q + p3q)*(-(p3q^4*s12^2*s23*
                (360*s12^6 + 40*s13^4*s23^2 - 4*s12^5*(63*s13 + 100*s23) + 
                 2*s12*s13^3*s23*(196*s13 + 517*s23) + s12^2*s13^2*
                  (-1593*s13^2 + 892*s13*s23 - 1026*s23^2) + 4*s12^3*s13*
                  (243*s13^2 + 142*s13*s23 - 227*s23^2) + s12^4*(1305*s13^2 - 
                   368*s13*s23 + 1400*s23^2))) - 2*p2q^3*p3q*s13*(
                -320*s12^6*s23^2 + 20*s13^5*(36*s13 - 61*s23)*s23^2 + 
                s12^2*s13^3*s23*(-1089*s13^2 + 4694*s13*s23 + 595*s23^2) + 
                2*s12*s13^4*s23*(360*s13^2 - 632*s13*s23 + 641*s23^2) + 
                s12^3*s13^2*(-1764*s13^3 + 9801*s13^2*s23 + 5958*s13*s23^2 - 
                  1160*s23^3) + s12^5*(3528*s13^3 + 1737*s13^2*s23 - 
                  14*s13*s23^2 - 140*s23^3) + s12^4*s13*(1764*s13^3 + 
                  10647*s13^2*s23 - 180*s13*s23^2 + 319*s23^3)) + 
              p2q^4*s13^2*(400*s12^5*s23^2 + s12^2*s13^2*s23*(1305*s13^2 - 
                  5140*s13*s23 - 1026*s23^2) + 40*s13^4*s23*(9*s13^2 - 
                  45*s13*s23 + 35*s23^2) - 4*s12*s13^3*s23*(63*s13^2 - 
                  10*s13*s23 + 227*s23^2) + s12^4*(3528*s13^3 - 8973*s13^2*
                   s23 + 1340*s13*s23^2 + 40*s23^3) + 2*s12^3*s13*
                 (1764*s13^3 - 4320*s13^2*s23 - 3128*s13*s23^2 + 
                  517*s23^3)) - p2q^2*p3q^2*(1040*s12^7*s23^2 - 4*s12*s13^5*
                 (415*s13 - 484*s23)*s23^2 - 1040*s13^6*s23^3 + 8*s12^3*s13^4*
                 s23*(1575*s13 + 817*s23) + s12^2*s13^4*s23*(-2745*s13^2 + 
                  6344*s13*s23 - 514*s23^2) + 4*s12^5*s13*(882*s13^3 + 
                  2619*s13^2*s23 + 293*s13*s23^2 - 484*s23^3) + 2*s12^4*s13^2*
                 (3528*s13^3 + 8190*s13^2*s23 + 1574*s13*s23^2 + 257*s23^3) + 
                s12^6*(-3528*s13^3 + 2745*s13^2*s23 - 856*s13*s23^2 + 
                  1040*s23^3)) + 2*p2q*p3q^3*s12*(20*s12^6*(36*s13 - 25*s23)*
                 s23 - 140*s13^5*s23^3 + s12*s13^4*s23^2*(-526*s13 + 
                  319*s23) + s12^3*s13^2*s23*(-1233*s13^2 - 1818*s13*s23 + 
                  595*s23^2) - s12^2*s13^3*s23*(1629*s13^2 + 346*s13*s23 + 
                  1160*s23^2) + s12^5*(1764*s13^3 - 1089*s13^2*s23 - 
                  122*s13*s23^2 - 1220*s23^3) + s12^4*s13*(1764*s13^3 - 
                  3177*s13^2*s23 - 1206*s13*s23^2 + 1282*s23^3))) - 
            p1q^2*s23*(-2*p2q*p3q^3*(180*s12^8 + 182*s12*s13^4*s23^3 + 
                500*s13^5*s23^3 - 2*s12^7*(333*s13 + 290*s23) + 2*s12^2*s13^3*
                 s23*(353*s13^2 - 1362*s13*s23 - 732*s23^2) + 
                s12^6*(1323*s13^2 + 1418*s13*s23 + 300*s23^2) + 
                s12^5*(3861*s13^3 - 2889*s13^2*s23 + 654*s13*s23^2 - 
                  2540*s23^3) - s12^4*s13*(81*s13^3 + 5562*s13^2*s23 + 
                  4100*s13*s23^2 - 2530*s23^3) + s12^3*s13^2*(963*s13^3 - 
                  2903*s13^2*s23 - 4370*s13*s23^2 + 360*s23^3)) + 
              p2q^4*s13*(-40*s13^4*s23*(36*s13^2 - 89*s13*s23 + 51*s23^2) + 
                2*s12^5*(747*s13^2 + 20*s13*s23 + 140*s23^2) + s12^3*s13*
                 (-9522*s13^3 + 6731*s13^2*s23 + 5028*s13*s23^2 - 
                  965*s23^3) - 4*s12*s13^3*(90*s13^3 - 307*s13^2*s23 + 
                  365*s13*s23^2 - 563*s23^3) + s12^2*s13^2*(36*s13^3 - 
                  4699*s13^2*s23 + 7090*s13*s23^2 - 139*s23^3) + 
                s12^4*(-6840*s13^3 + 7784*s13^2*s23 - 1438*s13*s23^2 + 
                  460*s23^3)) - 2*p2q^3*p3q*(s12^6*(459*s13^2 + 40*s13*s23 - 
                  500*s23^2) + 20*s13^5*s23*(27*s13^2 - 142*s13*s23 + 
                  127*s23^2) + 2*s12*s13^4*(90*s13^3 - 929*s13^2*s23 + 
                  838*s13*s23^2 - 1265*s23^3) + s12^5*(1089*s13^3 - 
                  428*s13^2*s23 + 218*s13*s23^2 - 500*s23^3) + s12^4*s13*
                 (7731*s13^3 - 11601*s13^2*s23 + 900*s13*s23^2 - 182*s23^3) - 
                s12^2*s13^3*(972*s13^3 - 5351*s13^2*s23 + 9412*s13*s23^2 + 
                  360*s23^3) + 3*s12^3*s13^2*(2991*s13^3 - 3486*s13^2*s23 - 
                  2878*s13*s23^2 + 488*s23^3)) + p3q^4*s12*(-360*s12^7 - 
                460*s13^4*s23^3 + 4*s12^6*(63*s13 + 370*s23) + s12*s13^3*
                 s23^2*(186*s13 + 965*s23) + s12^2*s13^2*s23*(-2480*s13^2 + 
                  1556*s13*s23 + 139*s23^2) - 2*s12^5*(693*s13^2 + 
                  374*s13*s23 + 760*s23^2) + s12^3*s13*(1674*s13^3 + 
                  413*s13^2*s23 + 3346*s13*s23^2 - 2252*s23^3) + 
                s12^4*(-1620*s13^3 + 2879*s13^2*s23 - 372*s13*s23^2 + 
                  2040*s23^3)) + p2q^2*p3q^2*(40*s13^5*(53*s13 - 101*s23)*
                 s23^2 + 40*s12^7*(27*s13 + s23) - 2*s12^6*(1089*s13^2 + 
                  670*s13*s23 - 960*s23^2) + 4*s12*s13^4*s23*(415*s13^2 - 
                  473*s13*s23 + 726*s23^2) + s12^4*s13*(-10134*s13^3 + 
                  26705*s13^2*s23 + 4492*s13*s23^2 - 2904*s23^3) + 
                s12^3*s13^2*(-10350*s13^3 + 21895*s13^2*s23 + 19424*s13*
                   s23^2 - 2822*s23^3) + s12^2*s13^3*(1908*s13^3 - 
                  8459*s13^2*s23 + 16996*s13*s23^2 + 2822*s23^3) + 
                s12^5*(-9774*s13^3 + 4759*s13^2*s23 - 1652*s13*s23^2 + 
                  4040*s23^3))) + p1q^4*s23^2*(p3q^2*(2160*s12^6*s23 + 
                320*s13^3*s23^3*(-s13 + s23) - 4*s12*s13^2*s23^2*(55*s13^2 + 
                  22*s13*s23 + 163*s23^2) - 6*s12^5*(99*s13^2 + 342*s13*s23 + 
                  260*s23^2) + s12^2*s13*s23*(-828*s13^3 + 1577*s13^2*s23 + 
                  12*s13*s23^2 + 652*s23^3) + s12^4*(-1152*s13^3 + 
                  3870*s13^2*s23 + 308*s13*s23^2 + 1360*s23^3) + 
                s12^3*(450*s13^4 + 270*s13^3*s23 + 2315*s13^2*s23^2 - 
                  1668*s13*s23^3 - 320*s23^4)) + p2q^2*(40*s12^5*
                 (9*s13 - s23)*s23 + 80*s13^3*s23^2*(18*s13^2 - 21*s13*s23 + 
                  4*s23^2) - 2*s12^4*s13*(225*s13^2 - 207*s13*s23 + 
                  170*s23^2) + 4*s12*s13^2*s23*(405*s13^3 - 417*s13^2*s23 + 
                  590*s13*s23^2 - 163*s23^3) + s12^3*(1152*s13^4 + 
                  3402*s13^3*s23 + 11*s13^2*s23^2 + 780*s13*s23^3 - 
                  320*s23^4) + s12^2*s13*(594*s13^4 + 504*s13^3*s23 + 
                  4673*s13^2*s23^2 - 2596*s13*s23^3 + 652*s23^4)) + 
              2*p2q*p3q*(540*s12^6*s23 + 20*s13^3*s23^2*(9*s13^2 - 
                  50*s13*s23 + 16*s23^2) - s12^5*(225*s13^2 + 378*s13*s23 + 
                  260*s23^2) + 2*s12*s13^2*s23*(180*s13^3 - 193*s13^2*s23 + 
                  568*s13*s23^2 - 326*s23^3) + s12^4*(567*s13^3 + 1422*s13^2*
                   s23 - 574*s13*s23^2 + 680*s23^3) + s12^3*(-567*s13^4 + 
                  3798*s13^3*s23 + 1649*s13^2*s23^2 - 444*s13*s23^3 - 
                  320*s23^4) + s12^2*s13*(225*s13^4 - 1098*s13^3*s23 + 
                  2639*s13^2*s23^2 - 1292*s13*s23^3 + 652*s23^4))) + 
            p1q^3*s23*(p2q^3*(-120*s13^4*s23^2*(18*s13^2 - 29*s13*s23 + 
                  11*s23^2) + 2*s12^5*s23*(261*s13^2 + 40*s13*s23 + 
                  160*s23^2) - 4*s12*s13^3*s23*(315*s13^3 - 543*s13^2*s23 + 
                  755*s13*s23^2 - 517*s23^3) + 2*s12^3*s13*(-324*s13^4 - 
                  4653*s13^3*s23 + 694*s13^2*s23^2 + 326*s13*s23^3 + 
                  64*s23^4) + s12^4*(225*s13^4 - 4122*s13^3*s23 + 1991*s13^2*
                   s23^2 - 512*s13*s23^3 + 320*s23^4) - s12^2*s13^2*
                 (225*s13^4 + 198*s13^3*s23 + 6775*s13^2*s23^2 - 5388*s13*
                   s23^3 + 1304*s23^4)) + p3q^3*(-1440*s12^7*s23 + 
                4*s12*s13^3*(105*s13 - 32*s23)*s23^3 - 320*s13^4*s23^4 + 
                3*s12^6*(75*s13^2 + 396*s13*s23 + 760*s23^2) + s12^2*s13^2*
                 s23^2*(-667*s13^2 + 432*s13*s23 + 1304*s23^2) + 
                s12^5*(648*s13^3 - 4014*s13^2*s23 - 772*s13*s23^2 - 
                  2160*s23^3) + 2*s12^3*s13*s23*(1341*s13^3 - 1178*s13^2*
                   s23 + 1556*s13*s23^2 - 1034*s23^3) + s12^4*(-225*s13^4 - 
                  2556*s13^3*s23 + 551*s13^2*s23^2 + 1012*s13*s23^3 + 
                  1320*s23^4)) + p2q^2*p3q*(80*s12^6*s23*(9*s13 + s23) - 
                40*s13^4*s23^2*(27*s13^2 - 121*s13*s23 + 74*s23^2) - 
                4*s12*s13^3*s23*(225*s13^3 - 644*s13^2*s23 + 817*s13*s23^2 - 
                  1002*s23^3) - 6*s12^5*(75*s13^3 + 312*s13^2*s23 - 
                  100*s13*s23^2 - 100*s23^3) + s12^2*s13^2*(-225*s13^4 + 
                  3654*s13^3*s23 - 11205*s13^2*s23^2 + 10064*s13*s23^3 - 
                  1304*s23^4) + 2*s12^3*s13*(549*s13^4 - 8172*s13^3*s23 + 
                  1012*s13^2*s23^2 + 2780*s13*s23^3 - 906*s23^4) + 
                s12^4*(1521*s13^4 - 14382*s13^3*s23 + 2465*s13^2*s23^2 - 
                  2364*s13*s23^3 + 1960*s23^4)) + p2q*p3q^2*(-1080*s12^7*
                 s23 + 40*s13^4*(34*s13 - 49*s23)*s23^3 + 4*s12*s13^3*s23^2*
                 (110*s13^2 + 43*s13*s23 + 453*s23^2) + s12^6*(225*s13^2 + 
                  2376*s13*s23 + 1280*s23^2) - 2*s12^5*(549*s13^3 + 
                  2916*s13^2*s23 + 108*s13*s23^2 + 940*s23^3) + s12^2*s13^2*
                 s23*(2016*s13^3 - 5673*s13^2*s23 + 5108*s13*s23^2 + 
                  1304*s23^3) + 2*s12^3*s13*(225*s13^4 - 3114*s13^3*s23 + 
                  328*s13^2*s23^2 + 4010*s13*s23^3 - 2004*s23^4) + 
                s12^4*(-1521*s13^4 - 12744*s13^3*s23 + 449*s13^2*s23^2 - 
                  840*s13*s23^3 + 2960*s23^4)))))/(72*ep*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12^3*s13^3*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))) + (ep*(-9*p1q^5*s12*s23^3*(-(s12^2*s13^3*
                (s13 - 8*s23)) + 10*s12^5*s23 + 10*s13^4*s23*(s13 + s23) + 
              s12^3*s13*(s13^2 + 9*s13*s23 + 8*s23^2) + s12*s13^3*(-s13^2 + 
                17*s13*s23 + 8*s23^2) + s12^4*(s13^2 + 18*s13*s23 + 
                10*s23^2)) - 9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*
             (s12 + s13 + s23)*(p3q^2*s12*s23*(-(s12*s13^3*(s13 - 8*s23)) + 
                10*s12^4*s23 + 10*s13^4*s23 + s12^3*s13*(s13 + 8*s23)) + 
              p2q^2*s13*(-10*s12^5*s23 - 5*s12^2*s13^3*s23 + 10*s13^4*
                 (s13 - s23)*s23 - 2*s12*s13^3*s23*(s13 + 4*s23) + 
                s12^4*(16*s13^2 + 3*s13*s23 - 10*s23^2) + 4*s12^3*s13*
                 (4*s13^2 + 5*s13*s23 - 2*s23^2)) + 2*p2q*p3q*(5*s12^6*s23 - 
                5*s13^5*s23^2 + s12*s13^4*s23*(-5*s13 + s23) + 2*s12^2*s13^3*
                 s23*(s13 + 2*s23) + s12^5*s23*(-s13 + 5*s23) + 2*s12^3*s13^2*
                 (4*s13^2 + 5*s13*s23 - 2*s23^2) + s12^4*s13*(8*s13^2 - 
                  3*s13*s23 - s23^2))) + p1q^4*s23^2*(p3q*(270*s12^7*s23 - 
                70*s13^4*s23^3*(s13 + s23) + s12^2*s13^3*s23*(-299*s13^2 + 
                  351*s13*s23 - 188*s23^2) - 2*s12*s13^3*s23^2*(45*s13^2 + 
                  136*s13*s23 + 46*s23^2) + 2*s12^6*(9*s13^2 + 143*s13*s23 + 
                  80*s23^2) + s12^5*(18*s13^3 - 233*s13^2*s23 - 286*s13*
                   s23^2 - 40*s23^3) - s12^4*(18*s13^4 + 651*s13^3*s23 + 
                  543*s13^2*s23^2 + 30*s13*s23^3 - 70*s23^4) + s12^3*s13*
                 (-18*s13^4 - 701*s13^3*s23 + 272*s13^2*s23^2 - 12*s13*
                   s23^3 + 92*s23^4)) + p2q*(10*s12^6*(7*s13 - 2*s23)*s23 + 
                10*s13^4*s23^2*(9*s13^2 + 2*s13*s23 - 7*s23^2) + 
                2*s12*s13^3*s23*(135*s13^3 + 216*s13^2*s23 - 55*s13*s23^2 - 
                  46*s23^3) + s12^5*(18*s13^3 + 19*s13^2*s23 + 20*s13*s23^2 + 
                  50*s23^3) - s12^2*s13^3*(18*s13^3 + 65*s13^2*s23 - 
                  567*s13*s23^2 + 116*s23^3) + s12^4*(18*s13^4 - 669*s13^3*
                   s23 - 93*s13^2*s23^2 + 132*s13*s23^3 + 70*s23^4) + 
                s12^3*s13*(-18*s13^4 - 953*s13^3*s23 + 164*s13^2*s23^2 + 
                  60*s13*s23^3 + 92*s23^4))) + 
            p1q*(p3q^4*s12^2*s23*(90*s12^7 + 110*s13^4*s23^2*(s13 + s23) - 
                2*s12^6*(19*s13 + 10*s23) + s12^2*s13^3*(-479*s13^2 + 
                  153*s13*s23 - 44*s23^2) - 5*s12^5*(79*s13^2 + 86*s13*s23 - 
                  28*s23^2) + 2*s12*s13^3*s23*(-54*s13^2 + 17*s13*s23 + 
                  26*s23^2) + s12^3*s13*(-1007*s13^3 + 146*s13^2*s23 + 
                  150*s13*s23^2 + 236*s23^3) + s12^4*(-795*s13^3 - 
                  525*s13^2*s23 + 294*s13*s23^2 + 250*s23^3)) - 
              2*p2q*p3q^3*s12*(10*s12^7*(20*s13 - 7*s23)*s23 - 70*s13^5*s23^3*
                 (s13 + s23) - s12*s13^4*s23^2*(81*s13^2 + 373*s13*s23 + 
                  202*s23^2) + s12^6*(72*s13^3 + 267*s13^2*s23 + 
                  68*s13*s23^2 - 320*s23^3) - s12^3*s13^2*s23*(744*s13^3 + 
                  619*s13^2*s23 + 229*s13*s23^2 - 92*s23^3) - s12^2*s13^3*s23*
                 (569*s13^3 + 9*s13^2*s23 + 429*s13*s23^2 + 52*s23^3) + 
                s12^4*s13*(72*s13^4 + 158*s13^3*s23 - 959*s13^2*s23^2 - 
                  189*s13*s23^3 - 166*s23^4) + 2*s12^5*(72*s13^4 + 
                  200*s13^3*s23 - 65*s13^2*s23^2 - 239*s13*s23^3 - 
                  125*s23^4)) + 2*p2q^3*p3q*s13*(10*s12^7*(2*s13 - 7*s23)*
                 s23 + 10*s13^5*s23^2*(18*s13^2 - 7*s13*s23 - 25*s23^2) + 
                s12^4*s13*s23*(1166*s13^3 + 535*s13^2*s23 - 171*s13*s23^2 - 
                  202*s23^3) + s12^6*(144*s13^3 + 267*s13^2*s23 - 
                  283*s13*s23^2 - 140*s23^3) - s12^2*s13^3*s23*(425*s13^3 + 
                  180*s13^2*s23 + 339*s13*s23^2 - 92*s23^3) + 2*s12*s13^4*s23*
                 (90*s13^3 + 117*s13^2*s23 - 281*s13*s23^2 - 83*s23^3) + 
                s12^5*(216*s13^4 + 1444*s13^3*s23 + 77*s13^2*s23^2 - 
                  505*s13*s23^3 - 70*s23^4) + s12^3*s13^2*(-72*s13^4 - 
                  636*s13^3*s23 + 11*s13^2*s23^2 + 275*s13*s23^3 - 
                  52*s23^4)) + p2q^2*p3q^2*(-250*s13^6*s23^3*(s13 + s23) + 
                10*s12^8*s23*(-2*s13 + 25*s23) - 2*s12*s13^5*s23^2*
                 (225*s13^2 + 338*s13*s23 - 22*s23^2) + s12^3*s13^4*s23*
                 (927*s13^2 - 430*s13*s23 + 1026*s23^2) + s12^6*s23*
                 (585*s13^3 + 473*s13^2*s23 + 382*s13*s23^2 + 250*s23^3) + 
                s12^2*s13^4*s23*(-929*s13^3 - 909*s13^2*s23 + 236*s13*s23^2 + 
                  478*s23^3) + s12^7*(-144*s13^3 + 297*s13^2*s23 + 
                  406*s13*s23^2 + 500*s23^3) + 2*s12^4*s13^2*(144*s13^4 + 
                  2502*s13^3*s23 + 737*s13^2*s23^2 + 68*s13*s23^3 - 
                  239*s23^4) + 2*s12^5*s13*(216*s13^4 + 1708*s13^3*s23 + 
                  881*s13^2*s23^2 - 281*s13*s23^3 - 22*s23^4)) - 
              p2q^4*s13^2*(10*s12^6*s23*(2*s13 + 11*s23) + s12^2*s13^3*s23*
                 (317*s13^2 - 567*s13*s23 + 278*s23^2) + 10*s13^4*s23*
                 (9*s13^3 - 27*s13^2*s23 - 11*s13*s23^2 + 25*s23^3) + 
                2*s12*s13^3*s23*(-9*s13^3 - 333*s13^2*s23 + 154*s13*s23^2 + 
                  118*s23^3) + s12^5*(144*s13^3 - 55*s13^2*s23 - 
                  56*s13*s23^2 + 220*s23^3) + s12^3*s13*(144*s13^4 + 
                  1097*s13^3*s23 - 686*s13^2*s23^2 - 348*s13*s23^3 + 
                  52*s23^4) + s12^4*(288*s13^4 + 597*s13^3*s23 - 681*s13^2*
                   s23^2 - 24*s13*s23^3 + 110*s23^4))) + 
            p1q^2*s23*(p2q*p3q^2*(230*s13^5*s23^3*(s13 + s23) - 
                10*s12^8*(29*s13 + 2*s23) + 5*s12^7*(19*s13^2 + 28*s13*s23 + 
                  8*s23^2) + 2*s12*s13^4*s23^2*(25*s13^2 + 338*s13*s23 + 
                  178*s23^2) + s12^6*(409*s13^3 + 2567*s13^2*s23 + 
                  820*s13*s23^2 - 400*s23^3) + s12^2*s13^3*s23*(706*s13^3 - 
                  885*s13^2*s23 + 651*s13*s23^2 + 224*s23^3) + s12^4*s13*
                 (1769*s13^4 + 5947*s13^3*s23 + 365*s13^2*s23^2 - 
                  301*s13*s23^3 - 562*s23^4) + s12^5*(583*s13^4 + 5976*s13^3*
                   s23 + 2315*s13^2*s23^2 - 712*s13*s23^3 - 460*s23^4) + 
                s12^3*s13^2*(1210*s13^4 + 3084*s13^3*s23 - 2213*s13^2*s23^2 + 
                  144*s13*s23^3 - 112*s23^4)) + p2q^2*p3q*(s12^7*(472*s13^2 + 
                  80*s13*s23 - 230*s23^2) - 20*s13^5*s23^2*(26*s13^2 + 
                  3*s13*s23 - 23*s23^2) + 2*s12^6*(349*s13^3 + 765*s13^2*
                   s23 - 183*s13*s23^2 - 230*s23^3) + 2*s12*s13^4*s23*
                 (-225*s13^3 - 741*s13^2*s23 + 305*s13*s23^2 + 281*s23^3) + 
                s12^4*s13*(2425*s13^4 + 5079*s13^3*s23 + 245*s13^2*s23^2 - 
                  627*s13*s23^3 - 356*s23^4) + s12^5*(1645*s13^4 + 
                  3484*s13^3*s23 + 675*s13^2*s23^2 - 802*s13*s23^3 - 
                  230*s23^4) + s12^3*s13^2*(347*s13^4 + 4430*s13^3*s23 - 
                  2479*s13^2*s23^2 - 348*s13*s23^3 - 224*s23^4) + 
                s12^2*s13^3*(-659*s13^4 + 935*s13^3*s23 - 2767*s13^2*s23^2 + 
                  535*s13*s23^3 + 112*s23^4)) + p2q^3*s13*(s12^6*
                 (-272*s13^2 + 20*s13*s23 - 50*s23^2) + 10*s13^4*s23*
                 (27*s13^3 - 25*s13^2*s23 - 29*s13*s23^2 + 23*s23^3) - 
                s12^5*(179*s13^3 - 162*s13^2*s23 + 251*s13*s23^2 + 
                  100*s23^3) + s12^2*s13^3*(-371*s13^3 + 895*s13^2*s23 - 
                  1601*s13*s23^2 + 205*s23^3) - s12^4*(93*s13^4 - 1983*s13^3*
                   s23 + 15*s13^2*s23^2 + 383*s13*s23^3 + 50*s23^4) - 
                s12^3*s13*(647*s13^4 - 2790*s13^3*s23 + 475*s13^2*s23^2 + 
                  280*s13*s23^3 + 112*s23^4) + 2*s12*s13^3*(45*s13^4 + 
                  108*s13^3*s23 - 613*s13^2*s23^2 - 8*s13*s23^3 + 
                  128*s23^4)) + p3q^3*s12*(90*s12^8 + 50*s13^4*s23^3*
                 (s13 + s23) - 2*s12^7*(19*s13 + 100*s23) - s12^6*s13*
                 (233*s13 + 354*s23) + s12*s13^3*s23^2*(119*s13^2 + 
                  321*s13*s23 + 112*s23^2) + s12^2*s13^3*s23*(706*s13^2 - 
                  767*s13*s23 + 212*s23^2) + s12^5*(-633*s13^3 + 571*s13^2*
                   s23 + 830*s13*s23^2 + 60*s23^3) + s12^4*(-1169*s13^4 + 
                  1880*s13^3*s23 + 1227*s13^2*s23^2 - 10*s13*s23^3 - 
                  230*s23^4) - s12^3*s13*(641*s13^4 - 1861*s13^3*s23 + 
                  453*s13^2*s23^2 + 57*s13*s23^3 + 256*s23^4))) + 
            p1q^3*s23*(-(p3q^2*(270*s12^8*s23 + 70*s13^4*s23^4*(s13 + s23) + 
                 s12^7*(9*s13^2 + 86*s13*s23 - 40*s23^2) + s12^2*s13^3*s23^2*
                  (137*s13^2 - 877*s13*s23 + 4*s23^2) + 2*s12*s13^3*s23^3*
                  (-25*s13^2 + 66*s13*s23 + 46*s23^2) + s12^6*(9*s13^3 - 
                   547*s13^2*s23 - 750*s13*s23^2 - 60*s23^3) + s12^3*s13*s23*
                  (-1030*s13^4 + 1115*s13^3*s23 - 504*s13^2*s23^2 + 
                   12*s13*s23^3 - 92*s23^4) + s12^5*(-9*s13^4 - 1356*s13^3*
                    s23 - 367*s13^2*s23^2 + 370*s13*s23^3 + 180*s23^4) + 
                 s12^4*(-9*s13^5 - 2023*s13^4*s23 + 1285*s13^3*s23^2 + 
                   681*s13^2*s23^3 + 214*s13*s23^4 - 70*s23^5))) + 
              p2q^2*(10*s13^4*s23^2*(-27*s13^3 + 5*s13^2*s23 + 25*s13*s23^2 - 
                  7*s23^3) + s12^6*(-32*s13^2*s23 + 20*s13*s23^2 + 
                  70*s23^3) + s12^2*s13^3*(9*s13^4 + 589*s13^3*s23 - 
                  1073*s13^2*s23^2 + 1087*s13*s23^3 - 44*s23^4) - 
                2*s12*s13^3*s23*(135*s13^4 + 288*s13^3*s23 - 371*s13^2*
                   s23^2 - 118*s13*s23^3 + 46*s23^4) + s12^5*(-9*s13^4 + 
                  142*s13^3*s23 - 327*s13^2*s23^2 + 82*s13*s23^3 + 
                  140*s23^4) + s12^4*(-9*s13^5 + 1455*s13^4*s23 - 933*s13^3*
                   s23^2 - 447*s13^2*s23^3 + 154*s13*s23^4 + 70*s23^5) + 
                s12^3*s13*(9*s13^5 + 2140*s13^4*s23 - 1389*s13^3*s23^2 + 
                  8*s13^2*s23^3 - 52*s13*s23^4 + 92*s23^5)) + 
              2*p2q*p3q*(10*s12^7*s23*(11*s13 + 2*s23) + 10*s13^4*s23^3*
                 (16*s13^2 + 9*s13*s23 - 7*s23^2) + s12^6*(9*s13^3 + 
                  343*s13^2*s23 + 160*s13*s23^2 - 70*s23^3) + 2*s12*s13^3*
                 s23^2*(45*s13^3 + 252*s13^2*s23 + 26*s13*s23^2 - 46*s23^3) + 
                s12^2*s13^3*s23*(479*s13^3 - 578*s13^2*s23 + 847*s13*s23^2 - 
                  24*s23^3) + s12^5*(9*s13^4 + 1073*s13^3*s23 + 110*s13^2*
                   s23^2 - 252*s13*s23^3 - 20*s23^4) - s12^4*(9*s13^5 - 
                  1982*s13^4*s23 + 722*s13^3*s23^2 + 429*s13^2*s23^3 + 
                  30*s13*s23^4 - 70*s23^5) + s12^3*s13*(-9*s13^5 + 
                  1621*s13^4*s23 - 1396*s13^3*s23^2 + 256*s13^2*s23^3 - 
                  32*s13*s23^4 + 92*s23^5)))))/(36*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)*s23^2*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (-9*p1q^6*s12*s23^4*(60*s12^5*s23 + 
             40*s13^4*s23*(s13 + s23) + s12*s13^3*(5*s13^2 + 17*s13*s23 - 28*
                s23^2) + s12^2*s13^2*(5*s13^2 - 32*s13*s23 - 4*s23^2) - 
             s12^3*s13*(5*s13^2 + 21*s13*s23 + 12*s23^2) + 
             s12^4*(-5*s13^2 + 48*s13*s23 + 60*s23^2)) + 9*(p2q + p3q)^2*
            (s12 + s13)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
            (p3q^2*s12*s23*(s12*s13^3*(41*s13 - 10*s23) + 60*s12^4*s23 - 22*
                s12^2*s13^2*s23 + 40*s13^4*s23 - s12^3*s13*(41*s13 + 
                 12*s23)) + 2*p2q*p3q*(30*s12^6*s23 - 6*s12^5*(s13 - 5*s23)*
                s23 - 30*s13^5*s23^2 + s12^2*s13^3*s23*(49*s13 + 6*s23) + 2*
                s12*s13^4*s23*(-15*s13 + 13*s23) + s12^4*s13*(80*s13^2 + 
                 51*s13*s23 - 26*s23^2) + 2*s12^3*s13^2*(40*s13^2 - 
                 7*s13*s23 - 3*s23^2)) + p2q^2*s13*(-60*s12^5*s23 - 12*s12*
                s13^3*(s13 - s23)*s23 + 60*s13^4*(s13 - s23)*s23 + s12^2*
                s13^2*s23*(229*s13 + 22*s23) + s12^4*(160*s13^2 - 
                 29*s13*s23 - 40*s23^2) + 2*s12^3*s13*(80*s13^2 - 
                 14*s13*s23 + 5*s23^2))) + p1q^5*s23^3*
            (p3q*(2160*s12^7*s23 - 460*s13^4*s23^3*(s13 + s23) + s12^6*
                (-297*s13^2 + 1728*s13*s23 + 1540*s23^2) - 2*s12^5*
                (900*s13^3 - 729*s13^2*s23 + 892*s13*s23^2 + 80*s23^3) + 4*
                s12*s13^3*s23*(90*s13^3 - 20*s13^2*s23 - 103*s13*s23^2 + 
                 102*s23^3) + s12^2*s13^3*(207*s13^3 + 108*s13^2*s23 + 
                 989*s13*s23^2 + 3122*s23^3) - 2*s12^3*s13*(396*s13^4 + 
                 2403*s13^3*s23 + 733*s13^2*s23^2 + 491*s13*s23^3 + 
                 204*s23^4) + s12^4*(-2502*s13^4 - 2016*s13^3*s23 + 
                 801*s13^2*s23^2 - 680*s13*s23^3 + 460*s23^4)) + 
             p2q*(540*s12^7*s23 + 20*s13^4*s23^2*(27*s13^2 + 4*s13*s23 - 
                 23*s23^2) + s12^6*(-207*s13^2 + 1512*s13*s23 + 460*s23^2) + 
               4*s12^5*(198*s13^3 + 288*s13^2*s23 + 103*s13*s23^2 + 
                 95*s23^3) + 4*s12*s13^3*s23*(405*s13^3 + 493*s13^2*s23 - 
                 40*s13*s23^2 + 102*s23^3) + s12^2*s13^3*(297*s13^3 + 
                 1458*s13^2*s23 + 953*s13*s23^2 + 2834*s23^3) + 2*s12^3*s13*
                (900*s13^4 + 522*s13^3*s23 + 653*s13^2*s23^2 - 635*s13*
                  s23^3 - 204*s23^4) + s12^4*(2502*s13^4 + 2034*s13^3*s23 - 
                 1035*s13^2*s23^2 - 428*s13*s23^3 + 460*s23^4))) + 
           p1q*(p2q + p3q)*(p3q^4*s12^2*s23*(-540*s12^8 - 260*s13^5*s23^2*
                (s13 + s23) + s12^7*(-432*s13 + 80*s23) + s12^6*
                (-2133*s13^2 + 2080*s13*s23 - 1460*s23^2) - 2*s12*s13^4*s23*
                (149*s13^2 + 743*s13*s23 + 424*s23^2) + s12^4*s13*
                (2700*s13^3 + 692*s13^2*s23 + 2337*s13*s23^2 - 808*s23^3) + 
               s12^2*s13^3*(2421*s13^3 + 540*s13^2*s23 - 2917*s13*s23^2 + 
                 420*s23^3) + 2*s12^3*s13^2*(3375*s13^3 + 1125*s13^2*s23 + 
                 361*s13*s23^2 + 528*s23^3) - 2*s12^5*(1935*s13^3 - 
                 640*s13^2*s23 + 768*s13*s23^2 + 1040*s23^3)) - 
             2*p2q^3*p3q*s13*(-460*s12^8*s23^2 + 10*s13^6*s23^2*(108*s13^2 - 
                 73*s13*s23 - 181*s23^2) + s12^7*(1440*s13^3 - 1197*s13^2*
                  s23 - 871*s13*s23^2 - 740*s23^3) + 2*s12*s13^5*s23*
                (540*s13^3 + 527*s13^2*s23 - 1349*s13*s23^2 + 69*s23^3) + 
               s12^2*s13^4*s23*(279*s13^3 + 1637*s13^2*s23 + 5202*s13*s23^2 + 
                 694*s23^3) + s12^4*s13^2*(-720*s13^4 + 16218*s13^3*s23 + 
                 17506*s13^2*s23^2 + 1229*s13*s23^3 - 584*s23^4) + s12^6*
                (3600*s13^4 + 4815*s13^3*s23 - 2627*s13^2*s23^2 - 
                 211*s13*s23^3 - 280*s23^4) - 3*s12^3*s13^3*(240*s13^4 - 
                 705*s13^3*s23 - 3537*s13^2*s23^2 - 1109*s13*s23^3 + 
                 50*s23^4) + 3*s12^5*s13*(720*s13^4 + 6438*s13^3*s23 + 
                 2114*s13^2*s23^2 - 401*s13*s23^3 + 160*s23^4)) + 
             2*p2q*p3q^3*s12*(10*s12^8*(108*s13 - 73*s23)*s23 - 280*s13^6*
                s23^3*(s13 + s23) + s12*s13^5*s23^2*(-809*s13^2 - 
                 529*s13*s23 + 480*s23^2) + s12^7*(720*s13^3 + 279*s13^2*
                  s23 - 88*s13*s23^2 - 2540*s23^3) - 3*s12^3*s13^3*s23*
                (1923*s13^3 + 1242*s13^2*s23 + 445*s13*s23^2 + 50*s23^3) - 
               s12^2*s13^4*s23*(2313*s13^3 + 3439*s13^2*s23 - 405*s13*s23^2 + 
                 584*s23^3) + s12^6*(2160*s13^4 + 63*s13^3*s23 - 2393*s13^2*
                  s23^2 - 2110*s13*s23^3 - 1810*s23^4) + 3*s12^5*s13*
                (720*s13^4 + 1254*s13^3*s23 - 427*s13^2*s23^2 - 134*s13*
                  s23^3 + 46*s23^4) + s12^4*s13^2*(720*s13^4 - 558*s13^3*
                  s23 + 658*s13^2*s23^2 - 553*s13*s23^3 + 694*s23^4)) + 
             p2q^4*s13^2*(620*s12^7*s23^2 + s12^2*s13^3*s23*(2133*s13^3 - 
                 6678*s13^2*s23 - 8173*s13*s23^2 - 1056*s23^3) + 20*s13^5*s23*
                (27*s13^3 - 108*s13^2*s23 - 31*s13*s23^2 + 104*s23^3) + 4*s12*
                s13^4*s23*(108*s13^3 - 1177*s13^2*s23 + 227*s13*s23^2 + 
                 202*s23^3) + s12^6*(1440*s13^3 - 5949*s13^2*s23 + 
                 2530*s13*s23^2 + 880*s23^3) + 2*s12^3*s13^2*(720*s13^4 + 
                 1467*s13^3*s23 - 5931*s13^2*s23^2 - 2915*s13*s23^3 - 
                 210*s23^4) + 2*s12^5*(2160*s13^4 - 7371*s13^3*s23 - 
                 1457*s13^2*s23^2 + 1509*s13*s23^3 + 130*s23^4) + s12^4*s13*
                (4320*s13^4 - 8100*s13^3*s23 - 12556*s13^2*s23^2 + 
                 1473*s13*s23^3 + 848*s23^4)) - p2q^2*p3q^2*(1540*s12^9*
                s23^2 - 1540*s13^7*s23^3*(s13 + s23) - 4*s12*s13^6*s23^2*
                (650*s13^2 + 604*s13*s23 - 411*s23^2) + 2*s12^3*s13^4*s23*
                (423*s13^3 + 7970*s13^2*s23 + 1028*s13*s23^2 - 200*s23^3) - 
               s12^2*s13^5*s23*(3825*s13^3 + 1786*s13^2*s23 - 5981*s13*
                  s23^2 + 888*s23^3) + s12^8*(-1440*s13^3 + 3825*s13^2*s23 + 
                 1336*s13*s23^2 + 3080*s23^3) + s12^6*s13*(4320*s13^4 + 
                 8865*s13^3*s23 + 530*s13^2*s23^2 + 647*s13*s23^3 - 
                 1644*s23^4) + 8*s12^5*s13^2*(900*s13^4 + 3969*s13^3*s23 + 
                 1338*s13^2*s23^2 - 136*s13*s23^3 + 111*s23^4) + s12^4*s13^3*
                (2880*s13^4 + 28287*s13^3*s23 + 30448*s13^2*s23^2 + 
                 3684*s13*s23^3 + 400*s23^4) + s12^7*(-1440*s13^4 + 
                 4554*s13^3*s23 + 4944*s13^2*s23^2 - 308*s13*s23^3 + 
                 1540*s23^4))) + p1q^2*s23*(p2q^4*s13*(10*s12^7*(297*s13^2 + 
                 8*s13*s23 + 38*s23^2) - 40*s13^5*s23*(54*s13^3 - 
                 79*s13^2*s23 - 58*s13*s23^2 + 75*s23^3) + s12^6*
                (3933*s13^3 + 11350*s13^2*s23 - 957*s13*s23^2 + 940*s23^3) + 
               s12^3*s13^2*(900*s13^4 - 8010*s13^3*s23 + 9678*s13^2*s23^2 + 
                 2653*s13*s23^3 - 432*s23^4) + s12^4*s13*(-2880*s13^4 + 
                 11780*s13^3*s23 + 13139*s13^2*s23^2 - 2337*s13*s23^3 - 
                 426*s23^4) - 4*s12*s13^4*(135*s13^4 + 547*s13^3*s23 - 
                 2093*s13^2*s23^2 + 13*s13*s23^3 - 22*s23^4) + s12^5*
                (-2322*s13^4 + 24122*s13^3*s23 + 5244*s13^2*s23^2 - 
                 1283*s13*s23^3 + 560*s23^4) + s12^2*s13^3*(-45*s13^4 - 
                 6318*s13^3*s23 + 3472*s13^2*s23^2 + 13003*s13*s23^3 + 
                 1194*s23^4)) - 2*p2q^3*p3q*(s12^8*(729*s13^2 + 80*s13*s23 - 
                 730*s23^2) + 10*s13^6*s23*(81*s13^3 - 343*s13^2*s23 - 
                 51*s13*s23^2 + 373*s23^3) - s12^7*(1764*s13^3 - 569*s13^2*
                  s23 + 858*s13*s23^2 + 1460*s23^3) + s12^5*s13*
                (10692*s13^4 - 19146*s13^3*s23 - 3689*s13^2*s23^2 + 
                 2873*s13*s23^3 - 828*s23^4) + 2*s12*s13^5*(135*s13^4 - 
                 616*s13^3*s23 - 3889*s13^2*s23^2 + 1142*s13*s23^3 + 
                 90*s23^4) + s12^3*s13^3*(-1134*s13^4 + 9657*s13^3*s23 - 
                 14243*s13^2*s23^2 - 7453*s13*s23^3 + 432*s23^4) + s12^4*
                s13^2*(9225*s13^4 - 2168*s13^3*s23 - 14577*s13^2*s23^2 + 
                 2293*s13*s23^3 + 518*s23^4) - s12^6*(567*s13^4 + 
                 12014*s13^3*s23 - 2815*s13^2*s23^2 + 1766*s13*s23^3 + 
                 730*s23^4) - s12^2*s13^4*(1323*s13^4 - 1844*s13^3*s23 + 
                 5462*s13^2*s23^2 + 15381*s13*s23^3 + 1286*s23^4)) - 
             p3q^4*s12*(540*s12^9 + 4*s12^8*(108*s13 - 425*s23) + 560*s13^5*
                s23^3*(s13 + s23) + s12*s13^4*s23^2*(51*s13^2 + 25*s13*s23 - 
                 426*s23^2) + s12^7*(2457*s13^2 - 2836*s13*s23 + 80*s23^2) + 
               s12^6*(5814*s13^3 - 5870*s13^2*s23 + 5320*s13*s23^2 - 
                 680*s23^3) + s12^2*s13^3*s23*(3268*s13^3 + 1080*s13^2*s23 - 
                 5069*s13*s23^2 - 432*s23^3) + s12^4*s13*(-6102*s13^4 + 
                 6138*s13^3*s23 + 526*s13^2*s23^2 + 4519*s13*s23^3 + 
                 88*s23^4) + s12^3*s13^2*(-2745*s13^4 + 9648*s13^3*s23 + 
                 3485*s13^2*s23^2 - 4807*s13*s23^3 + 1194*s23^4) - 2*s12^5*
                (54*s13^4 + 2812*s13^3*s23 + 451*s13^2*s23^2 - 288*s13*
                  s23^3 + 1500*s23^4)) - 2*p2q*p3q^3*(270*s12^10 + 730*s13^6*
                s23^3*(s13 + s23) - 2*s12^9*(297*s13 + 310*s23) + s12^8*
                (954*s13^2 - 362*s13*s23 - 380*s23^2) + 2*s12*s13^5*s23^2*
                (45*s13^2 + 784*s13*s23 + 414*s23^2) + s12^7*(1566*s13^3 - 
                 1837*s13^2*s23 + 4338*s13*s23^2 - 3220*s23^3) + s12^2*s13^4*
                s23*(836*s13^3 - 2623*s13^2*s23 - 4225*s13*s23^2 - 
                 518*s23^3) + s12^3*s13^3*(1152*s13^4 + 3007*s13^3*s23 - 
                 9101*s13^2*s23^2 - 9005*s13*s23^3 - 432*s23^4) - s12^5*s13*
                (7884*s13^4 + 10990*s13^3*s23 + 2239*s13^2*s23^2 - 
                 4237*s13*s23^3 + 180*s23^4) + s12^4*s13^2*(36*s13^4 - 
                 1692*s13^3*s23 - 8717*s13^2*s23^2 - 3987*s13*s23^3 + 
                 1286*s23^4) - 2*s12^6*(3510*s13^4 + 5259*s13^3*s23 - 
                 460*s13^2*s23^2 + 737*s13*s23^3 + 1865*s23^4)) + 
             p2q^2*p3q^2*(20*s12^9*(81*s13 + 4*s23) + 40*s13^6*s23^2*
                (79*s13^2 - 69*s13*s23 - 148*s23^2) + s12^8*(-909*s13^2 - 
                 220*s13*s23 + 2840*s23^2) + 4*s12*s13^5*s23*(650*s13^3 + 
                 1373*s13^2*s23 - 1773*s13*s23^2 - 386*s23^3) + 2*s12^7*
                (1620*s13^3 + 525*s13^2*s23 - 254*s13*s23^2 + 4340*s23^3) + 
               s12^3*(-936*s13^7 - 20530*s13^6*s23 + 34562*s13^5*s23^2 + 
                 25194*s13^4*s23^3) + s12^4*s13^2*(-18387*s13^4 + 
                 2060*s13^3*s23 + 36934*s13^2*s23^2 + 918*s13*s23^3 - 
                 1988*s23^4) + 2*s12^5*s13*(-4698*s13^4 + 22908*s13^3*s23 + 
                 5333*s13^2*s23^2 - 4209*s13*s23^3 + 772*s23^4) + s12^2*s13^4*
                (2691*s13^4 - 3506*s13^3*s23 + 9797*s13^2*s23^2 + 
                 26234*s13*s23^3 + 1988*s23^4) + s12^6*(11133*s13^4 + 
                 34570*s13^3*s23 - 4463*s13^2*s23^2 + 6116*s13*s23^3 + 
                 5920*s23^4))) - p1q^4*s23^2*
            (p2q^2*(20*s12^7*(27*s13 - 4*s23)*s23 + 20*s13^4*s23^2*
                (108*s13^3 - 15*s13^2*s23 - 100*s13*s23^2 + 23*s23^3) - s12^6*
                (414*s13^3 - 1881*s13^2*s23 + 260*s13*s23^2 + 80*s23^3) + 
               s12^2*s13^3*(459*s13^4 + 2502*s13^3*s23 + 4714*s13^2*s23^2 + 
                 8397*s13*s23^3 - 2138*s23^4) + s12^5*(1719*s13^4 + 
                 2304*s13^3*s23 - 2076*s13^2*s23^2 + 480*s13*s23^3 - 
                 460*s23^4) + 4*s12*s13^3*s23*(675*s13^4 + 1047*s13^3*s23 - 
                 548*s13^2*s23^2 + 168*s13*s23^3 - 102*s23^4) + s12^4*
                (5139*s13^5 + 1953*s13^4*s23 - 5102*s13^3*s23^2 - 
                 1411*s13^2*s23^3 + 1148*s13*s23^4 - 460*s23^5) + s12^3*s13*
                (3465*s13^5 - 504*s13^4*s23 + 2000*s13^3*s23^2 - 3614*s13^2*
                  s23^3 + 334*s13*s23^4 + 408*s23^5)) + 2*p2q*p3q*
              (810*s12^8*s23 + s12^7*(-207*s13^2 + 918*s13*s23 + 380*s23^2) + 
               10*s13^4*s23^2*(27*s13^3 - 119*s13^2*s23 - 100*s13*s23^2 + 
                 46*s23^3) + s12^6*(720*s13^3 + 2187*s13^2*s23 - 
                 1838*s13*s23^2 + 570*s23^3) + s12^2*s13^3*(207*s13^4 - 
                 855*s13^3*s23 + 1377*s13^2*s23^2 + 4665*s13*s23^3 - 
                 2018*s23^4) + 2*s12*s13^3*s23*(315*s13^4 + 208*s13^3*s23 - 
                 850*s13^2*s23^2 + 28*s13*s23^3 - 204*s23^4) + s12^5*
                (927*s13^4 + 8073*s13^3*s23 - 2731*s13^2*s23^2 + 
                 68*s13*s23^3 + 540*s23^4) + s12^3*s13*(-720*s13^5 - 
                 7677*s13^4*s23 + 2007*s13^3*s23^2 + 2722*s13^2*s23^3 + 
                 454*s13*s23^4 + 408*s23^5) - s12^4*(927*s13^5 + 198*s13^4*
                  s23 - 2927*s13^3*s23^2 + 2631*s13^2*s23^3 - 532*s13*s23^4 + 
                 460*s23^5)) + p3q^2*(3240*s12^8*s23 + 460*s13^4*s23^3*
                (-s13^2 + s23^2) + s12^7*(-459*s13^2 + 2592*s13*s23 + 
                 840*s23^2) + s12^2*s13^3*s23*(-891*s13^3 + 200*s13^2*s23 + 
                 1401*s13*s23^2 - 1898*s23^3) - 8*s12*s13^3*s23^2*
                (55*s13^3 + 169*s13^2*s23 + 70*s13*s23^2 + 51*s23^3) - s12^6*
                (3465*s13^3 - 5940*s13^2*s23 + 5216*s13*s23^2 + 400*s23^3) + 
               s12^5*(-5139*s13^4 + 2808*s13^3*s23 + 106*s13^2*s23^2 - 
                 200*s13*s23^3 + 1540*s23^4) + 2*s12^3*s13*(207*s13^5 - 
                 2268*s13^4*s23 + 2843*s13^3*s23^2 + 4529*s13^2*s23^3 + 
                 287*s13*s23^4 + 204*s23^5) - s12^4*(1719*s13^5 + 
                 8721*s13^4*s23 - 912*s13^3*s23^2 + 4319*s13^2*s23^3 + 
                 84*s13*s23^4 + 460*s23^5))) - p1q^3*s23*
            (p2q^3*(2*s12^7*s23*(351*s13^2 + 80*s13*s23 + 230*s23^2) - 120*
                s13^5*s23^2*(27*s13^3 - 16*s13^2*s23 - 27*s13*s23^2 + 
                 16*s23^3) + 4*s12*s13^4*s23*(-495*s13^4 - 1083*s13^3*s23 + 
                 1667*s13^2*s23^2 + 13*s13*s23^3 + 218*s23^4) + s12^6*
                (207*s13^4 - 396*s13^3*s23 + 3997*s13^2*s23^2 + 312*s13*
                  s23^3 + 920*s23^4) - s12^2*s13^3*(207*s13^5 + 1242*s13^4*
                  s23 + 7694*s13^3*s23^2 + 6384*s13^2*s23^3 - 8795*s13*
                  s23^4 - 444*s23^5) + s12^5*(-882*s13^5 - 2502*s13^4*s23 + 
                 10464*s13^3*s23^2 + 1060*s13^2*s23^3 + 764*s13*s23^4 + 
                 460*s23^5) - 2*s12^3*s13^2*(855*s13^5 - 2088*s13^4*s23 + 
                 2147*s13^3*s23^2 - 2681*s13^2*s23^3 + 758*s13*s23^4 + 
                 486*s23^5) + s12^4*s13*(-2592*s13^5 + 1386*s13^4*s23 + 
                 10555*s13^3*s23^2 + 4446*s13^2*s23^3 - 2047*s13*s23^4 + 
                 612*s23^5)) - p3q^3*(2160*s12^9*s23 + 460*s13^5*s23^4*
                (s13 + s23) + 4*s12*s13^4*s23^3*(-120*s13^2 + 128*s13*s23 + 
                 153*s23^2) - 3*s12^8*(69*s13^2 - 576*s13*s23 + 440*s23^2) + 
               s12^2*s13^3*s23^2*(407*s13^3 - 1090*s13^2*s23 - 2603*s13*
                  s23^2 - 972*s23^3) - 2*s12^7*(855*s13^3 - 3375*s13^2*s23 + 
                 2972*s13*s23^2 + 120*s23^3) + 2*s12^3*s13^2*s23*
                (-1998*s13^4 + 1589*s13^3*s23 + 1524*s13^2*s23^2 - 
                 3436*s13*s23^3 + 222*s23^4) + s12^6*(-2592*s13^4 + 
                 10350*s13^3*s23 - 4468*s13^2*s23^2 + 3720*s13*s23^3 + 
                 1320*s23^4) + s12^4*s13*(207*s13^5 - 10386*s13^4*s23 + 
                 8495*s13^3*s23^2 + 6508*s13^2*s23^3 + 2999*s13*s23^4 + 
                 872*s23^5) - 2*s12^5*(441*s13^5 + 1935*s13^4*s23 - 
                 186*s13^3*s23^2 + 2575*s13^2*s23^3 - 732*s13*s23^4 + 
                 960*s23^5)) - p2q*p3q^2*(1620*s12^9*s23 + 40*s13^5*s23^3*
                (-50*s13^2 + 21*s13*s23 + 71*s23^2) - s12^8*(207*s13^2 + 
                 864*s13*s23 + 400*s23^2) + 4*s12*s13^4*s23^2*(-220*s13^3 - 
                 1187*s13^2*s23 + 191*s13*s23^2 + 88*s23^3) + 6*s12^7*
                (216*s13^3 + 855*s13^2*s23 - 1090*s13*s23^2 + 140*s23^3) + 2*
                s12^6*(3006*s13^4 + 9090*s13^3*s23 - 3423*s13^2*s23^2 + 
                 3182*s13*s23^3 - 720*s23^4) - s12^2*s13^3*s23*(2862*s13^4 - 
                 2999*s13^3*s23 + 1558*s13^2*s23^2 + 14969*s13*s23^3 + 
                 2388*s23^4) + 2*s12^5*(3447*s13^5 + 7191*s13^4*s23 - 
                 5908*s13^3*s23^2 - 55*s13^2*s23^3 + 1186*s13*s23^4 - 
                 2150*s23^5) - 6*s12^3*s13^2*(69*s13^5 + 1368*s13^4*s23 - 
                 3275*s13^3*s23^2 - 568*s13^2*s23^3 + 2038*s13*s23^4 - 
                 310*s23^5) + s12^4*s13*(1971*s13^5 + 414*s13^4*s23 + 
                 14057*s13^3*s23^2 - 2528*s13^2*s23^3 + 9013*s13*s23^4 + 
                 1132*s23^5)) + p2q^2*p3q*(40*s12^8*s23*(27*s13 + 4*s23) - 20*
                s13^5*s23^2*(81*s13^3 - 277*s13^2*s23 - 143*s13*s23^2 + 
                 215*s23^3) + s12^7*(-414*s13^3 - 630*s13^2*s23 + 
                 2520*s13*s23^2 + 1000*s23^3) - 4*s12*s13^4*s23*(360*s13^4 + 
                 44*s13^3*s23 - 3013*s13^2*s23^2 + 50*s13*s23^3 - 
                 283*s23^4) + s12^6*(1971*s13^4 - 7902*s13^3*s23 + 
                 8499*s13^2*s23^2 - 1216*s13*s23^3 + 3680*s23^4) + 2*s12^3*
                s13^2*(648*s13^5 + 9594*s13^4*s23 - 7791*s13^3*s23^2 + 
                 647*s13^2*s23^3 + 1920*s13*s23^4 - 1194*s23^5) + s12^4*s13*
                (6012*s13^5 + 9666*s13^4*s23 + 2977*s13^3*s23^2 + 
                 9774*s13^2*s23^3 - 8061*s13*s23^4 + 352*s23^5) + 2*s12^5*
                (3447*s13^5 - 3933*s13^4*s23 + 10822*s13^3*s23^2 - 
                 496*s13^2*s23^3 - 72*s13*s23^4 + 1420*s23^5) + s12^2*s13^3*
                (-207*s13^5 + 4464*s13^4*s23 - 3878*s13^3*s23^2 - 
                 2928*s13^2*s23^3 + 21161*s13*s23^4 + 1860*s23^5))))/
          (72*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)*s23^2*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))) + 
         (9*(p2q^2*(s12 + s13)*(3*s13^2*s23*(s13 + s23) + s12^3*(16*s13 + 
                s23) + s12^2*(32*s13^2 + 29*s13*s23 + s23^2) + 
              s12*s13*(16*s13^2 + 31*s13*s23 + 12*s23^2)) + 
            2*p2q*(p3q*(s12 + s13)*(s13^2*s23*(s13 + s23) + s12^3*
                 (8*s13 + s23) + s12^2*(16*s13^2 + 15*s13*s23 + s23^2) + 
                s12*s13*(8*s13^2 + 15*s13*s23 + 6*s23^2)) - p1q*s23*(s12^4 + 
                2*s12^3*(3*s13 + s23) + 3*s12^2*(2*s13^2 + s13*s23 + s23^2) + 
                s13*(s13^3 + s13^2*s23 + s13*s23^2 - 2*s23^3) + 
                2*s12*(s13^3 + 5*s13^2*s23 + s23^3))) + 
            s23*(p1q^2*(s12 - s13)*(s12 + s13)^2*(s12 + s13 + s23) + 
              p3q^2*(s12 - s13)*(s12 + s13)^2*(s12 + s13 + s23) - 
              2*p1q*p3q*(s12^4 + 2*s12^3*(4*s13 + s23) + s12^2*(8*s13^2 + 
                  5*s13*s23 + 3*s23^2) + 2*s12*(5*s13^2*s23 + s23^3) - 
                s13*(s13^3 + s13^2*s23 - s13*s23^2 + 2*s23^3))))*
           den[-3 + 2*ep])/(8*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^2*s23^2))*
        p1 . E0conj*p2 . E0 + 
       (-1/9*(ep^2*(s12 + s13)^2*(5*s12^2 + s12*s13 + 5*s13^2))/
           (s12^2*s13^2*s23) - ((s12 + s13 + s23)*
           (18*p1q^6*(10*s12^4 - 7*s12^3*s13 - 7*s12*s13^3 + 10*s13^4)*
             s23^5 + 18*(p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*
             (-(p2q*s13*(s12^4*s13*(98*s13 - 3*s23) - 10*s12^5*s23 + 
                 33*s12^2*s13^3*s23 + 3*s12*s13^4*s23 + 10*s13^5*s23 + 
                 s12^3*s13^2*(98*s13 + 65*s23))) - p3q*s12*(10*s12^5*s23 + 
                3*s12^4*s13*s23 - 3*s12*s13^4*s23 - 10*s13^5*s23 + 
                s12^3*s13^2*(98*s13 + 33*s23) + s12^2*s13^3*(98*s13 + 
                  65*s23))) + 2*p1q^5*s23^4*(p3q*(-360*s12^5 + s12^2*s13^2*
                 (207*s13 - 646*s23) + 10*s13^4*(-9*s13 + s23) + 
                2*s12^4*(81*s13 + 5*s23) + 2*s12^3*s13*(-189*s13 + 55*s23) + 
                s12*s13^3*(-117*s13 + 110*s23)) + p2q*(-90*s12^5 + 
                10*s13^4*(-36*s13 + s23) + s12^4*(-117*s13 + 10*s23) + 
                2*s12*s13^3*(81*s13 + 55*s23) + s12^3*s13*(207*s13 + 
                  110*s23) - 2*s12^2*s13^2*(189*s13 + 323*s23))) - 
            p1q^4*s23^3*(-2*p2q*p3q*(270*s12^6 - s12^5*(9*s13 + 40*s23) + 
                2*s12^2*s13^2*(81*s13^2 + 1072*s13*s23 - 646*s23^2) + 
                2*s12^4*(81*s13^2 - 240*s13*s23 - 80*s23^2) + 10*s13^4*
                 (27*s13^2 - 4*s13*s23 - 16*s23^2) + 2*s12^3*s13*
                 (1899*s13^2 + 1072*s13*s23 + 173*s23^2) + s12*s13^3*
                 (-9*s13^2 - 480*s13*s23 + 346*s23^2)) + 
              p2q^2*(-20*s12^5*(9*s13 - s23) + 2*s12*s13^3*(108*s13^2 + 
                  340*s13*s23 - 173*s23^2) + 20*s13^4*(-54*s13^2 + 
                  3*s13*s23 + 8*s23^2) + s12^4*(207*s13^2 + 280*s13*s23 + 
                  160*s23^2) - 2*s12^3*s13*(918*s13^2 + 397*s13*s23 + 
                  173*s23^2) + s12^2*s13^2*(-2187*s13^2 - 3494*s13*s23 + 
                  1292*s23^2)) + p3q^2*(-1080*s12^6 + 12*s12^5*(18*s13 + 
                  5*s23) + 20*s13^4*s23*(s13 + 8*s23) + s12^4*(-2187*s13^2 + 
                  680*s13*s23 + 160*s23^2) - 2*s12*s13^3*(90*s13^2 - 
                  140*s13*s23 + 173*s23^2) - 2*s12^3*s13*(918*s13^2 + 
                  1747*s13*s23 + 173*s23^2) + s12^2*s13^2*(207*s13^2 - 
                  794*s13*s23 + 1292*s23^2))) + p1q^3*s23^2*
             (p2q^3*(-2*s12^2*s13^3*(1053*s13^2 + 1556*s13*s23 - 
                  2125*s23^2) + 60*s13^5*(-12*s13^2 + s13*s23 + 11*s23^2) - 
                2*s12^4*s13*(360*s13^2 - 331*s13*s23 + 23*s23^2) + 
                s12^5*(261*s13^2 + 40*s13*s23 + 160*s23^2) - 4*s12*s13^4*
                 (9*s13^2 - 175*s13*s23 + 251*s23^2) + s12^3*s13^2*
                 (-5931*s13^2 - 484*s13*s23 + 542*s23^2)) + 
              p3q^3*(-720*s12^7 + 2*s12*s13^4*(20*s13 - 23*s23)*s23 + 
                160*s13^5*s23^2 + s12^6*(-36*s13 + 60*s23) - 2*s12^3*s13^2*
                 (360*s13^2 + 242*s13*s23 - 2125*s23^2) + s12^2*s13^3*
                 (261*s13^2 + 662*s13*s23 + 542*s23^2) + s12^5*(-2106*s13^2 + 
                  700*s13*s23 + 660*s23^2) - s12^4*s13*(5931*s13^2 + 
                  3112*s13*s23 + 1004*s23^2)) + p2q^2*p3q*(40*s12^6*
                 (9*s13 + s23) + 2*s12*s13^4*(369*s13^2 + 590*s13*s23 - 
                  1027*s23^2) + 20*s13^5*(-27*s13^2 + 5*s13*s23 + 74*s23^2) + 
                s12^5*(72*s13^2 + 520*s13*s23 + 980*s23^2) - s12^4*s13*
                 (10305*s13^2 + 1604*s13*s23 + 1096*s23^2) + 2*s12^3*s13^2*
                 (-7272*s13^2 + 670*s13*s23 + 2667*s23^2) + s12^2*s13^3*
                 (-1089*s13^2 - 5378*s13*s23 + 9042*s23^2)) + 
              p2q*p3q^2*(-540*s12^7 + 20*s13^5*s23*(2*s13 + 49*s23) + 
                2*s12^6*(369*s13 + 50*s23) + 8*s12*s13^4*(45*s13^2 + 
                  65*s13*s23 - 137*s23^2) - 2*s12^4*s13*(7272*s13^2 + 
                  2689*s13*s23 + 1027*s23^2) + s12^5*(-1089*s13^2 + 
                  1180*s13*s23 + 1480*s23^2) + 2*s12^2*s13^3*(36*s13^2 - 
                  802*s13*s23 + 2667*s23^2) + s12^3*s13^2*(-10305*s13^2 + 
                  1340*s13*s23 + 9042*s23^2))) - p1q^2*(p2q + p3q)*s23*
             (p2q^3*s13*(s12^4*s13*(-2583*s13^2 + 2652*s13*s23 - 626*s23^2) + 
                20*s13^5*(-9*s13^2 + s13*s23 + 51*s23^2) + s12^5*(747*s13^2 + 
                  20*s13*s23 + 140*s23^2) - 2*s12*s13^4*(27*s13^2 - 
                  120*s13*s23 + 458*s23^2) + s12^3*s13^2*(-5571*s13^2 + 
                  3572*s13*s23 + 3292*s23^2) + s12^2*s13^3*(-675*s13^2 - 
                  910*s13*s23 + 5218*s23^2)) + p3q^3*s12*(-180*s12^7 + 
                2*s12*s13^4*(10*s13 - 313*s23)*s23 + 140*s13^5*s23^2 + 
                s12^6*(-54*s13 + 20*s23) - 15*s12^5*(45*s13^2 - 16*s13*s23 - 
                  68*s23^2) - s12^4*s13*(5571*s13^2 + 910*s13*s23 + 
                  916*s23^2) + s12^2*s13^3*(747*s13^2 + 2652*s13*s23 + 
                  3292*s23^2) + s12^3*s13^2*(-2583*s13^2 + 3572*s13*s23 + 
                  5218*s23^2)) + p2q*p3q^2*(500*s13^6*s23^2 + 20*s12^7*
                 (27*s13 + s23) - 2*s12*s13^5*s23*(20*s13 + 179*s23) + 
                4*s12^6*(81*s13^2 + 50*s13*s23 + 380*s23^2) - s12^5*s13*
                 (7263*s13^2 + 1552*s13*s23 + 1414*s23^2) + s12^2*s13^4*
                 (-459*s13^2 - 298*s13*s23 + 2450*s23^2) + s12^4*s13^2*
                 (-5067*s13^2 + 12448*s13*s23 + 8294*s23^2) + s12^3*s13^3*
                 (-2799*s13^2 + 11852*s13*s23 + 9712*s23^2)) + 
              p2q^2*p3q*(20*s13^6*s23*(s13 + 76*s23) + 2*s12*s13^5*
                 (270*s13^2 + 100*s13*s23 - 707*s23^2) - s12^5*s13*
                 (2799*s13^2 + 298*s13*s23 + 358*s23^2) + s12^6*(-459*s13^2 - 
                  40*s13*s23 + 500*s23^2) + s12^4*s13^2*(-5067*s13^2 + 
                  11852*s13*s23 + 2450*s23^2) + 2*s12^2*s13^4*(162*s13^2 - 
                  776*s13*s23 + 4147*s23^2) + s12^3*s13^3*(-7263*s13^2 + 
                  12448*s13*s23 + 9712*s23^2))) - 2*p1q*(p2q + p3q)^2*
             (p2q^3*s13^2*(100*s12^5*s23^2 - 1427*s12^2*s13^3*s23^2 + 
                102*s12*s13^4*s23^2 - 350*s13^5*s23^2 + s12^3*s13^2*
                 (882*s13^2 - 2403*s13*s23 - 1787*s23^2) + 3*s12^4*s13*
                 (294*s13^2 - 615*s13*s23 + 79*s23^2)) - p2q^2*p3q*s13*(
                -160*s12^6*s23^2 + 1523*s12^2*s13^4*s23^2 - 469*s12*s13^5*
                 s23^2 + 260*s13^6*s23^2 + s12^4*s13^2*(882*s13^2 + 
                  4095*s13*s23 + 320*s23^2) + s12^5*s13*(1764*s13^2 + 
                  1683*s13*s23 + 356*s23^2) + s12^3*s13^3*(-882*s13^2 + 
                  4086*s13*s23 + 2101*s23^2)) + p3q^3*s12^2*(-350*s12^5*
                 s23^2 + 237*s12*s13^4*s23^2 + 100*s13^5*s23^2 - 
                s12^2*s13^3*s23*(1845*s13 + 1787*s23) + s12^3*s13^2*
                 (882*s13^2 - 2403*s13*s23 - 1427*s23^2) + 6*s12^4*
                 (147*s13^3 + 17*s13*s23^2)) - p2q*p3q^2*s12*(260*s12^6*
                 s23^2 + 356*s12*s13^5*s23^2 - 160*s13^6*s23^2 + 
                s12^2*s13^4*s23*(1683*s13 + 320*s23) + s12^4*s13^2*
                 (882*s13^2 + 4086*s13*s23 + 1523*s23^2) + s12^3*s13^3*
                 (1764*s13^2 + 4095*s13*s23 + 2101*s23^2) - 7*s12^5*
                 (126*s13^3 + 67*s13*s23^2)))))/(36*ep*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12^3*s13^3*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))) - (-18*p1q^6*(15*s12^5 + 7*s12^4*s13 - 
             8*s12^3*s13^2 - 8*s12^2*s13^3 + 7*s12*s13^4 + 15*s13^5)*s23^5*
            (s12 + s13 + s23) + 18*(p2q + p3q)^3*(s12 + s13)*
            (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
            (p2q*s13*(s12^3*s13^2*(40*s13 - 7*s23) - 15*s12^5*s23 + 47*s12^2*
                s13^3*s23 - 3*s12*s13^4*s23 + 15*s13^5*s23 + s12^4*s13*
                (40*s13 + 3*s23)) + p3q*s12*(s12^2*s13^3*(40*s13 - 7*s23) + 
               15*s12^5*s23 - 3*s12^4*s13*s23 + 3*s12*s13^4*s23 - 15*s13^5*
                s23 + s12^3*s13^2*(40*s13 + 47*s23))) + 
           p1q^5*s23^4*(p3q*(1080*s12^7 + 2*s12^6*(837*s13 + 520*s23) - 2*
                s12^3*s13^2*(693*s13^2 + 40*s13*s23 - 463*s23^2) + s12^4*s13*
                (-486*s13^2 + 877*s13*s23 - 420*s23^2) + 2*s12*s13^4*
                (468*s13^2 + 83*s13*s23 - 210*s23^2) + 2*s12^5*(729*s13^2 + 
                 47*s13*s23 - 20*s23^2) + 10*s13^5*(27*s13^2 + 23*s13*s23 - 
                 4*s23^2) + s12^2*s13^3*(630*s13^2 - 23*s13*s23 + 
                 926*s23^2)) + p2q*(270*s12^7 + s12^6*(936*s13 + 230*s23) - 2*
                s12^3*s13^2*(243*s13^2 + 40*s13*s23 - 463*s23^2) + 2*s12*
                s13^4*(837*s13^2 + 47*s13*s23 - 210*s23^2) + 2*s12^5*
                (315*s13^2 + 83*s13*s23 - 20*s23^2) + 40*s13^5*(27*s13^2 + 
                 26*s13*s23 - s23^2) - s12^4*s13*(1386*s13^2 + 23*s13*s23 + 
                 420*s23^2) + s12^2*s13^3*(1458*s13^2 + 877*s13*s23 + 
                 926*s23^2))) - p1q^4*s23^3*
            (p2q^2*(10*s12^7*(27*s13 - 4*s23) + 5*s12^6*(99*s13^2 - 
                 70*s13*s23 - 54*s23^2) + s12^2*s13^3*(4221*s13^3 + 
                 2410*s13^2*s23 + 2039*s13*s23^2 - 782*s23^3) + 2*s12^3*s13^2*
                (576*s13^3 + 728*s13^2*s23 + 1361*s13*s23^2 - 391*s23^3) + 10*
                s13^5*(162*s13^3 + 150*s13^2*s23 - 35*s13*s23^2 - 23*s23^3) - 
               2*s12^5*(558*s13^3 + 469*s13^2*s23 + 218*s13*s23^2 + 
                 115*s23^3) + 2*s12*s13^4*(1323*s13^3 - 257*s13^2*s23 - 
                 598*s13*s23^2 + 147*s23^3) + s12^4*s13*(-3384*s13^3 + 
                 292*s13^2*s23 - 5*s13*s23^2 + 294*s23^3)) + 
             2*p2q*p3q*(405*s12^8 + s12^7*(774*s13 + 325*s23) + s12^6*
                (666*s13^2 - 711*s13*s23 - 310*s23^2) + s12^2*s13^3*
                (666*s13^3 - 677*s13^2*s23 + 1017*s13*s23^2 - 782*s23^3) + 
               s12^3*s13^2*(198*s13^3 + 2467*s13^2*s23 + 2722*s13*s23^2 - 
                 782*s23^3) + s12^5*(198*s13^3 - 677*s13^2*s23 - 
                 816*s13*s23^2 - 230*s23^3) + 5*s13^5*(81*s13^3 + 
                 65*s13^2*s23 - 62*s13*s23^2 - 46*s23^3) + 3*s12*s13^4*
                (258*s13^3 - 237*s13^2*s23 - 272*s13*s23^2 + 98*s23^3) + 
               s12^4*s13*(-198*s13^3 + 2467*s13^2*s23 + 1017*s13*s23^2 + 
                 294*s23^3)) + p3q^2*(1620*s12^8 + 6*s12^7*(441*s13 + 
                 250*s23) + s12^6*(4221*s13^2 - 514*s13*s23 - 350*s23^2) - 10*
                s13^5*s23*(4*s13^2 + 27*s13*s23 + 23*s23^2) + s12^2*s13^3*
                (495*s13^3 - 938*s13^2*s23 - 5*s13*s23^2 - 782*s23^3) + 2*
                s12^3*s13^2*(-558*s13^3 + 146*s13^2*s23 + 1361*s13*s23^2 - 
                 391*s23^3) + 2*s12^5*(576*s13^3 + 1205*s13^2*s23 - 
                 598*s13*s23^2 - 115*s23^3) + 2*s12*s13^4*(135*s13^3 - 
                 175*s13^2*s23 - 218*s13*s23^2 + 147*s23^3) + s12^4*s13*
                (-3384*s13^3 + 1456*s13^2*s23 + 2039*s13*s23^2 + 
                 294*s23^3))) + p1q*(p2q + p3q)^2*
            (-(p2q^2*p3q*s13*(-460*s12^8*s23^2 + 770*s13^7*s23^2*
                 (s13 + s23) - 2*s12*s13^6*s23^2*(86*s13 + 451*s23) + 
                s12^2*s13^5*s23^2*(1331*s13 + 2686*s23) + s12^5*s13^2*
                 (2160*s13^3 + 15876*s13^2*s23 + 8881*s13*s23^2 - 
                  842*s23^3) + 4*s12^7*(360*s13^3 + 279*s13^2*s23 + 
                  62*s13*s23^2 - 115*s23^3) + 4*s12^6*s13*(900*s13^3 + 
                  2205*s13^2*s23 + 482*s13*s23^2 + 157*s23^3) + s12^3*s13^4*
                 (-720*s13^3 + 1584*s13^2*s23 + 6307*s13*s23^2 + 
                  1326*s23^3) + s12^4*s13^3*(-720*s13^3 + 9756*s13^2*s23 + 
                  11695*s13*s23^2 + 1842*s23^3))) - p2q^3*s13^2*
              (-310*s12^7*s23^2 + 1040*s13^6*s23^2*(s13 + s23) + 2*s12*s13^5*
                s23^2*(657*s13 + 157*s23) + s12^2*s13^4*s23^2*(2699*s13 + 
                 2918*s23) + s12^5*s13*(-2160*s13^3 + 3996*s13^2*s23 + 
                 1187*s13*s23^2 - 766*s23^3) - 2*s12^6*(360*s13^3 - 
                 882*s13^2*s23 + 558*s13*s23^2 + 155*s23^3) + s12^4*s13^2*
                (-2160*s13^3 + 2700*s13^2*s23 + 5153*s13*s23^2 + 722*s23^3) + 
               s12^3*s13^3*(-720*s13^3 + 468*s13^2*s23 + 5585*s13*s23^2 + 
                 2554*s23^3)) - p2q*p3q^2*s12*(770*s12^8*s23^2 - 460*s13^7*
                s23^2*(s13 + s23) + 4*s12*s13^6*s23^2*(62*s13 + 157*s23) + 2*
                s12^2*s13^5*s23*(558*s13^2 + 964*s13*s23 - 421*s23^2) + s12^6*
                s13*(-720*s13^3 + 1584*s13^2*s23 + 1331*s13*s23^2 - 
                 902*s23^3) - 2*s12^7*(360*s13^3 + 86*s13*s23^2 - 
                 385*s23^3) + s12^4*s13^3*(3600*s13^3 + 15876*s13^2*s23 + 
                 11695*s13*s23^2 + 1326*s23^3) + s12^3*s13^4*(1440*s13^3 + 
                 8820*s13^2*s23 + 8881*s13*s23^2 + 1842*s23^3) + s12^5*s13^2*
                (2160*s13^3 + 9756*s13^2*s23 + 6307*s13*s23^2 + 
                 2686*s23^3)) - p3q^3*s12^2*(1040*s12^7*s23^2 - 310*s13^6*
                s23^2*(s13 + s23) - 2*s12*s13^5*s23^2*(558*s13 + 383*s23) + 
               s12^2*s13^4*s23*(1764*s13^2 + 1187*s13*s23 + 722*s23^2) + 
               s12^5*s13*(-2160*s13^3 + 468*s13^2*s23 + 2699*s13*s23^2 + 
                 314*s23^3) + s12^6*(-720*s13^3 + 1314*s13*s23^2 + 
                 1040*s23^3) + s12^3*s13^3*(-720*s13^3 + 3996*s13^2*s23 + 
                 5153*s13*s23^2 + 2554*s23^3) + s12^4*s13^2*(-2160*s13^3 + 
                 2700*s13^2*s23 + 5585*s13*s23^2 + 2918*s23^3))) - 
           p1q^3*s23^2*(p2q^3*(s12^7*(351*s13^2 + 80*s13*s23 + 230*s23^2) - 
               s12^2*s13^4*(3996*s13^3 + 1613*s13^2*s23 + 617*s13*s23^2 - 
                 2898*s23^3) - s12^3*s13^3*(3087*s13^3 + 2333*s13^2*s23 + 
                 573*s13*s23^2 - 2678*s23^3) - 120*s13^6*(9*s13^3 + 
                 8*s13^2*s23 - 9*s13*s23^2 - 8*s23^3) + s12^5*s13*
                (3942*s13^3 + 3643*s13^2*s23 + 1075*s13*s23^2 + 126*s23^3) + 
               s12^6*(1800*s13^3 + 1795*s13^2*s23 + 396*s13*s23^2 + 
                 230*s23^3) + s12^4*s13^2*(2628*s13^3 + 1030*s13^2*s23 + 
                 699*s13*s23^2 + 278*s23^3) - 2*s12*s13^5*(927*s13^3 - 
                 403*s13^2*s23 - 737*s13*s23^2 + 353*s23^3)) + 
             p3q^3*(-1080*s12^9 + 230*s13^6*s23^2*(s13 + s23) - 6*s12^8*
                (309*s13 + 160*s23) + 2*s12*s13^5*s23*(40*s13^2 + 
                 198*s13*s23 + 63*s23^2) + s12^7*(-3996*s13^2 + 806*s13*s23 + 
                 1080*s23^2) + s12^5*s13*(2628*s13^3 - 2333*s13^2*s23 - 
                 617*s13*s23^2 - 706*s23^3) + s12^2*s13^4*(351*s13^3 + 
                 1795*s13^2*s23 + 1075*s13*s23^2 + 278*s23^3) + s12^6*
                (-3087*s13^3 - 1613*s13^2*s23 + 1474*s13*s23^2 + 960*s23^3) + 
               s12^3*s13^3*(1800*s13^3 + 3643*s13^2*s23 + 699*s13*s23^2 + 
                 2678*s23^3) + s12^4*s13^2*(3942*s13^3 + 1030*s13^2*s23 - 
                 573*s13*s23^2 + 2898*s23^3)) + p2q^2*p3q*(20*s12^8*
                (27*s13 + 4*s23) + 4*s12^7*(279*s13^2 + 425*s13*s23 + 
                 375*s23^2) + 2*s12*s13^5*(-144*s13^3 + 1591*s13^2*s23 + 
                 1422*s13*s23^2 - 643*s23^3) + s12^5*s13*(-4140*s13^3 + 
                 997*s13^2*s23 + 283*s13*s23^2 - 454*s23^3) + 10*s13^6*
                (-81*s13^3 - 61*s13^2*s23 + 235*s13*s23^2 + 215*s23^3) + 
               s12^6*(153*s13^3 + 2750*s13^2*s23 + 1766*s13*s23^2 + 
                 1420*s23^3) + s12^4*s13^2*(-2358*s13^3 - 5540*s13^2*s23 + 
                 3183*s13*s23^2 + 3454*s23^3) + s12^2*s13^4*(-333*s13^3 + 
                 1484*s13^2*s23 - 1409*s13*s23^2 + 6074*s23^3) + s12^3*s13^3*
                (504*s13^3 - 1883*s13^2*s23 + 1911*s13*s23^2 + 8034*s23^3)) + 
             p2q*p3q^2*(-810*s12^9 - 2*s12^8*(144*s13 + 305*s23) + 20*s13^6*
                s23*(4*s13^2 + 75*s13*s23 + 71*s23^2) + s12^7*(-333*s13^2 + 
                 3182*s13*s23 + 2350*s23^2) + 2*s12*s13^5*(270*s13^3 + 
                 850*s13^2*s23 + 883*s13*s23^2 - 227*s23^3) + 2*s12^6*
                (252*s13^3 + 742*s13^2*s23 + 1422*s13*s23^2 + 1075*s23^3) - 
               s12^5*s13*(2358*s13^3 + 1883*s13^2*s23 + 1409*s13*s23^2 + 
                 1286*s23^3) + s12^2*s13^4*(1116*s13^3 + 2750*s13^2*s23 + 
                 283*s13*s23^2 + 3454*s23^3) + s12^4*s13^2*(-4140*s13^3 - 
                 5540*s13^2*s23 + 1911*s13*s23^2 + 6074*s23^3) + s12^3*s13^3*
                (153*s13^3 + 997*s13^2*s23 + 3183*s13*s23^2 + 8034*s23^3))) + 
           p1q^2*(p2q + p3q)*s23*(p2q^3*s13*(5*s12^7*(297*s13^2 + 8*s13*s23 + 
                 38*s23^2) + s12^5*s13*(1890*s13^3 + 7237*s13^2*s23 + 
                 2082*s13*s23^2 - 654*s23^3) + 2*s12*s13^5*(-243*s13^3 + 
                 162*s13^2*s23 + 763*s13*s23^2 - 157*s23^3) + 10*s13^6*
                (-27*s13^3 - 23*s13^2*s23 + 154*s13*s23^2 + 150*s23^3) + 
               s12^6*(3339*s13^3 + 4041*s13^2*s23 - 504*s13*s23^2 + 
                 190*s23^3) + s12^4*s13^2*(-1386*s13^3 + 2821*s13^2*s23 + 
                 4827*s13*s23^2 + 1366*s23^3) + s12^3*s13^3*(-2457*s13^3 - 
                 1193*s13^2*s23 + 4576*s13*s23^2 + 3730*s23^3) + s12^2*s13^4*
                (-1251*s13^3 - 224*s13^2*s23 + 2187*s13*s23^2 + 
                 4242*s23^3)) + p3q^3*s12*(-270*s12^9 + 190*s13^6*s23^2*
                (s13 + s23) - 2*s12^8*(243*s13 + 115*s23) + 2*s12*s13^5*s23*
                (20*s13^2 - 252*s13*s23 - 327*s23^2) + s12^7*(-1251*s13^2 + 
                 324*s13*s23 + 1540*s23^2) - s12^5*s13*(1386*s13^3 + 
                 1193*s13^2*s23 - 2187*s13*s23^2 + 314*s23^3) + s12^2*s13^4*
                (1485*s13^3 + 4041*s13^2*s23 + 2082*s13*s23^2 + 1366*s23^3) + 
               s12^6*(-2457*s13^3 - 224*s13^2*s23 + 1526*s13*s23^2 + 
                 1500*s23^3) + s12^3*s13^3*(3339*s13^3 + 7237*s13^2*s23 + 
                 4827*s13*s23^2 + 3730*s23^3) + s12^4*s13^2*(1890*s13^3 + 
                 2821*s13^2*s23 + 4576*s13*s23^2 + 4242*s23^3)) + 
             p2q*p3q^2*(730*s13^7*s23^2*(s13 + s23) + 10*s12^9*(81*s13 + 
                 4*s23) + 2*s12*s13^6*s23*(-40*s13^2 + 289*s13*s23 + 
                 4*s23^2) + 10*s12^8*(162*s13^2 + 127*s13*s23 + 227*s23^2) + 
               s12^6*s13*(-819*s13^3 + 2054*s13^2*s23 + 2355*s13*s23^2 - 
                 496*s23^3) + s12^2*s13^5*(-729*s13^3 - 1445*s13^2*s23 + 
                 312*s13*s23^2 + 2006*s23^3) + s12^7*(2025*s13^3 + 
                 217*s13^2*s23 + 1914*s13*s23^2 + 2230*s23^3) + s12^3*s13^4*
                (-873*s13^3 + 4966*s13^2*s23 + 10708*s13*s23^2 + 
                 5346*s23^3) + s12^5*s13^2*(-4698*s13^3 + 10337*s13^2*s23 + 
                 11906*s13*s23^2 + 6902*s23^3) + s12^4*s13^3*(-2808*s13^3 + 
                 13601*s13^2*s23 + 18467*s13*s23^2 + 7710*s23^3)) + 
             p2q^2*p3q*(10*s13^7*s23*(4*s13^2 + 227*s13*s23 + 223*s23^2) + 
               s12^8*(-729*s13^2 - 80*s13*s23 + 730*s23^2) + 2*s12*s13^6*
                (405*s13^3 + 635*s13^2*s23 + 957*s13*s23^2 - 248*s23^3) + 
               s12^7*(-873*s13^3 - 1445*s13^2*s23 + 578*s13*s23^2 + 
                 730*s23^3) + s12^5*s13^2*(-4698*s13^3 + 13601*s13^2*s23 + 
                 10708*s13*s23^2 + 2006*s23^3) + s12^4*s13^3*(-819*s13^3 + 
                 10337*s13^2*s23 + 18467*s13*s23^2 + 5346*s23^3) + s12^2*
                s13^5*(1620*s13^3 + 217*s13^2*s23 + 2355*s13*s23^2 + 
                 6902*s23^3) + s12^3*s13^4*(2025*s13^3 + 2054*s13^2*s23 + 
                 11906*s13*s23^2 + 7710*s23^3) + s12^6*(-2808*s13^4 + 
                 4966*s13^3*s23 + 312*s13^2*s23^2 + 8*s13*s23^3))))/
          (36*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)*s23^2*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))) - 
         (ep*(9*p1q^5*(5*s12^4 + 4*s12^3*s13 + 4*s12*s13^3 + 5*s13^4)*s23^4*
             (s12 + s13 + s23) + 9*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
             (s12 + s13 + s23)*(p3q*s12*(5*s12^4*s23 - 6*s12^3*s13*s23 + 
                6*s12*s13^3*s23 - 5*s13^4*s23 + 4*s12^2*s13^2*(2*s13 + 
                  s23)) + p2q*s13*(-5*s12^4*s23 + 4*s12^2*s13^2*s23 - 
                6*s12*s13^3*s23 + 5*s13^4*s23 + 2*s12^3*s13*(4*s13 + 
                  3*s23))) + p1q^4*s23^3*(p3q*(-135*s12^6 + 10*s13^4*s23*
                 (s13 + s23) - s12^5*(143*s13 + 125*s23) + s12^2*s13^2*
                 (175*s13^2 - 154*s13*s23 + 4*s23^2) + 2*s12^4*(146*s13^2 + 
                  26*s13*s23 + 5*s23^2) + 5*s12*s13^3*(-7*s13^2 + 5*s13*s23 + 
                  12*s23^2) + 2*s12^3*s13*(255*s13^2 - 32*s13*s23 + 
                  30*s23^2)) + p2q*(-5*s12^5*(7*s13 - 2*s23) - 5*s13^4*
                 (27*s13^2 + 25*s13*s23 - 2*s23^2) + 4*s12^2*s13^2*
                 (73*s13^2 - 16*s13*s23 + s23^2) + 5*s12^4*(35*s13^2 + 
                  5*s13*s23 + 2*s23^2) + 2*s12^3*s13*(255*s13^2 - 
                  77*s13*s23 + 30*s23^2) + s12*s13^3*(-143*s13^2 + 
                  52*s13*s23 + 60*s23^2))) - p1q^3*s23^2*
             (p2q^2*(s12^5*(-16*s13^2 + 10*s13*s23 + 35*s23^2) + 
                s12*s13^3*(-43*s13^3 + 202*s13^2*s23 + 131*s13*s23^2 - 
                  24*s23^3) + s12^3*s13*(1137*s13^3 - 782*s13^2*s23 + 
                  184*s13*s23^2 - 24*s23^3) + s12^2*s13^2*(611*s13^3 - 
                  555*s13^2*s23 + 72*s13*s23^2 - 4*s23^3) + 5*s13^4*
                 (-27*s13^3 - 23*s13^2*s23 + 11*s13*s23^2 + 7*s23^3) + 
                s12^4*(602*s13^3 - 242*s13^2*s23 + 31*s13*s23^2 + 
                  35*s23^3)) + 2*p2q*p3q*(5*s12^6*(11*s13 + 2*s23) + 
                5*s13^4*s23*(2*s13^2 + 9*s13*s23 + 7*s23^2) + 
                s12^5*(356*s13^2 + 115*s13*s23 + 45*s23^2) + s12*s13^3*
                 (55*s13^3 + 115*s13^2*s23 + 81*s13*s23^2 - 24*s23^3) + 
                s12^3*s13*(991*s13^3 - 710*s13^2*s23 + 128*s13*s23^2 - 
                  24*s23^3) + s12^2*s13^2*(356*s13^3 - 349*s13^2*s23 + 
                  128*s13*s23^2 - 4*s23^3) + s12^4*(991*s13^3 - 349*s13^2*
                   s23 + 81*s13*s23^2 + 35*s23^3)) + p3q^2*(-135*s12^7 + 
                35*s13^4*s23^2*(s13 + s23) - s12^6*(43*s13 + 115*s23) + 
                s12*s13^3*s23*(10*s13^2 + 31*s13*s23 - 24*s23^2) + 
                s12^5*(611*s13^2 + 202*s13*s23 + 55*s23^2) + 2*s12^3*s13*
                 (301*s13^3 - 391*s13^2*s23 + 36*s13*s23^2 - 12*s23^3) - 
                2*s12^2*s13^2*(8*s13^3 + 121*s13^2*s23 - 92*s13*s23^2 + 
                  2*s23^3) + s12^4*(1137*s13^3 - 555*s13^2*s23 + 131*s13*
                   s23^2 + 35*s23^3))) + p1q*(p2q + p3q)^2*
             (-2*p2q*p3q*s12*s13*(5*s12^5*(2*s13 - 7*s23)*s23 - 
                35*s13^4*s23^2*(s13 + s23) + s12*s13^3*s23*(10*s13^2 - 
                  11*s13*s23 + 24*s23^2) + 2*s12^2*s13^2*s23*(209*s13^2 + 
                  40*s13*s23 + 38*s23^2) + s12^4*(72*s13^3 + 418*s13^2*s23 - 
                  11*s13*s23^2 - 35*s23^3) + 8*s12^3*s13*(9*s13^3 + 
                  111*s13^2*s23 + 10*s13*s23^2 + 3*s23^3)) + p3q^2*s12^2*(
                5*s12^5*(2*s13 - 25*s23)*s23 + 55*s13^4*s23^2*(s13 + s23) + 
                s12*s13^3*s23*(10*s13^2 - 29*s13*s23 - 84*s23^2) + 
                2*s12^2*s13^2*s23*(101*s13^2 - 194*s13*s23 - 34*s23^2) + 
                s12^4*(72*s13^3 + 346*s13^2*s23 + 7*s13*s23^2 - 125*s23^3) + 
                4*s12^3*s13*(18*s13^3 + 150*s13^2*s23 - 7*s13*s23^2 + 
                  33*s23^3)) + p2q^2*s13^2*(-125*s13^4*s23^2*(s13 + s23) + 
                5*s12^5*s23*(2*s13 + 11*s23) + 2*s12^2*s13^2*s23*(173*s13^2 - 
                  14*s13*s23 - 34*s23^2) + s12*s13^3*s23*(10*s13^2 + 
                  7*s13*s23 + 132*s23^2) + 4*s12^3*s13*(18*s13^3 + 
                  150*s13^2*s23 - 97*s13*s23^2 - 21*s23^3) + 
                s12^4*(72*s13^3 + 202*s13^2*s23 - 29*s13*s23^2 + 
                  55*s23^3))) + p1q^2*s23*(p2q^3*s13*(s12^5*(136*s13^2 - 
                  10*s13*s23 + 25*s23^2) + s12*s13^3*(19*s13^3 + 104*s13^2*
                   s23 + 73*s13*s23^2 - 102*s23^3) - 5*s13^4*(9*s13^3 + 
                  7*s13^2*s23 - 25*s13*s23^2 - 23*s23^3) + s12^3*s13*
                 (357*s13^3 - 1498*s13^2*s23 + 350*s13*s23^2 + 6*s23^3) + 
                s12^4*(274*s13^3 - 424*s13^2*s23 + 41*s13*s23^2 + 25*s23^3) + 
                s12^2*s13^2*(283*s13^3 - 837*s13^2*s23 + 114*s13*s23^2 + 
                  28*s23^3)) + p2q^2*p3q*(10*s13^5*s23*(s13^2 + 24*s13*s23 + 
                  23*s23^2) + s12^6*(-236*s13^2 - 40*s13*s23 + 115*s23^2) + 
                s12*s13^4*(145*s13^3 + 145*s13^2*s23 + 91*s13*s23^2 - 
                  179*s23^3) + s12^3*s13^2*(-515*s13^3 - 3307*s13^2*s23 + 
                  922*s13*s23^2 + 40*s23^3) - s12^4*s13*(989*s13^3 + 
                  2206*s13^2*s23 - 62*s13*s23^2 + 52*s23^3) + s12^2*s13^3*
                 (137*s13^3 - 1896*s13^2*s23 + 135*s13*s23^2 + 62*s23^3) + 
                s12^5*(-718*s13^3 - 1078*s13^2*s23 + 43*s13*s23^2 + 
                  115*s23^3)) + p3q^3*s12*(-45*s12^7 + s12^6*(19*s13 - 
                  35*s23) + 25*s13^4*s23^2*(s13 + s23) + s12*s13^3*s23*
                 (-10*s13^2 + 41*s13*s23 + 6*s23^2) + s12^5*(283*s13^2 + 
                  104*s13*s23 + 125*s23^2) + 2*s12^3*s13*(137*s13^3 - 
                  749*s13^2*s23 + 57*s13*s23^2 - 51*s23^3) + 2*s12^2*s13^2*
                 (68*s13^3 - 212*s13^2*s23 + 175*s13*s23^2 + 14*s23^3) + 
                s12^4*(357*s13^3 - 837*s13^2*s23 + 73*s13*s23^2 + 
                  115*s23^3)) + p2q*p3q^2*(115*s13^5*s23^2*(s13 + s23) + 
                5*s12^7*(29*s13 + 2*s23) + s12*s13^4*s23*(-40*s13^2 + 
                  43*s13*s23 - 52*s23^2) + s12^6*(137*s13^2 + 145*s13*s23 + 
                  240*s23^2) + 2*s12^2*s13^3*(-118*s13^3 - 539*s13^2*s23 + 
                  31*s13*s23^2 + 20*s23^3) - s12^4*s13*(989*s13^3 + 
                  3307*s13^2*s23 - 135*s13*s23^2 + 179*s23^3) + 
                s12^5*(-515*s13^3 - 1896*s13^2*s23 + 91*s13*s23^2 + 
                  230*s23^3) + s12^3*(-718*s13^5 - 2206*s13^4*s23 + 
                  922*s13^3*s23^2 + 62*s13^2*s23^3)))))/(18*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12^3*s13^3*s23^2*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
         (9*(-2*p2q^2*s13*(s12 + s13)*(4*s12^3 + s13*s23*(s13 + s23) + 
              s12^2*(8*s13 + 7*s23) + s12*(4*s13^2 + 8*s13*s23 + 3*s23^2)) + 
            p1q*p2q*s23*(s12^3*(6*s13 + s23) + 5*s12*s13^2*(2*s13 + 3*s23) + 
              s13^2*(2*s13^2 + 3*s13*s23 + 4*s23^2) + s12^2*(14*s13^2 + 
                13*s13*s23 + 4*s23^2)) - 2*p2q*p3q*(s12 + s13)*
             (s13^2*s23*(s13 + s23) + s12^3*(8*s13 + s23) + s12^2*(16*s13^2 + 
                15*s13*s23 + s23^2) + s12*s13*(8*s13^2 + 15*s13*s23 + 
                6*s23^2)) + p3q*(-2*p3q*s12*(s12 + s13)*(s12^2*(4*s13 + 
                  s23) + s12*(8*s13^2 + 8*s13*s23 + s23^2) + 
                s13*(4*s13^2 + 7*s13*s23 + 3*s23^2)) + p1q*s23*(2*s12^4 + 
                s12^3*(10*s13 + 3*s23) + s13^2*s23*(s13 + 4*s23) + 
                s12*s13^2*(6*s13 + 13*s23) + s12^2*(14*s13^2 + 15*s13*s23 + 
                  4*s23^2))))*den[-3 + 2*ep])/(4*p1q*(p2q + p3q)*s12*s13*
           (s12 + s13)^2*s23^2))*p2 . E0*p2 . E0conj + 
       p1 . E0*((-1/18*(ep^2*(10*s12^5 + 10*s13^3*s23^2 + s12^4*(21*s13 + 
                 20*s23) + s12*s13^2*s23*(29*s13 + 21*s23) + 2*s12^3*
                (24*s13^2 + 21*s13*s23 + 5*s23^2) + s12^2*s13*(37*s13^2 + 
                 69*s13*s23 + 21*s23^2)))/(s12^2*s13^2*(s12 + s13)*s23) - 
           ((s12 + s13 + s23)*(180*p1q^6*s12^3*s23^5*(s12 + s13 + s23) + 
              18*(p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*(10*p3q^3*s12^4*
                 (s12 + s13)*s23^2*(s12 + s13 + s23) + p2q*p3q^2*s12*
                 (s12 + s13)*s23*(10*s12^5 + 27*s12*s13^3*s23 + 10*s13^3*
                   s23^2 + 10*s12^4*(s13 + 2*s23) + s12^2*s13*(17*s13^2 - 
                    10*s13*s23 - 10*s23^2) + s12^3*(-17*s13^2 - 10*s13*s23 + 
                    10*s23^2)) + p2q^3*s13^2*(10*s12^5*s23 + 10*s13^3*
                   (s13 - s23)*s23^2 - s12^2*s13^2*s23*(40*s13 + 27*s23) + 
                  s12*s13^2*s23*(17*s13^2 - 17*s13*s23 - 10*s23^2) + 
                  s12^3*s13*(-98*s13^2 - 65*s13*s23 + 10*s23^2) + 
                  s12^4*(-98*s13^2 + 20*s13*s23 + 10*s23^2)) - p2q^2*p3q*s13*
                 (20*s12^6*s23 + 37*s12*s13^4*s23^2 + 10*s13^4*s23^3 + 
                  s12^2*s13^2*s23*(34*s13^2 + 19*s13*s23 - 10*s23^2) - 
                  2*s12^3*s13*s23*(20*s13^2 + 18*s13*s23 - 5*s23^2) + 
                  s12^5*(-98*s13^2 + 40*s13*s23 + 30*s23^2) + s12^4*
                   (-98*s13^3 - 72*s13^2*s23 + 30*s13*s23^2 + 10*s23^3))) - 
              2*p1q^5*s23^4*(p3q*(360*s12^5 + 243*s12*s13^2*s23^2 + 
                  80*s13^2*s23^3 + 20*s12^4*(18*s13 + 13*s23) + 10*s12^3*
                   (27*s13^2 - 18*s13*s23 - 2*s23^2) + s12^2*(323*s13^2*s23 + 
                    80*s23^3)) + p2q*(90*s12^5 - 243*s12*s13^2*(s13 - s23)*
                   s23 + 10*s13^2*s23^2*(-9*s13 + 8*s23) + 10*s12^4*
                   (27*s13 + 8*s23) + s12^3*(603*s13^2 + 180*s13*s23 + 
                    70*s23^2) + s12^2*(-153*s13^3 + 323*s13^2*s23 + 
                    80*s23^3))) + p1q^4*s23^3*(p3q^2*(1080*s12^6 + 
                  6*s12*s13^2*(81*s13 - s23)*s23^2 + 160*s13^2*(s13 - s23)*
                   s23^3 + 60*s12^5*(18*s13 + 5*s23) + s12^4*(1521*s13^2 - 
                    1280*s13*s23 - 100*s23^2) + 2*s12^2*s23*(323*s13^3 + 
                    406*s13^2*s23 + 80*s13*s23^2 - 80*s23^3) + s12^3*
                   (441*s13^3 + 1119*s13^2*s23 + 500*s13*s23^2 + 
                    520*s23^3)) + 2*p2q*p3q*(270*s12^6 + 20*s12^5*(18*s13 + 
                    7*s23) + s12*s13^2*s23*(-243*s13^2 + 1188*s13*s23 - 
                    166*s23^2) - 10*s13^2*s23^2*(9*s13^2 - 50*s13*s23 + 
                    16*s23^2) + 10*s12^4*(153*s13^2 - 22*s13*s23 + 
                    21*s23^2) + s12^3*(513*s13^3 - 13*s13^2*s23 + 190*s13*
                     s23^2 + 180*s23^3) + s12^2*(-153*s13^4 + 788*s13^3*s23 + 
                    326*s13^2*s23^2 + 320*s13*s23^3 - 160*s23^4)) + 
                p2q^2*(20*s12^5*(9*s13 - s23) + s12^4*(1107*s13^2 + 
                    120*s13*s23 - 20*s23^2) - 40*s13^2*s23^2*(18*s13^2 - 
                    21*s13*s23 + 4*s23^2) - 2*s12*s13^2*s23*(882*s13^2 - 
                    1125*s13*s23 + 163*s23^2) + s12^3*(4077*s13^3 - 
                    119*s13^2*s23 + 240*s13*s23^2 - 160*s23^3) - 2*s12^2*
                   (459*s13^4 - 1473*s13^3*s23 + 80*s13^2*s23^2 - 240*s13*
                     s23^3 + 80*s23^4))) - p1q*(p2q + p3q)*(
                -(p3q^4*s12^2*s23*(180*s12^6 + 20*s12^5*(9*s13 - s23) + 
                   160*s13^3*s23^3 + 2*s12*s13^2*s23^2*(243*s13 + 80*s23) + 
                   2*s12^2*s13*s23*(323*s13^2 + 423*s13*s23 + 260*s23^2) + 
                   s12^4*(441*s13^2 - 560*s13*s23 + 500*s23^2) + 
                   s12^3*(441*s13^3 + 187*s13^2*s23 + 860*s13*s23^2 + 
                     700*s23^3))) - p2q*p3q^3*s12*s23*(-180*s12*s13^3*
                   (2*s13 - 3*s23)*s23^2 + 40*s13^4*s23^3 + s12^6*(-720*s13 + 
                    500*s23) + s12^2*s13^2*s23*(-2219*s13^2 + 1134*s13*s23 + 
                    360*s23^2) + 4*s12^5*(153*s13^2 + 135*s13*s23 + 
                    430*s23^2) + 4*s12^4*(-162*s13^3 + 333*s13^2*s23 + 
                    450*s13*s23^2 + 305*s23^3) + s12^3*s13*(-1980*s13^3 - 
                    477*s13^2*s23 + 1610*s13*s23^2 + 720*s23^3)) + 
                p2q^3*p3q*s13*(320*s12^6*s23^2 + 20*s13^4*(36*s13 - 61*s23)*
                   s23^3 + 18*s12*s13^3*s23^2*(108*s13^2 - 189*s13*s23 - 
                    40*s23^2) + 2*s12^2*s13^2*s23*(531*s13^3 - 2050*s13^2*
                     s23 - 1233*s13*s23^2 - 180*s23^3) - 4*s12^5*(882*s13^3 + 
                    207*s13^2*s23 - 135*s13*s23^2 - 70*s23^3) - s12^3*s13*s23*
                   (6300*s13^3 + 3087*s13^2*s23 - 728*s13*s23^2 + 
                    540*s23^3) - s12^4*(3528*s13^4 + 5958*s13^3*s23 - 
                    1683*s13^2*s23^2 + 360*s13*s23^3 + 40*s23^4)) - 
                p2q^4*s13^2*(-200*s12^5*s23^2 + 20*s13^3*s23^2*(9*s13^2 - 
                    45*s13*s23 + 35*s23^2) - s12^4*(1764*s13^3 - 5103*s13^2*
                     s23 + 560*s13*s23^2 + 40*s23^3) + s12^2*s13*s23*
                   (-1026*s13^3 + 2383*s13^2*s23 + 1458*s13*s23^2 + 
                    160*s23^3) + 2*s12*s13^2*s23*(153*s13^3 - 855*s13^2*s23 + 
                    612*s13*s23^2 + 260*s23^3) + s12^3*(-1764*s13^4 + 
                    4887*s13^3*s23 + 3472*s13^2*s23^2 - 220*s13*s23^3 + 
                    160*s23^4)) - p2q^2*p3q^2*(520*s12^7*s23^2 + 520*s13^5*
                   s23^4 + 6*s12*s13^4*s23^3*(303*s13 + 40*s23) + s12^2*s13^3*
                   s23^2*(2689*s13^2 + 468*s13*s23 + 580*s23^2) + s12^4*s13*
                   s23*(1989*s13^3 + 166*s13^2*s23 + 984*s13*s23^2 + 
                    240*s23^3) + s12^3*s13^2*s23*(2295*s13^3 + 780*s13^2*
                     s23 + 788*s13*s23^2 + 580*s23^3) + s12^6*(-1764*s13^3 + 
                    1665*s13^2*s23 + 600*s13*s23^2 + 1040*s23^3) + 
                  s12^5*(-1764*s13^4 + 2475*s13^3*s23 + 571*s13^2*s23^2 + 
                    300*s13*s23^3 + 520*s23^4))) + p1q^3*s23^2*(
                p3q^3*(-720*s12^7 - 60*s12^6*(12*s13 - 7*s23) + 160*s13^3*
                   s23^4 + 2*s12*s13^2*s23^3*(83*s13 + 240*s23) + 
                  s12^5*(-1422*s13^2 + 1660*s13*s23 + 60*s23^2) + 2*s12^2*s13*
                   s23^2*(-163*s13^2 + 489*s13*s23 + 80*s23^2) - 3*s12^4*
                   (294*s13^3 - 47*s13^2*s23 + 520*s13*s23^2 + 140*s23^3) + 
                  s12^3*s23*(-851*s13^3 + 21*s13^2*s23 - 180*s13*s23^2 + 
                    660*s23^3)) + p2q^3*(60*s13^3*s23^2*(18*s13^2 - 
                    29*s13*s23 + 11*s23^2) + s12^5*(261*s13^2 + 40*s13*s23 + 
                    160*s23^2) + 4*s12*s13^2*s23*(594*s13^3 - 1035*s13^2*
                     s23 + 316*s13*s23^2 + 40*s23^3) + s12^4*(-2916*s13^3 + 
                    1329*s13^2*s23 + 200*s13*s23^2 + 320*s23^3) + 3*s12^2*s13*
                   (306*s13^4 - 1660*s13^3*s23 + 421*s13^2*s23^2 + 
                    2*s13*s23^3 + 160*s23^4) + s12^3*(-6939*s13^4 + 
                    1957*s13^3*s23 + 748*s13^2*s23^2 + 460*s13*s23^3 + 
                    160*s23^4)) + p2q^2*p3q*(40*s12^6*(9*s13 + s23) + 
                  20*s13^3*s23^2*(27*s13^2 - 121*s13*s23 + 74*s23^2) + 
                  s12^5*(-972*s13^2 + 440*s13*s23 + 340*s23^2) + 2*s12*s13^2*
                   s23*(639*s13^3 - 2862*s13^2*s23 + 1147*s13*s23^2 + 
                    400*s23^3) + s12^4*(-6534*s13^3 + 3623*s13^2*s23 + 
                    20*s13*s23^2 + 1280*s23^3) + 2*s12^2*s13*(306*s13^4 - 
                    2011*s13^3*s23 + 272*s13^2*s23^2 + 655*s13*s23^3 + 
                    560*s23^4) + s12^3*(-3258*s13^4 + 1619*s13^3*s23 + 
                    1117*s13^2*s23^2 + 340*s13*s23^3 + 980*s23^4)) + 
                p2q*p3q^2*(-540*s12^7 + 20*s12^6*(9*s13 + 5*s23) + 
                  20*s13^3*s23^3*(-34*s13 + 49*s23) + s12^5*(-2421*s13^2 + 
                    1340*s13*s23 - 300*s23^2) - 4*s12*s13^2*s23^2*
                   (396*s13^2 - 299*s13*s23 - 280*s23^2) + s12^4*
                   (-450*s13^3 + 2687*s13^2*s23 - 1740*s13*s23^2 + 
                    540*s23^3) + s12^2*s13*s23*(-770*s13^3 - 865*s13^2*s23 + 
                    2282*s13*s23^2 + 800*s23^3) + s12^3*(-189*s13^4 + 
                    773*s13^3*s23 + 210*s13^2*s23^2 - 300*s13*s23^3 + 
                    1480*s23^4))) - p1q^2*s23*(p3q^4*s12*(-180*s12^7 - 
                  20*s12^6*(9*s13 - 28*s23) + 320*s13^3*s23^4 + 4*s12*s13^2*
                   s23^3*(203*s13 + 120*s23) + s12^5*(-441*s13^2 + 920*s13*
                     s23 - 20*s23^2) + 2*s12^2*s13*s23^2*(403*s13^2 + 
                    739*s13*s23 + 250*s23^2) + s12^4*(-441*s13^3 + 1055*s13^2*
                     s23 - 1620*s13*s23^2 + 260*s23^3) + 2*s12^3*s23*
                   (118*s13^3 + 267*s13^2*s23 + 240*s13*s23^2 + 510*s23^3)) + 
                p2q^4*s13*(20*s13^3*s23^2*(36*s13^2 - 89*s13*s23 + 
                    51*s23^2) + s12^5*(747*s13^2 + 20*s13*s23 + 140*s23^2) + 
                  4*s12*s13^2*s23*(351*s13^3 - 945*s13^2*s23 + 464*s13*
                     s23^2 + 125*s23^3) + s12^4*(-3771*s13^3 + 4952*s13^2*
                     s23 - 20*s13*s23^2 + 460*s23^3) + 2*s12^2*s13*
                   (153*s13^4 - 1853*s13^3*s23 + 1383*s13^2*s23^2 + 
                    649*s13*s23^3 + 240*s23^4) + s12^3*(-5652*s13^4 + 
                    4781*s13^3*s23 + 3150*s13^2*s23^2 + 260*s13*s23^3 + 
                    320*s23^4)) + p2q^3*p3q*(20*s13^4*s23^2*(27*s13^2 - 
                    142*s13*s23 + 127*s23^2) + s12^6*(-459*s13^2 - 
                    40*s13*s23 + 500*s23^2) + 6*s12*s13^3*s23*(183*s13^3 - 
                    1146*s13^2*s23 + 855*s13*s23^2 + 310*s23^3) + 
                  s12^5*(-1584*s13^3 + 774*s13^2*s23 + 880*s13*s23^2 + 
                    1000*s23^3) + s12^4*(-3087*s13^4 + 11304*s13^3*s23 + 
                    25*s13^2*s23^2 + 1880*s13*s23^3 + 500*s23^4) + 
                  2*s12^3*s13*(-2268*s13^4 + 4608*s13^3*s23 + 3481*s13^2*
                     s23^2 + 785*s13*s23^3 + 750*s23^4) + s12^2*s13^2*
                   (306*s13^4 - 5180*s13^3*s23 + 5321*s13^2*s23^2 + 
                    4626*s13*s23^3 + 1600*s23^4)) + p2q*p3q^3*(-180*s12^8 + 
                  500*s13^4*s23^4 + 40*s12^7*(9*s13 + 10*s23) + 2*s12*s13^3*
                   s23^3*(529*s13 + 750*s23) - 7*s12^6*(81*s13^2 - 
                    40*s23^2) + s12^2*s13^2*s23^2*(725*s13^2 + 3294*s13*s23 + 
                    1600*s23^2) + 4*s12^5*(162*s13^3 + 747*s13^2*s23 - 
                    435*s13*s23^2 + 560*s23^3) + 2*s12^3*s13*s23*
                   (1042*s13^3 + 417*s13^2*s23 + 2183*s13*s23^2 + 
                    930*s23^3) + s12^4*(1755*s13^4 + 1764*s13^3*s23 + 
                    1781*s13^2*s23^2 + 2280*s13*s23^3 + 2540*s23^4)) + 
                p2q^2*p3q^2*(20*s12^7*(27*s13 + s23) + 20*s13^4*s23^3*
                   (-53*s13 + 101*s23) - 5*s12^6*(117*s13^2 + 48*s13*s23 - 
                    196*s23^2) + 4*s12*s13^3*s23^2*(-684*s13^2 + 1083*s13*
                     s23 + 635*s23^2) + 2*s12^2*s13^2*s23*(-953*s13^3 + 
                    1730*s13^2*s23 + 2905*s13*s23^2 + 1120*s23^3) + 
                  s12^5*(-3330*s13^3 + 3461*s13^2*s23 + 980*s13*s23^2 + 
                    2980*s23^3) + s12^4*(-1737*s13^4 + 6944*s13^3*s23 + 
                    1472*s13^2*s23^2 + 3220*s13*s23^3 + 2020*s23^4) + 
                  s12^3*s13*(-972*s13^4 + 4611*s13^3*s23 + 3840*s13^2*s23^2 + 
                    4198*s13*s23^3 + 2540*s23^4)))))/(36*ep*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13^3*s23^2*(-(p2q^3*s13^2*
                (s12 + s13)) - (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - 
                p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))) + 
           (ep*(-90*p1q^6*s12*s23^5*(s12^5 - s12^2*s13^3 - s13^3*s23*
                 (s13 + s23) - s12*s13^3*(s13 + 2*s23) + s12^4*(3*s13 + 
                  2*s23) + s12^3*(2*s13^2 + 3*s13*s23 + s23^2)) + 
              18*(p2q + p3q)^2*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + 
                s23)*(5*p3q^2*s12*s23^2*(s12^4 - s12*s13^3 - s13^3*s23 + 
                  s12^3*(2*s13 + s23)) + p2q*p3q*s23*(5*s12^6 + 5*s12^2*s13^3*
                   (s13 - 2*s23) + s12*s13^3*(11*s13 - 5*s23)*s23 + 
                  5*s13^4*s23^2 + 5*s12^5*(s13 + 2*s23) + 5*s12^4*(-2*s13^2 + 
                    s23^2) - s12^3*s13*(5*s13^2 + 9*s13*s23 + 5*s23^2)) + 
                p2q^2*s13*(-5*s12^5*s23 + 8*s12^2*s13^3*s23 + 5*s13^3*s23^2*
                   (-s13 + s23) + s12*s13^3*s23*(-6*s13 + 11*s23) + 
                  2*s12^4*(4*s13^2 - 2*s13*s23 - 5*s23^2) + s12^3*(8*s13^3 + 
                    15*s13^2*s23 - 4*s13*s23^2 - 5*s23^3))) + 
              p1q^5*s23^4*(p3q*(360*s12^7 + 70*s13^3*s23^3*(s13 + s23) + 
                  10*s12^6*(97*s13 + 61*s23) + 6*s12*s13^3*s23*(-15*s13^2 + 
                    8*s13*s23 + 38*s23^2) + 3*s12^5*(121*s13^2 + 130*s13*
                     s23 + 70*s23^2) - s12^2*s13^3*(90*s13^2 + 23*s13*s23 + 
                    501*s23^2) - 2*s12^4*(372*s13^3 + 622*s13^2*s23 + 
                    255*s13*s23^2 - 15*s23^3) + s12^3*(-587*s13^4 - 
                    1663*s13^3*s23 - 527*s13^2*s23^2 + 70*s13*s23^3 + 
                    70*s23^4)) + p2q*(90*s12^7 + 10*s12^6*(43*s13 + 16*s23) - 
                  6*s12*s13^3*s23*(78*s13^2 + 85*s13*s23 - 23*s23^2) - 
                  10*s13^3*s23^2*(9*s13^2 + 2*s13*s23 - 7*s23^2) + 
                  3*s12^5*(211*s13^2 + 160*s13*s23 + 40*s23^2) - s12^2*s13^3*
                   (360*s13^2 + 491*s13*s23 + 411*s23^2) + 2*s12^4*
                   (33*s13^3 - s13^2*s23 + 105*s13*s23^2 + 60*s23^3) + 
                  s12^3*(-587*s13^4 - 1051*s13^3*s23 - 275*s13^2*s23^2 + 
                    160*s13*s23^3 + 70*s23^4))) + p1q^4*s23^3*(
                p3q^2*(-540*s12^8 - 30*s12^7*(43*s13 + 22*s23) + s12^2*s13^3*
                   s23*(-247*s13^2 + 424*s13*s23 - 915*s23^2) + 
                  s12^6*(29*s13^2 + 630*s13*s23 - 20*s23^2) - 6*s12*s13^3*
                   s23^2*(23*s13^2 + 50*s13*s23 - 3*s23^2) + 70*s13^3*s23^3*
                   (-s13^2 + s23^2) + 3*s12^5*(611*s13^3 + 1277*s13^2*s23 + 
                    360*s13*s23^2 - 50*s23^3) + s12^4*(1299*s13^4 + 
                    4121*s13^3*s23 + 505*s13^2*s23^2 - 840*s13*s23^3 - 
                    180*s23^4) + s12^3*(245*s13^5 - 79*s13^4*s23 + 205*s13^3*
                     s23^2 - 597*s13^2*s23^3 + 70*s23^5)) - 2*p2q*p3q*
                 (135*s12^8 + 5*s12^7*(73*s13 + 37*s23) + s12^6*(-7*s13^2 - 
                    140*s13*s23 + 125*s23^2) - s12^5*(906*s13^3 + 1909*s13^2*
                     s23 + 45*s13*s23^2 - 165*s23^3) + 5*s13^3*s23^2*
                   (-9*s13^3 + 37*s13^2*s23 + 32*s13*s23^2 - 14*s23^3) + 
                  s12*s13^3*s23*(-189*s13^3 + 60*s13^2*s23 + 656*s13*s23^2 + 
                    2*s23^3) + s12^2*s13^3*(-135*s13^3 + 233*s13^2*s23 - 
                    1027*s13*s23^2 + 642*s23^3) + s12^4*(-1141*s13^4 - 
                    3423*s13^3*s23 - 542*s13^2*s23^2 + 440*s13*s23^3 + 
                    20*s23^4) - s12^3*(607*s13^5 + 1417*s13^4*s23 + 
                    582*s13^3*s23^2 - 460*s13^2*s23^3 + 20*s13*s23^4 + 
                    70*s23^5)) + p2q^2*(s12^7*(-70*s13 + 20*s23) - 
                  5*s12^6*(57*s13^2 - 2*s13*s23 - 8*s23^2) + s12^2*s13^3*
                   (540*s13^3 + 375*s13^2*s23 + 1090*s13*s23^2 - 639*s23^3) + 
                  2*s12*s13^3*s23*(486*s13^3 + 441*s13^2*s23 - 506*s13*
                     s23^2 - 11*s23^3) + 10*s13^3*s23^2*(36*s13^3 - 
                    3*s13^2*s23 - 32*s13*s23^2 + 7*s23^3) + s12^5*
                   (-345*s13^3 + 203*s13^2*s23 + 90*s23^3) + s12^4*
                   (245*s13^4 + 1123*s13^3*s23 - 285*s13^2*s23^2 - 
                    40*s13*s23^3 + 140*s23^4) + s12^3*(915*s13^5 + 1725*s13^4*
                     s23 - 175*s13^3*s23^2 - 593*s13^2*s23^3 + 40*s13*s23^4 + 
                    70*s23^5))) + p1q*(p3q^5*s12^2*s23*(-90*s12^8 + 
                  110*s13^4*s23^3*(s13 + s23) - 10*s12^7*(16*s13 + 7*s23) + 
                  5*s12^6*(43*s13^2 + 106*s13*s23 - 42*s23^2) + 2*s12*s13^3*
                   s23^2*(21*s13^2 + 166*s13*s23 + 100*s23^2) + s12^2*s13^3*
                   s23*(-427*s13^2 + 543*s13*s23 + 312*s23^2) + 5*s12^5*
                   (123*s13^3 + 358*s13^2*s23 - 66*s13*s23^2 - 114*s23^3) + 
                  s12^4*(395*s13^4 + 1989*s13^3*s23 - 115*s13^2*s23^2 - 
                    1270*s13*s23^3 - 340*s23^4) + s12^3*s13*(65*s13^4 + 
                    372*s13^3*s23 + 506*s13^2*s23^2 - 610*s13*s23^3 - 
                    250*s23^4)) + p2q*p3q^4*s12*s23*(-90*s12^9 + 60*s12^8*
                   (4*s13 - 5*s23) + 140*s13^5*s23^3*(s13 + s23) + 
                  5*s12^7*(229*s13^2 + 130*s13*s23 - 252*s23^2) + 
                  20*s12*s13^4*s23^2*(12*s13^2 + 31*s13*s23 + 10*s23^2) + 
                  s12^6*(695*s13^3 + 2276*s13^2*s23 - 2460*s13*s23^2 - 
                    1980*s23^3) + 2*s12^2*s13^3*s23*(616*s13^3 + 114*s13^2*
                     s23 + 519*s13*s23^2 + 255*s23^3) + s12^3*s13^2*
                   (50*s13^4 - 1161*s13^3*s23 + 1013*s13^2*s23^2 + 1310*s13*
                     s23^3 + 140*s23^4) - s12^4*s13*(415*s13^4 + 2412*s13^3*
                     s23 - 542*s13^2*s23^2 + 874*s13*s23^3 + 340*s23^4) - 
                  s12^5*(585*s13^4 - 1307*s13^3*s23 + 1683*s13^2*s23^2 + 
                    3210*s13*s23^3 + 930*s23^4)) + p2q^2*p3q^3*
                 (60*s12^9*(7*s13 - 8*s23)*s23 - 250*s13^6*s23^4*(s13 + 
                    s23) - 2*s12*s13^5*s23^3*(357*s13^2 + 272*s13*s23 - 
                    220*s23^2) + 3*s12^8*(48*s13^3 + 151*s13^2*s23 - 
                    170*s13*s23^2 - 600*s23^3) + s12^2*s13^4*s23^2*
                   (-1435*s13^3 - 1131*s13^2*s23 + 972*s13*s23^2 + 
                    210*s23^3) + s12^7*(432*s13^4 - 1297*s13^3*s23 - 
                    904*s13^2*s23^2 - 3150*s13*s23^3 - 2160*s23^4) + 
                  s12^4*s13^2*s23*(-445*s13^4 - 264*s13^3*s23 + 530*s13^2*
                     s23^2 + 2048*s13*s23^3 + 260*s23^4) + s12^3*s13^3*s23*
                   (-403*s13^4 + 1710*s13^3*s23 - 412*s13^2*s23^2 + 
                    1394*s13*s23^3 + 530*s23^4) + s12^6*(432*s13^5 - 
                    1912*s13^4*s23 - 3271*s13^3*s23^2 - 1851*s13^2*s23^3 - 
                    2010*s13*s23^4 - 840*s23^5) + 2*s12^5*s13*(72*s13^5 - 
                    312*s13^4*s23 - 2903*s13^3*s23^2 + 12*s13^2*s23^3 + 
                    243*s13*s23^4 + 105*s23^5)) + p2q^5*s13^2*
                 (10*s12^7*s23*(2*s13 + 11*s23) + s12^2*s13^3*s23*(18*s13^3 + 
                    437*s13^2*s23 - 69*s13*s23^2 - 624*s23^3) + 10*s13^4*
                   s23^2*(-9*s13^3 + 36*s13^2*s23 + 11*s13*s23^2 - 
                    34*s23^3) + s12^6*(144*s13^3 - 235*s13^2*s23 + 314*s13*
                     s23^2 + 330*s23^3) - 2*s12*s13^3*s23*(54*s13^4 - 
                    216*s13^3*s23 - 444*s13^2*s23^2 + 401*s13*s23^3 + 
                    125*s23^4) + s12^5*(432*s13^4 - 573*s13^3*s23 - 
                    262*s13^2*s23^2 + 768*s13*s23^3 + 330*s23^4) + 
                  s12^4*(432*s13^5 - 127*s13^4*s23 - 1161*s13^3*s23^2 + 
                    209*s13^2*s23^3 + 674*s13*s23^4 + 110*s23^5) + 
                  s12^3*s13*(144*s13^5 + 317*s13^4*s23 - 780*s13^3*s23^2 - 
                    826*s13^2*s23^3 + 236*s13*s23^4 + 200*s23^5)) + 
                p2q^3*p3q^2*(10*s12^9*(2*s13 - 25*s23)*s23 + 120*s13^6*s23^3*
                   (3*s13^2 - 4*s13*s23 - 7*s23^2) + s12^8*(144*s13^3 - 
                    517*s13^2*s23 - 490*s13*s23^2 - 750*s23^3) + 6*s12*s13^5*
                   s23^2*(132*s13^3 - 108*s13^2*s23 - 415*s13*s23^2 + 
                    35*s23^3) + s12^7*(144*s13^4 - 1551*s13^3*s23 - 
                    916*s13^2*s23^2 - 600*s13*s23^3 - 750*s23^4) + 
                  s12^2*s13^4*s23*(396*s13^4 - 1983*s13^3*s23 - 3213*s13^2*
                     s23^2 - 100*s13*s23^3 + 260*s23^4) + s12^3*s13^3*s23*
                   (-417*s13^4 - 1002*s13^3*s23 - 1806*s13^2*s23^2 + 
                    1508*s13*s23^3 + 530*s23^4) - 2*s12^5*s13*(360*s13^5 + 
                    1418*s13^4*s23 + 1764*s13^3*s23^2 - 805*s13^2*s23^3 - 
                    742*s13*s23^4 - 220*s23^5) + s12^4*s13^2*(-288*s13^5 - 
                    2607*s13^4*s23 - 292*s13^3*s23^2 + 1284*s13^2*s23^3 + 
                    2358*s13*s23^4 + 210*s23^5) - s12^6*(432*s13^5 + 
                    2056*s13^4*s23 + 2139*s13^3*s23^2 - 875*s13^2*s23^3 - 
                    350*s13*s23^4 + 250*s23^5)) + p2q^4*p3q*s13*
                 (-20*s12^8*(2*s13 - 7*s23)*s23 - 30*s13^5*s23^2*(3*s13^3 - 
                    24*s13^2*s23 + 4*s13*s23^2 + 31*s23^3) + s12^7*
                   (-288*s13^3 - 154*s13^2*s23 + 584*s13*s23^2 + 420*s23^3) + 
                  s12^2*s13^3*s23*(414*s13^4 - 111*s13^3*s23 - 1911*s13^2*
                     s23^2 - 1186*s13*s23^3 + 140*s23^4) - 2*s12*s13^4*s23*
                   (54*s13^4 - 612*s13^3*s23 - 477*s13^2*s23^2 + 1304*s13*
                     s23^3 + 170*s23^4) + s12^6*(-720*s13^4 - 1359*s13^3*
                     s23 + 764*s13^2*s23^2 + 1488*s13*s23^3 + 420*s23^4) + 
                  s12^5*(-432*s13^5 - 3265*s13^4*s23 - 768*s13^3*s23^2 + 
                    2390*s13^2*s23^3 + 1064*s13*s23^4 + 140*s23^5) + 
                  s12^4*s13*(144*s13^5 - 2239*s13^4*s23 - 1923*s13^3*s23^2 + 
                    1433*s13^2*s23^3 + 1982*s13*s23^4 + 200*s23^5) + 
                  s12^3*s13^2*(144*s13^5 + 303*s13^4*s23 - 2260*s13^3*s23^2 - 
                    2034*s13^2*s23^3 + 1056*s13*s23^4 + 510*s23^5))) + 
              p1q^2*s23*(-2*p2q*p3q^3*(45*s12^10 - 65*s12^9*(s13 + s23) - 
                  115*s13^5*s23^4*(s13 + s23) - s12*s13^4*s23^3*(127*s13^2 + 
                    382*s13*s23 + 120*s23^2) - s12^8*(339*s13^2 + 340*s13*
                     s23 + 160*s23^2) + s12^7*(-58*s13^3 + 561*s13^2*s23 + 
                    960*s13*s23^2 - 540*s23^3) + s12^2*s13^3*s23^2*
                   (-340*s13^3 + 318*s13^2*s23 - 136*s13*s23^2 + 35*s23^3) + 
                  s12^6*(355*s13^4 + 2122*s13^3*s23 + 4547*s13^2*s23^2 - 
                    320*s13*s23^3 - 1085*s23^4) + s12^3*s13^2*s23*
                   (-605*s13^4 + 64*s13^3*s23 + 2133*s13^2*s23^2 + 249*s13*
                     s23^3 - 25*s23^4) + s12^5*(123*s13^5 + 2513*s13^4*s23 + 
                    6592*s13^3*s23^2 + 1220*s13^2*s23^3 - 1855*s13*s23^4 - 
                    595*s23^5) + s12^4*s13*(-61*s13^5 + 622*s13^4*s23 + 
                    2157*s13^3*s23^2 + 3056*s13^2*s23^3 - 652*s13*s23^4 - 
                    300*s23^5)) - 2*p2q^3*p3q*(s12^8*(236*s13^2 + 40*s13*
                     s23 - 115*s23^2) + s12^7*(474*s13^3 + 891*s13^2*s23 - 
                    315*s13*s23^2 - 345*s23^3) + 5*s13^5*s23^2*(-27*s13^3 + 
                    113*s13^2*s23 + 21*s13*s23^2 - 119*s23^3) + 
                  s12^6*(103*s13^4 + 1832*s13^3*s23 + 961*s13^2*s23^2 - 
                    870*s13*s23^3 - 345*s23^4) - 3*s12*s13^4*s23*(69*s13^4 - 
                    304*s13^3*s23 - 573*s13^2*s23^2 + 410*s13*s23^3 + 
                    100*s23^4) + s12^5*(104*s13^5 + 711*s13^4*s23 + 
                    3123*s13^3*s23^2 + 121*s13^2*s23^3 - 635*s13*s23^4 - 
                    115*s23^5) + 2*s12^4*s13*(285*s13^5 - 537*s13^4*s23 + 
                    1151*s13^3*s23^2 + 816*s13^2*s23^3 - 75*s13*s23^4 - 
                    60*s23^5) - s12^2*s13^3*(45*s13^5 - 670*s13^4*s23 + 
                    13*s13^3*s23^2 - 1367*s13^2*s23^3 + 554*s13*s23^4 + 
                    25*s23^5) + s12^3*s13^2*(286*s13^5 + 73*s13^4*s23 + 
                    692*s13^3*s23^2 + 1623*s13^2*s23^3 + 129*s13*s23^4 + 
                    35*s23^5)) + p2q^4*s13*(s12^7*(272*s13^2 - 20*s13*s23 + 
                    50*s23^2) + 40*s13^4*s23^2*(9*s13^3 - 13*s13^2*s23 - 
                    10*s13*s23^2 + 12*s23^3) + s12^6*(341*s13^3 + 206*s13^2*
                     s23 + 168*s13*s23^2 + 150*s23^3) + 2*s12*s13^3*s23*
                   (261*s13^4 - 204*s13^3*s23 - 1121*s13^2*s23^2 + 359*s13*
                     s23^3 + 115*s23^4) + s12^5*(-753*s13^4 + 311*s13^3*s23 - 
                    100*s13^2*s23^2 + 336*s13*s23^3 + 150*s23^4) + 
                  s12^2*s13^3*(90*s13^4 - 103*s13^3*s23 - 390*s13^2*s23^2 - 
                    1527*s13*s23^3 + 384*s23^4) + s12^4*(-1351*s13^5 - 
                    571*s13^4*s23 - 513*s13^3*s23^2 + 160*s13^2*s23^3 + 
                    88*s13*s23^4 + 50*s23^5) - s12^3*s13*(439*s13^5 + 
                    1281*s13^4*s23 + 623*s13^3*s23^2 + 241*s13^2*s23^3 - 
                    194*s13*s23^4 + 60*s23^5)) + p3q^4*s12*(-90*s12^9 - 
                  40*s12^8*(4*s13 - 5*s23) + 50*s13^4*s23^4*(s13 + s23) + 
                  2*s12*s13^3*s23^3*(58*s13^2 + 73*s13*s23 - 30*s23^2) + 
                  2*s12^2*s13^3*s23^2*(358*s13^2 - 353*s13*s23 + 37*s23^2) + 
                  5*s12^7*(43*s13^2 + 184*s13*s23 + 54*s23^2) + 
                  s12^6*(615*s13^3 + 913*s13^2*s23 - 1000*s13*s23^2 + 
                    60*s23^3) + s12^3*s13*s23*(-557*s13^4 - 224*s13^3*s23 - 
                    1741*s13^2*s23^2 + 410*s13*s23^3 + 230*s23^4) + 
                  s12^5*(395*s13^4 + 105*s13^3*s23 - 4129*s13^2*s23^2 - 
                    1120*s13*s23^3 + 560*s23^4) + s12^4*(65*s13^5 - 
                    645*s13^4*s23 - 4505*s13^3*s23^2 - 1717*s13^2*s23^3 + 
                    1190*s13*s23^4 + 480*s23^5)) + p2q^2*p3q^2*
                 (10*s12^9*(29*s13 + 2*s23) + 20*s13^5*s23^3*(-26*s13^2 + 
                    21*s13*s23 + 47*s23^2) + s12^8*(-9*s13^2 + 130*s13*s23 + 
                    460*s23^2) + 2*s12*s13^4*s23^2*(-519*s13^3 - 381*s13^2*
                     s23 + 1228*s13*s23^2 + 280*s23^3) + s12^7*(-1863*s13^3 - 
                    3095*s13^2*s23 + 290*s13*s23^2 + 1800*s23^3) + 
                  s12^2*s13^3*s23*(-967*s13^4 + 1438*s13^3*s23 - 1959*s13^2*
                     s23^2 + 850*s13*s23^3 + 40*s23^4) + s12^6*(-2228*s13^4 - 
                    8417*s13^3*s23 - 6533*s13^2*s23^2 + 3530*s13*s23^3 + 
                    2300*s23^4) - s12^5*(630*s13^5 + 7824*s13^4*s23 + 
                    15491*s13^3*s23^2 + 1301*s13^2*s23^3 - 3640*s13*s23^4 - 
                    940*s23^5) - s12^3*s13^2*(277*s13^5 - 2003*s13^4*s23 + 
                    2235*s13^3*s23^2 + 6835*s13^2*s23^3 + 1024*s13*s23^4 - 
                    40*s23^5) + s12^4*s13*(-243*s13^5 + 358*s13^4*s23 - 
                    9603*s13^3*s23^2 - 8065*s13^2*s23^3 + 1106*s13*s23^4 + 
                    560*s23^5))) - p1q^3*s23^2*(p2q^3*(s12^7*(-32*s13^2 + 
                    20*s13*s23 + 70*s23^2) + 60*s13^4*s23^2*(9*s13^3 - 
                    5*s13^2*s23 - 9*s13*s23^2 + 5*s23^3) + 3*s12^6*
                   (72*s13^3 - 13*s13^2*s23 + 90*s13*s23^2 + 70*s23^3) + 
                  3*s12^2*s13^3*(120*s13^4 - 7*s13^3*s23 + 218*s13^2*s23^2 - 
                    631*s13*s23^3 + 16*s23^4) + 2*s12*s13^3*s23*(504*s13^4 + 
                    189*s13^3*s23 - 1159*s13^2*s23^2 + 91*s13*s23^3 + 
                    35*s23^4) + s12^5*(21*s13^4 + 673*s13^3*s23 - 62*s13^2*
                     s23^2 + 600*s13*s23^3 + 210*s23^4) + s12^4*(-464*s13^5 + 
                    909*s13^4*s23 - 939*s13^3*s23^2 + 323*s13^2*s23^3 + 
                    470*s13*s23^4 + 70*s23^5) + s12^3*s13*(123*s13^5 - 
                    146*s13^4*s23 - 1259*s13^3*s23^2 - 960*s13^2*s23^3 + 
                    378*s13*s23^4 + 120*s23^5)) + p3q^3*(-360*s12^9 + 
                  70*s13^4*s23^4*(s13 + s23) - 30*s12^8*(25*s13 + 4*s23) - 
                  2*s12*s13^3*s23^3*(s13^2 - 104*s13*s23 - 60*s23^2) + 
                  s12^2*s13^3*s23^2*(151*s13^2 - 573*s13*s23 + 294*s23^2) + 
                  s12^7*(427*s13^2 + 1510*s13*s23 + 300*s23^2) + 
                  s12^6*(1794*s13^3 + 3715*s13^2*s23 + 100*s13*s23^2 - 
                    180*s23^3) + s12^5*(1197*s13^4 + 3358*s13^3*s23 - 
                    2361*s13^2*s23^2 - 1860*s13*s23^3 + 60*s23^4) + 
                  s12^3*s13*s23*(-829*s13^4 + 620*s13^3*s23 - 1832*s13^2*
                     s23^2 + 70*s13*s23^3 + 70*s23^4) + s12^4*(220*s13^5 - 
                    262*s13^4*s23 - 2722*s13^3*s23^2 - 1979*s13^2*s23^3 + 
                    370*s13*s23^4 + 300*s23^5)) + p2q^2*p3q*
                 (20*s12^8*(11*s13 + 2*s23) + s12^7*(506*s13^2 + 640*s13*
                     s23 + 200*s23^2) + 10*s13^4*s23^2*(27*s13^3 - 89*s13^2*
                     s23 - 49*s13*s23^2 + 67*s23^3) + s12^6*(874*s13^3 + 
                    921*s13^2*s23 + 370*s13*s23^2 + 720*s23^3) + s12^2*s13^3*
                   (270*s13^4 - 1415*s13^3*s23 + 1630*s13^2*s23^2 - 
                    4679*s13*s23^3 + 10*s23^4) + 2*s12*s13^3*s23*(297*s13^4 - 
                    444*s13^3*s23 - 1685*s13^2*s23^2 + 356*s13*s23^3 + 
                    130*s23^4) + s12^5*(1039*s13^4 + 2347*s13^3*s23 - 
                    2814*s13^2*s23^2 + 1090*s13*s23^3 + 1000*s23^4) + 
                  s12^3*s13*(199*s13^5 + 968*s13^4*s23 - 1597*s13^3*s23^2 - 
                    4462*s13^2*s23^3 + 446*s13*s23^4 + 310*s23^5) + 
                  s12^4*(380*s13^5 + 2885*s13^4*s23 - 5603*s13^3*s23^2 - 
                    2063*s13^2*s23^3 + 1450*s13*s23^4 + 440*s23^5)) + 
                p2q*p3q^2*(-270*s12^9 - 170*s12^8*(s13 + s23) + 5*s12^7*
                   (265*s13^2 + 336*s13*s23 - 4*s23^2) + 40*s13^4*s23^3*
                   (-8*s13^2 + 3*s13*s23 + 11*s23^2) + s12^6*(2470*s13^3 + 
                    3919*s13^2*s23 - 700*s13*s23^2 + 60*s23^3) + 2*s12*s13^3*
                   s23^2*(-246*s13^3 - 482*s13^2*s23 + 369*s13*s23^2 + 
                    155*s23^3) + s12^2*s13^3*s23*(-818*s13^3 + 1379*s13^2*
                     s23 - 3269*s13*s23^2 + 256*s23^3) + s12^5*(1873*s13^4 + 
                    4474*s13^3*s23 - 5599*s13^2*s23^2 - 1460*s13*s23^3 + 
                    850*s23^4) - s12^3*s13*(32*s13^5 + 417*s13^4*s23 + 
                    204*s13^3*s23^2 + 5334*s13^2*s23^3 - 138*s13*s23^4 - 
                    260*s23^5) + s12^4*(596*s13^5 + 688*s13^4*s23 - 
                    7656*s13^3*s23^2 - 4455*s13^2*s23^3 + 1350*s13*s23^4 + 
                    670*s23^5)))))/(36*p1q*(p2q + p3q)*(p1q + p2q + p3q)*
             s12^3*s13^3*(s12 + s13)*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))) + 
           (36*p1q^6*s12*s23^5*(15*s12^6 - 5*s13^4*s23*(s13 + s23) + 5*s12^5*
                (11*s13 + 6*s23) - s12^2*s13^3*(14*s13 + 19*s23) - 5*s12*
                s13^3*(s13^2 + 4*s13*s23 + 2*s23^2) + 5*s12^4*(14*s13^2 + 
                 15*s13*s23 + 3*s23^2) + s12^3*s13*(21*s13^2 + 50*s13*s23 + 
                 20*s23^2)) + 36*(p2q + p3q)^2*(s12 + s13)*(-(p3q*s12) + p2q*
                s13)*(s12 + s13 + s23)*(p3q^3*s12^2*s23^2*(15*s12^5 - 
                 9*s12^2*s13^3 - 5*s13^4*s23 - 5*s12*s13^3*(s13 + 2*s23) + 
                 10*s12^3*s13*(3*s13 + 2*s23) + 5*s12^4*(8*s13 + 3*s23)) + 
               p2q*p3q^2*s12*s23*(15*s12^7 + 20*s13^5*s23^2 + 5*s12^6*
                  (7*s13 + 6*s23) - 3*s12^4*s13^2*(10*s13 + 11*s23) + 
                 s12*s13^4*s23*(43*s13 + 25*s23) + 5*s12^3*s13^2*(s13^2 - 
                   10*s13*s23 - 6*s23^2) + 2*s12^2*s13^3*(3*s13^2 + 
                   24*s13*s23 - 5*s23^2) + s12^5*(9*s13^2 + 25*s13*s23 + 
                   15*s23^2)) + p2q^3*s13^2*(15*s12^6*s23 + 15*s13^4*
                  (s13 - s23)*s23^2 - 7*s12^2*s13^3*s23*(5*s13 + 7*s23) + 
                 s12*s13^3*s23*(23*s13^2 - 18*s13*s23 - 20*s23^2) + 
                 s12^5*(-40*s13^2 + 18*s13*s23 + 20*s23^2) - s12^3*s13*
                  (40*s13^3 + 70*s13^2*s23 + 9*s13*s23^2 - 10*s23^3) + 
                 s12^4*(-80*s13^3 + 9*s13^2*s23 + 18*s13*s23^2 + 5*s23^3)) - 
               p2q^2*p3q*s13*(30*s12^7*s23 + 53*s12*s13^5*s23^2 + 
                 15*s13^5*s23^3 + s12^2*s13^3*s23*(29*s13^2 + 39*s13*s23 - 
                   30*s23^2) - s12^3*s13^2*s23*(30*s13^2 + 69*s13*s23 + 
                   10*s23^2) + s12^6*(-40*s13^2 + 53*s13*s23 + 50*s23^2) - 
                 5*s12^4*s13*(8*s13^3 + 20*s13^2*s23 + 4*s13*s23^2 - 
                   5*s23^3) + s12^5*(-80*s13^3 + 18*s13^2*s23 + 58*s13*
                    s23^2 + 20*s23^3))) - p1q^5*s23^4*(p3q*(2160*s12^8 + 
                 460*s13^4*s23^3*(s13 + s23) + 20*s12^7*(387*s13 + 185*s23) + 
                 s12^6*(11889*s13^2 + 7460*s13*s23 + 1380*s23^2) + 
                 4*s12*s13^3*s23*(-45*s13^3 + 297*s13^2*s23 + 587*s13*s23^2 + 
                   150*s23^3) + s12^5*(6921*s13^3 + 5474*s13^2*s23 - 
                   140*s13*s23^2 + 300*s23^3) + s12^2*s13^3*(-180*s13^3 + 
                   353*s13^2*s23 + 4431*s13*s23^2 + 2204*s23^3) + 
                 s12^4*(-225*s13^4 + 1949*s13^3*s23 - 1619*s13^2*s23^2 + 
                   740*s13*s23^3 + 460*s23^4) + s12^3*s13*(-1665*s13^4 + 
                   2388*s13^3*s23 + 4072*s13^2*s23^2 + 476*s13*s23^3 + 
                   600*s23^4)) + p2q*(540*s12^8 + 20*s12^7*(153*s13 + 
                   50*s23) - 20*s13^4*s23^2*(27*s13^2 + 4*s13*s23 - 
                   23*s23^2) + 5*s12^6*(1845*s13^2 + 880*s13*s23 + 
                   168*s23^2) - 4*s12*s13^3*s23*(477*s13^3 + 495*s13^2*s23 - 
                   362*s13*s23^2 - 150*s23^3) + s12^5*(11205*s13^3 + 
                   10298*s13^2*s23 + 2380*s13*s23^2 + 840*s23^3) + 
                 s12^2*s13^3*(-756*s13^3 - 4075*s13^2*s23 + 1047*s13*s23^2 + 
                   1844*s23^3) + s12^4*(3195*s13^4 + 9977*s13^3*s23 + 
                   2989*s13^2*s23^2 + 1640*s13*s23^3 + 460*s23^4) + 
                 s12^3*s13*(-2709*s13^4 + 588*s13^3*s23 + 4864*s13^2*s23^2 + 
                   836*s13*s23^3 + 600*s23^4))) + p1q^4*s23^3*
              (p2q^2*(20*s12^8*(27*s13 - 4*s23) + s12^7*(5211*s13^2 + 
                   380*s13*s23 - 160*s23^2) + s12^6*(19548*s13^3 + 
                   3437*s13^2*s23 + 320*s13*s23^2 - 540*s23^3) + 
                 20*s13^4*s23^2*(-108*s13^3 + 15*s13^2*s23 + 100*s13*s23^2 - 
                   23*s23^3) + s12^5*(26406*s13^4 + 18002*s13^3*s23 - 
                   439*s13^2*s23^2 + 520*s13*s23^3 - 920*s23^4) + 
                 s12^2*s13^3*(-1188*s13^4 - 7797*s13^3*s23 + 10276*s13^2*
                    s23^2 + 7877*s13*s23^3 - 884*s23^4) - 8*s12*s13^3*s23*
                  (684*s13^4 + 594*s13^3*s23 - 974*s13^2*s23^2 - 214*s13*
                    s23^3 + 75*s23^4) + s12^3*s13*(-3213*s13^5 + 12710*s13^4*
                    s23 + 19497*s13^3*s23^2 - 224*s13^2*s23^3 + 604*s13*
                    s23^4 - 600*s23^5) + s12^4*(10800*s13^5 + 29088*s13^4*
                    s23 + 3530*s13^3*s23^2 + 1939*s13^2*s23^3 - 560*s13*
                    s23^4 - 460*s23^5)) + 2*p2q*p3q*(810*s12^9 + 
                 70*s12^8*(45*s13 + 17*s23) + 2*s12^7*(4734*s13^2 + 
                   900*s13*s23 + 475*s23^2) + 10*s13^4*s23^2*(-27*s13^3 + 
                   119*s13^2*s23 + 100*s13*s23^2 - 46*s23^3) + 
                 s12^6*(15858*s13^3 + 1721*s13^2*s23 + 1230*s13*s23^2 + 
                   1110*s23^3) + s12^2*s13^3*(-288*s13^4 - 1508*s13^3*s23 + 
                   8545*s13^2*s23^2 + 5267*s13*s23^3 - 644*s23^4) + 
                 6*s12*s13^3*s23*(-144*s13^4 + 285*s13^3*s23 + 966*s13^2*
                    s23^2 + 112*s13*s23^3 - 100*s23^4) + s12^5*(10800*s13^4 + 
                   8123*s13^3*s23 - 2818*s13^2*s23^2 + 3660*s13*s23^3 + 
                   80*s23^4) + s12^3*s13*(-2610*s13^5 + 6517*s13^4*s23 + 
                   12404*s13^3*s23^2 - 224*s13^2*s23^3 + 364*s13*s23^4 - 
                   600*s23^5) + s12^4*(-252*s13^5 + 13201*s13^4*s23 + 
                   3065*s13^3*s23^2 + 2593*s13^2*s23^3 + 480*s13*s23^4 - 
                   460*s23^5)) + p3q^2*(3240*s12^9 + 60*s12^8*(189*s13 + 
                   68*s23) + 460*s13^4*s23^3*(s13^2 - s23^2) + 
                 s12^7*(20313*s13^2 + 4300*s13*s23 + 440*s23^2) + 
                 s12^2*s13^3*s23*(1253*s13^3 + 7462*s13^2*s23 + 3917*s13*
                    s23^2 - 404*s23^3) + 8*s12*s13^3*s23^2*(171*s13^3 + 
                   295*s13^2*s23 - 46*s13*s23^2 - 75*s23^3) + 5*s12^6*
                  (3600*s13^3 - 35*s13^2*s23 - 760*s13*s23^2 + 228*s23^3) + 
                 s12^5*(6642*s13^4 + 6308*s13^3*s23 - 5305*s13^2*s23^2 + 
                   5360*s13*s23^3 + 1080*s23^4) + s12^3*s13*(-495*s13^5 + 
                   9684*s13^4*s23 + 15139*s13^3*s23^2 + 1936*s13^2*s23^3 + 
                   124*s13*s23^4 - 600*s23^5) + s12^4*(-936*s13^5 + 
                   16754*s13^4*s23 + 10808*s13^3*s23^2 + 4507*s13^2*s23^3 + 
                   1520*s13*s23^4 - 460*s23^5))) + p1q^3*s23^2*
              (p2q^3*(2*s12^8*(351*s13^2 + 80*s13*s23 + 230*s23^2) + 
                 120*s13^5*s23^2*(27*s13^3 - 16*s13^2*s23 - 27*s13*s23^2 + 
                   16*s23^3) + s12^7*(-3384*s13^3 + 5165*s13^2*s23 + 
                   1940*s13*s23^2 + 1380*s23^3) + 4*s12*s13^4*s23*
                  (1692*s13^4 + 837*s13^3*s23 - 4007*s13^2*s23^2 + 
                   53*s13*s23^3 + 745*s23^4) + s12^6*(-21537*s13^4 + 
                   13652*s13^3*s23 + 8784*s13^2*s23^2 + 4840*s13*s23^3 + 
                   1380*s23^4) + s12^5*(-34353*s13^5 - 1798*s13^4*s23 + 
                   23433*s13^3*s23^2 + 7569*s13^2*s23^3 + 4860*s13*s23^4 + 
                   460*s23^5) + s12^2*s13^3*(828*s13^5 + 6429*s13^4*s23 - 
                   20640*s13^3*s23^2 - 9841*s13^2*s23^3 + 6284*s13*s23^4 + 
                   600*s23^5) + s12^3*s13^2*(-963*s13^5 - 24097*s13^4*s23 - 
                   21661*s13^3*s23^2 + 12863*s13^2*s23^3 + 3236*s13*s23^4 + 
                   1440*s23^5) + s12^4*s13*(-19341*s13^5 - 32583*s13^4*s23 + 
                   16792*s13^3*s23^2 + 9921*s13^2*s23^3 + 5048*s13*s23^4 + 
                   1800*s23^5)) + p3q^3*(-2160*s12^10 + 460*s13^5*s23^4*
                  (s13 + s23) - 60*s12^9*(123*s13 + 14*s23) + 4*s12*s13^4*
                  s23^3*(112*s13^2 + 657*s13*s23 + 450*s23^2) + 
                 s12^8*(-15039*s13^2 + 4780*s13*s23 + 1560*s23^2) + 
                 s12^7*(-18261*s13^3 + 13667*s13^2*s23 + 3040*s13*s23^2 - 
                   1080*s23^3) + s12^2*s13^3*s23^2*(-1123*s13^3 + 3179*s13^2*
                    s23 + 5948*s13*s23^2 + 1440*s23^3) + s12^6*
                  (-11943*s13^4 + 2393*s13^3*s23 + 2379*s13^2*s23^2 - 
                   9600*s13*s23^3 + 600*s23^4) + s12^3*s13^2*s23*
                  (-3181*s13^4 - 3543*s13^3*s23 + 9675*s13^2*s23^2 + 
                   4604*s13*s23^3 + 600*s23^4) - s12^5*(2403*s13^5 + 
                   17884*s13^4*s23 + 5469*s13^3*s23^2 + 9759*s13^2*s23^3 - 
                   2500*s13*s23^4 - 1920*s23^5) + s12^4*s13*(450*s13^5 - 
                   15735*s13^4*s23 - 5916*s13^3*s23^2 + 7281*s13^2*s23^3 + 
                   2768*s13*s23^4 + 2980*s23^5)) + p2q^2*p3q*
                (40*s12^9*(27*s13 + 4*s23) + s12^8*(-738*s13^2 + 3400*s13*
                    s23 + 1160*s23^2) + 20*s13^5*s23^2*(81*s13^3 - 
                   277*s13^2*s23 - 143*s13*s23^2 + 215*s23^3) + 
                 s12^7*(-15462*s13^3 + 15619*s13^2*s23 + 4140*s13*s23^2 + 
                   4680*s23^3) + 4*s12*s13^4*s23*(936*s13^4 - 2007*s13^3*
                    s23 - 6230*s13^2*s23^2 + 1683*s13*s23^3 + 1940*s23^4) + 
                 s12^6*(-37719*s13^4 + 31658*s13^3*s23 + 17412*s13^2*s23^2 + 
                   11140*s13*s23^3 + 6520*s23^4) + s12^2*s13^3*(612*s13^5 + 
                   4391*s13^4*s23 - 36316*s13^3*s23^2 - 10619*s13^2*s23^3 + 
                   17836*s13*s23^4 + 2640*s23^5) + s12^5*(-34767*s13^5 + 
                   6624*s13^4*s23 + 48139*s13^3*s23^2 + 9759*s13^2*s23^3 + 
                   15900*s13*s23^4 + 2840*s23^5) + s12^3*s13^2*(4185*s13^5 - 
                   26789*s13^4*s23 - 28423*s13^3*s23^2 + 31653*s13^2*s23^3 + 
                   8676*s13*s23^4 + 3480*s23^5) + s12^4*s13*(-9063*s13^5 - 
                   37175*s13^4*s23 + 32792*s13^3*s23^2 + 22199*s13^2*s23^3 + 
                   12184*s13*s23^4 + 6580*s23^5)) + p2q*p3q^2*(-1620*s12^10 - 
                 20*s12^9*(171*s13 + 61*s23) + 40*s13^5*s23^3*(-50*s13^2 + 
                   21*s13*s23 + 71*s23^2) - 5*s12^8*(2151*s13^2 - 1064*s13*
                    s23 + 88*s23^2) + s12^7*(-20655*s13^3 + 20413*s13^2*s23 - 
                   2680*s13*s23^2 + 600*s23^3) + 4*s12*s13^4*s23^2*
                  (-1098*s13^3 - 1526*s13^2*s23 + 2287*s13*s23^2 + 
                   1645*s23^3) + s12^2*s13^3*s23*(-634*s13^4 - 15395*s13^3*
                    s23 + 3301*s13^2*s23^2 + 17500*s13*s23^3 + 3480*s23^4) + 
                 s12^6*(-18009*s13^4 + 21695*s13^3*s23 + 4635*s13^2*s23^2 - 
                   5640*s13*s23^3 + 5740*s23^4) + s12^3*s13^2*(504*s13^5 - 
                   10337*s13^4*s23 - 6993*s13^3*s23^2 + 28645*s13^2*s23^3 + 
                   10044*s13*s23^4 + 2640*s23^5) + s12^5*(-4977*s13^5 - 
                   2046*s13^4*s23 + 16285*s13^3*s23^2 - 8469*s13^2*s23^3 + 
                   13540*s13*s23^4 + 4300*s23^5) + s12^4*s13*(-108*s13^5 - 
                   18599*s13^4*s23 + 15556*s13^3*s23^2 + 19379*s13^2*s23^3 + 
                   9904*s13*s23^4 + 7760*s23^5))) + p1q*(p3q^5*s12^2*s23*
                (540*s12^9 + 100*s13^5*s23^3*(s13 + s23) + 20*s12^8*
                  (90*s13 + 23*s23) + 4*s12*s13^4*s23^2*(252*s13^2 + 
                   207*s13*s23 - 50*s23^2) + 15*s12^7*(273*s13^2 - 
                   84*s13*s23 + 92*s23^2) + s12^2*s13^3*s23*(1613*s13^3 + 
                   5151*s13^2*s23 + 1024*s13*s23^2 - 480*s23^3) + 
                 s12^6*(6426*s13^3 - 3374*s13^2*s23 + 3940*s13*s23^2 + 
                   3540*s23^3) + s12^3*s13^2*(-135*s13^4 + 7817*s13^3*s23 + 
                   10969*s13^2*s23^2 + 4228*s13*s23^3 + 2040*s23^4) + 
                 s12^5*(5580*s13^4 + 2491*s13^3*s23 + 6827*s13^2*s23^2 + 
                   11300*s13*s23^3 + 2080*s23^4) + s12^4*s13*(1854*s13^4 + 
                   10349*s13^3*s23 + 11093*s13^2*s23^2 + 12016*s13*s23^3 + 
                   4300*s23^4)) + p2q*p3q^4*s12*s23*(540*s12^10 - 
                 120*s12^9*(3*s13 - 16*s23) - 200*s13^6*s23^3*(s13 + s23) - 
                 40*s12*s13^5*s23^2*(36*s13^2 + 24*s13*s23 - 13*s23^2) + 
                 s12^8*(1269*s13^2 + 1060*s13*s23 + 7920*s23^2) + 
                 4*s12^2*s13^4*s23*(-1990*s13^3 - 2841*s13^2*s23 + 
                   127*s13*s23^2 + 135*s23^3) + 6*s12^7*(816*s13^3 + 
                   869*s13^2*s23 + 4120*s13*s23^2 + 2040*s23^3) - 
                 s12^3*s13^3*(2106*s13^4 + 30775*s13^3*s23 + 16367*s13^2*
                    s23^2 - 1672*s13*s23^3 + 1560*s23^4) + s12^4*s13^2*
                  (-13761*s13^4 - 31627*s13^3*s23 + 9407*s13^2*s23^2 + 
                   8740*s13*s23^3 + 3640*s23^4) + s12^6*(-4464*s13^4 + 
                   16759*s13^3*s23 + 37441*s13^2*s23^2 + 34020*s13*s23^3 + 
                   5700*s23^4) + s12^5*s13*(-18846*s13^4 + 1873*s13^3*s23 + 
                   35843*s13^2*s23^2 + 31736*s13*s23^3 + 10720*s23^4)) + 
               p2q^5*s13^2*(-620*s12^8*s23^2 + 20*s13^5*s23^2*(27*s13^3 - 
                   108*s13^2*s23 - 31*s13*s23^2 + 104*s23^3) - 3*s12^7*
                  (480*s13^3 - 2637*s13^2*s23 + 612*s13*s23^2 + 380*s23^3) + 
                 s12^6*(-5760*s13^4 + 28350*s13^3*s23 + 9028*s13^2*s23^2 - 
                   2792*s13*s23^3 - 420*s23^4) + 4*s12*s13^4*s23*(207*s13^4 - 
                   648*s13^3*s23 - 1827*s13^2*s23^2 + 1413*s13*s23^3 + 
                   1075*s23^4) + s12^2*s13^3*s23*(180*s13^4 - 5461*s13^3*
                    s23 + 6285*s13^2*s23^2 + 13300*s13*s23^3 + 2040*s23^4) + 
                 s12^3*s13^2*(-1440*s13^5 - 783*s13^4*s23 + 15017*s13^3*
                    s23^2 + 27763*s13^2*s23^3 + 7540*s13*s23^4 - 480*s23^5) + 
                 s12^4*s13*(-5760*s13^5 + 14382*s13^4*s23 + 43865*s13^3*
                    s23^2 + 19391*s13^2*s23^3 + 100*s13*s23^4 - 200*s23^5) + 
                 s12^5*(-8640*s13^5 + 34956*s13^4*s23 + 36763*s13^3*s23^2 + 
                   2057*s13^2*s23^3 - 1156*s13*s23^4 + 100*s23^5)) + p2q^4*
                p3q*s13*(-920*s12^9*s23^2 + 6*s12^8*(480*s13^3 - 837*s13^2*
                    s23 - 556*s13*s23^2 - 340*s23^3) + 60*s13^6*s23^2*
                  (9*s13^3 - 72*s13^2*s23 + 14*s13*s23^2 + 95*s23^3) + 
                 s12^7*(10080*s13^4 + 1737*s13^3*s23 - 21530*s13^2*s23^2 - 
                   4712*s13*s23^3 - 1320*s23^4) + 4*s12*s13^5*s23*
                  (207*s13^4 - 2016*s13^3*s23 - 2151*s13^2*s23^2 + 
                   5467*s13*s23^3 + 2680*s23^4) + s12^2*s13^4*s23*
                  (-1260*s13^4 - 11271*s13^3*s23 + 33003*s13^2*s23^2 + 
                   39108*s13*s23^3 + 3640*s23^4) + s12^3*s13^3*(-1440*s13^5 + 
                   1539*s13^4*s23 + 42815*s13^3*s23^2 + 74229*s13^2*s23^3 + 
                   15100*s13*s23^4 - 1560*s23^5) + 2*s12^6*(5760*s13^5 + 
                   23949*s13^4*s23 - 13591*s13^3*s23^2 - 9206*s13^2*s23^3 - 
                   428*s13*s23^4 - 100*s23^5) + s12^5*s13*(2880*s13^5 + 
                   80280*s13^4*s23 + 38219*s13^3*s23^2 - 23161*s13^2*s23^3 - 
                   2084*s13*s23^4 + 520*s23^5) + s12^4*s13^2*(-2880*s13^5 + 
                   42768*s13^4*s23 + 91769*s13^3*s23^2 + 26929*s13^2*s23^3 - 
                   3908*s13*s23^4 + 540*s23^5)) + p2q^3*p3q^2*
                (1540*s12^10*s23^2 + 120*s13^7*s23^3*(-18*s13^2 + 
                   25*s13*s23 + 43*s23^2) + 12*s12*s13^6*s23^2*(-456*s13^3 + 
                   324*s13^2*s23 + 2065*s13*s23^2 + 695*s23^3) + 
                 s12^9*(-1440*s13^3 + 4491*s13^2*s23 + 4620*s13*s23^2 + 
                   4620*s23^3) + s12^3*s13^4*s23*(5175*s13^4 + 51411*s13^3*
                    s23 + 67053*s13^2*s23^2 + 9384*s13*s23^3 - 740*s23^4) + 
                 s12^2*s13^5*s23*(-1440*s13^4 + 429*s13^3*s23 + 46395*s13^2*
                    s23^2 + 35356*s13*s23^3 + 1480*s23^4) + s12^8*
                  (-2880*s13^4 + 2628*s13^3*s23 + 13090*s13^2*s23^2 + 
                   9880*s13*s23^3 + 4620*s23^4) + s12^5*s13^2*(10080*s13^5 + 
                   61641*s13^4*s23 - 15880*s13^3*s23^2 - 37520*s13^2*s23^3 + 
                   2536*s13*s23^4 + 300*s23^5) + 2*s12^4*s13^3*(1440*s13^5 + 
                   21708*s13^4*s23 + 32875*s13^3*s23^2 + 1356*s13^2*s23^3 - 
                   754*s13*s23^4 + 540*s23^5) + s12^7*(2880*s13^5 - 
                   5643*s13^4*s23 - 9575*s13^3*s23^2 + 12671*s13^2*s23^3 + 
                   6980*s13*s23^4 + 1540*s23^5) + s12^6*s13*(11520*s13^5 + 
                   21060*s13^4*s23 - 55705*s13^3*s23^2 - 10003*s13^2*s23^3 + 
                   5452*s13*s23^4 + 1720*s23^5)) + p2q^2*p3q^3*
                (-120*s12^10*(18*s13 - 25*s23)*s23 + 1540*s13^7*s23^4*
                  (s13 + s23) + 4*s12*s13^6*s23^3*(1296*s13^2 + 2091*s13*
                    s23 + 430*s23^2) - 15*s12^9*(96*s13^3 - 111*s13^2*s23 - 
                   524*s13*s23^2 - 744*s23^3) + s12^2*s13^5*s23^2*
                  (6239*s13^3 + 18237*s13^2*s23 + 8488*s13*s23^2 + 
                   300*s23^3) + 2*s12^4*s13^3*s23*(6462*s13^4 - 7271*s13^3*
                    s23 - 13172*s13^2*s23^2 + 1574*s13*s23^3 - 370*s23^4) + 
                 s12^3*s13^4*s23*(2853*s13^4 + 15653*s13^3*s23 + 8215*s13^2*
                    s23^2 + 1504*s13*s23^3 + 1080*s23^4) + s12^8*
                  (-5760*s13^4 + 6120*s13^3*s23 + 24394*s13^2*s23^2 + 
                   32700*s13*s23^3 + 13320*s23^4) + s12^5*s13^2*
                  (-1440*s13^5 + 2691*s13^4*s23 - 56780*s13^3*s23^2 - 
                   13864*s13^2*s23^3 + 7976*s13*s23^4 + 1480*s23^5) + 
                 s12^7*(-8640*s13^5 - 9513*s13^4*s23 + 24387*s13^3*s23^2 + 
                   46857*s13^2*s23^3 + 31020*s13*s23^4 + 5160*s23^5) + 
                 s12^6*s13*(-5760*s13^5 - 19188*s13^4*s23 - 27971*s13^3*
                    s23^2 + 30367*s13^2*s23^3 + 25608*s13*s23^4 + 
                   8340*s23^5))) - p1q^2*s23*(p2q^4*s13*(10*s12^8*
                  (297*s13^2 + 8*s13*s23 + 38*s23^2) + 40*s13^5*s23^2*
                  (54*s13^3 - 79*s13^2*s23 - 58*s13*s23^2 + 75*s23^3) + 
                 s12^7*(4995*s13^3 + 14580*s13^2*s23 + 1672*s13*s23^2 + 
                   1500*s23^3) + 4*s12*s13^4*s23*(963*s13^4 - 342*s13^3*s23 - 
                   3933*s13^2*s23^2 + 1267*s13*s23^3 + 1355*s23^4) + 
                 s12^6*(-7218*s13^4 + 45107*s13^3*s23 + 19308*s13^2*s23^2 + 
                   4784*s13*s23^3 + 1860*s23^4) + s12^3*s13^2*(-3411*s13^5 - 
                   14882*s13^4*s23 + 2337*s13^3*s23^2 + 31286*s13^2*s23^3 + 
                   8332*s13*s23^4 + 720*s23^5) + s12^5*(-22032*s13^5 + 
                   41726*s13^4*s23 + 54965*s13^3*s23^2 + 11970*s13^2*s23^3 + 
                   4872*s13*s23^4 + 740*s23^5) + s12^4*s13*(-16416*s13^5 - 
                   1430*s13^4*s23 + 52918*s13^3*s23^2 + 25651*s13^2*s23^3 + 
                   5352*s13*s23^4 + 1680*s23^5) + s12^2*s13^3*(216*s13^5 + 
                   2167*s13^4*s23 - 16836*s13^3*s23^2 - 475*s13^2*s23^3 + 
                   14308*s13*s23^4 + 1920*s23^5)) + 2*p2q^3*p3q*
                (s12^9*(-729*s13^2 - 80*s13*s23 + 730*s23^2) + 10*s13^6*s23^2*
                  (81*s13^3 - 343*s13^2*s23 - 51*s13*s23^2 + 373*s23^3) + 
                 s12^8*(666*s13^3 - 532*s13^2*s23 + 2930*s13*s23^2 + 
                   2190*s23^3) + s12^7*(4239*s13^4 + 16372*s13^3*s23 + 
                   4363*s13^2*s23^2 + 8260*s13*s23^3 + 2190*s23^4) + 
                 2*s12*s13^5*s23*(756*s13^4 - 3051*s13^3*s23 - 6052*s13^2*
                    s23^2 + 5635*s13*s23^3 + 3690*s23^4) + s12^6*
                  (1026*s13^5 + 53025*s13^4*s23 + 19967*s13^3*s23^2 + 
                   11448*s13^2*s23^3 + 7950*s13*s23^4 + 730*s23^5) + 
                 s12^3*s13^3*(-405*s13^5 - 8490*s13^4*s23 + 11156*s13^3*
                    s23^2 + 43639*s13^2*s23^3 + 12628*s13*s23^4 + 
                   1560*s23^5) + s12^5*s13*(-6273*s13^5 + 54406*s13^4*s23 + 
                   57581*s13^3*s23^2 + 12097*s13^2*s23^3 + 11012*s13*s23^4 + 
                   2700*s23^5) + s12^4*s13^2*(-4968*s13^5 + 12642*s13^4*s23 + 
                   62025*s13^3*s23^2 + 30697*s13^2*s23^3 + 8184*s13*s23^4 + 
                   3190*s23^5) + s12^2*s13^4*(108*s13^5 - 119*s13^4*s23 - 
                   18004*s13^3*s23^2 + 8483*s13^2*s23^3 + 22684*s13*s23^4 + 
                   3430*s23^5)) + p3q^4*s12*(-540*s12^10 - 40*s12^9*
                  (45*s13 - 29*s23) + 740*s13^5*s23^4*(s13 + s23) - 
                 45*s12^8*(91*s13^2 - 136*s13*s23 - 36*s23^2) + 4*s12*s13^4*
                  s23^3*(524*s13^2 + 1089*s13*s23 + 420*s23^2) + 
                 2*s12^2*s13^3*s23^2*(929*s13^3 + 5457*s13^2*s23 + 
                   3774*s13*s23^2 + 360*s23^3) + s12^7*(-6426*s13^3 + 
                   13913*s13^2*s23 - 1160*s13*s23^2 + 600*s23^3) + 
                 s12^3*s13^2*s23*(-1883*s13^4 + 10548*s13^3*s23 + 21961*s13^2*
                    s23^2 + 6712*s13*s23^3 + 1920*s23^4) + s12^6*
                  (-5580*s13^4 + 12494*s13^3*s23 - 4681*s13^2*s23^2 - 
                   3560*s13*s23^3 + 3680*s23^4) + s12^5*(-1854*s13^5 + 
                   1342*s13^4*s23 + 3398*s13^3*s23^2 - 3401*s13^2*s23^3 + 
                   10940*s13*s23^4 + 3000*s23^5) + s12^4*s13*(135*s13^5 - 
                   4730*s13^4*s23 + 14961*s13^3*s23^2 + 14830*s13^2*s23^3 + 
                   10408*s13*s23^4 + 5420*s23^5)) + 2*p2q*p3q^3*
                (-270*s12^11 + 730*s13^6*s23^4*(s13 + s23) + s12^10*
                  (-90*s13 + 350*s23) + s12^9*(-522*s13^2 + 2080*s13*s23 + 
                   1000*s23^2) + 2*s12*s13^5*s23^3*(716*s13^2 + 2391*s13*
                    s23 + 1350*s23^2) + 2*s12^2*s13^4*s23^2*(271*s13^3 + 
                   3961*s13^2*s23 + 5466*s13*s23^2 + 1595*s23^3) + 
                 s12^8*(-378*s13^3 + 7253*s13^2*s23 - 1940*s13*s23^2 + 
                   3600*s23^3) + s12^3*s13^3*s23*(3350*s13^4 + 9147*s13^3*
                    s23 + 18155*s13^2*s23^2 + 11124*s13*s23^3 + 1560*s23^4) + 
                 2*s12^7*(2682*s13^4 + 7080*s13^3*s23 - 860*s13^2*s23^2 + 
                   3850*s13*s23^3 + 3475*s23^4) + s12^4*s13^2*(1188*s13^5 + 
                   15105*s13^4*s23 + 25991*s13^3*s23^2 + 26107*s13^2*s23^3 + 
                   10264*s13*s23^4 + 3430*s23^5) + s12^6*(11088*s13^5 + 
                   21860*s13^4*s23 + 11527*s13^3*s23^2 + 10823*s13^2*s23^3 + 
                   19190*s13*s23^4 + 3730*s23^5) + s12^5*s13*(7236*s13^5 + 
                   23682*s13^4*s23 + 28989*s13^3*s23^2 + 22373*s13^2*s23^3 + 
                   18348*s13*s23^4 + 7380*s23^5)) + p2q^2*p3q^2*
                (20*s12^10*(81*s13 + 4*s23) + 40*s13^6*s23^3*(-79*s13^2 + 
                   69*s13*s23 + 148*s23^2) + s12^9*(1593*s13^2 + 1300*s13*
                    s23 + 2920*s23^2) - 4*s12*s13^5*s23^2*(1917*s13^3 + 
                   953*s13^2*s23 - 6574*s13*s23^2 - 3500*s23^3) + 
                 s12^8*(1296*s13^3 + 7441*s13^2*s23 + 7980*s13*s23^2 + 
                   11520*s23^3) + s12^2*s13^4*s23*(-2261*s13^4 - 15172*s13^3*
                    s23 + 32989*s13^2*s23^2 + 48568*s13*s23^3 + 9640*s23^4) + 
                 s12^7*(6111*s13^4 + 39354*s13^3*s23 + 17007*s13^2*s23^2 + 
                   35780*s13*s23^3 + 14600*s23^4) + s12^3*s13^3*(-135*s13^5 - 
                   6306*s13^4*s23 + 30363*s13^3*s23^2 + 81028*s13^2*s23^3 + 
                   31624*s13*s23^4 + 4800*s23^5) + s12^6*(5940*s13^5 + 
                   91189*s13^4*s23 + 44710*s13^3*s23^2 + 44959*s13^2*s23^3 + 
                   41480*s13*s23^4 + 5920*s23^5) + s12^4*s13^2*(-4824*s13^5 + 
                   30007*s13^4*s23 + 100038*s13^3*s23^2 + 64196*s13^2*s23^3 + 
                   24832*s13*s23^4 + 9640*s23^5) + s12^5*s13*(-3537*s13^5 + 
                   88220*s13^4*s23 + 96878*s13^3*s23^2 + 41780*s13^2*s23^3 + 
                   43440*s13*s23^4 + 14000*s23^5))))/(72*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)^2*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) + (9*(4*p2q^2*s13*(4*s12^5 + s13^3*s23*
                 (s13 + s23) + 2*s12^4*(8*s13 + 3*s23) + s12^3*(24*s13^2 + 
                  17*s13*s23 + 5*s23^2) + s12^2*(16*s13^3 + 17*s13^2*s23 + 
                  s13*s23^2 + 7*s23^3) + s12*(4*s13^4 + 7*s13^3*s23 - 
                  3*s13^2*s23^2 - s13*s23^3 + 4*s23^4)) + p2q*s23*(
                4*p3q*s12*s13*(3*s12^3 + s13^3 + s13^2*s23 + 8*s13*s23^2 + 
                  8*s23^3 + s12^2*(7*s13 + 11*s23) + s12*(5*s13^2 + 
                    12*s13*s23 + 16*s23^2)) + p1q*(s12^5 + s12^4*(6*s13 - 
                    2*s23) + 3*s12^3*(8*s13^2 - 3*s13*s23 - 5*s23^2) + 
                  s12^2*(26*s13^3 + 17*s13^2*s23 - 35*s13*s23^2 - 20*s23^3) + 
                  s13*s23*(s13^3 - 5*s13^2*s23 - 8*s13*s23^2 - 8*s23^3) + 
                  s12*(7*s13^4 - 7*s13^3*s23 - 9*s13^2*s23^2 - 28*s13*s23^3 - 
                    8*s23^4))) + s23*(4*p1q^2*s12*s13*s23*(s12^2 + 
                  2*s12*s13 + s13^2 + 5*s12*s23 + 5*s13*s23 + 4*s23^2) + 
                4*p3q^2*s12*s13*s23*(s12^2 + 2*s12*s13 + s13^2 + 5*s12*s23 + 
                  5*s13*s23 + 4*s23^2) + p1q*p3q*(s12^5 - 2*s12^4*(3*s13 + 
                    s23) - s12^3*(4*s13^2 + 45*s13*s23 + 15*s23^2) + 
                  s12^2*(6*s13^3 - 15*s13^2*s23 - 59*s13*s23^2 - 20*s23^3) + 
                  s13*s23*(s13^3 - 5*s13^2*s23 - 8*s13*s23^2 - 8*s23^3) + 
                  s12*(3*s13^4 - 3*s13^3*s23 - s13^2*s23^2 - 28*s13*s23^3 - 
                    8*s23^4))))*den[-3 + 2*ep])/(8*p1q*(p2q + p3q)*s12*s13*
             (s12 + s13)^3*s23^2))*p1 . E0conj + 
         (-1/18*(ep^2*(10*s12^4 + s12*s13^2*(s13 - s23) - 10*s13^3*s23 + 
               s12^2*s13*(12*s13 + s23) + s12^3*(21*s13 + 10*s23)))/
             (s12^2*s13^2*s23) - ((s12 + s13 + s23)*(36*p1q^6*s23^4*(
                -4*s12^2*s13^3 + 10*s12^4*s23 - 22*s12*s13^3*s23 - 
                10*s13^3*s23^2 + s12^3*(4*s13^2 + 15*s13*s23 + 10*s23^2)) + 
              9*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(-(p3q^2*s12*s23*
                  (40*s12^5 - 11*s12^2*s13^2*s23 + 20*s13^4*s23 + 40*s12^4*
                    (2*s13 + s23) + 2*s12^3*s13*(3*s13 + 10*s23) + 
                   s12*s13^3*(34*s13 + 11*s23))) - 2*p2q*p3q*(20*s12^6*s23 - 
                  34*s12*s13^5*s23 - 20*s13^5*s23^2 + 20*s12^5*s23*
                   (s13 + s23) + 4*s12^4*s13^2*(49*s13 + 5*s23) + s12^2*s13^3*
                   s23*(40*s13 + 29*s23) + s12^3*s13^2*(196*s13^2 + 
                    130*s13*s23 - 29*s23^2)) + p2q^2*s13*(40*s12^5*s23 + 
                  40*s13^4*s23^2 + 4*s12*s13^3*s23*(17*s13 + 5*s23) - 
                  s12^2*s13^2*s23*(126*s13 + 11*s23) + s12^3*s13*
                   (-392*s13^2 - 260*s13*s23 + 11*s23^2) + s12^4*
                   (-392*s13^2 + 46*s13*s23 + 20*s23^2))) - p1q^5*s23^3*(
                p2q*(360*s12^5*s23 + 40*s13^3*s23^2*(-36*s13 + s23) - 
                  4*s12*s13^2*s23*(747*s13^2 + 55*s13*s23 - 80*s23^2) + 
                  5*s12^4*(45*s13^2 + 252*s13*s23 + 64*s23^2) + 
                  s12^3*(-360*s13^3 + 1926*s13^2*s23 + 500*s13*s23^2 - 
                    40*s23^3) - s12^2*s13*(513*s13^3 + 450*s13^2*s23 - 
                    1292*s13*s23^2 + 320*s23^3)) + p3q*(1440*s12^5*s23 + 
                  40*s13^3*s23^2*(-9*s13 + s23) - 4*s12*s13^2*s23*
                   (198*s13^2 + 235*s13*s23 - 80*s23^2) + s12^4*(513*s13^2 + 
                    2340*s13*s23 + 1400*s23^2) + 2*s12^3*(180*s13^3 + 
                    981*s13^2*s23 - 110*s13*s23^2 - 20*s23^3) - s12^2*s13*
                   (225*s13^3 + 2754*s13^2*s23 - 1292*s13*s23^2 + 
                    320*s23^3))) - p1q*(p2q + p3q)*(-(p3q^4*s12^2*s23*
                  (1400*s12^5*s23 + 40*s13^4*s23^2 + 2*s12*s13^3*s23*
                    (-110*s13 + 189*s23) + s12^2*s13^2*(-1233*s13^2 + 
                     604*s13*s23 - 198*s23^2) + 4*s12^3*s13*(-63*s13^2 + 
                     187*s13*s23 + 45*s23^2) + s12^4*(1629*s13^2 + 2260*s13*
                      s23 + 1400*s23^2))) + p2q^4*s13^2*(400*s12^5*s23^2 + 
                  1400*s13^4*s23^3 + 4*s12*s13^3*s23^2*(667*s13 + 45*s23) + 
                  s12^2*s13^2*s23*(1629*s13^2 - 4960*s13*s23 - 198*s23^2) + 
                  s12^4*(3528*s13^3 - 8613*s13^2*s23 + 728*s13*s23^2 + 
                    40*s23^3) + 2*s12^3*s13*(1764*s13^3 - 4932*s13^2*s23 - 
                    3272*s13*s23^2 + 189*s23^3)) + 2*p2q^3*p3q*s13*
                 (320*s12^6*s23^2 + 2*s12*s13^4*(1181*s13 - 160*s23)*s23^2 + 
                  1220*s13^5*s23^3 + s12^2*s13^3*s23*(585*s13^2 - 3974*s13*
                     s23 - 261*s23^2) - 7*s12^5*(504*s13^3 + 351*s13^2*s23 - 
                    2*s13*s23^2 - 20*s23^3) + 9*s12^3*s13^2*(196*s13^3 - 
                    1125*s13^2*s23 - 598*s13*s23^2 + 78*s23^3) - s12^4*s13*
                   (1764*s13^3 + 9171*s13^2*s23 + 882*s13*s23^2 + 
                    401*s23^3)) - p2q^2*p3q^2*(1040*s12^7*s23^2 - 4*s12*s13^5*
                   (514*s13 - 275*s23)*s23^2 - 1040*s13^6*s23^3 + 
                  4*s12^3*s13^4*s23*(2529*s13 + 1094*s23) + s12^2*s13^4*s23*
                   (-585*s13^2 + 5408*s13*s23 - 518*s23^2) + 4*s12^5*s13*
                   (882*s13^3 + 3240*s13^2*s23 + 527*s13*s23^2 - 275*s23^3) + 
                  2*s12^4*s13^2*(3528*s13^3 + 8190*s13^2*s23 + 2654*s13*
                     s23^2 + 259*s23^3) + s12^6*(-3528*s13^3 + 585*s13^2*
                     s23 - 460*s13*s23^2 + 1040*s23^3)) - 2*p2q*p3q^3*s12*
                 (1220*s12^6*s23^2 + s12*s13^4*(526*s13 - 401*s23)*s23^2 + 
                  140*s13^5*s23^3 + 9*s12^3*s13^2*s23*(301*s13^2 + 266*s13*
                     s23 - 29*s23^2) + s12^2*s13^3*s23*(909*s13^2 - 
                    716*s13*s23 + 702*s23^2) + s12^4*s13*(-1764*s13^3 + 
                    2853*s13^2*s23 + 1926*s13*s23^2 - 320*s23^3) + 
                  s12^5*(-1764*s13^3 + 585*s13^2*s23 + 1220*s13*s23^2 + 
                    1220*s23^3))) - p1q^2*s23*(p2q^4*s13*(40*s13^4*s23*
                   (9*s13^2 - s13*s23 - 51*s23^2) + 2*s12^5*(747*s13^2 + 
                    20*s13*s23 + 140*s23^2) + s12^2*s13^2*(108*s13^3 - 
                    6643*s13^2*s23 + 7810*s13*s23^2 - 221*s23^3) + 
                  s12^3*s13*(-12042*s13^3 + 9503*s13^2*s23 + 6244*s13*s23^2 - 
                    139*s23^3) + 4*s12*s13^3*(153*s13^3 + 55*s13^2*s23 - 
                    1173*s13*s23^2 + 125*s23^3) + s12^4*(-5868*s13^3 + 
                    7424*s13^2*s23 + 146*s13*s23^2 + 460*s23^3)) + 
                p3q^4*s12*(-360*s12^7 - 460*s13^4*s23^3 - 80*s12^6*
                   (9*s13 + 4*s23) + s12*s13^3*s23^2*(-1398*s13 + 139*s23) + 
                  s12^2*s13^2*s23*(-2120*s13^2 + 340*s13*s23 + 221*s23^2) + 
                  s12^5*(-1458*s13^2 + 260*s13*s23 + 2080*s23^2) + 
                  s12^3*s13*(702*s13^3 - 2359*s13^2*s23 + 2626*s13*s23^2 - 
                    500*s23^3) + s12^4*(900*s13^3 + 4823*s13^2*s23 + 
                    2860*s13*s23^2 + 2040*s23^3)) + 2*p2q*p3q^3*(-180*s12^8 + 
                  20*s12^7*(9*s13 - 7*s23) - 500*s13^5*s23^3 - 2*s12*s13^4*
                   s23^2*(549*s13 + 320*s23) - 2*s12^2*s13^3*s23*(173*s13^2 + 
                    100*s13*s23 - 130*s23^2) + s12^6*(99*s13^2 + 760*s13*
                     s23 + 2580*s23^2) + s12^4*s13*(-2889*s13^3 + 3006*s13^2*
                     s23 + 5872*s13*s23^2 - 320*s23^3) + s12^3*s13^2*
                   (495*s13^3 + 2381*s13^2*s23 + 2506*s13*s23^2 + 
                    100*s23^3) + s12^5*(-3789*s13^3 + 2817*s13^2*s23 + 
                    3460*s13*s23^2 + 2540*s23^3)) + p2q^2*p3q^2*
                 (40*s12^7*(27*s13 + s23) - 40*s13^5*s23^2*(s13 + 101*s23) - 
                  4*s12*s13^4*s23*(215*s13^2 + 2271*s13*s23 + 170*s23^2) + 
                  2*s12^6*(369*s13^2 + 590*s13*s23 + 2040*s23^2) + 
                  s12^3*s13^2*(-5058*s13^3 + 22039*s13^2*s23 + 19424*s13*
                     s23^2 - 402*s23^3) + s12^2*s13^3*(-1008*s13^3 - 
                    5975*s13^2*s23 + 8468*s13*s23^2 + 402*s23^3) + 
                  s12^4*s13*(-10134*s13^3 + 26561*s13^2*s23 + 13020*s13*
                     s23^2 + 680*s23^3) + s12^5*(-15066*s13^3 + 2275*s13^2*
                     s23 + 5540*s13*s23^2 + 4040*s23^3)) - 2*p2q^3*p3q*
                 (s12^6*(459*s13^2 + 40*s13*s23 - 500*s23^2) + 20*s13^5*s23*
                   (-9*s13^2 + 2*s13*s23 + 127*s23^2) + s12^4*s13*
                   (4761*s13^3 - 12123*s13^2*s23 - 2024*s13*s23^2 - 
                    640*s23^3) + s12^5*(2547*s13^3 - 68*s13^2*s23 - 
                    880*s13*s23^2 - 500*s23^3) + s12^2*s13^3*(450*s13^3 + 
                    5279*s13^2*s23 - 7640*s13*s23^2 + 100*s23^3) + 
                  s12^3*s13^2*(9045*s13^3 - 13014*s13^2*s23 - 10498*s13*
                     s23^2 + 260*s23^3) + s12*(-306*s13^7 + 320*s13^6*s23 + 
                    5790*s13^5*s23^2 - 320*s13^4*s23^3))) + p1q^4*s23^2*(
                p2q^2*(40*s12^5*(9*s13 - s23)*s23 - 40*s13^3*s23^2*
                   (54*s13^2 - 3*s13*s23 - 8*s23^2) + 2*s12^4*(225*s13^3 + 
                    693*s13^2*s23 + 10*s13*s23^2 - 180*s23^3) - 4*s12*s13^2*
                   s23*(1053*s13^3 + 165*s13^2*s23 - 458*s13*s23^2 + 
                    80*s23^3) + s12^3*(-1152*s13^4 + 7542*s13^3*s23 + 
                    47*s13^2*s23^2 - 580*s13*s23^3 - 320*s23^4) + s12^2*s13*
                   (-594*s13^4 - 1008*s13^3*s23 + 5969*s13^2*s23^2 - 
                    1932*s13*s23^3 + 320*s23^4)) + 2*p2q*p3q*(540*s12^6*s23 + 
                  20*s13^3*s23^2*(-27*s13^2 + 4*s13*s23 + 16*s23^2) + 
                  5*s12^5*(45*s13^2 + 216*s13*s23 + 92*s23^2) - 2*s12*s13^2*
                   s23*(549*s13^3 + 310*s13^2*s23 - 776*s13*s23^2 + 
                    160*s23^3) - s12^4*(567*s13^3 - 2268*s13^2*s23 + 
                    340*s13*s23^2 + 400*s23^3) + s12^3*(567*s13^4 + 
                    3798*s13^3*s23 + 1037*s13^2*s23^2 - 860*s13*s23^3 - 
                    320*s23^4) + s12^2*s13*(-225*s13^4 - 1944*s13^3*s23 + 
                    3251*s13^2*s23^2 - 1292*s13*s23^3 + 320*s23^4)) + 
                p3q^2*(2160*s12^6*s23 + 40*s13^3*s23^3*(s13 + 8*s23) - 
                  4*s12*s13^2*s23^2*(145*s13^2 - 318*s13*s23 + 80*s23^2) + 
                  6*s12^5*(99*s13^2 + 630*s13*s23 + 340*s23^2) + 2*s12^4*
                   (576*s13^3 + 2691*s13^2*s23 - 350*s13*s23^2 - 220*s23^3) + 
                  s12^2*s13*s23*(-1800*s13^3 + 1541*s13^2*s23 - 652*s13*
                     s23^2 + 320*s23^3) - s12^3*(450*s13^4 + 3870*s13^3*s23 - 
                    1019*s13^2*s23^2 + 1140*s13*s23^3 + 320*s23^4))) + 
              p1q^3*s23*(p2q^3*(120*s13^4*s23^2*(12*s13^2 - s13*s23 - 
                    11*s23^2) + 2*s12^5*s23*(261*s13^2 + 40*s13*s23 + 
                    160*s23^2) + 4*s12*s13^3*s23*(657*s13^3 + 165*s13^2*s23 - 
                    1037*s13*s23^2 + 205*s23^3) + s12^2*s13^2*(225*s13^4 + 
                    666*s13^3*s23 - 9691*s13^2*s23^2 + 5596*s13*s23^3 - 
                    640*s23^4) + 2*s12^3*s13*(324*s13^4 - 7335*s13^3*s23 + 
                    1630*s13^2*s23^2 + 1290*s13*s23^3 + 230*s23^4) + 
                  s12^4*(-225*s13^4 - 3150*s13^3*s23 + 1991*s13^2*s23^2 + 
                    820*s13*s23^3 + 320*s23^4)) - p3q^3*(1440*s12^7*s23 + 
                  320*s13^4*s23^4 + 4*s12*s13^3*s23^3*(228*s13 + 115*s23) + 
                  s12^2*s13^2*s23^2*(667*s13^2 + 1496*s13*s23 - 640*s23^2) + 
                  15*s12^6*(15*s13^2 + 180*s13*s23 + 88*s23^2) + 2*s12^5*
                   (324*s13^3 + 2439*s13^2*s23 - 370*s13*s23^2 - 720*s23^3) + 
                  2*s12^3*s13*s23*(-855*s13^3 + 2114*s13^2*s23 - 1452*s13*
                     s23^2 + 410*s23^3) - s12^4*(225*s13^4 + 2808*s13^3*s23 + 
                    3467*s13^2*s23^2 + 2140*s13*s23^3 + 1320*s23^4)) + 
                p2q^2*p3q*(80*s12^6*s23*(9*s13 + s23) + 40*s13^4*s23^2*
                   (27*s13^2 - 5*s13*s23 - 74*s23^2) + 4*s12*s13^3*s23*
                   (504*s13^3 - 85*s13^2*s23 - 2202*s13*s23^2 + 295*s23^3) + 
                  6*s12^5*(75*s13^3 + 12*s13^2*s23 + 220*s13*s23^2 + 
                    340*s23^3) + s12^2*s13^2*(225*s13^4 + 234*s13^3*s23 - 
                    12969*s13^2*s23^2 + 8688*s13*s23^3 - 640*s23^4) - 
                  2*s12^3*s13*(549*s13^4 + 9180*s13^3*s23 - 1174*s13^2*
                     s23^2 - 4536*s13*s23^3 - 50*s23^4) + s12^4*
                   (-1521*s13^4 - 18918*s13^3*s23 + 3113*s13^2*s23^2 + 
                    3380*s13*s23^3 + 1960*s23^4)) - p2q*p3q^2*
                 (1080*s12^7*s23 + 40*s13^4*s23^3*(2*s13 + 49*s23) + 
                  4*s12*s13^3*s23^2*(70*s13^2 + 1393*s13*s23 + 25*s23^2) + 
                  5*s12^6*(45*s13^2 + 108*s13*s23 + 176*s23^2) - s12^2*s13^2*
                   s23*(72*s13^3 - 6321*s13^2*s23 + 1596*s13*s23^2 + 
                    640*s23^3) - 2*s12^5*(549*s13^3 - 1206*s13^2*s23 + 
                    1350*s13*s23^2 + 1580*s23^3) + 2*s12^3*s13*(225*s13^4 + 
                    846*s13^3*s23 - 166*s13^2*s23^2 - 4698*s13*s23^3 + 
                    590*s23^4) - s12^4*(1521*s13^4 - 10728*s13^3*s23 + 
                    2213*s13^2*s23^2 + 4700*s13*s23^3 + 2960*s23^4)))))/
            (72*ep*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12^3*s13^3*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) + (ep*(-9*p1q^5*s23^3*(10*s12^6*s23 - 
                10*s13^4*s23^2*(s13 + s23) + s12^2*s13^3*(s13^2 - 
                  21*s13*s23 - 20*s23^2) - 2*s12*s13^3*s23*(6*s13^2 + 
                  16*s13*s23 + 5*s23^2) + s12^5*(-s13^2 + 40*s13*s23 + 
                  20*s23^2) + s12^3*s13*(s13^3 + 8*s13^2*s23 + 28*s13*s23^2 + 
                  10*s23^3) + s12^4*(-s13^3 + 47*s13^2*s23 + 50*s13*s23^2 + 
                  10*s23^3)) - 9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(s12 + 
                s13 + s23)*(p3q^2*s12*(s12 - s13)*s23*(10*s12^4 - 
                  s12^2*s13^2 - 11*s12*s13^3 - 10*s13^3*s23 + 10*s12^3*
                   (2*s13 + s23)) + 2*p2q*p3q*(5*s12^6*s23 + s12^2*s13^3*
                   (12*s13 - 5*s23)*s23 + 5*s12^5*s23^2 - 5*s13^5*s23^2 + 
                  2*s12*s13^4*s23*(-3*s13 + 5*s23) + s12^4*s13*(8*s13^2 - 
                    13*s13*s23 - 10*s23^2) + s12^3*s13^2*(8*s13^2 + 
                    10*s13*s23 + 5*s23^2)) + p2q^2*s13*(-10*s12^5*s23 + 
                  17*s12^2*s13^3*s23 - 2*s12*s13^3*(6*s13 - 5*s23)*s23 - 
                  10*s13^4*s23^2 + s12^4*(16*s13^2 - 9*s13*s23 - 10*s23^2) + 
                  2*s12^3*s13*(8*s13^2 + 15*s13*s23 + 5*s23^2))) - 
              2*p1q^4*s23^2*(p2q*(-5*s12^6*(7*s13 - 2*s23)*s23 + 5*s13^4*
                   s23^2*(27*s13^2 + 25*s13*s23 - 2*s23^2) + s12*s13^3*s23*
                   (162*s13^3 + 302*s13^2*s23 - 75*s13*s23^2 - 80*s23^3) + 
                  s12^5*(9*s13^3 + 58*s13^2*s23 + 30*s13*s23^2 + 20*s23^3) - 
                  s12^2*s13^3*(9*s13^3 - 208*s13^2*s23 + 375*s13*s23^2 + 
                    97*s23^3) + s12^4*(9*s13^4 + 159*s13^3*s23 + 84*s13^2*
                     s23^2 + 145*s13*s23^3 + 10*s23^4) + s12^3*s13*
                   (-9*s13^4 + 112*s13^3*s23 - 442*s13^2*s23^2 + 26*s13*
                     s23^3 + 80*s23^4)) + p3q*(-135*s12^7*s23 - 10*s13^4*
                   s23^3*(s13 + s23) + s12^6*(9*s13^2 - 440*s13*s23 - 
                    260*s23^2) + 5*s12*s13^3*s23^2*(s13^2 - 15*s13*s23 - 
                    16*s23^2) + s12^2*s13^3*s23*(82*s13^2 - 213*s13*s23 + 
                    38*s23^2) + s12^5*(9*s13^3 - 59*s13^2*s23 - 375*s13*
                     s23^2 - 115*s23^3) + s12^4*(-9*s13^4 + 690*s13^3*s23 + 
                    363*s13^2*s23^2 + 145*s13*s23^3 + 10*s23^4) + s12^3*s13*
                   (-9*s13^4 + 526*s13^3*s23 + 224*s13^2*s23^2 + 161*s13*
                     s23^3 + 80*s23^4))) - 2*p1q*(p3q^4*s12^2*s23*
                 (5*s12^6*(2*s13 - 25*s23) - 55*s13^4*s23^2*(s13 + s23) + 
                  s12^5*(238*s13^2 - 240*s13*s23 - 250*s23^2) - 5*s12*s13^3*
                   s23*(17*s13^2 + 15*s13*s23 - 11*s23^2) + s12^2*s13^3*
                   (100*s13^2 - 285*s13*s23 + 173*s23^2) + s12^4*(546*s13^3 + 
                    282*s13^2*s23 - 125*s13*s23^2 - 125*s23^3) + s12^3*s13*
                   (418*s13^3 + 197*s13^2*s23 + 314*s13*s23^2 + 125*s23^3)) + 
                p2q^4*s13^2*(125*s13^4*s23^3*(s13 + s23) + 5*s12^6*s23*
                   (2*s13 + 11*s23) + s12^2*s13^3*s23*(118*s13^2 - 303*s13*
                     s23 - 250*s23^2) + s12*s13^3*s23^2*(122*s13^2 + 
                    132*s13*s23 - 125*s23^2) + s12^5*(72*s13^3 + 112*s13^2*
                     s23 + 111*s13*s23^2 + 110*s23^3) + s12^3*s13*(72*s13^4 + 
                    400*s13^3*s23 - 613*s13^2*s23^2 - 325*s13*s23^3 - 
                    55*s23^4) + s12^4*(144*s13^4 + 384*s13^3*s23 - 132*s13^2*
                     s23^2 + 46*s13*s23^3 + 55*s23^4)) + p2q^3*p3q*s13*
                 (250*s13^5*s23^3*(s13 + s23) + 10*s12^7*s23*(-2*s13 + 
                    7*s23) + 2*s12*s13^4*s23^2*(122*s13^2 + 97*s13*s23 - 
                    160*s23^2) - s12^4*s13*s23*(572*s13^3 + 496*s13^2*s23 + 
                    95*s13*s23^2 - 40*s23^3) + s12^2*s13^3*s23*(200*s13^3 - 
                    625*s13^2*s23 - 503*s13*s23^2 + 70*s23^3) + 
                  s12^6*(-144*s13^3 - 636*s13^2*s23 + 221*s13*s23^2 + 
                    140*s23^3) + s12^3*s13^2*(72*s13^4 + 420*s13^3*s23 - 
                    764*s13^2*s23^2 - 699*s13*s23^3 - 110*s23^4) + 
                  s12^5*(-216*s13^4 - 1408*s13^3*s23 - 450*s13^2*s23^2 + 
                    281*s13*s23^3 + 70*s23^4)) + p2q^2*p3q^2*
                 (5*s12^8*(2*s13 - 25*s23)*s23 + 125*s13^6*s23^3*(s13 + 
                    s23) + s12*s13^5*s23^2*(122*s13^2 - 8*s13*s23 - 
                    265*s23^2) - 2*s12^3*s13^4*s23*(63*s13^2 - 167*s13*s23 + 
                    231*s23^2) + 2*s12^7*(36*s13^3 + 108*s13^2*s23 - 
                    50*s13*s23^2 - 125*s23^3) + s12^6*s23*(-630*s13^3 + 
                    541*s13^2*s23 + 155*s13*s23^2 - 125*s23^3) + s12^2*s13^4*
                   s23*(100*s13^3 - 323*s13^2*s23 - 347*s13*s23^2 + 
                    85*s23^3) - s12^4*s13^2*(144*s13^4 + 1800*s13^3*s23 + 
                    737*s13^2*s23^2 + 119*s13*s23^3 + 85*s23^4) + s12^5*s13*
                   (-216*s13^4 - 2410*s13^3*s23 - 1000*s13^2*s23^2 + 
                    510*s13*s23^3 + 265*s23^4)) + p2q*p3q^3*s12*
                 (10*s12^7*(2*s13 - 25*s23)*s23 - 70*s13^5*s23^3*(s13 + 
                    s23) - s12*s13^4*s23^2*(19*s13^2 + 149*s13*s23 + 
                    40*s23^2) + s12^6*(72*s13^3 + 492*s13^2*s23 - 410*s13*
                     s23^2 - 500*s23^3) - s12^3*s13^2*s23*(780*s13^3 + 
                    658*s13^2*s23 - 195*s13*s23^2 + 70*s23^3) + s12^2*s13^3*
                   s23*(-200*s13^3 + 364*s13^2*s23 - 163*s13*s23^2 + 
                    110*s23^3) + s12^5*(144*s13^4 + 616*s13^3*s23 + 
                    675*s13^2*s23^2 - 110*s13*s23^3 - 250*s23^4) + 
                  s12^4*s13*(72*s13^4 - 436*s13^3*s23 - 206*s13^2*s23^2 + 
                    653*s13*s23^3 + 320*s23^4))) + p1q^2*s23*(
                -(p2q^3*s13*(s12^6*(272*s13^2 - 20*s13*s23 + 50*s23^2) + 
                   10*s13^4*s23*(9*s13^3 + 7*s13^2*s23 - 25*s13*s23^2 - 
                     23*s23^3) + s12^5*(710*s13^3 - 460*s13^2*s23 + 
                     109*s13*s23^2 + 100*s23^3) + s12^2*s13^3*(38*s13^3 - 
                     1420*s13^2*s23 + 1045*s13*s23^2 + 271*s23^3) + 
                   s12^3*s13*(-82*s13^4 - 2412*s13^3*s23 + 983*s13^2*s23^2 + 
                     380*s13*s23^3 - 50*s23^4) + s12^4*(426*s13^4 - 
                     1494*s13^3*s23 - 163*s13^2*s23^2 + 79*s13*s23^3 + 
                     50*s23^4) + 2*s12*s13^3*(54*s13^4 + 14*s13^3*s23 - 
                     247*s13^2*s23^2 - 182*s13*s23^3 + 115*s23^4))) + 
                p2q^2*p3q*(s12^7*(472*s13^2 + 80*s13*s23 - 230*s23^2) + 
                  20*s13^5*s23^2*(s13^2 + 24*s13*s23 + 23*s23^2) + 
                  2*s12^6*(979*s13^3 + 1214*s13^2*s23 - 220*s13*s23^2 - 
                    230*s23^3) + 2*s12*s13^4*s23*(175*s13^3 + 399*s13^2*s23 + 
                    289*s13*s23^2 - 205*s23^3) + s12^5*(1978*s13^4 + 
                    6596*s13^3*s23 + 1881*s13^2*s23^2 - 390*s13*s23^3 - 
                    230*s23^4) + s12^2*s13^3*(268*s13^4 + 1534*s13^3*s23 - 
                    3185*s13^2*s23^2 - 829*s13*s23^3 - 50*s23^4) + 
                  s12^3*s13^2*(14*s13^4 + 1490*s13^3*s23 - 3523*s13^2*s23^2 - 
                    448*s13*s23^3 + 100*s23^4) + s12^4*s13*(238*s13^4 + 
                    4554*s13^3*s23 + 1319*s13^2*s23^2 + 565*s13*s23^3 + 
                    130*s23^4)) + p3q^3*s12*(90*s12^8 + 160*s12^7*
                   (s13 + s23) + 50*s13^4*s23^3*(s13 + s23) + s12*s13^3*s23^2*
                   (-23*s13^2 + 17*s13*s23 - 50*s23^2) - 2*s12^6*(283*s13^2 + 
                    55*s13*s23 + 90*s23^2) + 3*s12^2*s13^3*s23*(136*s13^2 - 
                    315*s13*s23 + 104*s23^2) - 2*s12^5*(681*s13^3 - 
                    23*s13^2*s23 + 445*s13*s23^2 + 240*s23^3) + 
                  s12^4*(-836*s13^4 + 2258*s13^3*s23 + 671*s13^2*s23^2 - 
                    390*s13*s23^3 - 230*s23^4) + s12^3*s13*(-110*s13^4 + 
                    2350*s13^3*s23 + 55*s13^2*s23^2 + 419*s13*s23^3 + 
                    230*s23^4)) + p2q*p3q^2*(230*s13^5*s23^3*(s13 + s23) - 
                  10*s12^8*(29*s13 + 2*s23) + 2*s12*s13^4*s23^2*(62*s13^2 + 
                    132*s13*s23 - 65*s23^2) - 4*s12^7*(208*s13^2 + 165*s13*
                     s23 + 125*s23^2) + 2*s12^6*(371*s13^3 + 984*s13^2*s23 - 
                    730*s13*s23^2 - 470*s23^3) - s12^2*s13^3*s23*(192*s13^3 + 
                    2091*s13^2*s23 + 541*s13*s23^2 + 100*s23^3) + 
                  s12^5*(2770*s13^4 + 8916*s13^3*s23 + 2733*s13^2*s23^2 - 
                    680*s13*s23^3 - 460*s23^4) + s12^3*s13^2*(-50*s13^4 - 
                    28*s13^3*s23 - 3287*s13^2*s23^2 + 244*s13*s23^3 + 
                    50*s23^4) + s12^4*s13*(1436*s13^4 + 6472*s13^3*s23 + 
                    1409*s13^2*s23^2 + 1063*s13*s23^3 + 410*s23^4))) + 
              p1q^3*s23*(-(p3q^2*(270*s12^8*s23 + 70*s13^4*s23^4*(s13 + 
                     s23) + 2*s12*s13^3*s23^3*(34*s13^2 + 44*s13*s23 - 
                     35*s23^2) + 18*s12^2*s13^3*s23^2*(16*s13^2 - 8*s13*s23 + 
                     17*s23^2) + s12^7*(-9*s13^2 + 680*s13*s23 + 500*s23^2) + 
                   s12^6*(-9*s13^3 - 871*s13^2*s23 + 170*s13*s23^2 + 
                     120*s23^3) + s12^5*(9*s13^4 - 2814*s13^3*s23 - 
                     1408*s13^2*s23^2 - 970*s13*s23^3 - 180*s23^4) + 
                   2*s12^3*s13*s23*(-83*s13^4 + 1114*s13^3*s23 - 23*s13^2*
                      s23^2 + 35*s13*s23^3 + 35*s23^4) + s12^4*(9*s13^5 - 
                     1699*s13^4*s23 + 898*s13^3*s23^2 - 116*s13^2*s23^3 - 
                     390*s13*s23^4 - 70*s23^5))) + p2q^2*(10*s13^4*s23^2*
                   (27*s13^3 + 23*s13^2*s23 - 11*s13*s23^2 - 7*s23^3) + 
                  s12^6*(-32*s13^2*s23 + 20*s13*s23^2 + 70*s23^3) + 
                  s12^2*s13^3*(-9*s13^4 + 265*s13^3*s23 - 2114*s13^2*s23^2 + 
                    290*s13*s23^3 + 14*s23^4) + 2*s12*s13^3*s23*(162*s13^4 + 
                    172*s13^3*s23 - 299*s13^2*s23^2 - 184*s13*s23^3 + 
                    35*s23^4) + s12^5*(9*s13^4 + 1006*s13^3*s23 - 176*s13^2*
                     s23^2 + 200*s13*s23^3 + 140*s23^4) + s12^3*s13*
                   (-9*s13^5 + 682*s13^4*s23 - 1776*s13^3*s23^2 + 466*s13^2*
                     s23^3 + 250*s13*s23^4 - 70*s23^5) + s12^4*(9*s13^5 + 
                    1779*s13^4*s23 + 180*s13^3*s23^2 + 286*s13^2*s23^3 + 
                    110*s13*s23^4 + 70*s23^5)) + 2*p2q*p3q*(10*s12^7*s23*
                   (11*s13 + 2*s23) - 10*s13^4*s23^3*(2*s13^2 + 9*s13*s23 + 
                    7*s23^2) - 2*s12*s13^3*s23^2*(85*s13^3 + 189*s13^2*s23 + 
                    114*s13*s23^2 - 35*s23^3) - 2*s12^2*s13^3*s23*(26*s13^3 + 
                    650*s13^2*s23 - 95*s13*s23^2 + 73*s23^3) + s12^6*
                   (-9*s13^3 + 874*s13^2*s23 + 420*s13*s23^2 + 110*s23^3) + 
                  s12^5*(-9*s13^4 + 2081*s13^3*s23 + 832*s13^2*s23^2 + 
                    630*s13*s23^3 + 160*s23^4) + s12^3*s13*(9*s13^5 + 
                    613*s13^4*s23 - 1822*s13^3*s23^2 + 256*s13^2*s23^3 + 
                    90*s13*s23^4 - 70*s23^5) + s12^4*(9*s13^5 + 1982*s13^4*
                     s23 - 296*s13^3*s23^2 + 228*s13^2*s23^3 + 250*s13*
                     s23^4 + 70*s23^5)))))/(36*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)*s23^2*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) - (-9*p1q^6*(s12 + s13)*s23^4*(60*s12^6*s23 - 60*
                s13^4*s23^2*(s13 + s23) - 4*s12*s13^3*s23*(28*s13^2 + 
                 53*s13*s23 + 10*s23^2) + 5*s12^5*(s13^2 + 40*s13*s23 + 
                 24*s23^2) - s12^2*s13^3*(5*s13^2 + 161*s13*s23 + 84*s23^2) + 
               s12^3*s13*(-5*s13^3 - 32*s13^2*s23 + 52*s13*s23^2 + 
                 40*s23^3) + s12^4*(5*s13^3 + 157*s13^2*s23 + 240*s13*s23^2 + 
                 60*s23^3)) + 9*(p2q + p3q)^2*(s12 + s13)*(p3q*s12 - p2q*s13)^
               2*(s12 + s13 + s23)*(p3q^2*s12*s23*(60*s12^6 + 40*s13^5*s23 + 
                 20*s12^5*(7*s13 + 3*s23) + s12*s13^4*(-17*s13 + 22*s23) - 
                 s12^2*s13^3*(21*s13 + 40*s23) + s12^4*s13*(77*s13 + 
                   40*s23) - s12^3*s13^2*(79*s13 + 42*s23)) + 2*p2q*p3q*
                (30*s12^7*s23 - 46*s12*s13^6*s23 - 30*s13^6*s23^2 + 
                 10*s12^6*s23*(4*s13 + 3*s23) + 5*s12^5*s13^2*(16*s13 + 
                   5*s23) + s12^2*s13^4*s23*(39*s13 + 68*s23) + s12^3*s13^4*
                  (80*s13 + 107*s23) + s12^4*s13^2*(160*s13^2 - 35*s13*s23 - 
                   68*s23^2)) + p2q^2*s13*(-60*s12^6*s23 - 60*s13^5*s23^2 - 
                 4*s12*s13^4*s23*(23*s13 + 10*s23) + 3*s12^2*s13^3*s23*
                  (33*s13 + 14*s23) + s12^5*(160*s13^2 - 31*s13*s23 - 
                   40*s23^2) + s12^4*s13*(320*s13^2 + 5*s13*s23 - 22*s23^2) + 
                 s12^3*s13^2*(160*s13^2 + 239*s13*s23 + 40*s23^2))) + 
             p1q^5*s23^3*(p3q*(2160*s12^8*s23 - 20*s13^5*s23^2*(27*s13^2 + 
                   23*s13*s23 - 4*s23^2) + s12^7*(297*s13^2 + 9360*s13*s23 + 
                   4240*s23^2) - 4*s12*s13^4*s23*(252*s13^3 + 927*s13^2*s23 + 
                   310*s13*s23^2 - 190*s23^3) + s12^6*(2097*s13^3 + 
                   15723*s13^2*s23 + 11880*s13*s23^2 + 2000*s23^3) - 
                 s12^2*s13^3*(207*s13^4 + 6741*s13^3*s23 + 10568*s13^2*
                    s23^2 + 256*s13*s23^3 - 960*s23^4) + s12^3*s13^2*
                  (585*s13^4 - 9684*s13^3*s23 - 7318*s13^2*s23^2 + 
                   772*s13*s23^3 - 960*s23^4) + 2*s12^4*s13*(1647*s13^4 - 
                   171*s13^3*s23 + 1810*s13^2*s23^2 + 4*s13*s23^3 - 
                   380*s23^4) + 2*s12^5*(2151*s13^4 + 6066*s13^3*s23 + 
                   6237*s13^2*s23^2 + 880*s13*s23^3 - 40*s23^4)) + p2q*
                (540*s12^8*s23 - 80*s13^5*s23^2*(27*s13^2 + 26*s13*s23 - 
                   s23^2) + s12^7*(207*s13^2 + 3420*s13*s23 + 1000*s23^2) - 
                 4*s12*s13^4*s23*(963*s13^3 + 2403*s13^2*s23 + 670*s13*
                    s23^2 - 190*s23^3) + s12^6*(-585*s13^3 + 9873*s13^2*s23 + 
                   4500*s13*s23^2 + 380*s23^3) + s12^5*(-3294*s13^4 + 
                   8172*s13^3*s23 + 10854*s13^2*s23^2 + 320*s13*s23^3 - 
                   80*s23^4) - 2*s12^4*s13*(2151*s13^4 + 1701*s13^3*s23 - 
                   3556*s13^2*s23^2 - 634*s13*s23^3 + 380*s23^4) - 
                 s12^3*s13^2*(2097*s13^4 + 10188*s13^3*s23 + 2026*s13^2*
                    s23^2 - 2932*s13*s23^3 + 960*s23^4) + s12^2*s13^3*
                  (-297*s13^4 - 9459*s13^3*s23 - 10532*s13^2*s23^2 + 
                   1004*s13*s23^3 + 960*s23^4))) + p1q^2*s23*(-2*p2q^3*p3q*
                (s12^9*(729*s13^2 + 80*s13*s23 - 730*s23^2) + 2*s12^8*
                  (243*s13^3 + 684*s13^2*s23 - 1420*s13*s23^2 - 730*s23^3) + 
                 10*s13^7*s23*(-27*s13^3 - 19*s13^2*s23 + 381*s13*s23^2 + 
                   373*s23^3) + s12^2*s13^5*(-270*s13^4 + 5173*s13^3*s23 + 
                   21542*s13^2*s23^2 + 5103*s13*s23^3 - 3230*s23^4) + 
                 s12^3*s13^4*(2547*s13^4 + 10295*s13^3*s23 - 948*s13^2*
                    s23^2 - 21016*s13*s23^3 - 1510*s23^4) + s12^5*s13^2*
                  (2457*s13^4 - 43406*s13^3*s23 - 49408*s13^2*s23^2 - 
                   7172*s13*s23^3 + 230*s23^4) - s12^7*(1863*s13^4 + 
                   9179*s13^3*s23 + 6354*s13^2*s23^2 + 4530*s13*s23^3 + 
                   730*s23^4) + 2*s12^4*s13^3*(2439*s13^4 - 6145*s13^3*s23 - 
                   21996*s13^2*s23^2 - 8791*s13*s23^3 + 995*s23^4) - 
                 s12^6*s13*(1638*s13^4 + 36605*s13^3*s23 + 22544*s13^2*
                    s23^2 + 6183*s13*s23^3 + 1610*s23^4) + 2*s12*s13^6*
                  (-207*s13^4 - 207*s13^3*s23 + 4060*s13^2*s23^2 + 
                   7555*s13*s23^3 + 2005*s23^4)) + p2q^4*s13*
                (10*s12^8*(297*s13^2 + 8*s13*s23 + 38*s23^2) + 20*s13^6*s23*
                  (27*s13^3 + 23*s13^2*s23 - 154*s13*s23^2 - 150*s23^3) + 
                 s12^7*(7740*s13^3 + 11312*s13^2*s23 + 1621*s13*s23^2 + 
                   940*s23^3) + 4*s12*s13^5*(207*s13^4 + 567*s13^3*s23 - 
                   1402*s13^2*s23^2 - 3017*s13*s23^3 - 740*s23^4) + 
                 2*s12^5*s13*(-6984*s13^4 + 15335*s13^3*s23 + 19926*s13^2*
                    s23^2 + 3050*s13*s23^3 + 191*s23^4) + s12^6*(1494*s13^4 + 
                   34074*s13^3*s23 + 16319*s13^2*s23^2 + 2103*s13*s23^3 + 
                   560*s23^4) - 2*s12^4*s13^2*(8271*s13^4 + 1643*s13^3*s23 - 
                   16973*s13^2*s23^2 - 6783*s13*s23^3 + 669*s23^4) + 
                 s12^3*s13^3*(-5256*s13^4 - 15882*s13^3*s23 - 685*s13^2*
                    s23^2 + 16744*s13*s23^3 + 858*s23^4) + s12^2*s13^4*
                  (1422*s13^4 - 3040*s13^3*s23 - 16573*s13^2*s23^2 - 
                   2169*s13*s23^3 + 2618*s23^4)) - p3q^4*s12*(540*s12^10 + 
                 560*s13^6*s23^3*(s13 + s23) + 20*s12^9*(117*s13 + 50*s23) + 
                 4*s12^8*(1224*s13^2 + 520*s13*s23 - 655*s23^2) + 
                 s12*s13^5*s23^2*(2249*s13^2 + 3031*s13*s23 + 382*s23^2) + 
                 s12^2*s13^4*s23*(3150*s13^3 + 13163*s13^2*s23 + 4676*s13*
                    s23^2 - 1338*s23^3) + 20*s12^7*(108*s13^3 - 162*s13^2*
                    s23 - 587*s13*s23^2 - 304*s23^3) + 2*s12^3*s13^3*
                  (-954*s13^4 + 5759*s13^3*s23 + 13017*s13^2*s23^2 + 
                   1687*s13*s23^3 + 429*s23^4) + 2*s12^4*s13^2*(-4482*s13^4 + 
                   5277*s13^3*s23 + 7570*s13^2*s23^2 + 400*s13*s23^3 + 
                   1309*s23^4) - s12^5*s13*(14976*s13^4 + 6542*s13^3*s23 + 
                   14211*s13^2*s23^2 + 10025*s13*s23^3 + 2960*s23^4) - 
                 s12^6*(8856*s13^4 + 13048*s13^3*s23 + 23999*s13^2*s23^2 + 
                   14440*s13*s23^3 + 3000*s23^4)) - 2*p2q*p3q^3*(270*s12^11 + 
                 730*s13^7*s23^3*(s13 + s23) + 20*s12^10*(18*s13 + 23*s23) + 
                 2*s12*s13^6*s23^2*(671*s13^2 + 1801*s13*s23 + 805*s23^2) - 
                 s12^9*(423*s13^2 + 990*s13*s23 + 3620*s23^2) + s12^2*s13^5*
                  s23*(117*s13^3 + 5778*s13^2*s23 + 4633*s13*s23^2 - 
                   230*s23^3) - 2*s12^8*(1242*s13^3 + 3380*s13^2*s23 + 
                   7685*s13*s23^2 + 3770*s23^3) + s12^6*s13*(2556*s13^4 - 
                   1729*s13^3*s23 - 20076*s13^2*s23^2 - 15437*s13*s23^3 - 
                   4010*s23^4) + s12^3*s13^4*(-369*s13^4 + 1577*s13^3*s23 + 
                   9946*s13^2*s23^2 - 892*s13*s23^3 - 1990*s23^4) + 
                 2*s12^4*s13^3*(360*s13^4 + 3380*s13^3*s23 + 6662*s13^2*
                    s23^2 - 285*s13*s23^3 + 755*s23^4) + s12^5*s13^2*
                  (3915*s13^4 + 9410*s13^3*s23 + 4216*s13^2*s23^2 - 
                   1568*s13*s23^3 + 3230*s23^4) - s12^7*(2241*s13^4 + 
                   11149*s13^3*s23 + 29524*s13^2*s23^2 + 18030*s13*s23^3 + 
                   3730*s23^4)) + 2*p2q^2*p3q^2*(10*s12^10*(81*s13 + 4*s23) - 
                 40*s13^7*s23^2*(s13^2 + 75*s13*s23 + 74*s23^2) + 
                 2*s12^9*(1071*s13^2 + 975*s13*s23 + 1520*s23^2) - 
                 2*s12*s13^6*s23*(360*s13^3 + 3329*s13^2*s23 + 6199*s13*
                    s23^2 + 1930*s23^3) + s12^8*(1593*s13^3 + 4398*s13^2*
                    s23 + 12150*s13*s23^2 + 5960*s23^3) + s12^4*s13^3*
                  (1719*s13^4 + 9602*s13^3*s23 + 25380*s13^2*s23^2 + 
                   13056*s13*s23^3 - 2402*s23^4) - s12^2*s13^5*(441*s13^4 + 
                   4436*s13^3*s23 + 18575*s13^2*s23^2 + 7136*s13*s23^3 - 
                   2342*s23^4) + 2*s12^3*s13^4*(225*s13^4 - 2510*s13^3*s23 - 
                   2036*s13^2*s23^2 + 7937*s13*s23^3 + 1201*s23^4) + 
                 s12^7*(-4194*s13^4 + 10812*s13^3*s23 + 23734*s13^2*s23^2 + 
                   14870*s13*s23^3 + 2960*s23^4) + s12^6*s13*(-9153*s13^4 + 
                   21356*s13^3*s23 + 29353*s13^2*s23^2 + 15556*s13*s23^3 + 
                   3860*s23^4) + s12^5*(-3870*s13^6 + 23938*s13^5*s23 + 
                   34168*s13^4*s23^2 + 6090*s13^3*s23^3 - 2342*s13^2*
                    s23^4))) + p1q*(p2q + p3q)*(p3q^4*s12^2*s23*
                (-2080*s12^8*s23 - 260*s13^6*s23^2*(s13 + s23) + 2*s12*s13^5*
                  s23*(657*s13^2 + 49*s13*s23 - 438*s23^2) - 10*s12^7*
                  (135*s13^2 + 820*s13*s23 + 416*s23^2) + s12^5*s13*
                  (3636*s13^3 - 6014*s13^2*s23 - 7807*s13*s23^2 - 
                   2760*s23^3) + s12^2*s13^4*(1962*s13^3 + 7031*s13^2*s23 + 
                   1397*s13*s23^2 - 496*s23^3) + 3*s12^3*s13^3*(2598*s13^3 + 
                   4492*s13^2*s23 + 1355*s13*s23^2 + 612*s23^3) + 
                 s12^4*s13^2*(10260*s13^3 + 9098*s13^2*s23 + 2667*s13*s23^2 + 
                   1036*s23^3) - s12^6*(2142*s13^3 + 13473*s13^2*s23 + 
                   10960*s13*s23^2 + 2080*s23^3)) + p2q^4*s13^2*
                (620*s12^8*s23^2 + 2080*s13^6*s23^3*(s13 + s23) + 
                 4*s12*s13^5*s23^2*(873*s13^2 + 2063*s13*s23 + 690*s23^2) + 
                 s12^2*s13^4*s23*(1350*s13^3 + 5447*s13^2*s23 + 1343*s13*
                    s23^2 - 1036*s23^3) + 2*s12^7*(720*s13^3 - 2745*s13^2*
                    s23 + 769*s13*s23^2 + 440*s23^3) + 3*s12^3*s13^3*
                  (480*s13^4 + 402*s13^3*s23 - 3518*s13^2*s23^2 - 4537*s13*
                    s23^3 - 612*s23^4) + s12^6*(5760*s13^4 - 19314*s13^3*
                    s23 - 7173*s13^2*s23^2 + 2054*s13*s23^3 + 260*s23^4) + 
                 s12^4*s13^2*(5760*s13^4 - 9972*s13^3*s23 - 30574*s13^2*
                    s23^2 - 10617*s13*s23^3 + 496*s23^4) + s12^5*s13*
                  (8640*s13^4 - 23652*s13^3*s23 - 26156*s13^2*s23^2 - 
                   1309*s13*s23^3 + 876*s23^4)) - p2q^2*p3q^2*
                (1540*s12^10*s23^2 - 1540*s13^8*s23^3*(s13 + s23) - 
                 4*s12*s13^7*s23^2*(666*s13^2 + 991*s13*s23 - 40*s23^2) + 
                 s12^3*s13^5*s23*(3582*s13^3 + 18968*s13^2*s23 + 14529*s13*
                    s23^2 - 352*s23^3) + s12^2*s13^6*s23*(-666*s13^3 - 
                   3287*s13^2*s23 + 3773*s13*s23^2 + 2904*s23^3) + 
                 s12^9*(-1440*s13^3 + 666*s13^2*s23 + 2940*s13*s23^2 + 
                   3080*s23^3) + s12^4*s13^5*(2880*s13^3 + 27918*s13^2*s23 + 
                   48575*s13*s23^2 + 10072*s23^3) + s12^6*s13^2*
                  (11520*s13^4 + 45234*s13^3*s23 + 9047*s13^2*s23^2 - 
                   6933*s13*s23^3 - 2904*s23^4) + s12^7*s13*(2880*s13^4 + 
                   14634*s13^3*s23 + 660*s13^2*s23^2 + 131*s13*s23^3 - 
                   160*s23^4) + 2*s12^5*s13^3*(5040*s13^4 + 27711*s13^3*s23 + 
                   20576*s13^2*s23^2 - 868*s13*s23^3 + 176*s23^4) + 
                 s12^8*(-2880*s13^4 + 1818*s13^3*s23 + 5181*s13^2*s23^2 + 
                   2780*s13*s23^3 + 1540*s23^4)) + 2*p2q^3*p3q*s13*
                (460*s12^9*s23^2 + 1810*s13^7*s23^3*(s13 + s23) + 
                 2*s12*s13^6*s23^2*(1539*s13^2 + 3194*s13*s23 + 790*s23^2) + 
                 2*s12^2*s13^5*s23*(333*s13^3 + 2359*s13^2*s23 - 282*s13*
                    s23^2 - 1106*s23^3) + s12^8*(-1440*s13^3 + 198*s13^2*
                    s23 + 549*s13*s23^2 + 740*s23^3) + s12^3*s13^4*
                  (720*s13^4 - 1584*s13^3*s23 - 10439*s13^2*s23^2 - 
                   11813*s13*s23^3 - 980*s23^4) - 2*s12^5*s13^2*(720*s13^4 + 
                   14904*s13^3*s23 + 11759*s13^2*s23^2 - 460*s13*s23^3 - 
                   100*s23^4) - 2*s12^6*s13*(2880*s13^4 + 11457*s13^3*s23 + 
                   2627*s13^2*s23^2 - 750*s13*s23^3 + 56*s23^4) + 
                 s12^7*(-5040*s13^4 - 6048*s13^3*s23 + 1619*s13^2*s23^2 + 
                   257*s13*s23^3 + 280*s23^4) + s12^4*s13^3*(1440*s13^4 - 
                   15390*s13^3*s23 - 28813*s13^2*s23^2 - 6438*s13*s23^3 + 
                   1594*s23^4)) - 2*p2q*p3q^3*s12*(1810*s12^9*s23^2 + 
                 280*s13^7*s23^3*(s13 + s23) + s12*s13^6*s23^2*(27*s13^2 + 
                   115*s13*s23 - 112*s23^2) + s12^2*s13^5*s23*(1314*s13^3 + 
                   2369*s13^2*s23 + 210*s13*s23^2 + 200*s23^3) + 
                 2*s12^3*s13^4*s23*(2826*s13^3 + 2813*s13^2*s23 + 938*s13*
                    s23^2 + 797*s23^3) + s12^8*(-720*s13^3 + 666*s13^2*s23 + 
                   6030*s13*s23^2 + 3620*s23^3) + s12^6*s13*(-4320*s13^4 - 
                   882*s13^3*s23 + 5483*s13^2*s23^2 + 4452*s13*s23^3 + 
                   1580*s23^4) + s12^7*(-2880*s13^4 + 468*s13^3*s23 + 
                   9890*s13^2*s23^2 + 7610*s13*s23^3 + 1810*s23^4) - 
                 s12^5*s13^2*(2880*s13^4 - 2520*s13^3*s23 + 73*s13^2*s23^2 + 
                   2329*s13*s23^3 + 2212*s23^4) + s12^4*(-720*s13^7 + 
                   7542*s13^6*s23 + 3398*s13^5*s23^2 + 6*s13^4*s23^3 - 
                   980*s13^3*s23^4))) + p1q^4*s23^2*
              (-(p3q^2*(3240*s12^9*s23 + 20*s13^5*s23^3*(4*s13^2 + 
                    27*s13*s23 + 23*s23^2) + 3*s12^8*(153*s13^2 + 4680*s13*
                     s23 + 2080*s23^2) + 4*s12*s13^4*s23^2*(-180*s13^3 + 
                    362*s13^2*s23 + 632*s13*s23^2 + 35*s23^3) + 
                  s12^7*(3924*s13^3 + 26703*s13^2*s23 + 16120*s13*s23^2 + 
                    2300*s23^3) + s12^6*(8604*s13^4 + 23211*s13^3*s23 + 
                    16524*s13^2*s23^2 - 1540*s13*s23^3 - 1160*s23^4) - 
                  10*s12^2*s13^3*s23*(279*s13^4 + 452*s13^3*s23 - 697*s13^2*
                     s23^2 - 346*s13*s23^3 + 60*s23^4) + s12^5*(6858*s13^5 - 
                    2709*s13^4*s23 + 312*s13^3*s23^2 - 9376*s13^2*s23^3 - 
                    3760*s13*s23^4 - 460*s23^5) - 2*s12^3*s13^2*(207*s13^5 + 
                    7929*s13^4*s23 + 7748*s13^3*s23^2 - 3292*s13^2*s23^3 - 
                    178*s13*s23^4 - 300*s23^5) + s12^4*s13*(1305*s13^5 - 
                    23085*s13^4*s23 - 15436*s13^3*s23^2 - 3906*s13^2*s23^3 - 
                    4836*s13*s23^4 - 140*s23^5))) + p2q^2*(20*s12^8*s23*
                  (-27*s13 + 4*s23) + 20*s13^5*s23^2*(162*s13^3 + 150*s13^2*
                    s23 - 35*s13*s23^2 - 23*s23^3) + s12^7*(-414*s13^3 - 
                   4320*s13^2*s23 + 60*s13*s23^2 + 620*s23^3) + 4*s12*s13^4*
                  s23*(1377*s13^4 + 3537*s13^3*s23 + 388*s13^2*s23^2 - 
                   972*s13*s23^3 - 35*s23^4) + s12^6*(1305*s13^4 - 
                   14616*s13^3*s23 - 1944*s13^2*s23^2 + 2860*s13*s23^3 + 
                   1000*s23^4) + s12^3*s13^2*(3924*s13^5 + 12465*s13^4*s23 - 
                   7420*s13^3*s23^2 - 13428*s13^2*s23^3 + 3484*s13*s23^4 - 
                   600*s23^5) + s12^4*s13*(8604*s13^5 + 1755*s13^4*s23 - 
                   18932*s13^3*s23^2 + 1150*s13^2*s23^3 + 4436*s13*s23^4 + 
                   140*s23^5) + s12^5*(6858*s13^5 - 14085*s13^4*s23 - 
                   14204*s13^3*s23^2 + 7852*s13^2*s23^3 + 2400*s13*s23^4 + 
                   460*s23^5) + s12^2*s13^3*(459*s13^5 + 12969*s13^4*s23 + 
                   12732*s13^3*s23^2 - 11062*s13^2*s23^3 - 3860*s13*s23^4 + 
                   600*s23^5)) - 2*p2q*p3q*(810*s12^9*s23 + s12^8*
                  (207*s13^2 + 3780*s13*s23 + 1460*s23^2) + s12^7*
                  (-513*s13^3 + 9531*s13^2*s23 + 3350*s13*s23^2 + 30*s23^3) + 
                 10*s13^5*s23^2*(-81*s13^3 - 65*s13^2*s23 + 62*s13*s23^2 + 
                   46*s23^3) + s12^6*(-1647*s13^4 + 9936*s13^3*s23 + 
                   5022*s13^2*s23^2 - 3370*s13*s23^3 - 1080*s23^4) + 
                 s12^5*s23*(3177*s13^4 + 4990*s13^3*s23 - 8398*s13^2*s23^2 - 
                   3080*s13*s23^3 - 460*s23^4) - 2*s12*s13^4*s23*(711*s13^4 + 
                   2061*s13^3*s23 - 559*s13^2*s23^2 - 1604*s13*s23^3 - 
                   70*s23^4) + s12^4*s13*(1647*s13^5 - 3177*s13^4*s23 + 
                   4934*s13^3*s23^2 - 1952*s13^2*s23^3 - 4636*s13*s23^4 - 
                   140*s23^5) - s12^2*s13^3*(207*s13^5 + 6651*s13^4*s23 + 
                   7798*s13^3*s23^2 - 8800*s13^2*s23^3 - 3660*s13*s23^4 + 
                   600*s23^5) + s12^3*s13^2*(513*s13^5 - 8208*s13^4*s23 - 
                   1410*s13^3*s23^2 + 9430*s13^2*s23^3 - 1564*s13*s23^4 + 
                   600*s23^5))) - p1q^3*s23*(-(p3q^3*(2160*s12^10*s23 + 
                  460*s13^6*s23^4*(s13 + s23) + 4*s12*s13^5*s23^3*
                   (292*s13^2 + 677*s13*s23 + 290*s23^2) + 3*s12^9*
                   (69*s13^2 + 3120*s13*s23 + 1360*s23^2) + s12^8*
                   (1917*s13^3 + 19089*s13^2*s23 + 9560*s13*s23^2 - 
                    240*s23^3) + 3*s12^2*s13^4*s23^2*(336*s13^3 + 2845*s13^2*
                     s23 + 1891*s13*s23^2 - 180*s23^3) + s12^3*s13^3*s23*
                   (-3690*s13^4 + 2372*s13^3*s23 + 21470*s13^2*s23^2 + 
                    3809*s13*s23^3 - 840*s23^4) + 6*s12^7*(717*s13^4 + 
                    2394*s13^3*s23 + 798*s13^2*s23^2 - 1380*s13*s23^3 - 
                    680*s23^4) - s12^4*s13^2*(207*s13^5 + 19089*s13^4*s23 + 
                    7082*s13^3*s23^2 - 12900*s13^2*s23^3 + 1697*s13*s23^4 - 
                    2200*s23^5) + s12^6*(3474*s13^5 - 12960*s13^4*s23 - 
                    14502*s13^3*s23^2 - 23303*s13^2*s23^3 - 9720*s13*s23^4 - 
                    1920*s23^5) + s12^5*s13*(675*s13^5 - 30834*s13^4*s23 - 
                    20960*s13^3*s23^2 - 15170*s13^2*s23^3 - 8929*s13*s23^4 - 
                    1240*s23^5))) + p2q^3*(2*s12^8*s23*(351*s13^2 + 
                   80*s13*s23 + 230*s23^2) + 240*s13^6*s23^2*(9*s13^3 + 
                   8*s13^2*s23 - 9*s13*s23^2 - 8*s23^3) + 4*s12*s13^5*s23*
                  (873*s13^4 + 2313*s13^3*s23 - 793*s13^2*s23^2 - 2303*s13*
                    s23^3 - 310*s23^4) + s12^7*(-207*s13^4 + 612*s13^3*s23 + 
                   4758*s13^2*s23^2 + 2420*s13*s23^3 + 920*s23^4) + 
                 s12^3*s13^3*(1917*s13^5 + 198*s13^4*s23 - 22394*s13^3*
                    s23^2 - 17550*s13^2*s23^3 + 9455*s13*s23^4 - 840*s23^5) + 
                 s12^4*s13^2*(4302*s13^5 - 13878*s13^4*s23 - 23566*s13^3*
                    s23^2 + 13152*s13^2*s23^3 + 9721*s13*s23^4 - 540*s23^5) + 
                 s12^6*(675*s13^5 - 7605*s13^4*s23 + 13248*s13^3*s23^2 + 
                   11477*s13^2*s23^3 + 3420*s13*s23^4 + 460*s23^5) + 
                 s12^5*s13*(3474*s13^5 - 17694*s13^4*s23 + 2264*s13^3*s23^2 + 
                   25018*s13^2*s23^3 + 6481*s13*s23^4 + 1160*s23^5) + 
                 s12^2*s13^4*(207*s13^5 + 7389*s13^4*s23 + 3174*s13^3*s23^2 - 
                   21589*s13^2*s23^3 - 4545*s13*s23^4 + 2200*s23^5)) + p2q*
                p3q^2*(-1620*s12^10*s23 - 40*s13^6*s23^3*(4*s13^2 + 
                   75*s13*s23 + 71*s23^2) - s12^9*(207*s13^2 + 4860*s13*s23 + 
                   2840*s23^2) - 4*s12*s13^5*s23^2*(180*s13^3 + 2187*s13^2*
                    s23 + 3427*s13*s23^2 + 890*s23^3) + s12^8*(1089*s13^3 - 
                   8343*s13^2*s23 - 220*s13*s23^2 + 3480*s23^3) + 
                 4*s12^7*(1827*s13^4 - 297*s13^3*s23 + 2992*s13^2*s23^2 + 
                   5735*s13*s23^3 + 2250*s23^4) + s12^2*s13^4*s23*
                  (1188*s13^4 - 5234*s13^3*s23 - 35015*s13^2*s23^2 - 
                   14663*s13*s23^3 + 3280*s23^4) + s12^4*s13^2*(1557*s13^5 + 
                   21843*s13^4*s23 - 602*s13^3*s23^2 - 6168*s13^2*s23^3 + 
                   12727*s13*s23^4 - 4940*s23^5) + s12^3*s13^3*(-414*s13^5 + 
                   7434*s13^4*s23 - 11852*s13^3*s23^2 - 46350*s13^2*s23^3 + 
                   2225*s13*s23^4 + 840*s23^5) + s12^5*s13*(8865*s13^5 + 
                   31590*s13^4*s23 + 22524*s13^3*s23^2 + 43074*s13^2*s23^3 + 
                   23111*s13*s23^4 + 3640*s23^5) + s12^6*(12906*s13^5 + 
                   19908*s13^4*s23 + 29024*s13^3*s23^2 + 50075*s13^2*s23^3 + 
                   21940*s13*s23^4 + 4300*s23^5)) + p2q^2*p3q*
                (40*s12^9*s23*(27*s13 + 4*s23) + 20*s13^6*s23^2*(81*s13^3 + 
                   61*s13^2*s23 - 235*s13*s23^2 - 215*s23^3) + 
                 s12^8*(414*s13^3 + 2124*s13^2*s23 + 4280*s13*s23^2 + 
                   3160*s23^3) + 4*s12*s13^5*s23*(666*s13^4 + 1341*s13^3*
                    s23 - 3138*s13^2*s23^2 - 5053*s13*s23^3 - 910*s23^4) + 
                 s12^7*(-1557*s13^4 - 4896*s13^3*s23 + 14134*s13^2*s23^2 + 
                   15280*s13*s23^3 + 5840*s23^4) - s12^3*s13^3*(1089*s13^5 - 
                   1530*s13^4*s23 + 29822*s13^3*s23^2 + 42070*s13^2*s23^3 - 
                   15489*s13*s23^4 + 840*s23^5) + s12^6*(-8865*s13^5 - 
                   29817*s13^4*s23 + 19346*s13^3*s23^2 + 39113*s13^2*s23^3 + 
                   15640*s13*s23^4 + 2840*s23^5) - s12^4*s13^2*(7308*s13^5 + 
                   23616*s13^4*s23 + 37370*s13^3*s23^2 - 16356*s13^2*s23^3 - 
                   20751*s13*s23^4 + 3280*s23^5) + s12^5*s13*(-12906*s13^5 - 
                   44586*s13^4*s23 - 8484*s13^3*s23^2 + 53282*s13^2*s23^3 + 
                   20663*s13*s23^4 + 3560*s23^5) + s12^2*s13^4*(207*s13^5 + 
                   7101*s13^4*s23 - 2636*s13^3*s23^2 - 47205*s13^2*s23^3 - 
                   13535*s13*s23^4 + 4940*s23^5))))/(72*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12^3*s13^3*(s12 + s13)^2*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) + ((9*p2q^2*(s12^5*(16*s13 - s23) + 5*s13^4*s23*
                 (s13 + s23) + s12^4*(64*s13^2 + 21*s13*s23 - s23^2) + 
                2*s12^3*s13*(48*s13^2 + 33*s13*s23 + 7*s23^2) + s12*s13^2*
                 (16*s13^3 + 31*s13^2*s23 - 14*s13*s23^2 - 24*s23^3) + 
                2*s12^2*s13*(32*s13^3 + 35*s13^2*s23 - 2*s13*s23^2 + 
                  4*s23^3)) + 9*p2q*(p1q*(s12 - s13)*s23*(3*s12^4 + 
                  s12^3*(8*s13 - s23) + s12^2*(10*s13^2 - 25*s13*s23 - 
                    12*s23^2) + s12*(8*s13^3 - 23*s13^2*s23 - 48*s13*s23^2 - 
                    8*s23^3) + s13*(3*s13^3 + s13^2*s23 - 4*s13*s23^2 - 
                    8*s23^3)) + 2*p3q*(s13^4*s23*(s13 + s23) + s12^5*
                   (8*s13 + s23) + s12^4*(32*s13^2 + 21*s13*s23 + s23^2) + 
                  2*s12^3*s13*(24*s13^2 + 25*s13*s23 + 14*s23^2) + 
                  s12*s13^2*(8*s13^3 + 13*s13^2*s23 - 12*s13*s23^2 - 
                    16*s23^3) + 2*s12^2*s13*(16*s13^3 + 21*s13^2*s23 + 
                    7*s13*s23^2 + 8*s23^3))) - 9*s23*(p1q^2*(s12 - s13)*
                 (s12 + s13)^3*(s12 + s13 + s23) + p3q^2*(s12^5 + 
                  s12^4*(-9*s13 + s23) - s13^4*(s13 + s23) - 2*s12^3*s13*
                   (13*s13 + 17*s23) + s12*s13^2*(-7*s13^2 + 2*s13*s23 + 
                    8*s23^2) - 2*s12^2*s13*(11*s13^2 + 16*s13*s23 + 
                    12*s23^2)) + p1q*p3q*(s12^5 + s12^4*(19*s13 + 5*s23) + 
                  s12*s13^2*(17*s13^2 + 4*s13*s23 - 28*s23^2) + 2*s12^3*
                   (23*s13^2 + 30*s13*s23 + 6*s23^2) + s13^2*(3*s13^3 + 
                    s13^2*s23 - 4*s13*s23^2 - 8*s23^3) + s12^2*(42*s13^3 + 
                    58*s13^2*s23 + 52*s13*s23^2 + 8*s23^3))))*den[-3 + 2*ep])/
            (8*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23^2))*p2 . E0conj) + 
       nl*(((3*(s12 + s13 + s23)*(p1q^2*(p2q + p3q)*s23*(s13^2*s23 + 
                s12^2*(8*s13 + s23) + 2*s12*s13*(4*s13 + 3*s23)) + 
              (p2q + p3q)^2*s23*(p2q*s13*(7*s12^2 + 8*s12*s13 + s13^2 + 
                  6*s12*s23 + 2*s13*s23) + p3q*s12*(s12^2 + 2*s12*(4*s13 + 
                    s23) + s13*(7*s13 + 6*s23))) - p1q*(p3q^2*
                 (s12^2*s23*(4*s13 + s23) + s12^3*(8*s13 + s23) + s13*s23^2*
                   (s13 + 2*s23) + s12*s23*(-s13^2 + 6*s13*s23 + 2*s23^2)) + 
                p2q*p3q*(s12^3*s23 + s12^2*(-16*s13^2 - 5*s13*s23 + 
                    2*s23^2) + s13*s23*(s13^2 + 2*s13*s23 + 4*s23^2) + 
                  s12*s23*(-5*s13^2 + 12*s13*s23 + 4*s23^2)) + 
                p2q^2*(s12^2*s23*(-s13 + s23) + s13*s23*(s13^2 + s13*s23 + 
                    2*s23^2) + 2*s12*(4*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 
                    s23^3)))))/(8*p1q*(p2q + p3q)^2*s12*s13*(s12 + s13)*
             s23^2) + ((3*p3q*(s12 - s13)*(2*s12 + s23) - 6*p1q*s23*(s12 + 
                s13 + s23) - 3*p2q*(s12 - s13)*(2*s13 + s23))*den[-1 + ep])/
            (4*(p2q + p3q)*(s12 + s13)^2) + 
           (3*(p1q^2*(p2q + p3q)*s23*(s13^3*s23*(s13 + s23) + 
                s12^4*(8*s13 + s23) + s12^3*(24*s13^2 + 12*s13*s23 + s23^2) + 
                s12^2*s13*(24*s13^2 + 22*s13*s23 + 11*s23^2) + s12*s13*
                 (8*s13^3 + 12*s13^2*s23 + 11*s13*s23^2 + 8*s23^3)) + 
              (p2q + p3q)^2*(s12 + s13)*s23*(s12 + s13 + s23)*(p2q*s13*
                 (7*s12^2 + 8*s12*s13 + s13^2 + 6*s12*s23 + 2*s13*s23) + 
                p3q*s12*(s12^2 + 2*s12*(4*s13 + s23) + s13*(7*s13 + 
                    6*s23))) - p1q*(p3q^2*(s12^5*(8*s13 + s23) + 2*s12^4*
                   (8*s13^2 + 5*s13*s23 + s23^2) + s13^2*s23^2*(s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12^2*s23*(6*s13^3 + 9*s13^2*s23 + 
                    17*s13*s23^2 + 2*s23^3) + s12^3*(8*s13^3 + 16*s13^2*s23 + 
                    19*s13*s23^2 + 3*s23^3) + s12*s13*s23*(-s13^3 + 
                    9*s13^2*s23 + 9*s13*s23^2 + 4*s23^3)) + p2q^2*
                 (s12^4*s23*(-s13 + s23) + s13^2*s23*(s13^3 + 2*s13^2*s23 + 
                    3*s13*s23^2 + 2*s23^3) + s12^3*(8*s13^3 + 6*s13^2*s23 + 
                    9*s13*s23^2 + 3*s23^3) + s12^2*(16*s13^4 + 16*s13^3*s23 + 
                    9*s13^2*s23^2 + 9*s13*s23^3 + 2*s23^4) + s12*s13*
                   (8*s13^4 + 10*s13^3*s23 + 19*s13^2*s23^2 + 17*s13*s23^3 + 
                    4*s23^4)) + p2q*p3q*(s12^5*s23 + s12^4*(-16*s13^2 - 
                    7*s13*s23 + 3*s23^2) + s13^2*s23*(s13^3 + 3*s13^2*s23 + 
                    6*s13*s23^2 + 4*s23^3) + s12^3*(-32*s13^3 - 26*s13^2*
                     s23 + 20*s13*s23^2 + 6*s23^3) + s12*s13*s23*(-7*s13^3 + 
                    20*s13^2*s23 + 26*s13*s23^2 + 8*s23^3) + s12^2*
                   (-16*s13^4 - 26*s13^3*s23 + 2*s13^2*s23^2 + 26*s13*s23^3 + 
                    4*s23^4))))*den[-3 + 2*ep])/(8*p1q*(p2q + p3q)^2*s12*s13*
             (s12 + s13)^2*s23^2))*E0 . E0conj + 
         ((3*(s12 + s13 + s23)*(p2q^2*(3*s13^2*s23 + s12^2*(16*s13 + s23) + 
                4*s12*s13*(4*s13 + 3*s23)) - s23*(p1q^2*(-s12^2 + s13^2) + 
                p3q^2*(-s12^2 + s13^2) + 2*p1q*p3q*(s12^2 + 4*s12*s13 - 
                  s13^2 + 2*s12*s23)) + 2*p2q*(-(p1q*s23*(s12^2 + s13^2 + 
                   2*s12*(s13 + s23))) + p3q*(s13^2*s23 + s12^2*(8*s13 + 
                    s23) + 2*s12*s13*(4*s13 + 3*s23)))))/(4*p1q*(p2q + p3q)*
             s12*s13*(s12 + s13)*s23^2) + 
           ((-3*s13*s23^2 + s12^2*(-6*s13 + 3*s23) + 3*s12*(2*s13^2 - 
                s13*s23 + s23^2))*den[-1 + ep])/(2*s12*s13*(s12 + s13)^2) + 
           (3*(p2q^2*(s12 + s13)*(3*s13^2*s23*(s13 + s23) + s12^3*
                 (16*s13 + s23) + s12^2*(32*s13^2 + 29*s13*s23 + s23^2) + 
                s12*s13*(16*s13^2 + 31*s13*s23 + 12*s23^2)) + 
              2*p2q*(p3q*(s12 + s13)*(s13^2*s23*(s13 + s23) + s12^3*
                   (8*s13 + s23) + s12^2*(16*s13^2 + 15*s13*s23 + s23^2) + 
                  s12*s13*(8*s13^2 + 15*s13*s23 + 6*s23^2)) - p1q*s23*
                 (s12^4 + 2*s12^3*(3*s13 + s23) + 3*s12^2*(2*s13^2 + 
                    s13*s23 + s23^2) + s13*(s13^3 + s13^2*s23 + s13*s23^2 - 
                    2*s23^3) + 2*s12*(s13^3 + 5*s13^2*s23 + s23^3))) + 
              s23*(p1q^2*(s12 - s13)*(s12 + s13)^2*(s12 + s13 + s23) + 
                p3q^2*(s12 - s13)*(s12 + s13)^2*(s12 + s13 + s23) - 
                2*p1q*p3q*(s12^4 + 2*s12^3*(4*s13 + s23) + s12^2*(8*s13^2 + 
                    5*s13*s23 + 3*s23^2) + 2*s12*(5*s13^2*s23 + s23^3) - 
                  s13*(s13^3 + s13^2*s23 - s13*s23^2 + 2*s23^3))))*
             den[-3 + 2*ep])/(4*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^2*s23^2))*
          p1 . E0conj*p2 . E0 + 
         ((3*(s12 + s13 + s23)*(p2q^2*s13*(4*s12^2 + 4*s12*s13 + 3*s12*s23 + 
                s13*s23) - p1q*p3q*s23*(s12^2 + s13*s23 + s12*(3*s13 + 
                  s23)) - p1q*p2q*s23*(s13*(s13 + s23) + s12*(3*s13 + s23)) + 
              p3q^2*s12*(s12*(4*s13 + s23) + s13*(4*s13 + 3*s23)) + 
              p2q*p3q*(s13^2*s23 + s12^2*(8*s13 + s23) + 2*s12*s13*
                 (4*s13 + 3*s23))))/(p1q*(p2q + p3q)*s12*s13*(s12 + s13)*
             s23^2) + (3*(s12 - s13)^2*s23*den[-1 + ep])/
            (2*s12*s13*(s12 + s13)^2) + ((6*p2q^2*s13*(s12 + s13)*(4*s12^3 + 
                s13*s23*(s13 + s23) + s12^2*(8*s13 + 7*s23) + 
                s12*(4*s13^2 + 8*s13*s23 + 3*s23^2)) - 3*p1q*p2q*s23*(
                s12^3*(6*s13 + s23) + 5*s12*s13^2*(2*s13 + 3*s23) + 
                s13^2*(2*s13^2 + 3*s13*s23 + 4*s23^2) + s12^2*(14*s13^2 + 
                  13*s13*s23 + 4*s23^2)) + 6*p2q*p3q*(s12 + s13)*(
                s13^2*s23*(s13 + s23) + s12^3*(8*s13 + s23) + 
                s12^2*(16*s13^2 + 15*s13*s23 + s23^2) + s12*s13*(8*s13^2 + 
                  15*s13*s23 + 6*s23^2)) - 3*p3q*(-2*p3q*s12*(s12 + s13)*
                 (s12^2*(4*s13 + s23) + s12*(8*s13^2 + 8*s13*s23 + s23^2) + 
                  s13*(4*s13^2 + 7*s13*s23 + 3*s23^2)) + p1q*s23*(2*s12^4 + 
                  s12^3*(10*s13 + 3*s23) + s13^2*s23*(s13 + 4*s23) + 
                  s12*s13^2*(6*s13 + 13*s23) + s12^2*(14*s13^2 + 15*s13*s23 + 
                    4*s23^2))))*den[-3 + 2*ep])/(2*p1q*(p2q + p3q)*s12*s13*
             (s12 + s13)^2*s23^2))*p2 . E0*p2 . E0conj + 
         p1 . E0*(((3*ep*(s12^3 + s13*s23*(s13 + s23) + 2*s12^2*(2*s13 + 
                  s23) + s12*(3*s13^2 + 5*s13*s23 + s23^2)))/
              (2*s12*s13*(s12 + s13)*s23) - (3*(s12 + s13 + s23)*(
                -4*p2q^2*s13*(4*s12^2 + 4*s12*s13 + 3*s12*s23 + s13*s23) + 
                p1q*p2q*s23*(s12^2 + s13*s23 + s12*(3*s13 + s23)) + 
                p1q*p3q*s23*(s12^2 + s13*s23 + s12*(3*s13 + s23))))/
              (4*p1q*(p2q + p3q)*s12*s13*(s12 + s13)*s23^2) + 
             ((-6*p1q^2*s12*s13*s23*(s12^2 + 2*s12*s13 + s13^2 + 3*s12*s23 + 
                  3*s13*s23 + 2*s23^2) - 6*s12*s13*(s12 + s13 + s23)*
                 (p3q^2*s23*(s12 + s13 + 2*s23) - 2*p2q^2*(s13^2 + 
                    s12*(s13 - s23) + s13*s23 - s23^2) + p2q*p3q*(2*s12^2 + 
                    s23*(s13 + 4*s23) + s12*(2*s13 + 5*s23))) + 
                3*p1q*(p3q*(s12^4*(4*s13 + s23) + s13*s23^2*(s13^2 + 
                      2*s13*s23 + 2*s23^2) + s12^3*(4*s13^2 + 13*s13*s23 + 
                      4*s23^2) + s12^2*s23*(3*s13^2 + 14*s13*s23 + 5*s23^2) - 
                    s12*s23*(s13^3 + s13^2*s23 - 7*s13*s23^2 - 2*s23^3)) + 
                  p2q*(s12^4*s23 + s13*s23^2*(s13^2 + 2*s13*s23 + 2*s23^2) + 
                    s12^3*(-4*s13^2 + 3*s13*s23 + 4*s23^2) + s12*s23*
                     (s13^3 + s13^2*s23 + 7*s13*s23^2 + 2*s23^3) + 
                    s12^2*(-4*s13^3 - 5*s13^2*s23 + 8*s13*s23^2 + 5*s23^3))))*
               den[-1 + ep])/(2*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23) + 
             (3*(4*p2q^2*s13*(4*s12^5 + s13^3*s23*(s13 + s23) + 2*s12^4*
                   (8*s13 + 3*s23) + s12^3*(24*s13^2 + 17*s13*s23 + 
                    5*s23^2) + s12^2*(16*s13^3 + 17*s13^2*s23 + s13*s23^2 + 
                    7*s23^3) + s12*(4*s13^4 + 7*s13^3*s23 - 3*s13^2*s23^2 - 
                    s13*s23^3 + 4*s23^4)) + p2q*s23*(4*p3q*s12*s13*
                   (3*s12^3 + s13^3 + s13^2*s23 + 8*s13*s23^2 + 8*s23^3 + 
                    s12^2*(7*s13 + 11*s23) + s12*(5*s13^2 + 12*s13*s23 + 
                      16*s23^2)) + p1q*(s12^5 + s12^4*(6*s13 - 2*s23) + 
                    3*s12^3*(8*s13^2 - 3*s13*s23 - 5*s23^2) + s12^2*
                     (26*s13^3 + 17*s13^2*s23 - 35*s13*s23^2 - 20*s23^3) + 
                    s13*s23*(s13^3 - 5*s13^2*s23 - 8*s13*s23^2 - 8*s23^3) + 
                    s12*(7*s13^4 - 7*s13^3*s23 - 9*s13^2*s23^2 - 28*s13*
                       s23^3 - 8*s23^4))) + s23*(4*p1q^2*s12*s13*s23*
                   (s12^2 + 2*s12*s13 + s13^2 + 5*s12*s23 + 5*s13*s23 + 
                    4*s23^2) + 4*p3q^2*s12*s13*s23*(s12^2 + 2*s12*s13 + 
                    s13^2 + 5*s12*s23 + 5*s13*s23 + 4*s23^2) + p1q*p3q*
                   (s12^5 - 2*s12^4*(3*s13 + s23) - s12^3*(4*s13^2 + 
                      45*s13*s23 + 15*s23^2) + s12^2*(6*s13^3 - 15*s13^2*
                       s23 - 59*s13*s23^2 - 20*s23^3) + s13*s23*(s13^3 - 
                      5*s13^2*s23 - 8*s13*s23^2 - 8*s23^3) + s12*(3*s13^4 - 
                      3*s13^3*s23 - s13^2*s23^2 - 28*s13*s23^3 - 8*s23^4))))*
               den[-3 + 2*ep])/(4*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23^
                2))*p1 . E0conj + ((3*ep*(s12 - s13)*(s12 + s13 + s23))/
              (2*s12*s13*s23) + (3*(s12 + s13 + s23)*(p2q^2*
                 (s12^2*(16*s13 - s23) + 5*s13^2*s23 + 4*s12*s13*(4*s13 + 
                    3*s23)) - s23*(p1q^2*(s12^2 - s13^2) + p3q^2*(s12^2 - 
                    s13^2) + p1q*p3q*(3*s12^2 + 4*s12*s13 + s13^2 + 
                    4*s13*s23)) + p2q*(2*p3q*(s13^2*s23 + s12^2*(8*s13 + 
                      s23) + 2*s12*s13*(4*s13 + 3*s23)) - p1q*s23*(-s12^2 + 
                    8*s12*s13 + s13*(s13 + 4*s23)))))/(4*p1q*(p2q + p3q)*s12*
               s13*(s12 + s13)*s23^2) + ((6*(p2q + p3q)*s12*s13*(s12 + s13 + 
                  s23)*(p3q*(-2*s12^2 - 2*s12*s13 - 3*s12*s23 + s13*s23) + 
                  p2q*(2*s12*s13 + 2*s13^2 - s12*s23 + 3*s13*s23)) + 
                3*p1q*(p3q*(s12^4*(4*s13 + s23) - 3*s12*s13^2*s23*(2*s13 + 
                      3*s23) - s13^2*s23*(s13^2 + 2*s13*s23 + 2*s23^2) + 
                    s12^3*(8*s13^2 + 14*s13*s23 + 3*s23^2) + 2*s12^2*
                     (2*s13^3 + 4*s13^2*s23 + 6*s13*s23^2 + s23^3)) + 
                  p2q*(s12^4*s23 - s13^2*s23*(s13^2 + 2*s13*s23 + 2*s23^2) + 
                    s12^3*(-4*s13^2 + 6*s13*s23 + 3*s23^2) - s12*s13^2*
                     (4*s13^2 + 14*s13*s23 + 13*s23^2) + s12^2*(-8*s13^3 - 
                      8*s13^2*s23 + 8*s13*s23^2 + 2*s23^3))))*den[-1 + ep])/
              (2*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23) + 
             ((3*p2q^2*(s12^5*(16*s13 - s23) + 5*s13^4*s23*(s13 + s23) + 
                  s12^4*(64*s13^2 + 21*s13*s23 - s23^2) + 2*s12^3*s13*
                   (48*s13^2 + 33*s13*s23 + 7*s23^2) + s12*s13^2*(16*s13^3 + 
                    31*s13^2*s23 - 14*s13*s23^2 - 24*s23^3) + 2*s12^2*s13*
                   (32*s13^3 + 35*s13^2*s23 - 2*s13*s23^2 + 4*s23^3)) + 
                3*p2q*(p1q*(s12 - s13)*s23*(3*s12^4 + s12^3*(8*s13 - s23) + 
                    s12^2*(10*s13^2 - 25*s13*s23 - 12*s23^2) + s12*(8*s13^3 - 
                      23*s13^2*s23 - 48*s13*s23^2 - 8*s23^3) + s13*(3*s13^3 + 
                      s13^2*s23 - 4*s13*s23^2 - 8*s23^3)) + 2*p3q*
                   (s13^4*s23*(s13 + s23) + s12^5*(8*s13 + s23) + 
                    s12^4*(32*s13^2 + 21*s13*s23 + s23^2) + 2*s12^3*s13*
                     (24*s13^2 + 25*s13*s23 + 14*s23^2) + s12*s13^2*
                     (8*s13^3 + 13*s13^2*s23 - 12*s13*s23^2 - 16*s23^3) + 
                    2*s12^2*s13*(16*s13^3 + 21*s13^2*s23 + 7*s13*s23^2 + 
                      8*s23^3))) - 3*s23*(p1q^2*(s12 - s13)*(s12 + s13)^3*
                   (s12 + s13 + s23) + p3q^2*(s12^5 + s12^4*(-9*s13 + s23) - 
                    s13^4*(s13 + s23) - 2*s12^3*s13*(13*s13 + 17*s23) + 
                    s12*s13^2*(-7*s13^2 + 2*s13*s23 + 8*s23^2) - 2*s12^2*s13*
                     (11*s13^2 + 16*s13*s23 + 12*s23^2)) + p1q*p3q*
                   (s12^5 + s12^4*(19*s13 + 5*s23) + s12*s13^2*(17*s13^2 + 
                      4*s13*s23 - 28*s23^2) + 2*s12^3*(23*s13^2 + 30*s13*
                       s23 + 6*s23^2) + s13^2*(3*s13^3 + s13^2*s23 - 
                      4*s13*s23^2 - 8*s23^3) + s12^2*(42*s13^3 + 58*s13^2*
                       s23 + 52*s13*s23^2 + 8*s23^3))))*den[-3 + 2*ep])/
              (4*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23^2))*p2 . E0conj)))*
      Int[DS[k]*DS[k + p2 + p3]] + 
     (((ep^2*(28*s13^2*s23*(s13 + s23) + s12^3*(27*s13 + 28*s23) + 
            s12*s13*(27*s13^2 + 37*s13*s23 + 2*s23^2) + 
            s12^2*(18*s13^2 + 37*s13*s23 + 28*s23^2)))/
          (36*s12*s13*(s12 + s23)*(s13 + s23)) + 
         (9*p1q^5*s23^2*(10*s13^2*s23^3*(s13 + s23)^2 + 2*s12*s13^2*s23^2*
              (9*s13^2 + 23*s13*s23 + 14*s23^2) + s12^4*(-72*s13^3 - 55*s13^2*
                s23 + 18*s13*s23^2 + 10*s23^3) + s12^2*s23*(-55*s13^4 - 75*
                s13^3*s23 - 2*s13^2*s23^2 + 28*s13*s23^3 + 10*s23^4) + 
             s12^3*(-72*s13^4 - 182*s13^3*s23 - 75*s13^2*s23^2 + 46*s13*
                s23^3 + 20*s23^4)) - 9*(p2q + p3q)^2*s23*(s12 + s13 + s23)*
            (p3q^3*s12^2*(s12^4*(s13 - 10*s23) + 10*s13^3*s23^2 + s12*s13^2*
                s23*(54*s13 + 19*s23) + 2*s12^3*(27*s13^2 + 9*s13*s23 - 
                 5*s23^2) + s12^2*s13*(53*s13^2 + 64*s13*s23 + 17*s23^2)) + 
             p2q^3*s13^2*(-10*s13^3*s23*(s13 + s23) + s12^3*(53*s13^2 + 
                 54*s13*s23 + 10*s23^2) + s12*s13^2*(s13^2 + 18*s13*s23 + 
                 17*s23^2) + s12^2*s13*(54*s13^2 + 64*s13*s23 + 19*s23^2)) + 
             p2q*p3q^2*s12*(-10*s13^3*s23^2*(2*s13 + s23) + s12^4*
                (51*s13^2 + 29*s13*s23 + 10*s23^2) - s12*s13^2*s23*
                (73*s13^2 + 47*s13*s23 + 19*s23^2) + s12^3*(-54*s13^3 - 
                 17*s13^2*s23 + 2*s13*s23^2 + 10*s23^3) - s12^2*s13*
                (105*s13^3 + 65*s13^2*s23 + 53*s13*s23^2 + 17*s23^3)) - 
             p2q^2*p3q*s13*(-10*s13^3*s23^2*(s13 + s23) + s12*s13^2*s23*
                (-29*s13^2 - 2*s13*s23 + 17*s23^2) + s12^4*(105*s13^2 + 
                 73*s13*s23 + 20*s23^2) + s12^3*(54*s13^3 + 65*s13^2*s23 + 
                 47*s13*s23^2 + 10*s23^3) + s12^2*s13*(-51*s13^3 + 
                 17*s13^2*s23 + 53*s13*s23^2 + 19*s23^3))) + 
           p1q^4*s23*(p2q*(-10*s13^2*(27*s13 - 2*s23)*s23^3*(s13 + s23)^2 + 9*
                s12^5*(72*s13^3 + 64*s13^2*s23 - 9*s13*s23^2 - 10*s23^3) + 
               s12^4*(648*s13^4 + 585*s13^3*s23 - 259*s13^2*s23^2 - 
                 446*s13*s23^3 - 160*s23^4) - s12*s13*s23^2*(315*s13^4 + 
                 1004*s13^3*s23 + 681*s13^2*s23^2 + 236*s13*s23^3 + 
                 244*s23^4) + s12^3*(1296*s13^5 + 2376*s13^4*s23 + 
                 423*s13^3*s23^2 - 964*s13^2*s23^3 - 537*s13*s23^4 - 
                 50*s23^5) + s12^2*s23*(1719*s13^5 + 1730*s13^4*s23 - 
                 28*s13^3*s23^2 - 547*s13^2*s23^3 - 416*s13*s23^4 + 
                 20*s23^5)) + p3q*(-10*s13^2*(9*s13 - 2*s23)*s23^3*
                (s13 + s23)^2 + 9*s12^5*(144*s13^3 + 191*s13^2*s23 - 
                 35*s13*s23^2 - 30*s23^3) + 2*s12^4*(324*s13^4 + 1188*s13^3*
                  s23 + 865*s13^2*s23^2 - 502*s13*s23^3 - 260*s23^4) - s12*
                s13*s23^2*(81*s13^4 + 446*s13^3*s23 + 537*s13^2*s23^2 + 
                 416*s13*s23^3 + 244*s23^4) + s12^3*(648*s13^5 + 585*s13^4*
                  s23 + 423*s13^3*s23^2 - 28*s13^2*s23^3 - 681*s13*s23^4 - 
                 230*s23^5) + s12^2*s23*(576*s13^5 - 259*s13^4*s23 - 
                 964*s13^3*s23^2 - 547*s13^2*s23^3 - 236*s13*s23^4 + 
                 20*s23^5))) + p1q*(p3q^4*s12*(648*s12^6*s13^2 + 10*s13^3*
                s23^3*(9*s13^2 + 11*s13*s23 + 2*s23^2) + s12^4*s23*
                (1062*s13^3 + 461*s13^2*s23 - 818*s13*s23^2 - 500*s23^3) + 
               s12^5*(648*s13^3 + 414*s13^2*s23 - 493*s13*s23^2 - 
                 250*s23^3) + s12*s13^2*s23^2*(567*s13^3 + 877*s13^2*s23 + 
                 514*s13*s23^2 - 134*s23^3) + s12^3*s23*(558*s13^4 + 
                 2774*s13^3*s23 + 1643*s13^2*s23^2 - 243*s13*s23^3 - 
                 250*s23^4) + s12^2*s13*s23*(558*s13^4 + 1415*s13^3*s23 + 
                 2530*s13^2*s23^2 + 886*s13*s23^3 + 82*s23^4)) + 
             p2q^4*s13*(-250*s13^3*s23^3*(s13 + s23)^2 + 9*s12^5*s23*
                (62*s13^2 + 63*s13*s23 + 10*s23^2) - s12*s13^2*s23^2*
                (493*s13^3 + 818*s13^2*s23 + 243*s13*s23^2 - 82*s23^3) + 
               s12^4*s23*(558*s13^3 + 1415*s13^2*s23 + 877*s13*s23^2 + 
                 110*s23^3) + s12^2*s13*(648*s13^5 + 414*s13^4*s23 + 
                 461*s13^3*s23^2 + 1643*s13^2*s23^3 + 886*s13*s23^4 - 
                 134*s23^5) + 2*s12^3*(324*s13^5 + 531*s13^4*s23 + 
                 1387*s13^3*s23^2 + 1265*s13^2*s23^3 + 257*s13*s23^4 + 
                 10*s23^5)) + p2q*p3q^3*(-9*s12^7*(s13 - 10*s23)*s23 - 10*
                s13^3*(9*s13 - 7*s23)*s23^3*(s13 + s23)^2 - s12^6*
                (2592*s13^3 + 3321*s13^2*s23 + 923*s13*s23^2 + 230*s23^3) + 
               s12^4*s23*(-2610*s13^4 + 369*s13^3*s23 + 4292*s13^2*s23^2 + 
                 524*s13*s23^3 - 90*s23^4) - 2*s12^5*(1296*s13^4 + 
                 2511*s13^3*s23 + 720*s13^2*s23^2 + 443*s13*s23^3 + 
                 285*s23^4) + s12*s13^2*s23^2*(-171*s13^4 + 408*s13^3*s23 + 
                 1158*s13^2*s23^2 + 884*s13*s23^3 + 305*s23^4) + s12^2*s13*
                s23*(-549*s13^5 + 1526*s13^4*s23 + 3120*s13^3*s23^2 + 
                 2507*s13^2*s23^3 + 537*s13*s23^4 + 71*s23^5) + s12^3*s23*
                (1143*s13^5 + 549*s13^4*s23 + 3754*s13^3*s23^2 + 3107*s13^2*
                  s23^3 + 567*s13*s23^4 + 160*s23^5)) + p2q^2*p3q^2*
              (-9*s12^7*(s13 - 10*s23)*s23 + 10*s13^3*s23^2*(s13 + s23)^2*
                (9*s13^2 - 25*s13*s23 + 23*s23^2) - s12^6*s23*(1692*s13^2 + 
                 601*s13*s23 + 70*s23^2) + s12^5*(3888*s13^4 + 4869*s13^3*
                  s23 + 2946*s13^2*s23^2 + 250*s13*s23^3 - 180*s23^4) + 2*
                s12^2*s13*s23*(-846*s13^5 + 1473*s13^4*s23 + 3742*s13^3*
                  s23^2 + 2431*s13^2*s23^3 + 671*s13*s23^4 + 188*s23^5) + 
               s12^4*(3888*s13^5 + 9216*s13^4*s23 + 8393*s13^3*s23^2 + 
                 7484*s13^2*s23^3 + 1815*s13*s23^4 + 210*s23^5) + s12^3*s23*
                (4869*s13^5 + 8393*s13^4*s23 + 7632*s13^3*s23^2 + 
                 4862*s13^2*s23^3 + 1349*s13*s23^4 + 230*s23^5) + s12*s13^2*
                s23*(-9*s13^5 - 601*s13^4*s23 + 250*s13^3*s23^2 + 
                 1815*s13^2*s23^3 + 1349*s13*s23^4 + 376*s23^5)) + 
             p2q^3*p3q*(-9*s12^6*s23*(61*s13^2 + 19*s13*s23 + 10*s23^2) + 10*
                s13^3*s23^2*(s13 + s23)^2*(9*s13^2 - 41*s13*s23 + 16*s23^2) + 
               s12^5*s23*(1143*s13^3 + 1526*s13^2*s23 + 408*s13*s23^2 - 
                 110*s23^3) + s12^4*(-2592*s13^5 - 2610*s13^4*s23 + 
                 549*s13^3*s23^2 + 3120*s13^2*s23^3 + 1158*s13*s23^4 + 
                 50*s23^5) + s12*s13^2*s23*(-9*s13^5 - 923*s13^4*s23 - 
                 886*s13^3*s23^2 + 524*s13^2*s23^3 + 567*s13*s23^4 + 
                 71*s23^5) + s12^2*s13*s23*(-3321*s13^5 - 1440*s13^4*s23 + 
                 4292*s13^3*s23^2 + 3107*s13^2*s23^3 + 537*s13*s23^4 + 
                 305*s23^5) + s12^3*(-2592*s13^6 - 5022*s13^5*s23 + 
                 369*s13^4*s23^2 + 3754*s13^3*s23^3 + 2507*s13^2*s23^4 + 
                 884*s13*s23^5 + 70*s23^6))) - 
           p1q^3*(p3q^2*(10*s13^2*s23^4*(s13 + s23)^2*(2*s13 + 7*s23) + 18*
                s12^6*(36*s13^3 + 104*s13^2*s23 - 8*s13*s23^2 - 15*s23^3) + 
               s12^5*(648*s13^4 + 900*s13^3*s23 + 902*s13^2*s23^2 - 
                 786*s13*s23^3 - 500*s23^4) + s12^4*s23*(1692*s13^4 + 
                 1091*s13^3*s23 + 325*s13^2*s23^2 - 135*s13*s23^3 - 
                 120*s23^4) + s12*s13*s23^3*(-185*s13^4 - 44*s13^3*s23 + 
                 199*s13^2*s23^2 + 302*s13*s23^3 + 244*s23^4) + s12^2*s23^2*
                (-691*s13^5 + 991*s13^4*s23 + 1378*s13^3*s23^2 + 533*s13^2*
                  s23^3 + 245*s13*s23^4 + 70*s23^5) + s12^3*s23*(-576*s13^5 + 
                 2270*s13^4*s23 + 2457*s13^3*s23^2 + 1380*s13^2*s23^3 + 
                 508*s13*s23^4 + 180*s23^5)) + p2q*p3q*(-10*s13^2*s23^3*
                (s13 + s23)^2*(18*s13^2 + 3*s13*s23 - 5*s23^2) - 36*s12^6*s23*
                (-16*s13^2 + 2*s13*s23 + 5*s23^2) - s12^5*(1296*s13^4 + 
                 3564*s13^3*s23 + 2471*s13^2*s23^2 + 899*s13*s23^3 + 
                 390*s23^4) - s12*s13*s23^2*(72*s13^5 + 899*s13^4*s23 + 
                 773*s13^3*s23^2 + 229*s13^2*s23^3 - 205*s13*s23^4 - 
                 488*s23^5) + s12^3*s23*(-3564*s13^5 - 509*s13^4*s23 + 
                 4194*s13^3*s23^2 + 2164*s13^2*s23^3 - 229*s13*s23^4 + 
                 70*s23^5) - s12^4*(1296*s13^5 + 1800*s13^4*s23 + 
                 509*s13^3*s23^2 + 358*s13^2*s23^3 + 773*s13*s23^4 + 
                 190*s23^5) + s12^2*s23*(576*s13^6 - 2471*s13^5*s23 - 
                 358*s13^4*s23^2 + 2164*s13^3*s23^3 + 598*s13^2*s23^4 + 
                 205*s13*s23^5 + 50*s23^6)) + p2q^2*(-10*s13^2*s23^3*
                (s13 + s23)^2*(27*s13^2 - 4*s13*s23 - 7*s23^2) + s12^5*s23*
                (-576*s13^3 - 691*s13^2*s23 - 185*s13*s23^2 + 20*s23^3) + 
               s12^4*(648*s13^5 + 1692*s13^4*s23 + 2270*s13^3*s23^2 + 
                 991*s13^2*s23^3 - 44*s13*s23^4 + 110*s23^5) + s12*s13*s23^2*
                (-144*s13^5 - 786*s13^4*s23 - 135*s13^3*s23^2 + 508*s13^2*
                  s23^3 + 245*s13*s23^4 + 244*s23^5) + s12^2*s23*
                (1872*s13^6 + 902*s13^5*s23 + 325*s13^4*s23^2 + 1380*s13^3*
                  s23^3 + 533*s13^2*s23^4 + 302*s13*s23^5 + 70*s23^6) + s12^3*
                (648*s13^6 + 900*s13^5*s23 + 1091*s13^4*s23^2 + 2457*s13^3*
                  s23^3 + 1378*s13^2*s23^4 + 199*s13*s23^5 + 160*s23^6))) + 
           p1q^2*(p3q^3*(70*s13^3*s23^4*(s13 + s23)^2 + 9*s12^7*(72*s13^2 + 
                 s13*s23 - 10*s23^2) - s12^6*s23*(801*s13^2 + 196*s13*s23 + 
                 160*s23^2) + s12*s13^2*s23^3*(365*s13^3 + 789*s13^2*s23 + 
                 799*s13*s23^2 + 375*s23^3) + s12^5*(-648*s13^4 + 
                 315*s13^3*s23 - 63*s13^2*s23^2 + 796*s13*s23^3 + 
                 180*s23^4) + s12^2*s13*s23^2*(853*s13^4 + 352*s13^3*s23 + 
                 298*s13^2*s23^2 + 276*s13*s23^3 + 315*s23^4) + s12^4*s23*
                (-819*s13^4 + 1899*s13^3*s23 + 1649*s13^2*s23^2 + 
                 1643*s13*s23^3 + 480*s23^4) + s12^3*s23*(648*s13^5 - 
                 531*s13^4*s23 + 730*s13^3*s23^2 + 380*s13^2*s23^3 + 
                 957*s13*s23^4 + 230*s23^5)) + p2q*p3q^2*(9*s12^7*
                (s13 - 10*s23)*s23 - 70*s13^2*s23^3*(s13 + s23)^2*
                (s13^2 - 3*s13*s23 + s23^2) + s12^5*s23*(3231*s13^3 + 
                 4327*s13^2*s23 + 645*s13*s23^2 - 90*s23^3) - 2*s12^6*
                (972*s13^3 + 1053*s13^2*s23 + 232*s13*s23^2 + 160*s23^3) + 2*
                s12*s13*s23^2*(-98*s13^5 + 305*s13^4*s23 + 524*s13^3*s23^2 + 
                 289*s13^2*s23^3 + 46*s13*s23^4 - 122*s23^5) + s12^3*s23*
                (6156*s13^5 + 6363*s13^4*s23 + 4354*s13^3*s23^2 + 
                 911*s13^2*s23^3 + 664*s13*s23^4 + 140*s23^5) + s12^4*
                (1944*s13^5 + 3735*s13^4*s23 + 8649*s13^3*s23^2 + 
                 6552*s13^2*s23^3 + 1416*s13*s23^4 + 350*s23^5) + s12^2*s23*
                (-9*s13^6 + 5459*s13^5*s23 + 4481*s13^4*s23^2 + 397*s13^3*
                  s23^3 - 406*s13^2*s23^4 + 122*s13*s23^5 - 70*s23^6)) + 
             p2q^2*p3q*(-(s12^6*s23*(9*s13^2 + 196*s13*s23 + 70*s23^2)) - 10*
                s13^2*s23^2*(s13 + s23)^2*(9*s13^3 + 14*s13^2*s23 - 
                 28*s13*s23^2 + 7*s23^3) + s12^5*(1944*s13^4 + 6156*s13^3*
                  s23 + 5459*s13^2*s23^2 + 610*s13*s23^3 + 70*s23^4) + s12^4*
                s23*(3735*s13^4 + 6363*s13^3*s23 + 4481*s13^2*s23^2 + 
                 1048*s13*s23^3 + 280*s23^4) + s12*s13*s23*(9*s13^6 - 
                 464*s13^5*s23 + 645*s13^4*s23^2 + 1416*s13^3*s23^3 + 
                 664*s13^2*s23^4 + 122*s13*s23^5 - 244*s23^6) + s12^2*s23*
                (-2106*s13^6 + 4327*s13^5*s23 + 6552*s13^4*s23^2 + 
                 911*s13^3*s23^3 - 406*s13^2*s23^4 + 92*s13*s23^5 - 
                 70*s23^6) + s12^3*(-1944*s13^6 + 3231*s13^5*s23 + 
                 8649*s13^4*s23^2 + 4354*s13^3*s23^3 + 397*s13^2*s23^4 + 
                 578*s13*s23^5 + 70*s23^6)) + p2q^3*(-10*s13^3*s23^2*
                (s13 + s23)^2*(9*s13^2 - 2*s13*s23 - 23*s23^2) + s12^5*s23*
                (648*s13^3 + 853*s13^2*s23 + 365*s13*s23^2 + 70*s23^3) + 
               s12^3*s23*(315*s13^5 + 1899*s13^4*s23 + 730*s13^3*s23^2 + 
                 298*s13^2*s23^3 + 799*s13*s23^4 + 70*s23^5) + s12^4*
                (-648*s13^5 - 819*s13^4*s23 - 531*s13^3*s23^2 + 352*s13^2*
                  s23^3 + 789*s13*s23^4 + 140*s23^5) + s12*s13^2*s23*
                (9*s13^5 - 196*s13^4*s23 + 796*s13^3*s23^2 + 1643*s13^2*
                  s23^3 + 957*s13*s23^4 + 315*s23^5) + s12^2*s13*
                (648*s13^6 - 801*s13^5*s23 - 63*s13^4*s23^2 + 1649*s13^3*
                  s23^3 + 380*s13^2*s23^4 + 276*s13*s23^5 + 375*s23^6))))/
          (72*ep*p1q*(p2q + p3q)*s12^2*s13^2*s23^2*
           (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
              p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
              p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*
                 (s13 + s23) + s12*(s13^2 + s23^2))) - 
            p1q^2*(p2q*(s13 + s23)*(s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
              p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + s13*s23 + s23^2))))) + 
         (ep*(9*p1q^4*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
             (s12^3 + s12*(s13 + s23)^2 + s13*(s13 + s23)^2 + 
              s12^2*(s13 + 2*s23)) - 9*(p2q + p3q)*(s12 - s13)*
             (-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)^2*(s12*(2*s13 + s23) + 
              s23*(s13 + 2*s23))*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) + 
            p1q^3*(p2q*(s13 + s23)*(s12^5*(18*s13^2 - 161*s13*s23 - 
                  192*s23^2) + s12^4*(36*s13^3 + 742*s13^2*s23 + 520*s13*
                   s23^2 - 254*s23^3) - 2*s13*s23^2*(9*s13^4 + 114*s13^3*
                   s23 + 40*s13^2*s23^2 - 58*s13*s23^3 + 7*s23^4) + 
                2*s12^2*s23*(-76*s13^4 + 689*s13^3*s23 + 1404*s13^2*s23^2 + 
                  656*s13*s23^3 + 51*s23^4) + s12^3*(18*s13^4 + 760*s13^3*
                   s23 + 2434*s13^2*s23^2 + 1797*s13*s23^3 + 54*s23^4) + 
                s12*s23*(-9*s13^5 - 398*s13^4*s23 + 565*s13^3*s23^2 + 
                  1214*s13^2*s23^3 + 182*s13*s23^4 - 14*s23^5)) - 
              p3q*(s12 + s23)*(9*s12^5*s23*(s13 + 2*s23) + 2*s13*s23^2*
                 (s13 + s23)^2*(96*s13^2 - 65*s13*s23 + 7*s23^2) + 
                s12^4*(-18*s13^3 + 152*s13^2*s23 + 398*s13*s23^2 + 
                  228*s23^3) - s12^3*(36*s13^4 + 760*s13^3*s23 + 1378*s13^2*
                   s23^2 + 565*s13*s23^3 - 80*s23^4) + s12*s23*(161*s13^5 - 
                  520*s13^4*s23 - 1797*s13^3*s23^2 - 1312*s13^2*s23^3 - 
                  182*s13*s23^4 + 14*s23^5) - 2*s12^2*(9*s13^5 + 371*s13^4*
                   s23 + 1217*s13^3*s23^2 + 1404*s13^2*s23^3 + 607*s13*
                   s23^4 + 58*s23^5))) + p1q^2*(p3q^2*(s12 + s23)*(
                9*s12^6*s23 - 4*s12^5*(9*s13^2 - 29*s13*s23 - 48*s23^2) - 
                s13*s23^2*(s13 + s23)^2*(183*s13^2 - 139*s13*s23 + 
                  14*s23^2) - s12^4*(36*s13^3 + 984*s13^2*s23 + 1475*s13*
                   s23^2 + 328*s23^3) + 2*s12^3*(18*s13^4 + 27*s13^3*s23 - 
                  499*s13^2*s23^2 - 757*s13*s23^3 - 269*s23^4) + 
                s12^2*(36*s13^5 + 1011*s13^4*s23 + 1654*s13^3*s23^2 + 
                  801*s13^2*s23^3 + 289*s13*s23^4 - 41*s23^5) + 2*s12*s23*
                 (-67*s13^5 + 419*s13^4*s23 + 880*s13^3*s23^2 + 436*s13^2*
                   s23^3 + 35*s13*s23^4 - 7*s23^5)) + p2q^2*(s13 + s23)*(
                s12^5*(36*s13^2 - 134*s13*s23 - 183*s23^2) + 
                s12^4*(36*s13^3 + 1011*s13^2*s23 + 838*s13*s23^2 - 
                  227*s23^3) + s12^3*(-36*s13^4 + 54*s13^3*s23 + 1654*s13^2*
                   s23^2 + 1760*s13*s23^3 + 81*s23^4) + s13*s23*(9*s13^5 + 
                  192*s13^4*s23 - 328*s13^3*s23^2 - 538*s13^2*s23^3 - 
                  41*s13*s23^4 - 14*s23^5) + s12*s23*(116*s13^5 - 1475*s13^4*
                   s23 - 1514*s13^3*s23^2 + 289*s13^2*s23^3 + 70*s13*s23^4 - 
                  14*s23^5) + s12^2*(-36*s13^5 - 984*s13^4*s23 - 998*s13^3*
                   s23^2 + 801*s13^2*s23^3 + 872*s13*s23^4 + 111*s23^5)) + 
              p2q*p3q*(s12^6*(-36*s13^2 + 107*s13*s23 + 183*s23^2) - 
                s12^5*s23*(1109*s13^2 + 1658*s13*s23 + 310*s23^2) + 
                s13*s23^2*(s13 + s23)^2*(183*s13^3 - 676*s13^2*s23 + 
                  121*s13*s23^2 - 28*s23^3) + s12^4*(72*s13^4 + 1074*s13^3*
                   s23 - 43*s13^2*s23^2 - 2261*s13*s23^3 - 1048*s23^4) + 
                s12^3*s23*(1074*s13^4 + 3524*s13^3*s23 + 3451*s13^2*s23^2 + 
                  778*s13*s23^3 - 462*s23^4) + s12*s23*(107*s13^6 - 
                  1658*s13^5*s23 - 2261*s13^4*s23^2 + 778*s13^3*s23^3 + 
                  1432*s13^2*s23^4 + 130*s13*s23^5 - 28*s23^6) + 
                s12^2*(-36*s13^6 - 1109*s13^5*s23 - 43*s13^4*s23^2 + 
                  3451*s13^3*s23^3 + 3580*s13^2*s23^4 + 1432*s13*s23^5 + 
                  65*s23^6))) + p1q*(p3q^3*s12*(s12 + s23)*(18*s12^5*
                 (s13 + s23) + s12^4*(-18*s13^2 + 323*s13*s23 + 390*s23^2) - 
                2*s12^3*(36*s13^3 + 209*s13^2*s23 + 84*s13*s23^2 - 
                  193*s23^3) - s12^2*(18*s13^4 + 382*s13^3*s23 + 1080*s13^2*
                   s23^2 + 657*s13*s23^3 - 10*s23^4) + s13*s23*(9*s13^4 + 
                  372*s13^3*s23 + 269*s13^2*s23^2 - 62*s13*s23^3 + 
                  32*s23^4) + 2*s12*(9*s13^5 + 175*s13^4*s23 - 57*s13^3*
                   s23^2 - 369*s13^2*s23^3 - 44*s13*s23^4 - 2*s23^5)) + 
              p2q^3*s13*(s13 + s23)*(9*s12^5*(2*s13 + s23) + 
                s12^4*(-18*s13^2 + 350*s13*s23 + 372*s23^2) - 
                s12^3*(72*s13^3 + 382*s13^2*s23 + 114*s13*s23^2 - 
                  269*s23^3) + 2*s13*s23*(9*s13^4 + 195*s13^3*s23 + 
                  193*s13^2*s23^2 + 5*s13*s23^3 - 2*s23^4) - 2*s12^2*
                 (9*s13^4 + 209*s13^3*s23 + 540*s13^2*s23^2 + 369*s13*s23^3 + 
                  31*s23^4) + s12*(18*s13^5 + 323*s13^4*s23 - 168*s13^3*
                   s23^2 - 657*s13^2*s23^3 - 88*s13*s23^4 + 32*s23^5)) + 
              p2q*p3q^2*(9*s12^7*(2*s13 + s23) + s12^6*(-54*s13^2 + 
                  278*s13*s23 + 363*s23^2) - s12^5*(36*s13^3 + 1118*s13^2*
                   s23 + 1029*s13*s23^2 - 350*s23^3) - s13*s23^2*(s13 + s23)^
                  2*(9*s13^3 + 354*s13^2*s23 + 23*s13*s23^2 + 14*s23^3) + 
                s12^4*(126*s13^4 + 436*s13^3*s23 - 1157*s13^2*s23^2 - 
                  2232*s13*s23^3 - 380*s23^4) + s12^3*(54*s13^5 + 1231*s13^4*
                   s23 + 2554*s13^3*s23^2 + 793*s13^2*s23^3 - 713*s13*s23^4 - 
                  417*s23^5) + s12^2*(-36*s13^6 - 628*s13^5*s23 + 1135*s13^4*
                   s23^2 + 2820*s13^3*s23^3 + 942*s13^2*s23^4 + 210*s13*
                   s23^5 - 55*s23^6) - s12*s23*(36*s13^6 + 1085*s13^5*s23 + 
                  927*s13^4*s23^2 - 355*s13^3*s23^3 - 213*s13^2*s23^4 + 
                  34*s13*s23^5 + 14*s23^6)) - p2q^2*p3q*(9*s12^6*
                 (2*s13 + s23)^2 + s12^5*(-54*s13^3 + 628*s13^2*s23 + 
                  1085*s13*s23^2 + 372*s23^3) - s13*s23*(s13 + s23)^2*
                 (9*s13^4 + 345*s13^3*s23 - 349*s13^2*s23^2 - 27*s13*s23^3 - 
                  14*s23^4) + s12^4*(-126*s13^4 - 1231*s13^3*s23 - 
                  1135*s13^2*s23^2 + 927*s13*s23^3 + 740*s23^4) + 
                s12^3*(36*s13^5 - 436*s13^4*s23 - 2554*s13^3*s23^2 - 
                  2820*s13^2*s23^3 - 355*s13*s23^4 + 414*s23^5) + 
                s12^2*(54*s13^6 + 1118*s13^5*s23 + 1157*s13^4*s23^2 - 
                  793*s13^3*s23^3 - 942*s13^2*s23^4 - 213*s13*s23^5 + 
                  51*s23^6) + s12*(-18*s13^7 - 278*s13^6*s23 + 1029*s13^5*
                   s23^2 + 2232*s13^4*s23^3 + 713*s13^3*s23^4 - 210*s13^2*
                   s23^5 + 34*s13*s23^6 + 14*s23^7)))))/(72*p1q*(p2q + p3q)*
           s12*s13*(s12 + s13)*s23*(s12 + s23)*(s13 + s23)*
           (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*
             (s12 + s23) - p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
            p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
             (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) - 
         (-9*p1q^5*s23^2*(s12 + s23)*(s13 + s23)*(-20*s13^3*s23^3*
              (s13 + s23)^2 - s12*s13^3*s23^2*(73*s13^2 + 166*s13*s23 + 93*
                s23^2) + s12^5*(288*s13^3 + 223*s13^2*s23 - 73*s13*s23^2 - 20*
                s23^3) + s12^2*s13^2*s23*(223*s13^3 + 507*s13^2*s23 + 430*s13*
                s23^2 + 146*s23^3) + s12^4*(576*s13^4 + 1209*s13^3*s23 + 507*
                s13^2*s23^2 - 166*s13*s23^3 - 40*s23^4) + 
             s12^3*(288*s13^5 + 1209*s13^4*s23 + 1412*s13^3*s23^2 + 430*s13^2*
                s23^3 - 93*s13*s23^4 - 20*s23^5)) - 9*(p2q + p3q)^2*
            (s12 + s13)*s23*(s12 + s13 + s23)*(p3q^3*s12^2*(s12 + s23)*
              (20*s13^3*s23^2*(s13 + s23) + s12^4*(75*s13^2 + 31*s13*s23 - 
                 20*s23^2) + s12*s13^2*s23*(149*s13^2 + 263*s13*s23 + 
                 114*s23^2) + s12^3*(216*s13^3 + 297*s13^2*s23 + 
                 61*s13*s23^2 - 20*s23^3) + 3*s12^2*s13*(47*s13^3 + 
                 153*s13^2*s23 + 108*s13*s23^2 + 10*s23^3)) + 
             p2q^3*s13^2*(s13 + s23)*(-20*s13^3*s23^2*(s13 + s23) + s12^4*
                (141*s13^2 + 149*s13*s23 + 20*s23^2) + s12*s13^2*s23*
                (31*s13^2 + 61*s13*s23 + 30*s23^2) + s12^3*(216*s13^3 + 
                 459*s13^2*s23 + 263*s13*s23^2 + 20*s23^3) + 3*s12^2*s13*
                (25*s13^3 + 99*s13^2*s23 + 108*s13*s23^2 + 38*s23^3)) - 
             p2q*p3q^2*s12*(20*s13^3*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) + 
               s12^5*(9*s13^3 - 48*s13^2*s23 - 29*s13*s23^2 - 20*s23^3) + s12*
                s13^2*s23^2*(178*s13^3 + 395*s13^2*s23 + 331*s13*s23^2 + 
                 114*s23^3) + s12^4*(216*s13^4 + 249*s13^3*s23 + 
                 41*s13^2*s23^2 - 8*s13*s23^3 - 40*s23^4) + s12^2*s13*s23*
                (369*s13^4 + 917*s13^3*s23 + 812*s13^2*s23^2 + 318*s13*
                  s23^3 + 30*s23^4) + s12^3*(207*s13^5 + 798*s13^4*s23 + 
                 765*s13^3*s23^2 + 293*s13^2*s23^3 + 51*s13*s23^4 - 
                 20*s23^5)) - p2q^2*p3q*s13*(-20*s13^3*s23^3*(s13 + s23)^2 + 
               s12*s13^2*s23^2*(-29*s13^3 - 8*s13^2*s23 + 51*s13*s23^2 + 
                 30*s23^3) + s12^5*(207*s13^3 + 369*s13^2*s23 + 178*s13*
                  s23^2 + 40*s23^3) + s12^4*(216*s13^4 + 798*s13^3*s23 + 
                 917*s13^2*s23^2 + 395*s13*s23^3 + 60*s23^4) + s12^2*s13*s23*
                (-48*s13^4 + 41*s13^3*s23 + 293*s13^2*s23^2 + 318*s13*s23^3 + 
                 114*s23^4) + s12^3*(9*s13^5 + 249*s13^4*s23 + 765*s13^3*
                  s23^2 + 812*s13^2*s23^3 + 331*s13*s23^4 + 20*s23^5))) + 
           p1q^4*s23*(p2q*(s13 + s23)*(-20*s13^3*(27*s13 - 2*s23)*s23^4*
                (s13 + s23)^2 + 9*s12^7*(288*s13^3 + 259*s13^2*s23 - 
                 37*s13*s23^2 - 20*s23^3) + s12^6*(5184*s13^4 + 9477*s13^3*
                  s23 + 4030*s13^2*s23^2 - 1273*s13*s23^3 - 500*s23^4) - s12*
                s13^2*s23^3*(2007*s13^4 + 4428*s13^3*s23 + 1205*s13^2*s23^2 - 
                 786*s13*s23^3 + 430*s23^4) + s12^2*s13*s23^2*(5679*s13^5 + 
                 10200*s13^4*s23 + 8584*s13^3*s23^2 + 4203*s13^2*s23^3 - 
                 242*s13*s23^4 - 430*s23^5) + s12^5*(7776*s13^5 + 
                 19215*s13^4*s23 + 10796*s13^3*s23^2 - 168*s13^2*s23^3 - 
                 731*s13*s23^4 - 420*s23^5) + s12^4*(5184*s13^6 + 
                 28719*s13^5*s23 + 33017*s13^4*s23^2 + 6673*s13^3*s23^3 - 
                 2712*s13^2*s23^4 + 595*s13*s23^5 - 60*s23^6) + s12^3*s23*
                (12114*s13^6 + 34531*s13^5*s23 + 28531*s13^4*s23^2 + 
                 6219*s13^3*s23^3 - 657*s13^2*s23^4 - 44*s13*s23^5 + 
                 40*s23^6)) + p3q*(-20*s13^3*(9*s13 - 2*s23)*s23^4*
                (s13 + s23)^3 - s12*s13^2*s23^3*(s13 + s23)^2*(513*s13^3 + 
                 747*s13^2*s23 - 856*s13*s23^2 + 430*s23^3) + 9*s12^7*
                (576*s13^4 + 1346*s13^3*s23 + 631*s13^2*s23^2 - 223*s13*
                  s23^3 - 60*s23^4) + s12^6*(7776*s13^5 + 33903*s13^4*s23 + 
                 46645*s13^3*s23^2 + 15879*s13^2*s23^3 - 6435*s13*s23^4 - 
                 1580*s23^5) + s12^5*(5184*s13^6 + 26991*s13^5*s23 + 
                 61736*s13^4*s23^2 + 63062*s13^3*s23^3 + 18784*s13^2*s23^4 - 
                 5633*s13*s23^5 - 1500*s23^6) + s12^2*s13*s23^2*(1998*s13^6 + 
                 2757*s13^5*s23 - 899*s13^4*s23^2 - 2117*s13^3*s23^3 - 
                 701*s13^2*s23^4 - 672*s13*s23^5 - 430*s23^6) + s12^4*
                (2592*s13^7 + 14661*s13^6*s23 + 30011*s13^5*s23^2 + 
                 39690*s13^4*s23^3 + 34750*s13^3*s23^4 + 12787*s13^2*s23^5 - 
                 419*s13*s23^6 - 420*s23^7) + s12^3*s23*(4923*s13^7 + 
                 13507*s13^6*s23 + 10628*s13^5*s23^2 + 3961*s13^4*s23^3 + 
                 5562*s13^3*s23^4 + 3961*s13^2*s23^5 + 356*s13*s23^6 + 
                 40*s23^7))) + p1q^2*(p3q^3*(s12 + s23)*(140*s13^4*s23^4*
                (s13 + s23)^3 + s12*s13^3*s23^3*(s13 + s23)^2*(769*s13^2 + 
                 183*s13*s23 + 854*s23^2) + 9*s12^8*(288*s13^3 + 295*s13^2*
                  s23 - 37*s13*s23^2 - 20*s23^3) + s12^7*(2592*s13^4 + 
                 2250*s13^3*s23 + 610*s13^2*s23^2 + 464*s13*s23^3 - 
                 320*s23^4) + s12^2*s13^2*s23^2*(2207*s13^5 + 4056*s13^4*
                  s23 + 1158*s13^3*s23^2 - 4856*s13^2*s23^3 - 4225*s13*
                  s23^4 - 60*s23^5) + s12^6*(-2592*s13^5 - 5796*s13^4*s23 - 
                 5935*s13^3*s23^2 + 1557*s13^2*s23^3 + 5464*s13*s23^4 + 
                 360*s23^5) + s12^4*s23*(549*s13^6 + 2585*s13^5*s23 + 
                 7329*s13^4*s23^2 + 3668*s13^3*s23^3 - 688*s13^2*s23^4 + 
                 797*s13*s23^5 + 460*s23^6) + s12^3*s13*s23*(2088*s13^6 + 
                 6250*s13^5*s23 + 4316*s13^4*s23^2 - 4076*s13^3*s23^3 - 
                 10263*s13^2*s23^4 - 4535*s13*s23^5 + 730*s23^6) + s12^5*
                (-2592*s13^6 - 6930*s13^5*s23 - 3800*s13^4*s23^2 + 
                 4945*s13^3*s23^3 + 7245*s13^2*s23^4 + 4734*s13*s23^5 + 
                 960*s23^6)) + p2q^3*(s13 + s23)*(-20*s13^4*s23^3*
                (s13 + s23)^2*(9*s13^2 - 2*s13*s23 - 23*s23^2) + s12^7*s23*
                (2088*s13^3 + 2207*s13^2*s23 + 769*s13*s23^2 + 140*s23^3) + 
               s12^6*(-2592*s13^5 + 549*s13^4*s23 + 6250*s13^3*s23^2 + 
                 4056*s13^2*s23^3 + 1721*s13*s23^4 + 420*s23^5) + s12*s13^3*
                s23^2*(-333*s13^5 + 464*s13^4*s23 + 5464*s13^3*s23^2 + 
                 4734*s13^2*s23^3 + 797*s13*s23^4 + 730*s23^5) + s12^2*s13^2*
                s23*(2655*s13^6 + 610*s13^5*s23 + 1557*s13^4*s23^2 + 
                 7245*s13^3*s23^3 - 688*s13^2*s23^4 - 4535*s13*s23^5 - 
                 60*s23^6) + s12^5*(-2592*s13^6 - 6930*s13^5*s23 + 
                 2585*s13^4*s23^2 + 4316*s13^3*s23^3 + 1158*s13^2*s23^4 + 
                 1989*s13*s23^5 + 420*s23^6) + s12^4*(2592*s13^7 - 
                 5796*s13^6*s23 - 3800*s13^5*s23^2 + 7329*s13^4*s23^3 - 
                 4076*s13^3*s23^4 - 4856*s13^2*s23^5 + 1891*s13*s23^6 + 
                 140*s23^7) + s12^3*s13*(2592*s13^7 + 2250*s13^6*s23 - 
                 5935*s13^5*s23^2 + 4945*s13^4*s23^3 + 3668*s13^3*s23^4 - 
                 10263*s13^2*s23^5 - 4225*s13*s23^6 + 854*s23^7)) + 
             p2q^2*p3q*(s12^8*s23*(441*s13^3 + 1006*s13^2*s23 + 
                 41*s13*s23^2 - 140*s23^3) - 20*s13^3*s23^3*(s13 + s23)^3*
                (9*s13^3 + 14*s13^2*s23 - 28*s13*s23^2 + 7*s23^3) + s12^7*s13*
                (7776*s13^4 + 27801*s13^3*s23 + 35748*s13^2*s23^2 + 
                 18935*s13*s23^3 + 2828*s23^4) - s12*s13^2*s23^2*
                (s13 + s23)^2*(333*s13^5 - 181*s13^4*s23 - 4830*s13^3*s23^2 + 
                 3241*s13^2*s23^3 - 1493*s13*s23^4 + 430*s23^5) + s12^6*
                (7776*s13^6 + 59931*s13^5*s23 + 125880*s13^4*s23^2 + 
                 110622*s13^3*s23^3 + 38862*s13^2*s23^4 + 3385*s13*s23^5 + 
                 700*s23^6) + s12^4*s13*(-7776*s13^7 - 16371*s13^6*s23 + 
                 73836*s13^5*s23^2 + 202945*s13^4*s23^3 + 160438*s13^3*
                  s23^4 + 31242*s13^2*s23^5 - 8050*s13*s23^6 + 296*s23^7) + 
               s12^5*(-7776*s13^7 + 29124*s13^6*s23 + 150045*s13^5*s23^2 + 
                 203068*s13^4*s23^3 + 114954*s13^3*s23^4 + 23066*s13^2*
                  s23^5 - 113*s13*s23^6 + 700*s23^7) + s12^2*s13*s23*
                (63*s13^8 - 3766*s13^7*s23 + 12114*s13^6*s23^2 + 48124*s13^5*
                  s23^3 + 40309*s13^4*s23^4 - 768*s13^3*s23^5 - 9764*s13^2*
                  s23^6 - 1298*s13*s23^7 - 430*s23^8) + s12^3*s23*
                (-12861*s13^8 - 2112*s13^7*s23 + 97220*s13^6*s23^2 + 
                 148207*s13^5*s23^3 + 53802*s13^4*s23^4 - 20470*s13^3*s23^5 - 
                 11051*s13^2*s23^6 + 577*s13*s23^7 - 140*s23^8)) + 
             p2q*p3q^2*(-140*s13^3*s23^4*(s13 + s23)^3*(s13^2 - 3*s13*s23 + 
                 s23^2) - 9*s12^9*s23*(-7*s13^2 + 37*s13*s23 + 20*s23^2) + 
               s12*s13^2*s23^3*(s13 + s23)^2*(41*s13^4 + 2746*s13^3*s23 - 
                 2148*s13^2*s23^2 + 1437*s13*s23^3 - 430*s23^4) - s12^8*
                (7776*s13^4 + 12861*s13^3*s23 + 3766*s13^2*s23^2 + 
                 485*s13*s23^3 + 820*s23^4) - s12^7*(7776*s13^5 + 
                 16371*s13^4*s23 + 2112*s13^3*s23^2 - 12114*s13^2*s23^3 - 
                 4859*s13*s23^4 + 820*s23^5) + 4*s12^6*(1944*s13^6 + 
                 7281*s13^5*s23 + 18459*s13^4*s23^2 + 24305*s13^3*s23^3 + 
                 12031*s13^2*s23^4 + 1650*s13*s23^5 + 130*s23^6) + s12^2*s13*
                s23^2*(1006*s13^7 + 18935*s13^6*s23 + 38862*s13^5*s23^2 + 
                 23066*s13^4*s23^3 - 8050*s13^3*s23^4 - 11051*s13^2*s23^5 - 
                 1298*s13*s23^6 - 430*s23^7) + s12^4*s23*(27801*s13^7 + 
                 125880*s13^6*s23 + 203068*s13^5*s23^2 + 160438*s13^4*s23^3 + 
                 53802*s13^3*s23^4 - 768*s13^2*s23^5 - 685*s13*s23^6 + 
                 140*s23^7) + s12^5*(7776*s13^7 + 59931*s13^6*s23 + 
                 150045*s13^5*s23^2 + 202945*s13^4*s23^3 + 148207*s13^3*
                  s23^4 + 40309*s13^2*s23^5 - 159*s13*s23^6 + 980*s23^7) + 
               s12^3*s23*(441*s13^8 + 35748*s13^7*s23 + 110622*s13^6*s23^2 + 
                 114954*s13^5*s23^3 + 31242*s13^4*s23^4 - 20470*s13^3*s23^5 - 
                 9764*s13^2*s23^6 + 633*s13*s23^7 - 140*s23^8))) - 
           p1q^3*(p3q^2*(s12 + s23)*(20*s13^3*s23^4*(s13 + s23)^3*
                (2*s13 + 7*s23) - s12*s13^2*s23^3*(s13 + s23)^2*(238*s13^3 - 
                 1157*s13^2*s23 + 815*s13*s23^2 - 430*s23^3) + 9*s12^7*
                (288*s13^4 + 1123*s13^3*s23 + 776*s13^2*s23^2 - 167*s13*
                  s23^3 - 60*s23^4) + s12^6*(5184*s13^5 + 18486*s13^4*s23 + 
                 24577*s13^3*s23^2 + 9721*s13^2*s23^3 - 2722*s13*s23^4 - 
                 1000*s23^5) + s12^5*(2592*s13^6 + 12636*s13^5*s23 + 
                 19938*s13^4*s23^2 + 15725*s13^3*s23^3 + 9081*s13^2*s23^4 + 
                 3058*s13*s23^5 - 240*s23^6) + s12^4*s23*(1818*s13^6 + 
                 10990*s13^5*s23 + 16808*s13^4*s23^2 + 14837*s13^3*s23^3 + 
                 10453*s13^2*s23^4 + 3780*s13*s23^5 + 360*s23^6) + s12^2*s13*
                s23^2*(-2207*s13^6 - 1889*s13^5*s23 + 5739*s13^4*s23^2 + 
                 9123*s13^3*s23^3 + 2710*s13^2*s23^4 - 562*s13*s23^5 + 
                 430*s23^6) + s12^3*s23*(-2439*s13^7 - 2634*s13^6*s23 + 
                 10656*s13^5*s23^2 + 21796*s13^4*s23^3 + 14797*s13^3*s23^4 + 
                 3261*s13^2*s23^5 - 67*s13*s23^6 + 140*s23^7)) - 
             p2q^2*(s13 + s23)*(20*s13^3*s23^4*(s13 + s23)^2*(27*s13^2 - 
                 4*s13*s23 - 7*s23^2) + s12^7*s23*(2439*s13^3 + 2207*s13^2*
                  s23 + 238*s13*s23^2 - 40*s23^3) + s12*s13^2*s23^3*
                (1503*s13^5 + 2722*s13^4*s23 - 3058*s13^3*s23^2 - 
                 3780*s13^2*s23^3 + 67*s13*s23^4 - 430*s23^5) - s12^6*
                (2592*s13^5 + 1818*s13^4*s23 - 2634*s13^3*s23^2 - 
                 1889*s13^2*s23^3 + 681*s13*s23^4 + 260*s23^5) - s12^2*s13*
                s23^2*(6984*s13^6 + 9721*s13^5*s23 + 9081*s13^4*s23^2 + 
                 10453*s13^3*s23^3 + 3261*s13^2*s23^4 - 562*s13*s23^5 + 
                 430*s23^6) - s12^5*(5184*s13^6 + 12636*s13^5*s23 + 
                 10990*s13^4*s23^2 + 10656*s13^3*s23^3 + 5739*s13^2*s23^4 + 
                 1261*s13*s23^5 + 540*s23^6) - s12^3*s23*(10107*s13^7 + 
                 24577*s13^6*s23 + 15725*s13^5*s23^2 + 14837*s13^4*s23^3 + 
                 14797*s13^3*s23^4 + 2710*s13^2*s23^5 + 45*s13*s23^6 + 
                 140*s23^7) - s12^4*(2592*s13^7 + 18486*s13^6*s23 + 
                 19938*s13^5*s23^2 + 16808*s13^4*s23^3 + 21796*s13^3*s23^4 + 
                 9123*s13^2*s23^5 - 43*s13*s23^6 + 460*s23^7)) + 
             p2q*p3q*(-20*s13^3*s23^4*(s13 + s23)^3*(18*s13^2 + 3*s13*s23 - 
                 5*s23^2) + 9*s12^8*s23*(259*s13^3 + 229*s13^2*s23 - 
                 94*s13*s23^2 - 40*s23^3) - s12*s13^2*s23^3*(s13 + s23)^2*
                (846*s13^4 + 1417*s13^3*s23 - 3400*s13^2*s23^2 + 
                 2369*s13*s23^3 - 860*s23^4) - s12^7*(5184*s13^5 + 
                 15057*s13^4*s23 + 11236*s13^3*s23^2 + 2948*s13^2*s23^3 + 
                 3109*s13*s23^4 + 1140*s23^5) - s12^6*(10368*s13^6 + 
                 39978*s13^5*s23 + 55965*s13^4*s23^2 + 32711*s13^3*s23^3 + 
                 5356*s13^2*s23^4 + 280*s13*s23^5 + 1160*s23^6) - s12^5*
                (5184*s13^7 + 39978*s13^6*s23 + 67192*s13^5*s23^2 + 
                 27927*s13^4*s23^3 - 15151*s13^3*s23^4 - 13934*s13^2*s23^5 - 
                 3014*s13*s23^6 + 240*s23^7) + s12^4*s23*(-15057*s13^7 - 
                 55965*s13^6*s23 - 27927*s13^5*s23^2 + 70836*s13^4*s23^3 + 
                 82630*s13^3*s23^4 + 23721*s13^2*s23^5 - 478*s13*s23^6 + 
                 240*s23^7) + s12^2*s13*s23^2*(2061*s13^7 - 2948*s13^6*s23 - 
                 5356*s13^5*s23^2 + 13934*s13^4*s23^3 + 23721*s13^3*s23^4 + 
                 9630*s13^2*s23^5 + 1050*s13*s23^6 + 860*s23^7) + s12^3*s23*
                (2331*s13^8 - 11236*s13^7*s23 - 32711*s13^6*s23^2 + 
                 15151*s13^5*s23^3 + 82630*s13^4*s23^4 + 59098*s13^3*s23^5 + 
                 9630*s13^2*s23^6 - 649*s13*s23^7 + 100*s23^8))) + 
           p1q*(p3q^4*s12*(s12 + s23)*(20*s13^4*s23^3*(s13 + s23)^2*
                (9*s13 + 2*s23) + 36*s12^7*s13*(72*s13^2 + 55*s13*s23 - 
                 17*s23^2) + s12^6*(5184*s13^4 + 8415*s13^3*s23 + 
                 2608*s13^2*s23^2 - 1939*s13*s23^3 - 500*s23^4) + s12*s13^3*
                s23^2*(1665*s13^4 + 4856*s13^3*s23 + 6981*s13^2*s23^2 + 
                 4282*s13*s23^3 + 492*s23^4) + s12^5*(2592*s13^5 + 
                 9450*s13^4*s23 + 11451*s13^3*s23^2 + 4105*s13^2*s23^3 - 
                 1272*s13*s23^4 - 1000*s23^5) + s12^4*s23*(5112*s13^5 + 
                 16984*s13^4*s23 + 23584*s13^3*s23^2 + 10857*s13^2*s23^3 - 
                 155*s13*s23^4 - 500*s23^5) + s12^3*s13*s23*(3690*s13^5 + 
                 15744*s13^4*s23 + 31927*s13^3*s23^2 + 29081*s13^2*s23^3 + 
                 9214*s13*s23^4 - 210*s23^5) + s12^2*s13^2*s23*(1593*s13^5 + 
                 8656*s13^4*s23 + 19063*s13^3*s23^2 + 22989*s13^2*s23^3 + 
                 12391*s13*s23^4 + 1786*s23^5)) + p2q^4*s13*(s13 + s23)*
              (-500*s13^4*s23^4*(s13 + s23)^2 + 9*s12^7*s23*(177*s13^2 + 
                 185*s13*s23 + 20*s23^2) + 2*s12^6*s23*(1845*s13^3 + 
                 4328*s13^2*s23 + 2428*s13*s23^2 + 200*s23^3) - s12*s13^3*
                s23^2*(612*s13^4 + 1939*s13^3*s23 + 1272*s13^2*s23^2 + 
                 155*s13*s23^3 + 210*s23^4) + s12^5*(2592*s13^5 + 
                 5112*s13^4*s23 + 15744*s13^3*s23^2 + 19063*s13^2*s23^3 + 
                 6981*s13*s23^4 + 260*s23^5) + s12^2*s13^2*s23*(1980*s13^5 + 
                 2608*s13^4*s23 + 4105*s13^3*s23^2 + 10857*s13^2*s23^3 + 
                 9214*s13*s23^4 + 1786*s23^5) + s12^4*(5184*s13^6 + 
                 9450*s13^5*s23 + 16984*s13^4*s23^2 + 31927*s13^3*s23^3 + 
                 22989*s13^2*s23^4 + 4282*s13*s23^5 + 40*s23^6) + s12^3*s13*
                (2592*s13^6 + 8415*s13^5*s23 + 11451*s13^4*s23^2 + 
                 23584*s13^3*s23^3 + 29081*s13^2*s23^4 + 12391*s13*s23^5 + 
                 492*s23^6)) + p2q*p3q^3*(-20*s13^4*(9*s13 - 7*s23)*s23^4*
                (s13 + s23)^3 + 9*s12^9*s23*(-143*s13^2 - 99*s13*s23 + 
                 20*s23^2) - s12*s13^3*s23^3*(s13 + s23)^2*(81*s13^3 - 
                 1670*s13^2*s23 - 705*s13*s23^2 - 714*s23^3) - s12^8*
                (10368*s13^4 + 21663*s13^3*s23 + 13405*s13^2*s23^2 + 
                 3590*s13*s23^3 + 280*s23^4) - s12^7*(20736*s13^5 + 
                 68040*s13^4*s23 + 68489*s13^3*s23^2 + 19999*s13^2*s23^3 + 
                 2646*s13*s23^4 + 1600*s23^5) + s12^2*s13^2*s23^2*
                (-1035*s13^6 + 5896*s13^5*s23 + 22052*s13^4*s23^2 + 
                 29254*s13^3*s23^3 + 15437*s13^2*s23^4 + 814*s13*s23^5 - 
                 490*s23^6) + s12^5*s23*(-12699*s13^6 - 40577*s13^5*s23 - 
                 15608*s13^4*s23^2 + 48940*s13^3*s23^3 + 34799*s13^2*s23^4 + 
                 1437*s13*s23^5 + 140*s23^6) - s12^6*(10368*s13^6 + 
                 63954*s13^5*s23 + 105529*s13^4*s23^2 + 43765*s13^3*s23^3 - 
                 9082*s13^2*s23^4 - 1552*s13*s23^5 + 1320*s23^6) + s12^3*s13*
                s23*(-918*s13^7 + 6277*s13^6*s23 + 35940*s13^5*s23^2 + 
                 65718*s13^4*s23^3 + 60297*s13^3*s23^4 + 22979*s13^2*s23^5 + 
                 1107*s13*s23^6 + 300*s23^7) + s12^4*s23*(2673*s13^7 + 
                 16289*s13^6*s23 + 41891*s13^5*s23^2 + 78670*s13^4*s23^3 + 
                 69142*s13^3*s23^4 + 19433*s13^2*s23^5 + 238*s13*s23^6 + 
                 320*s23^7)) + p2q^2*p3q^2*(9*s12^9*s23*(-75*s13^2 - 
                 31*s13*s23 + 20*s23^2) + 20*s13^4*s23^3*(s13 + s23)^3*
                (9*s13^2 - 25*s13*s23 + 23*s23^2) - 4*s12^8*s23*(1269*s13^3 + 
                 1517*s13^2*s23 + 280*s13*s23^2 - 10*s23^3) - s12*s13^3*s23^2*
                (s13 + s23)^2*(279*s13^4 + 562*s13^3*s23 - 3296*s13^2*s23^2 - 
                 513*s13*s23^3 - 1014*s23^4) + s12^7*(15552*s13^5 + 
                 24678*s13^4*s23 + 7976*s13^3*s23^2 + 3259*s13^2*s23^3 + 
                 1893*s13*s23^4 - 500*s23^5) + s12^6*(31104*s13^6 + 
                 106353*s13^5*s23 + 128588*s13^4*s23^2 + 83596*s13^3*s23^3 + 
                 36836*s13^2*s23^4 + 6543*s13*s23^5 + 60*s23^6) + s12^2*s13^2*
                s23*(-675*s13^7 - 6068*s13^6*s23 + 3259*s13^5*s23^2 + 
                 36836*s13^4*s23^3 + 49701*s13^3*s23^4 + 22140*s13^2*s23^5 - 
                 357*s13*s23^6 - 980*s23^7) + s12^4*s23*(24678*s13^7 + 
                 128588*s13^6*s23 + 232869*s13^5*s23^2 + 208212*s13^4*s23^3 + 
                 99576*s13^3*s23^4 + 22140*s13^2*s23^5 + 2541*s13*s23^6 + 
                 460*s23^7) + s12^5*(15552*s13^7 + 106353*s13^6*s23 + 
                 229646*s13^5*s23^2 + 232869*s13^4*s23^3 + 142221*s13^3*
                  s23^4 + 49701*s13^2*s23^5 + 5336*s13*s23^6 + 880*s23^7) + 
               s12^3*s13*s23*(-5076*s13^7 + 7976*s13^6*s23 + 83596*s13^5*
                  s23^2 + 142221*s13^4*s23^3 + 99576*s13^3*s23^4 + 
                 25376*s13^2*s23^5 - 357*s13*s23^6 + 1014*s23^7)) + 
             p2q^3*p3q*(20*s13^4*s23^3*(s13 + s23)^3*(9*s13^2 - 41*s13*s23 + 
                 16*s23^2) - 9*s12^8*s23*(102*s13^3 + 115*s13^2*s23 + 
                 9*s13*s23^2 + 20*s23^3) + s12^7*s23*(2673*s13^4 + 
                 6277*s13^3*s23 + 5896*s13^2*s23^2 + 1508*s13*s23^3 - 
                 400*s23^4) - s12*s13^3*s23^2*(s13 + s23)^2*(891*s13^4 + 
                 1808*s13^3*s23 - 1861*s13^2*s23^2 + 362*s13*s23^3 - 
                 300*s23^4) + s12^6*(-10368*s13^6 - 12699*s13^5*s23 + 
                 16289*s13^4*s23^2 + 35940*s13^3*s23^3 + 22052*s13^2*s23^4 + 
                 3964*s13*s23^5 - 120*s23^6) + s12^2*s13^2*s23*(-1287*s13^7 - 
                 13405*s13^6*s23 - 19999*s13^5*s23^2 + 9082*s13^4*s23^3 + 
                 34799*s13^3*s23^4 + 19433*s13^2*s23^5 + 1107*s13*s23^6 - 
                 490*s23^7) + s12^5*(-20736*s13^7 - 63954*s13^6*s23 - 
                 40577*s13^5*s23^2 + 41891*s13^4*s23^3 + 65718*s13^3*s23^4 + 
                 29254*s13^2*s23^5 + 3794*s13*s23^6 + 240*s23^7) + s12^3*s13*
                s23*(-21663*s13^7 - 68489*s13^6*s23 - 43765*s13^5*s23^2 + 
                 48940*s13^4*s23^3 + 69142*s13^3*s23^4 + 22979*s13^2*s23^5 + 
                 814*s13*s23^6 + 714*s23^7) + s12^4*(-10368*s13^8 - 
                 68040*s13^7*s23 - 105529*s13^6*s23^2 - 15608*s13^5*s23^3 + 
                 78670*s13^4*s23^4 + 60297*s13^3*s23^5 + 15437*s13^2*s23^6 + 
                 2133*s13*s23^7 + 140*s23^8))))/(144*p1q*(p2q + p3q)*s12^2*
           s13^2*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
           (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
              p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
              p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*
                 (s13 + s23) + s12*(s13^2 + s23^2))) - 
            p1q^2*(p2q*(s13 + s23)*(s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
              p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + s13*s23 + s23^2))))) + 
         ((-9*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(s12^2 - s13^2)*
             (s12^2 + 2*s12*s13 + s13^2 + 3*s12*s23 + 3*s13*s23 + 2*s23^2) + 
            9*p1q^2*s23*(s12^4 + s12^3*(-8*s13 + s23) + s13^3*(s13 + s23) - 
              s12^2*s13*(18*s13 + 17*s23) - s12*s13*(8*s13^2 + 17*s13*s23 + 
                8*s23^2)) + p1q*(p3q*(-9*s12^5 + s12^4*(90*s13 - 26*s23) + 
                s12^3*s23*(89*s13 + 5*s23) + s13^2*s23*(-17*s13^2 + 
                  5*s13*s23 + 14*s23^2) + s12^2*(-90*s13^3 - 85*s13^2*s23 + 
                  87*s13*s23^2 + 14*s23^3) + s12*s13*(9*s13^3 - 73*s13^2*
                   s23 + 15*s13*s23^2 + 28*s23^3)) + p2q*(s12^4*(9*s13 - 
                  17*s23) + s12^3*(-90*s13^2 - 73*s13*s23 + 5*s23^2) + 
                s12^2*s23*(-85*s13^2 + 15*s13*s23 + 14*s23^2) + 
                s13^2*(-9*s13^3 - 26*s13^2*s23 + 5*s13*s23^2 + 14*s23^3) + 
                s12*s13*(90*s13^3 + 89*s13^2*s23 + 87*s13*s23^2 + 
                  28*s23^3))))*den[-3 + 2*ep])/(16*p1q*(p2q + p3q)*s12*s13*
           (s12 + s13)^2*s23))*E0 . E0conj + 
       ((ep^2*(-10*s13^3*s23^3*(s13 + s23) + s12^5*(-9*s13^2 + 10*s23^2) + 
            s12*s13^2*s23^2*(19*s13^2 + 47*s13*s23 + 28*s23^2) + 
            s12^2*s13*s23*(27*s13^3 + 64*s13^2*s23 + s13*s23^2 - 28*s23^3) - 
            s12^4*(18*s13^3 + 45*s13^2*s23 + 8*s13*s23^2 - 20*s23^3) - 
            s12^3*(9*s13^4 + 18*s13^3*s23 + 63*s13^2*s23^2 + 36*s13*s23^3 - 
              10*s23^4)))/(18*s12^2*s13^2*s23^2*(s12 + s23)*(s13 + s23)) - 
         ((s12 + s13 + s23)*(-9*p1q^7*s12*s23^4*(20*s12^4*s23*(s13 + s23) + 
              18*s12*s13^3*s23*(s13 + s23) + 10*s13^3*s23^2*(s13 + s23) + 
              s12^3*(s13^3 - 32*s13^2*s23 - 4*s13*s23^2 + 20*s23^3) - 
              s12^2*s13*(s13^3 + 32*s13*s23^2 + 24*s23^3)) + 
            9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q^4*s12^2*s23*(
                -20*s12^5*s23 - 10*s13^4*s23^2 - s12*s13^3*s23*(18*s13 + 
                  19*s23) + s12^4*(17*s13^2 + 4*s13*s23 - 20*s23^2) + 
                2*s12^3*s13*(9*s13^2 + 25*s13*s23 + 2*s23^2) + s12^2*s13^2*
                 (s13^2 - 10*s13*s23 + 33*s23^2)) + p2q^4*s13^2*(
                20*s12^5*s23*(s13 + s23) + 3*s12^2*s13^2*s23*(23*s13^2 + 
                  12*s13*s23 - 11*s23^2) + 20*s13^4*s23*(-s13^2 + s23^2) - 
                2*s12*s13^3*s23*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 
                s12^4*(144*s13^3 + 113*s13^2*s23 + 24*s13*s23^2 + 10*s23^3) + 
                s12^3*s13*(144*s13^3 + 76*s13^2*s23 - 4*s13*s23^2 + 
                  19*s23^3)) + p2q^2*p3q^2*(-20*s13^5*s23^3*(s13 + s23) + 
                20*s12^7*s23*(3*s13 + s23) - 2*s12*s13^4*s23^2*(45*s13^2 + 
                  8*s13*s23 - 7*s23^2) - 2*s12^3*s13^2*s23*(92*s13^3 - 
                  68*s13^2*s23 - 7*s13*s23^2 + 26*s23^3) + s12^6*(144*s13^3 + 
                  35*s13^2*s23 + 96*s13*s23^2 + 40*s23^3) + s12^2*s13^3*s23*
                 (-77*s13^3 - 22*s13^2*s23 + 35*s13*s23^2 + 52*s23^3) - 
                2*s12^5*(72*s13^4 + 64*s13^3*s23 + 42*s13^2*s23^2 - 
                  s13*s23^3 - 10*s23^4) - s12^4*s13*(288*s13^4 - 6*s13^3*
                   s23 + 272*s13^2*s23^2 + 127*s13*s23^3 + 14*s23^4)) - 
              p2q^3*p3q*s13*(20*s12^6*s23*(3*s13 + 2*s23) - 20*s13^4*s23^2*
                 (2*s13^2 + s13*s23 - s23^2) + s12^2*s13^2*s23*(-20*s13^3 + 
                  99*s13^2*s23 + 84*s13*s23^2 - 33*s23^3) - 4*s12*s13^3*s23*
                 (15*s13^3 - 2*s13^2*s23 - 6*s13*s23^2 + s23^3) + 
                s12^5*(288*s13^3 + 142*s13^2*s23 + 89*s13*s23^2 + 50*s23^3) + 
                s12^4*(144*s13^4 + 32*s13^3*s23 + 39*s13^2*s23^2 + 
                  38*s13*s23^3 + 10*s23^4) + s12^3*s13*(-144*s13^4 + 
                  206*s13^3*s23 + 41*s13^2*s23^2 - 80*s13*s23^3 + 
                  19*s23^4)) + p2q*p3q^3*s12*(-20*s12^7*s23 + 10*s13^4*s23^3*
                 (3*s13 + s23) - 2*s12^6*s23*(3*s13 + 20*s23) + 12*s12^5*s13*
                 (12*s13^2 + 7*s13*s23 + 4*s23^2) + s12*s13^3*s23^2*
                 (77*s13^2 + 32*s13*s23 + 19*s23^2) + s12^2*s13^2*s23*
                 (36*s13^3 + 67*s13^2*s23 - 66*s13*s23^2 - 33*s23^3) + 
                s12^3*s13*s23*(152*s13^3 - 131*s13^2*s23 - 2*s13*s23^2 - 
                  4*s23^3) + s12^4*(144*s13^4 + 114*s13^3*s23 + 111*s13^2*
                   s23^2 + 30*s13*s23^3 + 20*s23^4))) + p1q^6*s23^3*
             (p2q*(180*s12^6*s23*(s13 + s23) + 20*s13^3*s23^3*(9*s13^2 + 
                  s13*s23 - 8*s23^2) + s12^5*(-72*s13^3 - 9*s13^2*s23 + 
                  304*s13*s23^2 + 160*s23^3) + 2*s12*s13^2*s23^2*(360*s13^3 + 
                  162*s13^2*s23 - 35*s13*s23^2 + 163*s23^3) + s12^2*s13*s23*
                 (819*s13^4 + 529*s13^3*s23 + 678*s13^2*s23^2 + 570*s13*
                   s23^3 - 326*s23^4) + s12^4*(666*s13^4 - 423*s13^3*s23 - 
                  605*s13^2*s23^2 + 354*s13*s23^3 + 140*s23^4) + 
                s12^3*(54*s13^5 + 909*s13^4*s23 + 111*s13^3*s23^2 - 
                  820*s13^2*s23^3 - 276*s13*s23^4 + 160*s23^5)) + 
              p3q*(-160*s13^3*s23^4*(s13 + s23) + 180*s12^6*s23*(4*s13 + 
                  5*s23) - s12^5*(54*s13^3 + 1143*s13^2*s23 + 470*s13*s23^2 - 
                  700*s23^3) + 2*s12*s13^2*s23^2*(45*s13^3 - 90*s13^2*s23 + 
                  28*s13*s23^2 + 163*s23^3) + s12^2*s13*s23*(243*s13^4 + 
                  385*s13^3*s23 + 1200*s13^2*s23^2 + 570*s13*s23^3 - 
                  326*s23^4) - s12^4*(666*s13^4 + 1557*s13^3*s23 + 
                  1685*s13^2*s23^2 + 1014*s13*s23^3 + 40*s23^4) + 
                s12^3*(72*s13^5 + 297*s13^4*s23 + 129*s13^3*s23^2 - 
                  370*s13^2*s23^3 - 150*s13*s23^4 + 160*s23^5))) - 
            p1q*(p3q^6*s12^3*s23*(-180*s12^7 + 2*s12^6*(63*s13 + 10*s23) - 
                10*s13^4*s23^2*(9*s13 + 11*s23) + s12^5*(333*s13^2 + 
                  130*s13*s23 - 680*s23^2) - s12*s13^3*s23*(243*s13^2 + 
                  396*s13*s23 + 769*s23^2) + s12^4*(-540*s13^3 + 296*s13^2*
                   s23 + 494*s13*s23^2 - 880*s23^3) + s12^3*s13*(9*s13^3 + 
                  728*s13^2*s23 + 782*s13*s23^2 + 490*s23^3) + s12^2*s13^2*
                 (-72*s13^3 + 281*s13^2*s23 - 293*s13*s23^2 + 891*s23^3)) + 
              p2q^6*s13^3*(180*s12^6*s23*(s13 + s23) + s12^2*s13^2*s23*
                 (-387*s13^3 + 1826*s13^2*s23 + 1394*s13*s23^2 - 891*s23^3) + 
                20*s13^4*s23*(9*s13^3 - 45*s13^2*s23 - 10*s13*s23^2 + 
                  44*s23^3) + s12^4*s23*(3105*s13^3 + 2677*s13^2*s23 + 
                  924*s13*s23^2 + 110*s23^3) - 2*s12*s13^3*s23*(153*s13^3 + 
                  80*s13^2*s23 + 172*s13*s23^2 + 245*s23^3) + 
                s12^5*(1296*s13^3 + 1098*s13^2*s23 + 677*s13*s23^2 + 
                  470*s23^3) + s12^3*s13*(-1296*s13^4 + 6174*s13^3*s23 + 
                  3248*s13^2*s23^2 - 1329*s13*s23^3 + 769*s23^4)) - 
              p2q^3*p3q^3*(180*s12^9*s23*(4*s13 + s23) + 20*s13^6*s23^3*
                 (-9*s13^2 + 17*s13*s23 + 26*s23^2) + 2*s12*s13^5*s23^2*
                 (-585*s13^3 + 1248*s13^2*s23 + 119*s13*s23^2 - 484*s23^3) + 
                s12^8*(1296*s13^3 + 369*s13^2*s23 - 496*s13*s23^2 - 
                  160*s23^3) + s12^3*s13^4*s23*(1728*s13^3 - 1351*s13^2*s23 + 
                  324*s13*s23^2 - 26*s23^3) + s12^2*s13^4*s23*(-1233*s13^4 + 
                  4787*s13^3*s23 - 3230*s13^2*s23^2 - 1944*s13*s23^3 + 
                  14*s23^4) - s12^7*(7776*s13^4 + 9252*s13^3*s23 + 
                  1421*s13^2*s23^2 + 1884*s13*s23^3 + 860*s23^4) + 
                s12^6*(2592*s13^5 + 15345*s13^4*s23 - 2735*s13^3*s23^2 + 
                  2808*s13^2*s23^3 + 1020*s13*s23^4 - 520*s23^5) + 
                s12^4*s13^2*(-3888*s13^5 + 6255*s13^4*s23 - 6752*s13^3*
                   s23^2 + 3918*s13^2*s23^3 + 5420*s13*s23^4 - 14*s23^5) + 
                2*s12^5*s13*(3888*s13^5 - 2430*s13^4*s23 + 11127*s13^3*
                   s23^2 + 4026*s13^2*s23^3 + 456*s13*s23^4 + 484*s23^5)) - 
              p2q^5*p3q*s13^2*(180*s12^7*s23*(4*s13 + 3*s23) + 
                s12^6*(3888*s13^3 + 2457*s13^2*s23 + 1538*s13*s23^2 + 
                  780*s23^3) + s12^2*s13^2*s23*(-837*s13^4 - 1313*s13^3*s23 + 
                  1044*s13^2*s23^2 + 2174*s13*s23^3 - 594*s23^4) + 
                2*s12*s13^3*s23*(513*s13^4 - 1523*s13^3*s23 + 116*s13^2*
                   s23^2 + 1035*s13*s23^3 - 227*s23^4) - 20*s13^4*s23*
                 (9*s13^4 - 54*s13^3*s23 + 61*s13^2*s23^2 + 89*s13*s23^3 - 
                  35*s23^4) + s12^5*(-2592*s13^4 + 432*s13^3*s23 + 
                  849*s13^2*s23^2 + 1638*s13*s23^3 + 440*s23^4) + 
                s12^4*(-3888*s13^5 + 8280*s13^4*s23 - 3279*s13^3*s23^2 - 
                  4594*s13^2*s23^3 + 1652*s13*s23^4 + 20*s23^5) + 
                s12^3*s13*(2592*s13^5 - 11250*s13^4*s23 + 3679*s13^3*s23^2 + 
                  4508*s13^2*s23^3 - 3920*s13*s23^4 + 598*s23^5)) + 
              p2q*p3q^5*s12^2*(20*s12^7*(45*s13 - 16*s23)*s23 + 
                20*s13^4*s23^3*(18*s13^2 + 12*s13*s23 + s23^2) + 
                s12^5*s23*(3474*s13^3 + 783*s13^2*s23 + 2302*s13*s23^2 - 
                  1080*s23^3) + 2*s12*s13^3*s23^2*(468*s13^3 + 325*s13^2*
                   s23 + 589*s13*s23^2 + 299*s23^3) - 3*s12^6*(432*s13^3 + 
                  315*s13^2*s23 + 66*s13*s23^2 + 700*s23^3) + s12^2*s13^2*s23*
                 (477*s13^4 - 737*s13^3*s23 + 1268*s13^2*s23^2 - 2424*s13*
                   s23^3 - 594*s23^4) + s12^3*s13*s23*(810*s13^4 + 
                  3275*s13^3*s23 - 546*s13^2*s23^2 + 772*s13*s23^3 - 
                  454*s23^4) + s12^4*(1296*s13^5 + 5004*s13^4*s23 + 
                  9605*s13^3*s23^2 + 2230*s13^2*s23^3 + 1866*s13*s23^4 + 
                  700*s23^5)) + p2q^2*p3q^4*s12*(180*s12^9*s23 + 
                2*s12^8*(27*s13 - 170*s23)*s23 + 10*s13^5*s23^3*(-45*s13^2 + 
                  21*s13*s23 + 14*s23^2) + s12*s13^4*s23^2*(-1503*s13^3 + 
                  1326*s13^2*s23 + 61*s13*s23^2 - 238*s23^3) - 3*s12^7*
                 (864*s13^3 + 909*s13^2*s23 - 134*s13*s23^2 + 300*s23^3) - 
                s12^3*s13^2*s23*(702*s13^4 + 2857*s13^3*s23 - 226*s13^2*
                   s23^2 + 3116*s13*s23^3 + 838*s23^4) + s12^6*(3888*s13^4 + 
                  10872*s13^3*s23 + 1509*s13^2*s23^2 + 4730*s13*s23^3 + 
                  840*s23^4) + s12^2*s13^3*s23*(-1098*s13^4 + 2721*s13^3*
                   s23 - 1007*s13^2*s23^2 + 1439*s13*s23^3 + 1322*s23^4) + 
                s12^5*(2592*s13^5 - 3069*s13^4*s23 + 12919*s13^3*s23^2 - 
                  1042*s13^2*s23^3 + 1300*s13*s23^4 + 1220*s23^5) - 
                s12^4*s13*(3888*s13^5 + 3186*s13^4*s23 + 10751*s13^3*s23^2 + 
                  4554*s13^2*s23^3 + 2084*s13*s23^4 + 1282*s23^5)) + 
              p2q^4*p3q^2*s13*(540*s12^8*s23*(2*s13 + s23) + 3*s12^7*
                 (1296*s13^3 + 558*s13^2*s23 + 235*s13*s23^2 + 50*s23^3) - 
                20*s13^5*s23^2*(18*s13^3 - 62*s13^2*s23 - 19*s13*s23^2 + 
                  61*s23^3) - 2*s12*s13^4*s23*(360*s13^4 - 1801*s13^3*s23 + 
                  1561*s13^2*s23^2 + 1221*s13*s23^3 - 641*s23^4) - 
                s12^6*(7776*s13^4 + 9918*s13^3*s23 + 3331*s13^2*s23^2 + 
                  594*s13*s23^3 + 530*s23^4) + s12^2*s13^3*s23*(2457*s13^4 - 
                  4643*s13^3*s23 - 678*s13^2*s23^2 + 1002*s13*s23^3 + 
                  838*s23^4) - s12^5*(2592*s13^5 - 7398*s13^4*s23 + 
                  10593*s13^3*s23^2 + 6975*s13^2*s23^3 - 451*s13*s23^4 + 
                  140*s23^5) + s12^4*s13*(7776*s13^5 - 16461*s13^4*s23 + 
                  10275*s13^3*s23^2 + 1190*s13^2*s23^3 - 6117*s13*s23^4 + 
                  238*s23^5) - s12^3*s13^2*(1296*s13^5 - 4446*s13^4*s23 + 
                  7055*s13^3*s23^2 + 640*s13^2*s23^3 - 3422*s13*s23^4 + 
                  1322*s23^5))) - p1q^5*s23^2*(p3q^2*(360*s12^7*s23*
                 (3*s13 + 5*s23) + 160*s13^3*s23^4*(-s13^2 + s23^2) - 
                s12^6*(135*s13^3 + 1701*s13^2*s23 + 1500*s13*s23^2 - 
                  820*s23^3) - 2*s12*s13^2*s23^3*(135*s13^3 + 77*s13^2*s23 + 
                  185*s13*s23^2 + 163*s23^3) - s12^5*(1305*s13^4 + 
                  4338*s13^3*s23 + 3554*s13^2*s23^2 + 1730*s13*s23^3 + 
                  140*s23^4) + 2*s12^2*s13*s23^2*(-55*s13^4 + 133*s13^3*s23 - 
                  222*s13^2*s23^2 + 204*s13*s23^3 + 163*s23^4) + 
                s12^3*s23*(702*s13^5 + 1806*s13^4*s23 + 3639*s13^3*s23^2 + 
                  2619*s13^2*s23^3 - 994*s13*s23^4 - 160*s23^5) + 
                s12^4*(144*s13^5 + 1341*s13^4*s23 + 1600*s13^3*s23^2 - 
                  328*s13^2*s23^3 - 470*s13*s23^4 + 680*s23^5)) + 
              p2q*p3q*(180*s12^7*s23*(3*s13 + 4*s23) + 20*s13^3*s23^3*
                 (9*s13^3 - 49*s13^2*s23 - 42*s13*s23^2 + 16*s23^3) + 
                s12^6*(-144*s13^3 - 837*s13^2*s23 + 46*s13*s23^2 + 
                  620*s23^3) + 2*s12*s13^2*s23^2*(315*s13^4 - 388*s13^3*s23 + 
                  323*s13^2*s23^2 + 530*s13*s23^3 - 326*s23^4) + 
                2*s12^5*(567*s13^4 - 18*s13^3*s23 - 1106*s13^2*s23^2 + 
                  183*s13*s23^3 + 460*s23^4) - 2*s12^4*(567*s13^5 + 
                  1674*s13^4*s23 + 205*s13^3*s23^2 + 529*s13^2*s23^3 + 
                  683*s13*s23^4 - 350*s23^5) + s12^2*s13*s23*(819*s13^5 + 
                  640*s13^4*s23 + 4042*s13^3*s23^2 + 501*s13^2*s23^3 - 
                  1140*s13*s23^4 + 652*s23^5) + s12^3*(144*s13^6 - 
                  18*s13^5*s23 - 3722*s13^4*s23^2 - 1856*s13^3*s23^3 + 
                  2421*s13^2*s23^4 - 494*s13*s23^5 - 320*s23^6)) + 
              p2q^2*(-20*s12^6*s23*(-9*s13^2 - 8*s13*s23 + s23^2) + 
                20*s13^3*s23^3*(45*s13^3 - 5*s13^2*s23 - 42*s13*s23^2 + 
                  8*s23^3) + 2*s12*s13^2*s23^2*(990*s13^4 + 35*s13^3*s23 - 
                  122*s13^2*s23^2 + 670*s13*s23^3 - 163*s23^4) - 
                2*s12^5*(72*s13^4 + 45*s13^3*s23 - 104*s13^2*s23^2 - 
                  85*s13*s23^3 + 10*s23^4) + s12^4*(1305*s13^5 - 2943*s13^4*
                   s23 - 2298*s13^3*s23^2 + 980*s13^2*s23^3 + 40*s13*s23^4 - 
                  160*s23^5) + s12^2*s13*s23*(1485*s13^5 + 48*s13^4*s23 + 
                  1418*s13^3*s23^2 + 621*s13^2*s23^3 - 1548*s13*s23^4 + 
                  326*s23^5) + s12^3*(135*s13^6 + 2268*s13^5*s23 - 
                  2396*s13^4*s23^2 - 3749*s13^3*s23^3 + 378*s13^2*s23^4 + 
                  716*s13*s23^5 - 160*s23^6))) + p1q^3*s23*
             (p2q^4*s13*(-40*s13^4*s23^2*(45*s13^3 - 43*s13^2*s23 - 
                  46*s13*s23^2 + 42*s23^3) + 2*s12^6*(252*s13^3 + 415*s13^2*
                   s23 + 80*s13*s23^2 + 70*s23^3) - 10*s12*s13^3*s23*
                 (153*s13^4 - 195*s13^3*s23 - 22*s13^2*s23^2 + 110*s13*
                   s23^3 - 216*s23^4) + s12^5*(2556*s13^4 + 2758*s13^3*s23 + 
                  1370*s13^2*s23^2 - 129*s13*s23^3 + 530*s23^4) + 
                s12^2*s13^2*(-333*s13^5 + 1658*s13^4*s23 + 2371*s13^3*s23^2 + 
                  2267*s13^2*s23^3 + 486*s13*s23^4 - 681*s23^5) + 
                s12^4*(5823*s13^5 + 1394*s13^4*s23 + 251*s13^3*s23^2 + 
                  1751*s13^2*s23^3 - 1036*s13*s23^4 + 390*s23^5) - 
                s12^3*s13*(450*s13^5 - 15002*s13^4*s23 + 105*s13^3*s23^2 + 
                  7538*s13^2*s23^3 - 2259*s13*s23^4 + 459*s23^5)) + 
              p3q^4*s12*(-180*s12^8*(s13 + 5*s23) - 10*s13^4*s23^4*
                 (23*s13 + 39*s23) + s12*s13^3*s23^3*(-137*s13^2 + 
                  364*s13*s23 + 459*s23^2) + s12^7*(279*s13^2 + 1280*s13*
                   s23 + 980*s23^2) + 2*s12^6*(612*s13^3 + 731*s13^2*s23 - 
                  30*s13*s23^2 + 20*s23^3) + s12^2*s13^2*s23^2*(-544*s13^3 + 
                  945*s13^2*s23 + 561*s13*s23^2 + 681*s23^3) + s12^3*s13*s23*
                 (722*s13^4 + 1963*s13^3*s23 + 2212*s13^2*s23^2 + 
                  2598*s13*s23^3 - 2160*s23^4) - s12^5*(1089*s13^4 + 
                  5176*s13^3*s23 + 3095*s13^2*s23^2 + 180*s13*s23^3 + 
                  160*s23^4) + s12^4*(90*s13^5 + 188*s13^4*s23 + 219*s13^3*
                   s23^2 - 3081*s13^2*s23^3 - 820*s13*s23^4 + 1680*s23^5)) + 
              p2q*p3q^3*(-180*s12^9*(s13 + 4*s23) + s12^8*(819*s13^2 + 
                  2254*s13*s23 - 580*s23^2) - 20*s13^4*s23^4*(25*s13^2 + 
                  17*s13*s23 - 8*s23^2) + 2*s12*s13^3*s23^3*(-135*s13^3 + 
                  284*s13^2*s23 - 379*s13*s23^2 + 32*s23^3) - 2*s12^7*
                 (333*s13^3 + 448*s13^2*s23 + 623*s13*s23^2 + 1060*s23^3) + 
                s12^2*s13^2*s23^2*(-135*s13^4 + 2051*s13^3*s23 + 1004*s13^2*
                   s23^2 + 1426*s13*s23^3 - 652*s23^4) + s12^6*(2286*s13^4 + 
                  7298*s13^3*s23 - 711*s13^2*s23^2 + 1412*s13*s23^3 + 
                  1160*s23^4) + s12^3*s13*s23*(230*s13^5 - 788*s13^4*s23 + 
                  1093*s13^3*s23^2 - 1020*s13^2*s23^3 - 1578*s13*s23^4 + 
                  1034*s23^5) + 2*s12^5*(2853*s13^5 + 4635*s13^4*s23 + 
                  7048*s13^3*s23^2 + 369*s13^2*s23^3 - 1024*s13*s23^4 + 
                  1380*s23^5) + s12^4*(-189*s13^6 + 4020*s13^5*s23 + 
                  290*s13^4*s23^2 - 5832*s13^3*s23^3 + 5144*s13^2*s23^4 - 
                  2506*s13*s23^5 - 660*s23^6)) + p2q^3*p3q*(s12^7*
                 (-864*s13^3 - 382*s13^2*s23 + 320*s13*s23^2 + 500*s23^3) - 
                20*s13^4*s23^2*(54*s13^4 - 173*s13^3*s23 - 23*s13^2*s23^2 + 
                  171*s13*s23^3 - 33*s23^4) + s12^6*(3447*s13^4 + 3758*s13^3*
                   s23 - 77*s13^2*s23^2 - 88*s13*s23^3 + 840*s23^4) + 
                s12^5*(1206*s13^5 + 5248*s13^4*s23 - 422*s13^3*s23^2 - 
                  571*s13^2*s23^3 - 260*s13*s23^4 + 180*s23^5) - 
                2*s12*s13^3*s23*(585*s13^5 - 2003*s13^4*s23 + 1810*s13^3*
                   s23^2 + 386*s13^2*s23^3 - 1755*s13*s23^4 + 517*s23^5) + 
                s12^4*(8226*s13^6 + 810*s13^5*s23 + 6206*s13^4*s23^2 - 
                  5355*s13^3*s23^3 - 2282*s13^2*s23^4 + 804*s13*s23^5 - 
                  160*s23^6) + 2*s12^3*s13*(639*s13^6 + 7746*s13^5*s23 - 
                  2977*s13^4*s23^2 - 4109*s13^3*s23^3 + 2380*s13^2*s23^4 - 
                  989*s13*s23^5 - 32*s23^6) + s12^2*s13^2*(-333*s13^6 + 
                  3460*s13^5*s23 - 4493*s13^4*s23^2 + 2720*s13^3*s23^3 + 
                  1130*s13^2*s23^4 - 848*s13*s23^5 + 652*s23^6)) + 
              p2q^2*p3q^2*(20*s12^8*(27*s13^2 + 46*s13*s23 - 24*s23^2) + 
                20*s13^4*s23^3*(78*s13^3 - 40*s13^2*s23 - 77*s13*s23^2 + 
                  41*s23^3) - 2*s12^7*(729*s13^3 + 911*s13^2*s23 - 
                  134*s13*s23^2 + 200*s23^3) + 2*s12*s13^3*s23^2*(875*s13^4 - 
                  1272*s13^3*s23 + 770*s13^2*s23^2 + 212*s13*s23^3 - 
                  485*s23^4) + s12^2*s13^3*s23*(1226*s13^4 - 5073*s13^3*s23 + 
                  3199*s13^2*s23^2 - 660*s13*s23^3 + 602*s23^4) + 
                s12^6*(8910*s13^4 + 15582*s13^3*s23 + 221*s13^2*s23^2 + 
                  842*s13*s23^3 + 1620*s23^4) + s12^5*(4266*s13^5 + 
                  10564*s13^4*s23 + 11743*s13^3*s23^2 + 623*s13^2*s23^3 - 
                  2450*s13*s23^4 + 720*s23^5) + s12^4*(-378*s13^6 + 
                  3164*s13^5*s23 + 6298*s13^4*s23^2 - 10362*s13^3*s23^3 + 
                  2164*s13^2*s23^4 + 626*s13*s23^5 - 820*s23^6) + 
                s12^3*s13*(432*s13^6 + 1350*s13^5*s23 - 4203*s13^4*s23^2 - 
                  1144*s13^3*s23^3 + 2342*s13^2*s23^4 - 3580*s13*s23^5 + 
                  970*s23^6))) + p1q^2*(p3q^5*s12^2*s23*(180*s12^8 + 
                10*s13^4*s23^3*(-2*s13 + 21*s23) - 2*s12^7*(153*s13 + 
                  370*s23) + s12^6*(-207*s13^2 + 394*s13*s23 + 40*s23^2) - 
                s12*s13^3*s23^2*(216*s13^2 + 452*s13*s23 + 1121*s23^2) + 
                s12^5*(1674*s13^3 + 1841*s13^2*s23 + 370*s13*s23^2 - 
                  760*s23^3) + s12^2*s13^2*s23*(452*s13^3 - 8*s13^2*s23 - 
                  515*s13*s23^2 + 565*s23^3) + s12^4*(-459*s13^4 - 
                  1674*s13^3*s23 + 939*s13^2*s23^2 + 1250*s13*s23^3 - 
                  1720*s23^4) + s12^3*s13*(90*s13^4 - 921*s13^3*s23 - 
                  60*s13^2*s23^2 - 904*s13*s23^3 + 1580*s23^4)) + 
              p2q^5*s13^2*(200*s12^6*s23^2*(s13 + s23) + 20*s13^4*s23^2*
                 (45*s13^3 - 89*s13^2*s23 - 48*s13*s23^2 + 86*s23^3) + 
                s12^2*s13^2*s23*(-567*s13^4 - 1797*s13^3*s23 + 623*s13^2*
                   s23^2 + 1648*s13*s23^3 - 565*s23^4) + 10*s12*s13^3*s23*
                 (36*s13^4 - 128*s13^3*s23 - 19*s13^2*s23^2 - 13*s13*s23^3 - 
                  158*s23^4) + s12^5*(-1296*s13^4 + 378*s13^3*s23 + 
                  776*s13^2*s23^2 + 730*s13*s23^3 + 80*s23^4) + s12^3*s13*s23*
                 (-7704*s13^4 + 8100*s13^3*s23 + 6808*s13^2*s23^2 - 
                  3249*s13*s23^3 + 1121*s23^4) + s12^4*(-1296*s13^5 + 
                  81*s13^4*s23 + 1129*s13^3*s23^2 + 776*s13^2*s23^3 + 
                  1552*s13*s23^4 - 210*s23^5)) + p2q*p3q^4*s12*(180*s12^9*
                 s23 + 2*s12^8*s23*(-423*s13 + 70*s23) - 10*s13^4*s23^4*
                 (14*s13^2 - 13*s13*s23 + 23*s23^2) + s12^7*s23*(909*s13^2 + 
                  2144*s13*s23 + 620*s23^2) + s12*s13^3*s23^3*(-646*s13^3 - 
                  131*s13^2*s23 + 576*s13*s23^2 + 523*s23^3) + s12^2*s13^2*
                 s23^2*(-1086*s13^4 - 482*s13^3*s23 + 49*s13^2*s23^2 - 
                  1571*s13*s23^3 + 29*s23^4) - s12^6*(1296*s13^4 + 
                  6030*s13^3*s23 + 1433*s13^2*s23^2 + 488*s13*s23^3 + 
                  2840*s23^4) + s12^3*s13*s23*(-558*s13^5 + 3838*s13^4*s23 + 
                  3876*s13^3*s23^2 + 2846*s13^2*s23^3 + 1899*s13*s23^4 - 
                  1126*s23^5) + 3*s12^4*s23*(834*s13^5 + 1237*s13^4*s23 + 
                  4232*s13^3*s23^2 - 335*s13^2*s23^3 + 798*s13*s23^4 + 
                  340*s23^5) - s12^5*(1296*s13^5 + 6201*s13^4*s23 + 
                  5478*s13^3*s23^2 + 1653*s13^2*s23^3 - 2742*s13*s23^4 + 
                  2480*s23^5)) + p2q^4*p3q*s13*(20*s12^7*s23*(-9*s13^2 + 
                  6*s13*s23 + 16*s23^2) + 20*s13^4*s23^2*(36*s13^4 - 
                  133*s13^3*s23 + 57*s13^2*s23^2 + 175*s13*s23^3 - 
                  51*s23^4) + s12^5*s23*(-1422*s13^4 + 7516*s13^3*s23 + 
                  6518*s13^2*s23^2 - 489*s13*s23^3 + 10*s23^4) + 
                2*s12^6*(1296*s13^4 + 2466*s13^3*s23 + 1628*s13^2*s23^2 + 
                  47*s13*s23^3 + 50*s23^4) + s12^3*s13*s23*(-8964*s13^5 + 
                  16974*s13^4*s23 + 5094*s13^3*s23^2 - 5210*s13^2*s23^3 + 
                  3839*s13*s23^4 - 523*s23^5) - s12^2*s13^2*s23*(1665*s13^5 - 
                  2721*s13^4*s23 + 849*s13^3*s23^2 + 1153*s13^2*s23^3 + 
                  1241*s13*s23^4 + 29*s23^5) + 2*s12*s13^3*s23*(180*s13^5 - 
                  1667*s13^4*s23 + 2210*s13^3*s23^2 + 79*s13^2*s23^3 - 
                  1655*s13*s23^4 + 563*s23^5) + s12^4*(-2592*s13^6 + 
                  10503*s13^5*s23 - 4717*s13^4*s23^2 + 7700*s13^3*s23^3 + 
                  6057*s13^2*s23^4 - 1202*s13*s23^5 + 230*s23^6)) + 
              p2q^3*p3q^2*(-20*s12^8*s23*(-27*s13^2 + 42*s13*s23 + 
                  26*s23^2) - 20*s13^5*s23^3*(62*s13^3 - 77*s13^2*s23 - 
                  63*s13*s23^2 + 76*s23^3) - 4*s12*s13^4*s23^2*(455*s13^4 - 
                  1228*s13^3*s23 + 526*s13^2*s23^2 + 378*s13*s23^3 - 
                  351*s23^4) - 2*s12^7*(648*s13^4 + 3150*s13^3*s23 + 
                  255*s13^2*s23^2 + 136*s13*s23^3 + 270*s23^4) + 
                s12^6*(3888*s13^5 + 13266*s13^4*s23 + 4133*s13^3*s23^2 + 
                  2176*s13^2*s23^3 + 1008*s13*s23^4 + 480*s23^5) + 
                s12^2*s13^3*s23*(-1098*s13^5 + 5640*s13^4*s23 - 5000*s13^3*
                   s23^2 + 378*s13^2*s23^3 + 1051*s13*s23^4 + 551*s23^5) - 
                s12^3*s13^2*s23*(1350*s13^5 - 4071*s13^4*s23 + 2688*s13^3*
                   s23^2 + 4295*s13^2*s23^3 - 574*s13*s23^4 + 1103*s23^5) + 
                s12^4*s13*(-1296*s13^6 + 6408*s13^5*s23 - 14045*s13^4*s23^2 + 
                  3104*s13^3*s23^3 + 33*s13^2*s23^4 + 89*s13*s23^5 - 
                  48*s23^6) + s12^5*(3888*s13^6 - 4338*s13^5*s23 + 
                  9059*s13^4*s23^2 + 9398*s13^3*s23^3 + 710*s13^2*s23^4 - 
                  688*s13*s23^5 + 500*s23^6)) + p2q^2*p3q^3*(20*s12^9*s23*
                 (-27*s13 + 26*s23) + 20*s13^5*s23^4*(26*s13^2 + s13*s23 - 
                  25*s23^2) + 2*s12^8*s23*(828*s13^2 - 49*s13*s23 + 
                  30*s23^2) + 2*s12*s13^4*s23^3*(745*s13^3 - 654*s13^2*s23 + 
                  165*s13*s23^2 + 24*s23^3) + s12^6*s23*(7776*s13^4 + 
                  2529*s13^3*s23 + 14*s13^2*s23^2 + 3210*s13*s23^3 + 
                  260*s23^4) - 2*s12^7*(1296*s13^4 + 6264*s13^3*s23 + 
                  1907*s13^2*s23^2 + 725*s13*s23^3 + 860*s23^4) + 
                s12^2*s13^3*s23^2*(2058*s13^4 - 3346*s13^3*s23 + 1106*s13^2*
                   s23^2 + 1013*s13*s23^3 + 1103*s23^4) + s12^4*s13*s23*
                 (612*s13^5 + 5735*s13^4*s23 + 11080*s13^3*s23^2 + 
                  4361*s13^2*s23^3 + 1335*s13*s23^4 - 1404*s23^5) + 
                s12^3*s13^2*s23*(1206*s13^5 - 939*s13^4*s23 + 3872*s13^3*
                   s23^2 + 3243*s13^2*s23^3 + 250*s13*s23^4 - 551*s23^5) + 
                s12^5*(2592*s13^6 + 7650*s13^5*s23 + 18057*s13^4*s23^2 + 
                  22594*s13^3*s23^3 - 622*s13^2*s23^4 + 98*s13*s23^5 + 
                  1520*s23^6))) + p1q^4*s23*(p3q^3*(160*s13^4*s23^5*
                 (s13 + s23) + 360*s12^8*s23*(2*s13 + 5*s23) - 2*s12*s13^3*
                 s23^4*(25*s13^2 + 73*s13*s23 - 112*s23^2) - 3*s12^7*
                 (24*s13^3 + 375*s13^2*s23 + 680*s13*s23^2 + 40*s23^3) - 
                s12^2*s13^2*s23^3*(250*s13^3 + 659*s13^2*s23 + 459*s13*
                   s23^2 + 978*s23^3) - s12^3*s13*s23^2*(1012*s13^4 + 
                  587*s13^3*s23 + 2086*s13^2*s23^2 + 1280*s13*s23^3 - 
                  1360*s23^4) - s12^6*(648*s13^4 + 4005*s13^3*s23 + 
                  3412*s13^2*s23^2 + 1140*s13*s23^3 + 160*s23^4) + 
                s12^4*s23*(369*s13^5 + 1782*s13^4*s23 + 3444*s13^3*s23^2 + 
                  4334*s13^2*s23^3 - 640*s13*s23^4 - 820*s23^5) + 
                s12^5*(72*s13^5 + 2295*s13^4*s23 + 5135*s13^3*s23^2 + 
                  1629*s13^2*s23^3 - 380*s13*s23^4 + 940*s23^5)) + 
              p2q^3*(20*s13^4*s23^3*(90*s13^3 - 39*s13^2*s23 - 88*s13*s23^2 + 
                  41*s23^3) - 2*s12^6*s23*(-54*s13^3 + 119*s13^2*s23 + 
                  100*s13*s23^2 + 80*s23^3) + 10*s12*s13^3*s23^2*(252*s13^4 - 
                  114*s13^3*s23 - 31*s13^2*s23^2 + 199*s13*s23^3 - 
                  136*s23^4) - s12^5*(72*s13^5 + 873*s13^4*s23 + 892*s13^3*
                   s23^2 + 462*s13^2*s23^3 + 124*s13*s23^4 + 320*s23^5) + 
                s12^2*s13^2*s23*(1161*s13^5 - 1410*s13^4*s23 - 221*s13^3*
                   s23^2 - 1634*s13^2*s23^3 - 2286*s13*s23^4 + 978*s23^5) + 
                s12^3*s13*(72*s13^6 + 1809*s13^5*s23 - 11389*s13^4*s23^2 - 
                  6262*s13^3*s23^3 + 3948*s13^2*s23^4 + 253*s13*s23^5 - 
                  224*s23^6) + s12^4*(648*s13^6 - 7335*s13^5*s23 - 
                  3204*s13^4*s23^2 + 1235*s13^3*s23^3 - 967*s13^2*s23^4 + 
                  32*s13*s23^5 - 160*s23^6)) + p2q*p3q^2*(540*s12^8*s23*
                 (s13 + 2*s23) - s12^7*(72*s13^3 + 1647*s13^2*s23 + 
                  1666*s13*s23^2 - 900*s23^3) - 20*s13^3*s23^4*(42*s13^3 - 
                  7*s13^2*s23 - 41*s13*s23^2 + 8*s23^3) - 2*s12*s13^2*s23^3*
                 (460*s13^4 - 90*s13^3*s23 + 663*s13^2*s23^2 + 300*s13*
                   s23^3 - 163*s23^4) + s12^6*(792*s13^4 + 1053*s13^3*s23 - 
                  1620*s13^2*s23^2 + 14*s13*s23^3 + 2140*s23^4) - 
                s12^2*s13*s23^2*(238*s13^5 - 2236*s13^4*s23 + 1461*s13^3*
                   s23^2 - 937*s13^2*s23^3 + 408*s13*s23^4 + 326*s23^5) + 
                s12^5*(1368*s13^5 - 3375*s13^4*s23 - 3165*s13^3*s23^2 + 
                  961*s13^2*s23^3 - 2158*s13*s23^4 + 660*s23^5) + 
                s12^4*(-144*s13^6 + 873*s13^5*s23 - 3728*s13^4*s23^2 - 
                  9214*s13^3*s23^3 + 2640*s13^2*s23^4 + 612*s13*s23^5 - 
                  1500*s23^6) + s12^3*s23*(630*s13^6 + 862*s13^5*s23 + 
                  6209*s13^4*s23^2 + 2190*s13^3*s23^3 - 4752*s13^2*s23^4 + 
                  1964*s13*s23^5 + 160*s23^6)) - p2q^2*p3q*(20*s12^7*s23*
                 (18*s13^2 + 11*s13*s23 - 6*s23^2) - 20*s13^3*s23^3*
                 (36*s13^4 - 126*s13^3*s23 - 71*s13^2*s23^2 + 83*s13*s23^3 - 
                  8*s23^4) - 2*s12^6*(72*s13^4 + 486*s13^3*s23 + 147*s13^2*
                   s23^2 + 27*s13*s23^3 + 80*s23^4) - 2*s12*s13^2*s23^2*
                 (675*s13^5 - 1147*s13^4*s23 + 995*s13^3*s23^2 + 639*s13^2*
                   s23^3 - 1155*s13*s23^4 + 163*s23^5) + s12^5*(1368*s13^5 + 
                  9153*s13^4*s23 + 9372*s13^3*s23^2 - 1606*s13^2*s23^3 - 
                  204*s13*s23^4 + 780*s23^5) + s12^2*s13*s23*(-909*s13^6 + 
                  1540*s13^5*s23 - 5451*s13^4*s23^2 + 1536*s13^3*s23^3 + 
                  1448*s13^2*s23^4 - 1548*s13*s23^5 + 326*s23^6) + 
                s12^4*(792*s13^6 + 9045*s13^5*s23 + 9794*s13^4*s23^2 + 
                  10793*s13^3*s23^3 + 249*s13^2*s23^4 - 2310*s13*s23^5 + 
                  660*s23^6) + s12^3*(-72*s13^7 + 1593*s13^6*s23 + 
                  12971*s13^5*s23^2 + 3768*s13^4*s23^3 - 4588*s13^3*s23^4 + 
                  3579*s13^2*s23^5 - 254*s13*s23^6 - 160*s23^7)))))/
          (36*ep*p1q*(p2q + p3q)*s12^3*s13^3*s23^2*
           (p1q^5*s23^3*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))) + 
         (ep*(9*p1q^6*s12*s23^3*(s12 + s23)^2*(s13 + s23)^2*(10*s12^6*s23^2 + 
              10*s13^4*s23^2*(s13 + s23)^2 - 2*s12^2*s13^3*(s13^3 + 
                3*s13^2*s23 - 2*s13*s23^2 - 4*s23^3) + s12*s13^3*s23*(
                -s13^3 + 16*s13^2*s23 + 25*s13*s23^2 + 8*s23^3) + 
              s12^5*(2*s13^3 + s13^2*s23 + 18*s13*s23^2 + 20*s23^3) + 
              2*s12^4*(s13^4 + 3*s13^3*s23 + 5*s13^2*s23^2 + 13*s13*s23^3 + 
                5*s23^4) + s12^3*s13*(-2*s13^4 + 4*s13^2*s23^2 + 
                9*s13*s23^3 + 8*s23^4)) - 9*(p3q*s12 - p2q*s13)^2*s23*
             (s12 + s23)*(s13 + s23)*(s12 + s13 + s23)*
             (-(p2q^4*s13^2*(10*s12^6*s23*(s13 + s23) + 13*s12^2*s13^3*s23*
                  (s13 + s23)^2 - 10*s13^4*(s13 - s23)*s23*(s13 + s23)^2 + 
                 2*s12*s13^3*s23*(s13 + s23)^2*(s13 + 4*s23) + 5*s12^4*s23*
                  (-3*s13^3 - 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                 s12^5*(-2*s13^3 - 5*s13^2*s23 + 17*s13*s23^2 + 20*s23^3) + 
                 s12^3*s13*(2*s13^4 + 5*s13^3*s23 - 9*s13^2*s23^2 - 
                   4*s13*s23^3 + 8*s23^4))) + p3q^4*s12^2*(10*s12^6*s23^2 + 
                10*s13^4*s23^3*(s13 + s23) + s12^2*s13^3*s23*(-3*s13^2 + 
                  4*s13*s23 + 8*s23^2) + s12*s13^3*s23^2*(9*s13^2 + 
                  17*s13*s23 + 8*s23^2) + s12^4*s23*(5*s13^3 + 2*s13^2*s23 + 
                  16*s13*s23^2 + 10*s23^3) + s12^5*(2*s13^3 + s13^2*s23 + 
                  8*s13*s23^2 + 20*s23^3) + s12^3*s13*(-2*s13^4 - 
                  3*s13^3*s23 + 3*s13^2*s23^2 + s13*s23^3 + 8*s23^4)) + 
              p2q*p3q^3*s12*(10*s12^8*s23 - 2*s12^7*(s13 - 15*s23)*s23 - 
                10*s13^4*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) - 2*s12^2*s13^4*
                 s23*(3*s13^2 + 8*s13*s23 + 5*s23^2) - s12*s13^3*s23^2*
                 (39*s13^3 + 54*s13^2*s23 + 23*s13*s23^2 + 8*s23^3) + 
                2*s12^6*(2*s13^3 - 5*s13^2*s23 - 13*s13*s23^2 + 10*s23^3) - 
                s12^5*(4*s13^4 - 6*s13^3*s23 + 45*s13^2*s23^2 + 44*s13*
                   s23^3 + 10*s23^4) + s12^3*s13*(4*s13^5 + 4*s13^4*s23 + 
                  14*s13^3*s23^2 + 16*s13^2*s23^3 - 17*s13*s23^4 - 8*s23^5) - 
                2*s12^4*(2*s13^5 + s13^4*s23 - 5*s13^3*s23^2 + 26*s13^2*
                   s23^3 + 14*s13*s23^4 + 5*s23^5)) + p2q^3*p3q*s13*(
                -10*s13^4*(2*s13 - s23)*s23^2*(s13 + s23)^2 + 10*s12^7*s23*
                 (3*s13 + 2*s23) + s12^2*s13^3*s23*(4*s13^3 + 43*s13^2*s23 + 
                  68*s13*s23^2 + 29*s23^3) + s12^6*(-4*s13^3 - 10*s13^2*s23 + 
                  65*s13*s23^2 + 50*s23^3) + 2*s12*s13^3*s23*(-15*s13^4 - 
                  13*s13^3*s23 + 13*s13^2*s23^2 + 15*s13*s23^3 + 4*s23^4) + 
                s12^5*(4*s13^4 - 38*s13^3*s23 - 24*s13^2*s23^2 + 
                  48*s13*s23^3 + 40*s23^4) + 2*s12^3*s13*(-2*s13^5 + 
                  15*s13^4*s23 + 31*s13^3*s23^2 + 4*s13^2*s23^3 - 
                  6*s13*s23^4 + 4*s23^5) + s12^4*(4*s13^5 + 14*s13^4*s23 - 
                  48*s13^3*s23^2 - 26*s13^2*s23^3 + 21*s13*s23^4 + 
                  10*s23^5)) - p2q^2*p3q^2*(s12 - s13)*(10*s13^4*s23^3*
                 (s13 + s23)^2 + 10*s12^7*s23*(3*s13 + s23) + 2*s12*s13^3*
                 s23^2*(25*s13^3 + 39*s13^2*s23 + 18*s13*s23^2 + 4*s23^3) + 
                s12^2*s13^3*s23*(29*s13^3 + 80*s13^2*s23 + 69*s13*s23^2 + 
                  18*s23^3) + s12^6*(-2*s13^3 + 23*s13^2*s23 + 88*s13*s23^2 + 
                  30*s23^3) + 2*s12^5*(3*s13^4 - 5*s13^3*s23 + 30*s13^2*
                   s23^2 + 42*s13*s23^3 + 15*s23^4) + s12^4*(6*s13^5 + 
                  6*s13^4*s23 - 12*s13^3*s23^2 + 43*s13^2*s23^3 + 
                  34*s13*s23^4 + 10*s23^5) + s12^3*(-2*s13^6 + 26*s13^5*s23 + 
                  36*s13^4*s23^2 + 6*s13^3*s23^3 + 6*s13^2*s23^4 + 
                  8*s13*s23^5))) - p1q^5*s23^2*(s12 + s23)*(s13 + s23)*
             (p3q*(-70*s13^4*s23^5*(s13 + s23)^3 + 90*s12^9*s23^2*
                 (3*s13 + 4*s23) - 2*s12*s13^3*s23^4*(s13 + s23)^2*
                 (80*s13^2 + 171*s13*s23 + 46*s23^2) - 2*s12^2*s13^3*s23^3*
                 (6*s13^4 - 120*s13^3*s23 - 145*s13^2*s23^2 + 134*s13*s23^3 + 
                  153*s23^4) + s12^8*(72*s13^4 + 90*s13^3*s23 + 305*s13^2*
                   s23^2 + 1148*s13*s23^3 + 970*s23^4) + s12^7*(144*s13^5 - 
                  261*s13^4*s23 - 735*s13^3*s23^2 - 79*s13^2*s23^3 + 
                  1232*s13*s23^4 + 820*s23^5) + s12^3*s13*s23^2*(269*s13^6 + 
                  1067*s13^5*s23 + 1209*s13^4*s23^2 + 331*s13^3*s23^3 - 
                  154*s13^2*s23^4 + 98*s13*s23^5 + 92*s23^6) + s12^5*s23*
                 (117*s13^6 - 2144*s13^5*s23 - 5878*s13^4*s23^2 - 6061*s13^3*
                   s23^3 - 2635*s13^2*s23^4 - 82*s13*s23^5 + 100*s23^6) + 
                s12^6*(72*s13^6 - 585*s13^5*s23 - 3153*s13^4*s23^2 - 
                  4212*s13^3*s23^3 - 2095*s13^2*s23^4 + 140*s13*s23^5 + 
                  240*s23^6) + s12^4*s23*(351*s13^7 + 580*s13^6*s23 - 
                  1382*s13^5*s23^2 - 3075*s13^4*s23^3 - 2614*s13^3*s23^4 - 
                  826*s13^2*s23^5 + 224*s13*s23^6 + 70*s23^7)) + 
              p2q*(10*s13^4*(9*s13 - 7*s23)*s23^4*(s13 + s23)^3 + 
                2*s12*s13^3*s23^3*(s13 + s23)^2*(225*s13^3 + 271*s13^2*s23 - 
                  90*s13*s23^2 - 46*s23^3) + 2*s12^8*(18*s13^4 + 9*s13^3*
                   s23 + 31*s13^2*s23^2 + 25*s13*s23^3 - 10*s23^4) + 
                s12^2*s13^3*s23^2*(243*s13^5 + 1347*s13^4*s23 + 2553*s13^3*
                   s23^2 + 1883*s13^2*s23^3 + 200*s13*s23^4 - 234*s23^5) + 
                s12^7*(144*s13^5 - 405*s13^4*s23 - 681*s13^3*s23^2 + 
                  38*s13^2*s23^3 + 260*s13*s23^4 + 10*s23^5) + 
                s12^6*(144*s13^6 - 369*s13^5*s23 - 2910*s13^4*s23^2 - 
                  2961*s13^3*s23^3 - 322*s13^2*s23^4 + 572*s13*s23^5 + 
                  150*s23^6) + s12^5*s23*(333*s13^6 - 1820*s13^5*s23 - 
                  5464*s13^4*s23^2 - 4207*s13^3*s23^3 - 430*s13^2*s23^4 + 
                  656*s13*s23^5 + 190*s23^6) + s12^3*s13*s23*(-72*s13^7 + 
                  233*s13^6*s23 + 1094*s13^5*s23^2 + 813*s13^4*s23^3 - 
                  164*s13^3*s23^4 - 190*s13^2*s23^5 + 170*s13*s23^6 + 
                  92*s23^7) + s12^4*(-36*s13^8 + 207*s13^7*s23 + 265*s13^6*
                   s23^2 - 2246*s13^5*s23^3 - 3813*s13^4*s23^4 - 1993*s13^3*
                   s23^5 + 38*s13^2*s23^6 + 386*s13*s23^7 + 70*s23^8))) + 
            p1q^4*s23*(p3q^2*(s12 + s23)*(70*s13^4*s23^6*(s13 + s23)^4 + 
                270*s12^10*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) + 
                4*s12*s13^3*s23^5*(s13 + s23)^3*(5*s13^2 + 33*s13*s23 + 
                  23*s23^2) - 2*s12^2*s13^3*s23^4*(s13 + s23)^2*(64*s13^3 + 
                  555*s13^2*s23 + 561*s13*s23^2 - 15*s23^3) - s12^3*s13*s23^3*
                 (s13 + s23)^2*(437*s13^5 + 657*s13^4*s23 + 512*s13^3*s23^2 + 
                  704*s13^2*s23^3 + 6*s13*s23^4 + 92*s23^5) + 
                s12^9*(90*s13^5 + 225*s13^4*s23 + 214*s13^3*s23^2 + 
                  961*s13^2*s23^3 + 2072*s13*s23^4 + 1200*s23^5) + 
                s12^8*(234*s13^6 - 198*s13^5*s23 - 2424*s13^4*s23^2 - 
                  3901*s13^3*s23^3 - 2151*s13^2*s23^4 + 518*s13*s23^5 + 
                  680*s23^6) + s12^7*(198*s13^7 - 432*s13^6*s23 - 5532*s13^5*
                   s23^2 - 13602*s13^4*s23^3 - 14473*s13^3*s23^4 - 
                  7293*s13^2*s23^5 - 1170*s13*s23^6 + 170*s23^7) + 
                s12^4*s23^2*(-182*s13^8 + 219*s13^7*s23 + 2425*s13^6*s23^2 + 
                  4003*s13^5*s23^3 + 3773*s13^4*s23^4 + 2724*s13^3*s23^5 + 
                  1062*s13^2*s23^6 - 18*s13*s23^7 - 70*s23^8) + s12^5*s23*
                 (711*s13^8 + 2096*s13^7*s23 + 994*s13^6*s23^2 - 2616*s13^5*
                   s23^3 - 2694*s13^4*s23^4 - 33*s13^3*s23^5 + 1506*s13^2*
                   s23^6 + 1010*s13*s23^7 + 110*s23^8) + s12^6*(54*s13^8 + 
                  702*s13^7*s23 - 922*s13^6*s23^2 - 9392*s13^5*s23^3 - 
                  17306*s13^4*s23^4 - 13861*s13^3*s23^5 - 4197*s13^2*s23^6 + 
                  510*s13*s23^7 + 330*s23^8)) - p2q*p3q*(10*s13^4*
                 (39*s13 - 14*s23)*s23^6*(s13 + s23)^4 + 2*s12*s13^3*s23^5*
                 (s13 + s23)^3*(445*s13^3 + 720*s13^2*s23 - 52*s13*s23^2 - 
                  92*s23^3) + s12^2*s13^3*s23^4*(s13 + s23)^2*(833*s13^4 + 
                  1273*s13^3*s23 + 2083*s13^2*s23^2 + 1775*s13*s23^3 - 
                  448*s23^4) - 2*s12^10*(36*s13^5 + 72*s13^4*s23 - 
                  91*s13^3*s23^2 - 217*s13^2*s23^3 - 80*s13*s23^4 + 
                  15*s23^5) + s12^9*(-252*s13^6 + 180*s13^5*s23 + 2723*s13^4*
                   s23^2 + 4308*s13^3*s23^3 + 2205*s13^2*s23^4 - 342*s13*
                   s23^5 - 460*s23^6) + s12^8*(-396*s13^7 + 1188*s13^6*s23 + 
                  8649*s13^5*s23^2 + 18416*s13^4*s23^3 + 16150*s13^3*s23^4 + 
                  3293*s13^2*s23^5 - 3166*s13*s23^6 - 1400*s23^7) + 
                s12^3*s13*s23^4*(390*s13^7 + 3503*s13^6*s23 + 7817*s13^5*
                   s23^2 + 6925*s13^4*s23^3 + 2021*s13^3*s23^4 - 136*s13^2*
                   s23^5 + 248*s13*s23^6 + 184*s23^7) + s12^7*(-324*s13^8 + 
                  180*s13^7*s23 + 11908*s13^6*s23^2 + 33764*s13^5*s23^3 + 
                  41725*s13^4*s23^4 + 22861*s13^3*s23^5 - 584*s13^2*s23^6 - 
                  5860*s13*s23^7 - 1600*s23^8) + s12^6*(-108*s13^9 - 
                  1620*s13^8*s23 + 5774*s13^7*s23^2 + 35320*s13^6*s23^3 + 
                  58884*s13^5*s23^4 + 42805*s13^4*s23^5 + 9623*s13^3*s23^6 - 
                  6172*s13^2*s23^7 - 4220*s13*s23^8 - 550*s23^9) + 
                s12^4*s23^2*(-1321*s13^9 - 158*s13^8*s23 + 13889*s13^7*
                   s23^2 + 25733*s13^6*s23^3 + 16957*s13^5*s23^4 + 
                  1912*s13^4*s23^5 - 3635*s13^3*s23^6 - 1279*s13^2*s23^7 + 
                  538*s13*s23^8 + 140*s23^9) + s12^5*s23*(-936*s13^9 - 
                  1275*s13^8*s23 + 15940*s13^7*s23^2 + 45668*s13^6*s23^3 + 
                  47828*s13^5*s23^4 + 17915*s13^4*s23^5 - 4977*s13^3*s23^6 - 
                  5593*s13^2*s23^7 - 670*s13*s23^8 + 220*s23^9)) + 
              p2q^2*(s13 + s23)*(10*s13^4*s23^5*(s13 + s23)^3*(36*s13^2 - 
                  39*s13*s23 + 7*s23^2) + 2*s12*s13^3*s23^4*(s13 + s23)^2*
                 (585*s13^4 + 464*s13^3*s23 - 711*s13^2*s23^2 - 94*s13*
                   s23^3 + 46*s23^4) + 2*s12^9*(36*s13^5 + 36*s13^4*s23 - 
                  28*s13^3*s23^2 - 53*s13^2*s23^3 - 45*s13*s23^4 - 
                  35*s23^5) + s12^8*(234*s13^6 - 1035*s13^5*s23 - 1146*s13^4*
                   s23^2 + 25*s13^3*s23^3 - 60*s13^2*s23^4 - 512*s13*s23^5 - 
                  350*s23^6) + s12^2*s13^3*s23^3*(1053*s13^6 + 3991*s13^5*
                   s23 + 4257*s13^4*s23^2 - 1021*s13^3*s23^3 - 4180*s13^2*
                   s23^4 - 1586*s13*s23^5 + 254*s23^6) + s12^7*(234*s13^7 - 
                  1314*s13^6*s23 - 8628*s13^5*s23^2 - 6549*s13^4*s23^3 + 
                  1321*s13^3*s23^4 + 1200*s13^2*s23^5 - 1150*s13*s23^6 - 
                  700*s23^7) + s12^6*(54*s13^8 + 612*s13^7*s23 - 8878*s13^6*
                   s23^2 - 23202*s13^5*s23^3 - 12739*s13^4*s23^4 + 
                  4001*s13^3*s23^5 + 3024*s13^2*s23^6 - 1370*s13*s23^7 - 
                  700*s23^8) + s12^3*s13*s23^2*(180*s13^8 + 1827*s13^7*s23 + 
                  2497*s13^6*s23^2 - 3679*s13^5*s23^3 - 7657*s13^4*s23^4 - 
                  2982*s13^3*s23^5 + 592*s13^2*s23^6 + 34*s13*s23^7 - 
                  92*s23^8) - s12^4*s23*(81*s13^9 - 1258*s13^8*s23 + 
                  652*s13^7*s23^2 + 14760*s13^6*s23^3 + 18020*s13^5*s23^4 + 
                  5019*s13^4*s23^5 - 2448*s13^3*s23^6 - 936*s13^2*s23^7 + 
                  430*s13*s23^8 + 70*s23^9) - s12^5*(18*s13^9 - 738*s13^8*
                   s23 + 298*s13^7*s23^2 + 17768*s13^6*s23^3 + 28538*s13^5*
                   s23^4 + 10957*s13^4*s23^5 - 4779*s13^3*s23^6 - 2772*s13^2*
                   s23^7 + 980*s13*s23^8 + 350*s23^9))) + 
            p1q*(-(p2q^5*s13^3*(s13 + s23)*(90*s12^9*s23^2*(s13 + s23) + 
                 10*s13^4*s23^3*(s13 + s23)^3*(9*s13^2 - 45*s13*s23 + 
                   34*s23^2) + 2*s12*s13^3*s23^2*(s13 + s23)^2*(45*s13^4 - 
                   234*s13^3*s23 - 424*s13^2*s23^2 + 459*s13*s23^3 + 
                   154*s23^4) + s12^8*(-36*s13^4 - 36*s13^3*s23 + 73*s13^2*
                    s23^2 + 643*s13*s23^3 + 560*s23^4) + s12^2*s13^3*s23^2*
                  (-108*s13^5 - 1104*s13^4*s23 - 1545*s13^3*s23^2 + 
                   709*s13^2*s23^3 + 2257*s13*s23^4 + 999*s23^5) + 
                 s12^7*(-108*s13^5 + 153*s13^4*s23 - 39*s13^3*s23^2 - 
                   56*s13^2*s23^3 + 1504*s13*s23^4 + 1340*s23^5) + 
                 s12^3*s13*s23^2*(-323*s13^6 - 752*s13^5*s23 + 447*s13^4*
                    s23^2 + 1100*s13^3*s23^3 - 116*s13^2*s23^4 - 296*s13*
                    s23^5 + 124*s23^6) + s12^6*(-108*s13^6 + 45*s13^5*s23 + 
                   849*s13^4*s23^2 - 864*s13^3*s23^3 - 1262*s13^2*s23^4 + 
                   1678*s13*s23^5 + 1560*s23^6) + s12^4*s23*(-369*s13^7 - 
                   778*s13^6*s23 + 689*s13^5*s23^2 + 69*s13^4*s23^3 - 
                   2669*s13^3*s23^4 - 1523*s13^2*s23^5 + 487*s13*s23^6 + 
                   200*s23^7) + s12^5*(-36*s13^7 - 513*s13^6*s23 + 
                   218*s13^5*s23^2 + 532*s13^4*s23^3 - 2723*s13^3*s23^4 - 
                   2360*s13^2*s23^5 + 1090*s13*s23^6 + 890*s23^7))) + 
              p3q^5*s12^3*(s12 + s23)*(90*s12^9*s23^2*(s13 + s23) + 
                10*s13^4*s23^4*(s13 + s23)^3*(9*s13 + 20*s23) + s12*s13^3*
                 s23^3*(s13 + s23)^2*(81*s13^3 + 182*s13^2*s23 + 315*s13*
                   s23^2 + 124*s23^3) + 2*s12^8*(18*s13^4 + 9*s13^3*s23 - 
                  23*s13^2*s23^2 + 61*s13*s23^3 + 80*s23^4) - s12^2*s13^3*
                 s23^2*(27*s13^5 + 534*s13^4*s23 + 1272*s13^3*s23^2 + 
                  1006*s13^2*s23^3 + 277*s13*s23^4 + 36*s23^5) + 
                s12^7*(108*s13^5 - 171*s13^4*s23 - 591*s13^3*s23^2 - 
                  808*s13^2*s23^3 - 136*s13*s23^4 + 280*s23^5) + 
                s12^6*(108*s13^6 - 9*s13^5*s23 - 1560*s13^4*s23^2 - 
                  2574*s13^3*s23^3 - 1483*s13^2*s23^4 + 608*s13*s23^5 + 
                  780*s23^6) - s12^3*s13*s23*(18*s13^7 + 253*s13^6*s23 + 
                  1462*s13^5*s23^2 + 2931*s13^4*s23^3 + 2027*s13^3*s23^4 + 
                  100*s13^2*s23^5 - 611*s13*s23^6 - 308*s23^7) + 
                s12^4*s23*(351*s13^7 + 301*s13^6*s23 - 2300*s13^5*s23^2 - 
                  3453*s13^4*s23^3 - 1318*s13^3*s23^4 + 1217*s13^2*s23^5 + 
                  1502*s13*s23^6 + 340*s23^7) + s12^5*(36*s13^7 + 549*s13^6*
                   s23 - 578*s13^5*s23^2 - 3259*s13^4*s23^3 - 3343*s13^3*
                   s23^4 - 115*s13^2*s23^5 + 1970*s13*s23^6 + 910*s23^7)) + 
              p2q*p3q^4*s12^2*(-90*s12^11*s23^2*(s13 + s23) - 10*s13^4*s23^5*
                 (s13 + s23)^3*(27*s13^2 + 24*s13*s23 + 11*s23^2) + 
                2*s12^10*(18*s13^4 + 9*s13^3*s23 - 230*s13^2*s23^2 - 
                  326*s13*s23^3 - 100*s23^4) - 2*s12*s13^3*s23^4*(s13 + s23)^
                  2*(351*s13^4 + 646*s13^3*s23 + 248*s13^2*s23^2 + 
                  69*s13*s23^3 + 26*s23^4) - s12^9*(36*s13^5 + 261*s13^4*
                   s23 + 110*s13^3*s23^2 + 819*s13^2*s23^3 + 344*s13*s23^4 - 
                  550*s23^5) + s12^2*s13^3*s23^3*(-459*s13^6 - 764*s13^5*
                   s23 + 682*s13^4*s23^2 + 2334*s13^3*s23^3 + 2111*s13^2*
                   s23^4 + 854*s13*s23^5 + 90*s23^6) + s12^8*(-324*s13^6 + 
                  549*s13^5*s23 + 588*s13^4*s23^2 + 1525*s13^3*s23^3 + 
                  1864*s13^2*s23^4 + 2684*s13*s23^5 + 2150*s23^6) + 
                s12^7*(-396*s13^7 + 297*s13^6*s23 + 5320*s13^5*s23^2 + 
                  6929*s13^4*s23^3 + 5730*s13^3*s23^4 + 4348*s13^2*s23^5 + 
                  4050*s13*s23^6 + 2250*s23^7) + s12^5*s23*(-1548*s13^8 - 
                  3671*s13^7*s23 + 5836*s13^6*s23^2 + 15251*s13^5*s23^3 + 
                  11925*s13^4*s23^4 + 682*s13^3*s23^5 - 5333*s13^2*s23^6 - 
                  2692*s13*s23^7 - 550*s23^8) + s12^3*s13*s23^2*(27*s13^8 + 
                  1734*s13^7*s23 + 6273*s13^6*s23^2 + 10323*s13^5*s23^3 + 
                  8572*s13^4*s23^4 + 2809*s13^3*s23^5 - 970*s13^2*s23^6 - 
                  1040*s13*s23^7 - 236*s23^8) + s12^6*(-144*s13^8 - 
                  2133*s13^7*s23 + 1740*s13^6*s23^2 + 11861*s13^5*s23^3 + 
                  13972*s13^4*s23^4 + 6210*s13^3*s23^5 - 20*s13^2*s23^6 + 
                  260*s13*s23^7 + 460*s23^8) + s12^4*s23*(54*s13^9 - 
                  392*s13^8*s23 + 1675*s13^7*s23^2 + 11444*s13^6*s23^3 + 
                  14172*s13^5*s23^4 + 5820*s13^4*s23^5 - 2563*s13^3*s23^6 - 
                  4228*s13^2*s23^7 - 1604*s13*s23^8 - 250*s23^9)) + 
              p2q^2*p3q^3*s12*(10*s13^5*s23^5*(s13 + s23)^3*(27*s13^2 - 
                  12*s13*s23 - 14*s23^2) + 90*s12^11*s23^2*(4*s13^2 + 
                  5*s13*s23 + s23^2) + s12*s13^4*s23^4*(s13 + s23)^2*
                 (1071*s13^4 + 792*s13^3*s23 - 1505*s13^2*s23^2 - 
                  1250*s13*s23^3 - 294*s23^4) + s12^10*(-144*s13^5 - 
                  126*s13^4*s23 + 895*s13^3*s23^2 + 2159*s13^2*s23^3 + 
                  1452*s13*s23^4 + 200*s23^5) + s12^9*(-216*s13^6 + 
                  720*s13^5*s23 + 810*s13^4*s23^2 + 1522*s13^3*s23^3 + 
                  1602*s13^2*s23^4 - 206*s13*s23^5 - 350*s23^6) + 
                s12^8*(216*s13^7 - 900*s13^6*s23 + 2694*s13^5*s23^2 + 
                  2127*s13^4*s23^3 - 3685*s13^3*s23^4 - 7412*s13^2*s23^5 - 
                  6080*s13*s23^6 - 1600*s23^7) + 2*s12^2*s13^3*s23^3*
                 (558*s13^7 + 1122*s13^6*s23 - 1399*s13^5*s23^2 - 5459*s13^4*
                   s23^3 - 5730*s13^3*s23^4 - 2927*s13^2*s23^5 - 719*s13*
                   s23^6 - 26*s23^7) + s12^7*(504*s13^8 - 2034*s13^7*s23 - 
                  5923*s13^6*s23^2 + 933*s13^5*s23^3 + 1007*s13^4*s23^4 - 
                  10719*s13^3*s23^5 - 15668*s13^2*s23^6 - 9330*s13*s23^7 - 
                  2050*s23^8) + s12^3*s13^2*s23^2*(261*s13^8 - 1272*s13^7*
                   s23 - 7906*s13^6*s23^2 - 16049*s13^5*s23^3 - 17170*s13^4*
                   s23^4 - 10253*s13^3*s23^5 - 2659*s13^2*s23^6 + 
                  204*s13*s23^7 + 184*s23^8) + s12^6*(216*s13^9 + 2088*s13^8*
                   s23 - 3151*s13^7*s23^2 - 6974*s13^6*s23^3 - 1502*s13^5*
                   s23^4 - 1804*s13^4*s23^5 - 9356*s13^3*s23^6 - 11513*s13^2*
                   s23^7 - 5900*s13*s23^8 - 1160*s23^9) - s12^4*s13*s23*
                 (54*s13^9 - 354*s13^8*s23 + 1368*s13^7*s23^2 + 10881*s13^6*
                   s23^3 + 15098*s13^5*s23^4 + 9430*s13^4*s23^5 + 3167*s13^3*
                   s23^6 + 22*s13^2*s23^7 - 182*s13*s23^8 + 96*s23^9) - 
                s12^5*s23*(-2322*s13^9 - 5284*s13^8*s23 + 3853*s13^7*s23^2 + 
                  8164*s13^6*s23^3 + 4258*s13^5*s23^4 + 3272*s13^4*s23^5 + 
                  3227*s13^3*s23^6 + 3062*s13^2*s23^7 + 1538*s13*s23^8 + 
                  250*s23^9)) + p2q^4*p3q*s13^2*(90*s12^10*s23^2*(4*s13^2 + 
                  7*s13*s23 + 3*s23^2) + 10*s13^4*s23^4*(s13 + s23)^4*
                 (18*s13^2 - 70*s13*s23 + 25*s23^2) + 2*s12*s13^3*s23^3*
                 (s13 + s23)^3*(270*s13^4 - 773*s13^3*s23 - 941*s13^2*s23^2 + 
                  455*s13*s23^3 + 118*s23^4) + s12^2*s13^3*s23^2*(s13 + s23)^
                  2*(360*s13^5 - 1209*s13^4*s23 - 5108*s13^3*s23^2 - 
                  1813*s13^2*s23^3 + 2166*s13*s23^4 + 1320*s23^5) + 
                s12^9*(-144*s13^5 - 234*s13^4*s23 + 319*s13^3*s23^2 + 
                  2557*s13^2*s23^3 + 3458*s13*s23^4 + 1320*s23^5) + 
                s12^8*(-396*s13^6 + 342*s13^5*s23 + 680*s13^4*s23^2 + 
                  402*s13^3*s23^3 + 4668*s13^2*s23^4 + 6978*s13*s23^5 + 
                  2690*s23^6) + s12^7*(-324*s13^7 - 333*s13^6*s23 + 
                  3939*s13^5*s23^2 + 2729*s13^4*s23^3 - 3819*s13^3*s23^4 + 
                  774*s13^2*s23^5 + 6514*s13*s23^6 + 2960*s23^7) + 
                s12^3*s13*s23^2*(-352*s13^8 - 3781*s13^7*s23 - 8912*s13^6*
                   s23^2 - 5100*s13^5*s23^3 + 5418*s13^4*s23^4 + 7015*s13^3*
                   s23^5 + 1686*s13^2*s23^6 - 242*s13*s23^7 + 52*s23^8) + 
                s12^6*(-36*s13^8 - 2241*s13^7*s23 - 1066*s13^6*s23^2 + 
                  6724*s13^5*s23^3 + 1500*s13^4*s23^4 - 10557*s13^3*s23^5 - 
                  5506*s13^2*s23^6 + 2856*s13*s23^7 + 1890*s23^8) + 
                s12^4*s23*(387*s13^9 - 154*s13^8*s23 - 3037*s13^7*s23^2 + 
                  836*s13^6*s23^3 + 8199*s13^5*s23^4 + 3852*s13^4*s23^5 - 
                  3131*s13^3*s23^6 - 1962*s13^2*s23^7 + 184*s13*s23^8 + 
                  110*s23^9) + s12^5*(36*s13^9 - 945*s13^8*s23 - 3726*s13^7*
                   s23^2 + 1825*s13^6*s23^3 + 9595*s13^5*s23^4 + 280*s13^4*
                   s23^5 - 10388*s13^3*s23^6 - 5529*s13^2*s23^7 + 
                  624*s13*s23^8 + 680*s23^9)) + p2q^3*p3q^2*s13*(
                -10*s13^5*(9*s13 - 25*s23)*s23^5*(s13 + s23)^4 - 
                270*s12^11*s23^2*(2*s13^2 + 3*s13*s23 + s23^2) - 
                4*s12*s13^4*s23^4*(s13 + s23)^3*(180*s13^3 - 272*s13^2*s23 - 
                  351*s13*s23^2 - 24*s23^3) + 3*s12^10*(72*s13^5 + 
                  90*s13^4*s23 - 269*s13^3*s23^2 - 1146*s13^2*s23^3 - 
                  1169*s13*s23^4 - 320*s23^5) - s12^2*s13^3*s23^3*
                 (s13 + s23)^2*(1161*s13^5 - 868*s13^4*s23 - 6141*s13^3*
                   s23^2 - 3826*s13^2*s23^3 - 510*s13*s23^4 + 184*s23^5) + 
                2*s12^9*(252*s13^6 - 387*s13^5*s23 - 610*s13^4*s23^2 - 
                  706*s13^3*s23^3 - 2364*s13^2*s23^4 - 2239*s13*s23^5 - 
                  500*s23^6) + s12^8*(216*s13^7 + 756*s13^6*s23 - 5754*s13^5*
                   s23^2 - 5542*s13^4*s23^3 + 3456*s13^3*s23^4 + 3822*s13^2*
                   s23^5 + 618*s13*s23^6 + 200*s23^7) + s12^3*s13^2*s23^2*
                 (-513*s13^8 + 616*s13^7*s23 + 9623*s13^6*s23^2 + 20537*s13^5*
                   s23^3 + 18780*s13^4*s23^4 + 7615*s13^3*s23^5 + 342*s13^2*
                   s23^6 - 484*s13*s23^7 + 52*s23^8) + s12^7*(-216*s13^8 + 
                  3330*s13^7*s23 + 3105*s13^6*s23^2 - 10671*s13^5*s23^3 - 
                  8353*s13^4*s23^4 + 10797*s13^3*s23^5 + 14326*s13^2*s23^6 + 
                  6096*s13*s23^7 + 1050*s23^8) + s12^5*s23*(-1548*s13^9 - 
                  2632*s13^8*s23 + 2857*s13^7*s23^2 - 1372*s13^6*s23^3 - 
                  9658*s13^5*s23^4 - 2208*s13^4*s23^5 + 6763*s13^3*s23^6 + 
                  5898*s13^2*s23^7 + 1992*s13*s23^8 + 140*s23^9) + 
                s12^4*s13*s23*(18*s13^9 + 184*s13^8*s23 + 3423*s13^7*s23^2 + 
                  11147*s13^6*s23^3 + 11498*s13^5*s23^4 + 3404*s13^4*s23^5 + 
                  143*s13^3*s23^6 + 1465*s13^2*s23^7 + 1252*s13*s23^8 + 
                  294*s23^9) + s12^6*(-144*s13^9 - 36*s13^8*s23 + 4577*s13^7*
                   s23^2 - 1982*s13^6*s23^3 - 15534*s13^5*s23^4 - 6516*s13^4*
                   s23^5 + 11734*s13^3*s23^6 + 13372*s13^2*s23^7 + 
                  5395*s13*s23^8 + 680*s23^9))) - 
            p1q^3*(p3q^3*s12*(s12 + s23)*(10*s13^4*s23^6*(s13 + s23)^3*
                 (5*s13 + 12*s23) + 90*s12^10*s23^2*(s13^2 + 5*s13*s23 + 
                  4*s23^2) + s12*s13^3*s23^5*(s13 + s23)^2*(169*s13^3 + 
                  704*s13^2*s23 + 829*s13*s23^2 + 204*s23^3) + 
                s12^9*(36*s13^5 + 144*s13^4*s23 + 35*s13^3*s23^2 - 
                  25*s13^2*s23^3 + 508*s13*s23^4 + 480*s23^5) + s12^2*s13^3*
                 s23^4*(287*s13^5 + 322*s13^4*s23 - 640*s13^3*s23^2 - 
                  518*s13^2*s23^3 + 817*s13*s23^4 + 660*s23^5) + 
                s12^8*(108*s13^6 + 99*s13^5*s23 - 1428*s13^4*s23^2 - 
                  3002*s13^3*s23^3 - 3071*s13^2*s23^4 - 1498*s13*s23^5 - 
                  180*s23^6) + s12^7*(108*s13^7 + 63*s13^6*s23 - 1758*s13^5*
                   s23^2 - 6306*s13^4*s23^3 - 7634*s13^3*s23^4 - 4421*s13^2*
                   s23^5 - 1220*s13*s23^6 - 120*s23^7) - s12^3*s13*s23^3*
                 (352*s13^7 + 1981*s13^6*s23 + 3034*s13^5*s23^2 + 1149*s13^4*
                   s23^3 - 293*s13^3*s23^4 + 220*s13^2*s23^5 + 685*s13*
                   s23^6 + 348*s23^7) + s12^5*s23*(297*s13^8 + 967*s13^7*
                   s23 + 1937*s13^6*s23^2 + 5261*s13^5*s23^3 + 12634*s13^4*
                   s23^4 + 13363*s13^3*s23^5 + 5923*s13^2*s23^6 + 
                  500*s13*s23^7 - 360*s23^8) + s12^4*s23^2*(-739*s13^8 - 
                  2301*s13^7*s23 - 407*s13^6*s23^2 + 6370*s13^5*s23^3 + 
                  10648*s13^4*s23^4 + 7456*s13^3*s23^5 + 1291*s13^2*s23^6 - 
                  1022*s13*s23^7 - 300*s23^8) + s12^6*(36*s13^8 + 405*s13^7*
                   s23 + 1321*s13^6*s23^2 + 35*s13^5*s23^3 - 1195*s13^4*
                   s23^4 + 634*s13^3*s23^5 + 2482*s13^2*s23^6 + 1510*s13*
                   s23^7 + 120*s23^8)) + p2q*p3q^2*(10*s13^4*(23*s13 - 7*s23)*
                 s23^7*(s13 + s23)^4 + 4*s12*s13^3*s23^6*(s13 + s23)^3*
                 (115*s13^3 + 139*s13^2*s23 + 26*s13*s23^2 - 23*s23^3) + 
                s12^2*s13^3*s23^5*(s13 + s23)^2*(421*s13^4 - 134*s13^3*s23 + 
                  351*s13^2*s23^2 + 1676*s13*s23^3 - 10*s23^4) + 
                2*s12^11*(18*s13^5 + 63*s13^4*s23 - 122*s13^3*s23^2 - 
                  422*s13^2*s23^3 - 160*s13*s23^4 + 105*s23^5) + 
                s12^10*(36*s13^6 - 27*s13^5*s23 - 1264*s13^4*s23^2 - 
                  2813*s13^3*s23^3 - 2416*s13^2*s23^4 + 696*s13*s23^5 + 
                  1330*s23^6) + s12^9*(-108*s13^7 + 225*s13^6*s23 - 
                  720*s13^5*s23^2 - 4052*s13^4*s23^3 - 4084*s13^3*s23^4 + 
                  1149*s13^2*s23^5 + 5224*s13*s23^6 + 2670*s23^7) + 
                s12^3*s13*s23^4*(175*s13^8 + 756*s13^7*s23 + 2365*s13^6*
                   s23^2 + 4381*s13^5*s23^3 + 4702*s13^4*s23^4 + 2965*s13^3*
                   s23^5 + 846*s13^2*s23^6 + 78*s13*s23^7 + 92*s23^8) + 
                s12^8*(-180*s13^8 + 207*s13^7*s23 + 4630*s13^6*s23^2 + 
                  5900*s13^5*s23^3 + 5864*s13^4*s23^4 + 9005*s13^3*s23^5 + 
                  10620*s13^2*s23^6 + 6972*s13*s23^7 + 1650*s23^8) + 
                s12^6*s23*(-828*s13^9 - 3258*s13^8*s23 + 4864*s13^7*s23^2 + 
                  26086*s13^6*s23^3 + 45559*s13^5*s23^4 + 48398*s13^4*s23^5 + 
                  27155*s13^3*s23^6 + 2724*s13^2*s23^7 - 4080*s13*s23^8 - 
                  1290*s23^9) + s12^7*(-72*s13^9 - 999*s13^8*s23 + 
                  1925*s13^7*s23^2 + 13377*s13^6*s23^3 + 24087*s13^5*s23^4 + 
                  33658*s13^4*s23^5 + 29746*s13^3*s23^6 + 12420*s13^2*s23^7 + 
                  860*s13*s23^8 - 850*s23^9) + s12^5*s23^2*(-853*s13^9 - 
                  747*s13^8*s23 + 11810*s13^7*s23^2 + 31965*s13^6*s23^3 + 
                  42465*s13^5*s23^4 + 29769*s13^4*s23^5 + 6932*s13^3*s23^6 - 
                  3587*s13^2*s23^7 - 2464*s13*s23^8 - 270*s23^9) + 
                s12^4*s23^3*(-433*s13^9 + 2026*s13^8*s23 + 12309*s13^7*
                   s23^2 + 19600*s13^6*s23^3 + 16567*s13^5*s23^4 + 
                  7710*s13^4*s23^5 - 233*s13^3*s23^6 - 1712*s13^2*s23^7 - 
                  196*s13*s23^8 + 70*s23^9)) + p2q^3*s13*(s13 + s23)*(
                60*s13^4*s23^5*(s13 + s23)^3*(9*s13^2 - 14*s13*s23 + 
                  5*s23^2) + 2*s12*s13^3*s23^4*(s13 + s23)^2*(585*s13^4 + 
                  121*s13^3*s23 - 1399*s13^2*s23^2 + 139*s13*s23^3 + 
                  174*s23^4) + 2*s12^9*(18*s13^5 - 27*s13^4*s23 - 
                  95*s13^3*s23^2 - 55*s13^2*s23^3 - 15*s13*s23^4 - 
                  25*s23^5) + s12^8*(108*s13^6 - 279*s13^5*s23 + 453*s13^4*
                   s23^2 + 614*s13^3*s23^3 - 257*s13^2*s23^4 - 531*s13*
                   s23^5 - 320*s23^6) + s12^2*s13^3*s23^3*(711*s13^6 + 
                  2207*s13^5*s23 - 531*s13^4*s23^2 - 7940*s13^3*s23^3 - 
                  8509*s13^2*s23^4 - 1611*s13*s23^5 + 985*s23^6) + 
                s12^7*(108*s13^7 + 99*s13^6*s23 - 1947*s13^5*s23^2 + 
                  3381*s13^4*s23^3 + 6047*s13^3*s23^4 + 406*s13^2*s23^5 - 
                  2122*s13*s23^6 - 780*s23^7) + s12^6*(36*s13^8 + 801*s13^7*
                   s23 - 3377*s13^6*s23^2 - 6405*s13^5*s23^3 + 8395*s13^4*
                   s23^4 + 13462*s13^3*s23^5 + 1120*s13^2*s23^6 - 
                  3684*s13*s23^7 - 920*s23^8) + s12^5*s23*(459*s13^8 + 
                  310*s13^7*s23 - 10639*s13^6*s23^2 - 10055*s13^5*s23^3 + 
                  8990*s13^4*s23^4 + 11683*s13^3*s23^5 - 32*s13^2*s23^6 - 
                  3180*s13*s23^7 - 530*s23^8) + s12^3*s13*s23^2*(63*s13^8 + 
                  822*s13^7*s23 - 1302*s13^6*s23^2 - 10528*s13^5*s23^3 - 
                  12653*s13^4*s23^4 - 4114*s13^3*s23^5 + 180*s13^2*s23^6 - 
                  576*s13*s23^7 - 204*s23^8) - s12^4*s23*(18*s13^9 - 
                  1160*s13^8*s23 + 1538*s13^7*s23^2 + 14335*s13^6*s23^3 + 
                  11540*s13^5*s23^4 - 1800*s13^4*s23^5 - 3007*s13^3*s23^6 + 
                  1175*s13^2*s23^7 + 1321*s13*s23^8 + 120*s23^9)) + 
              p2q^2*p3q*(-10*s13^4*s23^6*(s13 + s23)^4*(75*s13^2 - 
                  62*s13*s23 + 7*s23^2) - 2*s12*s13^3*s23^5*(s13 + s23)^3*
                 (815*s13^4 + 719*s13^3*s23 - 869*s13^2*s23^2 - 247*s13*
                   s23^3 + 46*s23^4) - s12^2*s13^3*s23^4*(s13 + s23)^2*
                 (1870*s13^5 + 3091*s13^4*s23 + 2018*s13^3*s23^2 - 
                  427*s13^2*s23^3 - 2522*s13*s23^4 + 142*s23^5) - 
                2*s12^10*(36*s13^6 + 54*s13^5*s23 - 127*s13^4*s23^2 - 
                  311*s13^3*s23^3 - 106*s13^2*s23^4 + 165*s13*s23^5 + 
                  115*s23^6) + s12^9*(-180*s13^7 + 54*s13^6*s23 + 551*s13^5*
                   s23^2 + 2833*s13^4*s23^3 + 4243*s13^3*s23^4 + 1001*s13^2*
                   s23^5 - 1936*s13*s23^6 - 1080*s23^7) + s12^8*(-108*s13^8 - 
                  567*s13^7*s23 + 3060*s13^6*s23^2 + 7241*s13^5*s23^3 + 
                  12210*s13^4*s23^4 + 12868*s13^3*s23^5 + 2672*s13^2*s23^6 - 
                  4258*s13*s23^7 - 1950*s23^8) + s12^7*(36*s13^9 - 
                  1215*s13^8*s23 - 1403*s13^7*s23^2 + 10464*s13^6*s23^3 + 
                  24520*s13^5*s23^4 + 29257*s13^4*s23^5 + 21197*s13^3*s23^6 + 
                  3444*s13^2*s23^7 - 4540*s13*s23^8 - 1600*s23^9) - 
                s12^3*s13*s23^3*(771*s13^9 + 5048*s13^8*s23 + 13087*s13^7*
                   s23^2 + 14818*s13^6*s23^3 + 6025*s13^5*s23^4 - 1060*s13^4*
                   s23^5 - 749*s13^3*s23^6 + 474*s13^2*s23^7 + 54*s13*s23^8 - 
                  92*s23^9) + s12^6*(36*s13^10 + 27*s13^9*s23 - 5230*s13^8*
                   s23^2 - 3701*s13^7*s23^3 + 20498*s13^6*s23^4 + 43167*s13^5*
                   s23^5 + 38276*s13^4*s23^6 + 17083*s13^3*s23^7 + 
                  716*s13^2*s23^8 - 2390*s13*s23^9 - 450*s23^10) + 
                s12^4*s23^2*(1016*s13^10 - 2044*s13^9*s23 - 15582*s13^8*
                   s23^2 - 15264*s13^7*s23^3 + 2122*s13^6*s23^4 + 8047*s13^5*
                   s23^5 + 2816*s13^4*s23^6 - 1459*s13^3*s23^7 - 1208*s13^2*
                   s23^8 + 194*s13*s23^9 + 70*s23^10) + s12^5*s23*
                 (513*s13^10 - 48*s13^9*s23 - 10192*s13^8*s23^2 - 8355*s13^7*
                   s23^3 + 17817*s13^6*s23^4 + 34301*s13^5*s23^5 + 
                  22667*s13^4*s23^6 + 4098*s13^3*s23^7 - 1999*s13^2*s23^8 - 
                  400*s13*s23^9 + 120*s23^10))) + 
            p1q^2*(p2q^4*s13^2*(s13 + s23)*(40*s13^4*s23^4*(s13 + s23)^3*
                 (9*s13^2 - 22*s13*s23 + 12*s23^2) - 2*s12^9*(18*s13^4 + 
                  9*s13^3*s23 - 14*s13^2*s23^2 - 65*s13*s23^3 - 55*s23^4) + 
                2*s12*s13^3*s23^3*(s13 + s23)^2*(270*s13^4 - 296*s13^3*s23 - 
                  1201*s13^2*s23^2 + 511*s13*s23^3 + 246*s23^4) + 
                s12^8*(-72*s13^5 + 81*s13^4*s23 + 131*s13^3*s23^2 + 
                  42*s13^2*s23^3 + 524*s13*s23^4 + 500*s23^5) + s12^7*s23*
                 (-468*s13^5 + 2175*s13^4*s23 + 2387*s13^3*s23^2 - 
                  387*s13^2*s23^3 + 269*s13*s23^4 + 900*s23^5) + 
                s12^2*s13^3*s23^2*(180*s13^6 + 222*s13^5*s23 - 2822*s13^4*
                   s23^2 - 7139*s13^3*s23^3 - 4675*s13^2*s23^4 + 1069*s13*
                   s23^5 + 1469*s23^6) + s12^3*s13*s23^2*(107*s13^7 - 
                  1465*s13^6*s23 - 5850*s13^5*s23^2 - 5368*s13^4*s23^3 - 
                  1167*s13^3*s23^4 - 547*s13^2*s23^5 - 850*s13*s23^6 - 
                  60*s23^7) + s12^6*(72*s13^7 - 882*s13^6*s23 + 548*s13^5*
                   s23^2 + 8317*s13^4*s23^3 + 5703*s13^3*s23^4 - 2289*s13^2*
                   s23^5 - 1097*s13*s23^6 + 800*s23^7) + s12^4*s23*
                 (369*s13^8 - 787*s13^7*s23 - 4081*s13^6*s23^2 + 933*s13^5*
                   s23^3 + 3868*s13^4*s23^4 - 1668*s13^3*s23^5 - 3201*s13^2*
                   s23^6 - 703*s13*s23^7 + 60*s23^8) + s12^5*(36*s13^8 + 
                  54*s13^7*s23 - 2238*s13^6*s23^2 + 2836*s13^5*s23^3 + 
                  10517*s13^4*s23^4 + 3321*s13^3*s23^5 - 4239*s13^2*s23^6 - 
                  1615*s13*s23^7 + 350*s23^8)) + p3q^4*s12^2*(s12 + s23)*(
                90*s12^10*s23^2*(s13 + s23) - 10*s13^4*s23^5*(s13 + s23)^3*
                 (11*s13 + 6*s23) - s12*s13^3*s23^4*(s13 + s23)^2*
                 (2*s13^3 - 311*s13^2*s23 - 463*s13*s23^2 - 60*s23^3) + 
                2*s12^9*(18*s13^4 + 9*s13^3*s23 - 68*s13^2*s23^2 - 
                  119*s13*s23^3 - 55*s23^4) + s12^8*(72*s13^5 - 297*s13^4*
                   s23 - 599*s13^3*s23^2 - 882*s13^2*s23^3 - 1022*s13*s23^4 - 
                  470*s23^5) + s12^7*s23*(-180*s13^5 - 267*s13^4*s23 + 
                  385*s13^3*s23^2 + 852*s13^2*s23^3 + 70*s13*s23^4 - 
                  330*s23^5) + s12^2*s13^3*s23^3*(282*s13^5 + 1373*s13^4*
                   s23 + 2567*s13^3*s23^2 + 2701*s13^2*s23^3 + 1943*s13*
                   s23^4 + 718*s23^5) + s12^6*(-72*s13^7 + 234*s13^6*s23 + 
                  1306*s13^5*s23^2 + 5417*s13^4*s23^3 + 8058*s13^3*s23^4 + 
                  5391*s13^2*s23^5 + 770*s13*s23^6 - 620*s23^7) + 
                s12^3*s13*s23^2*(s13^7 - 347*s13^6*s23 + 591*s13^5*s23^2 + 
                  3793*s13^4*s23^3 + 3726*s13^3*s23^4 + 571*s13^2*s23^5 - 
                  953*s13*s23^6 - 492*s23^7) + s12^5*(-36*s13^8 - 270*s13^7*
                   s23 - 822*s13^6*s23^2 + 3260*s13^5*s23^3 + 12439*s13^4*
                   s23^4 + 13326*s13^3*s23^5 + 4425*s13^2*s23^6 - 
                  1520*s13*s23^7 - 1040*s23^8) - s12^4*s23*(369*s13^8 + 
                  2021*s13^7*s23 + 1919*s13^6*s23^2 - 5181*s13^5*s23^3 - 
                  10154*s13^4*s23^4 - 6183*s13^3*s23^5 + 321*s13^2*s23^6 + 
                  2018*s13*s23^7 + 480*s23^8)) + p2q*p3q^3*s12*(-10*s13^4*
                 s23^6*(s13 + s23)^3*(14*s13^2 - 4*s13*s23 + 5*s23^2) - 
                s12*s13^3*s23^5*(s13 + s23)^2*(332*s13^4 + 609*s13^3*s23 + 
                  416*s13^2*s23^2 + 521*s13*s23^3 + 112*s23^4) + 
                2*s12^11*(18*s13^4 + 9*s13^3*s23 - 149*s13^2*s23^2 - 
                  20*s13*s23^3 + 125*s23^4) + s12^10*(-36*s13^5 - 333*s13^4*
                   s23 + 106*s13^3*s23^2 + 579*s13^2*s23^3 + 1396*s13*s23^4 + 
                  1150*s23^5) - s12^2*s13^3*s23^4*(792*s13^6 + 2805*s13^5*
                   s23 + 3287*s13^4*s23^2 + 1149*s13^3*s23^3 - 35*s13^2*
                   s23^4 + 518*s13*s23^5 + 428*s23^6) + s12^9*(-216*s13^6 + 
                  477*s13^5*s23 + 1332*s13^4*s23^2 + 3714*s13^3*s23^3 + 
                  5401*s13^2*s23^4 + 3916*s13*s23^5 + 1330*s23^6) + 
                s12^8*(-72*s13^7 + 18*s13^6*s23 + 4132*s13^5*s23^2 + 
                  10239*s13^4*s23^3 + 11941*s13^3*s23^4 + 7250*s13^2*s23^5 + 
                  716*s13*s23^6 - 950*s23^7) + s12^7*(180*s13^8 - 1656*s13^7*
                   s23 - 3552*s13^6*s23^2 + 5840*s13^5*s23^3 + 18683*s13^4*
                   s23^4 + 13624*s13^3*s23^5 - 1363*s13^2*s23^6 - 
                  6720*s13*s23^7 - 2850*s23^8) + s12^3*s13*s23^3*
                 (-839*s13^8 - 1893*s13^7*s23 + 1623*s13^6*s23^2 + 
                  8525*s13^5*s23^3 + 8318*s13^4*s23^4 + 3025*s13^3*s23^5 + 
                  816*s13^2*s23^6 + 677*s13*s23^7 + 256*s23^8) + 
                s12^6*(108*s13^9 + 315*s13^8*s23 - 3596*s13^7*s23^2 - 
                  3508*s13^6*s23^3 + 9936*s13^5*s23^4 + 15928*s13^4*s23^5 + 
                  2922*s13^3*s23^6 - 8745*s13^2*s23^7 - 6820*s13*s23^8 - 
                  1550*s23^9) + s12^5*s23*(1161*s13^9 + 3814*s13^8*s23 + 
                  1981*s13^7*s23^2 + 7223*s13^6*s23^3 + 17547*s13^5*s23^4 + 
                  9479*s13^4*s23^5 - 3988*s13^3*s23^6 - 5169*s13^2*s23^7 - 
                  1284*s13*s23^8 + 150*s23^9) + s12^4*s23^2*(654*s13^9 + 
                  3058*s13^8*s23 + 6967*s13^7*s23^2 + 15467*s13^6*s23^3 + 
                  17135*s13^5*s23^4 + 6544*s13^4*s23^5 - 469*s13^3*s23^6 + 
                  164*s13^2*s23^7 + 836*s13*s23^8 + 230*s23^9)) - 
              p2q^2*p3q^2*(-10*s13^5*(25*s13 - 23*s23)*s23^6*(s13 + s23)^4 - 
                2*s12*s13^4*s23^5*(s13 + s23)^3*(545*s13^3 + 123*s13^2*s23 - 
                  355*s13*s23^2 - 153*s23^3) - s12^2*s13^3*s23^4*(s13 + s23)^
                  2*(1770*s13^5 + 2777*s13^4*s23 + 788*s13^3*s23^2 + 
                  145*s13^2*s23^3 - 1068*s13*s23^4 - 112*s23^5) + 
                2*s12^11*(54*s13^5 + 45*s13^4*s23 - 168*s13^3*s23^2 + 
                  16*s13^2*s23^3 + 310*s13*s23^4 + 125*s23^5) + 
                s12^10*(108*s13^6 - 621*s13^5*s23 - 624*s13^4*s23^2 + 
                  325*s13^3*s23^3 + 2476*s13^2*s23^4 + 3146*s13*s23^5 + 
                  1020*s23^6) + s12^9*(-216*s13^7 + 639*s13^6*s23 - 
                  1362*s13^5*s23^2 - 44*s13^4*s23^3 + 5892*s13^3*s23^4 + 
                  8283*s13^2*s23^5 + 5364*s13*s23^6 + 1350*s23^7) - 
                s12^3*s13^2*s23^3*(1657*s13^8 + 5430*s13^7*s23 + 7817*s13^6*
                   s23^2 + 8520*s13^5*s23^3 + 7603*s13^4*s23^4 + 3622*s13^3*
                   s23^5 + 363*s13^2*s23^6 - 20*s13*s23^7 + 112*s23^8) + 
                s12^8*(-216*s13^8 + 522*s13^7*s23 + 6690*s13^6*s23^2 + 
                  7911*s13^5*s23^3 + 9978*s13^4*s23^4 + 14991*s13^3*s23^5 + 
                  10342*s13^2*s23^6 + 2630*s13*s23^7 + 200*s23^8) + 
                2*s12^7*(54*s13^9 - 1350*s13^8*s23 - 483*s13^7*s23^2 + 
                  7722*s13^6*s23^3 + 14340*s13^5*s23^4 + 15066*s13^4*s23^5 + 
                  10625*s13^3*s23^6 + 2683*s13^2*s23^7 - 1220*s13*s23^8 - 
                  525*s23^9) - s12^4*s13*s23^2*(48*s13^9 + 1138*s13^8*s23 + 
                  3040*s13^7*s23^2 + 118*s13^6*s23^3 - 1674*s13^5*s23^4 - 
                  1169*s13^4*s23^5 - 1946*s13^3*s23^6 - 207*s13^2*s23^7 + 
                  1118*s13*s23^8 + 306*s23^9) + s12^6*(108*s13^10 - 
                  765*s13^9*s23 - 8034*s13^8*s23^2 + 1038*s13^7*s23^3 + 
                  28536*s13^6*s23^4 + 43954*s13^5*s23^5 + 38418*s13^4*s23^6 + 
                  17957*s13^3*s23^7 - 244*s13^2*s23^8 - 3630*s13*s23^9 - 
                  900*s23^10) + s12^5*s23*(1107*s13^10 + 648*s13^9*s23 - 
                  5207*s13^8*s23^2 + 6418*s13^7*s23^3 + 25106*s13^6*s23^4 + 
                  28514*s13^5*s23^5 + 20889*s13^4*s23^6 + 6766*s13^3*s23^7 - 
                  2113*s13^2*s23^8 - 1704*s13*s23^9 - 230*s23^10)) + 
              p2q^3*p3q*s13*(-10*s13^4*s23^5*(s13 + s23)^4*(61*s13^2 - 
                  100*s13*s23 + 23*s23^2) - 2*s12*s13^3*s23^4*(s13 + s23)^3*
                 (755*s13^4 - 253*s13^3*s23 - 1595*s13^2*s23^2 + 
                  21*s13*s23^3 + 128*s23^4) + 2*s12^10*(54*s13^5 + 
                  63*s13^4*s23 - 69*s13^3*s23^2 - 88*s13^2*s23^3 + 
                  65*s13*s23^4 + 70*s23^5) - s12^2*s13^3*s23^3*(s13 + s23)^2*
                 (1569*s13^5 + 1229*s13^4*s23 - 4045*s13^3*s23^2 - 
                  4820*s13^2*s23^3 - 1842*s13*s23^4 + 913*s23^5) + 
                s12^9*(180*s13^6 - 315*s13^5*s23 - 806*s13^4*s23^2 - 
                  351*s13^3*s23^3 + 426*s13^2*s23^4 + 936*s13*s23^5 + 
                  520*s23^6) + s12^8*(-72*s13^7 + 891*s13^6*s23 - 3820*s13^5*
                   s23^2 - 7374*s13^4*s23^3 - 1401*s13^3*s23^4 + 3225*s13^2*
                   s23^5 + 2345*s13*s23^6 + 730*s23^7) + s12^7*(-216*s13^8 + 
                  1422*s13^7*s23 + 3456*s13^6*s23^2 - 10619*s13^5*s23^3 - 
                  20669*s13^4*s23^4 - 6251*s13^3*s23^5 + 5191*s13^2*s23^6 + 
                  3190*s13*s23^7 + 520*s23^8) + s12^3*s13*s23^2*(-514*s13^9 - 
                  2014*s13^8*s23 - 499*s13^7*s23^2 + 8076*s13^6*s23^3 + 
                  12794*s13^5*s23^4 + 5262*s13^4*s23^5 - 1681*s13^3*s23^6 - 
                  928*s13^2*s23^7 + 408*s13*s23^8 + 112*s23^9) + 
                s12^6*(-36*s13^9 - 1368*s13^8*s23 + 3644*s13^7*s23^2 + 
                  4648*s13^6*s23^3 - 17559*s13^5*s23^4 - 30231*s13^4*s23^5 - 
                  11933*s13^3*s23^6 + 3639*s13^2*s23^7 + 3022*s13*s23^8 + 
                  280*s23^9) + s12^4*s23*(351*s13^10 - 982*s13^9*s23 - 
                  2729*s13^8*s23^2 + 6637*s13^7*s23^3 + 9116*s13^6*s23^4 - 
                  6563*s13^5*s23^5 - 11834*s13^4*s23^6 - 3541*s13^3*s23^7 + 
                  1164*s13^2*s23^8 + 807*s13*s23^9 + 50*s23^10) + 
                s12^5*(36*s13^10 - 1107*s13^9*s23 - 3432*s13^8*s23^2 + 
                  5496*s13^7*s23^3 + 5908*s13^6*s23^4 - 16467*s13^5*s23^5 - 
                  25241*s13^4*s23^6 - 10140*s13^3*s23^7 + 1827*s13^2*s23^8 + 
                  2066*s13*s23^9 + 160*s23^10)))))/(36*p1q*(p2q + p3q)*s12^3*
           s13^3*(s12 + s13)*s23^2*(s12 + s23)^2*(s13 + s23)^2*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) + 
         (-9*p1q^7*s12*s23^4*(s12 + s23)^2*(s13 + s23)*
            (40*s13^4*s23^2*(s13 + s23)^3 + 20*s12^6*s23^2*(4*s13 + 3*s23) + 
             s12*s13^3*s23*(s13 + s23)^2*(25*s13^2 + 37*s13*s23 - 28*s23^2) - 
             s12^2*s13^2*(s13 + s23)^2*(75*s13^3 + 18*s13^2*s23 + 32*s13*
                s23^2 + 4*s23^3) + s12^5*(75*s13^4 + 46*s13^3*s23 + 59*s13^2*
                s23^2 + 208*s13*s23^3 + 120*s23^4) - s12^3*s13*
              (75*s13^5 + 79*s13^4*s23 + 2*s13^3*s23^2 + 27*s13^2*s23^3 + 41*
                s13*s23^4 + 12*s23^5) + s12^4*(75*s13^5 + 160*s13^4*s23 + 31*
                s13^3*s23^2 + 22*s13^2*s23^3 + 116*s13*s23^4 + 60*s23^5)) + 
           9*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
            (-(p3q^5*s12^2*s23*(s12 + s23)^2*(40*s13^4*s23^2*(s13 + s23)^2 + 
                20*s12^5*s23^2*(4*s13 + 3*s23) + s12*s13^3*s23*(s13 + s23)^2*
                 (25*s13 + 8*s23) - s12^3*s13*(72*s13^4 + 177*s13^3*s23 + 
                  210*s13^2*s23^2 + 97*s13*s23^3 + 12*s23^4) - s12^2*s13^2*
                 (75*s13^4 + 154*s13^3*s23 + 119*s13^2*s23^2 + 80*s13*s23^3 + 
                  40*s23^4) + s12^4*(3*s13^4 - 62*s13^3*s23 - 57*s13^2*
                   s23^2 + 68*s13*s23^3 + 60*s23^4))) + p2q^5*s13^2*
              (s13 + s23)*(-60*s13^4*(s13 - s23)*s23^3*(s13 + s23)^2 + 20*
                s12^7*s23^2*(4*s13 + 3*s23) + s12^2*s13^2*s23^2*(s13 + s23)^2*
                (36*s13^2 + 51*s13*s23 - 40*s23^2) - 4*s12*s13^3*s23^2*
                (s13 + s23)^2*(20*s13^2 - 23*s13*s23 + 3*s23^2) + s12^6*
                (576*s13^4 + 889*s13^3*s23 + 346*s13^2*s23^2 + 213*s13*
                  s23^3 + 160*s23^4) + 2*s12^3*s13*s23*(22*s13^5 + 
                 395*s13^4*s23 + 682*s13^3*s23^2 + 359*s13^2*s23^3 + 
                 54*s13*s23^4 + 4*s23^5) + s12^4*s23*(1235*s13^5 + 
                 2994*s13^4*s23 + 2388*s13^3*s23^2 + 678*s13^2*s23^3 + 
                 69*s13*s23^4 + 40*s23^5) + 2*s12^5*(288*s13^5 + 1148*s13^4*
                  s23 + 1261*s13^3*s23^2 + 438*s13^2*s23^3 + 97*s13*s23^4 + 
                 70*s23^5)) - p2q*p3q^4*s12*(s12 + s23)*(-20*s13^4*s23^4*
                (s13 + s23)^2*(5*s13 + 2*s23) + 20*s12^8*s23^2*(4*s13 + 
                 3*s23) - s12*s13^3*s23^3*(s13 + s23)^2*(281*s13^2 + 
                 17*s13*s23 + 8*s23^2) - s12^2*s13^2*s23^2*(s13 + s23)^2*
                (127*s13^3 + 87*s13^2*s23 - 52*s13*s23^2 - 40*s23^3) + 4*
                s12^7*s23*(-11*s13^3 - 9*s13^2*s23 + 77*s13*s23^2 + 
                 60*s23^3) - s12^6*(576*s13^5 + 1079*s13^4*s23 + 746*s13^3*
                  s23^2 + 411*s13^2*s23^3 - 112*s13*s23^4 - 240*s23^5) - 
               s12^5*s13*(576*s13^5 + 2662*s13^4*s23 + 3421*s13^3*s23^2 + 
                 1728*s13^2*s23^3 + 641*s13*s23^4 + 308*s23^5) + s12^3*s13*
                s23*(78*s13^6 - 735*s13^5*s23 - 1763*s13^4*s23^2 - 
                 964*s13^3*s23^3 + 35*s13^2*s23^4 + 61*s13*s23^5 + 
                 12*s23^6) - s12^4*s23*(1333*s13^6 + 3719*s13^5*s23 + 
                 3332*s13^4*s23^2 + 1131*s13^3*s23^3 + 245*s13^2*s23^4 + 
                 180*s13*s23^5 + 60*s23^6)) - p2q^2*p3q^3*(s12 + s23)*
              (60*s13^5*s23^4*(s13 + s23)^3 + 20*s12^9*s23^2*(4*s13 + 
                 3*s23) + 4*s12*s13^4*s23^3*(s13 + s23)^2*(75*s13^2 - 
                 8*s13*s23 - 23*s23^2) + s12^2*s13^3*s23^2*(s13 + s23)^2*
                (301*s13^3 - 302*s13^2*s23 - 111*s13*s23^2 - 56*s23^3) - 4*
                s12^8*s23*(11*s13^3 + 69*s13^2*s23 + 8*s13*s23^2 - 
                 30*s23^3) - s12^3*s13^2*s23*(s13 + s23)^2*(3*s13^4 - 
                 672*s13^3*s23 - 229*s13^2*s23^2 - 176*s13*s23^3 - 
                 88*s23^4) - s12^7*(1152*s13^5 + 2099*s13^4*s23 + 
                 1166*s13^3*s23^2 + 943*s13^2*s23^3 + 724*s13*s23^4 + 
                 60*s23^5) - s12^6*s23*(2578*s13^5 + 4479*s13^4*s23 + 
                 1972*s13^3*s23^2 + 599*s13^2*s23^3 + 848*s13*s23^4 + 
                 240*s23^5) + s12^4*s13*s23*(2046*s13^6 + 4350*s13^5*s23 + 
                 3004*s13^4*s23^2 + 1393*s13^3*s23^3 + 980*s13^2*s23^4 + 
                 351*s13*s23^5 + 64*s23^6) + s12^5*(1152*s13^7 + 2390*s13^6*
                  s23 + 108*s13^5*s23^2 - 1711*s13^4*s23^3 - 278*s13^3*
                  s23^4 + 331*s13^2*s23^5 - 172*s13*s23^6 - 120*s23^7)) - 
             p2q^4*p3q*s13*(60*s13^4*s23^3*(s13 + s23)^3*(s13^2 - 3*s13*s23 + 
                 s23^2) + 20*s12^8*s23^2*(12*s13^2 + 17*s13*s23 + 6*s23^2) + 
               4*s12*s13^3*s23^2*(s13 + s23)^2*(20*s13^4 - 88*s13^3*s23 - 
                 24*s13^2*s23^2 + 51*s13*s23^3 - 3*s23^4) - s12^2*s13^2*s23^2*
                (s13 + s23)^2*(276*s13^4 + s13^3*s23 - 218*s13^2*s23^2 - 
                 87*s13*s23^3 + 40*s23^4) - s12^3*s13*s23*(s13 + s23)^2*
                (44*s13^5 + 1338*s13^4*s23 + 290*s13^3*s23^2 - 357*s13^2*
                  s23^3 - 40*s13*s23^4 - 8*s23^5) + s12^7*(1152*s13^5 + 
                 2526*s13^4*s23 + 1709*s13^3*s23^2 + 1012*s13^2*s23^3 + 
                 1057*s13*s23^4 + 400*s23^5) + s12^6*s23*(3053*s13^5 + 
                 6956*s13^4*s23 + 5008*s13^3*s23^2 + 1744*s13^2*s23^3 + 
                 1139*s13*s23^4 + 480*s23^5) + s12^4*s23*(-2405*s13^7 - 
                 5608*s13^6*s23 - 2867*s13^5*s23^2 + 2076*s13^4*s23^3 + 
                 2391*s13^3*s23^4 + 672*s13^2*s23^5 + 61*s13*s23^6 + 
                 40*s23^7) + s12^5*(-1152*s13^7 - 2698*s13^6*s23 + 
                 837*s13^5*s23^2 + 6314*s13^4*s23^3 + 5264*s13^3*s23^4 + 
                 1548*s13^2*s23^5 + 475*s13*s23^6 + 240*s23^7)) + 
             p2q^3*p3q^2*(120*s13^5*(s13 - s23)*s23^4*(s13 + s23)^3 + 20*
                s12^9*s23^2*(12*s13^2 + 13*s13*s23 + 3*s23^2) + 4*s12*s13^4*
                s23^3*(s13 + s23)^2*(85*s13^3 - 86*s13^2*s23 - 80*s13*s23^2 + 
                 16*s23^3) + 2*s12^3*s13^2*s23^2*(s13 + s23)^2*(147*s13^4 - 
                 553*s13^3*s23 - 392*s13^2*s23^2 - 66*s13*s23^3 - 28*s23^4) + 
               s12^2*s13^3*s23^2*(s13 + s23)^2*(240*s13^4 - 687*s13^3*s23 - 
                 276*s13^2*s23^2 + 59*s13*s23^3 + 88*s23^4) + s12^8*
                (576*s13^5 + 1017*s13^4*s23 + 242*s13^3*s23^2 + 489*s13^2*
                  s23^3 + 828*s13*s23^4 + 240*s23^5) - 2*s12^7*(864*s13^6 + 
                 981*s13^5*s23 - 230*s13^4*s23^2 + 77*s13^3*s23^3 + 
                 208*s13^2*s23^4 - 386*s13*s23^5 - 180*s23^6) - 2*s12^6*
                (864*s13^7 + 4371*s13^6*s23 + 5902*s13^5*s23^2 + 2830*s13^4*
                  s23^3 + 1082*s13^3*s23^4 + 813*s13^2*s23^5 - 4*s13*s23^6 - 
                 120*s23^7) + s12^4*s13*s23*(1173*s13^7 - 1382*s13^6*s23 - 
                 9526*s13^5*s23^2 - 11506*s13^4*s23^3 - 6110*s13^3*s23^4 - 
                 1882*s13^2*s23^5 - 399*s13*s23^6 - 92*s23^7) + 2*s12^5*
                (288*s13^8 - 1647*s13^7*s23 - 7169*s13^6*s23^2 - 8992*s13^5*
                  s23^3 - 4969*s13^4*s23^4 - 1659*s13^3*s23^5 - 652*s13^2*
                  s23^6 - 144*s13*s23^7 + 30*s23^8))) + 
           p1q^6*s23^3*(s12 + s23)*(p2q*(s13 + s23)*(20*s13^4*(27*s13 - 
                 23*s23)*s23^4*(s13 + s23)^3 + 180*s12^9*s23^2*(4*s13 + 
                 3*s23) + 4*s12*s13^3*s23^3*(s13 + s23)^2*(675*s13^3 + 
                 613*s13^2*s23 - 190*s13*s23^2 + 102*s23^3) + s12^8*
                (459*s13^4 - 18*s13^3*s23 + 1735*s13^2*s23^2 + 3552*s13*
                  s23^3 + 1540*s23^4) + 4*s12^2*s13^3*s23^2*(756*s13^5 + 
                 2819*s13^4*s23 + 3735*s13^3*s23^2 + 2992*s13^2*s23^3 + 
                 2235*s13*s23^4 + 915*s23^5) + s12^7*(4968*s13^5 + 
                 4743*s13^4*s23 - 1536*s13^3*s23^2 + 3465*s13^2*s23^3 + 
                 6376*s13*s23^4 + 1840*s23^5) + s12^6*(6858*s13^6 + 
                 21690*s13^5*s23 + 10057*s13^4*s23^2 - 10354*s13^3*s23^3 - 
                 2971*s13^2*s23^4 + 5148*s13*s23^5 + 1680*s23^6) + s12^3*s13*
                s23*(-1053*s13^7 + 5704*s13^6*s23 + 19460*s13^5*s23^2 + 
                 23508*s13^4*s23^3 + 14753*s13^3*s23^4 + 1804*s13^2*s23^5 - 
                 2392*s13*s23^6 - 408*s23^7) + s12^5*(648*s13^7 + 
                 20286*s13^6*s23 + 37032*s13^5*s23^2 + 7367*s13^4*s23^3 - 
                 22204*s13^3*s23^4 - 12329*s13^2*s23^5 + 1368*s13*s23^6 + 
                 1300*s23^7) + s12^4*(-1701*s13^8 + 2304*s13^7*s23 + 
                 24656*s13^6*s23^2 + 33494*s13^5*s23^3 + 7603*s13^4*s23^4 - 
                 14816*s13^3*s23^5 - 10020*s13^2*s23^6 - 644*s13*s23^7 + 
                 460*s23^8)) + p3q*(-460*s13^4*s23^5*(s13 + s23)^4 + 180*
                s12^9*s23^2*(16*s13^2 + 32*s13*s23 + 15*s23^2) + 4*s12*s13^3*
                s23^3*(s13 + s23)^3*(90*s13^3 - 170*s13^2*s23 - 253*s13*
                  s23^2 + 102*s23^3) + s12^2*s13^3*s23^2*(s13 + s23)^2*
                (909*s13^4 + 2870*s13^3*s23 + 5005*s13^2*s23^2 + 
                 7152*s13*s23^3 + 3948*s23^4) + s12^8*(1809*s13^5 + 
                 2574*s13^4*s23 + 2257*s13^3*s23^2 + 11812*s13^2*s23^3 + 
                 17980*s13*s23^4 + 7480*s23^5) - 4*s12^7*(54*s13^6 + 
                 639*s13^5*s23 + 2292*s13^4*s23^2 + 2247*s13^3*s23^3 - 
                 1927*s13^2*s23^4 - 4097*s13*s23^5 - 1675*s23^6) - 2*s12^6*
                (3105*s13^7 + 14526*s13^6*s23 + 29149*s13^5*s23^2 + 
                 32706*s13^4*s23^3 + 21904*s13^3*s23^4 + 6818*s13^2*s23^5 - 
                 1128*s13*s23^6 - 1110*s23^7) - 2*s12^5*(2268*s13^8 + 
                 13833*s13^7*s23 + 39723*s13^6*s23^2 + 62171*s13^5*s23^3 + 
                 56257*s13^4*s23^4 + 30924*s13^3*s23^5 + 10030*s13^2*s23^6 + 
                 970*s13*s23^7 - 380*s23^8) + 2*s12^3*s13*s23*(99*s13^8 + 
                 2249*s13^7*s23 + 6741*s13^6*s23^2 + 9397*s13^5*s23^3 + 
                 7732*s13^4*s23^4 + 2658*s13^3*s23^5 - 1320*s13^2*s23^6 - 
                 1256*s13*s23^7 - 204*s23^8) - s12^4*(351*s13^9 + 
                 3546*s13^8*s23 + 19120*s13^7*s23^2 + 53396*s13^6*s23^3 + 
                 79494*s13^5*s23^4 + 68224*s13^4*s23^5 + 35465*s13^3*s23^6 + 
                 10160*s13^2*s23^7 + 436*s13*s23^8 - 460*s23^9))) - 
           p1q^5*s23^2*(p3q^2*(s12 + s23)*(-460*s13^4*(s13 - s23)*s23^5*
                (s13 + s23)^4 + 360*s12^10*s23^2*(12*s13^2 + 29*s13*s23 + 
                 15*s23^2) - 4*s12*s13^3*s23^4*(s13 + s23)^3*(260*s13^3 + 
                 338*s13^2*s23 + 105*s13*s23^2 + 102*s23^3) - 4*s12^2*s13^3*
                s23^3*(s13 + s23)^2*(16*s13^4 + 190*s13^3*s23 + 738*s13^2*
                  s23^2 + 1318*s13*s23^3 + 579*s23^4) + s12^9*(1701*s13^5 + 
                 1944*s13^4*s23 + 1245*s13^3*s23^2 + 16462*s13^2*s23^3 + 
                 29160*s13*s23^4 + 13180*s23^5) - s12^8*(2025*s13^6 + 
                 15894*s13^5*s23 + 36425*s13^4*s23^2 + 34956*s13^3*s23^3 + 
                 2820*s13^2*s23^4 - 18760*s13*s23^5 - 9600*s23^6) - s12^7*
                (9747*s13^7 + 58707*s13^6*s23 + 137703*s13^5*s23^2 + 
                 170015*s13^4*s23^3 + 124578*s13^3*s23^4 + 51606*s13^2*
                  s23^5 + 4900*s13*s23^6 - 3260*s23^7) - s12^6*(6615*s13^8 + 
                 42120*s13^7*s23 + 135230*s13^6*s23^2 + 241642*s13^5*s23^3 + 
                 252249*s13^4*s23^4 + 159162*s13^3*s23^5 + 54862*s13^2*
                  s23^6 + 3192*s13*s23^7 - 2980*s23^8) + s12^3*s13*s23^2*
                (3796*s13^8 + 15677*s13^7*s23 + 38023*s13^6*s23^2 + 
                 64929*s13^5*s23^3 + 70835*s13^4*s23^4 + 44814*s13^3*s23^5 + 
                 14462*s13^2*s23^6 + 2104*s13*s23^7 + 408*s23^8) - s12^5*
                (594*s13^9 - 1755*s13^8*s23 + 3174*s13^7*s23^2 + 37904*s13^6*
                  s23^3 + 86465*s13^5*s23^4 + 101637*s13^4*s23^5 + 
                 68209*s13^3*s23^6 + 20472*s13^2*s23^7 - 604*s13*s23^8 - 
                 1080*s23^9) + s12^4*s23*(3006*s13^9 + 21203*s13^8*s23 + 
                 62202*s13^7*s23^2 + 108865*s13^6*s23^3 + 119060*s13^5*
                  s23^4 + 73180*s13^4*s23^5 + 18946*s13^3*s23^6 - 
                 150*s13^2*s23^7 - 736*s13*s23^8 - 460*s23^9)) + 
             p2q^2*(s13 + s23)*(20*s13^4*s23^5*(s13 + s23)^3*(135*s13^2 - 
                 146*s13*s23 + 23*s23^2) + 4*s12*s13^3*s23^4*(s13 + s23)^2*
                (2520*s13^4 + 1405*s13^3*s23 - 1898*s13^2*s23^2 + 
                 535*s13*s23^3 - 102*s23^4) + 4*s12^10*(27*s13^4 + 
                 54*s13^3*s23 + 202*s13^2*s23^2 + 105*s13*s23^3 - 20*s23^4) + 
               2*s12^9*(675*s13^5 + 909*s13^4*s23 + 966*s13^3*s23^2 + 
                 1692*s13^2*s23^3 + 710*s13*s23^4 - 160*s23^5) + 2*s12^2*
                s13^3*s23^3*(6471*s13^6 + 21730*s13^5*s23 + 22407*s13^4*
                  s23^2 + 11243*s13^3*s23^3 + 7744*s13^2*s23^4 + 
                 1963*s13*s23^5 - 1686*s23^6) + s12^8*(8559*s13^6 + 
                 1341*s13^5*s23 - 14927*s13^4*s23^2 - 5133*s13^3*s23^3 + 
                 5896*s13^2*s23^4 + 1540*s13*s23^5 - 940*s23^6) + s12^7*
                (12123*s13^7 + 27720*s13^6*s23 - 50670*s13^5*s23^2 - 
                 112090*s13^4*s23^3 - 43855*s13^3*s23^4 + 9296*s13^2*s23^5 + 
                 1308*s13*s23^6 - 2160*s23^7) + s12^6*(3429*s13^8 + 
                 47691*s13^7*s23 + 13694*s13^6*s23^2 - 198972*s13^5*s23^3 - 
                 264049*s13^4*s23^4 - 87857*s13^3*s23^5 + 16360*s13^2*s23^6 + 
                 2992*s13*s23^7 - 2840*s23^8) + s12^3*s13*s23^2*(4779*s13^8 + 
                 40336*s13^7*s23 + 62618*s13^6*s23^2 + 33206*s13^5*s23^3 - 
                 695*s13^4*s23^4 - 21530*s13^3*s23^5 - 13250*s13^2*s23^6 + 
                 1048*s13*s23^7 + 408*s23^8) - s12^4*s23*(2160*s13^9 - 
                 31917*s13^8*s23 - 70711*s13^7*s23^2 + 23907*s13^6*s23^3 + 
                 154251*s13^5*s23^4 + 143064*s13^4*s23^5 + 40210*s13^3*
                  s23^6 - 8056*s13^2*s23^7 - 2232*s13*s23^8 + 460*s23^9) - 
               s12^5*(1377*s13^9 - 17550*s13^8*s23 - 74227*s13^7*s23^2 + 
                 37030*s13^6*s23^3 + 283879*s13^5*s23^4 + 287068*s13^4*
                  s23^5 + 80775*s13^3*s23^6 - 17392*s13^2*s23^7 - 
                 4048*s13*s23^8 + 1840*s23^9)) + p2q*p3q*(180*s12^11*s23^2*
                (12*s13^2 + 25*s13*s23 + 12*s23^2) + 20*s13^4*s23^5*
                (s13 + s23)^4*(27*s13^2 - 169*s13*s23 + 46*s23^2) + 4*s12*
                s13^3*s23^4*(s13 + s23)^3*(720*s13^4 - 1247*s13^3*s23 - 
                 1948*s13^2*s23^2 + 635*s13*s23^3 - 204*s23^4) + s12^2*s13^3*
                s23^3*(s13 + s23)^2*(5427*s13^5 + 9929*s13^4*s23 + 
                 6896*s13^3*s23^2 + 14293*s13^2*s23^3 + 3511*s13*s23^4 - 
                 6348*s23^5) + s12^10*(1134*s13^5 + 1269*s13^4*s23 + 
                 1540*s13^3*s23^2 + 12893*s13^2*s23^3 + 19888*s13*s23^4 + 
                 8240*s23^5) + s12^9*(7668*s13^6 + 18468*s13^5*s23 + 
                 2785*s13^4*s23^2 - 11430*s13^3*s23^3 + 19877*s13^2*s23^4 + 
                 37572*s13*s23^5 + 14360*s23^6) + s12^8*(7830*s13^7 + 
                 27891*s13^6*s23 + 21007*s13^5*s23^2 - 56364*s13^4*s23^3 - 
                 92351*s13^3*s23^4 - 10261*s13^2*s23^5 + 42720*s13*s23^6 + 
                 17320*s23^7) - 2*s12^7*(1755*s13^8 + 9000*s13^7*s23 + 
                 36205*s13^6*s23^2 + 88204*s13^5*s23^3 + 137225*s13^4*s23^4 + 
                 115270*s13^3*s23^5 + 28591*s13^2*s23^6 - 16498*s13*s23^7 - 
                 7440*s23^8) - s12^6*(5508*s13^9 + 38187*s13^8*s23 + 
                 188326*s13^7*s23^2 + 448160*s13^6*s23^3 + 575938*s13^5*
                  s23^4 + 469326*s13^4*s23^5 + 248306*s13^3*s23^6 + 
                 52481*s13^2*s23^7 - 15384*s13*s23^8 - 6080*s23^9) + s12^3*
                s13*s23^2*(3456*s13^9 + 26194*s13^8*s23 + 47003*s13^7*s23^2 + 
                 34172*s13^6*s23^3 + 14494*s13^5*s23^4 - 2554*s13^4*s23^5 - 
                 11093*s13^3*s23^6 - 1244*s13^2*s23^7 + 3524*s13*s23^8 + 
                 816*s23^9) - s12^5*(702*s13^10 + 9828*s13^9*s23 + 
                 88863*s13^8*s23^2 + 377076*s13^7*s23^3 + 704142*s13^6*
                  s23^4 + 662264*s13^5*s23^5 + 341436*s13^4*s23^6 + 
                 99002*s13^3*s23^7 + 8083*s13^2*s23^8 - 3444*s13*s23^9 + 
                 680*s23^10) - s12^4*s23*(333*s13^10 - 6283*s13^9*s23 + 
                 43480*s13^8*s23^2 + 236902*s13^7*s23^3 + 387854*s13^6*
                  s23^4 + 287168*s13^5*s23^5 + 91416*s13^4*s23^6 - 
                 2433*s13^3*s23^7 - 10145*s13^2*s23^8 - 1336*s13*s23^9 + 
                 920*s23^10))) + p1q*(p3q^6*s12^3*(s12 + s23)*
              (180*s12^10*s23^2*(4*s13 + 3*s23) + 20*s13^5*s23^4*
                (s13 + s23)^3*(18*s13 + 31*s23) + s12*s13^4*s23^3*
                (s13 + s23)^2*(909*s13^3 + 2308*s13^2*s23 + 3343*s13*s23^2 + 
                 1604*s23^3) + 4*s12^9*(27*s13^4 - 45*s13^3*s23 + 
                 121*s13^2*s23^2 + 438*s13*s23^3 + 250*s23^4) + 2*s12^8*
                (216*s13^5 + 225*s13^4*s23 - 562*s13^3*s23^2 - 879*s13^2*
                  s23^3 + 1222*s13*s23^4 + 1190*s23^5) + 2*s12^2*s13^3*s23^2*
                (99*s13^6 - 95*s13^5*s23 - 7*s13^4*s23^2 + 2548*s13^3*s23^3 + 
                 3808*s13^2*s23^4 + 1093*s13*s23^5 - 354*s23^6) + s12^7*
                (648*s13^6 + 2511*s13^5*s23 + 1654*s13^4*s23^2 - 7465*s13^3*
                  s23^3 - 5136*s13^2*s23^4 + 9040*s13*s23^5 + 6540*s23^6) + 2*
                s12^4*s13*s23*(486*s13^7 - 2631*s13^6*s23 - 18037*s13^5*
                  s23^2 - 32977*s13^4*s23^3 - 30456*s13^3*s23^4 - 
                 15052*s13^2*s23^5 - 2463*s13*s23^6 + 620*s23^7) - s12^3*
                s13^2*s23*(351*s13^7 + 2072*s13^6*s23 + 14840*s13^5*s23^2 + 
                 31752*s13^4*s23^3 + 30744*s13^3*s23^4 + 19262*s13^2*s23^5 + 
                 8839*s13*s23^6 + 1848*s23^7) + 2*s12^6*(216*s13^7 + 
                 2313*s13^6*s23 + 1274*s13^5*s23^2 - 7609*s13^4*s23^3 - 
                 13870*s13^3*s23^4 - 2146*s13^2*s23^5 + 7698*s13*s23^6 + 
                 3620*s23^7) + 2*s12^5*(54*s13^8 + 2034*s13^7*s23 - 
                 1493*s13^6*s23^2 - 16528*s13^5*s23^3 - 28959*s13^4*s23^4 - 
                 21596*s13^3*s23^5 - 2238*s13^2*s23^6 + 4504*s13*s23^7 + 
                 1310*s23^8)) - p2q^6*s13^3*(180*s12^10*s23^2*(4*s13^2 + 
                 7*s13*s23 + 3*s23^2) + 20*s13^5*s23^3*(s13 + s23)^4*
                (27*s13^2 - 162*s13*s23 + 131*s23^2) + 4*s12*s13^4*s23^2*
                (s13 + s23)^3*(180*s13^4 - 927*s13^3*s23 - 1630*s13^2*s23^2 + 
                 1367*s13*s23^3 + 310*s23^4) - 2*s12^2*s13^3*s23^2*
                (s13 + s23)^2*(162*s13^5 + 4297*s13^4*s23 + 2671*s13^3*
                  s23^2 - 2535*s13^2*s23^3 - 227*s13*s23^4 + 924*s23^5) + 
               s12^9*(5076*s13^5 + 13185*s13^4*s23 + 13223*s13^3*s23^2 + 
                 10715*s13^2*s23^3 + 8741*s13*s23^4 + 3140*s23^5) + 2*s12^8*
                (4968*s13^6 + 28674*s13^5*s23 + 52078*s13^4*s23^2 + 
                 43399*s13^3*s23^3 + 23300*s13^2*s23^4 + 11673*s13*s23^5 + 
                 3400*s23^6) + s12^7*(-648*s13^7 + 79416*s13^6*s23 + 
                 274430*s13^5*s23^2 + 355110*s13^4*s23^3 + 226450*s13^3*
                  s23^4 + 90182*s13^2*s23^5 + 31436*s13*s23^6 + 6960*s23^7) + 
               s12^3*s13^2*s23*(-396*s13^8 - 6784*s13^7*s23 + 6607*s13^6*
                  s23^2 + 83591*s13^5*s23^3 + 150192*s13^4*s23^4 + 
                 107768*s13^3*s23^5 + 27489*s13^2*s23^6 - 1391*s13*s23^7 - 
                 708*s23^8) + 2*s12^4*s13*s23*(-5409*s13^8 + 2316*s13^7*s23 + 
                 98554*s13^6*s23^2 + 243200*s13^5*s23^3 + 249157*s13^4*
                  s23^4 + 120163*s13^3*s23^5 + 25696*s13^2*s23^6 + 
                 3121*s13*s23^7 + 802*s23^8) + s12^6*(-10800*s13^8 + 
                 29502*s13^7*s23 + 311048*s13^6*s23^2 + 664648*s13^5*s23^3 + 
                 620938*s13^4*s23^4 + 294796*s13^3*s23^5 + 87482*s13^2*
                  s23^6 + 23102*s13*s23^7 + 3380*s23^8) + s12^5*
                (-5292*s13^9 - 16173*s13^8*s23 + 138643*s13^7*s23^2 + 
                 574764*s13^6*s23^3 + 830558*s13^5*s23^4 + 565834*s13^4*
                  s23^5 + 192856*s13^3*s23^6 + 40855*s13^2*s23^7 + 
                 9135*s13*s23^8 + 620*s23^9)) + p2q*p3q^5*s12^2*
              (-20*s13^5*s23^5*(s13 + s23)^3*(63*s13^2 + 48*s13*s23 + 
                 13*s23^2) + 4*s12^11*(54*s13^4 + 108*s13^3*s23 - 
                 856*s13^2*s23^2 - 375*s13*s23^3 + 230*s23^4) - 2*s12*s13^4*
                s23^4*(s13 + s23)^2*(2349*s13^4 + 4648*s13^3*s23 + 
                 3980*s13^2*s23^2 + 2467*s13*s23^3 + 586*s23^4) + s12^10*
                (5616*s13^5 + 12105*s13^4*s23 + 2062*s13^3*s23^2 - 
                 11363*s13^2*s23^3 + 5304*s13*s23^4 + 9000*s23^5) + s12^9*
                (9936*s13^6 + 20844*s13^5*s23 + 13897*s13^4*s23^2 - 
                 11662*s13^3*s23^3 - 8655*s13^2*s23^4 + 33036*s13*s23^5 + 
                 24720*s23^6) - s12^8*(1728*s13^7 + 23553*s13^6*s23 + 
                 115955*s13^5*s23^2 + 164102*s13^4*s23^3 + 98967*s13^3*
                  s23^4 + 7799*s13^2*s23^5 - 45056*s13*s23^6 - 27280*s23^7) - 
               s12^2*s13^3*s23^3*(5103*s13^7 + 21883*s13^6*s23 + 44553*s13^5*
                  s23^2 + 61080*s13^4*s23^3 + 51809*s13^3*s23^4 + 
                 19693*s13^2*s23^5 + 771*s13*s23^6 - 420*s23^7) - 2*s12^7*
                (5940*s13^8 + 43128*s13^7*s23 + 165015*s13^6*s23^2 + 
                 308747*s13^5*s23^3 + 269132*s13^4*s23^4 + 109397*s13^3*
                  s23^5 + 17023*s13^2*s23^6 - 5842*s13*s23^7 - 4860*s23^8) - 
               s12^3*s13^2*s23^2*(936*s13^8 + 14570*s13^7*s23 + 52093*s13^6*
                  s23^2 + 104984*s13^5*s23^3 + 108302*s13^4*s23^4 + 
                 38060*s13^3*s23^5 - 9131*s13^2*s23^6 - 7114*s13*s23^7 - 
                 1380*s23^8) + s12^4*s13*s23*(729*s13^9 - 22123*s13^8*s23 - 
                 112040*s13^7*s23^2 - 279096*s13^6*s23^3 - 380256*s13^5*
                  s23^4 - 247144*s13^4*s23^5 - 52554*s13^3*s23^6 + 
                 7081*s13^2*s23^7 + 591*s13*s23^8 - 808*s23^9) - s12^5*s23*
                (21420*s13^9 + 143971*s13^8*s23 + 453242*s13^7*s23^2 + 
                 811286*s13^6*s23^3 + 767082*s13^5*s23^4 + 344954*s13^4*
                  s23^5 + 67434*s13^3*s23^6 + 19039*s13^2*s23^7 + 
                 9652*s13*s23^8 + 2080*s23^9) - s12^6*(5616*s13^9 + 
                 75681*s13^8*s23 + 328448*s13^7*s23^2 + 801324*s13^6*s23^3 + 
                 1031314*s13^5*s23^4 + 655824*s13^4*s23^5 + 200940*s13^3*
                  s23^6 + 45213*s13^2*s23^7 + 15984*s13*s23^8 + 
                 3000*s23^9)) + p2q^2*p3q^4*s12*(-180*s12^13*s23^2*
                (4*s13 + 3*s23) + 20*s13^6*s23^5*(s13 + s23)^3*(72*s13^2 - 
                 33*s13*s23 - 28*s23^2) + 4*s12^12*(27*s13^4 + 153*s13^3*
                  s23 - 257*s13^2*s23^2 - 453*s13*s23^3 - 155*s23^4) + s12*
                s13^5*s23^4*(s13 + s23)^2*(6669*s13^4 + 3624*s13^3*s23 - 
                 6607*s13^2*s23^2 - 1466*s13*s23^3 + 636*s23^4) + 4*s12^11*
                (2484*s13^5 + 4833*s13^4*s23 + 4322*s13^3*s23^2 + 
                 845*s13^2*s23^3 + 882*s13*s23^4 + 1020*s23^5) + s12^10*
                (3024*s13^6 + 7020*s13^5*s23 + 14387*s13^4*s23^2 + 
                 22606*s13^3*s23^3 - 1149*s13^2*s23^4 + 636*s13*s23^5 + 
                 8100*s23^6) + s12^2*s13^4*s23^3*(9405*s13^7 + 24978*s13^6*
                  s23 + 7944*s13^5*s23^2 - 22628*s13^4*s23^3 - 18899*s13^3*
                  s23^4 - 8578*s13^2*s23^5 - 6818*s13*s23^6 - 2140*s23^7) - 
               s12^9*(33264*s13^7 + 113706*s13^6*s23 + 240097*s13^5*s23^2 + 
                 238420*s13^4*s23^3 + 99097*s13^3*s23^4 + 58072*s13^2*s23^5 + 
                 40800*s13*s23^6 + 1900*s23^7) + s12^3*s13^3*s23^2*
                (3771*s13^8 + 27582*s13^7*s23 + 47271*s13^6*s23^2 + 
                 42230*s13^5*s23^3 + 31254*s13^4*s23^4 + 9644*s13^3*s23^5 - 
                 3066*s13^2*s23^6 - 362*s13*s23^7 + 24*s23^8) - s12^8*
                (20196*s13^8 + 146331*s13^7*s23 + 407916*s13^6*s23^2 + 
                 688055*s13^5*s23^3 + 591684*s13^4*s23^4 + 239420*s13^3*
                  s23^5 + 108750*s13^2*s23^6 + 78600*s13*s23^7 + 
                 15540*s23^8) + s12^7*(22464*s13^9 + 35910*s13^8*s23 - 
                 45295*s13^7*s23^2 - 296304*s13^6*s23^3 - 567939*s13^5*
                  s23^4 - 443120*s13^4*s23^5 - 141048*s13^3*s23^6 - 
                 64636*s13^2*s23^7 - 55452*s13*s23^8 - 13320*s23^9) + s12^5*
                s13*s23*(51552*s13^9 + 244069*s13^8*s23 + 504878*s13^7*
                  s23^2 + 674152*s13^6*s23^3 + 622688*s13^5*s23^4 + 
                 400960*s13^4*s23^5 + 195304*s13^3*s23^6 + 69017*s13^2*
                  s23^7 + 11032*s13*s23^8 + 276*s23^9) + s12^4*s13^2*s23*
                (-405*s13^9 + 50298*s13^8*s23 + 178238*s13^7*s23^2 + 
                 295651*s13^6*s23^3 + 329920*s13^5*s23^4 + 265822*s13^4*
                  s23^5 + 159299*s13^3*s23^6 + 69423*s13^2*s23^7 + 
                 18122*s13*s23^8 + 2360*s23^9) + s12^6*(16200*s13^10 + 
                 132192*s13^9*s23 + 323275*s13^8*s23^2 + 457514*s13^7*s23^3 + 
                 369376*s13^6*s23^4 + 128024*s13^5*s23^5 + 42640*s13^4*
                  s23^6 + 44264*s13^3*s23^7 + 271*s13^2*s23^8 - 13392*s13*
                  s23^9 - 3620*s23^10)) + p2q^5*p3q*s13^2*(180*s12^11*s23^2*
                (4*s13 + 3*s23)^2 - 20*s13^5*s23^3*(s13 + s23)^4*
                (27*s13^3 - 189*s13^2*s23 + 370*s13*s23^2 - 104*s23^3) - 4*
                s12*s13^4*s23^2*(s13 + s23)^3*(180*s13^5 - 1647*s13^4*s23 + 
                 1942*s13^3*s23^2 + 4381*s13^2*s23^3 - 1650*s13*s23^4 - 
                 202*s23^5) + s12^10*(15120*s13^5 + 35379*s13^4*s23 + 
                 33596*s13^3*s23^2 + 29871*s13^2*s23^3 + 23774*s13*s23^4 + 
                 7440*s23^5) + s12^2*s13^3*s23^2*(s13 + s23)^2*(3204*s13^6 + 
                 259*s13^5*s23 - 33287*s13^4*s23^2 - 15114*s13^3*s23^3 + 
                 15509*s13^2*s23^4 + 4621*s13*s23^5 - 1380*s23^6) + s12^9*
                (19224*s13^6 + 113184*s13^5*s23 + 191899*s13^4*s23^2 + 
                 153874*s13^3*s23^3 + 94499*s13^2*s23^4 + 53784*s13*s23^5 + 
                 14180*s23^6) + s12^8*(-22464*s13^7 + 54081*s13^6*s23 + 
                 313543*s13^5*s23^2 + 426140*s13^4*s23^3 + 284109*s13^3*
                  s23^4 + 147429*s13^2*s23^5 + 67562*s13*s23^6 + 
                 14360*s23^7) + s12^7*(-31536*s13^8 - 124812*s13^7*s23 + 
                 43444*s13^6*s23^2 + 476182*s13^5*s23^3 + 540792*s13^4*
                  s23^4 + 288872*s13^3*s23^5 + 134536*s13^2*s23^6 + 
                 53734*s13*s23^7 + 8100*s23^8) + s12^3*s13^2*s23*
                (396*s13^9 + 13118*s13^8*s23 - 27914*s13^7*s23^2 - 
                 162037*s13^6*s23^3 - 180642*s13^5*s23^4 - 29412*s13^4*
                  s23^5 + 50070*s13^3*s23^6 + 19111*s13^2*s23^7 - 
                 1550*s13*s23^8 - 420*s23^9) + s12^4*s13*s23*(21951*s13^9 - 
                 9373*s13^8*s23 - 264482*s13^7*s23^2 - 442596*s13^6*s23^3 - 
                 177408*s13^5*s23^4 + 116382*s13^4*s23^5 + 103982*s13^3*
                  s23^6 + 20329*s13^2*s23^7 + 1711*s13*s23^8 + 1172*s23^9) + 
               s12^6*(5616*s13^9 - 114867*s13^8*s23 - 316986*s13^7*s23^2 - 
                 59092*s13^6*s23^3 + 455342*s13^5*s23^4 + 460704*s13^4*
                  s23^5 + 191550*s13^3*s23^6 + 75257*s13^2*s23^7 + 
                 28140*s13*s23^8 + 2360*s23^9) + s12^5*(10584*s13^10 + 
                 7776*s13^9*s23 - 226637*s13^8*s23^2 - 495006*s13^7*s23^3 - 
                 198290*s13^6*s23^4 + 275778*s13^5*s23^5 + 275176*s13^4*
                  s23^6 + 87008*s13^3*s23^7 + 22773*s13^2*s23^8 + 
                 8810*s13*s23^9 + 260*s23^10)) + p2q^4*p3q^2*s13*
              (-540*s12^12*s23^2*(8*s13^2 + 10*s13*s23 + 3*s23^2) + 20*s13^6*
                s23^4*(s13 + s23)^4*(54*s13^2 - 239*s13*s23 + 181*s23^2) + 4*
                s12*s13^5*s23^3*(s13 + s23)^3*(900*s13^4 - 3509*s13^3*s23 - 
                 26*s13^2*s23^2 + 3849*s13*s23^3 - 69*s23^4) - 3*s12^11*
                (4968*s13^5 + 10197*s13^4*s23 + 9517*s13^3*s23^2 + 
                 9803*s13^2*s23^3 + 7315*s13*s23^4 + 1820*s23^5) + 2*s12^10*
                (864*s13^6 - 17064*s13^5*s23 - 35845*s13^4*s23^2 - 
                 33963*s13^3*s23^3 - 26199*s13^2*s23^4 - 14043*s13*s23^5 - 
                 2540*s23^6) + s12^2*s13^4*s23^2*(s13 + s23)^2*(2880*s13^6 - 
                 12808*s13^5*s23 - 18763*s13^4*s23^2 + 35946*s13^3*s23^3 + 
                 25785*s13^2*s23^4 - 4256*s13*s23^5 - 2360*s23^6) + s12^3*
                s13^3*s23^2*(s13 + s23)^2*(1096*s13^6 - 34014*s13^5*s23 + 
                 35277*s13^4*s23^2 + 56428*s13^3*s23^3 + 13107*s13^2*s23^4 - 
                 2346*s13*s23^5 - 24*s23^6) + s12^9*(57564*s13^7 + 
                 160776*s13^6*s23 + 172103*s13^5*s23^2 + 114362*s13^4*s23^3 + 
                 43221*s13^3*s23^4 - 6072*s13^2*s23^5 - 5122*s13*s23^6 + 
                 1880*s23^7) + s12^8*(18576*s13^8 + 267786*s13^7*s23 + 
                 606713*s13^6*s23^2 + 660238*s13^5*s23^3 + 526121*s13^4*
                  s23^4 + 295354*s13^3*s23^5 + 77992*s13^2*s23^6 + 
                 14064*s13*s23^7 + 5820*s23^8) + s12^4*s13^2*s23*
                (11160*s13^9 - 40967*s13^8*s23 - 124348*s13^7*s23^2 + 
                 80432*s13^6*s23^3 + 420440*s13^5*s23^4 + 411276*s13^4*
                  s23^5 + 187012*s13^3*s23^6 + 56089*s13^2*s23^7 + 
                 14226*s13*s23^8 + 2140*s23^9) + s12^7*(-48816*s13^9 - 
                 3393*s13^8*s23 + 507107*s13^7*s23^2 + 1003922*s13^6*s23^3 + 
                 955892*s13^5*s23^4 + 715188*s13^4*s23^5 + 402310*s13^3*
                  s23^6 + 100255*s13^2*s23^7 + 7839*s13*s23^8 + 3260*s23^9) + 
               s12^5*s13*(5292*s13^10 - 50760*s13^9*s23 - 213667*s13^8*
                  s23^2 + 9375*s13^7*s23^3 + 671711*s13^6*s23^4 + 
                 869852*s13^5*s23^5 + 533536*s13^4*s23^6 + 249205*s13^3*
                  s23^7 + 98258*s13^2*s23^8 + 18802*s13*s23^9 - 636*s23^10) + 
               s12^6*(-21168*s13^10 - 168786*s13^9*s23 - 54528*s13^8*s23^2 + 
                 659872*s13^7*s23^3 + 1092584*s13^6*s23^4 + 851756*s13^5*
                  s23^5 + 537930*s13^4*s23^6 + 273560*s13^3*s23^7 + 
                 60162*s13^2*s23^8 - 442*s13*s23^9 + 560*s23^10)) + 
             p2q^3*p3q^3*(-20*s13^7*(27*s13 - 77*s23)*s23^5*(s13 + s23)^4 + 
               180*s12^13*s23^2*(16*s13^2 + 16*s13*s23 + 3*s23^2) - 4*s12*
                s13^6*s23^4*(s13 + s23)^3*(1080*s13^3 - 2007*s13^2*s23 - 
                 1346*s13*s23^2 + 411*s23^3) - s12^2*s13^5*s23^3*
                (s13 + s23)^2*(8469*s13^5 - 8931*s13^4*s23 - 27654*s13^3*
                  s23^2 + 5797*s13^2*s23^3 + 8895*s13*s23^4 + 84*s23^5) + 
               s12^12*(4752*s13^5 + 7785*s13^4*s23 + 9206*s13^3*s23^2 + 
                 12065*s13^2*s23^3 + 7532*s13*s23^4 + 1160*s23^5) - s12^11*
                (21168*s13^6 + 41472*s13^5*s23 + 30637*s13^4*s23^2 + 
                 274*s13^3*s23^3 - 2643*s13^2*s23^4 + 5136*s13*s23^5 + 
                 2300*s23^6) - s12^10*(44496*s13^7 + 154386*s13^6*s23 + 
                 228149*s13^5*s23^2 + 180963*s13^4*s23^3 + 66507*s13^3*
                  s23^4 + 32803*s13^2*s23^5 + 34460*s13*s23^6 + 
                 10000*s23^7) + s12^9*(25056*s13^8 - 21168*s13^7*s23 - 
                 111605*s13^6*s23^2 - 150432*s13^5*s23^3 - 142079*s13^4*
                  s23^4 - 60666*s13^3*s23^5 - 27498*s13^2*s23^6 - 
                 38800*s13*s23^7 - 12700*s23^8) - s12^3*s13^4*s23^2*
                (4842*s13^8 + 8886*s13^7*s23 - 30927*s13^6*s23^2 - 
                 56526*s13^5*s23^3 + 322*s13^4*s23^4 + 30232*s13^3*s23^5 + 
                 7703*s13^2*s23^6 - 80*s13*s23^7 + 572*s23^8) + s12^8*
                (59184*s13^9 + 269028*s13^8*s23 + 470289*s13^7*s23^2 + 
                 612504*s13^6*s23^3 + 586345*s13^5*s23^4 + 301037*s13^4*
                  s23^5 + 83754*s13^3*s23^6 + 18183*s13^2*s23^7 - 
                 13500*s13*s23^8 - 7160*s23^9) + s12^5*s13^2*s23*
                (-42768*s13^9 - 71379*s13^8*s23 + 122668*s13^7*s23^2 + 
                 364555*s13^6*s23^3 + 428798*s13^5*s23^4 + 431886*s13^4*
                  s23^5 + 332868*s13^3*s23^6 + 134176*s13^2*s23^7 + 
                 20536*s13*s23^8 + 84*s23^9) + s12^4*s13^3*s23*(27*s13^9 - 
                 30655*s13^8*s23 - 30265*s13^7*s23^2 + 62555*s13^6*s23^3 + 
                 109559*s13^5*s23^4 + 90382*s13^4*s23^5 + 79701*s13^3*s23^6 + 
                 49572*s13^2*s23^7 + 12924*s13*s23^8 + 572*s23^9) + s12^7*
                (-432*s13^10 + 195264*s13^9*s23 + 656063*s13^8*s23^2 + 
                 1063284*s13^7*s23^3 + 1309694*s13^6*s23^4 + 1177742*s13^5*
                  s23^5 + 612086*s13^4*s23^6 + 159476*s13^3*s23^7 + 
                 26747*s13^2*s23^8 + 2272*s13*s23^9 - 1540*s23^10) + s12^6*
                s13*(-15984*s13^10 - 32598*s13^9*s23 + 219789*s13^8*s23^2 + 
                 669728*s13^7*s23^3 + 946490*s13^6*s23^4 + 1072544*s13^5*
                  s23^5 + 907310*s13^4*s23^6 + 432191*s13^3*s23^7 + 
                 92047*s13^2*s23^8 + 7411*s13*s23^9 + 1644*s23^10))) + 
           p1q^4*s23*(p3q^3*(s12 + s23)*(460*s13^5*s23^6*(s13 + s23)^4 + 360*
                s12^11*s23^2*(8*s13^2 + 26*s13*s23 + 15*s23^2) + 4*s12*s13^4*
                s23^5*(s13 + s23)^3*(30*s13^2 + 163*s13*s23 + 268*s23^2) - 
               s12^2*s13^3*s23^4*(s13 + s23)^2*(1296*s13^4 + 4521*s13^3*s23 + 
                 5110*s13^2*s23^2 + 2345*s13*s23^3 + 1380*s23^4) + 3*s12^10*
                (225*s13^5 + 210*s13^4*s23 - 227*s13^3*s23^2 + 3248*s13^2*
                  s23^3 + 7000*s13*s23^4 + 3440*s23^5) - 2*s12^9*
                (351*s13^6 + 6318*s13^5*s23 + 16850*s13^4*s23^2 + 
                 19254*s13^3*s23^3 + 9331*s13^2*s23^4 - 780*s13*s23^5 - 
                 1900*s23^6) - 2*s12^8*(1782*s13^7 + 16587*s13^6*s23 + 
                 45837*s13^5*s23^2 + 65018*s13^4*s23^3 + 57793*s13^3*s23^4 + 
                 31597*s13^2*s23^5 + 6880*s13*s23^6 - 550*s23^7) - s12^3*
                s13^2*s23^3*(4446*s13^7 + 16872*s13^6*s23 + 34013*s13^5*
                  s23^2 + 52121*s13^4*s23^3 + 58279*s13^3*s23^4 + 
                 37959*s13^2*s23^5 + 9770*s13*s23^6 - 444*s23^7) - s12^7*
                (2322*s13^8 + 14742*s13^7*s23 + 47566*s13^6*s23^2 + 
                 105485*s13^5*s23^3 + 146145*s13^4*s23^4 + 116685*s13^3*
                  s23^5 + 40639*s13^2*s23^6 - 1340*s13*s23^7 - 2700*s23^8) + 
               s12^4*s13*s23^2*(-265*s13^8 - 5755*s13^7*s23 - 7820*s13^6*
                  s23^2 + 12803*s13^5*s23^3 + 38367*s13^4*s23^4 + 
                 40105*s13^3*s23^5 + 24934*s13^2*s23^6 + 9023*s13*s23^7 + 
                 1280*s23^8) + s12^5*s23*(4050*s13^9 + 16690*s13^8*s23 + 
                 51955*s13^7*s23^2 + 121999*s13^6*s23^3 + 183038*s13^5*
                  s23^4 + 163358*s13^4*s23^5 + 84465*s13^3*s23^6 + 
                 21901*s13^2*s23^7 - 1100*s13*s23^8 - 2380*s23^9) + s12^6*
                (-135*s13^9 + 9216*s13^8*s23 + 35460*s13^7*s23^2 + 
                 66039*s13^6*s23^3 + 70018*s13^5*s23^4 + 37832*s13^4*s23^5 + 
                 12215*s13^3*s23^6 + 10351*s13^2*s23^7 + 2640*s13*s23^8 - 
                 1900*s23^9)) + p2q^3*(s13 + s23)*(20*s13^5*s23^5*
                (s13 + s23)^3*(270*s13^2 - 381*s13*s23 + 119*s23^2) + 20*s12*
                s13^4*s23^4*(s13 + s23)^2*(756*s13^4 + 186*s13^3*s23 - 
                 953*s13^2*s23^2 + 283*s13*s23^3 - 64*s23^4) + 4*s12^10*
                (54*s13^5 + 387*s13^4*s23 + 107*s13^3*s23^2 - 226*s13^2*
                  s23^3 - 190*s13*s23^4 - 115*s23^5) + s12^9*(1323*s13^6 - 
                 306*s13^5*s23 - 1431*s13^4*s23^2 - 4602*s13^3*s23^3 - 
                 5072*s13^2*s23^4 - 3872*s13*s23^5 - 2300*s23^6) + s12^8*
                (4914*s13^7 - 28224*s13^6*s23 - 62290*s13^5*s23^2 - 
                 42621*s13^4*s23^3 - 19448*s13^3*s23^4 - 10319*s13^2*s23^5 - 
                 8420*s13*s23^6 - 4600*s23^7) + s12^2*s13^3*s23^3*
                (13932*s13^7 + 44718*s13^6*s23 + 26078*s13^5*s23^2 - 
                 17997*s13^4*s23^3 - 18263*s13^3*s23^4 - 17065*s13^2*s23^5 - 
                 12535*s13*s23^6 - 444*s23^7) + s12^7*(6372*s13^8 - 
                 30726*s13^7*s23 - 235524*s13^6*s23^2 - 302723*s13^5*s23^3 - 
                 118160*s13^4*s23^4 - 8303*s13^3*s23^5 - 8380*s13^2*s23^6 - 
                 10700*s13*s23^7 - 4600*s23^8) + s12^3*s13^2*s23^2*
                (4185*s13^8 + 32772*s13^7*s23 - 7622*s13^6*s23^2 - 
                 121779*s13^5*s23^3 - 144543*s13^4*s23^4 - 86161*s13^3*
                  s23^5 - 20622*s13^2*s23^6 + 6346*s13*s23^7 + 1380*s23^8) + 
               s12^6*(2214*s13^9 + 11106*s13^8*s23 - 224810*s13^7*s23^2 - 
                 668287*s13^6*s23^3 - 589279*s13^5*s23^4 - 121395*s13^4*
                  s23^5 + 47053*s13^3*s23^6 + 454*s13^2*s23^7 - 8900*s13*
                  s23^8 - 2300*s23^9) - s12^4*s13*s23*(558*s13^9 - 
                 27084*s13^8*s23 + 56792*s13^7*s23^2 + 401243*s13^6*s23^3 + 
                 557492*s13^5*s23^4 + 289226*s13^4*s23^5 + 7593*s13^3*s23^6 - 
                 39887*s13^2*s23^7 - 4785*s13*s23^8 + 1072*s23^9) - s12^5*
                (351*s13^10 - 14904*s13^9*s23 + 26818*s13^8*s23^2 + 
                 466611*s13^7*s23^3 + 884482*s13^6*s23^4 + 569814*s13^5*
                  s23^5 + 41103*s13^4*s23^6 - 74035*s13^3*s23^7 - 
                 6088*s13^2*s23^8 + 4580*s13*s23^9 + 460*s23^10)) + 
             p2q*p3q^2*(540*s12^12*s23^2*(4*s13^2 + 11*s13*s23 + 6*s23^2) - 
               20*s13^4*s23^6*(s13 + s23)^4*(123*s13^2 - 142*s13*s23 + 
                 23*s23^2) - 4*s12*s13^3*s23^5*(s13 + s23)^3*(1550*s13^4 + 
                 900*s13^3*s23 - 638*s13^2*s23^2 + 75*s13*s23^3 - 
                 102*s23^4) - s12^2*s13^3*s23^4*(s13 + s23)^2*(3865*s13^5 + 
                 6990*s13^4*s23 + 8347*s13^3*s23^2 + 16940*s13^2*s23^3 + 
                 5070*s13*s23^4 - 1308*s23^5) + s12^11*(891*s13^5 + 
                 1431*s13^4*s23 - 2035*s13^3*s23^2 + 5457*s13^2*s23^3 + 
                 21632*s13*s23^4 + 12240*s23^5) + s12^10*(4644*s13^6 + 
                 15390*s13^5*s23 + 1249*s13^4*s23^2 - 33720*s13^3*s23^3 - 
                 12155*s13^2*s23^4 + 37328*s13*s23^5 + 23500*s23^6) + 2*s12^9*
                (6048*s13^7 + 13689*s13^6*s23 - 400*s13^5*s23^2 - 
                 46259*s13^4*s23^3 - 74132*s13^3*s23^4 - 25960*s13^2*s23^5 + 
                 25834*s13*s23^6 + 15780*s23^7) + s12^8*(14742*s13^8 + 
                 38988*s13^7*s23 - 49799*s13^6*s23^2 - 302973*s13^5*s23^3 - 
                 447449*s13^4*s23^4 - 304923*s13^3*s23^5 - 51870*s13^2*
                  s23^6 + 52252*s13*s23^7 + 23100*s23^8) + s12^3*s13*s23^3*
                (5158*s13^9 + 12262*s13^8*s23 + 32893*s13^7*s23^2 + 
                 54775*s13^6*s23^3 + 24431*s13^5*s23^4 - 25079*s13^4*s23^5 - 
                 31702*s13^3*s23^6 - 11458*s13^2*s23^7 - 688*s13*s23^8 - 
                 408*s23^9) + s12^7*(7317*s13^9 + 44415*s13^8*s23 - 
                 35736*s13^7*s23^2 - 462151*s13^6*s23^3 - 902707*s13^5*
                  s23^4 - 758509*s13^4*s23^5 - 257346*s13^3*s23^6 + 
                 15713*s13^2*s23^7 + 22100*s13*s23^8 - 160*s23^9) + s12^6*
                (918*s13^10 + 24678*s13^9*s23 + 19021*s13^8*s23^2 - 
                 255071*s13^7*s23^3 - 808250*s13^6*s23^4 - 995068*s13^5*
                  s23^5 - 506644*s13^4*s23^6 - 7313*s13^3*s23^7 + 
                 66813*s13^2*s23^8 - 2908*s13*s23^9 - 9660*s23^10) + s12^4*
                s23^2*(10517*s13^10 + 24892*s13^9*s23 + 31867*s13^8*s23^2 + 
                 54895*s13^7*s23^3 + 53944*s13^6*s23^4 + 2861*s13^5*s23^5 - 
                 18128*s13^4*s23^6 + 4068*s13^3*s23^7 + 7684*s13^2*s23^8 + 
                 588*s13*s23^9 + 460*s23^10) - s12^5*s23*(-5832*s13^10 - 
                 30791*s13^9*s23 + 12642*s13^8*s23^2 + 216983*s13^7*s23^3 + 
                 435760*s13^6*s23^4 + 381023*s13^5*s23^5 + 93512*s13^4*
                  s23^6 - 78115*s13^3*s23^7 - 44070*s13^2*s23^8 + 
                 1792*s13*s23^9 + 3000*s23^10)) + p2q^2*p3q*(20*s13^4*s23^5*
                (s13 + s23)^4*(108*s13^3 - 477*s13^2*s23 + 265*s13*s23^2 - 
                 23*s23^3) + 4*s12^11*(54*s13^5 + 189*s13^4*s23 - 
                 154*s13^3*s23^2 - 444*s13^2*s23^3 - 85*s13*s23^4 + 
                 75*s23^5) + 4*s12*s13^3*s23^4*(s13 + s23)^3*(1800*s13^5 - 
                 3158*s13^4*s23 - 4190*s13^3*s23^2 + 2801*s13^2*s23^3 - 
                 600*s13*s23^4 + 102*s23^5) + s12^10*(378*s13^6 + 
                 4284*s13^5*s23 + 4147*s13^4*s23^2 - 6050*s13^3*s23^3 - 
                 7619*s13^2*s23^4 + 12*s13*s23^5 + 1360*s23^6) + s12^2*s13^3*
                s23^3*(s13 + s23)^2*(8487*s13^6 + 7805*s13^5*s23 - 
                 12817*s13^4*s23^2 + 3551*s13^3*s23^3 - 10842*s13^2*s23^4 - 
                 16932*s13*s23^5 + 1956*s23^6) - s12^9*(3753*s13^7 + 
                 35262*s13^6*s23 + 89063*s13^5*s23^2 + 99884*s13^4*s23^3 + 
                 55162*s13^3*s23^4 + 11264*s13^2*s23^5 - 708*s13*s23^6 - 
                 60*s23^7) - s12^8*(9126*s13^8 + 134955*s13^7*s23 + 
                 443729*s13^6*s23^2 + 689318*s13^5*s23^3 + 542199*s13^4*
                  s23^4 + 169685*s13^3*s23^5 - 9968*s13^2*s23^6 + 
                 1268*s13*s23^7 + 6900*s23^8) - s12^7*(6912*s13^9 + 
                 155736*s13^8*s23 + 781236*s13^7*s23^2 + 1636793*s13^6*
                  s23^3 + 1789441*s13^5*s23^4 + 1016959*s13^4*s23^5 + 
                 187667*s13^3*s23^6 - 54632*s13^2*s23^7 + 3120*s13*s23^8 + 
                 11500*s23^9) + s12^3*s13*s23^2*(3591*s13^10 + 18364*s13^9*
                  s23 - 43876*s13^8*s23^2 - 198037*s13^7*s23^3 - 249926*s13^6*
                  s23^4 - 167351*s13^5*s23^5 - 63159*s13^4*s23^6 + 
                 1676*s13^3*s23^7 + 8390*s13^2*s23^8 - 40*s13*s23^9 - 
                 408*s23^10) - s12^6*(2052*s13^10 + 62802*s13^9*s23 + 
                 620909*s13^8*s23^2 + 1904049*s13^7*s23^3 + 2758142*s13^6*
                  s23^4 + 2123660*s13^5*s23^5 + 802372*s13^4*s23^6 + 
                 31547*s13^3*s23^7 - 62997*s13^2*s23^8 + 2400*s13*s23^9 + 
                 6600*s23^10) + s12^4*s23*(-207*s13^11 + 3347*s13^10*s23 - 
                 196746*s13^9*s23^2 - 827315*s13^8*s23^3 - 1284683*s13^7*
                  s23^4 - 913656*s13^6*s23^5 - 232880*s13^5*s23^6 + 
                 60692*s13^4*s23^7 + 41370*s13^3*s23^8 + 1174*s13^2*s23^9 - 
                 1512*s13*s23^10 + 460*s23^11) - s12^5*(351*s13^11 + 
                 3438*s13^10*s23 + 185284*s13^9*s23^2 + 1072423*s13^8*s23^3 + 
                 2276789*s13^7*s23^4 + 2314208*s13^6*s23^5 + 1146565*s13^5*
                  s23^6 + 177625*s13^4*s23^7 - 70691*s13^3*s23^8 - 
                 24968*s13^2*s23^9 + 2008*s13*s23^10 + 540*s23^11))) + 
           p1q^3*(-(p3q^4*s12*(s12 + s23)*(20*s13^5*s23^6*(s13 + s23)^3*
                 (28*s13 + 51*s23) + 180*s12^11*s23^2*(4*s13^2 + 23*s13*s23 + 
                  15*s23^2) + s12*s13^4*s23^5*(s13 + s23)^2*(711*s13^3 + 
                  1786*s13^2*s23 + 1479*s13*s23^2 + 24*s23^3) + 
                s12^10*(108*s13^5 + 279*s13^4*s23 - 794*s13^3*s23^2 + 
                  1735*s13^2*s23^3 + 4660*s13*s23^4 + 2380*s23^5) + 
                s12^9*(432*s13^6 - 1764*s13^5*s23 - 8945*s13^4*s23^2 - 
                  15030*s13^3*s23^3 - 16741*s13^2*s23^4 - 12040*s13*s23^5 - 
                  3500*s23^6) + 2*s12^2*s13^3*s23^4*(795*s13^6 + 786*s13^5*
                   s23 - 4253*s13^4*s23^2 - 10787*s13^3*s23^3 - 10268*s13^2*
                   s23^4 - 4427*s13*s23^5 - 702*s23^6) + s12^8*(648*s13^7 - 
                  2592*s13^6*s23 - 10217*s13^5*s23^2 - 19127*s13^4*s23^3 - 
                  30871*s13^3*s23^4 - 28181*s13^2*s23^5 - 12180*s13*s23^6 - 
                  2700*s23^7) - s12^3*s13^2*s23^3*(3129*s13^7 + 11154*s13^6*
                   s23 + 23508*s13^5*s23^2 + 40684*s13^4*s23^3 + 51334*s13^3*
                   s23^4 + 35168*s13^2*s23^5 + 7395*s13*s23^6 - 1800*s23^7) + 
                s12^7*(432*s13^8 + 2358*s13^7*s23 + 19027*s13^6*s23^2 + 
                  34471*s13^5*s23^3 + 22080*s13^4*s23^4 + 8113*s13^3*s23^5 + 
                  12623*s13^2*s23^6 + 2260*s13*s23^7 - 3800*s23^8) + 
                s12^4*s13*s23^2*(-4502*s13^8 - 19341*s13^7*s23 - 37079*s13^6*
                   s23^2 - 24341*s13^5*s23^3 + 18171*s13^4*s23^4 + 
                  45128*s13^3*s23^5 + 39166*s13^2*s23^6 + 15130*s13*s23^7 + 
                  960*s23^8) + s12^6*(108*s13^9 + 4041*s13^8*s23 + 
                  24401*s13^7*s23^2 + 62329*s13^6*s23^3 + 107716*s13^5*
                   s23^4 + 131708*s13^4*s23^5 + 111553*s13^3*s23^6 + 
                  50000*s13^2*s23^7 - 4600*s13*s23^8 - 9200*s23^9) + 
                s12^5*s23*(1134*s13^9 - 1914*s13^8*s23 - 3928*s13^7*s23^2 + 
                  29099*s13^6*s23^3 + 115922*s13^5*s23^4 + 174343*s13^4*
                   s23^5 + 131962*s13^3*s23^6 + 40282*s13^2*s23^7 - 
                  5520*s13*s23^8 - 4920*s23^9))) - p2q^4*s13*(s13 + s23)*
              (40*s13^5*s23^5*(s13 + s23)^3*(135*s13^2 - 262*s13*s23 + 
                 123*s23^2) + 40*s12*s13^4*s23^4*(s13 + s23)^2*(297*s13^4 - 
                 84*s13^3*s23 - 620*s13^2*s23^2 + 237*s13*s23^3 - 24*s23^4) + 
               4*s12^10*(27*s13^5 - 324*s13^4*s23 - 1229*s13^3*s23^2 - 
                 848*s13^2*s23^3 - 140*s13*s23^4 - 95*s23^5) + s12^9*
                (432*s13^6 - 13266*s13^5*s23 - 31166*s13^4*s23^2 - 
                 35199*s13^3*s23^3 - 15514*s13^2*s23^4 - 2623*s13*s23^5 - 
                 2540*s23^6) + s12^8*(648*s13^7 - 44217*s13^6*s23 - 
                 114734*s13^5*s23^2 - 125039*s13^4*s23^3 - 82222*s13^3*
                  s23^4 - 23120*s13^2*s23^5 - 4908*s13*s23^6 - 6360*s23^7) + 
               s12^2*s13^3*s23^3*(7209*s13^7 + 20529*s13^6*s23 - 15831*s13^5*
                  s23^2 - 64795*s13^4*s23^3 - 51004*s13^3*s23^4 - 
                 30538*s13^2*s23^5 - 16978*s13*s23^6 - 1800*s23^7) + s12^7*
                (432*s13^8 - 50490*s13^7*s23 - 272645*s13^6*s23^2 - 
                 345356*s13^5*s23^3 - 169017*s13^4*s23^4 - 49856*s13^3*
                  s23^5 - 7642*s13^2*s23^6 - 4610*s13*s23^7 - 7640*s23^8) + 
               s12^3*s13^2*s23^2*(1242*s13^8 + 6390*s13^7*s23 - 78033*s13^6*
                  s23^2 - 199365*s13^5*s23^3 - 159937*s13^4*s23^4 - 
                 50974*s13^3*s23^5 + 298*s13^2*s23^6 + 7323*s13*s23^7 + 
                 1404*s23^8) + s12^6*(108*s13^9 - 14940*s13^8*s23 - 
                 278539*s13^7*s23^2 - 668405*s13^6*s23^3 - 459863*s13^5*
                  s23^4 + 2177*s13^4*s23^5 + 75988*s13^3*s23^6 + 12050*s13^2*
                  s23^7 - 2212*s13*s23^8 - 4460*s23^9) - s12^4*s13*s23*
                (27*s13^9 - 5029*s13^8*s23 + 146301*s13^7*s23^2 + 
                 499556*s13^6*s23^3 + 479276*s13^5*s23^4 + 63255*s13^4*
                  s23^5 - 133016*s13^3*s23^6 - 64816*s13^2*s23^7 - 
                 5878*s13*s23^8 + 24*s23^9) - s12^5*s23*(-3276*s13^9 + 
                 90591*s13^8*s23 + 557227*s13^7*s23^2 + 800092*s13^6*s23^3 + 
                 262966*s13^5*s23^4 - 193045*s13^4*s23^5 - 129598*s13^3*
                  s23^6 - 13168*s13^2*s23^7 + 471*s13*s23^8 + 1020*s23^9)) + 
             p2q*p3q^3*(-20*s13^5*(73*s13 - 23*s23)*s23^7*(s13 + s23)^4 - 180*
                s12^13*s23^2*(4*s13^2 + 19*s13*s23 + 12*s23^2) - 4*s12*s13^4*
                s23^6*(s13 + s23)^3*(750*s13^3 + 589*s13^2*s23 + 
                 476*s13*s23^2 - 153*s23^3) - s12^2*s13^3*s23^5*(s13 + s23)^2*
                (1481*s13^5 - 3399*s13^4*s23 - 6488*s13^3*s23^2 + 
                 3029*s13^2*s23^3 + 849*s13*s23^4 + 972*s23^5) - s12^12*
                (216*s13^5 + 819*s13^4*s23 - 1822*s13^3*s23^2 - 3737*s13^2*
                  s23^3 + 9008*s13*s23^4 + 8080*s23^5) - s12^11*(648*s13^6 + 
                 4824*s13^5*s23 + 1635*s13^4*s23^2 - 20558*s13^3*s23^3 - 
                 20325*s13^2*s23^4 + 18112*s13*s23^5 + 17600*s23^6) + s12^10*
                (-432*s13^7 + 7857*s13^6*s23 + 48039*s13^5*s23^2 + 
                 88489*s13^4*s23^3 + 81901*s13^3*s23^4 + 12990*s13^2*s23^5 - 
                 40632*s13*s23^6 - 22720*s23^7) + s12^9*(432*s13^8 + 
                 42732*s13^7*s23 + 213330*s13^6*s23^2 + 464334*s13^5*s23^3 + 
                 460815*s13^4*s23^4 + 164240*s13^3*s23^5 - 43359*s13^2*
                  s23^6 - 34728*s13*s23^7 - 2800*s23^8) + s12^3*s13^2*s23^4*
                (3188*s13^8 + 10116*s13^7*s23 + 32377*s13^6*s23^2 + 
                 52276*s13^5*s23^3 + 28718*s13^4*s23^4 - 9448*s13^3*s23^5 - 
                 18367*s13^2*s23^6 - 6584*s13*s23^7 + 444*s23^8) + s12^4*s13*
                s23^3*(8814*s13^9 + 27264*s13^8*s23 + 33015*s13^7*s23^2 - 
                 11776*s13^6*s23^3 - 92645*s13^5*s23^4 - 104445*s13^4*s23^5 - 
                 42211*s13^3*s23^6 + 687*s13^2*s23^7 + 4509*s13*s23^8 + 
                 872*s23^9) + s12^8*(648*s13^9 + 50931*s13^8*s23 + 
                 334960*s13^7*s23^2 + 922783*s13^6*s23^3 + 1248809*s13^5*
                  s23^4 + 778104*s13^4*s23^5 + 80959*s13^3*s23^6 - 
                 93682*s13^2*s23^7 + 19000*s13*s23^8 + 25840*s23^9) + s12^5*
                s23^2*(9068*s13^10 + 72944*s13^9*s23 + 197146*s13^8*s23^2 + 
                 235340*s13^7*s23^3 + 35678*s13^6*s23^4 - 169886*s13^5*
                  s23^5 - 138473*s13^4*s23^6 - 28984*s13^3*s23^7 + 
                 3923*s13^2*s23^8 - 172*s13*s23^9 - 1920*s23^10) + s12^6*s23*
                (4239*s13^10 + 73675*s13^9*s23 + 359045*s13^8*s23^2 + 
                 830734*s13^7*s23^3 + 947284*s13^6*s23^4 + 435824*s13^5*
                  s23^5 - 85918*s13^4*s23^6 - 156445*s13^3*s23^7 - 
                 30194*s13^2*s23^8 + 11528*s13*s23^9 + 2400*s23^10) + s12^7*
                (216*s13^10 + 24300*s13^9*s23 + 238453*s13^8*s23^2 + 
                 851132*s13^7*s23^3 + 1512474*s13^6*s23^4 + 1340744*s13^5*
                  s23^5 + 431900*s13^4*s23^6 - 141278*s13^3*s23^7 - 
                 83253*s13^2*s23^8 + 38192*s13*s23^9 + 21920*s23^10)) + 
             p2q^3*p3q*(-40*s13^5*s23^5*(s13 + s23)^4*(81*s13^3 - 
                 337*s13^2*s23 + 300*s13*s23^2 - 48*s23^3) - 8*s12*s13^4*
                s23^4*(s13 + s23)^3*(990*s13^5 - 2501*s13^4*s23 - 
                 1825*s13^3*s23^2 + 3352*s13^2*s23^3 - 525*s13*s23^4 + 
                 109*s23^5) + 4*s12^11*(54*s13^6 - 162*s13^5*s23 - 
                 973*s13^4*s23^2 - 979*s13^3*s23^3 + 43*s13^2*s23^4 + 
                 710*s13*s23^5 + 365*s23^6) - s12^2*s13^3*s23^3*(s13 + s23)^2*
                (5769*s13^7 - 7181*s13^6*s23 - 37977*s13^5*s23^2 + 
                 2436*s13^4*s23^3 - 6573*s13^3*s23^4 - 15255*s13^2*s23^5 + 
                 5865*s13*s23^6 + 444*s23^7) + s12^10*(648*s13^7 + 
                 10665*s13^6*s23 + 28608*s13^5*s23^2 + 19818*s13^4*s23^3 - 
                 1632*s13^3*s23^4 + 3137*s13^2*s23^5 + 14156*s13*s23^6 + 
                 6840*s23^7) + s12^9*(432*s13^8 + 29304*s13^7*s23 + 
                 129837*s13^6*s23^2 + 207236*s13^5*s23^3 + 122608*s13^4*
                  s23^4 + 3364*s13^3*s23^5 + 2655*s13^2*s23^6 + 28328*s13*
                  s23^7 + 12300*s23^8) + s12^8*(-432*s13^9 + 59661*s13^8*
                  s23 + 229191*s13^7*s23^2 + 447759*s13^6*s23^3 + 
                 433158*s13^5*s23^4 + 118125*s13^4*s23^5 - 71513*s13^3*
                  s23^6 - 10441*s13^2*s23^7 + 30100*s13*s23^8 + 
                 10000*s23^9) + s12^3*s13^2*s23^2*(-1242*s13^10 + 
                 3526*s13^9*s23 + 127963*s13^8*s23^2 + 307252*s13^7*s23^3 + 
                 245705*s13^6*s23^4 + 38898*s13^5*s23^5 - 57119*s13^4*s23^6 - 
                 46168*s13^3*s23^7 - 8343*s13^2*s23^8 + 4428*s13*s23^9 + 
                 972*s23^10) + 2*s12^7*(-324*s13^10 + 38070*s13^9*s23 + 
                 202996*s13^8*s23^2 + 359184*s13^7*s23^3 + 301911*s13^6*
                  s23^4 + 79384*s13^5*s23^5 - 104238*s13^4*s23^6 - 
                 95290*s13^3*s23^7 - 8667*s13^2*s23^8 + 9340*s13*s23^9 + 
                 1350*s23^10) + s12^6*(-216*s13^11 + 33327*s13^10*s23 + 
                 432650*s13^9*s23^2 + 1131505*s13^8*s23^3 + 1039706*s13^7*
                  s23^4 + 45584*s13^6*s23^5 - 590006*s13^5*s23^6 - 
                 482555*s13^4*s23^7 - 166250*s13^3*s23^8 - 7437*s13^2*s23^9 + 
                 6020*s13*s23^10 - 840*s23^11) + s12^4*s13*s23*(27*s13^11 + 
                 751*s13^10*s23 + 234587*s13^9*s23^2 + 820753*s13^8*s23^3 + 
                 904392*s13^7*s23^4 + 75948*s13^6*s23^5 - 554858*s13^5*
                  s23^6 - 399019*s13^4*s23^7 - 76733*s13^3*s23^8 + 
                 12439*s13^2*s23^9 + 1885*s13*s23^10 - 612*s23^11) - s12^5*
                s23*(1116*s13^11 - 160505*s13^10*s23 - 898150*s13^9*s23^2 - 
                 1480287*s13^8*s23^3 - 621168*s13^7*s23^4 + 683796*s13^6*
                  s23^5 + 845270*s13^5*s23^6 + 329123*s13^4*s23^7 + 
                 40696*s13^3*s23^8 - 679*s13^2*s23^9 + 184*s13*s23^10 + 
                 460*s23^11)) + p2q^2*p3q^2*(20*s13^5*s23^6*(s13 + s23)^4*
                (231*s13^2 - 346*s13*s23 + 119*s23^2) + 4*s12*s13^4*s23^5*
                (s13 + s23)^3*(2875*s13^4 - 573*s13^3*s23 - 2740*s13^2*
                  s23^2 + 553*s13*s23^3 - 65*s23^4) - 4*s12^12*(27*s13^5 + 
                 135*s13^4*s23 - 356*s13^3*s23^2 - 1269*s13^2*s23^3 - 
                 245*s13*s23^4 + 345*s23^5) - 2*s12^11*s23*(972*s13^5 + 
                 1629*s13^4*s23 - 3424*s13^3*s23^2 - 7493*s13^2*s23^3 + 
                 148*s13*s23^4 + 2690*s23^5) + s12^2*s13^3*s23^4*
                (s13 + s23)^2*(10178*s13^6 + 6472*s13^5*s23 - 10379*s13^4*
                  s23^2 + 11228*s13^3*s23^3 - 4557*s13^2*s23^4 - 
                 9354*s13*s23^5 - 1416*s23^6) + s12^10*(972*s13^7 + 
                 35910*s13^6*s23 + 117161*s13^5*s23^2 + 131876*s13^4*s23^3 + 
                 63221*s13^3*s23^4 + 15256*s13^2*s23^5 + 8*s13*s23^6 - 
                 3180*s23^7) + s12^9*(1728*s13^8 + 88128*s13^7*s23 + 
                 429821*s13^6*s23^2 + 802511*s13^5*s23^3 + 655480*s13^4*
                  s23^4 + 190051*s13^3*s23^5 - 4959*s13^2*s23^6 + 
                 15880*s13*s23^7 + 11100*s23^8) + s12^3*s13^2*s23^3*
                (2680*s13^9 + 27207*s13^8*s23 + 18349*s13^7*s23^2 - 
                 31422*s13^6*s23^3 - 32895*s13^5*s23^4 - 31560*s13^4*s23^5 - 
                 41894*s13^3*s23^6 - 21557*s13^2*s23^7 - 2156*s13*s23^8 + 
                 1416*s23^9) + s12^7*s23*(25704*s13^9 + 256306*s13^8*s23 + 
                 994724*s13^7*s23^2 + 1872919*s13^6*s23^3 + 1646513*s13^5*
                  s23^4 + 505475*s13^4*s23^5 - 82361*s13^3*s23^6 - 
                 28000*s13^2*s23^7 + 16720*s13*s23^8 + 4020*s23^9) + 2*s12^8*
                (486*s13^9 + 35748*s13^8*s23 + 249203*s13^7*s23^2 + 
                 705643*s13^6*s23^3 + 912392*s13^5*s23^4 + 523876*s13^4*
                  s23^5 + 76075*s13^3*s23^6 - 17951*s13^2*s23^7 + 
                 14440*s13*s23^8 + 8450*s23^9) + s12^4*s13*s23^2*
                (-4174*s13^10 + 43152*s13^9*s23 + 105608*s13^8*s23^2 - 
                 20848*s13^7*s23^3 - 260623*s13^6*s23^4 - 346978*s13^5*
                  s23^5 - 232224*s13^4*s23^6 - 68368*s13^3*s23^7 + 
                 9065*s13^2*s23^8 + 9034*s13*s23^9 + 260*s23^10) + s12^6*
                (-108*s13^11 + 1998*s13^10*s23 + 93855*s13^9*s23^2 + 
                 354726*s13^8*s23^3 + 742025*s13^7*s23^4 + 802812*s13^6*
                  s23^5 + 226394*s13^5*s23^6 - 247266*s13^4*s23^7 - 
                 136824*s13^3*s23^8 + 16176*s13^2*s23^9 + 1904*s13*s23^10 - 
                 4980*s23^11) - s12^5*s23*(3024*s13^11 - 23803*s13^10*s23 - 
                 152961*s13^9*s23^2 - 192068*s13^8*s23^3 + 36521*s13^7*
                  s23^4 + 371206*s13^6*s23^5 + 496752*s13^5*s23^6 + 
                 284612*s13^4*s23^7 + 24762*s13^3*s23^8 - 26197*s13^2*s23^9 + 
                 272*s13*s23^10 + 2380*s23^11))) + 
           p1q^2*(p3q^5*s12^2*(s12 + s23)*(-20*s13^5*(13*s13 - 15*s23)*s23^5*
                (s13 + s23)^3 + 180*s12^11*s23^2*(4*s13 + 3*s23) - s12*s13^4*
                s23^4*(s13 + s23)^2*(778*s13^3 + 1169*s13^2*s23 + 
                 1751*s13*s23^2 + 1760*s23^3) + 4*s12^10*(27*s13^4 - 
                 45*s13^3*s23 - 59*s13^2*s23^2 - 417*s13*s23^3 - 290*s23^4) + 
               2*s12^9*(162*s13^5 + 99*s13^4*s23 - 444*s13^3*s23^2 - 
                 2723*s13^2*s23^3 - 4222*s13*s23^4 - 1890*s23^5) + s12^8*
                (216*s13^6 + 3006*s13^5*s23 + 7314*s13^4*s23^2 + 4934*s13^3*
                  s23^3 - 434*s13^2*s23^4 - 5824*s13*s23^5 - 4060*s23^6) + 
               s12^2*s13^3*s23^3*(1648*s13^6 + 4413*s13^5*s23 + 1056*s13^4*
                  s23^2 - 11725*s13^3*s23^3 - 16898*s13^2*s23^4 - 
                 6894*s13*s23^5 - 12*s23^6) + s12^7*(-216*s13^7 + 
                 5976*s13^6*s23 + 17355*s13^5*s23^2 + 25468*s13^4*s23^3 + 
                 33383*s13^3*s23^4 + 24010*s13^2*s23^5 - 6348*s13*s23^6 - 
                 9200*s23^7) + s12^3*s13^2*s23^2*(1244*s13^7 + 5827*s13^6*
                  s23 + 19172*s13^5*s23^2 + 29270*s13^4*s23^3 + 18069*s13^3*
                  s23^4 + 6825*s13^2*s23^5 + 5853*s13*s23^6 + 2736*s23^7) + 
               s12^6*(-324*s13^8 + 3276*s13^7*s23 + 5779*s13^6*s23^2 + 
                 25992*s13^5*s23^3 + 71469*s13^4*s23^4 + 90374*s13^3*s23^5 + 
                 35618*s13^2*s23^6 - 17060*s13*s23^7 - 12300*s23^8) + s12^4*
                s13*s23*(-1350*s13^8 - 3209*s13^7*s23 + 1814*s13^6*s23^2 + 
                 38580*s13^5*s23^3 + 82536*s13^4*s23^4 + 83641*s13^3*s23^5 + 
                 48244*s13^2*s23^6 + 12372*s13*s23^7 - 720*s23^8) + s12^5*
                (-108*s13^9 - 1422*s13^8*s23 - 8783*s13^7*s23^2 + 
                 1795*s13^6*s23^3 + 65099*s13^5*s23^4 + 126507*s13^4*s23^5 + 
                 105012*s13^3*s23^6 + 26020*s13^2*s23^7 - 11200*s13*s23^8 - 
                 5080*s23^9)) + p2q^5*s13^2*(s13 + s23)*(20*s13^5*s23^4*
                (s13 + s23)^3*(135*s13^2 - 401*s13*s23 + 254*s23^2) - 4*
                s12^10*(27*s13^4 + 54*s13^3*s23 + 22*s13^2*s23^2 - 
                 210*s13*s23^3 - 155*s23^4) + 20*s12*s13^4*s23^3*
                (s13 + s23)^2*(234*s13^4 - 331*s13^3*s23 - 883*s13^2*s23^2 + 
                 488*s13*s23^3 + 36*s23^4) + s12^9*(-5508*s13^5 - 
                 2646*s13^4*s23 + 2508*s13^3*s23^2 + 3876*s13^2*s23^3 + 
                 5810*s13*s23^4 + 2360*s23^5) + s12^8*(-15768*s13^6 - 
                 29070*s13^5*s23 + 8805*s13^4*s23^2 + 31977*s13^3*s23^3 + 
                 25331*s13^2*s23^4 + 15401*s13*s23^5 + 3060*s23^6) + 2*s12^2*
                s13^3*s23^2*(720*s13^7 + 1381*s13^6*s23 - 11941*s13^5*s23^2 - 
                 24977*s13^4*s23^3 - 14633*s13^3*s23^4 - 5652*s13^2*s23^5 - 
                 4762*s13*s23^6 - 1368*s23^7) + s12^3*s13^2*s23^2*
                (-2288*s13^7 - 47906*s13^6*s23 - 75051*s13^5*s23^2 + 
                 8638*s13^4*s23^3 + 65316*s13^3*s23^4 + 29828*s13^2*s23^5 + 
                 1795*s13*s23^6 + 12*s23^7) + s12^7*(-15336*s13^7 - 
                 90756*s13^6*s23 - 32709*s13^5*s23^2 + 129130*s13^4*s23^3 + 
                 124748*s13^3*s23^4 + 57572*s13^2*s23^5 + 21323*s13*s23^6 + 
                 1220*s23^7) + s12^6*(-4860*s13^8 - 104868*s13^7*s23 - 
                 179299*s13^6*s23^2 + 130745*s13^5*s23^3 + 381008*s13^4*
                  s23^4 + 219906*s13^3*s23^5 + 60837*s13^2*s23^6 + 
                 17243*s13*s23^7 - 400*s23^8) + s12^4*s13*s23*(-1062*s13^8 - 
                 76378*s13^7*s23 - 177416*s13^6*s23^2 + 29051*s13^5*s23^3 + 
                 319013*s13^4*s23^4 + 252599*s13^3*s23^5 + 65923*s13^2*
                  s23^6 + 5766*s13*s23^7 + 1760*s23^8) + s12^5*(108*s13^9 - 
                 41814*s13^8*s23 - 213031*s13^7*s23^2 - 109944*s13^6*s23^3 + 
                 374625*s13^5*s23^4 + 476568*s13^4*s23^5 + 185803*s13^3*
                  s23^6 + 30386*s13^2*s23^7 + 8111*s13*s23^8 - 300*s23^9)) + 
             p2q*p3q^4*s12*(180*s12^13*s23^2*(4*s13 + 3*s23) - 20*s13^5*s23^6*
                (s13 + s23)^3*(28*s13^2 - 17*s13*s23 + 28*s23^2) - s12*s13^4*
                s23^5*(s13 + s23)^2*(2758*s13^4 + 2687*s13^3*s23 - 
                 2020*s13^2*s23^2 - 1237*s13*s23^3 - 588*s23^4) + 4*s12^12*
                (54*s13^4 + 9*s13^3*s23 - 577*s13^2*s23^2 + 228*s13*s23^3 + 
                 500*s23^4) + s12^11*(324*s13^5 + 603*s13^4*s23 - 
                 2346*s13^3*s23^2 + 3*s13^2*s23^3 + 7268*s13*s23^4 + 
                 4700*s23^5) - 2*s12^10*(2862*s13^6 + 19467*s13^5*s23 + 
                 28551*s13^4*s23^2 + 8685*s13^3*s23^3 - 14565*s13^2*s23^4 - 
                 8314*s13*s23^5 + 400*s23^6) + s12^2*s13^3*s23^4*
                (-5588*s13^7 - 22192*s13^6*s23 - 22836*s13^5*s23^2 + 
                 6791*s13^4*s23^3 + 25169*s13^3*s23^4 + 16165*s13^2*s23^5 + 
                 4451*s13*s23^6 + 432*s23^7) - s12^9*(16632*s13^7 + 
                 117027*s13^6*s23 + 283791*s13^5*s23^2 + 262818*s13^4*s23^3 + 
                 39691*s13^3*s23^4 - 57943*s13^2*s23^5 + 14928*s13*s23^6 + 
                 26100*s23^7) + s12^3*s13^2*s23^3*(-3607*s13^8 - 14329*s13^7*
                  s23 + 4197*s13^6*s23^2 + 71283*s13^5*s23^3 + 106699*s13^4*
                  s23^4 + 70843*s13^3*s23^5 + 22607*s13^2*s23^6 + 
                 1063*s13*s23^7 - 1356*s23^8) - s12^8*(15552*s13^8 + 
                 129456*s13^7*s23 + 427507*s13^6*s23^2 + 591515*s13^5*s23^3 + 
                 303532*s13^4*s23^4 - 45509*s13^3*s23^5 - 47469*s13^2*s23^6 + 
                 64220*s13*s23^7 + 42160*s23^8) + s12^4*s13*s23^2*
                (3054*s13^9 + 16844*s13^8*s23 + 95899*s13^7*s23^2 + 
                 307256*s13^6*s23^3 + 479081*s13^5*s23^4 + 372157*s13^4*
                  s23^5 + 123327*s13^3*s23^6 + 349*s13^2*s23^7 - 
                 5843*s13*s23^8 - 88*s23^9) - s12^7*(4428*s13^9 + 
                 62451*s13^8*s23 + 248185*s13^7*s23^2 + 414370*s13^6*s23^3 + 
                 194840*s13^5*s23^4 - 183386*s13^4*s23^5 - 214327*s13^3*
                  s23^6 - 27661*s13^2*s23^7 + 46928*s13*s23^8 + 
                 21500*s23^9) + s12^6*(324*s13^10 - 6606*s13^9*s23 - 
                 35113*s13^8*s23^2 + 4533*s13^7*s23^3 + 325679*s13^6*s23^4 + 
                 704517*s13^5*s23^5 + 600586*s13^4*s23^6 + 205404*s13^3*
                  s23^7 + 12080*s13^2*s23^8 - 1152*s13*s23^9 + 1600*s23^10) + 
               s12^5*s23*(3915*s13^10 + 14626*s13^9*s23 + 84584*s13^8*s23^2 + 
                 376608*s13^7*s23^3 + 815614*s13^6*s23^4 + 868161*s13^5*
                  s23^5 + 423580*s13^4*s23^6 + 61007*s13^3*s23^7 - 
                 3723*s13^2*s23^8 + 5948*s13*s23^9 + 3000*s23^10)) - 
             p2q^3*p3q^2*(20*s13^6*s23^5*(s13 + s23)^4*(185*s13^2 - 
                 412*s13*s23 + 223*s23^2) + 4*s12*s13^5*s23^4*(s13 + s23)^3*
                (2600*s13^4 - 3609*s13^3*s23 - 2912*s13^2*s23^2 + 
                 2899*s13*s23^3 + 112*s23^4) + 4*s12^12*(81*s13^5 + 
                 189*s13^4*s23 - 420*s13^3*s23^2 + 427*s13^2*s23^3 + 
                 1125*s13*s23^4 + 385*s23^5) + s12^2*s13^4*s23^3*
                (s13 + s23)^2*(10297*s13^6 - 6894*s13^5*s23 - 34904*s13^4*
                  s23^2 + 12491*s13^3*s23^3 + 2797*s13^2*s23^4 - 10751*s13*
                  s23^5 - 1864*s23^6) + 2*s12^11*(2754*s13^6 + 14040*s13^5*
                  s23 + 20607*s13^4*s23^2 + 9362*s13^3*s23^3 + 7369*s13^2*
                  s23^4 + 9628*s13*s23^5 + 3120*s23^6) + s12^10*
                (-6372*s13^7 - 3177*s13^6*s23 + 55051*s13^5*s23^2 + 
                 96941*s13^4*s23^3 + 50765*s13^3*s23^4 + 26444*s13^2*s23^5 + 
                 27284*s13*s23^6 + 8100*s23^7) - s12^9*(43092*s13^8 + 
                 157644*s13^7*s23 + 271059*s13^6*s23^2 + 244843*s13^5*s23^3 + 
                 102052*s13^4*s23^4 + 11183*s13^3*s23^5 - 11133*s13^2*s23^6 - 
                 8720*s13*s23^7 - 800*s23^8) + s12^3*s13^3*s23^2*
                (3386*s13^9 + 21800*s13^8*s23 - 16357*s13^7*s23^2 - 
                 78591*s13^6*s23^3 - 31080*s13^5*s23^4 + 19181*s13^4*s23^5 + 
                 9472*s13^3*s23^6 + 6654*s13^2*s23^7 + 4055*s13*s23^8 + 
                 432*s23^9) - s12^8*(40932*s13^9 + 253089*s13^8*s23 + 
                 537444*s13^7*s23^2 + 778230*s13^6*s23^3 + 823182*s13^5*
                  s23^4 + 479785*s13^4*s23^5 + 93118*s13^3*s23^6 - 
                 3128*s13^2*s23^7 + 13580*s13*s23^8 + 6900*s23^9) + s12^4*
                s13^2*s23*(-999*s13^10 + 42544*s13^9*s23 + 33672*s13^8*
                  s23^2 - 146292*s13^7*s23^3 - 150756*s13^6*s23^4 + 
                 153269*s13^5*s23^5 + 341502*s13^4*s23^6 + 249504*s13^3*
                  s23^7 + 91481*s13^2*s23^8 + 15371*s13*s23^9 + 
                 1096*s23^10) - s12^7*(3780*s13^10 + 149112*s13^9*s23 + 
                 463392*s13^8*s23^2 + 592926*s13^7*s23^3 + 694171*s13^6*
                  s23^4 + 784611*s13^5*s23^5 + 421697*s13^4*s23^6 + 
                 19151*s13^3*s23^7 - 19680*s13^2*s23^8 + 14560*s13*s23^9 + 
                 5760*s23^10) + s12^6*(5508*s13^11 + 8541*s13^10*s23 - 
                 209351*s13^9*s23^2 - 393788*s13^8*s23^3 - 89091*s13^7*
                  s23^4 + 120448*s13^6*s23^5 - 5572*s13^5*s23^6 + 
                 25699*s13^4*s23^7 + 81106*s13^3*s23^8 + 19856*s13^2*s23^9 - 
                 5884*s13*s23^10 - 1460*s23^11) + s12^5*s13*(-108*s13^11 + 
                 30708*s13^10*s23 + 38971*s13^9*s23^2 - 195867*s13^8*s23^3 - 
                 255590*s13^7*s23^4 + 242921*s13^6*s23^5 + 603544*s13^5*
                  s23^6 + 458478*s13^4*s23^7 + 211708*s13^3*s23^8 + 
                 63622*s13^2*s23^9 + 6681*s13*s23^10 - 1096*s23^11)) + 
             p2q^4*p3q*s13*(20*s13^5*s23^4*(s13 + s23)^4*(108*s13^3 - 
                 505*s13^2*s23 + 670*s13*s23^2 - 150*s23^3) + 4*s12*s13^4*
                s23^3*(s13 + s23)^3*(990*s13^5 - 4273*s13^4*s23 + 
                 110*s13^3*s23^2 + 7926*s13^2*s23^3 - 1710*s13*s23^4 + 
                 22*s23^5) + 4*s12^11*(81*s13^5 + 216*s13^4*s23 - 
                 6*s13^3*s23^2 - s13^2*s23^3 + 375*s13*s23^4 + 230*s23^5) + 
               s12^10*(11124*s13^6 + 36657*s13^5*s23 + 56002*s13^4*s23^2 + 
                 41147*s13^3*s23^3 + 15480*s13^2*s23^4 + 6982*s13*s23^5 + 
                 3160*s23^6) + s12^2*s13^3*s23^2*(s13 + s23)^2*(1440*s13^7 - 
                 10811*s13^6*s23 - 24320*s13^5*s23^2 + 28964*s13^4*s23^3 + 
                 15091*s13^3*s23^4 - 12323*s13^2*s23^5 + 2735*s13*s23^6 + 
                 1356*s23^7) + s12^9*(20736*s13^7 + 107262*s13^6*s23 + 
                 240906*s13^5*s23^2 + 308848*s13^4*s23^3 + 211217*s13^3*
                  s23^4 + 64604*s13^2*s23^5 + 9775*s13*s23^6 + 4000*s23^7) + 
               s12^8*(-1080*s13^8 + 112995*s13^7*s23 + 383793*s13^6*s23^2 + 
                 665956*s13^5*s23^3 + 739737*s13^4*s23^4 + 451667*s13^3*
                  s23^5 + 104244*s13^2*s23^6 + 476*s13*s23^7 + 2800*s23^8) - 
               s12^3*s13^2*s23^2*(5278*s13^9 + 75734*s13^8*s23 + 105345*s13^7*
                  s23^2 - 85203*s13^6*s23^3 - 238581*s13^5*s23^4 - 
                 147824*s13^4*s23^5 - 26261*s13^3*s23^6 + 5789*s13^2*s23^7 + 
                 3147*s13*s23^8 + 432*s23^9) + s12^7*(-21276*s13^9 - 
                 17136*s13^8*s23 + 326265*s13^7*s23^2 + 880415*s13^6*s23^3 + 
                 1147060*s13^5*s23^4 + 994480*s13^4*s23^5 + 500965*s13^3*
                  s23^6 + 78185*s13^2*s23^7 - 10490*s13*s23^8 + 2200*s23^9) + 
               s12^4*s13*s23*(-63*s13^10 - 109298*s13^9*s23 - 249970*s13^8*
                  s23^2 + 155208*s13^7*s23^3 + 876286*s13^6*s23^4 + 
                 884374*s13^5*s23^5 + 328892*s13^4*s23^6 + 7517*s13^3*s23^7 - 
                 19779*s13^2*s23^8 - 2383*s13*s23^9 - 588*s23^10) + s12^6*
                (-10044*s13^10 - 122373*s13^9*s23 - 28385*s13^8*s23^2 + 
                 765750*s13^7*s23^3 + 1506781*s13^6*s23^4 + 1352206*s13^5*
                  s23^5 + 768115*s13^4*s23^6 + 275541*s13^3*s23^7 + 
                 23111*s13^2*s23^8 - 9806*s13*s23^9 + 1720*s23^10) + s12^5*
                (216*s13^11 - 63774*s13^10*s23 - 258317*s13^9*s23^2 + 
                 65715*s13^8*s23^3 + 1161432*s13^7*s23^4 + 1632883*s13^6*
                  s23^5 + 968319*s13^5*s23^6 + 277687*s13^4*s23^7 + 
                 40921*s13^3*s23^8 - 1901*s13^2*s23^9 - 3721*s13*s23^10 + 
                 560*s23^11)) + p2q^2*p3q^3*(20*s13^6*(77*s13 - 73*s23)*s23^6*
                (s13 + s23)^4 + 4*s12*s13^5*s23^5*(s13 + s23)^3*(1685*s13^3 - 
                 266*s13^2*s23 - 645*s13*s23^2 - 274*s23^3) + 4*s12^13*
                (27*s13^4 + 54*s13^3*s23 - 518*s13^2*s23^2 + 105*s13*s23^3 + 
                 385*s23^4) + s12^2*s13^4*s23^4*(s13 + s23)^2*(12166*s13^5 + 
                 8528*s13^4*s23 - 6805*s13^3*s23^2 + 11198*s13^2*s23^3 + 
                 6541*s13*s23^4 + 1096*s23^5) + s12^12*(-324*s13^5 - 
                 459*s13^4*s23 + 1194*s13^3*s23^2 - 1855*s13^2*s23^3 + 
                 3916*s13*s23^4 + 4860*s23^5) - 4*s12^11*(2943*s13^6 + 
                 16506*s13^5*s23 + 23256*s13^4*s23^2 + 10475*s13^3*s23^3 + 
                 1085*s13^2*s23^4 + 623*s13*s23^5 - 65*s23^6) - s12^10*
                (21276*s13^7 + 125919*s13^6*s23 + 320289*s13^5*s23^2 + 
                 340128*s13^4*s23^3 + 137321*s13^3*s23^4 + 20291*s13^2*
                  s23^5 + 25172*s13*s23^6 + 12300*s23^7) + s12^9*
                (1620*s13^8 - 12528*s13^7*s23 - 88127*s13^6*s23^2 - 
                 194207*s13^5*s23^3 - 172096*s13^4*s23^4 - 56323*s13^3*
                  s23^5 - 11915*s13^2*s23^6 - 17100*s13*s23^7 - 8500*s23^8) + 
               s12^3*s13^3*s23^3*(9752*s13^8 + 44169*s13^7*s23 + 66885*s13^6*
                  s23^2 + 95222*s13^5*s23^3 + 152761*s13^4*s23^4 + 
                 134454*s13^3*s23^5 + 53470*s13^2*s23^6 + 9455*s13*s23^7 + 
                 432*s23^8) + s12^4*s13^2*s23^2*(294*s13^9 + 57681*s13^8*
                  s23 + 199868*s13^7*s23^2 + 378523*s13^6*s23^3 + 
                 507443*s13^5*s23^4 + 420767*s13^4*s23^5 + 180272*s13^3*
                  s23^6 + 25477*s13^2*s23^7 - 6013*s13*s23^8 - 1864*s23^9) + 
               s12^8*(21924*s13^9 + 138231*s13^8*s23 + 460264*s13^7*s23^2 + 
                 955112*s13^6*s23^3 + 1149274*s13^5*s23^4 + 725156*s13^4*
                  s23^5 + 181148*s13^3*s23^6 + 10191*s13^2*s23^7 + 
                 25340*s13*s23^8 + 10340*s23^9) + s12^5*s13*s23*
                (-3456*s13^10 + 59715*s13^9*s23 + 320269*s13^8*s23^2 + 
                 765518*s13^7*s23^3 + 1254153*s13^6*s23^4 + 1347976*s13^5*
                  s23^5 + 802706*s13^4*s23^6 + 178112*s13^3*s23^7 - 
                 28874*s13^2*s23^8 - 11515*s13*s23^9 + 448*s23^10) + s12^7*
                (10044*s13^10 + 132768*s13^9*s23 + 552052*s13^8*s23^2 + 
                 1452098*s13^7*s23^3 + 2494369*s13^6*s23^4 + 2477869*s13^5*
                  s23^5 + 1220117*s13^4*s23^6 + 181581*s13^3*s23^7 - 
                 7750*s13^2*s23^8 + 34756*s13*s23^9 + 14060*s23^10) + s12^6*
                (-324*s13^11 + 39123*s13^10*s23 + 287081*s13^9*s23^2 + 
                 884694*s13^8*s23^3 + 1865969*s13^7*s23^4 + 2600036*s13^6*
                  s23^5 + 2058252*s13^5*s23^6 + 731530*s13^4*s23^7 + 
                 16124*s13^3*s23^8 - 23773*s13^2*s23^9 + 11948*s13*s23^10 + 
                 4460*s23^11))))/(72*p1q*(p2q + p3q)*s12^3*s13^3*(s12 + s13)*
           s23^2*(s12 + s23)^2*(s13 + s23)^2*(p1q^5*s23^3*(s12 + s23)*
             (s13 + s23) + (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))) - 
         ((s12 + s13 + s23)*(9*p1q^2*(s12 - s13)*(s12 + s13)^2 + 
            9*(s12^2 - s13^2)*(2*p2q*p3q*(-s12 + s13) + p3q^2*(s12 + s13) + 
              p2q^2*(s12 + 5*s13)) + p1q*(p3q*(9*s12^3 + s12^2*(45*s13 - 
                  68*s23) + s12*(-81*s13^2 + 8*s13*s23 - 36*s23^2) + 
                s13*(27*s13^2 + 4*s13*s23 + 36*s23^2)) + p2q*(-27*s12^3 + 
                s12^2*(45*s13 - 68*s23) + s12*(-45*s13^2 + 8*s13*s23 - 
                  36*s23^2) + s13*(27*s13^2 + 4*s13*s23 + 36*s23^2))))*
           den[-3 + 2*ep])/(8*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^2*s23))*
        p1 . E0conj*p2 . E0 + 
       (-1/18*(ep^2*(s12 + s13)*(-(s12*s13^2*s23^2*(s13 + s23)) - 
             10*s13^3*s23^2*(s13 + s23) + s12^4*(9*s13^2 - 10*s23^2) + 
             s12^3*(18*s13^3 + 18*s13^2*s23 - s13*s23^2 - 10*s23^3) + 
             s12^2*(9*s13^4 + 18*s13^3*s23 - s13*s23^3)))/(s12^2*s13^2*s23^2*
            (s12 + s23)*(s13 + s23)) - ((s12 + s13 + s23)*
           (-9*p1q^7*(10*s12^4 - 7*s12^3*s13 - 7*s12*s13^3 + 10*s13^4)*s23^5*
             (s12 + s23)*(s13 + s23) + 9*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
             (p2q^3*s13^2*(10*s12^5*s23*(s13 + s23) + 43*s12^2*s13^3*s23*
                 (s13 + s23) - 3*s12*s13^4*s23*(s13 + s23) - 10*s13^5*s23*
                 (s13 + s23) + s12^3*s13^2*(72*s13^2 + 47*s13*s23 - 
                  7*s23^2) + 3*s12^4*s13*(24*s13^2 + 19*s13*s23 + s23^2)) + 
              p3q^3*s12^2*(-10*s12^6*s23 + s12^2*s13^3*(57*s13 - 7*s23)*s23 + 
                10*s13^5*s23^2 + s12*s13^4*s23*(10*s13 + 3*s23) - 
                s12^5*s23*(3*s13 + 10*s23) + s12^4*s13*(72*s13^2 + 
                  43*s13*s23 - 3*s23^2) + s12^3*s13^2*(72*s13^2 + 
                  47*s13*s23 + 43*s23^2)) + p2q^2*p3q*s13*(10*s13^5*s23^2*
                 (s13 + s23) - 10*s12^6*s23*(3*s13 + 2*s23) + s12^2*s13^3*s23*
                 (9*s13^2 - 37*s13*s23 - 43*s23^2) + s12*s13^4*s23*
                 (30*s13^2 + 23*s13*s23 + 3*s23^2) + s12^4*s13*(-72*s13^3 + 
                  3*s13^2*s23 + 11*s13*s23^2 - 3*s23^3) + s12^3*s13^2*
                 (72*s13^3 - 93*s13^2*s23 - 79*s13*s23^2 + 7*s23^3) - 
                s12^5*(144*s13^3 + 63*s13^2*s23 + 16*s13*s23^2 + 10*s23^3)) + 
              p2q*p3q^2*s12*(-10*s13^5*s23^2*(2*s13 + s23) + 10*s12^6*s23*
                 (3*s13 + s23) - s12*s13^4*s23*(30*s13^2 + 16*s13*s23 + 
                  3*s23^2) + s12^2*s13^3*s23*(-63*s13^2 + 11*s13*s23 + 
                  7*s23^2) - s12^4*s13*(72*s13^3 + 93*s13^2*s23 + 
                  37*s13*s23^2 - 3*s23^3) + s12^5*(72*s13^3 + 9*s13^2*s23 + 
                  23*s13*s23^2 + 10*s23^3) - s12^3*s13^2*(144*s13^3 - 
                  3*s13^2*s23 + 79*s13*s23^2 + 43*s23^3))) + 
            p1q^6*s23^4*(p2q*(90*s12^6*(s13 + s23) + 10*s13^4*s23*
                 (45*s13^2 + 44*s13*s23 - s23^2) + s12^5*(117*s13^2 + 
                  197*s13*s23 + 80*s23^2) - 2*s12^2*s13^2*(81*s13^3 + 
                  289*s13^2*s23 - 77*s13*s23^2 - 285*s23^3) + 5*s12*s13^3*
                 (72*s13^3 + 25*s13^2*s23 - 69*s13*s23^2 - 22*s23^3) - 
                s12^4*(63*s13^3 + 110*s13^2*s23 - 87*s13*s23^2 + 10*s23^3) - 
                2*s12^3*s13*(162*s13^3 - 60*s13^2*s23 - 95*s13*s23^2 + 
                  55*s23^3)) + p3q*(90*s12^6*(4*s13 + 5*s23) + 10*s13^4*s23*
                 (9*s13^2 + 8*s13*s23 - s23^2) + s12^5*(-162*s13^2 + 
                  125*s13*s23 + 440*s23^2) + s12*s13^3*(90*s13^3 + 
                  197*s13^2*s23 + 87*s13*s23^2 - 110*s23^3) + s12^3*s13*
                 (-63*s13^3 + 120*s13^2*s23 + 154*s13*s23^2 - 110*s23^3) - 
                s12^4*(324*s13^3 + 578*s13^2*s23 + 345*s13*s23^2 + 
                  10*s23^3) + s12^2*s13^2*(117*s13^3 - 110*s13^2*s23 + 
                  190*s13*s23^2 + 570*s23^3))) + p1q^5*s23^3*
             (p2q^2*(-10*s12^6*(9*s13^2 + 8*s13*s23 - s23^2) - 20*s13^4*s23*
                 (45*s13^3 + 43*s13^2*s23 - 6*s13*s23^2 - 4*s23^3) + 
                s12^5*(-306*s13^3 - 49*s13^2*s23 + 50*s13*s23^2 + 90*s23^3) + 
                s12^3*s13*(1035*s13^4 + 398*s13^3*s23 + 55*s13^2*s23^2 + 
                  33*s13*s23^3 - 173*s23^4) + s12*s13^3*(-540*s13^4 - 
                  240*s13^3*s23 + 830*s13^2*s23^2 + 357*s13*s23^3 - 
                  173*s23^4) + s12^4*(801*s13^4 + 246*s13^3*s23 - 623*s13^2*
                   s23^2 + 57*s13*s23^3 + 80*s23^4) + s12^2*s13^2*
                 (108*s13^4 + 1753*s13^3*s23 - 545*s13^2*s23^2 - 1620*s13*
                   s23^3 + 570*s23^4)) + p3q^2*(-180*s12^7*(3*s13 + 5*s23) + 
                4*s12^6*(27*s13^2 - 60*s13*s23 - 215*s23^2) + 10*s13^4*s23^2*
                 (s13^2 + 9*s13*s23 + 8*s23^2) + s12*s13^3*s23*(-80*s13^3 + 
                  50*s13^2*s23 + 57*s13*s23^2 - 173*s23^3) + 
                s12^5*(1035*s13^3 + 1753*s13^2*s23 + 830*s13*s23^2 + 
                  120*s23^3) + s12^3*s13*(-306*s13^4 + 246*s13^3*s23 + 
                  55*s13^2*s23^2 - 1620*s13*s23^3 - 173*s23^4) + 
                s12^4*(801*s13^4 + 398*s13^3*s23 - 545*s13^2*s23^2 + 
                  357*s13*s23^3 + 80*s23^4) + s12^2*s13^2*(-90*s13^4 - 
                  49*s13^3*s23 - 623*s13^2*s23^2 + 33*s13*s23^3 + 
                  570*s23^4)) + p2q*p3q*(-90*s12^7*(3*s13 + 4*s23) + 
                s12^6*(9*s13^2 - 338*s13*s23 - 400*s23^2) + 10*s13^4*s23*
                 (-36*s13^3 - 40*s13^2*s23 + 3*s13*s23^2 + 7*s23^3) + 
                s12^5*(27*s13^3 + 786*s13^2*s23 + 205*s13*s23^2 + 30*s23^3) + 
                s12^3*s13*(27*s13^4 + 2066*s13^3*s23 + 1856*s13^2*s23^2 - 
                  1461*s13*s23^3 - 283*s23^4) + s12*s13^3*(-270*s13^4 - 
                  338*s13^3*s23 + 205*s13^2*s23^2 + 360*s13*s23^3 - 
                  283*s23^4) + 2*s12^4*(1674*s13^4 + 1033*s13^3*s23 - 
                  746*s13^2*s23^2 + 180*s13*s23^3 + 35*s23^4) + s12^2*s13^2*
                 (9*s13^4 + 786*s13^3*s23 - 1492*s13^2*s23^2 - 1461*s13*
                   s23^3 + 1140*s23^4))) - p1q*(p2q + p3q)*
             (p2q^5*s13^3*(90*s12^6*s23*(s13 + s23) - 440*s13^5*s23^2*
                 (s13 + s23) - 15*s12*s13^4*s23*(6*s13^2 + s13*s23 - 
                  5*s23^2) + 3*s12^4*s13*s23*(519*s13^2 + 493*s13*s23 + 
                  88*s23^2) + s12^2*s13^3*s23*(-27*s13^2 + 1061*s13*s23 + 
                  1088*s23^2) + s12^3*s13^2*(-648*s13^3 + 2817*s13^2*s23 + 
                  1988*s13*s23^2 - 811*s23^3) + s12^5*(648*s13^3 + 
                  513*s13^2*s23 + 217*s13*s23^2 + 190*s23^3)) + 
              p3q^5*s12^3*(10*s13^5*s23^2*(9*s13 + 19*s23) - 10*s12^6*s23*
                 (9*s13 + 44*s23) + s12^2*s13^3*s23*(513*s13^2 + 1479*s13*
                   s23 - 811*s23^2) + s12^4*s13*s23*(2817*s13^2 + 
                  1061*s13*s23 + 75*s23^2) + s12*s13^4*s23*(90*s13^2 + 
                  217*s13*s23 + 264*s23^2) - s12^5*(648*s13^3 + 27*s13^2*
                   s23 + 15*s13*s23^2 + 440*s23^3) + s12^3*s13^2*(648*s13^3 + 
                  1557*s13^2*s23 + 1988*s13*s23^2 + 1088*s23^3)) - 
              p2q^4*p3q*s13^2*(90*s12^7*s23*(4*s13 + 3*s23) - s12*s13^4*s23*
                 (27*s13^3 + 1439*s13^2*s23 + 960*s13*s23^2 - 102*s23^3) - 
                10*s13^5*s23*(9*s13^3 - 26*s13^2*s23 + 35*s23^3) + 
                s12^6*(1944*s13^3 + 1080*s13^2*s23 + 391*s13*s23^2 + 
                  210*s23^3) + s12^2*s13^3*s23*(27*s13^3 + 13*s13^2*s23 + 
                  495*s13*s23^2 + 701*s23^3) + s12^3*s13^2*(1296*s13^4 - 
                  4545*s13^3*s23 - 975*s13^2*s23^2 + 1716*s13*s23^3 - 
                  748*s23^4) + 2*s12^5*(-648*s13^4 + 162*s13^3*s23 + 
                  505*s13^2*s23^2 + 342*s13*s23^3 + 50*s23^4) + s12^4*s13*
                 (-1944*s13^4 + 3195*s13^3*s23 - 1798*s13^2*s23^2 - 
                  2667*s13*s23^3 + 237*s23^4)) - p2q^2*p3q^3*s12*(
                90*s12^8*s23*(4*s13 + s23) + 10*s13^6*s23^2*(-27*s13^2 + 
                  15*s13*s23 + 16*s23^2) + s12^7*(648*s13^3 + 108*s13^2*s23 - 
                  563*s13*s23^2 - 170*s23^3) - s12*s13^5*s23*(540*s13^3 - 
                  129*s13^2*s23 + 576*s13*s23^2 + 356*s23^3) + s12^2*s13^4*
                 s23*(-648*s13^3 - 86*s13^2*s23 + 3307*s13*s23^2 + 
                  2102*s23^3) + s12^4*s13^2*(3888*s13^4 - 2430*s13^3*s23 + 
                  2036*s13^2*s23^2 + 881*s13*s23^3 - 160*s23^4) - 
                2*s12^6*(1944*s13^4 + 1557*s13^3*s23 - 777*s13^2*s23^2 - 
                  78*s13*s23^3 + 130*s23^4) + s12^5*s13*(1296*s13^4 + 
                  6570*s13^3*s23 - 1957*s13^2*s23^2 + 365*s13*s23^3 + 
                  469*s23^4) + s12^3*s13^3*(-1944*s13^4 + 4230*s13^3*s23 + 
                  5715*s13^2*s23^2 + 1959*s13*s23^3 + 595*s23^4)) + 
              p2q*p3q^4*s12^2*(90*s12^8*s23 + s12^7*(27*s13 - 260*s23)*s23 - 
                10*s13^5*s23^2*(27*s13^2 + 21*s13*s23 + 10*s23^2) + 
                s12^6*s13*(-1296*s13^2 - 27*s13*s23 + 1439*s23^2) - 
                s12*s13^4*s23*(360*s13^3 + 391*s13^2*s23 + 684*s13*s23^2 + 
                  237*s23^3) + s12^2*s13^3*s23*(-1080*s13^3 - 1010*s13^2*
                   s23 + 2667*s13*s23^2 + 748*s23^3) + 3*s12^4*s13*
                 (432*s13^4 - 1065*s13^3*s23 + 325*s13^2*s23^2 - 165*s13*
                   s23^3 - 34*s23^4) + s12^5*(1944*s13^4 + 4545*s13^3*s23 - 
                  13*s13^2*s23^2 + 960*s13*s23^3 + 350*s23^4) - s12^3*s13^2*
                 (1944*s13^4 + 324*s13^3*s23 - 1798*s13^2*s23^2 + 
                  1716*s13*s23^3 + 701*s23^4)) - p2q^3*p3q^2*s13*(
                -270*s12^8*s23*(2*s13 + s23) + 10*s13^6*s23^2*(9*s13^2 - 
                  17*s13*s23 - 26*s23^2) + s12^2*s13^4*s23*(108*s13^3 + 
                  1554*s13^2*s23 + 365*s13*s23^2 - 160*s23^3) - 
                3*s12^7*(648*s13^3 + 216*s13^2*s23 - 43*s13*s23^2 - 
                  50*s23^3) + s12*s13^5*s23*(360*s13^3 - 563*s13^2*s23 + 
                  156*s13*s23^2 + 469*s23^3) + s12^5*s13*(1296*s13^4 - 
                  2430*s13^3*s23 + 5715*s13^2*s23^2 + 3307*s13*s23^3 - 
                  356*s23^4) + 2*s12^6*(1944*s13^4 + 2115*s13^3*s23 - 
                  43*s13^2*s23^2 - 288*s13*s23^3 + 80*s23^4) + s12^3*s13^3*
                 (648*s13^4 - 3114*s13^3*s23 - 1957*s13^2*s23^2 + 
                  881*s13*s23^3 + 595*s23^4) + s12^4*s13^2*(-3888*s13^4 + 
                  6570*s13^3*s23 + 2036*s13^2*s23^2 + 1959*s13*s23^3 + 
                  2102*s23^4))) + p1q^4*s23^2*(p2q^3*(s12^6*(54*s13^3 - 
                  119*s13^2*s23 - 100*s13*s23^2 - 80*s23^3) + 10*s13^5*s23*
                 (90*s13^3 + 84*s13^2*s23 - 47*s13*s23^2 - 41*s23^3) + 
                s12^2*s13^3*(18*s13^4 - 2411*s13^3*s23 + 704*s13^2*s23^2 + 
                  1350*s13*s23^3 - 1783*s23^4) - 3*s12^4*s13*(840*s13^4 + 
                  237*s13^3*s23 - 108*s13^2*s23^2 + 271*s13*s23^3 + 
                  19*s23^4) + 15*s12*s13^4*(24*s13^4 + 16*s13^3*s23 - 
                  76*s13^2*s23^2 - 23*s13*s23^3 + 45*s23^4) - 
                s12^5*(252*s13^4 + 952*s13^3*s23 + 356*s13^2*s23^2 + 
                  87*s13*s23^3 + 80*s23^4) - s12^3*s13^2*(1098*s13^4 + 
                  3127*s13^3*s23 + 1409*s13^2*s23^2 - 931*s13*s23^3 + 
                  103*s23^4)) + p3q^3*(-80*s13^5*s23^3*(s13 + s23) + 
                180*s12^8*(2*s13 + 5*s23) - s12*s13^4*s23^2*(100*s13^2 + 
                  87*s13*s23 + 57*s23^2) + 6*s12^7*(3*s13^2 + 40*s13*s23 + 
                  140*s23^2) - s12^2*s13^3*s23*(119*s13^3 + 356*s13^2*s23 + 
                  813*s13*s23^2 + 103*s23^3) - s12^6*(1098*s13^3 + 
                  2411*s13^2*s23 + 1140*s13*s23^2 + 470*s23^3) + 
                s12^3*s13^2*(54*s13^4 - 952*s13^3*s23 + 324*s13^2*s23^2 + 
                  931*s13*s23^3 - 1783*s23^4) - s12^5*(2520*s13^4 + 
                  3127*s13^3*s23 - 704*s13^2*s23^2 + 345*s13*s23^3 + 
                  410*s23^4) + s12^4*s13*(-252*s13^4 - 711*s13^3*s23 - 
                  1409*s13^2*s23^2 + 1350*s13*s23^3 + 675*s23^4)) - 
              p2q^2*p3q*(10*s12^7*(18*s13^2 + 11*s13*s23 - 6*s23^2) + 
                s12^6*(-801*s13^3 - 28*s13^2*s23 + 433*s13*s23^2 + 
                  340*s23^3) - 10*s13^4*s23*(54*s13^4 + 81*s13^3*s23 - 
                  19*s13^2*s23^2 - 38*s13*s23^3 + 8*s23^4) + 
                s12^5*(4140*s13^4 + 4255*s13^3*s23 - 1921*s13^2*s23^2 - 
                  192*s13*s23^3 + 320*s23^4) + s12^2*s13^2*(369*s13^5 + 
                  1580*s13^4*s23 - 3206*s13^3*s23^2 - 552*s13^2*s23^3 + 
                  3100*s13*s23^4 - 570*s23^5) + s12^4*(6210*s13^5 + 
                  6761*s13^4*s23 + 2292*s13^3*s23^2 + 855*s13^2*s23^3 - 
                  492*s13*s23^4 - 80*s23^5) + s12*s13^3*(-270*s13^5 + 
                  158*s13^4*s23 + 1140*s13^3*s23^2 + 84*s13^2*s23^3 - 
                  945*s13*s23^4 + 173*s23^5) + s12^3*s13*(270*s13^5 + 
                  8068*s13^4*s23 + 6491*s13^3*s23^2 - 3389*s13^2*s23^3 + 
                  1321*s13*s23^4 + 173*s23^5)) + p2q*p3q^2*(270*s12^8*
                 (s13 + 2*s23) + s12^7*(-369*s13^2 - 158*s13*s23 + 
                  810*s23^2) + 20*s13^4*s23^2*(3*s13^3 - 17*s13^2*s23 - 
                  16*s13*s23^2 + 4*s23^3) - 10*s12^6*(27*s13^3 + 158*s13^2*
                   s23 + 114*s13*s23^2 + 19*s23^3) + s12*s13^3*s23*
                 (-110*s13^4 - 433*s13^3*s23 + 192*s13^2*s23^2 + 492*s13*
                   s23^3 - 173*s23^4) - 2*s12^5*(3105*s13^4 + 4034*s13^3*
                   s23 - 1603*s13^2*s23^2 + 42*s13*s23^3 + 190*s23^4) + 
                s12^3*s13*(801*s13^5 - 4255*s13^4*s23 - 2292*s13^3*s23^2 + 
                  3389*s13^2*s23^3 - 3100*s13*s23^4 - 173*s23^5) + 
                s12^4*(-4140*s13^5 - 6761*s13^4*s23 - 6491*s13^3*s23^2 + 
                  552*s13^2*s23^3 + 945*s13*s23^4 + 80*s23^5) + s12^2*s13^2*
                 (-180*s13^5 + 28*s13^4*s23 + 1921*s13^3*s23^2 - 855*s13^2*
                   s23^3 - 1321*s13*s23^4 + 570*s23^5))) + 
            p1q^2*(p2q^5*s13^2*(100*s12^6*s23^2*(s13 + s23) + s12^3*s13^2*s23*
                 (-3015*s13^3 + 3213*s13^2*s23 + 3374*s13*s23^2 - 
                  1882*s23^3) + 10*s13^5*s23*(9*s13^3 + 8*s13^2*s23 - 
                  87*s13*s23^2 - 86*s23^3) + s12^2*s13^3*s23*(-387*s13^3 + 
                  22*s13^2*s23 + 781*s13*s23^2 + 372*s23^3) + s12*s13^4*s23*
                 (27*s13^3 - 443*s13^2*s23 + 90*s13*s23^2 + 560*s23^3) + 
                s12^5*(-648*s13^4 + 234*s13^3*s23 + 614*s13^2*s23^2 + 
                  257*s13*s23^3 + 30*s23^4) + s12^4*s13*(-648*s13^4 - 
                  189*s13^3*s23 + 104*s13^2*s23^2 + 384*s13*s23^3 + 
                  550*s23^4)) + p3q^5*s12^2*(90*s12^8*s23 + 10*s13^5*s23^3*
                 (10*s13 + 3*s23) + s12^7*s23*(27*s13 + 80*s23) + 
                2*s12^2*s13^3*s23^2*(307*s13^2 + 192*s13*s23 - 941*s23^2) + 
                s12*s13^4*s23^2*(100*s13^2 + 257*s13*s23 + 550*s23^2) - 
                s12^6*s23*(387*s13^2 + 443*s13*s23 + 870*s23^2) + 
                2*s12^3*s13^2*s23*(117*s13^3 + 52*s13^2*s23 + 1687*s13*
                   s23^2 + 186*s23^3) + s12^5*(-648*s13^4 - 3015*s13^3*s23 + 
                  22*s13^2*s23^2 + 90*s13*s23^3 - 860*s23^4) + s12^4*s13*
                 (-648*s13^4 - 189*s13^3*s23 + 3213*s13^2*s23^2 + 
                  781*s13*s23^3 + 560*s23^4)) + p2q^4*p3q*s13*(10*s12^7*s23*
                 (-9*s13^2 + 6*s13*s23 + 16*s23^2) + s12*s13^4*s23*
                 (-243*s13^4 - 595*s13^3*s23 + 1966*s13^2*s23^2 + 
                  1450*s13*s23^3 - 458*s23^4) + s12^6*(1296*s13^4 + 
                  2187*s13^3*s23 + 1085*s13^2*s23^2 - 276*s13*s23^3 - 
                  20*s23^4) + 10*s13^5*s23*(9*s13^4 + 43*s13^3*s23 - 
                  102*s13^2*s23^2 - 85*s13*s23^3 + 51*s23^4) + s12^2*s13^3*
                 s23*(-378*s13^4 + 644*s13^3*s23 - 1251*s13^2*s23^2 - 
                  1079*s13*s23^3 + 329*s23^4) + 3*s12^3*s13^2*s23*
                 (-2499*s13^4 + 1916*s13^3*s23 + 2965*s13^2*s23^2 - 
                  394*s13*s23^3 + 378*s23^4) + s12^4*s13*(-1944*s13^5 + 
                  2151*s13^4*s23 - 503*s13^3*s23^2 + 5788*s13^2*s23^3 + 
                  3053*s13*s23^4 - 313*s23^5) + s12^5*(-648*s13^5 + 
                  540*s13^4*s23 + 5677*s13^3*s23^2 + 3018*s13^2*s23^3 - 
                  310*s13*s23^4 + 70*s23^5)) + p2q*p3q^4*s12*(90*s12^9*s23 + 
                s12^8*s23*(-243*s13 + 430*s23) + 10*s13^5*s23^3*(16*s13^2 - 
                  2*s13*s23 + 7*s23^2) - s12^7*s23*(378*s13^2 + 595*s13*s23 + 
                  1020*s23^2) + s12*s13^4*s23^2*(60*s13^3 - 276*s13^2*s23 - 
                  310*s13*s23^2 - 313*s23^3) + s12^6*(-1944*s13^4 - 
                  7497*s13^3*s23 + 644*s13^2*s23^2 + 1966*s13*s23^3 - 
                  850*s23^4) + s12^3*s13^2*s23*(2187*s13^4 + 5677*s13^3*s23 + 
                  5788*s13^2*s23^2 - 1182*s13*s23^3 + 329*s23^4) + 
                s12^2*s13^3*s23*(-90*s13^4 + 1085*s13^3*s23 + 3018*s13^2*
                   s23^2 + 3053*s13*s23^3 + 1134*s23^4) + s12^4*s13*
                 (1296*s13^5 + 540*s13^4*s23 - 503*s13^3*s23^2 + 8895*s13^2*
                   s23^3 - 1079*s13*s23^4 - 458*s23^5) + s12^5*(-648*s13^5 + 
                  2151*s13^4*s23 + 5748*s13^3*s23^2 - 1251*s13^2*s23^3 + 
                  1450*s13*s23^4 + 510*s23^5)) + p2q^3*p3q^2*(-10*s12^8*s23*
                 (-27*s13^2 + 42*s13*s23 + 26*s23^2) + 10*s13^6*s23^2*
                 (26*s13^3 - 59*s13^2*s23 - 9*s13*s23^2 + 76*s23^3) + 
                s12*s13^5*s23*(-270*s13^4 - 959*s13^3*s23 + 1731*s13^2*
                   s23^2 + 553*s13*s23^3 - 707*s23^4) + s12^7*(-648*s13^4 - 
                  2547*s13^3*s23 + 774*s13^2*s23^2 + 609*s13*s23^3 - 
                  10*s23^4) + s12^3*s13^3*s23*(-6939*s13^4 + 3300*s13^3*s23 + 
                  9953*s13^2*s23^2 + 33*s13*s23^3 + 412*s23^4) + 
                s12^2*s13^4*s23*(279*s13^4 + 913*s13^3*s23 - 2493*s13^2*
                   s23^2 - 122*s13*s23^3 + 1193*s23^4) + s12^5*s13*
                 (1944*s13^5 + 1656*s13^4*s23 + 7397*s13^3*s23^2 + 
                  6635*s13^2*s23^3 + 908*s13*s23^4 - 179*s23^5) + 
                s12^6*(3240*s13^5 + 6939*s13^4*s23 + 1597*s13^3*s23^2 - 
                  585*s13^2*s23^3 - 150*s13*s23^4 + 250*s23^5) + 
                s12^4*s13^2*(-1944*s13^5 + 7092*s13^4*s23 + 2006*s13^3*
                   s23^2 + 7092*s13^2*s23^3 + 1638*s13*s23^4 + 551*s23^5)) + 
              p2q^2*p3q^3*(10*s12^9*s23*(-27*s13 + 26*s23) + s12^8*s23*
                 (279*s13^2 - 959*s13*s23 - 590*s23^2) - 10*s13^6*s23^3*
                 (26*s13^2 + s13*s23 - 25*s23^2) - s12*s13^5*s23^2*
                 (420*s13^3 - 609*s13^2*s23 + 150*s13*s23^2 + 179*s23^3) + 
                s12^7*(-1944*s13^4 - 6939*s13^3*s23 + 913*s13^2*s23^2 + 
                  1731*s13*s23^3 - 90*s23^4) + s12^3*s13^3*s23*(-2547*s13^4 + 
                  1597*s13^3*s23 + 6635*s13^2*s23^2 + 1638*s13*s23^3 + 
                  412*s23^4) + s12^2*s13^4*s23*(270*s13^4 + 774*s13^3*s23 - 
                  585*s13^2*s23^2 + 908*s13*s23^3 + 551*s23^4) + 
                s12^5*s13*(3240*s13^5 + 1656*s13^4*s23 + 2006*s13^3*s23^2 + 
                  9953*s13^2*s23^3 - 122*s13*s23^4 - 707*s23^5) + 
                s12^6*(1944*s13^5 + 7092*s13^4*s23 + 3300*s13^3*s23^2 - 
                  2493*s13^2*s23^3 + 553*s13*s23^4 + 760*s23^5) + 
                s12^4*s13^2*(-648*s13^5 + 6939*s13^4*s23 + 7397*s13^3*s23^2 + 
                  7092*s13^2*s23^3 + 33*s13*s23^4 + 1193*s23^5))) + 
            p1q^3*s23*(p3q^4*s12*(-90*s12^8*(s13 + 5*s23) + 10*s13^5*s23^3*
                 (7*s13 + 15*s23) + s12*s13^4*s23^2*(80*s13^2 - 133*s13*s23 - 
                  336*s23^2) - s12^7*(27*s13^2 + 125*s13*s23 + 410*s23^2) + 
                s12^6*(387*s13^3 + 1560*s13^2*s23 + 945*s13*s23^2 + 
                  880*s23^3) + s12^2*s13^3*s23*(415*s13^3 + 413*s13^2*s23 + 
                  1348*s13*s23^2 + 1410*s23^3) + s12^4*s13*(1323*s13^4 + 
                  791*s13^3*s23 + 57*s13^2*s23^2 - 407*s13*s23^3 - 
                  960*s23^4) + s12^5*(2367*s13^4 + 4913*s13^3*s23 - 
                  362*s13^2*s23^2 + 20*s13*s23^3 + 840*s23^4) + s12^3*s13^2*
                 (252*s13^4 + 1740*s13^3*s23 + 1107*s13^2*s23^2 - 
                  2663*s13*s23^3 + 1542*s23^4)) + p2q^4*s13*(
                s12^6*(252*s13^3 + 415*s13^2*s23 + 80*s13*s23^2 + 70*s23^3) + 
                10*s13^5*s23*(-45*s13^3 - 41*s13^2*s23 + 88*s13*s23^2 + 
                  84*s23^3) + s12^4*s13*(2367*s13^4 + 791*s13^3*s23 + 
                  1107*s13^2*s23^2 + 1348*s13*s23^3 - 336*s23^4) + 
                s12^5*(1323*s13^4 + 1740*s13^3*s23 + 413*s13^2*s23^2 - 
                  133*s13*s23^3 + 150*s23^4) - 5*s12*s13^4*(18*s13^4 + 
                  25*s13^3*s23 - 189*s13^2*s23^2 - 4*s13*s23^3 + 192*s23^4) + 
                s12^3*s13^2*(387*s13^4 + 4913*s13^3*s23 + 57*s13^2*s23^2 - 
                  2663*s13*s23^3 + 1410*s23^4) + s12^2*s13^3*(-27*s13^4 + 
                  1560*s13^3*s23 - 362*s13^2*s23^2 - 407*s13*s23^3 + 
                  1542*s23^4)) + p2q^3*p3q*(s12^7*(-432*s13^3 - 191*s13^2*
                   s23 + 160*s13*s23^2 + 250*s23^3) - 10*s13^5*s23*
                 (36*s13^4 + 83*s13^3*s23 - 67*s13^2*s23^2 - 81*s13*s23^3 + 
                  33*s23^4) + s12^6*(1629*s13^4 + 1994*s13^3*s23 - 
                  106*s13^2*s23^2 - 179*s13*s23^3 + 170*s23^4) + 
                s12^2*s13^3*(243*s13^5 + 1282*s13^4*s23 - 2602*s13^3*s23^2 + 
                  1729*s13^2*s23^3 + 3137*s13*s23^4 - 1213*s23^5) + 
                s12^3*s13^2*(306*s13^5 + 11395*s13^4*s23 + 4071*s13^3*s23^2 - 
                  7025*s13^2*s23^3 + 1870*s13*s23^4 - 276*s23^5) - 
                2*s12*s13^4*(45*s13^5 - 271*s13^4*s23 - 690*s13^3*s23^2 + 
                  552*s13^2*s23^3 + 705*s13*s23^4 - 251*s23^5) + 
                s12^5*(3456*s13^5 + 4634*s13^4*s23 - 605*s13^3*s23^2 + 
                  740*s13^2*s23^3 + 154*s13*s23^4 - 80*s23^5) + s12^4*s13*
                 (5256*s13^5 + 5040*s13^4*s23 + 3248*s13^3*s23^2 - 
                  2131*s13^2*s23^3 - 639*s13*s23^4 + 23*s23^5)) + 
              p2q^2*p3q^2*(10*s12^8*(27*s13^2 + 46*s13*s23 - 24*s23^2) + 
                10*s13^5*s23^2*(-24*s13^3 + 58*s13^2*s23 + 41*s13*s23^2 - 
                  41*s23^3) + s12^7*(-513*s13^3 - 298*s13^2*s23 + 
                  1009*s13*s23^2 + 580*s23^3) + s12^6*(4266*s13^4 + 
                  8466*s13^3*s23 - 2426*s13^2*s23^2 - 851*s13*s23^3 + 
                  410*s23^4) + s12*s13^4*s23*(460*s13^4 + 1009*s13^3*s23 - 
                  851*s13^2*s23^2 - 455*s13*s23^3 + 525*s23^4) + 
                s12^2*s13^3*(270*s13^5 - 298*s13^4*s23 - 2426*s13^3*s23^2 + 
                  1911*s13^2*s23^3 + 752*s13*s23^4 - 1489*s23^5) + 
                s12^3*s13^2*(-513*s13^5 + 8466*s13^4*s23 + 3770*s13^3*s23^2 - 
                  5753*s13^2*s23^3 + 2342*s13*s23^4 - 1489*s23^5) + 
                s12^5*(4266*s13^5 + 6864*s13^4*s23 + 3770*s13^3*s23^2 + 
                  1911*s13^2*s23^3 - 455*s13*s23^4 - 410*s23^5) + 
                s12^4*s13*(4266*s13^5 + 6864*s13^4*s23 + 6298*s13^3*s23^2 - 
                  5753*s13^2*s23^3 + 752*s13*s23^4 + 525*s23^5)) + 
              p2q*p3q^3*(-90*s12^9*(s13 + 4*s23) + s12^8*(243*s13^2 + 
                  542*s13*s23 - 830*s23^2) + 10*s13^5*s23^3*(25*s13^2 + 
                  17*s13*s23 - 8*s23^2) + s12*s13^4*s23^2*(160*s13^3 - 
                  179*s13^2*s23 + 154*s13*s23^2 + 23*s23^3) + 2*s12^7*
                 (153*s13^3 + 641*s13^2*s23 + 690*s13*s23^2 + 335*s23^3) - 
                s12^2*s13^3*s23*(191*s13^4 + 106*s13^3*s23 - 740*s13^2*
                   s23^2 + 639*s13*s23^3 + 276*s23^4) + s12^6*(5256*s13^4 + 
                  11395*s13^3*s23 - 2602*s13^2*s23^2 - 1104*s13*s23^3 + 
                  810*s23^4) + s12^5*(3456*s13^5 + 5040*s13^4*s23 + 
                  4071*s13^3*s23^2 + 1729*s13^2*s23^3 - 1410*s13*s23^4 - 
                  330*s23^5) + s12^4*s13*(1629*s13^5 + 4634*s13^4*s23 + 
                  3248*s13^3*s23^2 - 7025*s13^2*s23^3 + 3137*s13*s23^4 + 
                  502*s23^5) - s12^3*s13^2*(432*s13^5 - 1994*s13^4*s23 + 
                  605*s13^3*s23^2 + 2131*s13^2*s23^3 - 1870*s13*s23^4 + 
                  1213*s23^5)))))/(18*ep*p1q*(p2q + p3q)*s12^3*s13^3*s23^2*
           (p1q^5*s23^3*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))) + 
         (ep*(9*p1q^6*s23^5*(s12 + s23)^2*(s13 + s23)^2*(5*s12^6 + 
              4*s12^2*s13^3*(s13 + s23) + 4*s12^3*s13*s23*(s13 + s23) + 
              5*s13^4*(s13 + s23)^2 + s12^5*(9*s13 + 10*s23) + 
              s12*s13^3*(9*s13^2 + 13*s13*s23 + 4*s23^2) + s12^4*(4*s13^2 + 
                13*s13*s23 + 5*s23^2)) + 9*(p2q + p3q)*(s12 - s13)*
             (-(p3q*s12) + p2q*s13)^3*s23^2*(5*s12^6*(s13 + s23) + 
              5*s13^3*s23*(s13 + s23)^3 - s12^3*(s13 + s23)^2*(2*s13^2 + 
                3*s13*s23 - 5*s23^2) + s12^2*s13*(s13 + s23)^2*(4*s13^2 - 
                3*s13*s23 - s23^2) + s12*s13^2*(s13 + s23)^2*(5*s13^2 + 
                9*s13*s23 - s23^2) + s12^5*(4*s13^2 + 19*s13*s23 + 
                15*s23^2) + s12^4*(-2*s13^3 + 5*s13^2*s23 + 22*s13*s23^2 + 
                15*s23^3))*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^5*s23^2*(s12 + s23)*(s13 + s23)*(p3q*(-10*s13^4*s23^4*
                 (s13 + s23)^3 + 45*s12^8*s23^2*(3*s13 + 4*s23) + 
                5*s12*s13^3*s23^3*(s13 + s23)^2*(5*s13^2 + 2*s13*s23 - 
                  12*s23^2) + s12^7*(18*s13^4 + 9*s13^3*s23 + 139*s13^2*
                   s23^2 + 619*s13*s23^3 + 530*s23^4) + s12^2*s13^2*s23^2*
                 (31*s13^5 - 12*s13^4*s23 - 101*s13^3*s23^2 - 55*s13^2*
                   s23^3 - 5*s13*s23^4 - 8*s23^5) + 3*s12^6*(18*s13^5 - 
                  12*s13^4*s23 - 130*s13^3*s23^2 + 5*s13^2*s23^3 + 
                  269*s13*s23^4 + 170*s23^5) + s12^3*s13*s23*(9*s13^6 - 
                  237*s13^5*s23 - 935*s13^4*s23^2 - 1398*s13^3*s23^3 - 
                  776*s13^2*s23^4 - 167*s13*s23^5 - 60*s23^6) + 
                s12^5*(54*s13^6 - 90*s13^5*s23 - 1054*s13^4*s23^2 - 
                  1574*s13^3*s23^3 - 578*s13^2*s23^4 + 237*s13*s23^5 + 
                  150*s23^6) + s12^4*(18*s13^7 - 36*s13^6*s23 - 928*s13^5*
                   s23^2 - 2488*s13^4*s23^3 - 2046*s13^3*s23^4 - 613*s13^2*
                   s23^5 - 146*s13*s23^6 - 10*s23^7)) + 
              p2q*(10*s13^4*(18*s13 - s23)*s23^3*(s13 + s23)^3 + 
                s12*s13^3*s23^2*(s13 + s23)^2*(135*s13^3 + 349*s13^2*s23 - 
                  26*s13*s23^2 - 60*s23^3) + s12^7*(18*s13^4 + 9*s13^3*s23 + 
                  31*s13^2*s23^2 + 25*s13*s23^3 - 10*s23^4) + 3*s12^6*
                 (18*s13^5 - 12*s13^4*s23 - 79*s13^3*s23^2 - 4*s13^2*s23^3 + 
                  20*s13*s23^4 - 10*s23^5) + s12^2*s13^2*s23^2*(139*s13^5 + 
                  15*s13^4*s23 - 578*s13^3*s23^2 - 613*s13^2*s23^3 - 
                  167*s13*s23^4 - 8*s23^5) + s12^3*s13*s23*(9*s13^6 - 
                  390*s13^5*s23 - 1574*s13^4*s23^2 - 2046*s13^3*s23^3 - 
                  776*s13^2*s23^4 - 5*s13*s23^5 - 60*s23^6) + 
                s12^5*(54*s13^6 - 90*s13^5*s23 - 928*s13^4*s23^2 - 
                  935*s13^3*s23^3 - 101*s13^2*s23^4 - 15*s13*s23^5 - 
                  30*s23^6) + s12^4*(18*s13^7 - 36*s13^6*s23 - 1054*s13^5*
                   s23^2 - 2488*s13^4*s23^3 - 1398*s13^3*s23^4 - 55*s13^2*
                   s23^5 - 110*s13*s23^6 - 10*s23^7))) - 
            p1q*(p3q^5*s12^3*(5*s13^4*s23^4*(s13 + s23)^3*(9*s13 + 20*s23) + 
                3*s12*s13^3*s23^3*(s13 + s23)^2*(30*s13^3 + 97*s13^2*s23 + 
                  36*s13*s23^2 - 46*s23^3) - s12^8*(18*s13^4 + 9*s13^3*s23 + 
                  31*s13^2*s23^2 + 205*s13*s23^3 + 170*s23^4) - 
                2*s12^7*(27*s13^5 + 54*s13^4*s23 - 78*s13^3*s23^2 - 
                  13*s13^2*s23^3 + 407*s13*s23^4 + 340*s23^5) + 
                s12^6*(-54*s13^6 - 216*s13^5*s23 + 136*s13^4*s23^2 + 
                  1019*s13^3*s23^3 + 635*s13^2*s23^4 - 1026*s13*s23^5 - 
                  1020*s23^6) + s12^2*s13^2*s23^2*(45*s13^6 + 241*s13^5*s23 + 
                  348*s13^4*s23^2 - 316*s13^3*s23^3 - 969*s13^2*s23^4 - 
                  493*s13*s23^5 + 8*s23^6) + s12^3*s13*s23^2*(-4*s13^6 + 
                  105*s13^5*s23 - 44*s13^4*s23^2 - 257*s13^3*s23^3 + 
                  25*s13^2*s23^4 + 355*s13*s23^5 + 186*s23^6) + 
                s12^5*(-18*s13^7 - 144*s13^6*s23 + 10*s13^5*s23^2 + 
                  1346*s13^4*s23^3 + 2171*s13^3*s23^4 + 1407*s13^2*s23^5 - 
                  244*s13*s23^6 - 680*s23^7) + s12^4*s23*(-27*s13^7 + 
                  12*s13^6*s23 + 468*s13^5*s23^2 + 1564*s13^4*s23^3 + 
                  1697*s13^3*s23^4 + 1176*s13^2*s23^5 + 359*s13*s23^6 - 
                  170*s23^7)) + p2q^5*s13^3*(s13 + s23)*(45*s12^8*s23^2*
                 (s13 + s23) - 170*s13^4*s23^4*(s13 + s23)^3 - s12*s13^3*
                 s23^3*(s13 + s23)^2*(205*s13^2 + 199*s13*s23 - 186*s23^2) + 
                s12^7*(-18*s13^4 - 9*s13^3*s23 + 5*s13^2*s23^2 + 236*s13*
                   s23^3 + 235*s23^4) + s12^2*s13^2*s23^2*(-31*s13^5 + 
                  57*s13^4*s23 + 578*s13^3*s23^2 + 829*s13^2*s23^3 + 
                  347*s13*s23^4 + 8*s23^5) + s12^6*(-54*s13^5 - 90*s13^4*
                   s23 + 102*s13^3*s23^2 + 3*s13^2*s23^3 + 345*s13*s23^4 + 
                  435*s23^5) + s12^3*s13*s23*(-9*s13^6 + 165*s13^5*s23 + 
                  854*s13^4*s23^2 + 1317*s13^3*s23^3 + 380*s13^2*s23^4 - 
                  355*s13*s23^5 - 138*s23^6) + s12^5*(-54*s13^6 - 162*s13^5*
                   s23 + 172*s13^4*s23^2 + 296*s13^3*s23^3 - 340*s13^2*
                   s23^4 + 24*s13*s23^5 + 345*s23^6) + s12^4*(-18*s13^7 - 
                  90*s13^6*s23 + 226*s13^5*s23^2 + 1120*s13^4*s23^3 + 
                  444*s13^3*s23^4 - 701*s13^2*s23^5 - 268*s13*s23^6 + 
                  100*s23^7)) + p2q*p3q^4*s12^2*(45*s12^10*s23^2*
                 (s13 + s23) - 5*s13^4*s23^4*(s13 + s23)^3*(27*s13^2 + 
                  24*s13*s23 + 11*s23^2) - s12*s13^3*s23^3*(s13 + s23)^2*
                 (315*s13^4 + 613*s13^3*s23 + 75*s13^2*s23^2 - 217*s13*
                   s23^3 - 84*s23^4) + s12^9*(-18*s13^4 - 9*s13^3*s23 + 
                  5*s13^2*s23^2 + 11*s13*s23^3 + 10*s23^4) + 
                s12^8*(18*s13^5 - 54*s13^4*s23 + 226*s13^3*s23^2 + 
                  643*s13^2*s23^3 + 125*s13*s23^4 - 285*s23^5) + 
                s12^7*(162*s13^6 + 252*s13^5*s23 - 443*s13^4*s23^2 + 
                  485*s13^3*s23^3 + 2526*s13^2*s23^4 + 1393*s13*s23^5 - 
                  340*s23^6) + s12^3*s13*s23^2*(7*s13^7 - 334*s13^6*s23 - 
                  518*s13^5*s23^2 - 771*s13^4*s23^3 - 1224*s13^3*s23^4 - 
                  1105*s13^2*s23^5 - 527*s13*s23^6 - 132*s23^7) + 
                s12^2*s13^2*s23^2*(-180*s13^7 - 734*s13^6*s23 - 709*s13^5*
                   s23^2 + 888*s13^4*s23^3 + 2132*s13^3*s23^4 + 1266*s13^2*
                   s23^5 + 169*s13*s23^6 - 8*s23^7) + s12^6*(198*s13^7 + 
                  720*s13^6*s23 - 354*s13^5*s23^2 - 2431*s13^4*s23^3 - 
                  935*s13^3*s23^4 + 3052*s13^2*s23^5 + 2732*s13*s23^6 + 
                  115*s23^7) + s12^4*s23*(90*s13^8 - 151*s13^7*s23 - 
                  1868*s13^6*s23^2 - 5954*s13^5*s23^3 - 6455*s13^4*s23^4 - 
                  3612*s13^3*s23^5 - 1121*s13^2*s23^6 + 238*s13*s23^7 + 
                  125*s23^8) + s12^5*(72*s13^8 + 513*s13^7*s23 + 17*s13^6*
                   s23^2 - 4412*s13^5*s23^3 - 6469*s13^4*s23^4 - 3607*s13^3*
                   s23^5 + 562*s13^2*s23^6 + 1868*s13*s23^7 + 330*s23^8)) + 
              p2q^2*p3q^3*s12*(5*s13^5*s23^4*(s13 + s23)^3*(27*s13^2 - 
                  12*s13*s23 - 14*s23^2) - 45*s12^10*s23^2*(4*s13^2 + 
                  5*s13*s23 + s23^2) + s12*s13^4*s23^3*(s13 + s23)^2*
                 (405*s13^4 + 273*s13^3*s23 - 524*s13^2*s23^2 - 264*s13*
                   s23^3 - 7*s23^4) + s12^9*(72*s13^5 + 54*s13^4*s23 - 
                  11*s13^3*s23^2 - 274*s13^2*s23^3 - 321*s13*s23^4 - 
                  55*s23^5) + s12^8*(108*s13^6 + 360*s13^5*s23 - 486*s13^4*
                   s23^2 - 795*s13^3*s23^3 + 247*s13^2*s23^4 + 694*s13*
                   s23^5 + 230*s23^6) + s12^3*s13^2*s23^2*(3*s13^7 + 
                  586*s13^6*s23 + 2066*s13^5*s23^2 + 3565*s13^4*s23^3 + 
                  3383*s13^3*s23^4 + 1642*s13^2*s23^5 + 341*s13*s23^6 + 
                  40*s23^7) + s12^2*s13^3*s23^2*(270*s13^7 + 756*s13^6*s23 + 
                  159*s13^5*s23^2 - 939*s13^4*s23^3 - 665*s13^3*s23^4 + 
                  103*s13^2*s23^5 + 256*s13*s23^6 + 100*s23^7) + 
                s12^7*(-108*s13^7 + 108*s13^6*s23 + 455*s13^5*s23^2 - 
                  1980*s13^4*s23^3 - 3216*s13^3*s23^4 - 346*s13^2*s23^5 + 
                  1556*s13*s23^6 + 570*s23^7) + s12^4*s13*s23*(-108*s13^8 + 
                  430*s13^7*s23 + 2869*s13^6*s23^2 + 7551*s13^5*s23^3 + 
                  7242*s13^4*s23^4 + 2436*s13^3*s23^5 - 130*s13^2*s23^6 - 
                  501*s13*s23^7 - 202*s23^8) + s12^6*(-252*s13^8 - 
                  756*s13^7*s23 + 218*s13^6*s23^2 + 85*s13^5*s23^3 - 
                  2861*s13^4*s23^4 - 4563*s13^3*s23^5 - 2210*s13^2*s23^6 + 
                  669*s13*s23^7 + 455*s23^8) - s12^5*(108*s13^9 + 666*s13^8*
                   s23 + 195*s13^7*s23^2 - 4393*s13^6*s23^3 - 4298*s13^5*
                   s23^4 + 284*s13^4*s23^5 + 2502*s13^3*s23^6 + 2064*s13^2*
                   s23^7 + 299*s13*s23^8 - 125*s23^9)) + p2q^3*p3q^2*s13*(
                -5*s13^5*(9*s13 - 25*s23)*s23^4*(s13 + s23)^4 + 135*s12^10*
                 s23^2*(2*s13^2 + 3*s13*s23 + s23^2) - s12*s13^4*s23^3*
                 (s13 + s23)^3*(225*s13^3 - 354*s13^2*s23 - 307*s13*s23^2 + 
                  202*s23^3) - s12^2*s13^3*s23^2*(s13 + s23)^2*(180*s13^5 - 
                  86*s13^4*s23 - 255*s13^3*s23^2 + 942*s13^2*s23^3 + 
                  581*s13*s23^4 - 40*s23^5) + 3*s12^9*(-36*s13^5 - 
                  36*s13^4*s23 + s13^3*s23^2 + 252*s13^2*s23^3 + 361*s13*
                   s23^4 + 115*s23^5) + s12^8*(-252*s13^6 - 666*s13^5*s23 + 
                  430*s13^4*s23^2 + 586*s13^3*s23^3 + 159*s13^2*s23^4 + 
                  427*s13*s23^5 + 155*s23^6) - s12^3*s13^2*s23^2*(11*s13^7 + 
                  795*s13^6*s23 + 3216*s13^5*s23^2 + 4563*s13^4*s23^3 + 
                  2502*s13^3*s23^4 + 130*s13^2*s23^5 - 341*s13*s23^6 - 
                  100*s23^7) - s12^7*(108*s13^7 + 756*s13^6*s23 + 195*s13^5*
                   s23^2 - 2869*s13^4*s23^3 - 2066*s13^3*s23^4 + 939*s13^2*
                   s23^5 + 1039*s13*s23^6 + 255*s23^7) + s12^6*(108*s13^8 + 
                  108*s13^7*s23 + 218*s13^6*s23^2 + 4393*s13^5*s23^3 + 
                  7551*s13^4*s23^4 + 3565*s13^3*s23^5 - 665*s13^2*s23^6 - 
                  1059*s13*s23^7 - 270*s23^8) + s12^4*s13*s23*(54*s13^8 - 
                  486*s13^7*s23 - 1980*s13^6*s23^2 - 2861*s13^5*s23^3 - 
                  284*s13^4*s23^4 + 2436*s13^3*s23^5 + 1642*s13^2*s23^6 + 
                  256*s13*s23^7 - 7*s23^8) + s12^5*(72*s13^9 + 360*s13^8*
                   s23 + 455*s13^7*s23^2 + 85*s13^6*s23^3 + 4298*s13^5*
                   s23^4 + 7242*s13^4*s23^5 + 3383*s13^3*s23^6 + 103*s13^2*
                   s23^7 - 278*s13*s23^8 - 70*s23^9)) - p2q^4*p3q*s13^2*(
                45*s12^9*s23^2*(4*s13^2 + 7*s13*s23 + 3*s23^2) - 
                5*s13^4*s23^3*(s13 + s23)^4*(9*s13^2 - 34*s13*s23 + 
                  25*s23^2) - s12*s13^3*s23^2*(s13 + s23)^3*(45*s13^4 - 
                  124*s13^3*s23 + 362*s13^2*s23^2 + 634*s13*s23^3 - 
                  132*s23^4) - s12^2*s13^2*s23^2*(s13 + s23)^2*(5*s13^5 + 
                  633*s13^4*s23 + 1255*s13^3*s23^2 - 91*s13^2*s23^3 - 
                  511*s13*s23^4 - 8*s23^5) + s12^8*(-72*s13^5 - 90*s13^4*
                   s23 - 7*s13^3*s23^2 + 734*s13^2*s23^3 + 1243*s13*s23^4 + 
                  525*s23^5) + s12^7*(-198*s13^6 - 513*s13^5*s23 + 
                  151*s13^4*s23^2 + 334*s13^3*s23^3 + 709*s13^2*s23^4 + 
                  1616*s13*s23^5 + 820*s23^6) + s12^6*(-162*s13^7 - 
                  720*s13^6*s23 - 17*s13^5*s23^2 + 1868*s13^4*s23^3 + 
                  518*s13^3*s23^4 - 888*s13^2*s23^5 + 546*s13*s23^6 + 
                  660*s23^7) + s12^3*s13*s23*(9*s13^8 - 226*s13^7*s23 - 
                  485*s13^6*s23^2 + 935*s13^5*s23^3 + 3607*s13^4*s23^4 + 
                  3612*s13^3*s23^5 + 1105*s13^2*s23^6 - 169*s13*s23^7 - 
                  84*s23^8) + s12^5*(-18*s13^8 - 252*s13^7*s23 + 354*s13^6*
                   s23^2 + 4412*s13^5*s23^3 + 5954*s13^4*s23^4 + 771*s13^3*
                   s23^5 - 2132*s13^2*s23^6 - 443*s13*s23^7 + 285*s23^8) + 
                s12^4*(18*s13^9 + 54*s13^8*s23 + 443*s13^7*s23^2 + 
                  2431*s13^6*s23^3 + 6469*s13^5*s23^4 + 6455*s13^4*s23^5 + 
                  1224*s13^3*s23^6 - 1266*s13^2*s23^7 - 385*s13*s23^8 + 
                  55*s23^9))) + p1q^4*s23*(p2q^2*(s13 + s23)*(5*s13^4*s23^4*
                 (s13 + s23)^3*(54*s13^2 - 6*s13*s23 - 7*s23^2) + 
                s12*s13^3*s23^3*(s13 + s23)^2*(405*s13^4 + 541*s13^3*s23 - 
                  374*s13^2*s23^2 - 261*s13*s23^3 + 24*s23^4) + 
                s12^8*(36*s13^5 + 36*s13^4*s23 - 28*s13^3*s23^2 - 
                  53*s13^2*s23^3 - 45*s13*s23^4 - 35*s23^5) + 
                s12^7*(108*s13^6 - 198*s13^5*s23 - 636*s13^4*s23^2 - 
                  153*s13^3*s23^3 - 49*s13^2*s23^4 - 211*s13*s23^5 - 
                  140*s23^6) + s12^6*(108*s13^7 - 108*s13^6*s23 - 2630*s13^5*
                   s23^2 - 3012*s13^4*s23^3 - 56*s13^3*s23^4 + 128*s13^2*
                   s23^5 - 339*s13*s23^6 - 210*s23^7) + s12^2*s13^2*s23^2*
                 (135*s13^7 + 602*s13^6*s23 - 431*s13^5*s23^2 - 2631*s13^4*
                   s23^3 - 2141*s13^3*s23^4 - 465*s13^2*s23^5 - 49*s13*
                   s23^6 + 8*s23^7) + s12^3*s13*s23^2*(62*s13^7 - 1639*s13^6*
                   s23 - 5557*s13^5*s23^2 - 6139*s13^4*s23^3 - 1704*s13^3*
                   s23^4 + 336*s13^2*s23^5 - 59*s13*s23^6 + 24*s23^7) + 
                s12^5*(36*s13^8 + 198*s13^7*s23 - 2270*s13^6*s23^2 - 
                  8092*s13^5*s23^3 - 5101*s13^4*s23^4 + 741*s13^3*s23^5 + 
                  116*s13^2*s23^6 - 201*s13*s23^7 - 140*s23^8) - 
                s12^4*s23*(-72*s13^8 + 645*s13^7*s23 + 5488*s13^6*s23^2 + 
                  10476*s13^5*s23^3 + 4218*s13^4*s23^4 - 1081*s13^3*s23^5 + 
                  75*s13^2*s23^6 + 4*s13*s23^7 + 35*s23^8)) + 
              p3q^2*(s12 + s23)*(-35*s13^4*s23^5*(s13 + s23)^4 - 
                s12*s13^3*s23^4*(s13 + s23)^3*(45*s13^2 + 76*s13*s23 - 
                  24*s23^2) + 135*s12^9*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) - 
                s12^2*s13^2*s23^3*(s13 + s23)^2*(53*s13^4 - 57*s13^3*s23 - 
                  67*s13^2*s23^2 + 75*s13*s23^3 - 8*s23^4) - s12^3*s13*s23^2*
                 (s13 + s23)^2*(28*s13^5 + 97*s13^4*s23 - 166*s13^3*s23^2 - 
                  506*s13^2*s23^3 + 97*s13*s23^4 - 24*s23^5) + 
                s12^8*(36*s13^5 + 72*s13^4*s23 + 62*s13^3*s23^2 + 602*s13^2*
                   s23^3 + 1351*s13*s23^4 + 780*s23^5) + s12^7*(108*s13^6 + 
                  198*s13^5*s23 - 645*s13^4*s23^2 - 1639*s13^3*s23^3 - 
                  431*s13^2*s23^4 + 1113*s13*s23^5 + 685*s23^6) + 
                s12^6*(108*s13^7 - 108*s13^6*s23 - 2270*s13^5*s23^2 - 
                  5488*s13^4*s23^3 - 5557*s13^3*s23^4 - 2631*s13^2*s23^5 - 
                  468*s13*s23^6 + 75*s23^7) + s12^5*(36*s13^8 - 198*s13^7*
                   s23 - 2630*s13^6*s23^2 - 8092*s13^5*s23^3 - 10476*s13^4*
                   s23^4 - 6139*s13^3*s23^5 - 2141*s13^2*s23^6 - 872*s13*
                   s23^7 - 135*s23^8) - s12^4*s23*(-36*s13^8 + 636*s13^7*
                   s23 + 3012*s13^6*s23^2 + 5101*s13^5*s23^3 + 4218*s13^4*
                   s23^4 + 1704*s13^3*s23^5 + 465*s13^2*s23^6 + 213*s13*
                   s23^7 + 35*s23^8)) - p2q*p3q*(-5*s13^4*(3*s13 - 5*s23)*
                 s23^5*(s13 + s23)^4 + s12*s13^3*s23^4*(s13 + s23)^3*
                 (80*s13^3 + 49*s13^2*s23 + 120*s13*s23^2 - 84*s23^3) + 
                s12^2*s13^2*s23^3*(s13 + s23)^2*(217*s13^5 + 1005*s13^4*s23 + 
                  600*s13^3*s23^2 - 273*s13^2*s23^3 - 36*s13*s23^4 - 
                  16*s23^5) + s12^9*(-36*s13^5 - 72*s13^4*s23 + 91*s13^3*
                   s23^2 + 217*s13^2*s23^3 + 80*s13*s23^4 - 15*s23^5) + 
                s12^8*(-144*s13^6 - 306*s13^5*s23 + 610*s13^4*s23^2 + 
                  1937*s13^3*s23^3 + 1439*s13^2*s23^4 + 289*s13*s23^5 - 
                  35*s23^6) + s12^7*(-216*s13^7 + 90*s13^6*s23 + 3077*s13^5*
                   s23^2 + 7192*s13^4*s23^3 + 6831*s13^3*s23^4 + 2827*s13^2*
                   s23^5 + 507*s13*s23^6 + 10*s23^7) + s12^3*s13*s23^2*
                 (91*s13^8 + 1937*s13^7*s23 + 6831*s13^6*s23^2 + 10355*s13^5*
                   s23^3 + 6788*s13^4*s23^4 + 956*s13^3*s23^5 - 446*s13^2*
                   s23^6 - 68*s13*s23^7 - 84*s23^8) + s12^6*(-144*s13^8 + 
                  90*s13^7*s23 + 5764*s13^6*s23^2 + 17660*s13^5*s23^3 + 
                  20976*s13^4*s23^4 + 10355*s13^3*s23^5 + 1932*s13^2*s23^6 + 
                  503*s13*s23^7 + 90*s23^8) + s12^4*s23*(-72*s13^9 + 
                  610*s13^8*s23 + 7192*s13^7*s23^2 + 20976*s13^6*s23^3 + 
                  23914*s13^5*s23^4 + 10648*s13^4*s23^5 + 956*s13^3*s23^6 - 
                  361*s13^2*s23^7 - 132*s13*s23^8 + 25*s23^9) + 
                s12^5*(-36*s13^9 - 306*s13^8*s23 + 3077*s13^7*s23^2 + 
                  17660*s13^6*s23^3 + 31300*s13^5*s23^4 + 23914*s13^4*s23^5 + 
                  6788*s13^3*s23^6 + 18*s13^2*s23^7 + 157*s13*s23^8 + 
                  85*s23^9))) + p1q^2*(p3q^4*s12^2*(s12 + s23)*(
                45*s12^9*s23^2*(s13 + s23) + 5*s13^4*s23^4*(s13 + s23)^3*
                 (11*s13 + 6*s23) + s12*s13^3*s23^3*(s13 + s23)^2*
                 (65*s13^3 + 76*s13^2*s23 - 124*s13*s23^2 - 90*s23^3) + 
                s12^8*(18*s13^4 + 9*s13^3*s23 - 23*s13^2*s23^2 + 106*s13*
                   s23^3 + 125*s23^4) + s12^7*(36*s13^5 + 27*s13^4*s23 - 
                  223*s13^3*s23^2 - 436*s13^2*s23^3 - 392*s13*s23^4 - 
                  135*s23^5) - s12^6*s23*(90*s13^5 + 304*s13^4*s23 + 
                  104*s13^3*s23^2 + 593*s13^2*s23^3 + 1353*s13*s23^4 + 
                  705*s23^5) + s12^2*s13^2*s23^2*(14*s13^6 + 97*s13^5*s23 + 
                  287*s13^4*s23^2 + 46*s13^3*s23^3 - 507*s13^2*s23^4 - 
                  325*s13*s23^5 + 24*s23^6) + s12^3*s13*s23*(-9*s13^7 + 
                  52*s13^6*s23 + 923*s13^5*s23^2 + 2860*s13^4*s23^3 + 
                  3511*s13^3*s23^4 + 1536*s13^2*s23^5 + 337*s13*s23^6 + 
                  234*s23^7) - s12^5*(36*s13^7 + 234*s13^6*s23 + 162*s13^5*
                   s23^2 - 772*s13^4*s23^3 - 1697*s13^3*s23^4 - 479*s13^2*
                   s23^5 + 1097*s13*s23^6 + 730*s23^7) + s12^4*(-18*s13^8 - 
                  135*s13^7*s23 + 25*s13^6*s23^2 + 2276*s13^5*s23^3 + 
                  4989*s13^4*s23^4 + 3500*s13^3*s23^5 + 972*s13^2*s23^6 + 
                  37*s13*s23^7 - 240*s23^8)) + p2q^4*s13^2*(s13 + s23)*(
                5*s13^4*s23^3*(s13 + s23)^3*(9*s13^2 - 2*s13*s23 - 
                  48*s23^2) + s12^8*(-18*s13^4 - 9*s13^3*s23 + 14*s13^2*
                   s23^2 + 65*s13*s23^3 + 55*s23^4) + s12*s13^3*s23^2*
                 (s13 + s23)^2*(45*s13^4 + 16*s13^3*s23 - 469*s13^2*s23^2 - 
                  431*s13*s23^3 + 234*s23^4) + s12^7*(-36*s13^5 - 135*s13^4*
                   s23 + 52*s13^3*s23^2 + 97*s13^2*s23^3 + 206*s13*s23^4 + 
                  195*s23^5) + s12^6*s23*(-234*s13^5 + 25*s13^4*s23 + 
                  923*s13^3*s23^2 + 287*s13^2*s23^3 + 93*s13*s23^4 + 
                  255*s23^5) + s12^2*s13^2*s23^2*(-23*s13^6 - 436*s13^5*s23 - 
                  593*s13^4*s23^2 + 479*s13^3*s23^3 + 972*s13^2*s23^4 + 
                  337*s13*s23^5 + 24*s23^6) + s12^3*s13*s23*(9*s13^7 - 
                  223*s13^6*s23 - 104*s13^5*s23^2 + 1697*s13^4*s23^3 + 
                  3500*s13^3*s23^4 + 1536*s13^2*s23^5 - 325*s13*s23^6 - 
                  90*s23^7) + s12^5*(36*s13^7 - 90*s13^6*s23 - 162*s13^5*
                   s23^2 + 2276*s13^4*s23^3 + 2860*s13^3*s23^4 + 46*s13^2*
                   s23^5 - 262*s13*s23^6 + 145*s23^7) + s12^4*(18*s13^8 + 
                  27*s13^7*s23 - 304*s13^6*s23^2 + 772*s13^5*s23^3 + 
                  4989*s13^4*s23^4 + 3511*s13^3*s23^5 - 507*s13^2*s23^6 - 
                  304*s13*s23^7 + 30*s23^8)) + p2q*p3q^3*s12*(5*s13^4*s23^5*
                 (s13 + s23)^3*(14*s13^2 - 4*s13*s23 + 5*s23^2) + 
                s12*s13^3*s23^4*(s13 + s23)^2*(65*s13^4 + 102*s13^3*s23 + 
                  77*s13^2*s23^2 + 181*s13*s23^3 + 6*s23^4) + s12^10*
                 (18*s13^4 + 9*s13^3*s23 - 149*s13^2*s23^2 - 20*s13*s23^3 + 
                  125*s23^4) - s12^9*(18*s13^5 + 55*s13^3*s23^2 + 475*s13^2*
                   s23^3 + 182*s13*s23^4 - 270*s23^5) + s12^8*(-108*s13^6 - 
                  315*s13^5*s23 + 230*s13^4*s23^2 + 1325*s13^3*s23^3 + 
                  699*s13^2*s23^4 - 324*s13*s23^5 - 55*s23^6) + 
                s12^7*(-36*s13^7 - 360*s13^6*s23 + 120*s13^5*s23^2 + 
                  2430*s13^4*s23^3 + 5022*s13^3*s23^4 + 3958*s13^2*s23^5 + 
                  502*s13*s23^6 - 420*s23^7) - 2*s12^2*s13^2*s23^3*
                 (44*s13^7 + 124*s13^6*s23 + 11*s13^5*s23^2 - 303*s13^4*
                   s23^3 - 404*s13^3*s23^4 - 243*s13^2*s23^5 - 65*s13*s23^6 + 
                  8*s23^7) + s12^6*(90*s13^8 + 243*s13^7*s23 - 74*s13^6*
                   s23^2 + 3238*s13^5*s23^3 + 7638*s13^4*s23^4 + 6892*s13^3*
                   s23^5 + 4657*s13^2*s23^6 + 1828*s13*s23^7 - 105*s23^8) - 
                s12^3*s13*s23^2*(69*s13^8 + 507*s13^7*s23 + 1399*s13^6*
                   s23^2 + 2292*s13^5*s23^3 + 2310*s13^4*s23^4 + 1719*s13^3*
                   s23^5 + 744*s13^2*s23^6 + 186*s13*s23^7 + 102*s23^8) + 
                s12^4*s23*(63*s13^9 - 7*s13^8*s23 - 1651*s13^7*s23^2 - 
                  5452*s13^6*s23^3 - 5090*s13^5*s23^4 - 1743*s13^4*s23^5 - 
                  926*s13^3*s23^6 - 331*s13^2*s23^7 + 276*s13*s23^8 + 
                  115*s23^9) + s12^5*(54*s13^9 + 360*s13^8*s23 + 4*s13^7*
                   s23^2 - 2668*s13^6*s23^3 + 284*s13^5*s23^4 + 5630*s13^4*
                   s23^5 + 3201*s13^3*s23^6 + 1563*s13^2*s23^7 + 1542*s13*
                   s23^8 + 230*s23^9)) - p2q^2*p3q^2*(5*s13^5*(25*s13 - 
                  23*s23)*s23^5*(s13 + s23)^4 + s12*s13^4*s23^4*(s13 + s23)^3*
                 (310*s13^3 - 27*s13^2*s23 - 310*s13*s23^2 + 77*s23^3) + 
                s12^2*s13^3*s23^3*(s13 + s23)^2*(16*s13^5 + 11*s13^4*s23 + 
                  42*s13^3*s23^2 + 481*s13^2*s23^3 + 54*s13*s23^4 + 
                  10*s23^5) + s12^10*(54*s13^5 + 45*s13^4*s23 - 168*s13^3*
                   s23^2 + 16*s13^2*s23^3 + 310*s13*s23^4 + 125*s23^5) + 
                s12^9*(54*s13^6 + 198*s13^5*s23 - 168*s13^4*s23^2 - 
                  682*s13^3*s23^3 + 43*s13^2*s23^4 + 903*s13*s23^5 + 
                  385*s23^6) + s12^8*(-108*s13^7 - 261*s13^6*s23 - 
                  189*s13^5*s23^2 + 91*s13^4*s23^3 + 188*s13^3*s23^4 + 
                  80*s13^2*s23^5 + 539*s13*s23^6 + 290*s23^7) + 
                s12^7*(-108*s13^8 - 828*s13^7*s23 - 483*s13^6*s23^2 + 
                  1261*s13^5*s23^3 + 3281*s13^4*s23^4 + 3507*s13^3*s23^5 + 
                  576*s13^2*s23^6 - 624*s13*s23^7 - 190*s23^8) + 
                s12^3*s13^2*s23^2*(-168*s13^8 - 682*s13^7*s23 + 188*s13^6*
                   s23^2 + 3507*s13^5*s23^3 + 5789*s13^4*s23^4 + 4119*s13^3*
                   s23^5 + 973*s13^2*s23^6 - 152*s13*s23^7 + 10*s23^8) + 
                s12^6*(54*s13^9 - 261*s13^8*s23 - 483*s13^7*s23^2 + 
                  6980*s13^6*s23^3 + 14268*s13^5*s23^4 + 11500*s13^4*s23^5 + 
                  5789*s13^3*s23^6 + 1058*s13^2*s23^7 - 726*s13*s23^8 - 
                  335*s23^9) + s12^4*s13*s23*(45*s13^9 - 168*s13^8*s23 + 
                  91*s13^7*s23^2 + 3281*s13^6*s23^3 + 11500*s13^5*s23^4 + 
                  14257*s13^4*s23^5 + 6910*s13^3*s23^6 + 973*s13^2*s23^7 + 
                  74*s13*s23^8 + 77*s23^9) + s12^5*(54*s13^10 + 198*s13^9*
                   s23 - 189*s13^8*s23^2 + 1261*s13^7*s23^3 + 14268*s13^6*
                   s23^4 + 23030*s13^5*s23^5 + 14257*s13^4*s23^6 + 
                  4119*s13^3*s23^7 + 599*s13^2*s23^8 - 79*s13*s23^9 - 
                  115*s23^10)) + p2q^3*p3q*s13*(5*s13^4*s23^4*(s13 + s23)^4*
                 (25*s13^2 - 46*s13*s23 + 23*s23^2) - 2*s12*s13^3*s23^3*
                 (s13 + s23)^3*(10*s13^4 + 61*s13^3*s23 - 51*s13^2*s23^2 - 
                  291*s13*s23^3 + 51*s23^4) + s12^9*(54*s13^5 + 63*s13^4*
                   s23 - 69*s13^3*s23^2 - 88*s13^2*s23^3 + 65*s13*s23^4 + 
                  70*s23^5) - s12^2*s13^2*s23^2*(s13 + s23)^2*(149*s13^6 + 
                  177*s13^5*s23 - 1202*s13^4*s23^2 - 1731*s13^3*s23^3 + 
                  7*s13^2*s23^4 + 154*s13*s23^5 + 16*s23^6) + 
                s12^8*(90*s13^6 + 360*s13^5*s23 - 7*s13^4*s23^2 - 507*s13^3*
                   s23^3 - 248*s13^2*s23^4 + 232*s13*s23^5 + 190*s23^6) + 
                s12^7*(-36*s13^7 + 243*s13^6*s23 + 4*s13^5*s23^2 - 
                  1651*s13^4*s23^3 - 1399*s13^3*s23^4 - 22*s13^2*s23^5 + 
                  346*s13*s23^6 + 175*s23^7) - s12^6*(108*s13^8 + 360*s13^7*
                   s23 + 74*s13^6*s23^2 + 2668*s13^5*s23^3 + 5452*s13^4*
                   s23^4 + 2292*s13^3*s23^5 - 606*s13^2*s23^6 - 437*s13*
                   s23^7 - 85*s23^8) + s12^3*s13*s23*(9*s13^9 - 55*s13^8*
                   s23 + 1325*s13^7*s23^2 + 5022*s13^6*s23^3 + 6892*s13^5*
                   s23^4 + 3201*s13^4*s23^5 - 926*s13^3*s23^6 - 744*s13^2*
                   s23^7 + 130*s13*s23^8 + 6*s23^9) + s12^5*(-18*s13^9 - 
                  315*s13^8*s23 + 120*s13^7*s23^2 + 3238*s13^6*s23^3 + 
                  284*s13^5*s23^4 - 5090*s13^4*s23^5 - 2310*s13^3*s23^6 + 
                  808*s13^2*s23^7 + 445*s13*s23^8 + 55*s23^9) + 
                s12^4*(18*s13^10 + 230*s13^8*s23^2 + 2430*s13^7*s23^3 + 
                  7638*s13^6*s23^4 + 5630*s13^5*s23^5 - 1743*s13^4*s23^6 - 
                  1719*s13^3*s23^7 + 486*s13^2*s23^8 + 193*s13*s23^9 + 
                  25*s23^10))) - p1q^3*(p3q^3*s12*(s12 + s23)*(-5*s13^4*s23^5*
                 (s13 + s23)^3*(5*s13 + 12*s23) + 45*s12^9*s23^2*
                 (s13^2 + 5*s13*s23 + 4*s23^2) - 3*s12*s13^3*s23^4*
                 (s13 + s23)^2*(5*s13^3 + 42*s13^2*s23 + 46*s13*s23^2 - 
                  6*s23^3) + s12^8*(18*s13^5 + 63*s13^4*s23 + 4*s13^3*s23^2 + 
                  118*s13^2*s23^3 + 659*s13*s23^4 + 510*s23^5) + 
                s12^2*s13^2*s23^3*(-55*s13^6 + 30*s13^5*s23 + 520*s13^4*
                   s23^2 + 645*s13^3*s23^3 + 109*s13^2*s23^4 - 77*s13*s23^5 + 
                  24*s23^6) + s12^7*(54*s13^6 + 216*s13^5*s23 - 138*s13^4*
                   s23^2 - 1208*s13^3*s23^3 - 1091*s13^2*s23^4 + 
                  32*s13*s23^5 + 300*s23^6) + s12^6*(54*s13^7 + 216*s13^6*
                   s23 - 586*s13^5*s23^2 - 2714*s13^4*s23^3 - 3377*s13^3*
                   s23^4 - 2508*s13^2*s23^5 - 1482*s13*s23^6 - 360*s23^7) + 
                s12^3*s13*s23^2*(-95*s13^7 + 186*s13^6*s23 + 2003*s13^5*
                   s23^2 + 4694*s13^4*s23^3 + 4622*s13^3*s23^4 + 1541*s13^2*
                   s23^5 + 57*s13*s23^6 + 126*s23^7) + s12^5*(18*s13^8 + 
                  36*s13^7*s23 - 442*s13^6*s23^2 - 2588*s13^5*s23^3 - 
                  4388*s13^4*s23^4 - 2439*s13^3*s23^5 - 1247*s13^2*s23^6 - 
                  1423*s13*s23^7 - 480*s23^8) + s12^4*s23*(-27*s13^8 - 
                  48*s13^7*s23 + 354*s13^6*s23^2 + 1991*s13^5*s23^3 + 
                  2986*s13^4*s23^4 + 1602*s13^3*s23^5 + 130*s13^2*s23^6 - 
                  217*s13*s23^7 - 150*s23^8)) + p2q^3*s13*(s13 + s23)*(
                30*s13^4*s23^4*(s13 + s23)^3*(6*s13^2 - s13*s23 - 5*s23^2) + 
                s12*s13^3*s23^3*(s13 + s23)^3*(225*s13^3 - 16*s13^2*s23 - 
                  595*s13*s23^2 + 126*s23^3) + s12^8*(18*s13^5 - 27*s13^4*
                   s23 - 95*s13^3*s23^2 - 55*s13^2*s23^3 - 15*s13*s23^4 - 
                  25*s23^5) + 3*s12^7*(18*s13^6 + 12*s13^5*s23 - 16*s13^4*
                   s23^2 + 62*s13^3*s23^3 + 10*s13^2*s23^4 - 52*s13*s23^5 - 
                  45*s23^6) + s12^6*(54*s13^7 + 216*s13^6*s23 - 442*s13^5*
                   s23^2 + 354*s13^4*s23^3 + 2003*s13^3*s23^4 + 520*s13^2*
                   s23^5 - 405*s13*s23^6 - 255*s23^7) + s12^3*s13*s23^2*
                 (4*s13^7 - 1208*s13^6*s23 - 3377*s13^5*s23^2 - 2439*s13^4*
                   s23^3 + 1602*s13^3*s23^4 + 1541*s13^2*s23^5 - 
                  77*s13*s23^6 + 18*s23^7) + s12^2*s13^2*s23^2*(45*s13^7 + 
                  118*s13^6*s23 - 1091*s13^5*s23^2 - 2508*s13^4*s23^3 - 
                  1247*s13^3*s23^4 + 130*s13^2*s23^5 + 57*s13*s23^6 + 
                  24*s23^7) + s12^5*(18*s13^8 + 216*s13^7*s23 - 586*s13^6*
                   s23^2 - 2588*s13^5*s23^3 + 1991*s13^4*s23^4 + 4694*s13^3*
                   s23^5 + 645*s13^2*s23^6 - 384*s13*s23^7 - 205*s23^8) + 
                s12^4*s23*(63*s13^8 - 138*s13^7*s23 - 2714*s13^6*s23^2 - 
                  4388*s13^5*s23^3 + 2986*s13^4*s23^4 + 4622*s13^3*s23^5 + 
                  109*s13^2*s23^6 - 102*s13*s23^7 - 60*s23^8)) + 
              p2q*p3q^2*(-5*s13^4*(23*s13 - 7*s23)*s23^6*(s13 + s23)^4 - 
                s12*s13^3*s23^5*(s13 + s23)^3*(165*s13^3 + 128*s13^2*s23 - 
                  143*s13*s23^2 + 24*s23^3) + s12^2*s13^2*s23^4*(s13 + s23)^2*
                 (106*s13^5 + 664*s13^4*s23 + 879*s13^3*s23^2 + 288*s13^2*
                   s23^3 + 169*s13*s23^4 - 8*s23^5) + s12^10*(18*s13^5 + 
                  63*s13^4*s23 - 122*s13^3*s23^2 - 422*s13^2*s23^3 - 
                  160*s13*s23^4 + 105*s23^5) + s12^9*(18*s13^6 + 180*s13^5*
                   s23 - 2*s13^4*s23^2 - 1370*s13^3*s23^3 - 1983*s13^2*
                   s23^4 - 572*s13*s23^5 + 290*s23^6) - s12^8*(54*s13^7 + 
                  54*s13^6*s23 + 382*s13^5*s23^2 + 1678*s13^4*s23^3 + 
                  2583*s13^3*s23^4 + 2269*s13^2*s23^5 + 842*s13*s23^6 - 
                  145*s23^7) + s12^3*s13*s23^3*(311*s13^8 + 2103*s13^7*s23 + 
                  5936*s13^6*s23^2 + 9468*s13^5*s23^3 + 8022*s13^4*s23^4 + 
                  2776*s13^3*s23^5 + 135*s13^2*s23^6 + 33*s13*s23^7 - 
                  24*s23^8) - s12^7*(90*s13^8 + 450*s13^7*s23 - 82*s13^6*
                   s23^2 + 468*s13^5*s23^3 + 2276*s13^4*s23^4 - 228*s13^3*
                   s23^5 - 1117*s13^2*s23^6 + 392*s13*s23^7 + 220*s23^8) + 
                s12^6*(-36*s13^9 - 333*s13^8*s23 + 179*s13^7*s23^2 + 
                  5306*s13^6*s23^3 + 10142*s13^5*s23^4 + 8969*s13^4*s23^5 + 
                  6347*s13^3*s23^6 + 3252*s13^2*s23^7 + 532*s13*s23^8 - 
                  205*s23^9) + s12^5*s23*(-54*s13^9 - 278*s13^8*s23 + 
                  2358*s13^7*s23^2 + 13150*s13^6*s23^3 + 22719*s13^5*s23^4 + 
                  18913*s13^4*s23^5 + 7313*s13^3*s23^6 + 1509*s13^2*s23^7 + 
                  748*s13*s23^8 + 10*s23^9) + s12^4*s23^2*(127*s13^9 + 
                  889*s13^8*s23 + 5015*s13^7*s23^2 + 14847*s13^6*s23^3 + 
                  19470*s13^5*s23^4 + 11595*s13^4*s23^5 + 2487*s13^3*s23^6 + 
                  123*s13^2*s23^7 + 230*s13*s23^8 + 35*s23^9)) + 
              p2q^2*p3q*(5*s13^4*s23^5*(s13 + s23)^4*(21*s13^2 - 26*s13*s23 + 
                  7*s23^2) - 2*s12*s13^3*s23^4*(s13 + s23)^3*(80*s13^4 + 
                  46*s13^3*s23 + 43*s13^2*s23^2 - 151*s13*s23^3 + 12*s23^4) + 
                s12^9*(-36*s13^6 - 54*s13^5*s23 + 127*s13^4*s23^2 + 
                  311*s13^3*s23^3 + 106*s13^2*s23^4 - 165*s13*s23^5 - 
                  115*s23^6) - s12^2*s13^2*s23^3*(s13 + s23)^2*(422*s13^6 + 
                  1139*s13^5*s23 - 431*s13^4*s23^2 - 1394*s13^3*s23^3 - 
                  33*s13^2*s23^4 - 49*s13*s23^5 + 8*s23^6) - 
                s12^8*(90*s13^7 + 333*s13^6*s23 + 278*s13^5*s23^2 - 
                  889*s13^4*s23^3 - 2103*s13^3*s23^4 - 876*s13^2*s23^5 + 
                  623*s13*s23^6 + 425*s23^7) + s12^7*(-54*s13^8 - 450*s13^7*
                   s23 + 179*s13^6*s23^2 + 2358*s13^5*s23^3 + 5015*s13^4*
                   s23^4 + 5936*s13^3*s23^5 + 2313*s13^2*s23^6 - 736*s13*
                   s23^7 - 550*s23^8) + s12^6*(18*s13^9 - 54*s13^8*s23 + 
                  82*s13^7*s23^2 + 5306*s13^6*s23^3 + 13150*s13^5*s23^4 + 
                  14847*s13^4*s23^5 + 9468*s13^3*s23^6 + 2710*s13^2*s23^7 - 
                  144*s13*s23^8 - 250*s23^9) + s12^3*s13*s23^2*(-122*s13^9 - 
                  1370*s13^8*s23 - 2583*s13^7*s23^2 + 228*s13^6*s23^3 + 
                  6347*s13^5*s23^4 + 7313*s13^4*s23^5 + 2487*s13^3*s23^6 + 
                  135*s13^2*s23^7 + 153*s13*s23^8 - 24*s23^9) + 
                s12^5*(18*s13^10 + 180*s13^9*s23 - 382*s13^8*s23^2 - 
                  468*s13^7*s23^3 + 10142*s13^6*s23^4 + 22719*s13^5*s23^5 + 
                  19470*s13^4*s23^6 + 8022*s13^3*s23^7 + 1624*s13^2*s23^8 + 
                  229*s13*s23^9 + 25*s23^10) + s12^4*s23*(63*s13^10 - 
                  2*s13^9*s23 - 1678*s13^8*s23^2 - 2276*s13^7*s23^3 + 
                  8969*s13^6*s23^4 + 18913*s13^5*s23^5 + 11595*s13^4*s23^6 + 
                  2776*s13^3*s23^7 + 618*s13^2*s23^8 + 71*s13*s23^9 + 
                  35*s23^10)))))/(18*p1q*(p2q + p3q)*s12^3*s13^3*s23^2*
           (s12 + s23)^2*(s13 + s23)^2*(p1q^4*s23^2*(s12 + s23)*(s13 + s23) - 
            (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) + 
         (-9*p1q^7*(s12 + s13)*s23^5*(15*s13^4*s23^3*(s13 + s23)^4 + 
             s12^2*s13^3*s23*(s13 + s23)^3*(20*s13^2 + 38*s13*s23 - 25*
                s23^2) + s12*s13^3*s23^2*(s13 + s23)^3*(35*s13^2 + 42*s13*
                s23 - 8*s23^2) + 5*s12^8*s23*(4*s13^2 + 7*s13*s23 + 3*
                s23^2) + s12^3*s13*s23*(s13 + s23)^3*(10*s13^3 - 27*s13^2*
                s23 - s13*s23^2 - 8*s23^3) + s12^7*(-s13^4 + 10*s13^3*s23 + 
               98*s13^2*s23^2 + 147*s13*s23^3 + 60*s23^4) - 
             s12^4*(s13 + s23)^2*(s13^5 + 12*s13^4*s23 + 14*s13^3*s23^2 + 28*
                s13^2*s23^3 + 12*s13*s23^4 - 15*s23^5) + 
             s12^6*(-s13^5 - 14*s13^4*s23 + 3*s13^3*s23^2 + 149*s13^2*s23^3 + 
               223*s13*s23^4 + 90*s23^5) - s12^5*(s13^6 + 6*s13^5*s23 + 39*
                s13^4*s23^2 + 52*s13^3*s23^3 - 59*s13^2*s23^4 - 137*s13*
                s23^5 - 60*s23^6)) + 9*(p2q + p3q)^2*(s12 + s13)*
            (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
            (p3q^3*s12^2*(s12*s13^4*(35*s13 - 3*s23)*s23^3*(s13 + s23)^2 + 15*
                s13^5*s23^4*(s13 + s23)^2 - 5*s12^8*s23^2*(4*s13 + 3*s23) + 
               s12^2*s13^3*s23^2*(s13 + s23)^2*(20*s13^2 + 96*s13*s23 + 
                 45*s23^2) + s12^7*s23*(11*s13^3 + 9*s13^2*s23 - 
                 57*s13*s23^2 - 45*s23^3) + s12^3*s13^2*s23^2*(340*s13^4 + 
                 930*s13^3*s23 + 860*s13^2*s23^2 + 297*s13*s23^3 + 
                 27*s23^4) + s12^6*(144*s13^5 + 308*s13^4*s23 + 224*s13^3*
                  s23^2 + 54*s13^2*s23^3 - 51*s13*s23^4 - 45*s23^5) + s12^4*
                s13*s23*(385*s13^5 + 1279*s13^4*s23 + 1463*s13^3*s23^2 + 
                 661*s13^2*s23^3 + 90*s13*s23^4 + 3*s23^5) + s12^5*
                (144*s13^6 + 736*s13^5*s23 + 1100*s13^4*s23^2 + 622*s13^3*
                  s23^3 + 108*s13^2*s23^4 - 11*s13*s23^5 - 15*s23^6)) + 
             p2q^3*s13^2*(-(s12*s13^4*(20*s13 - 3*s23)*s23^2*(s13 + s23)^3) - 
               15*s13^5*s23^3*(s13 + s23)^3 + 9*s12^2*s13^3*s23^2*
                (s13 + s23)^3*(s13 + 3*s23) + 5*s12^7*s23^2*(4*s13^2 + 
                 7*s13*s23 + 3*s23^2) + s12^3*s13^2*s23*(s13 + s23)^2*
                (11*s13^3 + 202*s13^2*s23 + 207*s13*s23^2 + 45*s23^3) + s12^4*
                s13*s23*(308*s13^5 + 1100*s13^4*s23 + 1463*s13^3*s23^2 + 
                 860*s13^2*s23^3 + 186*s13*s23^4 - 3*s23^5) + s12^6*
                (144*s13^5 + 385*s13^4*s23 + 340*s13^3*s23^2 + 136*s13^2*
                  s23^3 + 67*s13*s23^4 + 30*s23^5) + s12^5*(144*s13^6 + 
                 736*s13^5*s23 + 1279*s13^4*s23^2 + 930*s13^3*s23^3 + 
                 257*s13^2*s23^4 + 29*s13*s23^5 + 15*s23^6)) + 
             p2q*p3q^2*s12*(-15*s13^5*s23^4*(s13 + s23)^2*(2*s13 + s23) - s12*
                s13^4*s23^3*(s13 + s23)^2*(85*s13^2 + 29*s13*s23 - 3*s23^2) + 
               5*s12^8*s23^2*(12*s13^2 + 13*s13*s23 + 3*s23^2) - s12^2*s13^3*
                s23^2*(s13 + s23)^2*(60*s13^3 + 101*s13^2*s23 + 
                 78*s13*s23^2 + 45*s23^3) - s12^3*s13^2*s23^2*(455*s13^5 + 
                 1255*s13^4*s23 + 1327*s13^3*s23^2 + 743*s13^2*s23^3 + 
                 243*s13*s23^4 + 27*s23^5) + s12^7*(144*s13^5 + 255*s13^4*
                  s23 + 106*s13^3*s23^2 + 142*s13^2*s23^3 + 177*s13*s23^4 + 
                 45*s23^5) - s12^4*s13*s23*(651*s13^6 + 1902*s13^5*s23 + 
                 2068*s13^4*s23^2 + 1165*s13^3*s23^3 + 436*s13^2*s23^4 + 
                 96*s13*s23^5 + 3*s23^6) + s12^6*(-144*s13^6 + 12*s13^5*s23 + 
                 327*s13^4*s23^2 + 127*s13^3*s23^3 + 62*s13^2*s23^4 + 
                 156*s13*s23^5 + 45*s23^6) - s12^5*(288*s13^7 + 1056*s13^6*
                  s23 + 1172*s13^5*s23^2 + 521*s13^4*s23^3 + 217*s13^3*
                  s23^4 + 89*s13^2*s23^5 - 41*s13*s23^6 - 15*s23^7)) - 
             p2q^2*p3q*s13*(-15*s13^5*s23^4*(s13 + s23)^3 - s12*s13^4*s23^3*
                (s13 + s23)^2*(65*s13^2 + 47*s13*s23 - 3*s23^2) + 5*s12^8*
                s23^2*(12*s13^2 + 17*s13*s23 + 6*s23^2) - s12^3*s13^2*s23^2*
                (s13 + s23)^2*(106*s13^3 - 85*s13^2*s23 - 153*s13*s23^2 - 
                 45*s23^3) - s12^2*s13^3*s23^2*(s13 + s23)^2*(60*s13^3 + 
                 22*s13^2*s23 - 42*s13*s23^2 - 27*s23^3) + s12^7*
                (288*s13^5 + 651*s13^4*s23 + 455*s13^3*s23^2 + 221*s13^2*
                  s23^3 + 199*s13*s23^4 + 75*s23^5) + s12^4*s13*s23*
                (-255*s13^6 - 327*s13^5*s23 + 521*s13^4*s23^2 + 1165*s13^3*
                  s23^3 + 743*s13^2*s23^4 + 168*s13*s23^5 - 3*s23^6) + s12^6*
                (144*s13^6 + 1056*s13^5*s23 + 1902*s13^4*s23^2 + 1255*s13^3*
                  s23^3 + 340*s13^2*s23^4 + 140*s13*s23^5 + 60*s23^6) + s12^5*
                (-144*s13^7 - 12*s13^6*s23 + 1172*s13^5*s23^2 + 2068*s13^4*
                  s23^3 + 1327*s13^3*s23^4 + 302*s13^2*s23^5 + 23*s13*s23^6 + 
                 15*s23^7))) + p1q^6*s23^3*(p3q*(5*s13^5*(27*s13 - 4*s23)*
                s23^4*(s13 + s23)^4 + 45*s12^10*s23^2*(16*s13^2 + 
                 32*s13*s23 + 15*s23^2) + s12*s13^4*s23^3*(s13 + s23)^3*
                (315*s13^3 + 733*s13^2*s23 + 168*s13*s23^2 - 210*s23^3) + 
               s12^2*s13^3*s23^2*(s13 + s23)^2*(180*s13^5 + 1459*s13^4*s23 + 
                 1956*s13^3*s23^2 + 54*s13^2*s23^3 - 329*s13*s23^4 + 
                 389*s23^5) + s12^9*(27*s13^5 - 45*s13^4*s23 + 1057*s13^3*
                  s23^2 + 5104*s13^2*s23^3 + 6745*s13*s23^4 + 2680*s23^5) + 
               s12^8*(108*s13^6 + 126*s13^5*s23 - 335*s13^4*s23^2 + 
                 3055*s13^3*s23^3 + 11093*s13^2*s23^4 + 11655*s13*s23^5 + 
                 3970*s23^6) + s12^3*s13^2*s23^2*(706*s13^7 + 3208*s13^6*
                  s23 + 3435*s13^5*s23^2 - 2258*s13^4*s23^3 - 5162*s13^3*
                  s23^4 - 1265*s13^2*s23^5 + 1095*s13*s23^6 + 389*s23^7) + 
               s12^7*(162*s13^7 - 369*s13^6*s23 - 3240*s13^5*s23^2 - 
                 5614*s13^4*s23^3 - 354*s13^3*s23^4 + 8746*s13^2*s23^5 + 
                 8685*s13*s23^6 + 2580*s23^7) + s12^4*s13*s23*(72*s13^8 + 
                 1150*s13^7*s23 - 682*s13^6*s23^2 - 12434*s13^5*s23^3 - 
                 21520*s13^4*s23^4 - 13391*s13^3*s23^5 - 2237*s13^2*s23^6 + 
                 98*s13*s23^7 - 210*s23^8) + s12^6*(108*s13^8 - 90*s13^7*
                  s23 - 5658*s13^6*s23^2 - 16793*s13^5*s23^3 - 19202*s13^4*
                  s23^4 - 8945*s13^3*s23^5 + 349*s13^2*s23^6 + 1975*s13*
                  s23^7 + 595*s23^8) + s12^5*(27*s13^9 + 522*s13^8*s23 - 
                 1332*s13^7*s23^2 - 14174*s13^6*s23^3 - 29585*s13^5*s23^4 - 
                 25345*s13^4*s23^5 - 9536*s13^3*s23^6 - 1979*s13^2*s23^7 - 
                 570*s13*s23^8 - 20*s23^9)) + p2q*(5*s13^5*(135*s13 - 4*s23)*
                s23^4*(s13 + s23)^4 + 45*s12^10*s23^2*(4*s13^2 + 7*s13*s23 + 
                 3*s23^2) + 5*s12*s13^4*s23^3*(s13 + s23)^3*(288*s13^3 + 
                 485*s13^2*s23 + 12*s13*s23^2 - 42*s23^3) + s12^2*s13^3*s23^2*
                (s13 + s23)^2*(720*s13^5 + 3664*s13^4*s23 + 3045*s13^3*
                  s23^2 - 1008*s13^2*s23^3 - 680*s13*s23^4 + 389*s23^5) + 
               s12^9*(27*s13^5 + 72*s13^4*s23 + 706*s13^3*s23^2 + 
                 1819*s13^2*s23^3 + 1678*s13*s23^4 + 520*s23^5) + 2*s12^8*
                (54*s13^6 + 261*s13^5*s23 + 575*s13^4*s23^2 + 1604*s13^3*
                  s23^3 + 2527*s13^2*s23^4 + 1656*s13*s23^5 + 365*s23^6) + 
               s12^3*s13^2*s23^2*(1057*s13^7 + 3055*s13^6*s23 - 354*s13^5*
                  s23^2 - 8945*s13^4*s23^3 - 9536*s13^3*s23^4 - 2237*s13^2*
                  s23^5 + 1095*s13*s23^6 + 389*s23^7) + s12^7*(162*s13^7 - 
                 90*s13^6*s23 - 1332*s13^5*s23^2 - 682*s13^4*s23^3 + 
                 3435*s13^3*s23^4 + 5425*s13^2*s23^5 + 2808*s13*s23^6 + 
                 420*s23^7) + s12^6*(108*s13^8 - 369*s13^7*s23 - 5658*s13^6*
                  s23^2 - 14174*s13^5*s23^3 - 12434*s13^4*s23^4 - 
                 2258*s13^3*s23^5 + 1735*s13^2*s23^6 + 607*s13*s23^7 + 
                 55*s23^8) - s12^4*s13*s23*(45*s13^8 + 335*s13^7*s23 + 
                 5614*s13^6*s23^2 + 19202*s13^5*s23^3 + 25345*s13^4*s23^4 + 
                 13391*s13^3*s23^5 + 1265*s13^2*s23^6 - 449*s13*s23^7 + 
                 210*s23^8) + s12^5*(27*s13^9 + 126*s13^8*s23 - 3240*s13^7*
                  s23^2 - 16793*s13^6*s23^3 - 29585*s13^5*s23^4 - 
                 21520*s13^4*s23^5 - 5162*s13^3*s23^6 - 215*s13^2*s23^7 - 
                 462*s13*s23^8 - 20*s23^9))) + 
           p1q*(p3q^6*s12^3*(-5*s13^6*s23^4*(s13 + s23)^3*(27*s13 + 58*s23) - 
               s12*s13^5*s23^3*(s13 + s23)^2*(315*s13^3 + 1238*s13^2*s23 + 
                 1589*s13*s23^2 + 491*s23^3) + s12^10*(27*s13^4 + 
                 54*s13^3*s23 + 202*s13^2*s23^2 + 1005*s13*s23^3 + 
                 655*s23^4) + s12^9*(1431*s13^5 + 2844*s13^4*s23 + 
                 1370*s13^3*s23^2 + 1992*s13^2*s23^3 + 4920*s13*s23^4 + 
                 2620*s23^5) - s12^2*s13^4*s23^2*(180*s13^6 + 2402*s13^5*
                  s23 + 10666*s13^4*s23^2 + 20332*s13^3*s23^3 + 17947*s13^2*
                  s23^4 + 6672*s13*s23^5 + 613*s23^6) - s12^3*s13^3*s23^2*
                (3344*s13^6 + 22265*s13^5*s23 + 60326*s13^4*s23^2 + 
                 80363*s13^3*s23^3 + 53996*s13^2*s23^4 + 17117*s13*s23^5 + 
                 2039*s23^6) + s12^8*(2862*s13^6 + 4779*s13^5*s23 - 
                 632*s13^4*s23^2 - 3799*s13^3*s23^3 + 3990*s13^2*s23^4 + 
                 8995*s13*s23^5 + 3930*s23^6) - s12^4*s13^2*s23*(3384*s13^7 + 
                 26314*s13^6*s23 + 93803*s13^5*s23^2 + 172191*s13^4*s23^3 + 
                 165633*s13^3*s23^4 + 80125*s13^2*s23^5 + 16608*s13*s23^6 + 
                 883*s23^7) + s12^7*(270*s13^7 - 6057*s13^6*s23 - 
                 33396*s13^5*s23^2 - 52668*s13^4*s23^3 - 29699*s13^3*s23^4 + 
                 1195*s13^2*s23^5 + 7515*s13*s23^6 + 2620*s23^7) - s12^6*
                (2457*s13^8 + 18729*s13^7*s23 + 77352*s13^6*s23^2 + 
                 151318*s13^5*s23^3 + 139884*s13^4*s23^4 + 55281*s13^3*
                  s23^5 + 3505*s13^2*s23^6 - 2700*s13*s23^7 - 655*s23^8) - 
               s12^5*s13*(1269*s13^8 + 14067*s13^7*s23 + 68906*s13^6*s23^2 + 
                 175927*s13^5*s23^3 + 232392*s13^4*s23^4 + 154286*s13^3*
                  s23^5 + 45266*s13^2*s23^6 + 3383*s13*s23^7 - 265*s23^8)) - 
             p2q^6*s13^3*(-655*s13^6*s23^4*(s13 + s23)^4 + 45*s12^10*s23^2*
                (4*s13^2 + 7*s13*s23 + 3*s23^2) - 5*s12*s13^5*s23^3*
                (s13 + s23)^3*(201*s13^2 + 381*s13*s23 + 53*s23^2) - s12^2*
                s13^4*s23^2*(s13 + s23)^2*(202*s13^4 + 1588*s13^3*s23 + 
                 612*s13^2*s23^2 - 1617*s13*s23^3 - 883*s23^4) + s12^9*
                (1269*s13^5 + 3384*s13^4*s23 + 3344*s13^3*s23^2 + 
                 2402*s13^2*s23^3 + 1868*s13*s23^4 + 695*s23^5) + s12^8*
                (2457*s13^6 + 14067*s13^5*s23 + 26314*s13^4*s23^2 + 
                 22265*s13^3*s23^3 + 10666*s13^2*s23^4 + 4380*s13*s23^5 + 
                 1275*s23^6) + s12^7*(-270*s13^7 + 18729*s13^6*s23 + 
                 68906*s13^5*s23^2 + 93803*s13^4*s23^3 + 60326*s13^3*s23^4 + 
                 20332*s13^2*s23^5 + 4907*s13*s23^6 + 1005*s23^7) + s12^3*
                s13^3*s23*(-54*s13^7 - 1370*s13^6*s23 + 3799*s13^5*s23^2 + 
                 29699*s13^4*s23^3 + 55281*s13^3*s23^4 + 45266*s13^2*s23^5 + 
                 16608*s13*s23^6 + 2039*s23^7) + s12^6*(-2862*s13^8 + 
                 6057*s13^7*s23 + 77352*s13^6*s23^2 + 175927*s13^5*s23^3 + 
                 172191*s13^4*s23^4 + 80363*s13^3*s23^5 + 17947*s13^2*s23^6 + 
                 2571*s13*s23^7 + 290*s23^8) + s12^5*s13*(-1431*s13^8 - 
                 4779*s13^7*s23 + 33396*s13^6*s23^2 + 151318*s13^5*s23^3 + 
                 232392*s13^4*s23^4 + 165633*s13^3*s23^5 + 53996*s13^2*
                  s23^6 + 6672*s13*s23^7 + 491*s23^8) + s12^4*s13^2*
                (-27*s13^8 - 2844*s13^7*s23 + 632*s13^6*s23^2 + 52668*s13^5*
                  s23^3 + 139884*s13^4*s23^4 + 154286*s13^3*s23^5 + 
                 80125*s13^2*s23^6 + 17117*s13*s23^7 + 613*s23^8)) + 
             p2q*p3q^5*s12^2*(-45*s12^12*s23^2*(4*s13 + 3*s23) + 5*s13^6*
                s23^4*(s13 + s23)^3*(81*s13^2 + 66*s13*s23 + 31*s23^2) + s12*
                s13^5*s23^3*(s13 + s23)^2*(1080*s13^4 + 2609*s13^3*s23 + 
                 2475*s13^2*s23^2 + 1519*s13*s23^3 + 383*s23^4) + s12^11*
                (54*s13^4 + 207*s13^3*s23 - 55*s13^2*s23^2 + 732*s13*s23^3 + 
                 635*s23^4) + s12^10*(4050*s13^5 + 8514*s13^4*s23 + 
                 3795*s13^3*s23^2 - 1174*s13^2*s23^3 + 3785*s13*s23^4 + 
                 3370*s23^5) + s12^9*(3888*s13^6 + 7155*s13^5*s23 + 
                 1131*s13^4*s23^2 - 9894*s13^3*s23^3 - 9555*s13^2*s23^4 + 
                 2813*s13*s23^5 + 4430*s23^6) - s12^8*(8316*s13^7 + 
                 34605*s13^6*s23 + 85648*s13^5*s23^2 + 107146*s13^4*s23^3 + 
                 65251*s13^3*s23^4 + 22307*s13^2*s23^5 + 4408*s13*s23^6 - 
                 1445*s23^7) + s12^2*s13^4*s23^2*(720*s13^7 + 6192*s13^6*
                  s23 + 18154*s13^5*s23^2 + 25719*s13^4*s23^3 + 18364*s13^3*
                  s23^4 + 5862*s13^2*s23^5 + 770*s13*s23^6 + 235*s23^7) + 
               s12^3*s13^3*s23^2*(8165*s13^7 + 34826*s13^6*s23 + 58004*s13^5*
                  s23^2 + 45972*s13^4*s23^3 + 20812*s13^3*s23^4 + 
                 12237*s13^2*s23^5 + 7365*s13*s23^6 + 1391*s23^7) + s12^4*
                s13^2*s23*(9027*s13^8 + 42444*s13^7*s23 + 78525*s13^6*s23^2 + 
                 65424*s13^5*s23^3 + 20112*s13^4*s23^4 + 7008*s13^3*s23^5 + 
                 12857*s13^2*s23^6 + 6548*s13*s23^7 + 613*s23^8) - s12^7*
                (8586*s13^8 + 52767*s13^7*s23 + 161754*s13^6*s23^2 + 
                 278125*s13^5*s23^3 + 245215*s13^4*s23^4 + 99859*s13^3*
                  s23^5 + 20513*s13^2*s23^6 + 7012*s13*s23^7 + 905*s23^8) + 
               s12^6*(3402*s13^9 - 5400*s13^8*s23 - 71251*s13^7*s23^2 - 
                 215104*s13^6*s23^3 - 307401*s13^5*s23^4 - 208308*s13^4*
                  s23^5 - 57588*s13^3*s23^6 - 6172*s13^2*s23^7 - 
                 2821*s13*s23^8 - 520*s23^9) + s12^5*s13*(3780*s13^9 + 
                 22941*s13^8*s23 + 42393*s13^7*s23^2 + 5735*s13^6*s23^3 - 
                 88986*s13^5*s23^4 - 122826*s13^4*s23^5 - 57143*s13^3*s23^6 - 
                 4341*s13^2*s23^7 + 1083*s13*s23^8 - 157*s23^9)) + 
             p2q^5*p3q*s13^2*(45*s12^11*s23^2*(4*s13 + 3*s23)^2 - 5*s13^6*
                s23^3*(s13 + s23)^4*(27*s13^2 - 235*s13*s23 + 104*s23^2) - 
               s12*s13^5*s23^2*(s13 + s23)^3*(180*s13^4 - 1272*s13^3*s23 - 
                 509*s13^2*s23^2 + 2350*s13*s23^3 + 157*s23^4) - s12^2*s13^4*
                s23^2*(s13 + s23)^2*(55*s13^5 + 1064*s13^4*s23 + 7372*s13^3*
                  s23^2 + 6499*s13^2*s23^3 + 143*s13*s23^4 - 613*s23^5) + 
               s12^10*(3780*s13^5 + 9027*s13^4*s23 + 8165*s13^3*s23^2 + 
                 6192*s13^2*s23^3 + 4769*s13*s23^4 + 1545*s23^5) + s12^9*
                (3402*s13^6 + 22941*s13^5*s23 + 42444*s13^4*s23^2 + 
                 34826*s13^3*s23^3 + 18154*s13^2*s23^4 + 8773*s13*s23^5 + 
                 2360*s23^6) + s12^8*(-8586*s13^7 - 5400*s13^6*s23 + 
                 42393*s13^5*s23^2 + 78525*s13^4*s23^3 + 58004*s13^3*s23^4 + 
                 25719*s13^2*s23^5 + 9078*s13*s23^6 + 1860*s23^7) + s12^7*
                (-8316*s13^8 - 52767*s13^7*s23 - 71251*s13^6*s23^2 + 
                 5735*s13^5*s23^3 + 65424*s13^4*s23^4 + 45972*s13^3*s23^5 + 
                 18364*s13^2*s23^6 + 5896*s13*s23^7 + 795*s23^8) + s12^3*
                s13^3*s23*(207*s13^8 + 3795*s13^7*s23 - 9894*s13^6*s23^2 - 
                 65251*s13^5*s23^3 - 99859*s13^4*s23^4 - 57588*s13^3*s23^5 - 
                 4341*s13^2*s23^6 + 6548*s13*s23^7 + 1391*s23^8) + s12^6*
                (3888*s13^9 - 34605*s13^8*s23 - 161754*s13^7*s23^2 - 
                 215104*s13^6*s23^3 - 88986*s13^5*s23^4 + 20112*s13^4*s23^5 + 
                 20812*s13^3*s23^6 + 5862*s13^2*s23^7 + 2285*s13*s23^8 + 
                 155*s23^9) + s12^4*s13^2*(54*s13^9 + 8514*s13^8*s23 + 
                 1131*s13^7*s23^2 - 107146*s13^6*s23^3 - 245215*s13^5*s23^4 - 
                 208308*s13^4*s23^5 - 57143*s13^3*s23^6 + 12857*s13^2*s23^7 + 
                 7365*s13*s23^8 + 235*s23^9) + s12^5*s13*(4050*s13^9 + 
                 7155*s13^8*s23 - 85648*s13^7*s23^2 - 278125*s13^6*s23^3 - 
                 307401*s13^5*s23^4 - 122826*s13^4*s23^5 + 7008*s13^3*s23^6 + 
                 12237*s13^2*s23^7 + 770*s13*s23^8 + 383*s23^9)) + 
             p2q^2*p3q^4*s12*(-45*s12^13*s23^2*(4*s13 + 3*s23) - 5*s13^7*
                s23^4*(s13 + s23)^3*(81*s13^2 - 42*s13*s23 - 46*s23^2) + 
               s12^12*(27*s13^4 + 153*s13^3*s23 + 463*s13^2*s23^2 + 
                 447*s13*s23^3 + 115*s23^4) - s12*s13^6*s23^3*(s13 + s23)^2*
                (1350*s13^4 + 1119*s13^3*s23 - 807*s13^2*s23^2 - 
                 52*s13*s23^3 + 159*s23^4) + s12^11*(3807*s13^5 + 
                 7623*s13^4*s23 + 4596*s13^3*s23^2 - 917*s13^2*s23^3 + 
                 73*s13*s23^4 + 905*s23^5) - s12^10*(4536*s13^6 + 
                 10935*s13^5*s23 + 6645*s13^4*s23^2 + 2304*s13^3*s23^3 + 
                 10662*s13^2*s23^4 + 7694*s13*s23^5 + 230*s23^6) - s12^9*
                (20520*s13^7 + 70623*s13^6*s23 + 113441*s13^5*s23^2 + 
                 90692*s13^4*s23^3 + 32688*s13^3*s23^4 + 18115*s13^2*s23^5 + 
                 16056*s13*s23^6 + 2945*s23^7) + s12^2*s13^5*s23^2*
                (-1080*s13^7 - 5001*s13^6*s23 - 6855*s13^5*s23^2 + 
                 468*s13^4*s23^3 + 13841*s13^3*s23^4 + 20339*s13^2*s23^5 + 
                 12896*s13*s23^6 + 2996*s23^7) + s12^3*s13^4*s23^2*
                (-6195*s13^7 - 10086*s13^6*s23 + 22623*s13^5*s23^2 + 
                 84396*s13^4*s23^3 + 108391*s13^3*s23^4 + 70801*s13^2*s23^5 + 
                 23798*s13*s23^6 + 3466*s23^7) - s12^8*(405*s13^8 + 
                 37431*s13^7*s23 + 115611*s13^6*s23^2 + 169670*s13^5*s23^3 + 
                 127813*s13^4*s23^4 + 36613*s13^3*s23^5 + 7459*s13^2*s23^6 + 
                 11759*s13*s23^7 + 2965*s23^8) + s12^4*s13^3*s23*
                (-7749*s13^8 - 5348*s13^7*s23 + 73150*s13^6*s23^2 + 
                 205443*s13^5*s23^3 + 261277*s13^4*s23^4 + 200938*s13^3*
                  s23^5 + 102126*s13^2*s23^6 + 31378*s13*s23^7 + 
                 3932*s23^8) + s12^7*(20007*s13^9 + 75924*s13^8*s23 + 
                 115453*s13^7*s23^2 + 90892*s13^6*s23^3 + 25943*s13^5*s23^4 - 
                 5670*s13^4*s23^5 + 5048*s13^3*s23^6 + 4656*s13^2*s23^7 - 
                 2549*s13*s23^8 - 905*s23^9) + s12^6*s13*(4482*s13^9 + 
                 73242*s13^8*s23 + 232497*s13^7*s23^2 + 365359*s13^6*s23^3 + 
                 365490*s13^5*s23^4 + 249469*s13^4*s23^5 + 113479*s13^3*
                  s23^6 + 31140*s13^2*s23^7 + 3796*s13*s23^8 + 294*s23^9) + 
               s12^5*s13^2*(-3726*s13^9 + 4356*s13^8*s23 + 104043*s13^7*
                  s23^2 + 291279*s13^6*s23^3 + 407511*s13^5*s23^4 + 
                 368611*s13^4*s23^5 + 233624*s13^3*s23^6 + 95579*s13^2*
                  s23^7 + 19352*s13*s23^8 + 514*s23^9)) + p2q^4*p3q^2*s13*
              (-135*s12^12*s23^2*(8*s13^2 + 10*s13*s23 + 3*s23^2) - 5*s13^7*
                s23^3*(s13 + s23)^4*(27*s13^2 - 131*s13*s23 + 181*s23^2) - 
               s12*s13^6*s23^2*(s13 + s23)^3*(180*s13^4 - 987*s13^3*s23 + 
                 2348*s13^2*s23^2 + 3431*s13*s23^3 - 294*s23^4) - 3*s12^11*
                (1242*s13^5 + 2583*s13^4*s23 + 2065*s13^3*s23^2 + 
                 1667*s13^2*s23^3 + 1273*s13*s23^4 + 335*s23^5) + s12^2*s13^5*
                s23^2*(s13 + s23)^2*(463*s13^5 - 1843*s13^4*s23 - 
                 7439*s13^3*s23^2 - 1394*s13^2*s23^3 + 2768*s13*s23^4 + 
                 514*s23^5) + s12^10*(4482*s13^6 + 4356*s13^5*s23 - 
                 5348*s13^4*s23^2 - 10086*s13^3*s23^3 - 6855*s13^2*s23^4 - 
                 2781*s13*s23^5 - 355*s23^6) + s12^3*s13^4*s23*(s13 + s23)^2*
                (153*s13^6 + 4290*s13^5*s23 - 11037*s13^4*s23^2 - 
                 14904*s13^3*s23^3 + 4232*s13^2*s23^4 + 11488*s13*s23^5 + 
                 3932*s23^6) + s12^9*(20007*s13^7 + 73242*s13^6*s23 + 
                 104043*s13^5*s23^2 + 73150*s13^4*s23^3 + 22623*s13^3*s23^4 + 
                 468*s13^2*s23^5 + 547*s13*s23^6 + 915*s23^7) + s12^8*
                (-405*s13^8 + 75924*s13^7*s23 + 232497*s13^6*s23^2 + 
                 291279*s13^5*s23^3 + 205443*s13^4*s23^4 + 84396*s13^3*
                  s23^5 + 13841*s13^2*s23^6 + 752*s13*s23^7 + 900*s23^8) + 
               s12^6*s13*(-4536*s13^9 - 70623*s13^8*s23 - 115611*s13^7*
                  s23^2 + 90892*s13^6*s23^3 + 365490*s13^5*s23^4 + 
                 368611*s13^4*s23^5 + 200938*s13^3*s23^6 + 70801*s13^2*
                  s23^7 + 12896*s13*s23^8 - 159*s23^9) + s12^7*
                (-20520*s13^9 - 37431*s13^8*s23 + 115453*s13^7*s23^2 + 
                 365359*s13^6*s23^3 + 407511*s13^5*s23^4 + 261277*s13^4*
                  s23^5 + 108391*s13^3*s23^6 + 20339*s13^2*s23^7 - 
                 266*s13*s23^8 + 230*s23^9) + s12^5*s13^2*(3807*s13^9 - 
                 10935*s13^8*s23 - 113441*s13^7*s23^2 - 169670*s13^6*s23^3 + 
                 25943*s13^5*s23^4 + 249469*s13^4*s23^5 + 233624*s13^3*
                  s23^6 + 102126*s13^2*s23^7 + 23798*s13*s23^8 + 
                 2996*s23^9) + s12^4*s13^3*(27*s13^9 + 7623*s13^8*s23 - 
                 6645*s13^7*s23^2 - 90692*s13^6*s23^3 - 127813*s13^5*s23^4 - 
                 5670*s13^4*s23^5 + 113479*s13^3*s23^6 + 95579*s13^2*s23^7 + 
                 31378*s13*s23^8 + 3466*s23^9)) + p2q^3*p3q^3*
              (5*s13^8*(27*s13 - 77*s23)*s23^4*(s13 + s23)^4 + 45*s12^13*
                s23^2*(16*s13^2 + 16*s13*s23 + 3*s23^2) + s12*s13^7*s23^3*
                (s13 + s23)^3*(720*s13^3 - 1357*s13^2*s23 - 606*s13*s23^2 + 
                 681*s23^3) + s12^2*s13^6*s23^2*(s13 + s23)^2*(720*s13^5 - 
                 541*s13^4*s23 - 979*s13^3*s23^2 + 3560*s13^2*s23^3 + 
                 1595*s13*s23^4 - 413*s23^5) + s12^12*(1188*s13^5 + 
                 1953*s13^4*s23 + 1091*s13^3*s23^2 + 899*s13^2*s23^3 + 
                 803*s13*s23^4 + 155*s23^5) - s12^11*(9288*s13^6 + 
                 21060*s13^5*s23 + 15323*s13^4*s23^2 + 2290*s13^3*s23^3 + 
                 1341*s13^2*s23^4 + 2517*s13*s23^5 + 730*s23^6) - s12^10*
                (11232*s13^7 + 46746*s13^6*s23 + 74882*s13^5*s23^2 + 
                 52807*s13^4*s23^3 + 8895*s13^3*s23^4 - 1061*s13^2*s23^5 + 
                 4488*s13*s23^6 + 1770*s23^7) + s12^3*s13^5*s23^2*
                (1091*s13^7 - 2290*s13^6*s23 - 8895*s13^5*s23^2 - 
                 1035*s13^4*s23^3 + 20858*s13^3*s23^4 + 32311*s13^2*s23^5 + 
                 21086*s13*s23^6 + 5154*s23^7) + s12^9*(21060*s13^8 + 
                 43524*s13^7*s23 + 27046*s13^6*s23^2 - 6941*s13^5*s23^3 - 
                 19881*s13^4*s23^4 - 1035*s13^3*s23^5 + 7736*s13^2*s23^6 - 
                 1132*s13*s23^7 - 1405*s23^8) + s12^4*s13^4*s23*(1953*s13^8 - 
                 15323*s13^7*s23 - 52807*s13^6*s23^2 - 19881*s13^5*s23^3 + 
                 102649*s13^4*s23^4 + 175617*s13^3*s23^5 + 127973*s13^2*
                  s23^6 + 45937*s13*s23^7 + 6462*s23^8) + s12^6*s13^2*
                (-9288*s13^9 - 46746*s13^8*s23 + 27046*s13^7*s23^2 + 
                 320558*s13^6*s23^3 + 564046*s13^5*s23^4 + 536272*s13^4*
                  s23^5 + 334799*s13^3*s23^6 + 127973*s13^2*s23^7 + 
                 21086*s13*s23^8 - 413*s23^9) + s12^8*(21060*s13^9 + 
                 134514*s13^8*s23 + 281588*s13^7*s23^2 + 320558*s13^6*s23^3 + 
                 237725*s13^5*s23^4 + 102649*s13^4*s23^5 + 20858*s13^3*
                  s23^6 + 6337*s13^2*s23^7 + 1437*s13*s23^8 - 385*s23^9) + 
               s12^7*s13*(-11232*s13^9 + 43524*s13^8*s23 + 281588*s13^7*
                  s23^2 + 531642*s13^6*s23^3 + 564046*s13^5*s23^4 + 
                 401635*s13^4*s23^5 + 175617*s13^3*s23^6 + 32311*s13^2*
                  s23^7 + 769*s13*s23^8 + 681*s23^9) + s12^5*s13^3*
                (1188*s13^9 - 21060*s13^8*s23 - 74882*s13^7*s23^2 - 
                 6941*s13^6*s23^3 + 237725*s13^5*s23^4 + 401635*s13^4*s23^5 + 
                 334799*s13^3*s23^6 + 166434*s13^2*s23^7 + 45937*s13*s23^8 + 
                 5154*s23^9))) + p1q^5*s23^2*(-(p2q^2*(s13 + s23)*(
                5*s13^5*s23^4*(s13 + s23)^3*(270*s13^2 - 16*s13*s23 - 
                  23*s23^2) + s12^10*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*
                   s23^2 + 105*s13*s23^3 - 20*s23^4) + s12*s13^4*s23^3*
                 (s13 + s23)^2*(2610*s13^4 + 4590*s13^3*s23 - 655*s13^2*
                   s23^2 - 1073*s13*s23^3 + 147*s23^4) + s12^9*(189*s13^5 + 
                  1206*s13^4*s23 + 1432*s13^3*s23^2 + 830*s13^2*s23^3 + 
                  95*s13*s23^4 - 195*s23^5) + s12^8*(486*s13^6 + 774*s13^5*
                   s23 + 1569*s13^4*s23^2 + 2636*s13^3*s23^3 + 1252*s13^2*
                   s23^4 - 733*s13*s23^5 - 580*s23^6) + s12^7*(594*s13^7 - 
                  3600*s13^6*s23 - 13461*s13^5*s23^2 - 12472*s13^4*s23^3 - 
                  1458*s13^3*s23^4 + 1190*s13^2*s23^5 - 1572*s13*s23^6 - 
                  770*s23^7) + s12^3*s13^2*s23^2*(1506*s13^7 + 1345*s13^6*
                   s23 - 15490*s13^5*s23^2 - 31489*s13^4*s23^3 - 17226*s13^3*
                   s23^4 - 646*s13^2*s23^5 + 303*s13*s23^6 - 317*s23^7) + 
                s12^2*s13^3*s23^2*(1080*s13^7 + 7351*s13^6*s23 + 10160*s13^5*
                   s23^2 - 1698*s13^4*s23^3 - 8094*s13^3*s23^4 - 1246*s13^2*
                   s23^5 + 944*s13*s23^6 - 317*s23^7) + s12^6*(351*s13^8 - 
                  2754*s13^7*s23 - 30384*s13^6*s23^2 - 59219*s13^5*s23^3 - 
                  38796*s13^4*s23^4 - 5732*s13^3*s23^5 + 1106*s13^2*s23^6 - 
                  943*s13*s23^7 - 480*s23^8) - s12^4*s13*s23*(54*s13^8 + 
                  1127*s13^7*s23 + 24826*s13^6*s23^2 + 69039*s13^5*s23^3 + 
                  63972*s13^4*s23^4 + 17471*s13^3*s23^5 - 1151*s13^2*s23^6 + 
                  462*s13*s23^7 - 147*s23^8) + s12^5*(81*s13^9 + 414*s13^8*
                   s23 - 15869*s13^7*s23^2 - 69668*s13^6*s23^3 - 92586*s13^5*
                   s23^4 - 42002*s13^4*s23^5 - 2485*s13^3*s23^6 + 395*s13^2*
                   s23^7 + 53*s13*s23^8 - 115*s23^9))) - p3q^2*(s12 + s23)*
              (-5*s13^5*s23^4*(s13 + s23)^4*(4*s13 + 23*s23) + 90*s12^10*
                s23^2*(12*s13^2 + 29*s13*s23 + 15*s23^2) + s12*s13^4*s23^3*
                (s13 + s23)^3*(105*s13^3 - 220*s13^2*s23 - 388*s13*s23^2 + 
                 147*s23^3) + s12^2*s13^3*s23^2*(s13 + s23)^2*(202*s13^5 + 
                 426*s13^4*s23 + 198*s13^3*s23^2 + 368*s13^2*s23^3 + 
                 172*s13*s23^4 - 317*s23^5) + s12^9*(81*s13^5 - 54*s13^4*
                  s23 + 1506*s13^3*s23^2 + 7351*s13^2*s23^3 + 9810*s13*
                  s23^4 + 3970*s23^5) + s12^8*(351*s13^6 + 414*s13^5*s23 - 
                 1127*s13^4*s23^2 + 1345*s13^3*s23^3 + 10160*s13^2*s23^4 + 
                 11135*s13*s23^5 + 3695*s23^6) + s12^7*(594*s13^7 - 
                 2754*s13^6*s23 - 15869*s13^5*s23^2 - 24826*s13^4*s23^3 - 
                 15490*s13^3*s23^4 - 1698*s13^2*s23^5 + 2207*s13*s23^6 + 
                 765*s23^7) + s12^6*(486*s13^8 - 3600*s13^7*s23 - 
                 30384*s13^6*s23^2 - 69668*s13^5*s23^3 - 69039*s13^4*s23^4 - 
                 31489*s13^3*s23^5 - 8094*s13^2*s23^6 - 2654*s13*s23^7 - 
                 425*s23^8) + s12^3*s13^2*s23*(54*s13^8 + 1432*s13^7*s23 + 
                 2636*s13^6*s23^2 - 1458*s13^5*s23^3 - 5732*s13^4*s23^4 - 
                 2485*s13^3*s23^5 + 1151*s13^2*s23^6 + 303*s13*s23^7 - 
                 317*s23^8) + s12^5*(189*s13^9 + 774*s13^8*s23 - 13461*s13^7*
                  s23^2 - 59219*s13^6*s23^3 - 92586*s13^5*s23^4 - 
                 63972*s13^4*s23^5 - 17226*s13^3*s23^6 - 1246*s13^2*s23^7 - 
                 779*s13*s23^8 - 115*s23^9) + s12^4*s13*(27*s13^9 + 
                 1206*s13^8*s23 + 1569*s13^7*s23^2 - 12472*s13^6*s23^3 - 
                 38796*s13^5*s23^4 - 42002*s13^4*s23^5 - 17471*s13^3*s23^6 - 
                 646*s13^2*s23^7 + 944*s13*s23^8 + 147*s23^9)) - 
             p2q*p3q*(5*s13^5*s23^4*(s13 + s23)^4*(108*s13^2 + 7*s13*s23 - 
                 19*s23^2) + 45*s12^11*s23^2*(12*s13^2 + 25*s13*s23 + 
                 12*s23^2) + s12*s13^4*s23^3*(s13 + s23)^3*(1125*s13^4 + 
                 2317*s13^3*s23 - 20*s13^2*s23^2 - 865*s13*s23^3 + 
                 357*s23^4) + s12^10*(108*s13^5 + 234*s13^4*s23 + 
                 1249*s13^3*s23^2 + 4580*s13^2*s23^3 + 5692*s13*s23^4 + 
                 2195*s23^5) + s12^2*s13^3*s23^2*(s13 + s23)^2*(540*s13^6 + 
                 3500*s13^5*s23 + 2625*s13^4*s23^2 - 3270*s13^3*s23^3 - 
                 877*s13^2*s23^4 + 1652*s13*s23^5 - 706*s23^6) + s12^9*
                (540*s13^6 + 2160*s13^5*s23 + 2267*s13^4*s23^2 + 3691*s13^3*
                  s23^3 + 10165*s13^2*s23^4 + 10306*s13*s23^5 + 3285*s23^6) + 
               s12^8*(1080*s13^7 - 2574*s13^6*s23 - 16964*s13^5*s23^2 - 
                 24961*s13^4*s23^3 - 11337*s13^3*s23^4 + 5480*s13^2*s23^5 + 
                 7151*s13*s23^6 + 1990*s23^7) + s12^3*s13^2*s23^2*
                (1249*s13^8 + 3691*s13^7*s23 - 11337*s13^6*s23^2 - 
                 49092*s13^5*s23^3 - 58453*s13^4*s23^4 - 25389*s13^3*s23^5 - 
                 2165*s13^2*s23^6 - 622*s13*s23^7 - 706*s23^8) + s12^7*
                (1080*s13^8 - 9000*s13^7*s23 - 65184*s13^6*s23^2 - 
                 138371*s13^5*s23^3 - 127838*s13^4*s23^4 - 49092*s13^3*
                  s23^5 - 4792*s13^2*s23^6 + 19*s13*s23^7 + 110*s23^8) + 
               s12^6*(540*s13^9 - 2574*s13^8*s23 - 65184*s13^7*s23^2 - 
                 224080*s13^6*s23^3 - 320020*s13^5*s23^4 - 214295*s13^4*
                  s23^5 - 58453*s13^3*s23^6 - 3372*s13^2*s23^7 - 
                 1544*s13*s23^8 - 345*s23^9) + s12^4*s13*s23*(234*s13^9 + 
                 2267*s13^8*s23 - 24961*s13^7*s23^2 - 127838*s13^6*s23^3 - 
                 214295*s13^5*s23^4 - 157151*s13^4*s23^5 - 45708*s13^3*
                  s23^6 - 2165*s13^2*s23^7 + 240*s13*s23^8 + 357*s23^9) + 
               s12^5*(108*s13^10 + 2160*s13^9*s23 - 16964*s13^8*s23^2 - 
                 138371*s13^7*s23^3 - 320020*s13^6*s23^4 - 331132*s13^5*
                  s23^5 - 157151*s13^4*s23^6 - 25389*s13^3*s23^7 + 
                 1721*s13^2*s23^8 + 206*s13*s23^9 - 95*s23^10))) + 
           p1q^2*(p2q^5*s13^2*(5*s13^6*s23^3*(s13 + s23)^4*(27*s13^2 - 
                 4*s13*s23 - 254*s23^2) + s12*s13^6*s23^2*(s13 + s23)^3*
                (180*s13^3 + 393*s13^2*s23 - 2392*s13*s23^2 - 3620*s23^3) + 
               s12^10*(-27*s13^5 - 81*s13^4*s23 - 76*s13^3*s23^2 + 
                 188*s13^2*s23^3 + 365*s13*s23^4 + 155*s23^5) + s12^2*s13^4*
                s23^2*(s13 + s23)^2*(301*s13^5 - 972*s13^4*s23 - 5107*s13^3*
                  s23^2 - 1379*s13^2*s23^3 + 2967*s13*s23^4 + 712*s23^5) + 
               s12^9*(-1404*s13^6 - 2403*s13^5*s23 - 61*s13^4*s23^2 + 
                 2319*s13^3*s23^3 + 2639*s13^2*s23^4 + 1783*s13*s23^5 + 
                 525*s23^6) + s12^8*(-4023*s13^7 - 11646*s13^6*s23 - 
                 6224*s13^5*s23^2 + 10850*s13^4*s23^3 + 16887*s13^3*s23^4 + 
                 10605*s13^2*s23^5 + 3814*s13*s23^6 + 645*s23^7) + s12^7*
                (-3888*s13^8 - 25758*s13^7*s23 - 32243*s13^6*s23^2 + 
                 22363*s13^5*s23^3 + 68716*s13^4*s23^4 + 50637*s13^3*s23^5 + 
                 18771*s13^2*s23^6 + 4449*s13*s23^7 + 335*s23^8) + s12^3*
                s13^3*s23*(-45*s13^8 - 839*s13^7*s23 - 11537*s13^6*s23^2 - 
                 21160*s13^5*s23^3 + 14336*s13^4*s23^4 + 67335*s13^3*s23^5 + 
                 62100*s13^2*s23^6 + 21430*s13*s23^7 + 1912*s23^8) + s12^4*
                s13^2*(27*s13^9 - 189*s13^8*s23 - 17482*s13^7*s23^2 - 
                 55253*s13^6*s23^3 - 12857*s13^5*s23^4 + 136510*s13^4*s23^5 + 
                 195440*s13^3*s23^6 + 102247*s13^2*s23^7 + 17905*s13*s23^8 - 
                 282*s23^9) + s12^6*(-1161*s13^9 - 25884*s13^8*s23 - 
                 68103*s13^7*s23^2 - 10245*s13^6*s23^3 + 138032*s13^5*s23^4 + 
                 167191*s13^4*s23^5 + 74572*s13^3*s23^6 + 14981*s13^2*s23^7 + 
                 2763*s13*s23^8 + 60*s23^9) + s12^5*s13*(108*s13^9 - 
                 9594*s13^8*s23 - 58621*s13^7*s23^2 - 69907*s13^6*s23^3 + 
                 88943*s13^5*s23^4 + 249707*s13^4*s23^5 + 190744*s13^3*
                  s23^6 + 54340*s13^2*s23^7 + 4082*s13*s23^8 + 710*s23^9)) + 
             p3q^5*s12^2*(45*s12^12*s23^2*(4*s13 + 3*s23) + 5*s13^6*s23^5*
                (s13 + s23)^3*(31*s13 + 12*s23) + s12*s13^5*s23^4*
                (s13 + s23)^2*(365*s13^3 + 1053*s13^2*s23 + 1343*s13*s23^2 + 
                 710*s23^3) + s12^11*(27*s13^4 - 45*s13^3*s23 + 301*s13^2*
                  s23^2 + 933*s13*s23^3 + 520*s23^4) + s12^10*(108*s13^5 - 
                 189*s13^4*s23 - 839*s13^3*s23^2 - 370*s13^2*s23^3 - 
                 673*s13*s23^4 - 540*s23^5) + s12^2*s13^4*s23^3*(188*s13^6 + 
                 2639*s13^5*s23 + 10605*s13^4*s23^2 + 18771*s13^3*s23^3 + 
                 14981*s13^2*s23^4 + 4082*s13*s23^5 - 282*s23^6) - s12^9*
                (1161*s13^6 + 9594*s13^5*s23 + 17482*s13^4*s23^2 + 
                 11537*s13^3*s23^3 + 6750*s13^2*s23^4 + 9437*s13*s23^5 + 
                 4660*s23^6) + s12^3*s13^3*s23^2*(-76*s13^7 + 2319*s13^6*
                  s23 + 16887*s13^5*s23^2 + 50637*s13^4*s23^3 + 74572*s13^3*
                  s23^4 + 54340*s13^2*s23^5 + 17905*s13*s23^6 + 1912*s23^7) - 
               s12^8*(3888*s13^7 + 25884*s13^6*s23 + 58621*s13^5*s23^2 + 
                 55253*s13^4*s23^3 + 21160*s13^3*s23^4 + 12565*s13^2*s23^5 + 
                 17643*s13*s23^6 + 7565*s23^7) + s12^4*s13^2*s23*
                (-81*s13^8 - 61*s13^7*s23 + 10850*s13^6*s23^2 + 68716*s13^5*
                  s23^3 + 167191*s13^4*s23^4 + 190744*s13^3*s23^5 + 
                 102247*s13^2*s23^6 + 21430*s13*s23^7 + 712*s23^8) + s12^5*
                s13^2*(-27*s13^8 - 2403*s13^7*s23 - 6224*s13^6*s23^2 + 
                 22363*s13^5*s23^3 + 138032*s13^4*s23^4 + 249707*s13^3*
                  s23^5 + 195440*s13^2*s23^6 + 62100*s13*s23^7 + 
                 4391*s23^8) - s12^7*(4023*s13^8 + 25758*s13^7*s23 + 
                 68103*s13^6*s23^2 + 69907*s13^5*s23^3 + 12857*s13^4*s23^4 - 
                 14336*s13^3*s23^5 + 4898*s13^2*s23^6 + 13252*s13*s23^7 + 
                 5100*s23^8) - s12^6*(1404*s13^9 + 11646*s13^8*s23 + 
                 32243*s13^7*s23^2 + 10245*s13^6*s23^3 - 88943*s13^5*s23^4 - 
                 136510*s13^4*s23^5 - 67335*s13^3*s23^6 - 5267*s13^2*s23^7 + 
                 3620*s13*s23^8 + 1270*s23^9)) + p2q^3*p3q^2*(5*s13^7*s23^4*
                (s13 + s23)^4*(77*s13^2 - 250*s13*s23 + 223*s23^2) + s12*
                s13^6*s23^3*(s13 + s23)^3*(105*s13^4 - 1936*s13^3*s23 + 
                 679*s13^2*s23^2 + 3312*s13*s23^3 - 248*s23^4) - s12^12*
                (81*s13^5 + 189*s13^4*s23 - 420*s13^3*s23^2 + 427*s13^2*
                  s23^3 + 1125*s13*s23^4 + 385*s23^5) - s12^2*s13^5*s23^2*
                (s13 + s23)^2*(518*s13^6 + 2002*s13^5*s23 - 12*s13^4*s23^2 - 
                 6504*s13^3*s23^3 - 54*s13^2*s23^4 + 2283*s13*s23^5 - 
                 741*s23^6) - s12^11*(1458*s13^6 + 7884*s13^5*s23 + 
                 10230*s13^4*s23^2 + 2243*s13^3*s23^3 + 643*s13^2*s23^4 + 
                 3129*s13*s23^5 + 1175*s23^6) + s12^10*(4104*s13^7 + 
                 10575*s13^6*s23 + 1166*s13^5*s23^2 - 9815*s13^4*s23^3 - 
                 1649*s13^3*s23^4 + 1604*s13^2*s23^5 - 2032*s13*s23^6 - 
                 850*s23^7) + s12^9*(16254*s13^8 + 72603*s13^7*s23 + 
                 139535*s13^6*s23^2 + 141278*s13^5*s23^3 + 75480*s13^4*
                  s23^4 + 19517*s13^3*s23^5 + 2821*s13^2*s23^6 + 
                 1432*s13*s23^7 + 650*s23^8) + s12^3*s13^4*s23*(54*s13^9 - 
                 548*s13^8*s23 - 15925*s13^7*s23^2 - 30241*s13^6*s23^3 + 
                 5567*s13^5*s23^4 + 53057*s13^4*s23^5 + 40600*s13^3*s23^6 + 
                 1663*s13^2*s23^7 - 8882*s13*s23^8 - 2517*s23^9) + s12^8*
                (10638*s13^9 + 97830*s13^8*s23 + 272374*s13^7*s23^2 + 
                 415731*s13^6*s23^3 + 397175*s13^5*s23^4 + 214577*s13^4*
                  s23^5 + 47085*s13^3*s23^6 + 747*s13^2*s23^7 + 2073*s13*
                  s23^8 + 1075*s23^9) + s12^4*s13^3*(27*s13^10 + 135*s13^9*
                  s23 - 33892*s13^8*s23^2 - 93450*s13^7*s23^3 - 6451*s13^6*
                  s23^4 + 218978*s13^5*s23^5 + 266712*s13^4*s23^6 + 
                 97507*s13^3*s23^7 - 17848*s13^2*s23^8 - 16501*s13*s23^9 - 
                 1479*s23^10) + s12^6*s13*(-4320*s13^10 - 33615*s13^9*s23 + 
                 30306*s13^8*s23^2 + 337225*s13^7*s23^3 + 645865*s13^6*
                  s23^4 + 619897*s13^5*s23^5 + 338387*s13^4*s23^6 + 
                 98767*s13^3*s23^7 + 13337*s13^2*s23^8 + 1380*s13*s23^9 + 
                 4*s23^10) + s12^7*(-4374*s13^10 + 34146*s13^9*s23 + 
                 230914*s13^8*s23^2 + 511256*s13^7*s23^3 + 640035*s13^6*
                  s23^4 + 509691*s13^5*s23^5 + 232285*s13^4*s23^6 + 
                 42978*s13^3*s23^7 + 613*s13^2*s23^8 + 617*s13*s23^9 + 
                 365*s23^10) + s12^5*s13^2*(-54*s13^10 - 24183*s13^9*s23 - 
                 89815*s13^8*s23^2 + 415*s13^7*s23^3 + 351216*s13^6*s23^4 + 
                 558737*s13^5*s23^5 + 363677*s13^4*s23^6 + 86057*s13^3*
                  s23^7 - 7859*s13^2*s23^8 - 2538*s13*s23^9 + 513*s23^10)) + 
             p2q^4*p3q*s13*(5*s13^6*s23^3*(s13 + s23)^4*(27*s13^3 + 
                 100*s13^2*s23 - 400*s13*s23^2 + 150*s23^3) + s12*s13^5*s23^2*
                (s13 + s23)^3*(180*s13^5 + 678*s13^4*s23 - 2060*s13^3*s23^2 - 
                 1616*s13^2*s23^3 + 3045*s13*s23^4 - 157*s23^5) + s12^11*
                (81*s13^5 + 216*s13^4*s23 - 6*s13^3*s23^2 - s13^2*s23^3 + 
                 375*s13*s23^4 + 230*s23^5) - s12^2*s13^4*s23^2*(s13 + s23)^2*
                (217*s13^6 + 1548*s13^5*s23 + 530*s13^4*s23^2 - 9472*s13^3*
                  s23^3 - 5628*s13^2*s23^4 + 2107*s13*s23^5 + 99*s23^6) + 
               s12^10*(2862*s13^6 + 10143*s13^5*s23 + 14764*s13^4*s23^2 + 
                 9385*s13^3*s23^3 + 2473*s13^2*s23^4 + 1056*s13*s23^5 + 
                 650*s23^6) + s12^9*(4077*s13^7 + 25164*s13^6*s23 + 
                 63883*s13^5*s23^2 + 81423*s13^4*s23^3 + 49222*s13^3*s23^4 + 
                 10603*s13^2*s23^5 + 393*s13*s23^6 + 665*s23^7) + s12^8*
                (-4158*s13^8 + 12636*s13^7*s23 + 87170*s13^6*s23^2 + 
                 187635*s13^5*s23^3 + 208909*s13^4*s23^4 + 113966*s13^3*
                  s23^5 + 20352*s13^2*s23^6 - 1409*s13*s23^7 + 395*s23^8) + 
               s12^3*s13^3*s23*(9*s13^9 - 1906*s13^8*s23 - 23276*s13^7*
                  s23^2 - 36259*s13^6*s23^3 + 32678*s13^5*s23^4 + 
                 113227*s13^4*s23^5 + 88307*s13^3*s23^6 + 21817*s13^2*s23^7 - 
                 1360*s13*s23^8 - 521*s23^9) + s12^7*(-9477*s13^9 - 
                 36648*s13^8*s23 + 19520*s13^7*s23^2 + 221237*s13^6*s23^3 + 
                 380917*s13^5*s23^4 + 325434*s13^4*s23^5 + 143062*s13^3*
                  s23^6 + 21244*s13^2*s23^7 - 1975*s13*s23^8 + 245*s23^9) + 
               s12^5*s13*(135*s13^10 - 25677*s13^9*s23 - 135527*s13^8*s23^2 - 
                 131450*s13^7*s23^3 + 241648*s13^6*s23^4 + 584350*s13^5*
                  s23^5 + 459120*s13^4*s23^6 + 162461*s13^3*s23^7 + 
                 27941*s13^2*s23^8 + 3566*s13*s23^9 - 327*s23^10) + s12^6*
                (-3942*s13^10 - 59850*s13^9*s23 - 113973*s13^8*s23^2 + 
                 87845*s13^7*s23^3 + 458115*s13^6*s23^4 + 541955*s13^5*
                  s23^5 + 311799*s13^4*s23^6 + 95560*s13^3*s23^7 + 
                 12070*s13^2*s23^8 - 1181*s13*s23^9 + 95*s23^10) + s12^4*
                s13^2*(54*s13^10 + 135*s13^9*s23 - 41600*s13^8*s23^2 - 
                 128197*s13^7*s23^3 - 37081*s13^6*s23^4 + 264918*s13^5*
                  s23^5 + 371240*s13^4*s23^6 + 188118*s13^3*s23^7 + 
                 32711*s13^2*s23^8 + 707*s13*s23^9 + 517*s23^10)) + 
             p2q*p3q^4*s12*(45*s12^13*s23^2*(4*s13 + 3*s23) + 5*s13^6*s23^5*
                (s13 + s23)^3*(46*s13^2 - 8*s13*s23 + 19*s23^2) + s12*s13^5*
                s23^4*(s13 + s23)^2*(375*s13^4 + 306*s13^3*s23 - 594*s13^2*
                  s23^2 - 527*s13*s23^3 - 327*s23^4) + s12^12*(54*s13^4 + 
                 9*s13^3*s23 - 217*s13^2*s23^2 + 1218*s13*s23^3 + 
                 1040*s23^4) + s12^11*(135*s13^5 + 135*s13^4*s23 - 
                 1906*s13^3*s23^2 - 1982*s13^2*s23^3 + 514*s13*s23^4 + 
                 810*s23^5) - s12^10*(3942*s13^6 + 25677*s13^5*s23 + 
                 41600*s13^4*s23^2 + 23276*s13^3*s23^3 + 3843*s13^2*s23^4 + 
                 5582*s13*s23^5 + 3710*s23^6) + s12^2*s13^4*s23^3*
                (-s13^7 + 2473*s13^6*s23 + 10603*s13^5*s23^2 + 20352*s13^4*
                  s23^3 + 21244*s13^3*s23^4 + 12070*s13^2*s23^5 + 
                 3566*s13*s23^6 + 517*s23^7) - s12^9*(9477*s13^7 + 
                 59850*s13^6*s23 + 135527*s13^5*s23^2 + 128197*s13^4*s23^3 + 
                 36259*s13^3*s23^4 - 6864*s13^2*s23^5 + 7305*s13*s23^6 + 
                 6865*s23^7) + s12^3*s13^3*s23^2*(-6*s13^8 + 9385*s13^7*s23 + 
                 49222*s13^6*s23^2 + 113966*s13^5*s23^3 + 143062*s13^4*
                  s23^4 + 95560*s13^3*s23^5 + 27941*s13^2*s23^6 + 
                 707*s13*s23^7 - 521*s23^8) - s12^8*(4158*s13^8 + 
                 36648*s13^7*s23 + 113973*s13^6*s23^2 + 131450*s13^5*s23^3 + 
                 37081*s13^4*s23^4 - 32678*s13^3*s23^5 - 24042*s13^2*s23^6 - 
                 2070*s13*s23^7 + 3000*s23^8) + s12^4*s13^2*s23*(216*s13^9 + 
                 14764*s13^8*s23 + 81423*s13^7*s23^2 + 208909*s13^6*s23^3 + 
                 325434*s13^5*s23^4 + 311799*s13^4*s23^5 + 162461*s13^3*
                  s23^6 + 32711*s13^2*s23^7 - 1360*s13*s23^8 - 99*s23^9) + 
               s12^7*(4077*s13^9 + 12636*s13^8*s23 + 19520*s13^7*s23^2 + 
                 87845*s13^6*s23^3 + 241648*s13^5*s23^4 + 264918*s13^4*
                  s23^5 + 113227*s13^3*s23^6 + 18621*s13^2*s23^7 + 
                 7048*s13*s23^8 + 1000*s23^9) + s12^5*s13*(81*s13^10 + 
                 10143*s13^9*s23 + 63883*s13^8*s23^2 + 187635*s13^7*s23^3 + 
                 380917*s13^6*s23^4 + 541955*s13^5*s23^5 + 459120*s13^4*
                  s23^6 + 188118*s13^3*s23^7 + 21817*s13^2*s23^8 - 
                 2305*s13*s23^9 - 157*s23^10) + s12^6*(2862*s13^10 + 
                 25164*s13^9*s23 + 87170*s13^8*s23^2 + 221237*s13^7*s23^3 + 
                 458115*s13^6*s23^4 + 584350*s13^5*s23^5 + 371240*s13^4*
                  s23^6 + 88307*s13^3*s23^7 + 1315*s13^2*s23^8 + 
                 2574*s13*s23^9 + 750*s23^10)) + p2q^2*p3q^3*
              (-5*s13^7*(77*s13 - 73*s23)*s23^5*(s13 + s23)^4 - s12*s13^6*
                s23^4*(s13 + s23)^3*(1125*s13^3 - 246*s13^2*s23 - 
                 605*s13*s23^2 - 4*s23^3) + s12^13*(27*s13^4 + 54*s13^3*s23 - 
                 518*s13^2*s23^2 + 105*s13*s23^3 + 385*s23^4) - s12^2*s13^5*
                s23^3*(s13 + s23)^2*(427*s13^5 - 211*s13^4*s23 - 1609*s13^3*
                  s23^2 + 608*s13^2*s23^3 - 354*s13*s23^4 - 513*s23^5) - 
               s12^12*(54*s13^5 - 135*s13^4*s23 + 548*s13^3*s23^2 + 
                 3038*s13^2*s23^3 + 1621*s13*s23^4 - 290*s23^5) - s12^11*
                (4320*s13^6 + 24183*s13^5*s23 + 33892*s13^4*s23^2 + 
                 15925*s13^3*s23^3 + 4510*s13^2*s23^4 + 4814*s13*s23^5 + 
                 1575*s23^6) - s12^10*(4374*s13^7 + 33615*s13^6*s23 + 
                 89815*s13^5*s23^2 + 93450*s13^4*s23^3 + 30241*s13^3*s23^4 - 
                 4526*s13^2*s23^5 + 354*s13*s23^6 + 1500*s23^7) + s12^3*s13^4*
                s23^2*(420*s13^8 - 2243*s13^7*s23 - 1649*s13^6*s23^2 + 
                 19517*s13^5*s23^3 + 47085*s13^4*s23^4 + 42978*s13^3*s23^5 + 
                 13337*s13^2*s23^6 - 2538*s13*s23^7 - 1479*s23^8) + s12^9*
                (10638*s13^8 + 34146*s13^7*s23 + 30306*s13^6*s23^2 + 
                 415*s13^5*s23^3 - 6451*s13^4*s23^4 + 5567*s13^3*s23^5 + 
                 13074*s13^2*s23^6 + 9789*s13*s23^7 + 2075*s23^8) - s12^4*
                s13^3*s23*(189*s13^9 + 10230*s13^8*s23 + 9815*s13^7*s23^2 - 
                 75480*s13^6*s23^3 - 214577*s13^5*s23^4 - 232285*s13^4*
                  s23^5 - 98767*s13^3*s23^6 + 7859*s13^2*s23^7 + 16501*s13*
                  s23^8 + 2517*s23^9) + s12^8*(16254*s13^9 + 97830*s13^8*
                  s23 + 230914*s13^7*s23^2 + 337225*s13^6*s23^3 + 
                 351216*s13^5*s23^4 + 218978*s13^4*s23^5 + 53057*s13^3*
                  s23^6 + 4329*s13^2*s23^7 + 9871*s13*s23^8 + 3210*s23^9) + 
               s12^6*s13*(-1458*s13^10 + 10575*s13^9*s23 + 139535*s13^8*
                  s23^2 + 415731*s13^7*s23^3 + 640035*s13^6*s23^4 + 
                 619897*s13^5*s23^5 + 363677*s13^4*s23^6 + 97507*s13^3*
                  s23^7 + 1663*s13^2*s23^8 - 801*s13*s23^9 - 248*s23^10) + 
               s12^5*s13^2*(-81*s13^10 - 7884*s13^9*s23 + 1166*s13^8*s23^2 + 
                 141278*s13^7*s23^3 + 397175*s13^6*s23^4 + 509691*s13^5*
                  s23^5 + 338387*s13^4*s23^6 + 86057*s13^3*s23^7 - 
                 17848*s13^2*s23^8 - 8882*s13*s23^9 + 741*s23^10) + s12^7*
                (4104*s13^10 + 72603*s13^9*s23 + 272374*s13^8*s23^2 + 
                 511256*s13^7*s23^3 + 645865*s13^6*s23^4 + 558737*s13^5*
                  s23^5 + 266712*s13^4*s23^6 + 40600*s13^3*s23^7 - 
                 3771*s13^2*s23^8 + 2568*s13*s23^9 + 1115*s23^10))) + 
           p1q^4*s23*(p2q^3*(s13 + s23)*(5*s13^6*s23^4*(s13 + s23)^3*
                (270*s13^2 - 24*s13*s23 - 119*s23^2) + 5*s12*s13^5*s23^3*
                (s13 + s23)^2*(468*s13^4 + 870*s13^3*s23 - 432*s13^2*s23^2 - 
                 519*s13*s23^3 + 100*s23^4) + s12^10*(54*s13^5 + 387*s13^4*
                  s23 + 107*s13^3*s23^2 - 226*s13^2*s23^3 - 190*s13*s23^4 - 
                 115*s23^5) + s12^9*(297*s13^6 + 936*s13^5*s23 - 424*s13^4*
                  s23^2 - 2262*s13^3*s23^3 - 1592*s13^2*s23^4 - 938*s13*
                  s23^5 - 460*s23^6) + s12^2*s13^4*s23^2*(720*s13^7 + 
                 5919*s13^6*s23 + 6514*s13^5*s23^2 - 9279*s13^4*s23^3 - 
                 14659*s13^3*s23^4 - 1978*s13^2*s23^5 + 1209*s13*s23^6 - 
                 878*s23^7) + 2*s12^3*s13^3*s23^2*(438*s13^7 - 717*s13^6*
                  s23 - 15401*s13^5*s23^2 - 29808*s13^4*s23^3 - 16541*s13^3*
                  s23^4 - 212*s13^2*s23^5 + 539*s13*s23^6 - 428*s23^7) + 2*
                s12^8*(324*s13^7 - 2376*s13^6*s23 - 5700*s13^5*s23^2 - 
                 6047*s13^4*s23^3 - 4540*s13^3*s23^4 - 2179*s13^2*s23^5 - 
                 926*s13*s23^6 - 345*s23^7) + s12^7*(702*s13^8 - 11367*s13^7*
                  s23 - 50016*s13^6*s23^2 - 62692*s13^5*s23^3 - 31495*s13^4*
                  s23^4 - 10579*s13^3*s23^5 - 5957*s13^2*s23^6 - 
                 1828*s13*s23^7 - 460*s23^8) + s12^4*s13^2*s23*(18*s13^8 - 
                 1654*s13^7*s23 - 46707*s13^6*s23^2 - 136847*s13^5*s23^3 - 
                 129915*s13^4*s23^4 - 31467*s13^3*s23^5 + 8128*s13^2*s23^6 + 
                 482*s13*s23^7 - 80*s23^8) + s12^5*s13*(81*s13^9 + 
                 567*s13^8*s23 - 29623*s13^7*s23^2 - 143024*s13^6*s23^3 - 
                 203616*s13^5*s23^4 - 96694*s13^4*s23^5 - 684*s13^3*s23^6 + 
                 3939*s13^2*s23^7 - 1273*s13*s23^8 - 178*s23^9) + s12^6*
                (378*s13^9 - 5517*s13^8*s23 - 68094*s13^7*s23^2 - 
                 150562*s13^6*s23^3 - 116820*s13^5*s23^4 - 27148*s13^4*
                  s23^5 - 1267*s13^3*s23^6 - 4158*s13^2*s23^7 - 902*s13*
                  s23^8 - 115*s23^9)) + p3q^3*(s12 + s23)*(-115*s13^6*s23^5*
                (s13 + s23)^4 - 2*s12*s13^5*s23^4*(s13 + s23)^4*(95*s13 + 
                 89*s23) + 90*s12^11*s23^2*(8*s13^2 + 26*s13*s23 + 
                 15*s23^2) - s12^2*s13^4*s23^3*(s13 + s23)^2*(226*s13^4 + 
                 1140*s13^3*s23 + 1852*s13^2*s23^2 + 1113*s13*s23^3 + 
                 80*s23^4) + 3*s12^10*(27*s13^5 + 6*s13^4*s23 + 292*s13^3*
                  s23^2 + 1973*s13^2*s23^3 + 3010*s13*s23^4 + 1310*s23^5) + 
               s12^9*(378*s13^6 + 567*s13^5*s23 - 1654*s13^4*s23^2 - 
                 1434*s13^3*s23^3 + 6514*s13^2*s23^4 + 8880*s13*s23^5 + 
                 3095*s23^6) + s12^3*s13^3*s23^2*(107*s13^7 - 2262*s13^6*
                  s23 - 9080*s13^5*s23^2 - 10579*s13^4*s23^3 - 1267*s13^3*
                  s23^4 + 3939*s13^2*s23^5 + 482*s13*s23^6 - 856*s23^7) + 
               s12^8*(702*s13^7 - 5517*s13^6*s23 - 29623*s13^5*s23^2 - 
                 46707*s13^4*s23^3 - 30802*s13^3*s23^4 - 9279*s13^2*s23^5 - 
                 2565*s13*s23^6 - 795*s23^7) + s12^7*(648*s13^8 - 
                 11367*s13^7*s23 - 68094*s13^6*s23^2 - 143024*s13^5*s23^3 - 
                 136847*s13^4*s23^4 - 59616*s13^3*s23^5 - 14659*s13^2*s23^6 - 
                 6850*s13*s23^7 - 1905*s23^8) + s12^4*s13^2*s23*(387*s13^8 - 
                 424*s13^7*s23 - 12094*s13^6*s23^2 - 31495*s13^5*s23^3 - 
                 27148*s13^4*s23^4 - 684*s13^3*s23^5 + 8128*s13^2*s23^6 + 
                 1078*s13*s23^7 - 878*s23^8) + s12^6*(297*s13^9 - 
                 4752*s13^8*s23 - 50016*s13^7*s23^2 - 150562*s13^6*s23^3 - 
                 203616*s13^5*s23^4 - 129915*s13^4*s23^5 - 33082*s13^3*
                  s23^6 - 1978*s13^2*s23^7 - 1595*s13*s23^8 - 595*s23^9) + 
               s12^5*s13*(54*s13^9 + 936*s13^8*s23 - 11400*s13^7*s23^2 - 
                 62692*s13^6*s23^3 - 116820*s13^5*s23^4 - 96694*s13^4*s23^5 - 
                 31467*s13^3*s23^6 - 424*s13^2*s23^7 + 1209*s13*s23^8 + 
                 500*s23^9)) + p2q^2*p3q*(5*s13^5*s23^4*(s13 + s23)^4*
                (162*s13^3 + 72*s13^2*s23 - 130*s13*s23^2 + 23*s23^3) + s12*
                s13^4*s23^3*(s13 + s23)^3*(1485*s13^5 + 2753*s13^4*s23 - 
                 1140*s13^3*s23^2 - 1671*s13^2*s23^3 + 1300*s13*s23^4 - 
                 147*s23^5) + s12^11*(54*s13^5 + 189*s13^4*s23 - 154*s13^3*
                  s23^2 - 444*s13^2*s23^3 - 85*s13*s23^4 + 75*s23^5) + s12^10*
                (324*s13^6 + 2529*s13^5*s23 + 3666*s13^4*s23^2 - 223*s13^3*
                  s23^3 - 2871*s13^2*s23^4 - 1547*s13*s23^5 - 275*s23^6) + 
               s12^9*(891*s13^7 - 2646*s13^6*s23 - 14568*s13^5*s23^2 - 
                 18748*s13^4*s23^3 - 10725*s13^3*s23^4 - 6496*s13^2*s23^5 - 
                 5373*s13*s23^6 - 1735*s23^7) + s12^2*s13^3*s23^2*
                (s13 + s23)^2*(540*s13^7 + 2406*s13^6*s23 - 2196*s13^5*
                  s23^2 - 8174*s13^4*s23^3 + 2007*s13^3*s23^4 + 3949*s13^2*
                  s23^5 - 1968*s13*s23^6 + 317*s23^7) + s12^8*(1404*s13^8 - 
                 22635*s13^7*s23 - 106177*s13^6*s23^2 - 175490*s13^5*s23^3 - 
                 127583*s13^4*s23^4 - 34198*s13^3*s23^5 - 4056*s13^2*s23^6 - 
                 7029*s13*s23^7 - 2690*s23^8) + s12^7*(1296*s13^9 - 
                 29187*s13^8*s23 - 204243*s13^7*s23^2 - 472966*s13^6*s23^3 - 
                 501606*s13^5*s23^4 - 240516*s13^4*s23^5 - 33223*s13^3*
                  s23^6 + 3502*s13^2*s23^7 - 3191*s13*s23^8 - 1535*s23^9) + 
               s12^3*s13^2*s23^2*(389*s13^9 - 3839*s13^8*s23 - 48035*s13^7*
                  s23^2 - 125740*s13^6*s23^3 - 126818*s13^5*s23^4 - 
                 43666*s13^4*s23^5 + 3739*s13^3*s23^6 + 1436*s13^2*s23^7 - 
                 767*s13*s23^8 + 317*s23^9) + s12^4*s13*s23*(306*s13^10 + 
                 1149*s13^9*s23 - 72316*s13^8*s23^2 - 318691*s13^7*s23^3 - 
                 510798*s13^6*s23^4 - 355075*s13^5*s23^5 - 81598*s13^4*
                  s23^6 + 10641*s13^3*s23^7 + 2417*s13^2*s23^8 - 
                 320*s13*s23^9 - 147*s23^10) + s12^6*(648*s13^10 - 
                 8856*s13^9*s23 - 167677*s13^8*s23^2 - 591550*s13^7*s23^3 - 
                 891598*s13^6*s23^4 - 639855*s13^5*s23^5 - 187107*s13^4*
                  s23^6 - 1779*s13^3*s23^7 + 3925*s13^2*s23^8 + 291*s13*
                  s23^9 - 115*s23^10) + s12^5*(135*s13^11 + 2988*s13^10*s23 - 
                 46521*s13^9*s23^2 - 343849*s13^8*s23^3 - 794874*s13^7*
                  s23^4 - 827319*s13^6*s23^5 - 381897*s13^5*s23^6 - 
                 43691*s13^4*s23^7 + 11403*s13^3*s23^8 - 201*s13^2*s23^9 + 
                 217*s13*s23^10 + 115*s23^11)) + p2q*p3q^2*(135*s12^12*s23^2*
                (4*s13^2 + 11*s13*s23 + 6*s23^2) + 5*s13^5*s23^5*
                (s13 + s23)^4*(15*s13^2 - 115*s13*s23 + 23*s23^2) - s12*s13^4*
                s23^4*(s13 + s23)^3*(85*s13^4 + 1292*s13^3*s23 + 1242*s13^2*
                  s23^2 - 658*s13*s23^3 + 147*s23^4) + s12^11*(135*s13^5 + 
                 306*s13^4*s23 + 389*s13^3*s23^2 + 3486*s13^2*s23^3 + 
                 7208*s13*s23^4 + 3600*s23^5) - s12^2*s13^3*s23^3*
                (s13 + s23)^2*(444*s13^6 + 1983*s13^5*s23 + 2086*s13^4*
                  s23^2 - 2099*s13^3*s23^3 - 1390*s13^2*s23^4 + 954*s13*
                  s23^5 - 317*s23^6) + s12^10*(648*s13^6 + 2988*s13^5*s23 + 
                 1149*s13^4*s23^2 - 3839*s13^3*s23^3 + 3156*s13^2*s23^4 + 
                 11574*s13*s23^5 + 5650*s23^6) + s12^9*(1296*s13^7 - 
                 8856*s13^6*s23 - 46521*s13^5*s23^2 - 72316*s13^4*s23^3 - 
                 48035*s13^3*s23^4 - 10160*s13^2*s23^5 + 4653*s13*s23^6 + 
                 2915*s23^7) + s12^8*(1404*s13^8 - 29187*s13^7*s23 - 
                 167677*s13^6*s23^2 - 343849*s13^5*s23^3 - 318691*s13^4*
                  s23^4 - 125740*s13^3*s23^5 - 16537*s13^2*s23^6 - 
                 4380*s13*s23^7 - 1190*s23^8) + s12^7*(891*s13^9 - 
                 22635*s13^8*s23 - 204243*s13^7*s23^2 - 591550*s13^6*s23^3 - 
                 794874*s13^5*s23^4 - 510798*s13^4*s23^5 - 126818*s13^3*
                  s23^6 - 211*s13^2*s23^7 - 2400*s13*s23^8 - 1550*s23^9) - 
               s12^3*s13^2*s23^2*(154*s13^9 + 223*s13^8*s23 + 10725*s13^7*
                  s23^2 + 34198*s13^6*s23^3 + 33223*s13^5*s23^4 + 
                 1779*s13^4*s23^5 - 11403*s13^3*s23^6 - 2417*s13^2*s23^7 + 
                 767*s13*s23^8 - 317*s23^9) + s12^6*(324*s13^10 - 
                 2646*s13^9*s23 - 106177*s13^8*s23^2 - 472966*s13^7*s23^3 - 
                 891598*s13^6*s23^4 - 827319*s13^5*s23^5 - 355075*s13^4*
                  s23^6 - 43666*s13^3*s23^7 + 7937*s13^2*s23^8 + 
                 1788*s13*s23^9 - 190*s23^10) + s12^4*s13*s23*(189*s13^10 + 
                 3666*s13^9*s23 - 18748*s13^8*s23^2 - 127583*s13^7*s23^3 - 
                 240516*s13^6*s23^4 - 187107*s13^5*s23^5 - 43691*s13^4*
                  s23^6 + 10641*s13^3*s23^7 + 1436*s13^2*s23^8 - 
                 1334*s13*s23^9 - 147*s23^10) + s12^5*(54*s13^11 + 
                 2529*s13^10*s23 - 14568*s13^9*s23^2 - 175490*s13^8*s23^3 - 
                 501606*s13^7*s23^4 - 639855*s13^6*s23^5 - 381897*s13^5*
                  s23^6 - 81598*s13^4*s23^7 + 3739*s13^3*s23^8 + 330*s13^2*
                  s23^9 + 859*s13*s23^10 + 115*s23^11))) + 
           p1q^3*(-(p2q^4*s13*(s13 + s23)*(5*s13^6*s23^4*(s13 + s23)^3*
                 (135*s13^2 - 16*s13*s23 - 246*s23^2) + 5*s12*s13^5*s23^3*
                 (s13 + s23)^2*(207*s13^4 + 413*s13^3*s23 - 615*s13^2*s23^2 - 
                  774*s13*s23^3 + 102*s23^4) + s12^10*(27*s13^5 - 324*s13^4*
                   s23 - 1229*s13^3*s23^2 - 848*s13^2*s23^3 - 140*s13*s23^4 - 
                  95*s23^5) + s12^9*(135*s13^6 - 3033*s13^5*s23 - 8917*s13^4*
                   s23^2 - 9582*s13^3*s23^3 - 3481*s13^2*s23^4 - 478*s13*
                   s23^5 - 495*s23^6) + s12^8*(270*s13^7 - 10044*s13^6*s23 - 
                  29162*s13^5*s23^2 - 36095*s13^4*s23^3 - 23344*s13^3*s23^4 - 
                  5387*s13^2*s23^5 - 425*s13*s23^6 - 915*s23^7) + 
                s12^2*s13^4*s23^2*(180*s13^7 + 2236*s13^6*s23 + 947*s13^5*
                   s23^2 - 11003*s13^4*s23^3 - 13043*s13^3*s23^4 - 
                  251*s13^2*s23^5 + 2436*s13*s23^6 - 462*s23^7) + 
                s12^3*s13^3*s23^2*(112*s13^7 - 2160*s13^6*s23 - 27226*s13^5*
                   s23^2 - 47813*s13^4*s23^3 - 12096*s13^3*s23^4 + 
                  20247*s13^2*s23^5 + 9866*s13*s23^6 - 18*s23^7) + 
                s12^4*s13^2*s23*(63*s13^8 - 979*s13^7*s23 - 41357*s13^6*
                   s23^2 - 119369*s13^5*s23^3 - 86892*s13^4*s23^4 + 
                  27772*s13^3*s23^5 + 44536*s13^2*s23^6 + 7412*s13*s23^7 - 
                  744*s23^8) + s12^7*(270*s13^8 - 12033*s13^7*s23 - 
                  62061*s13^6*s23^2 - 87321*s13^5*s23^3 - 51524*s13^4*s23^4 - 
                  18341*s13^3*s23^5 - 4037*s13^2*s23^6 + 288*s13*s23^7 - 
                  725*s23^8) + s12^6*(135*s13^9 - 4383*s13^8*s23 - 
                  64878*s13^7*s23^2 - 151519*s13^6*s23^3 - 107691*s13^5*
                   s23^4 - 5541*s13^4*s23^5 + 8826*s13^3*s23^6 - 2381*s13^2*
                   s23^7 + 639*s13*s23^8 - 210*s23^9) + s12^5*s13*
                 (27*s13^9 + 378*s13^8*s23 - 25202*s13^7*s23^2 - 130689*s13^6*
                   s23^3 - 173094*s13^5*s23^4 - 36761*s13^4*s23^5 + 
                  52804*s13^3*s23^6 + 19566*s13^2*s23^7 - 1842*s13*s23^8 + 
                  264*s23^9))) - p3q^4*s12*(s12 + s23)*(-5*s13^6*s23^5*
                (s13 + s23)^3*(19*s13 + 42*s23) + 45*s12^11*s23^2*
                (4*s13^2 + 23*s13*s23 + 15*s23^2) - s12*s13^5*s23^4*
                (s13 + s23)^2*(140*s13^3 + 198*s13^2*s23 - 111*s13*s23^2 - 
                 264*s23^3) + s12^10*(27*s13^5 + 63*s13^4*s23 + 112*s13^3*
                  s23^2 + 2236*s13^2*s23^3 + 4135*s13*s23^4 + 1945*s23^5) + 
               s12^9*(135*s13^6 + 378*s13^5*s23 - 979*s13^4*s23^2 - 
                 2160*s13^3*s23^3 + 947*s13^2*s23^4 + 2090*s13*s23^5 + 
                 555*s23^6) - s12^2*s13^4*s23^3*(848*s13^6 + 3481*s13^5*s23 + 
                 5387*s13^4*s23^2 + 4037*s13^3*s23^3 + 2381*s13^2*s23^4 + 
                 1842*s13*s23^5 + 744*s23^6) + s12^8*(270*s13^7 - 
                 4383*s13^6*s23 - 25202*s13^5*s23^2 - 41357*s13^4*s23^3 - 
                 27226*s13^3*s23^4 - 11003*s13^2*s23^5 - 7955*s13*s23^6 - 
                 3255*s23^7) - s12^3*s13^3*s23^2*(1229*s13^7 + 9582*s13^6*
                  s23 + 23344*s13^5*s23^2 + 18341*s13^4*s23^3 - 8826*s13^3*
                  s23^4 - 19566*s13^2*s23^5 - 7412*s13*s23^6 + 18*s23^7) + 
               s12^7*(270*s13^8 - 12033*s13^7*s23 - 64878*s13^6*s23^2 - 
                 130689*s13^5*s23^3 - 119369*s13^4*s23^4 - 47813*s13^3*
                  s23^5 - 13043*s13^2*s23^6 - 10305*s13*s23^7 - 3770*s23^8) - 
               s12^4*s13^2*s23*(324*s13^8 + 8917*s13^7*s23 + 36095*s13^6*
                  s23^2 + 51524*s13^5*s23^3 + 5541*s13^4*s23^4 - 52804*s13^3*
                  s23^5 - 44536*s13^2*s23^6 - 9866*s13*s23^7 + 462*s23^8) + 
               s12^6*(135*s13^9 - 10044*s13^8*s23 - 62061*s13^7*s23^2 - 
                 151519*s13^6*s23^3 - 173094*s13^5*s23^4 - 86892*s13^4*
                  s23^5 - 12096*s13^3*s23^6 - 251*s13^2*s23^7 - 2850*s13*
                  s23^8 - 1230*s23^9) + s12^5*s13*(27*s13^9 - 3033*s13^8*
                  s23 - 29162*s13^7*s23^2 - 87321*s13^6*s23^3 - 107691*s13^5*
                  s23^4 - 36761*s13^4*s23^5 + 27772*s13^3*s23^6 + 
                 20247*s13^2*s23^7 + 2436*s13*s23^8 + 510*s23^9)) + 
             p2q*p3q^3*(5*s13^6*(73*s13 - 23*s23)*s23^6*(s13 + s23)^4 - 45*
                s12^13*s23^2*(4*s13^2 + 19*s13*s23 + 12*s23^2) + s12*s13^5*
                s23^5*(s13 + s23)^3*(710*s13^3 + 659*s13^2*s23 + 
                 136*s13*s23^2 - 63*s23^3) + s12^2*s13^4*s23^4*(s13 + s23)^2*
                (43*s13^5 + 328*s13^4*s23 + 74*s13^3*s23^2 - 135*s13^2*
                  s23^3 - 801*s13*s23^4 - 227*s23^5) - s12^12*(54*s13^5 + 
                 198*s13^4*s23 - 145*s13^3*s23^2 + 508*s13^2*s23^3 + 
                 4232*s13*s23^4 + 2830*s23^5) - s12^11*(216*s13^6 + 
                 1485*s13^5*s23 + 221*s13^4*s23^2 - 6021*s13^3*s23^3 - 
                 3992*s13^2*s23^4 + 5466*s13*s23^5 + 4270*s23^6) + s12^10*
                (-270*s13^7 + 10296*s13^6*s23 + 52136*s13^5*s23^2 + 
                 80769*s13^4*s23^3 + 52466*s13^3*s23^4 + 14890*s13^2*s23^5 + 
                 2558*s13*s23^6 - 60*s23^7) + s12^9*s23*(29718*s13^7 + 
                 161495*s13^6*s23 + 340621*s13^5*s23^2 + 320392*s13^4*s23^3 + 
                 117873*s13^3*s23^4 + 9335*s13^2*s23^5 + 8590*s13*s23^6 + 
                 4760*s23^7) - s12^3*s13^3*s23^3*(979*s13^8 - 389*s13^7*s23 - 
                 3370*s13^6*s23^2 + 9784*s13^5*s23^3 + 34576*s13^4*s23^4 + 
                 34383*s13^3*s23^5 + 12536*s13^2*s23^6 + 1482*s13*s23^7 + 
                 539*s23^8) - s12^4*s13^2*s23^2*(973*s13^9 - 7158*s13^8*s23 - 
                 37468*s13^7*s23^2 - 37785*s13^6*s23^3 + 55063*s13^5*s23^4 + 
                 143800*s13^4*s23^5 + 108392*s13^3*s23^6 + 29736*s13^2*
                  s23^7 + 1914*s13*s23^8 + 561*s23^9) + s12^8*(270*s13^9 + 
                 27648*s13^8*s23 + 185238*s13^7*s23^2 + 513572*s13^6*s23^3 + 
                 682274*s13^5*s23^4 + 420624*s13^4*s23^5 + 81666*s13^3*
                  s23^6 - 13501*s13^2*s23^7 + 1640*s13*s23^8 + 3050*s23^9) + 
               s12^7*(216*s13^10 + 13401*s13^9*s23 + 116911*s13^8*s23^2 + 
                 392375*s13^7*s23^3 + 638045*s13^6*s23^4 + 490478*s13^5*
                  s23^5 + 126962*s13^4*s23^6 - 25595*s13^3*s23^7 - 
                 14322*s13^2*s23^8 - 3982*s13*s23^9 - 270*s23^10) + s12^5*s13*
                s23*(-162*s13^10 + 9419*s13^9*s23 + 70045*s13^8*s23^2 + 
                 157576*s13^7*s23^3 + 98527*s13^6*s23^4 - 138582*s13^5*
                  s23^5 - 253789*s13^4*s23^6 - 134373*s13^3*s23^7 - 
                 18788*s13^2*s23^8 + 1751*s13*s23^9 + 353*s23^10) + s12^6*
                (54*s13^11 + 3726*s13^10*s23 + 50878*s13^9*s23^2 + 
                 201701*s13^8*s23^3 + 358639*s13^7*s23^4 + 248217*s13^6*
                  s23^5 - 61993*s13^5*s23^6 - 160194*s13^4*s23^7 - 
                 53391*s13^3*s23^8 + 256*s13^2*s23^9 - 1326*s13*s23^10 - 
                 480*s23^11)) + p2q^3*p3q*(-10*s13^6*s23^4*(s13 + s23)^4*
                (54*s13^3 + 67*s13^2*s23 - 165*s13*s23^2 + 48*s23^3) - s12*
                s13^5*s23^3*(s13 + s23)^3*(855*s13^5 + 1667*s13^4*s23 - 
                 2100*s13^3*s23^2 - 2114*s13^2*s23^3 + 2385*s13*s23^4 - 
                 353*s23^5) + s12^11*(54*s13^6 - 162*s13^5*s23 - 973*s13^4*
                  s23^2 - 979*s13^3*s23^3 + 43*s13^2*s23^4 + 710*s13*s23^5 + 
                 365*s23^6) - s12^2*s13^4*s23^2*(s13 + s23)^2*(180*s13^7 + 
                 148*s13^6*s23 - 4468*s13^5*s23^2 - 6102*s13^4*s23^3 + 
                 7337*s13^3*s23^4 + 4929*s13^2*s23^5 - 2873*s13*s23^6 + 
                 561*s23^7) + s12^10*(216*s13^7 + 3726*s13^6*s23 + 
                 9419*s13^5*s23^2 + 7158*s13^4*s23^3 + 389*s13^3*s23^4 + 
                 414*s13^2*s23^5 + 2789*s13*s23^6 + 1345*s23^7) + s12^8*s23*
                (27648*s13^8 + 116911*s13^7*s23 + 201701*s13^6*s23^2 + 
                 157576*s13^5*s23^3 + 37785*s13^4*s23^4 - 9784*s13^3*s23^5 + 
                 341*s13^2*s23^6 + 3032*s13*s23^7 + 770*s23^8) + s12^9*
                (270*s13^8 + 13401*s13^7*s23 + 50878*s13^6*s23^2 + 
                 70045*s13^5*s23^3 + 37468*s13^4*s23^4 + 3370*s13^3*s23^5 + 
                 773*s13^2*s23^6 + 4243*s13*s23^7 + 1730*s23^8) + s12^3*s13^3*
                s23^2*(145*s13^9 + 6021*s13^8*s23 + 52466*s13^7*s23^2 + 
                 117873*s13^6*s23^3 + 81666*s13^5*s23^4 - 25595*s13^4*s23^5 - 
                 53391*s13^3*s23^6 - 18788*s13^2*s23^7 - 1914*s13*s23^8 - 
                 539*s23^9) + s12^7*(-270*s13^10 + 29718*s13^9*s23 + 
                 185238*s13^8*s23^2 + 392375*s13^7*s23^3 + 358639*s13^6*
                  s23^4 + 98527*s13^5*s23^5 - 55063*s13^4*s23^6 - 
                 34576*s13^3*s23^7 - 997*s13^2*s23^8 + 878*s13*s23^9 - 
                 95*s23^10) - s12^4*s13^2*s23*(198*s13^10 + 221*s13^9*s23 - 
                 80769*s13^8*s23^2 - 320392*s13^7*s23^3 - 420624*s13^6*
                  s23^4 - 126962*s13^5*s23^5 + 160194*s13^4*s23^6 + 
                 134373*s13^3*s23^7 + 29736*s13^2*s23^8 + 1482*s13*s23^9 + 
                 227*s23^10) - s12^5*s13*(54*s13^11 + 1485*s13^10*s23 - 
                 52136*s13^9*s23^2 - 340621*s13^8*s23^3 - 682274*s13^7*
                  s23^4 - 490478*s13^6*s23^5 + 61993*s13^5*s23^6 + 
                 253789*s13^4*s23^7 + 108392*s13^3*s23^8 + 12536*s13^2*
                  s23^9 + 1255*s13*s23^10 + 63*s23^11) - s12^6*(216*s13^11 - 
                 10296*s13^10*s23 - 161495*s13^9*s23^2 - 513572*s13^8*s23^3 - 
                 638045*s13^7*s23^4 - 248217*s13^6*s23^5 + 138582*s13^5*
                  s23^6 + 143800*s13^4*s23^7 + 34383*s13^3*s23^8 + 
                 1964*s13^2*s23^9 + 53*s13*s23^10 + 115*s23^11)) + 
             p2q^2*p3q^2*(-5*s13^6*s23^5*(s13 + s23)^4*(69*s13^2 - 
                 238*s13*s23 + 119*s23^2) + s12*s13^5*s23^4*(s13 + s23)^3*
                (245*s13^4 + 2066*s13^3*s23 + 1121*s13^2*s23^2 - 
                 1670*s13*s23^3 + 290*s23^4) + s12^12*(-27*s13^5 - 
                 135*s13^4*s23 + 356*s13^3*s23^2 + 1269*s13^2*s23^3 + 
                 245*s13*s23^4 - 345*s23^5) + s12^2*s13^4*s23^3*(s13 + s23)^2*
                (1269*s13^6 + 3753*s13^5*s23 + 1746*s13^4*s23^2 - 
                 5299*s13^3*s23^3 - 888*s13^2*s23^4 + 1955*s13*s23^5 - 
                 788*s23^6) + s12^11*(-27*s13^6 - 1242*s13^5*s23 - 
                 1858*s13^4*s23^2 + 2382*s13^3*s23^3 + 6291*s13^2*s23^4 + 
                 2801*s13*s23^5 - 190*s23^6) + s12^10*(243*s13^7 + 
                 9477*s13^6*s23 + 35241*s13^5*s23^2 + 43757*s13^4*s23^3 + 
                 22607*s13^3*s23^4 + 10521*s13^2*s23^5 + 8054*s13*s23^6 + 
                 2095*s23^7) + s12^9*(675*s13^8 + 28458*s13^7*s23 + 
                 130919*s13^6*s23^2 + 238868*s13^5*s23^3 + 190272*s13^4*
                  s23^4 + 52100*s13^3*s23^5 + 1946*s13^2*s23^6 + 
                 8136*s13*s23^7 + 3380*s23^8) + s12^3*s13^3*s23^2*
                (356*s13^9 + 2382*s13^8*s23 + 22607*s13^7*s23^2 + 
                 52100*s13^6*s23^3 + 30182*s13^5*s23^4 - 28814*s13^4*s23^5 - 
                 42096*s13^3*s23^6 - 16664*s13^2*s23^7 - 3123*s13*s23^8 - 
                 1078*s23^9) + s12^8*(675*s13^9 + 35748*s13^8*s23 + 
                 188678*s13^7*s23^2 + 441503*s13^6*s23^3 + 504213*s13^5*
                  s23^4 + 256726*s13^4*s23^5 + 30182*s13^3*s23^6 - 
                 9740*s13^2*s23^7 + 709*s13*s23^8 + 845*s23^9) + s12^7*
                (243*s13^10 + 28458*s13^9*s23 + 188678*s13^8*s23^2 + 
                 497362*s13^7*s23^3 + 653736*s13^6*s23^4 + 402498*s13^5*
                  s23^5 + 61213*s13^4*s23^6 - 28814*s13^3*s23^7 - 
                 5120*s13^2*s23^8 - 3019*s13*s23^9 - 1190*s23^10) - s12^4*
                s13^2*s23*(135*s13^10 + 1858*s13^9*s23 - 43757*s13^8*s23^2 - 
                 190272*s13^7*s23^3 - 256726*s13^6*s23^4 - 61213*s13^5*
                  s23^5 + 148561*s13^4*s23^6 + 129209*s13^3*s23^7 + 
                 34184*s13^2*s23^8 + 3123*s13*s23^9 + 788*s23^10) + s12^6*
                (-27*s13^11 + 9477*s13^10*s23 + 130919*s13^9*s23^2 + 
                 441503*s13^8*s23^3 + 653736*s13^7*s23^4 + 401406*s13^6*
                  s23^5 - 36203*s13^5*s23^6 - 148561*s13^4*s23^7 - 
                 42096*s13^3*s23^8 + 2234*s13^2*s23^9 - 800*s13*s23^10 - 
                 595*s23^11) + s12^5*s13*(-27*s13^11 - 1242*s13^10*s23 + 
                 35241*s13^9*s23^2 + 238868*s13^8*s23^3 + 504213*s13^7*
                  s23^4 + 402498*s13^6*s23^5 - 36203*s13^5*s23^6 - 
                 248376*s13^4*s23^7 - 129209*s13^3*s23^8 - 16664*s13^2*
                  s23^9 + 379*s13*s23^10 + 290*s23^11))))/
          (18*p1q*(p2q + p3q)*s12^3*s13^3*(s12 + s13)*s23^2*(s12 + s23)^2*
           (s13 + s23)^2*(p1q^5*s23^3*(s12 + s23)*(s13 + s23) + 
            (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))) + 
         ((s12 + s13 + s23)*(-9*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*
             (s12^2 - s13^2) + p1q*p3q*(-9*s12^3 + s12*s13*(9*s13 - 4*s23) + 
              16*s12^2*s23 + 16*s13^2*s23) + p1q*p2q*(-4*s12*s13*s23 + 
              s13^2*(-9*s13 + 16*s23) + s12^2*(9*s13 + 16*s23)))*
           den[-3 + 2*ep])/(2*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^2*s23))*
        p2 . E0*p2 . E0conj + p1 . E0*
        (((ep^2*(10*s13^3*s23^3*(s13 + s23) + s12^5*(-9*s13^2 + 10*s23^2) + 
              s12*s13^2*s23^2*(36*s13^2 + 55*s13*s23 + 19*s23^2) + 
              s12^2*s13*s23*(27*s13^3 + 81*s13^2*s23 + 73*s13*s23^2 + 
                19*s23^3) + s12^4*(-18*s13^3 - 27*s13^2*s23 + 11*s13*s23^2 + 
                20*s23^3) + s12^3*(-9*s13^4 + 28*s13^2*s23^2 + 30*s13*s23^3 + 
                10*s23^4)))/(18*s12^2*s13^2*(s12 + s13)*s23^2*(s13 + s23)) + 
           ((s12 + s13 + s23)*(9*p2q^6*s13^3*(10*s12^5*s23*(s13 + s23) + 
                9*s12^2*s13^2*s23*(4*s13^2 + s13*s23 - 3*s23^2) + 
                10*s13^3*s23^2*(s13^2 - s23^2) + s12*s13^2*s23*(17*s13^3 - 
                  27*s13*s23^2 - 10*s23^3) + 2*s12^4*(36*s13^3 + 37*s13^2*
                   s23 + 15*s13*s23^2 + 5*s23^3) + s12^3*s13*(72*s13^3 + 
                  47*s13^2*s23 + 3*s13*s23^2 + 10*s23^3)) + 
              s23*(p3q*s12 - p1q*s23)^2*(90*p3q^4*s12^4*(s12 + s13)*s23*
                 (s12 + s13 + s23) + 90*p1q^4*s12^3*s23^2*(s13 + s23)*
                 (s12 + s13 + s23) - p1q^3*p3q*s23*(243*s12*s13^2*s23^2*
                   (s13 + s23) + 80*s13^2*s23^3*(s13 + s23) + 90*s12^5*
                   (2*s13 + 3*s23) + 20*s12^4*(9*s13^2 + 22*s13*s23 + 
                    13*s23^2) - s12^3*(153*s13^3 + 234*s13^2*s23 + 
                    20*s13*s23^2 - 70*s23^3) + 5*s12^2*s23*(57*s13^3 + 
                    57*s13^2*s23 + 16*s13*s23^2 + 16*s23^3)) - p1q*p3q^3*s12*
                 (90*s12^6 + 80*s13^3*s23^3 + 10*s12^5*(9*s13 + 8*s23) + 
                  s12*s13^2*s23^2*(243*s13 + 80*s23) - 2*s12^4*(81*s13^2 + 
                    5*s13*s23 - 125*s23^2) + s12^2*s13*s23*(366*s13^2 + 
                    423*s13*s23 + 170*s23^2) + s12^3*(-162*s13^3 + 357*s13^2*
                     s23 + 430*s13*s23^2 + 260*s23^3)) + p1q^2*p3q^2*
                 (80*s13^3*s23^3*(s13 + s23) + 90*s12^6*(s13 + 3*s23) + 
                  10*s12^5*(9*s13^2 + 35*s13*s23 + 25*s23^2) + s12*s13^2*
                   s23^2*(243*s13^2 + 323*s13*s23 + 160*s23^2) - 2*s12^4*
                   (81*s13^3 + 203*s13^2*s23 + 15*s13*s23^2 - 115*s23^3) + 
                  s12^2*s13*s23*(285*s13^3 + 528*s13^2*s23 + 566*s13*s23^2 + 
                    80*s23^3) + s12^3*(-162*s13^4 + 33*s13^3*s23 + 622*s13^2*
                     s23^2 + 330*s13*s23^3 + 250*s23^4))) - p2q^5*s13^2*(
                9*p3q*(10*s12^6*s23*(4*s13 + 3*s23) + 10*s13^4*s23^2*
                   (-s13^2 + s13*s23 + 2*s23^2) + s12*s13^4*s23*(-17*s13^2 + 
                    57*s13*s23 + 54*s23^2) + 4*s12^2*s13^2*s23*(8*s13^3 + 
                    9*s13^2*s23 + 2*s13*s23^2 - 5*s23^3) + 2*s12^5*
                   (108*s13^3 + 89*s13^2*s23 + 50*s13*s23^2 + 20*s23^3) + 
                  s12^3*s13*(-72*s13^4 + 79*s13^3*s23 - 30*s13^2*s23^2 - 
                    72*s13*s23^3 + 10*s23^4) + s12^4*(144*s13^4 + 24*s13^3*
                     s23 - s13^2*s23^2 + 40*s13*s23^3 + 10*s23^4)) + 
                p1q*(100*s12^5*s23^2*(s13 + s23) + 10*s13^3*s23^2*(-9*s13^3 + 
                    36*s13^2*s23 + 10*s13*s23^2 - 35*s23^3) + s12*s13^2*s23*
                   (-153*s13^4 + 702*s13^3*s23 + 243*s13^2*s23^2 - 872*s13*
                     s23^3 - 260*s23^4) + s12^2*s13*s23*(-171*s13^4 + 
                    624*s13^3*s23 + 66*s13^2*s23^2 - 809*s13*s23^3 - 
                    80*s23^4) + s12^4*(-648*s13^4 + 243*s13^3*s23 + 
                    676*s13^2*s23^2 + 300*s13*s23^3 + 20*s23^4) + 
                  s12^3*(-648*s13^5 + 1521*s13^4*s23 + 633*s13^3*s23^2 - 
                    769*s13^2*s23^3 + 30*s13*s23^4 - 80*s23^5))) - 
              p2q*s23*(-9*p3q^5*s12^3*(s12 + s13)*(10*s12^5 + 27*s12*s13^3*
                   s23 + 10*s13^3*s23^2 + 10*s12^4*(s13 + 3*s23) + 
                  s12^3*(-17*s13^2 - 20*s13*s23 + 10*s23^2) + s12^2*
                   (17*s13^3 - 30*s13^2*s23 - 40*s13*s23^2 - 10*s23^3)) + 
                p1q*p3q^4*s12^2*(90*s12^7 + s12^6*(-180*s13 + 430*s23) + 
                  10*s13^3*s23^2*(9*s13^2 + 3*s13*s23 - 8*s23^2) + 
                  s12^5*(-351*s13^2 + 550*s13*s23 + 1140*s23^2) + s12*s13^2*
                   s23*(243*s13^3 + 37*s13*s23^2 - 80*s23^3) + s12^4*
                   (-63*s13^3 + 681*s13^2*s23 + 930*s13*s23^2 + 450*s23^3) + 
                  s12^3*(171*s13^4 - 582*s13^3*s23 - 414*s13^2*s23^2 - 
                    510*s13*s23^3 - 350*s23^4) + s12^2*s13*(153*s13^4 - 
                    963*s13^3*s23 - 312*s13^2*s23^2 - 683*s13*s23^3 - 
                    260*s23^4)) + p1q^5*s23^3*(90*s12^5*(s13 + s23) - 
                  10*s13^2*s23^2*(9*s13^2 + s13*s23 - 8*s23^2) - 243*s12*
                   s13^2*s23*(s13^2 - s23^2) + 10*s12^4*(27*s13^2 + 
                    35*s13*s23 + 8*s23^2) + s12^3*(180*s13^3 + 369*s13^2*
                     s23 + 250*s13*s23^2 + 70*s23^3) + s12^2*(-153*s13^4 + 
                    132*s13^3*s23 + 285*s13^2*s23^2 + 80*s13*s23^3 + 
                    80*s23^4)) - p1q^2*p3q^3*s12*(90*s12^7*(s13 + 4*s23) - 
                  10*s12^6*(18*s13^2 + 20*s13*s23 - 83*s23^2) + 10*s13^3*
                   s23^3*(2*s13^2 + 11*s13*s23 - 16*s23^2) + s12*s13^2*s23^2*
                   (-90*s13^3 + 243*s13^2*s23 + 134*s13*s23^2 - 240*s23^3) + 
                  s12^5*(-441*s13^3 - 1143*s13^2*s23 + 760*s13*s23^2 + 
                    1870*s23^3) - s12^2*s13*s23*(822*s13^4 + 741*s13^3*s23 - 
                    735*s13^2*s23^2 + 329*s13*s23^3 + 250*s23^4) + 
                  s12^4*(-162*s13^4 - 184*s13^3*s23 + 2762*s13^2*s23^2 + 
                    2230*s13*s23^3 + 890*s23^4) + s12^3*(9*s13^5 - 261*s13^4*
                     s23 + 496*s13^3*s23^2 + 1246*s13^2*s23^3 + 30*s13*
                     s23^4 - 510*s23^5)) + p1q^3*p3q^2*s23*(270*s12^7*
                   (s13 + 2*s23) + 10*s13^3*s23^3*(25*s13^2 + 17*s13*s23 - 
                    8*s23^2) + s12^6*(-90*s13^2 + 490*s13*s23 + 810*s23^2) + 
                  s12*s13^2*s23^2*(549*s13^3 + 806*s13^2*s23 + 517*s13*
                     s23^2 - 240*s23^3) + s12^5*(-639*s13^3 - 904*s13^2*s23 + 
                    840*s13*s23^2 + 1470*s23^3) + s12^2*s13*s23*(228*s13^4 + 
                    1131*s13^3*s23 + 1922*s13^2*s23^2 + 71*s13*s23^3 - 
                    80*s23^4) + s12^4*(-936*s13^4 - 359*s13^3*s23 + 
                    3474*s13^2*s23^2 + 2110*s13*s23^3 + 870*s23^4) + 
                  s12^3*(-486*s13^5 + 285*s13^4*s23 + 1997*s13^3*s23^2 + 
                    2217*s13^2*s23^3 + 510*s13*s23^4 - 330*s23^5)) - 
                p1q^4*p3q*s23^2*(90*s12^6*(3*s13 + 4*s23) + 20*s12^5*
                   (18*s13^2 + 43*s13*s23 + 20*s23^2) + 10*s13^2*s23^2*
                   (-9*s13^3 + 32*s13^2*s23 + 33*s13*s23^2 - 8*s23^3) + 
                  s12*s13^2*s23*(-243*s13^3 + 702*s13^2*s23 + 932*s13*s23^2 + 
                    157*s23^3) + s12^4*(-18*s13^3 + 257*s13^2*s23 + 
                    700*s13*s23^2 + 540*s23^3) + s12^3*(-1035*s13^4 - 
                    66*s13^3*s23 + 1741*s13^2*s23^2 + 800*s13*s23^3 + 
                    420*s23^4) + s12^2*(-153*s13^5 + 402*s13^4*s23 + 
                    999*s13^3*s23^2 + 1250*s13^2*s23^3 + 240*s13*s23^4 - 
                    80*s23^5))) + p2q^4*s13*(9*p3q^2*(-10*s13^5*s23^3*
                   (s13 + s23) + 30*s12^7*s23*(2*s13 + s23) + 3*s12*s13^4*
                   s23^2*(-19*s13^2 + s13*s23 + 10*s23^2) + s12^3*s13^2*s23*
                   (-24*s13^3 + 134*s13^2*s23 + 67*s13*s23^2 - 30*s23^3) + 
                  s12^5*s23*(-140*s13^3 - 51*s13^2*s23 + 30*s13*s23^2 + 
                    20*s23^3) + 2*s12^6*(108*s13^3 + 67*s13^2*s23 + 
                    60*s13*s23^2 + 25*s23^3) + s12^2*s13^3*s23*(-68*s13^3 + 
                    66*s13^2*s23 + 83*s13*s23^2 + 30*s23^3) - s12^4*s13^2*
                   (216*s13^3 - 46*s13^2*s23 + 130*s13*s23^2 + 95*s23^3)) - 
                p1q^2*s23*(10*s13^3*s23^2*(36*s13^3 - 53*s13^2*s23 - 
                    38*s13*s23^2 + 51*s23^3) + s12^5*(252*s13^3 + 415*s13^2*
                     s23 + 80*s13*s23^2 + 70*s23^3) + 2*s12*s13^2*s23*
                   (351*s13^4 - 594*s13^3*s23 - 481*s13^2*s23^2 + 589*s13*
                     s23^3 + 125*s23^4) + s12^4*(1233*s13^4 + 1459*s13^3*
                     s23 + 648*s13^2*s23^2 + 220*s13*s23^3 + 230*s23^4) + 
                  s12^3*(2106*s13^5 - 906*s13^4*s23 - 649*s13^3*s23^2 + 
                    1413*s13^2*s23^3 + 290*s13*s23^4 + 160*s23^5) + 
                  s12^2*s13*(153*s13^5 + 318*s13^4*s23 - 411*s13^3*s23^2 + 
                    73*s13^2*s23^3 + 889*s13*s23^4 + 240*s23^5)) + 
                p1q*p3q*(-10*s12^6*s23*(-9*s13^2 + 6*s13*s23 + 16*s23^2) + 
                  10*s13^4*s23^2*(9*s13^3 - 36*s13^2*s23 + 16*s13*s23^2 + 
                    61*s23^3) + 2*s12^2*s13^2*s23*(-144*s13^4 + 411*s13^3*
                     s23 + 510*s13^2*s23^2 + 617*s13*s23^3 + 90*s23^4) - 
                  s12^5*(1296*s13^4 + 2097*s13^3*s23 + 1610*s13^2*s23^2 + 
                    390*s13*s23^3 + 140*s23^4) + s12*s13^3*s23*(153*s13^4 - 
                    972*s13^3*s23 + 846*s13^2*s23^2 + 1621*s13*s23^3 + 
                    360*s23^4) + s12^4*(-648*s13^5 + 756*s13^4*s23 - 
                    3143*s13^3*s23^2 - 2037*s13^2*s23^3 + 120*s13*s23^4 + 
                    20*s23^5) + s12^3*s13*(648*s13^5 - 1386*s13^4*s23 + 
                    282*s13^3*s23^2 - 499*s13^2*s23^3 - 498*s13*s23^4 + 
                    270*s23^5))) + p2q^3*(-9*p3q^3*s12*(10*s12^7*s23*
                   (4*s13 + s23) - 10*s13^5*s23^3*(3*s13 + 2*s23) - 
                  s12*s13^5*s23^2*(111*s13 + 34*s23) - 2*s12^2*s13^3*s23*
                   (51*s13^3 + 8*s13^2*s23 - 21*s13*s23^2 - 15*s23^3) + 
                  4*s12^6*(18*s13^3 + 5*s13^2*s23 + 15*s13*s23^2 + 5*s23^3) - 
                  2*s12^3*s13^2*s23*(38*s13^3 - 85*s13^2*s23 - 6*s13*s23^2 + 
                    15*s23^3) - s12^5*(144*s13^4 + 184*s13^3*s23 + 117*s13^2*
                     s23^2 + 20*s13*s23^3 - 10*s23^4) - 2*s12^4*s13*
                   (108*s13^4 - 3*s13^3*s23 + 82*s13^2*s23^2 + 55*s13*s23^3 + 
                    15*s23^4)) + p1q^3*s23^2*(30*s13^3*s23^2*(18*s13^3 - 
                    11*s13^2*s23 - 18*s13*s23^2 + 11*s23^3) + s12^5*
                   (-54*s13^3 + 119*s13^2*s23 + 100*s13*s23^2 + 80*s23^3) + 
                  5*s12^4*(45*s13^4 + 114*s13^3*s23 + 80*s13^2*s23^2 + 
                    52*s13*s23^3 + 32*s23^4) + 2*s12*s13^2*s23*(594*s13^4 - 
                    441*s13^3*s23 - 719*s13^2*s23^2 + 356*s13*s23^3 + 
                    40*s23^4) + 3*s12^2*s13*(153*s13^5 - 3*s13^4*s23 - 
                    177*s13^3*s23^2 - 20*s13^2*s23^3 + 81*s13*s23^4 + 
                    80*s23^5) + s12^3*(2205*s13^5 + 114*s13^4*s23 - 
                    828*s13^3*s23^2 + 647*s13^2*s23^3 + 310*s13*s23^4 + 
                    80*s23^5)) + p1q*p3q^2*(10*s13^5*s23^3*(-9*s13^2 + 
                    17*s13*s23 + 26*s23^2) + 10*s12^7*s23*(-27*s13^2 + 
                    42*s13*s23 + 26*s23^2) + s12*s13^4*s23^2*(-423*s13^3 + 
                    846*s13^2*s23 + 509*s13*s23^2 + 120*s23^3) + 2*s12^3*
                   s13^2*s23*(135*s13^4 - 96*s13^3*s23 - 451*s13^2*s23^2 + 
                    126*s13*s23^3 + 145*s23^4) + s12^2*s13^3*s23*
                   (-459*s13^4 + 1401*s13^3*s23 + 195*s13^2*s23^2 + 
                    425*s13*s23^3 + 290*s23^4) + s12^6*(648*s13^4 + 
                    2331*s13^3*s23 + 462*s13^2*s23^2 + 960*s13*s23^3 + 
                    520*s23^4) + s12^4*s13*(-1296*s13^5 + 54*s13^4*s23 - 
                    2269*s13^3*s23^2 - 1557*s13^2*s23^3 + 171*s13*s23^4 + 
                    120*s23^5) + s12^5*(-648*s13^5 - 1962*s13^4*s23 + 
                    221*s13^3*s23^2 - 210*s13^2*s23^3 + 390*s13*s23^4 + 
                    260*s23^5)) - p1q^2*p3q*s23*(10*s13^4*s23^2*(27*s13^3 - 
                    61*s13^2*s23 - 12*s13*s23^2 + 76*s23^3) + s12^6*
                   (-432*s13^3 - 191*s13^2*s23 + 160*s13*s23^2 + 250*s23^3) + 
                  2*s12^5*(711*s13^4 + 738*s13^3*s23 + 101*s13^2*s23^2 + 
                    320*s13*s23^3 + 250*s23^4) + s12*s13^3*s23*(549*s13^4 - 
                    1701*s13^3*s23 - 333*s13^2*s23^2 + 1547*s13*s23^3 + 
                    680*s23^4) + s12^4*(1233*s13^5 + 2624*s13^4*s23 - 
                    621*s13^3*s23^2 + 570*s13^2*s23^3 + 800*s13*s23^4 + 
                    250*s23^5) + s12^2*s13^2*(153*s13^5 - 759*s13^4*s23 + 
                    99*s13^3*s23^2 + 219*s13^2*s23^3 + 1894*s13*s23^4 + 
                    560*s23^5) + s12^3*s13*(1476*s13^5 + 63*s13^4*s23 + 
                    136*s13^3*s23^2 + 576*s13^2*s23^3 + 844*s13*s23^4 + 
                    590*s23^5))) + p2q^2*(9*p3q^4*s12^2*(10*s12^7*s23 + 
                  10*s12^6*s23*(-2*s13 + s23) - 10*s13^4*s23^3*(3*s13 + 
                    s23) + s12^3*s13^3*s23*(-37*s13 + 102*s23) - s12*s13^3*
                   s23^2*(91*s13^2 + 37*s13*s23 + 10*s23^2) + s12^2*s13^2*s23*
                   (-68*s13^3 - 42*s13^2*s23 + 43*s13*s23^2 + 20*s23^3) - 
                  s12^5*(72*s13^3 + 87*s13^2*s23 + 100*s13*s23^2 + 
                    20*s23^3) - s12^4*(72*s13^4 - 10*s13^3*s23 + 93*s13^2*
                     s23^2 + 70*s13*s23^3 + 20*s23^4)) + p1q^4*s23^3*
                 (10*s12^5*(9*s13^2 + 8*s13*s23 - s23^2) + s12*s13^2*s23*
                   (-882*s13^3 + 243*s13^2*s23 + 962*s13*s23^2 - 163*s23^3) + 
                  2*s12^4*(198*s13^3 + 156*s13^2*s23 + 25*s13*s23^2 - 
                    5*s23^3) + 20*s13^2*s23^2*(-18*s13^3 + 3*s13^2*s23 + 
                    17*s13*s23^2 - 4*s23^3) + s12^3*(-657*s13^4 + 42*s13^3*
                     s23 + 549*s13^2*s23^2 + 40*s13*s23^3 - 80*s23^4) + 
                  s12^2*(-459*s13^5 + 288*s13^4*s23 + 705*s13^3*s23^2 + 
                    198*s13^2*s23^3 + 160*s13*s23^4 - 80*s23^5)) + 
                p1q*p3q^3*s12*(10*s12^7*(27*s13 - 26*s23)*s23 + s12^6*s23*
                   (-81*s13^2 + 310*s13*s23 - 270*s23^2) + 20*s13^4*s23^3*
                   (9*s13^2 - 3*s13*s23 + s23^2) + 3*s12*s13^3*s23^2*
                   (192*s13^3 - 81*s13^2*s23 + 20*s13*s23^2 + 90*s23^3) + 
                  s12^2*s13^2*s23*(459*s13^4 - 1116*s13^3*s23 - 750*s13^2*
                     s23^2 + 115*s13*s23^3 + 180*s23^4) + s12^3*s13*s23*
                   (-126*s13^4 + 495*s13^3*s23 - 579*s13^2*s23^2 + 884*s13*
                     s23^3 + 360*s23^4) + s12^5*(648*s13^4 + 2466*s13^3*s23 + 
                    945*s13^2*s23^2 + 1610*s13*s23^3 + 600*s23^4) + 
                  2*s12^4*(324*s13^5 + 468*s13^4*s23 + 1317*s13^3*s23^2 + 
                    877*s13^2*s23^3 + 785*s13*s23^4 + 305*s23^5)) + 
                p1q^3*p3q*s23^2*(10*s12^6*(18*s13^2 + 11*s13*s23 - 6*s23^2) + 
                  10*s13^3*s23^2*(27*s13^3 - 58*s13^2*s23 - 44*s13*s23^2 + 
                    41*s23^3) - s12^5*(171*s13^3 - 4*s13^2*s23 + 110*s13*
                     s23^2 + 70*s23^3) + s12*s13^2*s23*(639*s13^4 - 
                    1341*s13^3*s23 - 1355*s13^2*s23^2 + 255*s13*s23^3 + 
                    320*s23^4) + s12^4*(2520*s13^4 + 2351*s13^3*s23 - 
                    1251*s13^2*s23^2 - 230*s13*s23^3 + 400*s23^4) + 
                  s12^2*s13*(306*s13^5 - 588*s13^4*s23 - 1149*s13^3*s23^2 - 
                    1607*s13^2*s23^3 + 652*s13*s23^4 + 320*s23^5) + 
                  s12^3*(1728*s13^5 + 723*s13^4*s23 - 1250*s13^3*s23^2 - 
                    375*s13^2*s23^3 - 50*s13*s23^4 + 410*s23^5)) - 
                p1q^2*p3q^2*s23*(-10*s13^4*s23^3*(26*s13^2 + s13*s23 - 
                    25*s23^2) + 10*s12^7*(27*s13^2 + 46*s13*s23 - 24*s23^2) + 
                  s12^6*(-153*s13^3 + 195*s13^2*s23 + 70*s13*s23^2 - 
                    260*s23^3) + s12*s13^3*s23^2*(-729*s13^3 - 30*s13^2*s23 + 
                    259*s13*s23^2 + 590*s23^3) + s12^2*s13^2*s23*
                   (-762*s13^4 - 48*s13^3*s23 - 521*s13^2*s23^2 + 1021*s13*
                     s23^3 + 560*s23^4) + s12^5*(1494*s13^4 + 3393*s13^3*
                     s23 - 620*s13^2*s23^2 + 520*s13*s23^3 + 740*s23^4) + 
                  s12^3*s13*(-306*s13^5 + 441*s13^4*s23 + 293*s13^3*s23^2 - 
                    376*s13^2*s23^3 + 1293*s13*s23^4 + 680*s23^5) + 
                  s12^4*(639*s13^5 + 2485*s13^4*s23 + 1745*s13^3*s23^2 + 
                    660*s13^2*s23^3 + 1050*s13*s23^4 + 760*s23^5)))))/
            (18*ep*p1q*(p2q + p3q)*s12^3*s13^3*s23^2*
             (-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + (p3q*s12 - p1q*s23)^2*(
                p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + s23) - 
                p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*
                  (s13 + s23)) + p3q*(s12 + s13)*(-(s13*(s13 + s23)) + 
                  s12*(3*s13 + 2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*
                 (s12 - 3*s13 - s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*
                 (s13 + s23) + p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + 
                  s12*(2*s13^2 + 2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + 
                    s13*s23 - s23^2)) + p1q*p3q^2*s12*
                 (-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + s13*s23 + s23^2) + 
                  s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) + 
           (ep*(45*p1q^6*s12*s23^6*(s13 + s23)^2*(s12^6 + 3*s12^5*
                 (s13 + s23) - s12^2*s13^3*(s13 + s23) - s13^3*s23*
                 (s13 + s23)^2 + s12^3*s23*(2*s13^2 + 3*s13*s23 + s23^2) - 
                s12*s13^3*(s13^2 + 3*s13*s23 + 2*s23^2) + s12^4*(2*s13^2 + 
                  6*s13*s23 + 3*s23^2)) + 9*(s12 + s13)*(p3q*s12 - p2q*s13)^
                2*s23*(s13 + s23)*(s12 + s13 + s23)*(5*p3q^4*s12^2*s23^2*
                 (s12^5 + 2*s12^4*(s13 + s23) - s12*s13^3*(s13 + s23) - 
                  s13^3*s23*(s13 + s23) + s12^3*s23*(2*s13 + s23)) + 
                p2q*p3q^3*s12*(s12 + s23)*(5*s12^6*s23 + 5*s12^5*s23*
                   (s13 + 3*s23) + 2*s12*s13^3*s23*(3*s13^2 - 2*s13*s23 - 
                    5*s23^2) + 5*s13^3*s23^2*(2*s13^2 + 3*s13*s23 + s23^2) - 
                  s12^2*s13^3*(s13^2 + 6*s13*s23 + 5*s23^2) - s12^3*s23^2*
                   (19*s13^2 + 20*s13*s23 + 5*s23^2) + s12^4*(s13^3 - 
                    10*s13^2*s23 + 5*s13*s23^2 + 5*s23^3)) + p2q^4*s13*
                 (5*s12^6*s23*(s13 + s23) - 4*s12^2*s13^3*s23*(s13 + s23)^2 + 
                  s12*s13^3*(6*s13 - 11*s23)*s23*(s13 + s23)^2 + 5*s13^3*
                   (s13 - s23)*s23^2*(s13 + s23)^2 + s12^5*(-s13^3 + 
                    3*s13^2*s23 + 19*s13*s23^2 + 15*s23^3) + s12^4*s23*
                   (-12*s13^3 - 4*s13^2*s23 + 23*s13*s23^2 + 15*s23^3) + 
                  s12^3*(s13^5 + 2*s13^4*s23 - 10*s13^3*s23^2 - 7*s13^2*
                     s23^3 + 9*s13*s23^4 + 5*s23^5)) + p2q^2*p3q^2*
                 (5*s12^8*s23 - 5*s12^7*(s13 - 2*s23)*s23 - 5*s13^4*s23^3*
                   (s13 + s23)^2 + s12^6*(2*s13^3 - 19*s13^2*s23 - 
                    35*s13*s23^2 - 5*s23^3) + s12*s13^3*s23^2*(-16*s13^3 - 
                    7*s13^2*s23 + 19*s13*s23^2 + 10*s23^3) + s12^2*s13^3*s23*
                   (-11*s13^3 + 21*s13^2*s23 + 42*s13*s23^2 + 10*s23^3) - 
                  s12^5*(s13^4 - 22*s13^3*s23 + 32*s13^2*s23^2 + 60*s13*
                     s23^3 + 20*s23^4) + s12^4*(-2*s13^5 - 8*s13^4*s23 + 
                    24*s13^3*s23^2 + s13^2*s23^3 - 25*s13*s23^4 - 10*s23^5) + 
                  s12^3*s13*(s13^5 + 16*s13^4*s23 + 10*s13^3*s23^2 + 
                    4*s13^2*s23^3 + 14*s13*s23^4 + 5*s23^5)) + p2q^3*p3q*
                 (5*s13^4*(s13 - 2*s23)*s23^2*(s13 + s23)^2 - 5*s12^7*s23*
                   (2*s13 + s23) + s12^6*(s13^3 - 4*s13^2*s23 - 30*s13*
                     s23^2 - 15*s23^3) + s12^2*s13^3*s23*(-15*s13^3 - 
                    3*s13^2*s23 + 22*s13*s23^2 + 10*s23^3) + s12^5*
                   (-2*s13^4 + 24*s13^3*s23 + 16*s13^2*s23^2 - 20*s13*s23^3 - 
                    15*s23^4) + s12*s13^3*s23*(6*s13^4 - 15*s13^3*s23 - 
                    33*s13^2*s23^2 - 7*s13*s23^3 + 5*s23^4) - s12^4*
                   (s13^5 + 14*s13^4*s23 - 25*s13^3*s23^2 - 43*s13^2*s23^3 - 
                    10*s13*s23^4 + 5*s23^5) + s12^3*s13*(2*s13^5 + 13*s13^4*
                     s23 + 5*s13^3*s23^2 + 7*s13^2*s23^3 + 23*s13*s23^4 + 
                    10*s23^5))) - p1q^5*s23^3*(s12 + s23)*(s13 + s23)*(
                p3q*(35*s13^3*s23^4*(s13 + s23)^3 + 45*s12^7*s23^2*
                   (4*s13 + 5*s23) - s12*s13^3*s23^2*(s13 + s23)^2*
                   (45*s13^2 + 56*s13*s23 - 34*s23^2) - s12^2*s13^3*s23^2*
                   (131*s13^3 + 676*s13^2*s23 + 999*s13*s23^2 + 454*s23^3) + 
                  s12^6*(18*s13^4 + 9*s13^3*s23 + 481*s13^2*s23^2 + 
                    970*s13*s23^3 + 440*s23^4) + s12^5*(36*s13^5 - 513*s13^4*
                     s23 - 701*s13^3*s23^2 + 218*s13^2*s23^3 + 660*s13*
                     s23^4 + 240*s23^5) - s12^3*s23*(621*s13^6 + 2447*s13^5*
                     s23 + 3208*s13^4*s23^2 + 1709*s13^3*s23^3 + 252*s13^2*
                     s23^4 - 70*s13*s23^5 - 35*s23^6) + s12^4*(18*s13^6 - 
                    1143*s13^5*s23 - 2859*s13^4*s23^2 - 2638*s13^3*s23^3 - 
                    1055*s13^2*s23^4 - 60*s13*s23^5 + 60*s23^6)) + 
                p2q*(45*s12^7*s23^2*(s13 + s23) - 5*s13^3*(9*s13 - 7*s23)*
                   s23^3*(s13 + s23)^3 - s12*s13^3*s23^2*(s13 + s23)^2*
                   (189*s13^2 + 245*s13*s23 - 34*s23^2) + s12^2*s13^3*s23*
                   (9*s13^4 - 113*s13^3*s23 - 487*s13^2*s23^2 - 639*s13*
                     s23^3 - 274*s23^4) + s12^6*(18*s13^4 + 9*s13^3*s23 + 
                    211*s13^2*s23^2 + 295*s13*s23^3 + 80*s23^4) + 
                  s12^5*(36*s13^5 - 522*s13^4*s23 - 575*s13^3*s23^2 + 
                    173*s13^2*s23^3 + 300*s13*s23^4 + 60*s23^5) - s12^3*s23*
                   (612*s13^6 + 2294*s13^5*s23 + 2803*s13^4*s23^2 + 
                    1322*s13^3*s23^3 + 81*s13^2*s23^4 - 115*s13*s23^5 - 
                    35*s23^6) + s12^4*(18*s13^6 - 1152*s13^5*s23 - 2607*s13^4*
                     s23^2 - 1846*s13^3*s23^3 - 299*s13^2*s23^4 + 165*s13*
                     s23^5 + 60*s23^6))) - p1q^4*s23^2*(p2q^2*(s13 + s23)*
                 (5*s13^3*s23^4*(s13 + s23)^3*(36*s13^2 - 39*s13*s23 + 
                    7*s23^2) + s12*s13^3*s23^3*(s13 + s23)^2*(486*s13^3 + 
                    441*s13^2*s23 - 506*s13*s23^2 - 11*s23^3) - 
                  s12^8*(18*s13^4 + 9*s13^3*s23 + 31*s13^2*s23^2 + 
                    25*s13*s23^3 - 10*s23^4) + s12^2*s13^3*s23^2*(270*s13^5 + 
                    1137*s13^4*s23 + 1880*s13^3*s23^2 + 1235*s13^2*s23^3 - 
                    132*s13*s23^4 - 354*s23^5) + s12^7*(-90*s13^5 + 
                    459*s13^4*s23 + 788*s13^3*s23^2 + 274*s13^2*s23^3 + 
                    30*s23^5) + s12^6*(-126*s13^6 + 2556*s13^5*s23 + 
                    5070*s13^4*s23^2 + 3070*s13^3*s23^3 + 552*s13^2*s23^4 + 
                    70*s13*s23^5 + 65*s23^6) + s12^4*s23*(1737*s13^7 + 
                    9839*s13^6*s23 + 14368*s13^5*s23^2 + 6987*s13^4*s23^3 - 
                    198*s13^3*s23^4 - 779*s13^2*s23^5 + 105*s13*s23^6 + 
                    105*s23^7) + s12^5*(-54*s13^7 + 3852*s13^6*s23 + 
                    11483*s13^5*s23^2 + 10462*s13^4*s23^3 + 2898*s13^3*
                     s23^4 - 232*s13^2*s23^5 + 95*s13*s23^6 + 115*s23^7) + 
                  s12^3*s23*(-27*s13^8 + 1869*s13^7*s23 + 6860*s13^6*s23^2 + 
                    7039*s13^5*s23^3 + 1424*s13^4*s23^4 - 1131*s13^3*s23^5 - 
                    300*s13^2*s23^6 + 55*s13*s23^7 + 35*s23^8)) - 
                p3q^2*(s12 + s23)*(35*s13^4*s23^4*(s13 + s23)^4 - s12*s13^3*
                   s23^3*(s13 + s23)^3*(11*s13^2 - 94*s13*s23 - 95*s23^2) + 
                  90*s12^8*s23^2*(3*s13^2 + 8*s13*s23 + 5*s23^2) - 
                  s12^2*s13^3*s23^2*(s13 + s23)^2*(41*s13^3 + 443*s13^2*s23 + 
                    396*s13*s23^2 - 91*s23^3) - s12^3*s13*s23*(s13 + s23)^2*
                   (459*s13^5 + 1283*s13^4*s23 + 1780*s13^3*s23^2 + 
                    1509*s13^2*s23^3 - 35*s13*s23^4 - 35*s23^5) + 
                  s12^7*(54*s13^5 + 99*s13^4*s23 + 669*s13^3*s23^2 + 
                    2269*s13^2*s23^3 + 2500*s13*s23^4 + 860*s23^5) + 
                  s12^6*(126*s13^6 - 1206*s13^5*s23 - 4304*s13^4*s23^2 - 
                    4056*s13^3*s23^3 - 274*s13^2*s23^4 + 1415*s13*s23^5 + 
                    555*s23^6) + s12^5*(90*s13^7 - 3348*s13^6*s23 - 
                    13076*s13^5*s23^2 - 19167*s13^4*s23^3 - 13496*s13^3*
                     s23^4 - 4022*s13^2*s23^5 + 270*s13*s23^6 + 330*s23^7) + 
                  s12^4*(18*s13^8 - 2502*s13^7*s23 - 11541*s13^6*s23^2 - 
                    20769*s13^5*s23^3 - 18052*s13^4*s23^4 - 7123*s13^3*
                     s23^5 - 294*s13^2*s23^6 + 670*s13*s23^7 + 185*s23^8)) + 
                p2q*p3q*(-45*s12^9*s23^2*(3*s13^2 + 7*s13*s23 + 4*s23^2) + 
                  5*s13^3*s23^4*(s13 + s23)^4*(9*s13^2 - 37*s13*s23 + 
                    7*s23^2) + s12*s13^3*s23^3*(s13 + s23)^3*(189*s13^3 + 
                    174*s13^2*s23 - 311*s13*s23^2 - 61*s23^3) + s12^2*s13^3*
                   s23^2*(s13 + s23)^2*(135*s13^4 + 586*s13^3*s23 + 
                    1832*s13^2*s23^2 + 1266*s13*s23^3 - 405*s23^4) - 
                  s12^8*(72*s13^5 + 126*s13^4*s23 + 394*s13^3*s23^2 + 
                    1290*s13^2*s23^3 + 1480*s13*s23^4 + 535*s23^5) + 
                  s12^7*(-216*s13^6 + 1539*s13^5*s23 + 5632*s13^4*s23^2 + 
                    5016*s13^3*s23^3 - 326*s13^2*s23^4 - 2265*s13*s23^5 - 
                    755*s23^6) + s12^6*(-216*s13^7 + 5652*s13^6*s23 + 
                    22187*s13^5*s23^2 + 31800*s13^4*s23^3 + 19770*s13^3*
                     s23^4 + 2749*s13^2*s23^5 - 2405*s13*s23^6 - 820*s23^7) + 
                  s12^5*(-72*s13^8 + 6174*s13^7*s23 + 30251*s13^6*s23^2 + 
                    56510*s13^5*s23^3 + 51011*s13^4*s23^4 + 20981*s13^3*
                     s23^5 + 660*s13^2*s23^6 - 2350*s13*s23^7 - 580*s23^8) + 
                  s12^4*s23*(2178*s13^8 + 16180*s13^7*s23 + 40526*s13^6*
                     s23^2 + 49106*s13^5*s23^3 + 30288*s13^4*s23^4 + 
                    6965*s13^3*s23^5 - 1691*s13^2*s23^6 - 1035*s13*s23^7 - 
                    125*s23^8) + s12^3*s23*(-9*s13^9 + 2360*s13^8*s23 + 
                    11716*s13^7*s23^2 + 21152*s13^6*s23^3 + 17588*s13^5*
                     s23^4 + 6224*s13^4*s23^5 + 35*s13^3*s23^6 - 431*s13^2*
                     s23^7 + 10*s13*s23^8 + 35*s23^9))) + 
              p1q*(p2q^5*s13^2*(s13 + s23)*(5*s13^4*s23^3*(s13 + s23)^3*
                   (9*s13^2 - 45*s13*s23 + 34*s23^2) + s12^8*(18*s13^4 + 
                    9*s13^3*s23 - 14*s13^2*s23^2 - 65*s13*s23^3 - 55*s23^4) + 
                  s12*s13^3*s23^2*(s13 + s23)^2*(54*s13^4 - 216*s13^3*s23 - 
                    444*s13^2*s23^2 + 401*s13*s23^3 + 125*s23^4) + 
                  s12^7*(54*s13^5 - 342*s13^4*s23 - 661*s13^3*s23^2 - 
                    482*s13^2*s23^3 - 387*s13*s23^4 - 220*s23^5) + 
                  s12^2*s13^3*s23^2*(27*s13^5 - 286*s13^4*s23 - 640*s13^3*
                     s23^2 - 42*s13^2*s23^3 + 597*s13*s23^4 + 312*s23^5) + 
                  s12^6*(54*s13^6 - 1152*s13^5*s23 - 3137*s13^4*s23^2 - 
                    2631*s13^3*s23^3 - 1241*s13^2*s23^4 - 871*s13*s23^5 - 
                    330*s23^6) + s12^5*(18*s13^7 - 1224*s13^6*s23 - 
                    5027*s13^5*s23^2 - 6121*s13^4*s23^3 - 3015*s13^3*s23^4 - 
                    1310*s13^2*s23^5 - 941*s13*s23^6 - 220*s23^7) + 
                  s12^3*s13*s23*(18*s13^7 - 284*s13^6*s23 - 1528*s13^5*
                     s23^2 - 1703*s13^4*s23^3 - 261*s13^3*s23^4 + 138*s13^2*
                     s23^5 - 218*s13*s23^6 - 100*s23^7) - s12^4*s23*
                   (405*s13^7 + 2794*s13^6*s23 + 5302*s13^5*s23^2 + 
                    3703*s13^4*s23^3 + 1103*s13^3*s23^4 + 755*s13^2*s23^5 + 
                    492*s13*s23^6 + 55*s23^7)) - p3q^5*s12^3*(s12 + s23)*
                 (45*s12^8*s23^2*(s13 + s23) - 5*s13^4*s23^3*(s13 + s23)^3*
                   (9*s13 + 20*s23) - s12*s13^3*s23^3*(s13 + s23)^2*
                   (101*s13^2 + 291*s13*s23 + 145*s23^2) + s12^2*s13^3*s23^2*
                   (31*s13^4 - 246*s13^3*s23 - 771*s13^2*s23^2 - 640*s13*
                     s23^3 - 146*s23^4) + s12^7*(18*s13^4 + 9*s13^3*s23 + 
                    76*s13^2*s23^2 + 160*s13*s23^3 + 80*s23^4) + 
                  s12^6*(54*s13^5 - 342*s13^4*s23 - 769*s13^3*s23^2 - 
                    468*s13^2*s23^3 + 200*s13*s23^4 + 240*s23^5) + 
                  s12^3*s13*s23*(-459*s13^6 - 1687*s13^5*s23 - 2147*s13^4*
                     s23^2 - 989*s13^3*s23^3 + 455*s13^2*s23^4 + 655*s13*
                     s23^5 + 170*s23^6) + s12^5*(54*s13^6 - 1170*s13^5*s23 - 
                    2831*s13^4*s23^2 - 2429*s13^3*s23^3 - 107*s13^2*s23^4 + 
                    1080*s13*s23^5 + 420*s23^6) + s12^4*(18*s13^7 - 
                    1278*s13^6*s23 - 3749*s13^5*s23^2 - 3803*s13^4*s23^3 - 
                    703*s13^3*s23^4 + 1632*s13^2*s23^5 + 1165*s13*s23^6 + 
                    215*s23^7)) - p2q*p3q^4*s12^2*(s12 + s23)*
                 (45*s12^9*s23^2*(s13 + s23) + 5*s13^4*s23^3*(s13 + s23)^3*
                   (27*s13^2 + 24*s13*s23 + 11*s23^2) + 2*s12*s13^3*s23^2*
                   (s13 + s23)^2*(27*s13^4 + 192*s13^3*s23 + 198*s13^2*
                     s23^2 + 128*s13*s23^3 + 50*s23^4) + s12^8*(36*s13^4 + 
                    18*s13^3*s23 - 73*s13^2*s23^2 + 185*s13*s23^3 + 
                    250*s23^4) + s12^7*(54*s13^5 - 738*s13^4*s23 - 1694*s13^3*
                     s23^2 - 727*s13^2*s23^3 + 1035*s13*s23^4 + 760*s23^5) - 
                  s12^2*s13^3*s23*(9*s13^6 + 318*s13^5*s23 + 80*s13^4*s23^2 - 
                    880*s13^3*s23^3 - 549*s13^2*s23^4 + 246*s13*s23^5 + 
                    144*s23^6) + s12^6*(-54*s13^6 - 1377*s13^5*s23 - 
                    2833*s13^4*s23^2 - 1803*s13^3*s23^3 + 1202*s13^2*s23^4 + 
                    2275*s13*s23^5 + 780*s23^6) + s12^3*s13*s23*(1368*s13^7 + 
                    5168*s13^6*s23 + 6412*s13^5*s23^2 + 2591*s13^4*s23^3 - 
                    1242*s13^3*s23^4 - 1776*s13^2*s23^5 - 760*s13*s23^6 - 
                    125*s23^7) + s12^5*(-126*s13^7 + 918*s13^6*s23 + 
                    2345*s13^5*s23^2 + 2665*s13^4*s23^3 + 2001*s13^3*s23^4 + 
                    1247*s13^2*s23^5 + 485*s13*s23^6 + 55*s23^7) + 
                  s12^4*(-54*s13^8 + 2916*s13^7*s23 + 9142*s13^6*s23^2 + 
                    10450*s13^5*s23^3 + 4186*s13^4*s23^4 - 1501*s13^3*s23^5 - 
                    2269*s13^2*s23^6 - 1020*s13*s23^7 - 170*s23^8)) - 
                p2q^2*p3q^3*s12*(-5*s13^5*s23^4*(s13 + s23)^3*(27*s13^2 - 
                    12*s13*s23 - 14*s23^2) - 3*s12*s13^4*s23^3*(s13 + s23)^2*
                   (96*s13^4 + 123*s13^3*s23 - 53*s13^2*s23^2 - 50*s13*
                     s23^3 - 15*s23^4) + s12^10*(18*s13^4 + 9*s13^3*s23 - 
                    149*s13^2*s23^2 - 20*s13*s23^3 + 125*s23^4) - 
                  s12^9*(54*s13^5 + 423*s13^4*s23 + 748*s13^3*s23^2 + 
                    694*s13^2*s23^3 - 100*s13*s23^4 - 385*s23^5) + 
                  s12^8*(-216*s13^6 + 810*s13^5*s23 + 2245*s13^4*s23^2 + 
                    964*s13^3*s23^3 - 1355*s13^2*s23^4 - 795*s13*s23^5 + 
                    110*s23^6) + s12^7*(-144*s13^7 + 4572*s13^6*s23 + 
                    13360*s13^5*s23^2 + 14269*s13^4*s23^3 + 3788*s13^3*
                     s23^4 - 4837*s13^2*s23^5 - 3770*s13*s23^6 - 730*s23^7) + 
                  s12^2*s13^3*s23^2*(-144*s13^7 - 75*s13^6*s23 + 919*s13^5*
                     s23^2 + 1935*s13^4*s23^3 + 2156*s13^3*s23^4 + 1809*s13^2*
                     s23^5 + 893*s13*s23^6 + 155*s23^7) + s12^6*(54*s13^8 + 
                    3609*s13^7*s23 + 17093*s13^6*s23^2 + 26762*s13^5*s23^3 + 
                    16861*s13^4*s23^4 - 1245*s13^3*s23^5 - 8352*s13^2*s23^6 - 
                    4700*s13*s23^7 - 875*s23^8) - s12^4*s13*s23*(1332*s13^8 + 
                    6921*s13^7*s23 + 10361*s13^6*s23^2 + 5443*s13^5*s23^3 - 
                    443*s13^4*s23^4 - 1031*s13^3*s23^5 + 85*s13^2*s23^6 + 
                    212*s13*s23^7 + 45*s23^8) + s12^3*s13^2*s23*(18*s13^8 - 
                    834*s13^7*s23 - 4192*s13^6*s23^2 - 4926*s13^5*s23^3 + 
                    627*s13^4*s23^4 + 4221*s13^3*s23^5 + 2562*s13^2*s23^6 + 
                    664*s13*s23^7 + 70*s23^8) + s12^5*(54*s13^9 - 1071*s13^8*
                     s23 + 346*s13^7*s23^2 + 8175*s13^6*s23^3 + 12163*s13^5*
                     s23^4 + 4595*s13^4*s23^5 - 3906*s13^3*s23^6 - 4607*s13^2*
                     s23^7 - 1890*s13*s23^8 - 295*s23^9)) - p2q^4*p3q*s13*
                 (-5*s13^5*s23^3*(s13 + s23)^4*(9*s13^2 - 45*s13*s23 + 
                    59*s23^2) - s12*s13^4*s23^2*(s13 + s23)^3*(54*s13^4 - 
                    351*s13^3*s23 + 3*s13^2*s23^2 + 688*s13*s23^3 + 
                    45*s23^4) + s12^2*s13^3*s23^2*(s13 + s23)^2*(126*s13^5 - 
                    103*s13^4*s23 - 1146*s13^3*s23^2 - 633*s13^2*s23^3 - 
                    86*s13*s23^4 + 70*s23^5) + s12^9*(54*s13^5 + 63*s13^4*
                     s23 - 69*s13^3*s23^2 - 88*s13^2*s23^3 + 65*s13*s23^4 + 
                    70*s23^5) + s12^8*(126*s13^6 - 963*s13^5*s23 - 2801*s13^4*
                     s23^2 - 2511*s13^3*s23^3 - 472*s13^2*s23^4 + 557*s13*
                     s23^5 + 280*s23^6) + s12^7*(54*s13^7 - 2763*s13^6*s23 - 
                    9601*s13^5*s23^2 - 11899*s13^4*s23^3 - 5996*s13^3*s23^4 + 
                    25*s13^2*s23^5 + 1326*s13*s23^6 + 420*s23^7) - 
                  s12^6*(54*s13^8 + 1458*s13^7*s23 + 8744*s13^6*s23^2 + 
                    16377*s13^5*s23^3 + 12832*s13^4*s23^4 + 3153*s13^3*
                     s23^5 - 1558*s13^2*s23^6 - 1286*s13*s23^7 - 280*s23^8) + 
                  s12^4*s13*s23*(873*s13^8 + 5357*s13^7*s23 + 10473*s13^6*
                     s23^2 + 9539*s13^5*s23^3 + 5342*s13^4*s23^4 + 3401*s13^3*
                     s23^5 + 2278*s13^2*s23^6 + 754*s13*s23^7 + 45*s23^8) + 
                  s12^3*s13^2*s23*(-27*s13^8 + 550*s13^7*s23 + 2631*s13^6*
                     s23^2 + 3655*s13^5*s23^3 + 1559*s13^4*s23^4 + 90*s13^3*
                     s23^5 + 652*s13^2*s23^6 + 675*s13*s23^7 + 155*s23^8) + 
                  s12^5*(-36*s13^9 + 1179*s13^8*s23 + 3112*s13^7*s23^2 + 
                    856*s13^6*s23^3 - 2766*s13^5*s23^4 - 967*s13^4*s23^5 + 
                    2074*s13^3*s23^6 + 1748*s13^2*s23^7 + 497*s13*s23^8 + 
                    70*s23^9)) + p2q^3*p3q^2*(-5*s13^6*(9*s13 - 25*s23)*s23^4*
                   (s13 + s23)^4 - s12*s13^5*s23^3*(s13 + s23)^3*(189*s13^3 - 
                    348*s13^2*s23 - 137*s13*s23^2 + 150*s23^3) - s12^2*s13^4*
                   s23^2*(s13 + s23)^2*(153*s13^5 - 479*s13^4*s23 - 
                    1410*s13^3*s23^2 - 147*s13^2*s23^3 + 201*s13*s23^4 + 
                    60*s23^5) + s12^10*(54*s13^5 + 45*s13^4*s23 - 168*s13^3*
                     s23^2 + 16*s13^2*s23^3 + 310*s13*s23^4 + 125*s23^5) + 
                  s12^9*(54*s13^6 - 1080*s13^5*s23 - 2574*s13^4*s23^2 - 
                    1751*s13^3*s23^3 + 864*s13^2*s23^4 + 1585*s13*s23^5 + 
                    500*s23^6) - s12^8*(144*s13^7 + 1548*s13^6*s23 + 
                    4667*s13^5*s23^2 + 5618*s13^4*s23^3 + 1774*s13^3*s23^4 - 
                    2676*s13^2*s23^5 - 2745*s13*s23^6 - 750*s23^7) + 
                  s12^3*s13^3*s23*(9*s13^8 - 140*s13^7*s23 - 870*s13^6*
                     s23^2 - 1100*s13^5*s23^3 + 347*s13^4*s23^4 + 944*s13^3*
                     s23^5 - 176*s13^2*s23^6 - 504*s13*s23^7 - 110*s23^8) - 
                  s12^4*s13^2*s23*(486*s13^8 + 1279*s13^7*s23 - 2043*s13^6*
                     s23^2 - 6811*s13^5*s23^3 - 4768*s13^4*s23^4 + 316*s13^3*
                     s23^5 + 1604*s13^2*s23^6 + 635*s13*s23^7 + 60*s23^8) + 
                  s12^7*(-216*s13^8 + 2673*s13^7*s23 + 6536*s13^6*s23^2 + 
                    5331*s13^5*s23^3 + 1539*s13^4*s23^4 + 829*s13^3*s23^5 + 
                    2119*s13^2*s23^6 + 1825*s13*s23^7 + 500*s23^8) + 
                  s12^5*s13*(18*s13^9 + 1350*s13^8*s23 + 11110*s13^7*s23^2 + 
                    26441*s13^6*s23^3 + 28220*s13^5*s23^4 + 13854*s13^4*
                     s23^5 + 1453*s13^3*s23^6 - 1609*s13^2*s23^7 - 825*s13*
                     s23^8 - 150*s23^9) + s12^6*(-54*s13^9 + 4941*s13^8*s23 + 
                    21199*s13^7*s23^2 + 32348*s13^6*s23^3 + 22975*s13^5*
                     s23^4 + 7151*s13^4*s23^5 - 64*s13^3*s23^6 - 474*s13^2*
                     s23^7 + 205*s13*s23^8 + 125*s23^9))) + p1q^3*s23*(
                p2q^3*(s13 + s23)*(30*s13^4*s23^4*(s13 + s23)^3*(9*s13^2 - 
                    14*s13*s23 + 5*s23^2) + s12*s13^3*s23^3*(s13 + s23)^2*
                   (504*s13^4 + 189*s13^3*s23 - 1159*s13^2*s23^2 + 
                    91*s13*s23^3 + 35*s23^4) + s12^8*(-36*s13^5 - 36*s13^4*
                     s23 + 28*s13^3*s23^2 + 53*s13^2*s23^3 + 45*s13*s23^4 + 
                    35*s23^5) + 3*s12^2*s13^3*s23^2*(60*s13^6 + 271*s13^5*
                     s23 + 374*s13^4*s23^2 - 80*s13^3*s23^3 - 570*s13^2*
                     s23^4 - 319*s13*s23^5 + 8*s23^6) + s12^7*(-126*s13^6 + 
                    1089*s13^5*s23 + 1507*s13^4*s23^2 + 223*s13^3*s23^3 - 
                    89*s13^2*s23^4 + 285*s13*s23^5 + 140*s23^6) - 
                  3*s12^6*(48*s13^7 - 1272*s13^6*s23 - 2322*s13^5*s23^2 - 
                    875*s13^4*s23^3 + 388*s13^3*s23^4 + 71*s13^2*s23^5 - 
                    215*s13*s23^6 - 70*s23^7) + s12^4*s23*(1566*s13^8 + 
                    8773*s13^7*s23 + 10072*s13^6*s23^2 - 454*s13^5*s23^3 - 
                    5833*s13^4*s23^4 - 2037*s13^3*s23^5 + 622*s13^2*s23^6 + 
                    330*s13*s23^7 + 35*s23^8) + s12^3*s13*s23*(-27*s13^8 + 
                    1635*s13^7*s23 + 5399*s13^6*s23^2 + 2962*s13^5*s23^3 - 
                    3337*s13^4*s23^4 - 3342*s13^3*s23^5 - 351*s13^2*s23^6 + 
                    249*s13*s23^7 + 60*s23^8) + s12^5*(-54*s13^8 + 4284*s13^7*
                     s23 + 12301*s13^6*s23^2 + 8004*s13^5*s23^3 - 2377*s13^4*
                     s23^4 - 3056*s13^3*s23^5 + 302*s13^2*s23^6 + 675*s13*
                     s23^7 + 140*s23^8)) - p3q^3*s12*(s12 + s23)*
                 (5*s13^4*s23^4*(s13 + s23)^3*(5*s13 + 12*s23) + 90*s12^8*
                   s23^2*(2*s13^2 + 7*s13*s23 + 5*s23^2) - s12*s13^3*s23^3*
                   (s13 + s23)^2*(22*s13^3 + 40*s13^2*s23 - 57*s13*s23^2 - 
                    30*s23^3) + s12^2*s13^3*s23^2*(53*s13^5 - 446*s13^4*s23 - 
                    2085*s13^3*s23^2 - 2636*s13^2*s23^3 - 1026*s13*s23^4 + 
                    24*s23^5) + 3*s12^7*(18*s13^5 + 45*s13^4*s23 + 139*s13^3*
                     s23^2 + 567*s13^2*s23^3 + 730*s13*s23^4 + 280*s23^5) + 
                  s12^6*(144*s13^6 - 927*s13^5*s23 - 4948*s13^4*s23^2 - 
                    6172*s13^3*s23^3 - 2030*s13^2*s23^4 + 1140*s13*s23^5 + 
                    720*s23^6) - s12^3*s13*s23*(918*s13^7 + 4648*s13^6*s23 + 
                    9596*s13^5*s23^2 + 10906*s13^4*s23^3 + 7056*s13^3*s23^4 + 
                    1621*s13^2*s23^5 - 505*s13*s23^6 - 150*s23^7) + 
                  s12^5*(126*s13^7 - 3267*s13^6*s23 - 15316*s13^5*s23^2 - 
                    24674*s13^4*s23^3 - 18342*s13^3*s23^4 - 5166*s13^2*
                     s23^5 + 1080*s13*s23^6 + 720*s23^7) + s12^4*(36*s13^8 - 
                    3123*s13^7*s23 - 15336*s13^6*s23^2 - 28862*s13^5*s23^3 - 
                    25696*s13^4*s23^4 - 9696*s13^3*s23^5 + 690*s13^2*s23^6 + 
                    1650*s13*s23^7 + 390*s23^8)) - p2q*p3q^2*(s12 + s23)*
                 (5*s13^4*(23*s13 - 7*s23)*s23^4*(s13 + s23)^4 + 135*s12^9*
                   s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) - 2*s12*s13^3*s23^3*
                   (s13 + s23)^3*(29*s13^3 - 69*s13^2*s23 - 93*s13*s23^2 + 
                    30*s23^3) + s12^2*s13^3*s23^2*(s13 + s23)^2*(89*s13^4 - 
                    679*s13^3*s23 - 728*s13^2*s23^2 + 463*s13*s23^3 + 
                    33*s23^4) + s12^8*(90*s13^5 + 207*s13^4*s23 + 146*s13^3*
                     s23^2 + 719*s13^2*s23^3 + 1300*s13*s23^4 + 630*s23^5) + 
                  s12^7*(252*s13^6 - 1620*s13^5*s23 - 8475*s13^4*s23^2 - 
                    10922*s13^3*s23^3 - 4034*s13^2*s23^4 + 1525*s13*s23^5 + 
                    1020*s23^6) + 2*s12^6*(135*s13^7 - 2916*s13^6*s23 - 
                    12879*s13^5*s23^2 - 18797*s13^4*s23^3 - 11587*s13^3*
                     s23^4 - 1438*s13^2*s23^5 + 1610*s13*s23^6 + 540*s23^7) - 
                  s12^3*s13*s23*(864*s13^8 + 3249*s13^7*s23 + 5428*s13^6*
                     s23^2 + 6872*s13^5*s23^3 + 5519*s13^4*s23^4 + 1043*s13^3*
                     s23^5 - 602*s13^2*s23^6 + 80*s13*s23^7 + 35*s23^8) + 
                  s12^5*(144*s13^8 - 6570*s13^7*s23 - 28160*s13^6*s23^2 - 
                    44410*s13^5*s23^3 - 30808*s13^4*s23^4 - 5472*s13^3*
                     s23^5 + 4547*s13^2*s23^6 + 2305*s13*s23^7 + 270*s23^8) + 
                  s12^4*(36*s13^9 - 3429*s13^8*s23 - 12714*s13^7*s23^2 - 
                    18078*s13^6*s23^3 - 11736*s13^5*s23^4 - 2293*s13^4*
                     s23^5 + 1869*s13^3*s23^6 + 925*s13^2*s23^7 - 320*s13*
                     s23^8 - 150*s23^9)) + p2q^2*p3q*(5*s13^4*s23^4*
                   (s13 + s23)^4*(27*s13^2 - 80*s13*s23 + 37*s23^2) + 
                  s12*s13^3*s23^3*(s13 + s23)^3*(297*s13^4 + 42*s13^3*s23 - 
                    830*s13^2*s23^2 + 95*s23^4) + s12^2*s13^3*s23^2*
                   (s13 + s23)^2*(135*s13^5 + 332*s13^4*s23 + 1298*s13^3*
                     s23^2 + 8*s13^2*s23^3 - 1867*s13*s23^4 - 54*s23^5) + 
                  s12^9*(-36*s13^5 - 72*s13^4*s23 + 91*s13^3*s23^2 + 
                    217*s13^2*s23^3 + 80*s13*s23^4 - 15*s23^5) + 
                  s12^8*(-144*s13^6 + 576*s13^5*s23 + 3231*s13^4*s23^2 + 
                    4310*s13^3*s23^3 + 2094*s13^2*s23^4 + 180*s13*s23^5 - 
                    55*s23^6) + s12^7*(-270*s13^7 + 3393*s13^6*s23 + 
                    13731*s13^5*s23^2 + 18060*s13^4*s23^3 + 10148*s13^3*
                     s23^4 + 2061*s13^2*s23^5 + 105*s13*s23^6 + 110*s23^7) + 
                  s12^6*(-252*s13^8 + 6957*s13^7*s23 + 26405*s13^6*s23^2 + 
                    36373*s13^5*s23^3 + 20096*s13^4*s23^4 + 734*s13^3*s23^5 - 
                    2205*s13^2*s23^6 + 670*s13*s23^7 + 510*s23^8) + 
                  s12^3*s13*s23*(-18*s13^9 + 2311*s13^8*s23 + 10563*s13^7*
                     s23^2 + 15139*s13^6*s23^3 + 5517*s13^5*s23^4 - 
                    5876*s13^4*s23^5 - 6266*s13^3*s23^6 - 1619*s13^2*s23^7 + 
                    254*s13*s23^8 + 95*s23^9) + s12^4*s23*(2421*s13^9 + 
                    16224*s13^8*s23 + 32406*s13^7*s23^2 + 24075*s13^6*s23^3 - 
                    2727*s13^5*s23^4 - 15289*s13^4*s23^5 - 7940*s13^3*s23^6 - 
                    45*s13^2*s23^7 + 870*s13*s23^8 + 185*s23^9) + 
                  s12^5*(-90*s13^9 + 6651*s13^8*s23 + 28350*s13^7*s23^2 + 
                    42925*s13^6*s23^3 + 23544*s13^5*s23^4 - 5759*s13^4*
                     s23^5 - 11665*s13^3*s23^6 - 2688*s13^2*s23^7 + 
                    1440*s13*s23^8 + 545*s23^9))) + p1q^2*(p2q^4*s13*
                 (s13 + s23)*(-20*s13^4*s23^4*(s13 + s23)^3*(9*s13^2 - 
                    22*s13*s23 + 12*s23^2) - s12*s13^3*s23^3*(s13 + s23)^2*
                   (261*s13^4 - 204*s13^3*s23 - 1121*s13^2*s23^2 + 359*s13*
                     s23^3 + 115*s23^4) + s12^8*(18*s13^5 - 27*s13^4*s23 - 
                    95*s13^3*s23^2 - 55*s13^2*s23^3 - 15*s13*s23^4 - 
                    25*s23^5) + s12^2*s13^3*s23^2*(-45*s13^6 - 259*s13^5*
                     s23 + 65*s13^4*s23^2 + 1380*s13^3*s23^3 + 1722*s13^2*
                     s23^4 + 429*s13*s23^5 - 192*s23^6) + s12^7*(54*s13^6 - 
                    459*s13^5*s23 + 149*s13^4*s23^2 + 1088*s13^3*s23^3 + 
                    507*s13^2*s23^4 - 174*s13*s23^5 - 100*s23^6) + 
                  s12^6*(54*s13^7 - 1278*s13^6*s23 + 103*s13^5*s23^2 + 
                    5154*s13^4*s23^3 + 5221*s13^3*s23^4 + 1205*s13^2*s23^5 - 
                    402*s13*s23^6 - 150*s23^7) + s12^5*(18*s13^8 - 1278*s13^7*
                     s23 - 1409*s13^6*s23^2 + 6900*s13^5*s23^3 + 12377*s13^4*
                     s23^4 + 6493*s13^3*s23^5 + 602*s13^2*s23^6 - 312*s13*
                     s23^7 - 100*s23^8) + s12^4*s23*(-423*s13^8 - 1687*s13^7*
                     s23 + 2436*s13^6*s23^2 + 10313*s13^5*s23^3 + 9444*s13^4*
                     s23^4 + 2677*s13^3*s23^5 - 108*s13^2*s23^6 - 39*s13*
                     s23^7 - 25*s23^8) + s12^3*s13*s23*(9*s13^8 - 464*s13^7*
                     s23 - 955*s13^6*s23^2 + 2199*s13^5*s23^3 + 5111*s13^4*
                     s23^4 + 2832*s13^3*s23^5 + 145*s13^2*s23^6 - 67*s13*
                     s23^7 + 30*s23^8)) + p3q^4*s12^2*(s12 + s23)*
                 (-5*s13^4*s23^4*(s13 + s23)^3*(11*s13 + 6*s23) + 
                  45*s12^8*s23^2*(s13^2 + 6*s13*s23 + 5*s23^2) - s12*s13^3*
                   s23^3*(s13 + s23)^2*(11*s13^3 + 189*s13^2*s23 + 263*s13*
                     s23^2 + 130*s23^3) + s12^2*s13^3*s23^2*(49*s13^5 - 
                    81*s13^4*s23 - 1277*s13^3*s23^2 - 2329*s13^2*s23^3 - 
                    1316*s13*s23^4 - 134*s23^5) + s12^7*(18*s13^5 + 
                    81*s13^4*s23 + 112*s13^3*s23^2 + 599*s13^2*s23^3 + 
                    945*s13*s23^4 + 410*s23^5) + s12^6*(54*s13^6 - 144*s13^5*
                     s23 - 2290*s13^4*s23^2 - 3683*s13^3*s23^3 - 1751*s13^2*
                     s23^4 + 555*s13*s23^5 + 555*s23^6) - s12^3*s13*s23*
                   (459*s13^7 + 2992*s13^6*s23 + 7105*s13^5*s23^2 + 
                    8106*s13^4*s23^3 + 4645*s13^3*s23^4 + 396*s13^2*s23^5 - 
                    875*s13*s23^6 - 240*s23^7) + s12^5*(54*s13^7 - 990*s13^6*
                     s23 - 7412*s13^5*s23^2 - 13835*s13^4*s23^3 - 10968*s13^3*
                     s23^4 - 2546*s13^2*s23^5 + 1620*s13*s23^6 + 780*s23^7) + 
                  s12^4*(18*s13^8 - 1224*s13^7*s23 - 8096*s13^6*s23^2 - 
                    17362*s13^5*s23^3 - 16229*s13^4*s23^4 - 5417*s13^3*
                     s23^5 + 1984*s13^2*s23^6 + 1980*s13*s23^7 + 
                    410*s23^8)) + p2q*p3q^3*s12*(s12 + s23)*(45*s12^9*s23^2*
                   (s13^2 + 5*s13*s23 + 4*s23^2) - 5*s13^4*s23^4*(s13 + s23)^
                    3*(14*s13^2 - 4*s13*s23 + 5*s23^2) + s12*s13^3*s23^3*
                   (s13 + s23)^2*(85*s13^4 - s13^3*s23 + 106*s13^2*s23^2 + 
                    87*s13*s23^3 + 30*s23^4) + s12^8*(36*s13^5 + 144*s13^4*
                     s23 - 10*s13^3*s23^2 - 3*s13^2*s23^3 + 650*s13*s23^4 + 
                    560*s23^5) - s12^6*s23*(1548*s13^6 + 10622*s13^5*s23 + 
                    18767*s13^4*s23^2 + 12776*s13^3*s23^3 + 248*s13^2*s23^4 - 
                    3920*s13*s23^5 - 1320*s23^6) + s12^2*s13^3*s23^2*
                   (-188*s13^6 - 285*s13^5*s23 - 73*s13^4*s23^2 + 141*s13^3*
                     s23^3 + 254*s13^2*s23^4 + 10*s13*s23^5 - 127*s23^6) + 
                  s12^7*(72*s13^6 - 441*s13^5*s23 - 4552*s13^4*s23^2 - 
                    7608*s13^3*s23^3 - 3594*s13^2*s23^4 + 1505*s13*s23^5 + 
                    1260*s23^6) + s12^3*s13*s23*(927*s13^8 + 4624*s13^7*s23 + 
                    8556*s13^6*s23^2 + 7246*s13^5*s23^3 + 2412*s13^4*s23^4 + 
                    132*s13^3*s23^5 - 338*s13^2*s23^6 - 480*s13*s23^7 - 
                    115*s23^8) + s12^5*(-72*s13^8 - 270*s13^7*s23 - 
                    4509*s13^6*s23^2 - 10174*s13^5*s23^3 - 6663*s13^4*s23^4 + 
                    2344*s13^3*s23^5 + 5009*s13^2*s23^6 + 1985*s13*s23^7 + 
                    200*s23^8) + s12^4*(-36*s13^9 + 1620*s13^8*s23 + 
                    6428*s13^7*s23^2 + 12155*s13^6*s23^3 + 13495*s13^5*
                     s23^4 + 8132*s13^4*s23^5 + 2331*s13^3*s23^6 - 569*s13^2*
                     s23^7 - 970*s13*s23^8 - 240*s23^9)) + p2q^2*p3q^2*
                 (5*s13^5*(25*s13 - 23*s23)*s23^5*(s13 + s23)^4 + s12*s13^4*
                   s23^4*(s13 + s23)^3*(222*s13^3 + 15*s13^2*s23 - 
                    82*s13*s23^2 - 95*s23^3) + s12^2*s13^3*s23^3*(s13 + s23)^
                    2*(236*s13^5 - 31*s13^4*s23 - 123*s13^3*s23^2 + 
                    856*s13^2*s23^3 + 57*s13*s23^4 + 5*s23^5) + s12^10*
                   (18*s13^5 + 63*s13^4*s23 - 122*s13^3*s23^2 - 422*s13^2*
                     s23^3 - 160*s13*s23^4 + 105*s23^5) - s12^9*(18*s13^6 + 
                    333*s13^5*s23 + 2063*s13^4*s23^2 + 3592*s13^3*s23^3 + 
                    2429*s13^2*s23^4 + 140*s13*s23^5 - 335*s23^6) - 
                  s12^8*(144*s13^7 - 63*s13^6*s23 + 1335*s13^5*s23^2 + 
                    3543*s13^4*s23^3 + 3434*s13^3*s23^4 + 1563*s13^2*s23^5 + 
                    225*s13*s23^6 - 20*s23^7) + s12^7*(-144*s13^8 + 
                    2790*s13^7*s23 + 9614*s13^6*s23^2 + 15777*s13^5*s23^3 + 
                    17299*s13^4*s23^4 + 10852*s13^3*s23^5 + 1165*s13^2*
                     s23^6 - 2430*s13*s23^7 - 900*s23^8) + s12^3*s13^2*s23^2*
                   (-320*s13^8 - 1711*s13^7*s23 - 1885*s13^6*s23^2 + 
                    1755*s13^5*s23^3 + 5928*s13^4*s23^4 + 6022*s13^3*s23^5 + 
                    2574*s13^2*s23^6 + 206*s13*s23^7 - 25*s23^8) + 
                  s12^6*(-18*s13^9 + 3285*s13^8*s23 + 17354*s13^7*s23^2 + 
                    37702*s13^6*s23^3 + 49143*s13^5*s23^4 + 39525*s13^4*
                     s23^5 + 15529*s13^3*s23^6 - 1914*s13^2*s23^7 - 
                    4130*s13*s23^8 - 1045*s23^9) + s12^4*s13*s23*
                   (-459*s13^9 - 1361*s13^8*s23 + 2351*s13^7*s23^2 + 
                    9770*s13^6*s23^3 + 14273*s13^5*s23^4 + 13386*s13^4*
                     s23^5 + 7088*s13^3*s23^6 + 606*s13^2*s23^7 - 837*s13*
                     s23^8 - 185*s23^9) + s12^5*(18*s13^10 + 495*s13^9*s23 + 
                    7305*s13^8*s23^2 + 22826*s13^7*s23^3 + 38395*s13^6*
                     s23^4 + 41027*s13^5*s23^5 + 25485*s13^4*s23^6 + 
                    5118*s13^3*s23^7 - 3447*s13^2*s23^8 - 2130*s13*s23^9 - 
                    355*s23^10)) + p2q^3*p3q*(-5*s13^5*s23^4*(s13 + s23)^4*
                   (27*s13^2 - 86*s13*s23 + 71*s23^2) - s12*s13^4*s23^3*
                   (s13 + s23)^3*(207*s13^4 - 408*s13^3*s23 - 774*s13^2*
                     s23^2 + 506*s13*s23^3 + 185*s23^4) + s12^9*(-36*s13^6 - 
                    54*s13^5*s23 + 127*s13^4*s23^2 + 311*s13^3*s23^3 + 
                    106*s13^2*s23^4 - 165*s13*s23^5 - 115*s23^6) - 
                  s12^2*s13^3*s23^2*(s13 + s23)^2*(45*s13^6 - 148*s13^5*s23 + 
                    s13^4*s23^2 - 236*s13^3*s23^3 - 1003*s13^2*s23^4 + 
                    272*s13*s23^5 + 25*s23^6) + s12^7*s23*(1485*s13^7 + 
                    6230*s13^6*s23 + 13324*s13^5*s23^2 + 16195*s13^4*s23^3 + 
                    9345*s13^3*s23^4 + 59*s13^2*s23^5 - 2315*s13*s23^6 - 
                    690*s23^7) + s12^8*(-72*s13^7 + 594*s13^6*s23 + 
                    2014*s13^5*s23^2 + 3699*s13^4*s23^3 + 3417*s13^3*s23^4 + 
                    561*s13^2*s23^5 - 1070*s13*s23^6 - 460*s23^7) + 
                  s12^6*(72*s13^9 + 72*s13^8*s23 + 5805*s13^7*s23^2 + 
                    20094*s13^6*s23^3 + 31881*s13^5*s23^4 + 27055*s13^4*
                     s23^5 + 9876*s13^3*s23^6 - 1527*s13^2*s23^7 - 2175*s13*
                     s23^8 - 460*s23^9) + s12^4*s13*s23*(-882*s13^9 - 
                    4174*s13^8*s23 - 1327*s13^7*s23^2 + 12817*s13^6*s23^3 + 
                    23571*s13^5*s23^4 + 19685*s13^4*s23^5 + 8324*s13^3*
                     s23^6 + 957*s13^2*s23^7 - 376*s13*s23^8 - 95*s23^9) + 
                  s12^3*s13^2*s23*(9*s13^9 - 766*s13^8*s23 - 2982*s13^7*
                     s23^2 - 1131*s13^6*s23^3 + 6833*s13^5*s23^4 + 
                    10788*s13^4*s23^5 + 6770*s13^3*s23^6 + 1870*s13^2*s23^7 + 
                    136*s13*s23^8 + 5*s23^9) + s12^5*(36*s13^10 - 1656*s13^9*
                     s23 - 1991*s13^8*s23^2 + 10062*s13^7*s23^3 + 29601*s13^6*
                     s23^4 + 34734*s13^5*s23^5 + 20749*s13^4*s23^6 + 
                    4433*s13^3*s23^7 - 1512*s13^2*s23^8 - 860*s13*s23^9 - 
                    115*s23^10)))))/(18*p1q*(p2q + p3q)*s12^3*s13^3*
             (s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)^2*
             (-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + (p3q*s12 - p1q*s23)^2*(
                p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + s23) - 
                p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*
                  (s13 + s23)) + p3q*(s12 + s13)*(-(s13*(s13 + s23)) + 
                  s12*(3*s13 + 2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*
                 (s12 - 3*s13 - s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*
                 (s13 + s23) + p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + 
                  s12*(2*s13^2 + 2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + 
                    s13*s23 - s23^2)) + p1q*p3q^2*s12*
                 (-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + s13*s23 + s23^2) + 
                  s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) + 
           (-18*p1q^6*s12*s23^4*(s13 + s23)*(-5*s13^4*s23^3*(s13 + s23)^3 + 5*
                s12^7*s23^2*(4*s13 + 3*s23) + s12^2*s13^3*s23*(s13 + s23)^2*
                (4*s13^2 - 22*s13*s23 - 21*s23^2) - 5*s12*s13^3*s23^2*
                (s13 + s23)^2*(2*s13^2 + 5*s13*s23 + 2*s23^2) + 5*s12^6*s23*
                (-s13^3 + 14*s13^2*s23 + 23*s13*s23^2 + 9*s23^3) + s12^5*
                (9*s13^5 - 2*s13^4*s23 + 69*s13^3*s23^2 + 230*s13^2*s23^3 + 
                 190*s13*s23^4 + 45*s23^5) + s12^4*(18*s13^6 + 33*s13^5*s23 + 
                 32*s13^4*s23^2 + 152*s13^3*s23^3 + 230*s13^2*s23^4 + 
                 115*s13*s23^5 + 15*s23^6) + s12^3*s13*(9*s13^6 + 
                 34*s13^5*s23 + 18*s13^4*s23^2 + 10*s13^3*s23^3 + 
                 67*s13^2*s23^4 + 70*s13*s23^5 + 20*s23^6)) - 
             18*(s12 + s13)*(s12 + s13 + s23)*(p3q^6*s12^4*s23*
                (-5*s13^4*s23^3*(s13 + s23)^2 - 10*s12*s13^3*s23^2*
                  (s13 + s23)^3 + 5*s12^6*s23^2*(4*s13 + 3*s23) + 
                 s12^2*s13^3*s23*(4*s13^3 - 8*s13^2*s23 - 23*s13*s23^2 - 
                   11*s23^3) + 5*s12^5*s23*(-s13^3 + 10*s13^2*s23 + 
                   16*s13*s23^2 + 6*s23^3) + s12^4*(9*s13^5 + 3*s13^4*s23 + 
                   24*s13^3*s23^2 + 100*s13^2*s23^3 + 80*s13*s23^4 + 
                   15*s23^5) + s12^3*s13*(9*s13^5 + 21*s13^4*s23 + 
                   5*s13^3*s23^2 + 28*s13^2*s23^3 + 50*s13*s23^4 + 
                   20*s23^5)) + p2q*p3q^5*s12^3*(s12 + s23)*
                (5*s13^4*s23^3*(s13 + s23)^2*(6*s13 + s23) + 5*s12^7*s23^2*
                  (4*s13 + 3*s23) + s12*s13^3*s23^2*(s13 + s23)^2*(43*s13^2 + 
                   45*s13*s23 + 10*s23^2) + 5*s12^6*s23*(-2*s13^3 + 
                   8*s13^2*s23 + 19*s13*s23^2 + 9*s23^3) - s12^2*s13^3*s23*
                  (43*s13^4 + 63*s13^3*s23 + 26*s13^2*s23^2 + 25*s13*s23^3 + 
                   19*s23^4) + s12^5*(18*s13^5 + 22*s13^4*s23 - 2*s13^3*
                    s23^2 + 39*s13^2*s23^3 + 55*s13*s23^4 + 15*s23^5) - 
                 s12^3*s13*s23*(26*s13^5 + 43*s13^4*s23 + 131*s13^3*s23^2 + 
                   204*s13^2*s23^3 + 120*s13*s23^4 + 20*s23^5) + 
                 s12^4*(18*s13^6 + 67*s13^5*s23 + 23*s13^4*s23^2 - 
                   144*s13^3*s23^3 - 163*s13^2*s23^4 - 70*s13*s23^5 - 
                   15*s23^6)) + p2q^6*s13^3*(s13 + s23)*(15*s13^4*(s13 - s23)*
                  s23^3*(s13 + s23)^2 + 5*s12^7*s23^2*(4*s13 + 3*s23) + 
                 s12^2*s13^3*s23*(s13 + s23)^2*(s13^2 + 33*s13*s23 - 
                   49*s23^2) + s12*s13^3*s23^2*(s13 + s23)^2*(28*s13^2 - 
                   23*s13*s23 - 20*s23^2) + s12^6*(144*s13^4 + 225*s13^3*
                    s23 + 119*s13^2*s23^2 + 68*s13*s23^3 + 35*s23^4) + 
                 s12^3*s13*s23*(179*s13^5 + 372*s13^4*s23 + 231*s13^3*s23^2 + 
                   31*s13^2*s23^3 + 3*s13*s23^4 + 10*s23^5) + s12^5*
                  (306*s13^5 + 690*s13^4*s23 + 519*s13^3*s23^2 + 191*s13^2*
                    s23^3 + 76*s13*s23^4 + 25*s23^5) + s12^4*(162*s13^6 + 
                   661*s13^5*s23 + 794*s13^4*s23^2 + 342*s13^3*s23^3 + 
                   75*s13^2*s23^4 + 38*s13*s23^5 + 5*s23^6)) - p2q^5*p3q*
                s13^2*(-15*s13^5*(s13 - 2*s23)*s23^3*(s13 + s23)^3 + 
                 5*s12^8*s23^2*(4*s13 + 3*s23)^2 - s12*s13^4*s23^2*
                  (s13 + s23)^2*(28*s13^3 - 83*s13^2*s23 - 86*s13*s23^2 - 
                   5*s23^3) - s12^3*s13^2*s23*(s13 + s23)^2*(192*s13^4 + 
                   25*s13^3*s23 + 103*s13^2*s23^2 + 115*s13*s23^3 + 
                   20*s23^4) - s12^2*s13^3*s23*(s13 + s23)^2*(s13^4 - 
                   62*s13^3*s23 - 85*s13^2*s23^2 - 3*s13*s23^3 + 50*s23^4) + 
                 s12^7*(432*s13^5 + 989*s13^4*s23 + 853*s13^3*s23^2 + 
                   542*s13^2*s23^3 + 366*s13*s23^4 + 115*s23^5) + 
                 s12^6*(792*s13^6 + 2461*s13^5*s23 + 2788*s13^4*s23^2 + 
                   1578*s13^3*s23^3 + 731*s13^2*s23^4 + 372*s13*s23^5 + 
                   95*s23^6) + s12^5*(198*s13^7 + 1513*s13^6*s23 + 
                   2850*s13^5*s23^2 + 2014*s13^4*s23^3 + 611*s13^3*s23^4 + 
                   268*s13^2*s23^5 + 156*s13*s23^6 + 25*s23^7) + s12^4*s13*
                  (-162*s13^7 - 240*s13^6*s23 + 230*s13^5*s23^2 + 464*s13^4*
                    s23^3 + 12*s13^3*s23^4 - 195*s13^2*s23^5 - 21*s13*s23^6 + 
                   30*s23^7)) + p2q^2*p3q^4*s12^2*(5*s12^9*s23^2*(4*s13 + 
                   3*s23) - 5*s13^5*s23^4*(s13 + s23)^2*(12*s13 + 5*s23) - 
                 3*s12*s13^4*s23^3*(s13 + s23)^2*(58*s13^2 + 31*s13*s23 + 
                   10*s23^2) + 5*s12^8*s23*(-2*s13^3 - 8*s13^2*s23 + 
                   3*s13*s23^2 + 6*s23^3) - s12^7*(126*s13^5 + 209*s13^4*
                    s23 + 272*s13^3*s23^2 + 364*s13^2*s23^3 + 195*s13*s23^4 + 
                   15*s23^5) + s12^2*s13^3*s23^2*(-52*s13^5 - 198*s13^4*s23 - 
                   186*s13^3*s23^2 + 29*s13^2*s23^3 + 89*s13*s23^4 + 
                   20*s23^5) + s12^4*s13*s23*(-261*s13^6 - 691*s13^5*s23 - 
                   301*s13^4*s23^2 + 378*s13^3*s23^3 + 292*s13^2*s23^4 + 
                   23*s13*s23^5 - 5*s23^6) + s12^3*s13^2*s23*(74*s13^6 + 
                   53*s13^5*s23 + 69*s13^4*s23^2 + 391*s13^3*s23^3 + 
                   471*s13^2*s23^4 + 225*s13*s23^5 + 50*s23^6) - 
                 s12^6*(342*s13^6 + 806*s13^5*s23 + 658*s13^4*s23^2 + 
                   633*s13^3*s23^3 + 709*s13^2*s23^4 + 360*s13*s23^5 + 
                   60*s23^6) - s12^5*(216*s13^7 + 1032*s13^6*s23 + 
                   1215*s13^5*s23^2 + 411*s13^4*s23^3 + 284*s13^3*s23^4 + 
                   412*s13^2*s23^5 + 175*s13*s23^6 + 30*s23^7)) + p2q^4*p3q^2*
                s13*(-15*s13^6*s23^4*(s13 + s23)^3 - s12*s13^5*s23^3*
                  (s13 + s23)^2*(88*s13^2 - 7*s13*s23 - 50*s23^2) + 
                 15*s12^9*s23^2*(8*s13^2 + 10*s13*s23 + 3*s23^2) - 
                 s12^2*s13^4*s23^2*(s13 + s23)^2*(96*s13^3 - 115*s13^2*s23 - 
                   167*s13*s23^2 - 75*s23^3) + s12^3*s13^3*s23*(s13 + s23)^2*
                  (13*s13^4 - 52*s13^3*s23 + 234*s13^2*s23^2 + 124*s13*
                    s23^3 - 30*s23^4) + s12^8*(432*s13^5 + 861*s13^4*s23 + 
                   674*s13^3*s23^2 + 568*s13^2*s23^3 + 453*s13*s23^4 + 
                   125*s23^5) - s12^4*s13^2*s23*(637*s13^6 + 1560*s13^5*s23 + 
                   1330*s13^4*s23^2 + 605*s13^3*s23^3 + 362*s13^2*s23^4 + 
                   239*s13*s23^5 + 75*s23^6) + s12^7*(540*s13^6 + 1705*s13^5*
                    s23 + 1757*s13^4*s23^2 + 892*s13^3*s23^3 + 586*s13^2*
                    s23^4 + 426*s13*s23^5 + 115*s23^6) - s12^5*s13^2*
                  (504*s13^6 + 1879*s13^5*s23 + 2333*s13^4*s23^2 + 
                   1398*s13^3*s23^3 + 946*s13^2*s23^4 + 736*s13*s23^5 + 
                   220*s23^6) + s12^6*(-396*s13^7 - 205*s13^6*s23 + 
                   653*s13^5*s23^2 + 241*s13^4*s23^3 - 321*s13^3*s23^4 - 
                   7*s13^2*s23^5 + 123*s13*s23^6 + 35*s23^7)) + p2q^3*p3q^3*
                s12*(5*s13^6*s23^4*(s13 + s23)^2*(10*s13 + 7*s23) + 
                 s12*s13^6*s23^3*(s13 + s23)^2*(184*s13 + 61*s23) - 
                 5*s12^9*s23^2*(16*s13^2 + 16*s13*s23 + 3*s23^2) + 
                 s12^2*s13^4*s23^2*(s13 + s23)^2*(116*s13^3 - 5*s13^2*s23 - 
                   121*s13*s23^2 - 75*s23^3) - s12^8*(144*s13^5 + 231*s13^4*
                    s23 + 145*s13^3*s23^2 + 243*s13^2*s23^3 + 220*s13*s23^4 + 
                   45*s23^5) + s12^7*(72*s13^6 - 21*s13^5*s23 + 54*s13^4*
                    s23^2 + 225*s13^3*s23^3 + 13*s13^2*s23^4 - 140*s13*
                    s23^5 - 45*s23^6) - s12^3*s13^3*s23*(54*s13^6 - 
                   73*s13^5*s23 + s13^4*s23^2 + 563*s13^3*s23^3 + 608*s13^2*
                    s23^4 + 203*s13*s23^5 + 30*s23^6) + s12^4*s13^2*s23*
                  (704*s13^6 + 1779*s13^5*s23 + 1317*s13^4*s23^2 + 
                   176*s13^3*s23^3 + 34*s13^2*s23^4 + 185*s13*s23^5 + 
                   75*s23^6) + s12^6*(756*s13^7 + 1679*s13^6*s23 + 
                   1412*s13^5*s23^2 + 1171*s13^4*s23^3 + 1059*s13^3*s23^4 + 
                   462*s13^2*s23^5 + 50*s13*s23^6 - 15*s23^7) + s12^5*s13*
                  (540*s13^7 + 2407*s13^6*s23 + 3187*s13^5*s23^2 + 
                   1766*s13^4*s23^3 + 1024*s13^3*s23^4 + 904*s13^2*s23^5 + 
                   361*s13*s23^6 + 50*s23^7))) + p1q^5*s23^3*(s12 + s23)*
              (p2q*(s13 + s23)*(-10*s13^4*(27*s13 - 23*s23)*s23^3*(s13 + s23)^
                   3 + 90*s12^8*s23^2*(4*s13 + 3*s23) - 2*s12*s13^3*s23^2*
                  (s13 + s23)^2*(387*s13^3 + 485*s13^2*s23 - 282*s13*s23^2 - 
                   150*s23^3) + 2*s12^7*(27*s13^4 + 9*s13^3*s23 + 1012*s13^2*
                    s23^2 + 1095*s13*s23^3 + 250*s23^4) + s12^6*(324*s13^5 - 
                   765*s13^4*s23 + 3028*s13^3*s23^2 + 5717*s13^2*s23^3 + 
                   2740*s13*s23^4 + 420*s23^5) + s12^2*s13^3*s23*(18*s13^5 - 
                   1437*s13^4*s23 - 2869*s13^3*s23^2 - 831*s13^2*s23^3 + 
                   1187*s13*s23^4 + 604*s23^5) + s12^5*(648*s13^6 - 
                   3357*s13^5*s23 - 2382*s13^4*s23^2 + 4259*s13^3*s23^3 + 
                   4556*s13^2*s23^4 + 1730*s13*s23^5 + 420*s23^6) + 
                 s12^4*(864*s13^7 - 3519*s13^6*s23 - 7535*s13^5*s23^2 - 
                   2264*s13^4*s23^3 + 2191*s13^3*s23^4 + 2103*s13^2*s23^5 + 
                   1120*s13*s23^6 + 230*s23^7) + s12^3*s13*(486*s13^7 - 
                   603*s13^6*s23 - 3642*s13^5*s23^2 - 2559*s13^4*s23^3 + 
                   916*s13^3*s23^4 + 1402*s13^2*s23^5 + 700*s13*s23^6 + 
                   300*s23^7)) + p3q*(230*s13^4*s23^4*(s13 + s23)^4 + 
                 90*s12^8*s23^2*(16*s13^2 + 32*s13*s23 + 15*s23^2) - 
                 2*s12*s13^3*s23^2*(s13 + s23)^3*(45*s13^3 - 172*s13^2*s23 - 
                   462*s13*s23^2 - 150*s23^3) - s12^2*s13^3*s23*(s13 + s23)^2*
                  (90*s13^4 + 375*s13^3*s23 - 656*s13^2*s23^2 - 1465*s13*
                    s23^3 - 604*s23^4) + 2*s12^7*(27*s13^5 - 144*s13^4*s23 + 
                   2236*s13^3*s23^2 + 6427*s13^2*s23^3 + 5260*s13*s23^4 + 
                   1330*s23^5) + s12^6*(972*s13^6 + 693*s13^5*s23 + 
                   3379*s13^4*s23^2 + 14937*s13^3*s23^3 + 18969*s13^2*s23^4 + 
                   9280*s13*s23^5 + 1500*s23^6) + s12^5*(1620*s13^7 + 
                   1125*s13^6*s23 - 3633*s13^5*s23^2 - 2227*s13^4*s23^3 + 
                   4855*s13^3*s23^4 + 6124*s13^2*s23^5 + 2600*s13*s23^6 + 
                   420*s23^7) + s12^4*(864*s13^8 - 1881*s13^7*s23 - 
                   11558*s13^6*s23^2 - 16783*s13^5*s23^3 - 10927*s13^4*
                    s23^4 - 2438*s13^3*s23^5 + 1549*s13^2*s23^6 + 1260*s13*
                    s23^7 + 230*s23^8) + s12^3*s13*(162*s13^8 - 1791*s13^7*
                    s23 - 7881*s13^6*s23^2 - 11169*s13^5*s23^3 - 6701*s13^4*
                    s23^4 - 1192*s13^3*s23^5 + 788*s13^2*s23^6 + 820*s13*
                    s23^7 + 300*s23^8))) + p1q*(-(p2q^5*s13^2*(s13 + s23)*
                 (10*s13^5*s23^3*(s13 + s23)^3*(27*s13^2 - 135*s13*s23 + 
                    104*s23^2) + 2*s12^9*(27*s13^4 + 54*s13^3*s23 + 
                    22*s13^2*s23^2 - 210*s13*s23^3 - 155*s23^4) + 2*s12*s13^4*
                   s23^2*(s13 + s23)^2*(252*s13^4 - 828*s13^3*s23 - 
                    1882*s13^2*s23^2 + 1583*s13*s23^3 + 1075*s23^4) + 
                  s12^8*(2808*s13^5 + 999*s13^4*s23 - 2760*s13^3*s23^2 - 
                    2849*s13^2*s23^3 - 2238*s13*s23^4 - 880*s23^5) + 
                  s12^7*(10692*s13^6 + 3798*s13^5*s23 - 18209*s13^4*s23^2 - 
                    16004*s13^3*s23^3 - 7153*s13^2*s23^4 - 3754*s13*s23^5 - 
                    780*s23^6) + s12^3*s13^2*s23*(3546*s13^7 + 2892*s13^6*
                     s23 - 15146*s13^5*s23^2 - 19353*s13^4*s23^3 + 4286*s13^3*
                     s23^4 + 12853*s13^2*s23^5 + 3386*s13*s23^6 - 
                    240*s23^7) + s12^6*(16092*s13^7 + 10134*s13^6*s23 - 
                    43901*s13^5*s23^2 - 55589*s13^4*s23^3 - 21185*s13^3*
                     s23^4 - 5503*s13^2*s23^5 - 2574*s13*s23^6 - 160*s23^7) + 
                  s12^2*s13^3*s23*(18*s13^7 + 1386*s13^6*s23 - 2875*s13^5*
                     s23^2 - 9701*s13^4*s23^3 + 1479*s13^3*s23^4 + 
                    14839*s13^2*s23^5 + 8922*s13*s23^6 + 1020*s23^7) + 
                  s12^4*s13*(2916*s13^8 + 12465*s13^7*s23 - 12459*s13^6*
                     s23^2 - 59643*s13^5*s23^3 - 46516*s13^4*s23^4 - 
                    4546*s13^3*s23^5 + 3765*s13^2*s23^6 - 580*s13*s23^7 - 
                    100*s23^8) + s12^5*(11070*s13^8 + 16164*s13^7*s23 - 
                    42965*s13^6*s23^2 - 88144*s13^5*s23^3 - 46630*s13^4*
                     s23^4 - 6650*s13^3*s23^5 - 1583*s13^2*s23^6 - 738*s13*
                     s23^7 + 50*s23^8))) + p3q^5*s12^3*(90*s12^10*s23^2*
                  (4*s13 + 3*s23) - 10*s13^5*s23^4*(s13 + s23)^3*(9*s13 + 
                   4*s23) - 2*s12*s13^4*s23^3*(s13 + s23)^2*(90*s13^3 + 
                   208*s13^2*s23 + 298*s13*s23^2 + 185*s23^3) + 2*s12^9*
                  (27*s13^4 - 36*s13^3*s23 + 562*s13^2*s23^2 + 960*s13*
                    s23^3 + 385*s23^4) + 5*s12^8*(108*s13^5 + 45*s13^4*s23 + 
                   42*s13^3*s23^2 + 521*s13^2*s23^3 + 888*s13*s23^4 + 
                   400*s23^5) + s12^2*s13^3*s23^2*(72*s13^6 + 509*s13^5*s23 + 
                   1081*s13^4*s23^2 - 213*s13^3*s23^3 - 2333*s13^2*s23^4 - 
                   1896*s13*s23^5 - 420*s23^6) + s12^7*(972*s13^6 + 
                   162*s13^5*s23 - 3143*s13^4*s23^2 - 2234*s13^3*s23^3 + 
                   8669*s13^2*s23^4 + 11960*s13*s23^5 + 4080*s23^6) + 
                 s12^3*s13^2*s23*(162*s13^7 - 24*s13^6*s23 + 2548*s13^5*
                    s23^2 + 7503*s13^4*s23^3 + 7958*s13^3*s23^4 + 5941*s13^2*
                    s23^5 + 4052*s13*s23^6 + 1380*s23^7) + s12^4*s13*s23*
                  (-945*s13^7 - 3495*s13^6*s23 + 1053*s13^5*s23^2 + 
                   10886*s13^4*s23^3 + 20258*s13^3*s23^4 + 23655*s13^2*
                    s23^5 + 13730*s13*s23^6 + 2780*s23^7) + s12^6*
                  (540*s13^7 - 2232*s13^6*s23 - 7289*s13^5*s23^2 - 
                   7403*s13^4*s23^3 + 8713*s13^3*s23^4 + 27149*s13^2*s23^5 + 
                   19260*s13*s23^6 + 3890*s23^7) + s12^5*(54*s13^8 - 
                   3204*s13^7*s23 - 8099*s13^6*s23^2 - 5020*s13^5*s23^3 + 
                   8702*s13^4*s23^4 + 30412*s13^3*s23^5 + 32311*s13^2*s23^6 + 
                   12960*s13*s23^7 + 1310*s23^8)) + p2q*p3q^4*s12^2*
                (90*s12^11*s23^2*(4*s13 + 3*s23) + 50*s13^5*s23^4*(s13 + s23)^
                   3*(9*s13^2 + 6*s13*s23 - s23^2) + 2*s12*s13^4*s23^3*
                  (s13 + s23)^2*(567*s13^4 + 1497*s13^3*s23 + 1413*s13^2*
                    s23^2 + 543*s13*s23^3 + 50*s23^4) + 2*s12^10*(54*s13^4 + 
                   18*s13^3*s23 + 44*s13^2*s23^2 + 1245*s13*s23^3 + 
                   905*s23^4) + 2*s12^9*(297*s13^5 + 198*s13^4*s23 - 
                   1917*s13^3*s23^2 + 1422*s13^2*s23^3 + 6240*s13*s23^4 + 
                   3100*s23^5) + s12^8*(-324*s13^6 - 2187*s13^5*s23 - 
                   8581*s13^4*s23^2 - 3997*s13^3*s23^3 + 25641*s13^2*s23^4 + 
                   30940*s13*s23^5 + 9400*s23^6) + s12^2*s13^3*s23^2*
                  (72*s13^7 - 789*s13^6*s23 - 3072*s13^5*s23^2 - 1408*s13^4*
                    s23^3 + 3562*s13^3*s23^4 + 3837*s13^2*s23^5 + 1318*s13*
                    s23^6 + 240*s23^7) + s12^7*(-1836*s13^7 - 5796*s13^6*
                    s23 - 7651*s13^5*s23^2 - 7373*s13^4*s23^3 + 19303*s13^3*
                    s23^4 + 47675*s13^2*s23^5 + 29890*s13*s23^6 + 
                   5050*s23^7) + s12^4*s13*s23*(2727*s13^8 + 2400*s13^7*s23 - 
                   34042*s13^6*s23^2 - 86925*s13^5*s23^3 - 90970*s13^4*
                    s23^4 - 59883*s13^3*s23^5 - 32063*s13^2*s23^6 - 
                   11930*s13*s23^7 - 2150*s23^8) + s12^6*(-864*s13^8 + 
                   1944*s13^7*s23 + 2627*s13^6*s23^2 - 8118*s13^5*s23^3 - 
                   9306*s13^4*s23^4 + 11254*s13^3*s23^5 + 16773*s13^2*s23^6 + 
                   4440*s13*s23^7 - 730*s23^8) - s12^3*s13^2*s23*(612*s13^8 + 
                   1836*s13^7*s23 + 17816*s13^6*s23^2 + 49769*s13^5*s23^3 + 
                   56373*s13^4*s23^4 + 33525*s13^3*s23^5 + 14779*s13^2*
                    s23^6 + 5630*s13*s23^7 + 1020*s23^8) + s12^5*(162*s13^9 + 
                   8532*s13^8*s23 + 9567*s13^7*s23^2 - 23839*s13^6*s23^3 - 
                   58192*s13^5*s23^4 - 54688*s13^4*s23^5 - 34369*s13^3*
                    s23^6 - 18927*s13^2*s23^7 - 7010*s13*s23^8 - 
                   1040*s23^9)) - p2q^3*p3q^2*(-10*s13^7*(27*s13 - 77*s23)*
                  s23^4*(s13 + s23)^4 - 2*s12*s13^6*s23^3*(s13 + s23)^3*
                  (657*s13^3 - 1034*s13^2*s23 - 1361*s13*s23^2 - 480*s23^3) - 
                 s12^2*s13^5*s23^2*(s13 + s23)^2*(1224*s13^5 - 437*s13^4*
                    s23 - 9260*s13^3*s23^2 - 7719*s13^2*s23^3 - 2680*s13*
                    s23^4 + 60*s23^5) + 2*s12^11*(81*s13^5 + 189*s13^4*s23 - 
                   420*s13^3*s23^2 + 427*s13^2*s23^3 + 1125*s13*s23^4 + 
                   385*s23^5) + s12^10*(2916*s13^6 + 13869*s13^5*s23 + 
                   15279*s13^4*s23^2 + 7363*s13^3*s23^3 + 11167*s13^2*s23^4 + 
                   11410*s13*s23^5 + 3080*s23^6) + s12^9*(3942*s13^7 + 
                   30690*s13^6*s23 + 65801*s13^5*s23^2 + 57189*s13^4*s23^3 + 
                   33881*s13^3*s23^4 + 31975*s13^2*s23^5 + 21150*s13*s23^6 + 
                   4620*s23^7) - s12^4*s13^3*s23*(8487*s13^8 + 23862*s13^7*
                    s23 + 16503*s13^6*s23^2 + 9297*s13^5*s23^3 + 32278*s13^4*
                    s23^4 + 35475*s13^3*s23^5 + 11512*s13^2*s23^6 + 
                   136*s13*s23^7 - 170*s23^8) + s12^3*s13^4*s23*(252*s13^8 - 
                   2616*s13^7*s23 + 3142*s13^6*s23^2 + 26597*s13^5*s23^3 + 
                   35291*s13^4*s23^4 + 18957*s13^3*s23^5 + 5509*s13^2*s23^6 + 
                   1426*s13*s23^7 + 170*s23^8) + s12^8*(-6912*s13^8 + 
                   279*s13^7*s23 + 52164*s13^6*s23^2 + 86647*s13^5*s23^3 + 
                   58123*s13^4*s23^4 + 39106*s13^3*s23^5 + 36947*s13^2*
                    s23^6 + 18030*s13*s23^7 + 3080*s23^8) - s12^6*s13*
                  (18900*s13^9 + 74493*s13^8*s23 + 127121*s13^7*s23^2 + 
                   161276*s13^6*s23^3 + 182241*s13^5*s23^4 + 145380*s13^4*
                    s23^5 + 59802*s13^3*s23^6 + 5393*s13^2*s23^7 - 
                   3502*s13*s23^8 - 960*s23^9) - s12^7*(20898*s13^9 + 
                   58554*s13^8*s23 + 64886*s13^7*s23^2 + 41578*s13^6*s23^3 + 
                   32873*s13^5*s23^4 + 21487*s13^4*s23^5 - 9445*s13^3*s23^6 - 
                   18847*s13^2*s23^7 - 7000*s13*s23^8 - 770*s23^9) - 
                 s12^5*s13^2*(6102*s13^9 + 41598*s13^8*s23 + 82223*s13^7*
                    s23^2 + 102129*s13^6*s23^3 + 140293*s13^5*s23^4 + 
                   155873*s13^4*s23^5 + 92248*s13^3*s23^6 + 22786*s13^2*
                    s23^7 + 1240*s13*s23^8 + 60*s23^9)) + p2q^4*p3q*s13*
                (-10*s13^6*s23^3*(s13 + s23)^4*(27*s13^2 - 135*s13*s23 + 
                   181*s23^2) - 2*s12*s13^5*s23^2*(s13 + s23)^3*(252*s13^4 - 
                   1233*s13^3*s23 - 191*s13^2*s23^2 + 3514*s13*s23^3 + 
                   1605*s23^4) + 2*s12^10*(81*s13^5 + 216*s13^4*s23 - 
                   6*s13^3*s23^2 - s13^2*s23^3 + 375*s13*s23^4 + 230*s23^5) - 
                 2*s12^2*s13^4*s23*(s13 + s23)^2*(9*s13^6 + 81*s13^5*s23 - 
                   1795*s13^4*s23^2 + 3527*s13^3*s23^3 + 9660*s13^2*s23^4 + 
                   5786*s13*s23^5 + 400*s23^6) + s12^9*(5724*s13^6 + 
                   17847*s13^5*s23 + 23870*s13^4*s23^2 + 16457*s13^3*s23^3 + 
                   7588*s13^2*s23^4 + 3998*s13*s23^5 + 1480*s23^6) + 
                 3*s12^8*(6120*s13^7 + 21042*s13^6*s23 + 37625*s13^5*s23^2 + 
                   41614*s13^4*s23^3 + 26303*s13^3*s23^4 + 8850*s13^2*s23^5 + 
                   2188*s13*s23^6 + 560*s23^7) - s12^3*s13^3*s23*
                  (3798*s13^8 + 4020*s13^7*s23 - 7639*s13^6*s23^2 - 
                   629*s13^5*s23^3 + 30425*s13^4*s23^4 + 36537*s13^3*s23^5 + 
                   14392*s13^2*s23^6 + 508*s13*s23^7 - 540*s23^8) + 
                 s12^7*(21060*s13^8 + 90450*s13^7*s23 + 199123*s13^6*s23^2 + 
                   291631*s13^5*s23^3 + 267869*s13^4*s23^4 + 134691*s13^3*
                    s23^5 + 31614*s13^2*s23^6 + 3924*s13*s23^7 + 760*s23^8) + 
                 s12^4*s13^2*(-2916*s13^9 - 9234*s13^8*s23 + 13182*s13^7*
                    s23^2 + 63078*s13^6*s23^3 + 85915*s13^5*s23^4 + 
                   79642*s13^4*s23^5 + 58071*s13^3*s23^6 + 24868*s13^2*
                    s23^7 + 3812*s13*s23^8 - 370*s23^9) + s12^5*s13*
                  (-4968*s13^9 + 10485*s13^8*s23 + 85669*s13^7*s23^2 + 
                   189717*s13^6*s23^3 + 262840*s13^5*s23^4 + 246904*s13^4*
                    s23^5 + 134157*s13^3*s23^6 + 31798*s13^2*s23^7 + 
                   906*s13*s23^8 - 210*s23^9) + s12^6*(6210*s13^9 + 
                   60678*s13^8*s23 + 178291*s13^7*s23^2 + 316798*s13^6*
                    s23^3 + 380844*s13^5*s23^4 + 275614*s13^4*s23^5 + 
                   100777*s13^3*s23^6 + 13930*s13^2*s23^7 + 398*s13*s23^8 + 
                   100*s23^9)) + p2q^2*p3q^3*s12*(-10*s13^6*s23^4*(s13 + s23)^
                   3*(63*s13^2 - 24*s13*s23 - 10*s23^2) - 2*s12*s13^5*s23^3*
                  (s13 + s23)^2*(999*s13^4 + 1317*s13^3*s23 - 322*s13^2*
                    s23^2 - 170*s13*s23^3 + 105*s23^4) + 2*s12^11*(27*s13^4 + 
                   54*s13^3*s23 - 518*s13^2*s23^2 + 105*s13*s23^3 + 
                   385*s23^4) - s12^10*(108*s13^5 + 207*s13^4*s23 + 
                   3024*s13^3*s23^2 + 3135*s13^2*s23^3 - 2370*s13*s23^4 - 
                   2350*s23^5) - s12^9*(4374*s13^6 + 18270*s13^5*s23 + 
                   22487*s13^4*s23^2 + 16702*s13^3*s23^3 + 9291*s13^2*s23^4 + 
                   1890*s13*s23^5 - 620*s23^6) + s12^2*s13^4*s23^2*
                  (-864*s13^7 - 2415*s13^6*s23 + 6667*s13^5*s23^2 + 
                   25265*s13^4*s23^3 + 26043*s13^3*s23^4 + 9400*s13^2*s23^5 + 
                   34*s13*s23^6 - 370*s23^7) - s12^8*(12096*s13^7 + 
                   61983*s13^6*s23 + 107555*s13^5*s23^2 + 90970*s13^4*s23^3 + 
                   58697*s13^3*s23^4 + 42605*s13^2*s23^5 + 22080*s13*s23^6 + 
                   4540*s23^7) + s12^4*s13^2*s23*(-6453*s13^8 - 19935*s13^7*
                    s23 + 734*s13^6*s23^2 + 67793*s13^5*s23^3 + 107581*s13^4*
                    s23^4 + 72328*s13^3*s23^5 + 18118*s13^2*s23^6 - 
                   1416*s13*s23^7 - 800*s23^8) + s12^3*s13^3*s23*(720*s13^8 - 
                   54*s13^7*s23 + 14442*s13^6*s23^2 + 68015*s13^5*s23^3 + 
                   111034*s13^4*s23^4 + 84147*s13^3*s23^5 + 30068*s13^2*
                    s23^6 + 4776*s13*s23^7 + 540*s23^8) - s12^7*
                  (15174*s13^8 + 86364*s13^7*s23 + 207344*s13^6*s23^2 + 
                   244726*s13^5*s23^3 + 169663*s13^4*s23^4 + 113808*s13^3*
                    s23^5 + 81047*s13^2*s23^6 + 33270*s13*s23^7 + 
                   5390*s23^8) - s12^6*(10692*s13^9 + 69309*s13^8*s23 + 
                   195162*s13^7*s23^2 + 291006*s13^6*s23^3 + 242127*s13^5*
                    s23^4 + 144141*s13^4*s23^5 + 102109*s13^3*s23^6 + 
                   62784*s13^2*s23^7 + 18450*s13*s23^8 + 1810*s23^9) - 
                 s12^5*s13*(3402*s13^9 + 34146*s13^8*s23 + 95619*s13^7*
                    s23^2 + 136722*s13^6*s23^3 + 107825*s13^5*s23^4 + 
                   45154*s13^4*s23^5 + 30250*s13^3*s23^6 + 35384*s13^2*
                    s23^7 + 17950*s13*s23^8 + 3210*s23^9))) - 
             p1q^4*s23^2*(p3q^2*(s12 + s23)*(230*s13^5*s23^4*(s13 + s23)^4 + 
                 180*s12^9*s23^2*(12*s13^2 + 29*s13*s23 + 15*s23^2) + 
                 2*s12*s13^4*s23^3*(s13 + s23)^3*(217*s13^2 + 762*s13*s23 + 
                   565*s23^2) + s12^2*s13^3*s23^2*(s13 + s23)^2*(165*s13^4 + 
                   2588*s13^3*s23 + 5793*s13^2*s23^2 + 4660*s13*s23^3 + 
                   1020*s23^4) - s12^3*s13^2*s23*(s13 + s23)^2*(1665*s13^5 + 
                   744*s13^4*s23 - 5853*s13^3*s23^2 - 7302*s13^2*s23^3 - 
                   2438*s13*s23^4 - 300*s23^5) + 2*s12^8*(81*s13^5 - 
                   135*s13^4*s23 + 3162*s13^3*s23^2 + 10933*s13^2*s23^3 + 
                   9810*s13*s23^4 + 2620*s23^5) + s12^7*(1998*s13^6 + 
                   2367*s13^5*s23 + 3008*s13^4*s23^2 + 19887*s13^3*s23^3 + 
                   30808*s13^2*s23^4 + 17760*s13*s23^5 + 3570*s23^6) + 
                 s12^6*(3240*s13^7 + 1548*s13^6*s23 - 15413*s13^5*s23^2 - 
                   21630*s13^4*s23^3 - 4039*s13^3*s23^4 + 10860*s13^2*s23^5 + 
                   8780*s13*s23^6 + 2220*s23^7) + s12^5*(1782*s13^8 - 
                   7398*s13^7*s23 - 37236*s13^6*s23^2 - 53055*s13^5*s23^3 - 
                   33466*s13^4*s23^4 - 3679*s13^3*s23^5 + 10718*s13^2*s23^6 + 
                   7210*s13*s23^7 + 1190*s23^8) + s12^4*s13*(378*s13^8 - 
                   7326*s13^7*s23 - 26084*s13^6*s23^2 - 28984*s13^5*s23^3 - 
                   8191*s13^4*s23^4 + 7412*s13^3*s23^5 + 9149*s13^2*s23^6 + 
                   5860*s13*s23^7 + 1790*s23^8)) + p2q^2*(s13 + s23)*
                (-10*s13^4*s23^4*(s13 + s23)^3*(108*s13^2 - 123*s13*s23 + 
                   23*s23^2) + 2*s12^9*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*
                    s23^2 + 105*s13*s23^3 - 20*s23^4) - 2*s12*s13^3*s23^3*
                  (s13 + s23)^2*(1548*s13^4 + 1173*s13^3*s23 - 2108*s13^2*
                    s23^2 - 393*s13*s23^3 + 150*s23^4) + s12^8*(324*s13^5 + 
                   945*s13^4*s23 + 2458*s13^3*s23^2 + 1937*s13^2*s23^3 + 
                   280*s13*s23^4 - 120*s23^5) + s12^2*s13^3*s23^2*
                  (-1206*s13^6 - 7995*s13^5*s23 - 7558*s13^4*s23^2 + 
                   7750*s13^3*s23^3 + 12120*s13^2*s23^4 + 3177*s13*s23^5 - 
                   424*s23^6) + 2*s12^7*(324*s13^6 - 1719*s13^5*s23 - 
                   141*s13^4*s23^2 + 3166*s13^3*s23^3 + 1884*s13^2*s23^4 - 
                   65*s13*s23^5 - 175*s23^6) + 2*s12^6*(189*s13^7 - 
                   8532*s13^6*s23 - 13366*s13^5*s23^2 - 2023*s13^4*s23^3 + 
                   4839*s13^3*s23^4 + 2162*s13^2*s23^5 - 270*s13*s23^6 - 
                   365*s23^7) + 2*s12^5*(243*s13^8 - 9747*s13^7*s23 - 
                   26538*s13^6*s23^2 - 18423*s13^5*s23^3 + 821*s13^4*s23^4 + 
                   5077*s13^3*s23^5 + 1546*s13^2*s23^6 - 460*s13*s23^7 - 
                   345*s23^8) + 2*s12^3*s13*s23*(540*s13^8 - 3465*s13^7*s23 - 
                   8852*s13^6*s23^2 - 1927*s13^5*s23^3 + 6013*s13^4*s23^4 + 
                   3574*s13^3*s23^5 + 481*s13^2*s23^6 + 10*s13*s23^7 - 
                   150*s23^8) + s12^4*(486*s13^9 - 4977*s13^8*s23 - 
                   34242*s13^7*s23^2 - 42016*s13^6*s23^3 - 8806*s13^5*s23^4 + 
                   8902*s13^4*s23^5 + 5544*s13^3*s23^6 + 1023*s13^2*s23^7 - 
                   880*s13*s23^8 - 230*s23^9)) + p2q*p3q*(90*s12^10*s23^2*
                  (12*s13^2 + 25*s13*s23 + 12*s23^2) - 10*s13^4*s23^4*
                  (s13 + s23)^4*(27*s13^2 - 119*s13*s23 + 23*s23^2) - 
                 2*s12*s13^3*s23^3*(s13 + s23)^3*(477*s13^4 - 518*s13^3*s23 - 
                   2373*s13^2*s23^2 - 733*s13*s23^3 + 150*s23^4) - 
                 s12^2*s13^3*s23^2*(s13 + s23)^2*(576*s13^5 + 2446*s13^4*
                    s23 - 4263*s13^3*s23^2 - 11206*s13^2*s23^3 - 6349*s13*
                    s23^4 - 416*s23^5) + 2*s12^9*(108*s13^5 + 171*s13^4*s23 + 
                   2113*s13^3*s23^2 + 6155*s13^2*s23^3 + 5665*s13*s23^4 + 
                   1655*s23^5) + s12^8*(1512*s13^6 + 1116*s13^5*s23 + 
                   975*s13^4*s23^2 + 16656*s13^3*s23^3 + 30915*s13^2*s23^4 + 
                   20800*s13*s23^5 + 4910*s23^6) + 2*s12^7*(1296*s13^7 - 
                   2682*s13^6*s23 - 14512*s13^5*s23^2 - 12046*s13^4*s23^3 + 
                   9248*s13^3*s23^4 + 20205*s13^2*s23^5 + 12175*s13*s23^6 + 
                   2720*s23^7) + 2*s12^6*(918*s13^8 - 8982*s13^7*s23 - 
                   36223*s13^6*s23^2 - 47049*s13^5*s23^3 - 20043*s13^4*
                    s23^4 + 13069*s13^3*s23^5 + 21771*s13^2*s23^6 + 
                   11050*s13*s23^7 + 1880*s23^8) + 2*s12^3*s13*s23*
                  (216*s13^9 - 3459*s13^8*s23 - 9943*s13^7*s23^2 - 
                   2053*s13^6*s23^3 + 17100*s13^5*s23^4 + 20956*s13^4*s23^5 + 
                   10089*s13^3*s23^6 + 2268*s13^2*s23^7 + 100*s13*s23^8 - 
                   150*s23^9) + 2*s12^5*(432*s13^9 - 8325*s13^8*s23 - 
                   36682*s13^7*s23^2 - 53177*s13^6*s23^3 - 28830*s13^5*
                    s23^4 + 5849*s13^4*s23^5 + 20419*s13^3*s23^6 + 
                   15972*s13^2*s23^7 + 5450*s13*s23^8 + 385*s23^9) + 
                 s12^4*(324*s13^10 - 4392*s13^9*s23 - 35085*s13^8*s23^2 - 
                   61482*s13^7*s23^3 - 23346*s13^6*s23^4 + 32080*s13^5*
                    s23^5 + 40852*s13^4*s23^6 + 24586*s13^3*s23^7 + 
                   9327*s13^2*s23^8 + 1130*s13*s23^9 - 230*s23^10))) + 
             p1q^2*(-(p3q^4*s12^2*(s12 + s23)*(10*s13^5*s23^4*(s13 + s23)^3*
                   (5*s13 + 42*s23) + 90*s12^9*s23^2*(4*s13^2 + 23*s13*s23 + 
                    15*s23^2) + 2*s12*s13^4*s23^3*(s13 + s23)^2*(127*s13^3 + 
                    598*s13^2*s23 + 986*s13*s23^2 + 370*s23^3) + 2*s12^8*
                   (27*s13^5 + 72*s13^4*s23 + 373*s13^3*s23^2 + 3658*s13^2*
                     s23^3 + 4225*s13*s23^4 + 1270*s23^5) + s12^2*s13^3*s23^2*
                   (669*s13^6 + 4234*s13^5*s23 + 11766*s13^4*s23^2 + 
                    15860*s13^3*s23^3 + 10293*s13^2*s23^4 + 2754*s13*s23^5 + 
                    120*s23^6) + s12^7*(540*s13^6 + 2439*s13^5*s23 + 
                    480*s13^4*s23^2 + 3213*s13^3*s23^3 + 9602*s13^2*s23^4 + 
                    9820*s13*s23^5 + 3570*s23^6) + s12^3*s13^2*s23*
                   (-1485*s13^7 - 5232*s13^6*s23 + 1028*s13^5*s23^2 + 
                    21576*s13^4*s23^3 + 29913*s13^3*s23^4 + 18880*s13^2*
                     s23^5 + 7588*s13*s23^6 + 1980*s23^7) + s12^6*
                   (972*s13^7 + 3510*s13^6*s23 - 5771*s13^5*s23^2 - 
                    17756*s13^4*s23^3 - 10519*s13^3*s23^4 + 12988*s13^2*
                     s23^5 + 16880*s13*s23^6 + 4920*s23^7) + s12^5*
                   (540*s13^8 - 1206*s13^7*s23 - 19988*s13^6*s23^2 - 
                    35417*s13^5*s23^3 - 21302*s13^4*s23^4 + 15285*s13^3*
                     s23^5 + 33772*s13^2*s23^6 + 18300*s13*s23^7 + 
                    2540*s23^8) + s12^4*s13*(54*s13^8 - 3906*s13^7*s23 - 
                    19700*s13^6*s23^2 - 22484*s13^5*s23^3 + 2675*s13^4*
                     s23^4 + 26846*s13^3*s23^5 + 32547*s13^2*s23^6 + 
                    20010*s13*s23^7 + 4860*s23^8))) + p2q^4*s13*(s13 + s23)*
                (20*s13^5*s23^4*(s13 + s23)^3*(54*s13^2 - 133*s13*s23 + 
                   75*s23^2) + 2*s12*s13^4*s23^3*(s13 + s23)^2*(1143*s13^4 - 
                   602*s13^3*s23 - 4133*s13^2*s23^2 + 1507*s13*s23^3 + 
                   1355*s23^4) + s12^9*(-54*s13^5 + 648*s13^4*s23 + 
                   2458*s13^3*s23^2 + 1696*s13^2*s23^3 + 280*s13*s23^4 + 
                   190*s23^5) + 2*s12^7*s23*(13059*s13^6 + 24805*s13^5*s23 + 
                   21547*s13^4*s23^2 + 13466*s13^3*s23^3 + 6234*s13^2*s23^4 + 
                   2604*s13*s23^5 + 840*s23^6) + s12^8*(-216*s13^6 + 
                   6777*s13^5*s23 + 16566*s13^4*s23^2 + 15139*s13^3*s23^3 + 
                   6092*s13^2*s23^4 + 2016*s13*s23^5 + 940*s23^6) + 
                 s12^2*s13^3*s23^2*(270*s13^7 + 5341*s13^6*s23 + 518*s13^5*
                    s23^2 - 16720*s13^4*s23^3 - 7970*s13^3*s23^4 + 
                   12487*s13^2*s23^5 + 9250*s13*s23^6 + 960*s23^7) + 
                 2*s12^3*s13^2*s23*(-144*s13^8 + 5412*s13^7*s23 + 12055*s13^6*
                    s23^2 + 2543*s13^5*s23^3 - 5083*s13^4*s23^4 + 4005*s13^3*
                    s23^5 + 7276*s13^2*s23^6 + 2164*s13*s23^7 + 180*s23^8) + 
                 2*s12^6*(216*s13^8 + 22347*s13^7*s23 + 45463*s13^6*s23^2 + 
                   32855*s13^5*s23^3 + 17363*s13^4*s23^4 + 13415*s13^3*
                    s23^5 + 8144*s13^2*s23^6 + 3164*s13*s23^7 + 650*s23^8) + 
                 s12^4*s13*s23*(9621*s13^8 + 53706*s13^7*s23 + 60882*s13^6*
                    s23^2 + 7028*s13^5*s23^3 - 4946*s13^4*s23^4 + 14712*s13^3*
                    s23^5 + 12353*s13^2*s23^6 + 3744*s13*s23^7 + 840*s23^8) + 
                 2*s12^5*(135*s13^9 + 17307*s13^8*s23 + 49126*s13^7*s23^2 + 
                   37700*s13^6*s23^3 + 7224*s13^5*s23^4 + 7233*s13^4*s23^5 + 
                   10782*s13^3*s23^6 + 5800*s13^2*s23^7 + 1848*s13*s23^8 + 
                   185*s23^9)) - p2q*p3q^3*s12*(s12 + s23)*(90*s12^10*s23^2*
                  (4*s13^2 + 19*s13*s23 + 12*s23^2) - 10*s13^5*s23^4*
                  (s13 + s23)^3*(10*s13^2 - 26*s13*s23 + 37*s23^2) - 
                 2*s12*s13^4*s23^3*(s13 + s23)^2*(155*s13^4 + 188*s13^3*s23 - 
                   608*s13^2*s23^2 + 104*s13*s23^3 + 420*s23^4) + 
                 2*s12^9*(54*s13^5 + 207*s13^4*s23 + 107*s13^3*s23^2 + 
                   1489*s13^2*s23^3 + 3440*s13*s23^4 + 1750*s23^5) + 
                 s12^8*(648*s13^6 + 2772*s13^5*s23 - 3025*s13^4*s23^2 - 
                   11786*s13^3*s23^3 + 4123*s13^2*s23^4 + 18270*s13*s23^5 + 
                   7920*s23^6) - s12^7*(108*s13^7 + 2214*s13^6*s23 + 
                   19486*s13^5*s23^2 + 39089*s13^4*s23^3 + 13452*s13^3*
                    s23^4 - 37827*s13^2*s23^5 - 35740*s13*s23^6 - 
                   8160*s23^7) - 2*s12^2*s13^3*s23^2*(1362*s13^7 + 
                   7250*s13^6*s23 + 13505*s13^5*s23^2 + 10435*s13^4*s23^3 + 
                   2636*s13^3*s23^4 + 169*s13^2*s23^5 + 531*s13*s23^6 + 
                   180*s23^7) + s12^3*s13^2*s23*(2610*s13^8 + 840*s13^7*s23 - 
                   27605*s13^6*s23^2 - 64454*s13^5*s23^3 - 61748*s13^4*
                    s23^4 - 30212*s13^3*s23^5 - 10101*s13^2*s23^6 - 
                   3818*s13*s23^7 - 960*s23^8) + s12^6*(-1836*s13^8 - 
                   12312*s13^7*s23 - 35094*s13^6*s23^2 - 35322*s13^5*s23^3 + 
                   243*s13^4*s23^4 + 51924*s13^3*s23^5 + 59147*s13^2*s23^6 + 
                   22130*s13*s23^7 + 1160*s23^8) + s12^5*(-1296*s13^9 - 
                   6354*s13^8*s23 - 12240*s13^7*s23^2 + 4674*s13^6*s23^3 + 
                   28888*s13^5*s23^4 + 40705*s13^4*s23^5 + 34228*s13^3*
                    s23^6 + 9835*s13^2*s23^7 - 3220*s13*s23^8 - 1500*s23^9) - 
                 s12^4*s13*(108*s13^9 - 3996*s13^8*s23 - 8515*s13^7*s23^2 + 
                   1074*s13^6*s23^3 + 21868*s13^5*s23^4 + 28412*s13^4*s23^5 + 
                   18335*s13^3*s23^6 + 12286*s13^2*s23^7 + 8550*s13*s23^8 + 
                   2710*s23^9)) + p2q^3*p3q*(10*s13^6*s23^4*(s13 + s23)^4*
                  (81*s13^2 - 262*s13*s23 + 223*s23^2) + 2*s12*s13^5*s23^3*
                  (s13 + s23)^3*(891*s13^4 - 1654*s13^3*s23 - 3112*s13^2*
                    s23^2 + 2898*s13*s23^3 + 2335*s23^4) + 2*s12^10*
                  (54*s13^6 - 162*s13^5*s23 - 973*s13^4*s23^2 - 979*s13^3*
                    s23^3 + 43*s13^2*s23^4 + 710*s13*s23^5 + 365*s23^6) + 
                 s12^2*s13^4*s23^2*(s13 + s23)^2*(252*s13^6 + 1880*s13^5*
                    s23 - 9475*s13^4*s23^2 - 8206*s13^3*s23^3 + 11417*s13^2*
                    s23^4 + 14550*s13*s23^5 + 2470*s23^6) + 2*s12^9*
                  (162*s13^7 + 2628*s13^6*s23 + 6007*s13^5*s23^2 + 
                   3132*s13^4*s23^3 - 524*s13^3*s23^4 + 2570*s13^2*s23^5 + 
                   4240*s13*s23^6 + 1460*s23^7) + s12^8*(-756*s13^8 + 
                   18468*s13^7*s23 + 77723*s13^6*s23^2 + 97834*s13^5*s23^3 + 
                   43075*s13^4*s23^4 + 10954*s13^3*s23^5 + 22644*s13^2*
                    s23^6 + 18710*s13*s23^7 + 4380*s23^8) + 2*s12^3*s13^3*s23*
                  (-144*s13^9 + 4947*s13^8*s23 + 13630*s13^7*s23^2 + 
                   12041*s13^6*s23^3 + 10301*s13^5*s23^4 + 22221*s13^4*
                    s23^5 + 28140*s13^3*s23^6 + 17055*s13^2*s23^7 + 
                   4937*s13*s23^8 + 600*s23^9) + 2*s12^7*(-918*s13^9 + 
                   15264*s13^8*s23 + 77808*s13^7*s23^2 + 134260*s13^6*s23^3 + 
                   100433*s13^5*s23^4 + 30691*s13^4*s23^5 + 14186*s13^3*
                    s23^6 + 19749*s13^2*s23^7 + 9995*s13*s23^8 + 
                   1460*s23^9) + s12^4*s13^2*s23*(9360*s13^9 + 57279*s13^8*
                    s23 + 117068*s13^7*s23^2 + 139214*s13^6*s23^3 + 
                   132542*s13^5*s23^4 + 94600*s13^4*s23^5 + 44846*s13^3*
                    s23^6 + 20395*s13^2*s23^7 + 9782*s13*s23^8 + 
                   2350*s23^9) + 2*s12^6*(-324*s13^10 + 19116*s13^9*s23 + 
                   86238*s13^8*s23^2 + 170298*s13^7*s23^3 + 173343*s13^6*
                    s23^4 + 84235*s13^5*s23^5 + 19939*s13^4*s23^6 + 
                   18209*s13^3*s23^7 + 17042*s13^2*s23^8 + 5335*s13*s23^9 + 
                   365*s23^10) + 2*s12^5*s13*(108*s13^10 + 15120*s13^9*s23 + 
                   63482*s13^8*s23^2 + 124915*s13^7*s23^3 + 149360*s13^6*
                    s23^4 + 107128*s13^5*s23^5 + 39976*s13^4*s23^6 + 
                   13176*s13^3*s23^7 + 13336*s13^2*s23^8 + 7263*s13*s23^9 + 
                   1165*s23^10)) + p2q^2*p3q^2*(-10*s13^6*(77*s13 - 73*s23)*
                  s23^5*(s13 + s23)^4 - 2*s12*s13^5*s23^4*(s13 + s23)^3*
                  (1106*s13^3 + 765*s13^2*s23 - 676*s13*s23^2 - 1165*s23^3) - 
                 s12^2*s13^4*s23^3*(s13 + s23)^2*(1733*s13^5 + 5754*s13^4*
                    s23 + 2991*s13^3*s23^2 - 2408*s13^2*s23^3 - 6808*s13*
                    s23^4 - 2350*s23^5) + s12^10*s23*(-1035*s13^5 + 
                   1433*s13^4*s23 + 10459*s13^3*s23^2 + 8751*s13^2*s23^3 - 
                   1230*s13*s23^4 - 2150*s23^5) + s12^11*(-54*s13^5 - 
                   270*s13^4*s23 + 712*s13^3*s23^2 + 2538*s13^2*s23^3 + 
                   490*s13*s23^4 - 690*s23^5) + 2*s12^9*(729*s13^7 + 
                   5139*s13^6*s23 + 15726*s13^5*s23^2 + 21079*s13^4*s23^3 + 
                   13376*s13^3*s23^4 + 2483*s13^2*s23^5 - 465*s13*s23^6 - 
                   40*s23^7) + 2*s12^3*s13^3*s23^2*(345*s13^8 - 1888*s13^7*
                    s23 - 4251*s13^6*s23^2 + 244*s13^5*s23^3 + 5881*s13^4*
                    s23^4 + 8125*s13^3*s23^5 + 7775*s13^2*s23^6 + 3869*s13*
                    s23^7 + 600*s23^8) + s12^8*(1836*s13^8 + 28953*s13^7*
                    s23 + 116034*s13^6*s23^2 + 177165*s13^5*s23^3 + 
                   119174*s13^4*s23^4 + 30124*s13^3*s23^5 + 11018*s13^2*
                    s23^6 + 15780*s13*s23^7 + 5760*s23^8) + s12^4*s13^2*s23*
                  (1359*s13^9 + 1230*s13^8*s23 + 7883*s13^7*s23^2 + 
                   59407*s13^6*s23^3 + 116770*s13^5*s23^4 + 96266*s13^4*
                    s23^5 + 41448*s13^3*s23^6 + 18073*s13^2*s23^7 + 
                   9586*s13*s23^8 + 2470*s23^9) + s12^7*(-486*s13^9 + 
                   22194*s13^8*s23 + 153050*s13^7*s23^2 + 345204*s13^6*
                    s23^3 + 350448*s13^5*s23^4 + 162690*s13^4*s23^5 + 
                   48498*s13^3*s23^6 + 46912*s13^2*s23^7 + 31650*s13*s23^8 + 
                   6610*s23^9) + s12^6*(-972*s13^10 + 3555*s13^9*s23 + 
                   83679*s13^8*s23^2 + 308922*s13^7*s23^3 + 474864*s13^6*
                    s23^4 + 355944*s13^5*s23^5 + 141112*s13^4*s23^6 + 
                   67779*s13^3*s23^7 + 54577*s13^2*s23^8 + 21330*s13*s23^9 + 
                   2230*s23^10) + 2*s12^5*s13*(-27*s13^10 + 315*s13^9*s23 + 
                   7264*s13^8*s23^2 + 57314*s13^7*s23^3 + 143309*s13^6*
                    s23^4 + 163097*s13^5*s23^5 + 93300*s13^4*s23^6 + 
                   34913*s13^3*s23^7 + 20393*s13^2*s23^8 + 11200*s13*s23^9 + 
                   2335*s23^10))) - p1q^3*s23*(-(p3q^3*s12*(s12 + s23)*
                 (10*s13^5*s23^4*(s13 + s23)^3*(37*s13 + 60*s23) + 
                  180*s12^9*s23^2*(8*s13^2 + 26*s13*s23 + 15*s23^2) + 
                  2*s12*s13^4*s23^3*(s13 + s23)^2*(389*s13^3 + 1560*s13^2*
                     s23 + 2136*s13*s23^2 + 870*s23^3) + 6*s12^8*(27*s13^5 + 
                    3*s13^4*s23 + 640*s13^3*s23^2 + 3029*s13^2*s23^3 + 
                    3040*s13*s23^4 + 860*s23^5) + s12^2*s13^3*s23^2*
                   (762*s13^6 + 6265*s13^5*s23 + 19113*s13^4*s23^2 + 
                    28477*s13^3*s23^3 + 22025*s13^2*s23^4 + 8238*s13*s23^5 + 
                    1080*s23^6) + s12^7*(1728*s13^6 + 3699*s13^5*s23 + 
                    1234*s13^4*s23^2 + 12093*s13^3*s23^3 + 24550*s13^2*
                     s23^4 + 17760*s13*s23^5 + 4680*s23^6) + s12^3*s13^2*s23*
                   (-3060*s13^7 - 7842*s13^6*s23 + 3789*s13^5*s23^2 + 
                    31670*s13^4*s23^3 + 39767*s13^3*s23^4 + 22100*s13^2*
                     s23^5 + 6612*s13*s23^6 + 1260*s23^7) + s12^6*
                   (2916*s13^7 + 3717*s13^6*s23 - 16129*s13^5*s23^2 - 
                    31829*s13^4*s23^3 - 14323*s13^3*s23^4 + 13776*s13^2*
                     s23^5 + 16320*s13*s23^6 + 4680*s23^7) + s12^5*
                   (1620*s13^8 - 6813*s13^7*s23 - 42282*s13^6*s23^2 - 
                    65156*s13^5*s23^3 - 40508*s13^4*s23^4 + 5209*s13^3*
                     s23^5 + 27570*s13^2*s23^6 + 16320*s13*s23^7 + 
                    2460*s23^8) + s12^4*s13*(270*s13^8 - 9585*s13^7*s23 - 
                    34789*s13^6*s23^2 - 36448*s13^5*s23^3 - 2020*s13^4*
                     s23^4 + 23703*s13^3*s23^5 + 25829*s13^2*s23^6 + 
                    15670*s13*s23^7 + 4200*s23^8))) - p2q*p3q^2*(s12 + s23)*
                (10*s13^5*(73*s13 - 23*s23)*s23^4*(s13 + s23)^4 + 
                 270*s12^10*s23^2*(4*s13^2 + 11*s13*s23 + 6*s23^2) + 
                 4*s12*s13^4*s23^3*(s13 + s23)^3*(208*s13^3 + 777*s13^2*s23 + 
                   499*s13*s23^2 - 225*s23^3) - s12^2*s13^3*s23^2*(s13 + s23)^
                   2*(444*s13^5 - 2109*s13^4*s23 - 7328*s13^3*s23^2 - 
                   8039*s13^2*s23^3 - 1004*s13*s23^4 + 720*s23^5) + 
                 2*s12^9*(135*s13^5 + 288*s13^4*s23 + 1181*s13^3*s23^2 + 
                   4953*s13^2*s23^3 + 5750*s13*s23^4 + 1980*s23^5) + 
                 s12^8*(1836*s13^6 + 3519*s13^5*s23 - 4943*s13^4*s23^2 - 
                   4411*s13^3*s23^3 + 14035*s13^2*s23^4 + 19090*s13*s23^5 + 
                   6600*s23^6) + s12^7*(2052*s13^7 - 3753*s13^6*s23 - 
                   38086*s13^5*s23^2 - 56234*s13^4*s23^3 - 14650*s13^3*
                    s23^4 + 34853*s13^2*s23^5 + 30220*s13*s23^6 + 
                   6840*s23^7) + s12^3*s13^2*s23*(-1602*s13^8 - 1413*s13^7*
                    s23 + 8220*s13^6*s23^2 + 20837*s13^5*s23^3 + 23601*s13^4*
                    s23^4 + 15490*s13^3*s23^5 + 4781*s13^2*s23^6 - 
                   214*s13*s23^7 - 300*s23^8) + s12^6*(432*s13^8 - 
                   19305*s13^7*s23 - 68678*s13^6*s23^2 - 75261*s13^5*s23^3 - 
                   15031*s13^4*s23^4 + 48998*s13^3*s23^5 + 56219*s13^2*
                    s23^6 + 22030*s13*s23^7 + 1620*s23^8) + s12^4*s13*
                  (-216*s13^9 - 7560*s13^8*s23 - 6601*s13^7*s23^2 + 
                   28855*s13^6*s23^3 + 60726*s13^5*s23^4 + 48022*s13^4*
                    s23^5 + 20523*s13^3*s23^6 + 4435*s13^2*s23^7 - 
                   1850*s13*s23^8 - 1490*s23^9) + s12^5*(-270*s13^9 - 
                   17595*s13^8*s23 - 40019*s13^7*s23^2 - 7148*s13^6*s23^3 + 
                   51497*s13^5*s23^4 + 68354*s13^4*s23^5 + 50148*s13^3*
                    s23^6 + 19625*s13^2*s23^7 + 880*s13*s23^8 - 960*s23^9)) + 
               p2q^3*(s13 + s23)*(60*s13^5*s23^4*(s13 + s23)^3*(27*s13^2 - 
                   43*s13*s23 + 16*s23^2) + 2*s12*s13^4*s23^3*(s13 + s23)^2*
                  (1962*s13^4 + 687*s13^3*s23 - 4277*s13^2*s23^2 + 
                   203*s13*s23^3 + 745*s23^4) + s12^9*(-108*s13^5 - 
                   774*s13^4*s23 - 214*s13^3*s23^2 + 452*s13^2*s23^3 + 
                   380*s13*s23^4 + 230*s23^5) + s12^8*(-486*s13^6 - 
                   1026*s13^5*s23 + 373*s13^4*s23^2 + 2780*s13^3*s23^3 + 
                   2897*s13^2*s23^4 + 2250*s13*s23^5 + 920*s23^6) + 
                 s12^2*s13^3*s23^2*(882*s13^7 + 8787*s13^6*s23 + 5536*s13^5*
                    s23^2 - 17248*s13^4*s23^3 - 17688*s13^3*s23^4 + 
                   649*s13^2*s23^5 + 3758*s13*s23^6 + 300*s23^7) + 
                 s12^7*(-324*s13^7 + 13599*s13^6*s23 + 17568*s13^5*s23^2 + 
                   8658*s13^4*s23^3 + 7792*s13^3*s23^4 + 8449*s13^2*s23^5 + 
                   5190*s13*s23^6 + 1380*s23^7) + s12^3*s13^2*s23*
                  (-936*s13^8 + 12420*s13^7*s23 + 30251*s13^6*s23^2 + 
                   10148*s13^5*s23^3 - 13084*s13^4*s23^4 - 3434*s13^3*s23^5 + 
                   4893*s13^2*s23^6 + 2230*s13*s23^7 + 720*s23^8) + 
                 s12^6*(540*s13^8 + 40545*s13^7*s23 + 72427*s13^6*s23^2 + 
                   37352*s13^5*s23^3 + 7678*s13^4*s23^4 + 10739*s13^3*s23^5 + 
                   12641*s13^2*s23^6 + 6050*s13*s23^7 + 920*s23^8) + 
                 s12^5*(324*s13^9 + 39285*s13^8*s23 + 108216*s13^7*s23^2 + 
                   86107*s13^6*s23^3 + 15564*s13^5*s23^4 + 937*s13^4*s23^5 + 
                   11178*s13^3*s23^6 + 10163*s13^2*s23^7 + 3630*s13*s23^8 + 
                   230*s23^9) + s12^4*s13*(-162*s13^9 + 11331*s13^8*s23 + 
                   64794*s13^7*s23^2 + 81791*s13^6*s23^3 + 25169*s13^5*
                    s23^4 - 4527*s13^4*s23^5 + 3395*s13^3*s23^6 + 7167*s13^2*
                    s23^7 + 4246*s13*s23^8 + 900*s23^9)) + p2q^2*p3q*
                (10*s13^5*s23^4*(s13 + s23)^4*(81*s13^2 - 250*s13*s23 + 
                   119*s23^2) + 2*s12*s13^4*s23^3*(s13 + s23)^3*(1071*s13^4 - 
                   904*s13^3*s23 - 4240*s13^2*s23^2 - 20*s13*s23^3 + 
                   1195*s23^4) - 2*s12^10*(54*s13^5 + 189*s13^4*s23 - 
                   154*s13^3*s23^2 - 444*s13^2*s23^3 - 85*s13*s23^4 + 
                   75*s23^5) - s12^9*(540*s13^6 + 2448*s13^5*s23 + 
                   121*s13^4*s23^2 - 4936*s13^3*s23^3 - 3559*s13^2*s23^4 + 
                   190*s13*s23^5 + 490*s23^6) + s12^2*s13^3*s23^2*(s13 + s23)^
                   2*(630*s13^6 + 4025*s13^5*s23 - 8134*s13^4*s23^2 - 
                   18757*s13^3*s23^3 - 6424*s13^2*s23^4 + 4464*s13*s23^5 + 
                   1020*s23^6) + s12^8*(-918*s13^7 + 5616*s13^6*s23 + 
                   27154*s13^5*s23^2 + 33753*s13^4*s23^3 + 13742*s13^3*
                    s23^4 - 1221*s13^2*s23^5 - 450*s13*s23^6 + 620*s23^7) + 
                 s12^7*(-1080*s13^8 + 33651*s13^7*s23 + 121643*s13^6*s23^2 + 
                   157018*s13^5*s23^3 + 80826*s13^4*s23^4 + 13*s13^3*s23^5 - 
                   8727*s13^2*s23^6 + 4960*s13*s23^7 + 3300*s23^8) + 
                 s12^3*s13^2*s23*(-648*s13^9 + 10704*s13^8*s23 + 30633*s13^7*
                    s23^2 + 13028*s13^6*s23^3 - 29262*s13^5*s23^4 - 
                   30892*s13^4*s23^5 - 3967*s13^3*s23^6 + 6780*s13^2*s23^7 + 
                   3884*s13*s23^8 + 1020*s23^9) + s12^6*(-216*s13^9 + 
                   53955*s13^8*s23 + 201308*s13^7*s23^2 + 304785*s13^6*
                    s23^3 + 222766*s13^5*s23^4 + 56973*s13^4*s23^5 - 
                   15784*s13^3*s23^6 + 1891*s13^2*s23^7 + 12050*s13*s23^8 + 
                   3530*s23^9) + s12^5*(216*s13^10 + 39555*s13^9*s23 + 
                   165286*s13^8*s23^2 + 280759*s13^7*s23^3 + 249235*s13^6*
                    s23^4 + 116711*s13^5*s23^5 + 15895*s13^4*s23^6 - 
                   531*s13^3*s23^7 + 13632*s13^2*s23^8 + 9390*s13*s23^9 + 
                   1190*s23^10) + s12^4*s13*(-162*s13^10 + 9945*s13^9*s23 + 
                   67626*s13^8*s23^2 + 131653*s13^7*s23^3 + 111958*s13^6*
                    s23^4 + 52928*s13^5*s23^5 + 20782*s13^4*s23^6 + 
                   8918*s13^3*s23^7 + 9016*s13^2*s23^8 + 7926*s13*s23^9 + 
                   2390*s23^10))))/(36*p1q*(p2q + p3q)*s12^3*s13^3*
             (s12 + s13)^2*s23^2*(s12 + s23)*(s13 + s23)^2*
             (-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + (p3q*s12 - p1q*s23)^2*(
                p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + s23) - 
                p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*
                  (s13 + s23)) + p3q*(s12 + s13)*(-(s13*(s13 + s23)) + 
                  s12*(3*s13 + 2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*
                 (s12 - 3*s13 - s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*
                 (s13 + s23) + p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + 
                  s12*(2*s13^2 + 2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + 
                    s13*s23 - s23^2)) + p1q*p3q^2*s12*
                 (-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + s13*s23 + s23^2) + 
                  s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) + 
           ((s12 + s13 + s23)*(-18*p1q^2*s12*s13*s23*(3*s12^2 + 6*s12*s13 + 
                3*s13^2 + 7*s12*s23 + 7*s13*s23 + 4*s23^2) + 
              18*s13*(-(p3q^2*s12*s23*(3*s12^2 + 6*s12*s13 + 3*s13^2 + 
                   7*s12*s23 + 7*s13*s23 + 4*s23^2)) - 2*p2q*p3q*s12*
                 (3*s12^3 + s12^2*(6*s13 + 9*s23) + 2*s23*(s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12*(3*s13^2 + 11*s13*s23 + 
                    10*s23^2)) + p2q^2*(6*s12^3*(s13 - s23) + s13^3*s23 + 
                  3*s12^2*(4*s13^2 + s13*s23 - 3*s23^2) + s12*(6*s13^3 + 
                    10*s13^2*s23 - s13*s23^2 - 4*s23^3))) + 
              p1q*(p3q*(9*s12^4*(12*s13 + 5*s23) + s13*s23^2*(37*s13^2 + 
                    54*s13*s23 + 36*s23^2) + 3*s12^2*s23*(63*s13^2 + 
                    121*s13*s23 + 36*s23^2) + s12^3*(108*s13^2 + 369*s13*
                     s23 + 109*s23^2) + 3*s12*s23*(3*s13^3 + 25*s13^2*s23 + 
                    54*s13*s23^2 + 12*s23^3)) + p2q*(45*s12^4*s23 + 
                  s13*s23^2*(37*s13^2 + 54*s13*s23 + 36*s23^2) + 
                  s12^3*(-108*s13^2 + 153*s13*s23 + 109*s23^2) + 3*s12*s23*
                   (15*s13^3 + 37*s13^2*s23 + 54*s13*s23^2 + 12*s23^3) + 
                  3*s12^2*(-36*s13^3 + 3*s13^2*s23 + 85*s13*s23^2 + 
                    36*s23^3))))*den[-3 + 2*ep])/(4*p1q*(p2q + p3q)*s12*s13*
             (s12 + s13)^3*s23^2))*p1 . E0conj + 
         ((ep^2*(-10*s13^3*s23^3*(s13 + s23) - s12*s13^2*s23^2*(9*s13^2 + 
                s13*s23 - 8*s23^2) + s12^5*(-9*s13^2 + 10*s23^2) + 
              s12^2*s13*s23*(-9*s13^3 + s13*s23^2 - 8*s23^3) + 
              s12^4*(-18*s13^3 - 9*s13^2*s23 + 20*s13*s23^2 + 20*s23^3) + 
              s12^3*(-9*s13^4 - 18*s13^3*s23 + s13^2*s23^2 + 12*s13*s23^3 + 
                10*s23^4)))/(18*s12^2*s13^2*s23^2*(s12 + s23)*(s13 + s23)) - 
           ((s12 + s13 + s23)*(-9*p1q^7*s23^4*(20*s12^5*s23*(s13 + s23) - 
                52*s12^2*s13^3*s23*(s13 + s23) - 64*s12*s13^3*s23^2*
                 (s13 + s23) - 20*s13^3*s23^3*(s13 + s23) + s12^4*
                 (-s13^3 + 38*s13^2*s23 + 70*s13*s23^2 + 40*s23^3) + 
                s12^3*(s13^4 + 38*s13^2*s23^2 + 50*s13*s23^3 + 20*s23^4)) + 
              9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-(p3q^4*s12^2*s23*
                  (20*s12^6 + 10*s13^4*s23^2 + 40*s12^5*(s13 + s23) + 
                   s12*s13^3*s23*(36*s13 + s23) + s12^2*s13^2*(35*s13^2 + 
                     10*s13*s23 - s23^2) + 2*s12^3*s13*(9*s13^2 + s13*s23 + 
                     5*s23^2) + s12^4*(3*s13^2 + 50*s13*s23 + 20*s23^2))) + 
                p2q^4*s13^2*(20*s12^5*s23*(s13 + s23) + 20*s13^4*s23^2*
                   (s13 + s23) + s12^2*s13^2*s23*(89*s13^2 + 88*s13*s23 - 
                    s23^2) + 2*s12*s13^3*s23*(17*s13^2 + 22*s13*s23 + 
                    5*s23^2) + s12^3*s13*(144*s13^3 + 112*s13^2*s23 - 
                    4*s13*s23^2 + s23^3) + s12^4*(144*s13^3 + 149*s13^2*s23 + 
                    42*s13*s23^2 + 10*s23^3)) + p2q^2*p3q^2*(-20*s13^5*s23^3*
                   (s13 + s23) + 20*s12^7*s23*(3*s13 + s23) - 4*s12*s13^5*
                   s23^2*(21*s13 + 11*s23) - 2*s12^3*s13^2*s23*(82*s13^3 - 
                    41*s13^2*s23 - 7*s13*s23^2 + 19*s23^3) + s12^2*s13^3*s23*
                   (-85*s13^3 - 34*s13^2*s23 + 11*s13*s23^2 + 38*s23^3) + 
                  s12^6*(144*s13^3 + 43*s13^2*s23 + 90*s13*s23^2 + 
                    40*s23^3) - s12^4*s13^2*(288*s13^3 - 6*s13^2*s23 + 
                    218*s13*s23^2 + 103*s23^3) - 2*s12^5*(72*s13^4 + 
                    74*s13^3*s23 + 36*s13^2*s23^2 - 15*s13*s23^3 - 
                    10*s23^4)) - p2q^3*p3q*s13*(20*s12^6*s23*(3*s13 + 
                    2*s23) + 20*s13^4*s23^2*(-s13^2 + s23^2) + s12^2*s13^2*
                   s23*(32*s13^3 + 145*s13^2*s23 + 136*s13*s23^2 - s23^3) + 
                  2*s12*s13^3*s23*(-17*s13^3 + 20*s13^2*s23 + 32*s13*s23^2 + 
                    5*s23^3) + s12^5*(288*s13^3 + 192*s13^2*s23 + 103*s13*
                     s23^2 + 50*s23^3) + s12^3*s13*(-144*s13^4 + 210*s13^3*
                     s23 + 139*s13^2*s23^2 - 52*s13*s23^3 + s23^4) + 
                  s12^4*(144*s13^4 + 60*s13^3*s23 + 45*s13^2*s23^2 + 
                    34*s13*s23^3 + 10*s23^4)) + p2q*p3q^3*s12*
                 (-20*s12^7*s23 + 20*s12^6*(s13 - s23)*s23 + 10*s13^4*s23^3*
                   (3*s13 + s23) + s12*s13^3*s23^2*(91*s13^2 + 28*s13*s23 + 
                    s23^2) + s12^2*s13^2*s23*(86*s13^3 + 73*s13^2*s23 - 
                    38*s13*s23^2 - s23^3) + 4*s12^5*(36*s13^3 + 34*s13^2*
                     s23 + 20*s13*s23^2 + 5*s23^3) + s12^3*s13*s23*
                   (180*s13^3 - 33*s13^2*s23 + 50*s13*s23^2 + 10*s23^3) + 
                  s12^4*(144*s13^4 + 118*s13^3*s23 + 157*s13^2*s23^2 + 
                    70*s13*s23^3 + 20*s23^4))) + p1q^6*s23^3*(
                p2q*(180*s12^6*s23*(s13 + s23) + 20*s13^3*s23^3*(-45*s13^2 - 
                    44*s13*s23 + s23^2) - 10*s12*s13^2*s23^2*(261*s13^3 + 
                    270*s13^2*s23 - 7*s13*s23^2 - 16*s23^3) + s12^5*
                   (72*s13^3 + 783*s13^2*s23 + 970*s13*s23^2 + 340*s23^3) + 
                  s12^4*(-666*s13^4 + 657*s13^3*s23 + 1843*s13^2*s23^2 + 
                    1200*s13*s23^3 + 140*s23^4) - s12^2*s13*s23*(1863*s13^4 + 
                    2549*s13^3*s23 + 28*s13^2*s23^2 - 570*s13*s23^3 + 
                    160*s23^4) + s12^3*(-54*s13^5 - 1557*s13^4*s23 + 
                    669*s13^3*s23^2 + 1812*s13^2*s23^3 + 250*s13*s23^4 - 
                    20*s23^5)) + p3q*(180*s12^6*s23*(4*s13 + 5*s23) - 
                  20*s13^3*s23^3*(9*s13^2 + 8*s13*s23 - s23^2) - 2*s12*s13^2*
                   s23^2*(288*s13^3 + 513*s13^2*s23 + 235*s13*s23^2 - 
                    80*s23^3) + s12^5*(54*s13^3 + 1539*s13^2*s23 + 2860*s13*
                     s23^2 + 1780*s23^3) - s12^2*s13*s23*(549*s13^4 + 
                    2063*s13^3*s23 + 1432*s13^2*s23^2 - 570*s13*s23^3 + 
                    160*s23^4) + s12^4*(666*s13^4 + 909*s13^3*s23 + 
                    1393*s13^2*s23^2 + 2010*s13*s23^3 + 860*s23^4) - 
                  s12^3*(72*s13^5 + 783*s13^4*s23 + 429*s13^3*s23^2 - 
                    336*s13^2*s23^3 + 290*s13*s23^4 + 20*s23^5))) - 
              p1q*(p2q + p3q)*(-(p3q^5*s12^3*s23*(10*s13^4*s23^2*(9*s13 + 
                     11*s23) + 20*s12^6*(9*s13 + 44*s23) + 9*s12*s13^3*s23*
                    (27*s13^2 + 44*s13*s23 + 13*s23^2) + s12^5*(27*s13^2 + 
                     1850*s13*s23 + 1760*s23^2) + s12^2*s13^2*(234*s13^3 + 
                     61*s13^2*s23 + 577*s13*s23^2 - 27*s23^3) + s12^3*s13*
                    (-477*s13^3 - 566*s13^2*s23 + 154*s13*s23^2 + 
                     180*s23^3) + s12^4*(-1512*s13^3 + 280*s13^2*s23 + 
                     1850*s13*s23^2 + 880*s23^3))) + p2q^5*s13^3*
                 (180*s12^6*s23*(s13 + s23) + 880*s13^4*s23^3*(s13 + s23) + 
                  20*s12*s13^3*s23^2*(91*s13^2 + 100*s13*s23 + 9*s23^2) + 
                  s12^2*s13^2*s23*(-27*s13^3 + 2402*s13^2*s23 + 2330*s13*
                     s23^2 - 27*s23^3) + s12^4*s23*(2637*s13^3 + 3019*s13^2*
                     s23 + 924*s13*s23^2 + 110*s23^3) + s12^5*(1296*s13^3 + 
                    1260*s13^2*s23 + 677*s13*s23^2 + 470*s23^3) + s12^3*s13*
                   (-1296*s13^4 + 4122*s13^3*s23 + 3410*s13^2*s23^2 - 
                    1045*s13*s23^3 + 117*s23^4)) - p2q^4*p3q*s13^2*
                 (180*s12^7*s23*(4*s13 + 3*s23) + 20*s13^4*s23^2*(9*s13^3 - 
                    26*s13^2*s23 + 35*s23^3) + s12^6*(3888*s13^3 + 3087*s13^2*
                     s23 + 1844*s13*s23^2 + 780*s23^3) + s12^2*s13^2*s23*
                   (486*s13^4 + 4221*s13^3*s23 + 4920*s13^2*s23^2 + 
                    2375*s13*s23^3 - 18*s23^4) + 2*s12*s13^3*s23*(153*s13^4 - 
                    469*s13^3*s23 + 1130*s13^2*s23^2 + 1447*s13*s23^3 + 
                    45*s23^4) + 2*s12^5*(-648*s13^4 + 378*s13^3*s23 + 
                    970*s13^2*s23^2 + 847*s13*s23^3 + 220*s23^4) + 
                  s12^4*(-3888*s13^5 + 4545*s13^4*s23 - 1790*s13^3*s23^2 - 
                    2840*s13^2*s23^3 + 1012*s13*s23^4 + 20*s23^5) + 
                  s12^3*s13*(1296*s13^5 - 4680*s13^4*s23 + 2679*s13^3*s23^2 + 
                    2625*s13^2*s23^3 - 2377*s13*s23^4 + 108*s23^5)) - 
                p2q^2*p3q^3*s12*(180*s12^8*s23*(4*s13 + s23) + 10*s13^5*s23^3*
                   (45*s13^2 - 21*s13*s23 - 14*s23^2) + s12^7*(1296*s13^3 + 
                    1287*s13^2*s23 - 190*s13*s23^2 - 160*s23^3) + s12*s13^4*
                   s23^2*(1575*s13^3 - 858*s13^2*s23 + 95*s13*s23^2 + 
                    502*s23^3) + s12^2*s13^3*s23*(1458*s13^4 - 633*s13^3*
                     s23 + 2695*s13^2*s23^2 + 1145*s13*s23^3 - 756*s23^4) + 
                  s12^3*s13^2*s23*(2133*s13^4 + 2003*s13^3*s23 - 1444*s13^2*
                     s23^2 + 109*s13*s23^3 + 324*s23^4) - 2*s12^6*
                   (1944*s13^4 + 2097*s13^3*s23 - 839*s13^2*s23^2 + 
                    660*s13*s23^3 + 430*s23^4) - 2*s12^5*(648*s13^5 - 
                    2520*s13^4*s23 + 941*s13^3*s23^2 - 1606*s13^2*s23^3 + 
                    260*s23^5) + s12^4*s13*(3888*s13^5 - 3780*s13^4*s23 + 
                    1109*s13^3*s23^2 + 2255*s13^2*s23^3 + 1821*s13*s23^4 + 
                    410*s23^5)) + p2q^3*p3q^2*s13*(540*s12^8*s23*(2*s13 + 
                    s23) + 20*s13^5*s23^3*(9*s13^2 - 17*s13*s23 - 26*s23^2) + 
                  3*s12^7*(1296*s13^3 + 918*s13^2*s23 + 439*s13*s23^2 + 
                    50*s23^3) + 2*s12*s13^4*s23^2*(468*s13^3 - 816*s13^2*
                     s23 - 469*s13*s23^2 + 205*s23^3) + s12^3*s13^2*s23*
                   (2034*s13^4 + 2032*s13^3*s23 + 493*s13^2*s23^2 - 
                    1081*s13*s23^3 - 756*s23^4) + s12^2*s13^3*s23*
                   (1071*s13^4 - 1430*s13^3*s23 + 2482*s13^2*s23^2 + 
                    2141*s13*s23^3 + 324*s23^4) - s12^6*(3888*s13^4 + 
                    6327*s13^3*s23 + 461*s13^2*s23^2 - 294*s13*s23^3 + 
                    530*s23^4) - s12^5*(3888*s13^5 - 1080*s13^4*s23 + 
                    9427*s13^3*s23^2 + 3919*s13^2*s23^3 - 807*s13*s23^4 + 
                    140*s23^5) + s12^4*s13*(3888*s13^5 - 8100*s13^4*s23 - 
                    2963*s13^3*s23^2 - 5362*s13^2*s23^3 - 3059*s13*s23^4 + 
                    502*s23^5)) + p2q*p3q^4*s12^2*(180*s12^8*s23 + 
                  20*s12^7*(18*s13 - 17*s23)*s23 + 20*s13^4*s23^3*(18*s13^2 + 
                    12*s13*s23 + s23^2) + 2*s12*s13^3*s23^2*(531*s13^3 + 
                    163*s13^2*s23 + 269*s13*s23^2 + 54*s23^3) - 4*s12^6*
                   (324*s13^3 - 108*s13^2*s23 - 485*s13*s23^2 + 130*s23^3) + 
                  5*s12^5*s23*(882*s13^3 + 839*s13^2*s23 + 836*s13*s23^2 + 
                    140*s23^3) + s12^2*s13^2*s23*(927*s13^4 - 80*s13^3*s23 + 
                    2494*s13^2*s23^2 - 881*s13*s23^3 - 18*s23^4) + 
                  s12^3*s13*s23*(108*s13^4 + 1806*s13^3*s23 - 807*s13^2*
                     s23^2 + 973*s13*s23^3 + 90*s23^4) + s12^4*(1296*s13^5 - 
                    1845*s13^4*s23 + 4629*s13^3*s23^2 + 3930*s13^2*s23^3 + 
                    2690*s13*s23^4 + 700*s23^5))) - p1q^5*s23^2*(
                p3q^2*(360*s12^7*s23*(3*s13 + 5*s23) + 20*s13^3*s23^4*
                   (s13^2 + 9*s13*s23 + 8*s23^2) + 2*s12*s13^2*s23^3*
                   (-135*s13^3 + 173*s13^2*s23 + 328*s13*s23^2 - 80*s23^3) + 
                  5*s12^6*(27*s13^3 + 513*s13^2*s23 + 1032*s13*s23^2 + 
                    704*s23^3) - 2*s12^2*s13*s23^2*(388*s13^4 + 193*s13^3*
                     s23 - 161*s13^2*s23^2 + 45*s13*s23^3 - 80*s23^4) + 
                  s12^5*(1305*s13^4 + 2250*s13^3*s23 + 1648*s13^2*s23^2 + 
                    3400*s13*s23^3 + 1480*s23^4) - s12^3*s23*(882*s13^5 + 
                    3468*s13^4*s23 + 3011*s13^3*s23^2 - 1103*s13^2*s23^3 + 
                    730*s13*s23^4 + 160*s23^5) - s12^4*(144*s13^5 + 
                    1953*s13^4*s23 + 1442*s13^3*s23^2 - 476*s13^2*s23^3 + 
                    1570*s13*s23^4 + 400*s23^5)) + p2q*p3q*(180*s12^7*s23*
                   (3*s13 + 4*s23) - 20*s13^3*s23^3*(36*s13^3 + 40*s13^2*
                     s23 - 3*s13*s23^2 - 7*s23^3) + s12^6*(144*s13^3 + 
                    1539*s13^2*s23 + 2710*s13*s23^2 + 1520*s23^3) - 
                  2*s12*s13^2*s23^2*(1017*s13^4 + 1720*s13^3*s23 + 425*s13^2*
                     s23^2 - 488*s13*s23^3 + 160*s23^4) + s12^5*
                   (-1134*s13^4 + 252*s13^3*s23 + 2846*s13^2*s23^2 + 
                    3030*s13*s23^3 + 740*s23^4) - s12^2*s13*s23*(1557*s13^5 + 
                    4418*s13^4*s23 + 1806*s13^3*s23^2 - 1955*s13^2*s23^3 + 
                    1140*s13*s23^4 - 320*s23^5) + 2*s12^4*(567*s13^5 - 
                    1674*s13^4*s23 - 1132*s13^3*s23^2 + 2395*s13^2*s23^3 + 
                    65*s13*s23^4 - 100*s23^5) - s12^3*(144*s13^6 + 306*s13^5*
                     s23 + 1868*s13^4*s23^2 + 1856*s13^3*s23^3 - 967*s13^2*
                     s23^4 + 410*s13*s23^5 + 140*s23^6)) + p2q^2*
                 (-20*s12^6*s23*(-9*s13^2 - 8*s13*s23 + s23^2) - 40*s13^3*
                   s23^3*(45*s13^3 + 43*s13^2*s23 - 6*s13*s23^2 - 4*s23^3) + 
                  2*s12^5*(72*s13^4 + 747*s13^3*s23 + 437*s13^2*s23^2 + 
                    85*s13*s23^3 - 100*s23^4) - 4*s12*s13^2*s23^2*
                   (1170*s13^4 + 1265*s13^3*s23 - 214*s13^2*s23^2 - 
                    269*s13*s23^3 + 40*s23^4) + s12^4*(-1305*s13^5 + 
                    351*s13^4*s23 + 2976*s13^3*s23^2 + 1632*s13^2*s23^3 - 
                    460*s13*s23^4 - 340*s23^5) + s12^2*s13*s23*(-2781*s13^5 - 
                    5154*s13^4*s23 + 614*s13^3*s23^2 + 2137*s13^2*s23^3 - 
                    1050*s13*s23^4 + 160*s23^5) - s12^3*(135*s13^6 + 
                    4320*s13^5*s23 - 646*s13^4*s23^2 - 2901*s13^3*s23^3 + 
                    388*s13^2*s23^4 + 310*s13*s23^5 + 160*s23^6))) + 
              p1q^3*s23*(p2q^4*s13*(20*s13^4*s23^2*(45*s13^3 + 41*s13^2*s23 - 
                    88*s13*s23^2 - 84*s23^3) + 2*s12^6*(252*s13^3 + 
                    415*s13^2*s23 + 80*s13*s23^2 + 70*s23^3) + 20*s12*s13^3*
                   s23*(90*s13^4 + 111*s13^3*s23 - 251*s13^2*s23^2 - 
                    239*s13*s23^3 + 33*s23^4) + s12^5*(2556*s13^4 + 
                    4036*s13^3*s23 + 1820*s13^2*s23^2 + 663*s13*s23^3 + 
                    530*s23^4) + s12^2*s13^2*(459*s13^5 + 2090*s13^4*s23 - 
                    1945*s13^3*s23^2 - 2569*s13^2*s23^3 + 1256*s13*s23^4 - 
                    471*s23^5) + s12^3*s13*(1206*s13^5 + 4130*s13^4*s23 + 
                    327*s13^3*s23^2 - 166*s13^2*s23^3 + 3289*s13*s23^4 + 
                    201*s23^5) + s12^4*(2799*s13^5 + 2186*s13^4*s23 + 
                    5287*s13^3*s23^2 + 4401*s13^2*s23^3 + 772*s13*s23^4 + 
                    390*s23^5)) - p3q^4*s12*(180*s12^8*(s13 + 5*s23) + 
                  10*s13^4*s23^4*(23*s13 + 39*s23) + s12*s13^3*s23^3*
                   (929*s13^2 + 1444*s13*s23 + 201*s23^2) + s12^7*
                   (513*s13^2 + 2050*s13*s23 + 1720*s23^2) + s12^2*s13^2*
                   s23^2*(994*s13^3 + 1705*s13^2*s23 + 469*s13*s23^2 - 
                    471*s23^3) + 2*s12^6*(216*s13^3 - 515*s13^2*s23 + 
                    165*s13*s23^2 - 470*s23^3) + s12^3*s13*s23*(556*s13^4 + 
                    3073*s13^3*s23 + 5160*s13^2*s23^2 - 1828*s13*s23^3 + 
                    660*s23^4) - s12^5*(1935*s13^4 + 5696*s13^3*s23 + 
                    1221*s13^2*s23^2 + 5060*s13*s23^3 + 3440*s23^4) - 
                  s12^4*(90*s13^5 - 604*s13^4*s23 - 213*s13^3*s23^2 + 
                    1755*s13^2*s23^3 + 2860*s13*s23^4 + 1680*s23^5)) + 
                p2q^2*p3q^2*(20*s12^8*(27*s13^2 + 46*s13*s23 - 24*s23^2) + 
                  20*s13^4*s23^3*(24*s13^3 - 58*s13^2*s23 - 41*s13*s23^2 + 
                    41*s23^3) + 2*s12^7*(63*s13^3 + 628*s13^2*s23 + 
                    755*s13*s23^2 + 340*s23^3) + 4*s12*s13^3*s23^2*
                   (127*s13^4 - 903*s13^3*s23 - 295*s13^2*s23^2 + 480*s13*
                     s23^3 - 45*s23^4) + s12^2*s13^3*s23*(-1852*s13^4 - 
                    2909*s13^3*s23 + 1169*s13^2*s23^2 - 134*s13*s23^3 + 
                    72*s23^4) + s12^5*s13*(4266*s13^4 + 6784*s13^3*s23 + 
                    5585*s13^2*s23^2 + 2653*s13*s23^3 + 270*s23^4) + 
                  s12^6*(3222*s13^4 + 10128*s13^3*s23 - 1943*s13^2*s23^2 + 
                    1910*s13*s23^3 + 1980*s23^4) + 2*s12^4*(2655*s13^6 + 
                    3472*s13^5*s23 + 3149*s13^4*s23^2 - 1979*s13^3*s23^3 + 
                    819*s13^2*s23^4 - 435*s13*s23^5 - 410*s23^6) + 
                  s12^3*s13*(-1152*s13^6 + 6804*s13^5*s23 + 1955*s13^4*
                     s23^2 - 7548*s13^3*s23^3 + 2342*s13^2*s23^4 - 3050*s13*
                     s23^5 + 180*s23^6)) + p2q^3*p3q*(s12^7*(-864*s13^3 - 
                    382*s13^2*s23 + 320*s13*s23^2 + 500*s23^3) + 20*s13^4*
                   s23^2*(36*s13^4 + 83*s13^3*s23 - 67*s13^2*s23^2 - 
                    81*s13*s23^3 + 33*s23^4) + s12^6*(2655*s13^4 + 2786*s13^3*
                     s23 - 131*s13^2*s23^2 + 1010*s13*s23^3 + 840*s23^4) + 
                  2*s12*s13^3*s23*(747*s13^5 + 1535*s13^4*s23 - 2174*s13^3*
                     s23^2 - 1530*s13^2*s23^3 + 1287*s13*s23^4 - 205*s23^5) + 
                  s12^5*(8190*s13^5 + 10018*s13^4*s23 - 270*s13^3*s23^2 + 
                    1615*s13^2*s23^3 + 1350*s13*s23^4 + 180*s23^5) + 
                  s12^4*(4914*s13^6 + 12564*s13^5*s23 + 9510*s13^4*s23^2 - 
                    1481*s13^3*s23^3 + 48*s13^2*s23^4 + 430*s13*s23^5 - 
                    160*s23^6) - 2*s12^3*s13*(621*s13^6 - 6009*s13^5*s23 - 
                    5839*s13^4*s23^2 + 1915*s13^3*s23^3 - 1221*s13^2*s23^4 + 
                    808*s13*s23^5 + 115*s23^6) + s12^2*s13^2*(459*s13^6 - 
                    626*s13^5*s23 - 2415*s13^4*s23^2 + 2450*s13^3*s23^3 + 
                    2192*s13^2*s23^4 - 1484*s13*s23^5 + 320*s23^6)) - 
                p2q*p3q^3*(180*s12^9*(s13 + 4*s23) + 20*s13^4*s23^4*
                   (25*s13^2 + 17*s13*s23 - 8*s23^2) + s12^8*(-27*s13^2 + 
                    410*s13*s23 + 2380*s23^2) + 2*s12*s13^3*s23^3*
                   (684*s13^3 + 521*s13^2*s23 + 192*s13*s23^2 - 115*s23^3) + 
                  s12^7*(-1854*s13^3 - 3190*s13^2*s23 + 310*s13*s23^2 + 
                    320*s23^3) + s12^2*s13^2*s23^2*(81*s13^4 + 135*s13^3*
                     s23 + 1326*s13^2*s23^2 - 1064*s13*s23^3 + 320*s23^4) - 
                  s12^6*(5598*s13^4 + 10772*s13^3*s23 - 2789*s13^2*s23^2 + 
                    2140*s13*s23^3 + 2960*s23^4) + 2*s12^5*(639*s13^5 + 
                    1242*s13^4*s23 + 1768*s13^3*s23^2 - 504*s13^2*s23^3 - 
                    120*s13*s23^4 - 480*s23^5) + s12^3*s13*s23*(-1202*s13^5 + 
                    940*s13^4*s23 + 2781*s13^3*s23^2 - 1298*s13^2*s23^3 + 
                    942*s13*s23^4 - 410*s23^5) + s12^4*(-603*s13^6 + 
                    750*s13^5*s23 + 3014*s13^4*s23^2 + 10220*s13^3*s23^3 - 
                    4082*s13^2*s23^4 + 1570*s13*s23^5 + 660*s23^6))) + 
              p1q^2*(p3q^5*s12^2*s23*(180*s12^8 + 20*s12^7*(18*s13 + 
                    17*s23) + 10*s13^4*s23^3*(-2*s13 + 21*s23) + s12*s13^3*
                   s23^2*(90*s13^2 + 686*s13*s23 - 137*s23^2) - 
                  s12^6*(459*s13^2 + 470*s13*s23 + 1580*s23^2) + s12^2*s13^2*
                   s23*(254*s13^3 + 1202*s13^2*s23 - 759*s13*s23^2 - 
                    133*s23^3) - s12^5*(1854*s13^3 + 553*s13^2*s23 + 
                    4090*s13*s23^2 + 3460*s23^3) + s12^4*(1125*s13^4 + 
                    3312*s13^3*s23 - 1225*s13^2*s23^2 - 3100*s13*s23^3 - 
                    1720*s23^4) + s12^3*s13*(396*s13^4 + 2049*s13^3*s23 + 
                    3392*s13^2*s23^2 - 904*s13*s23^3 + 160*s23^4)) + 
                p2q^5*s13^2*(200*s12^6*s23^2*(s13 + s23) - 20*s13^4*s23^2*
                   (9*s13^3 + 8*s13^2*s23 - 87*s13*s23^2 - 86*s23^3) - 
                  2*s12*s13^3*s23*(153*s13^4 + 208*s13^3*s23 - 2135*s13^2*
                     s23^2 - 2110*s13*s23^3 + 80*s23^4) + s12^5*
                   (-1296*s13^4 + 72*s13^3*s23 + 974*s13^2*s23^2 + 424*s13*
                     s23^3 + 80*s23^4) + s12^2*s13^2*s23*(-315*s13^4 + 
                    597*s13^3*s23 + 2787*s13^2*s23^2 + 1648*s13*s23^3 + 
                    133*s23^4) + s12^3*s13*s23*(-4176*s13^4 + 3114*s13^3*
                     s23 + 3356*s13^2*s23^2 - 3005*s13*s23^3 + 137*s23^4) - 
                  s12^4*(1296*s13^5 + 1503*s13^4*s23 + 1841*s13^3*s23^2 + 
                    434*s13^2*s23^3 - 414*s13*s23^4 + 210*s23^5)) + 
                p2q*p3q^4*s12*(180*s12^9*s23 - 20*s12^8*(9*s13 - 52*s23)*
                   s23 - 10*s13^4*s23^4*(14*s13^2 - 13*s13*s23 + 23*s23^2) - 
                  5*s12^7*s23*(243*s13^2 - 22*s13*s23 + 236*s23^2) + 
                  s12*s13^3*s23^3*(-646*s13^3 + 131*s13^2*s23 - 8*s13*s23^2 + 
                    29*s23^3) + s12^2*s13^2*s23^2*(-996*s13^4 + 478*s13^3*
                     s23 + 679*s13^2*s23^2 - 897*s13*s23^3 + 151*s23^4) - 
                  s12^6*(1296*s13^4 + 4662*s13^3*s23 - 1339*s13^2*s23^2 + 
                    1110*s13*s23^3 + 3740*s23^4) + s12^5*(-1296*s13^5 + 
                    5031*s13^4*s23 + 9624*s13^3*s23^2 + 1621*s13^2*s23^3 + 
                    1440*s13*s23^4 - 680*s23^5) - s12^3*s13*s23*(630*s13^5 + 
                    446*s13^4*s23 - 152*s13^3*s23^2 + 1444*s13^2*s23^3 - 
                    893*s13*s23^4 + 250*s23^5) + s12^4*s23*(-2160*s13^5 + 
                    633*s13^4*s23 + 10864*s13^3*s23^2 - 157*s13^2*s23^3 + 
                    2590*s13*s23^4 + 1020*s23^5)) + p2q^4*p3q*s13*
                 (20*s12^7*s23*(-9*s13^2 + 6*s13*s23 + 16*s23^2) + 
                  s12^5*s23*(3240*s13^4 + 11800*s13^3*s23 + 5558*s13^2*
                     s23^2 - 751*s13*s23^3 + 10*s23^4) + 2*s12^6*
                   (1296*s13^4 + 2502*s13^3*s23 + 1583*s13^2*s23^2 + 
                    47*s13*s23^3 + 50*s23^4) - 20*s13^4*s23^2*(9*s13^4 + 
                    43*s13^3*s23 - 102*s13^2*s23^2 - 85*s13*s23^3 + 
                    51*s23^4) + s12^2*s13^2*s23*(459*s13^5 - 51*s13^4*s23 - 
                    4123*s13^3*s23^2 - 2001*s13^2*s23^3 - 235*s13*s23^4 - 
                    151*s23^5) - 2*s12*s13^3*s23*(153*s13^5 + 650*s13^4*s23 - 
                    2521*s13^3*s23^2 - 730*s13^2*s23^3 + 1753*s13*s23^4 - 
                    125*s23^5) + s12^3*s13*s23*(-10332*s13^5 + 1872*s13^4*
                     s23 + 6926*s13^3*s23^2 - 920*s13^2*s23^3 + 3165*s13*
                     s23^4 - 29*s23^5) + s12^4*(-2592*s13^6 - 729*s13^5*s23 - 
                    1639*s13^4*s23^2 + 11424*s13^3*s23^3 + 5427*s13^2*s23^4 - 
                    618*s13*s23^5 + 230*s23^6)) + p2q^3*p3q^2*
                 (-20*s12^8*s23*(-27*s13^2 + 42*s13*s23 + 26*s23^2) - 
                  20*s13^5*s23^3*(26*s13^3 - 59*s13^2*s23 - 9*s13*s23^2 + 
                    76*s23^3) - 2*s12*s13^4*s23^2*(289*s13^4 - 1896*s13^3*
                     s23 + 972*s13^2*s23^2 + 1962*s13*s23^3 - 35*s23^4) - 
                  2*s12^7*(648*s13^4 + 2430*s13^3*s23 - 186*s13^2*s23^2 + 
                    235*s13*s23^3 + 270*s23^4) + s12^3*s13^2*s23*
                   (-5094*s13^5 + 5745*s13^4*s23 + 10636*s13^3*s23^2 + 
                    619*s13^2*s23^3 + 1658*s13*s23^4 - 231*s23^5) + 
                  s12^2*s13^3*s23*(774*s13^5 + 2076*s13^4*s23 - 4576*s13^3*
                     s23^2 - 720*s13^2*s23^3 - 103*s13*s23^4 + 51*s23^5) + 
                  s12^6*(3888*s13^5 + 7902*s13^4*s23 + 1505*s13^3*s23^2 + 
                    706*s13^2*s23^3 + 410*s13*s23^4 + 480*s23^5) + 
                  s12^4*s13*(-1296*s13^6 + 12564*s13^5*s23 + 11227*s13^4*
                     s23^2 + 12394*s13^3*s23^3 + 2049*s13^2*s23^4 + 
                    1235*s13*s23^5 + 410*s23^6) + s12^5*(3888*s13^6 + 
                    8406*s13^5*s23 + 11381*s13^4*s23^2 + 7472*s13^3*s23^3 + 
                    752*s13^2*s23^4 + 450*s13*s23^5 + 500*s23^6)) + 
                p2q^2*p3q^3*(20*s12^9*s23*(-27*s13 + 26*s23) + 20*s13^5*s23^4*
                   (26*s13^2 + s13*s23 - 25*s23^2) - 4*s12^8*s23*(54*s13^2 + 
                    335*s13*s23 + 165*s23^2) + 2*s12*s13^4*s23^3*(844*s13^3 - 
                    355*s13^2*s23 - 404*s13*s23^2 - 205*s23^3) + 7*s12^2*
                   s13^3*s23^2*(168*s13^4 - 268*s13^3*s23 + 152*s13^2*s23^2 - 
                    19*s13*s23^3 + 33*s23^4) + 5*s12^6*s23*(324*s13^4 + 
                    171*s13^3*s23 - 82*s13^2*s23^2 + 610*s13*s23^3 + 
                    268*s23^4) - 2*s12^7*(1296*s13^4 + 4392*s13^3*s23 + 
                    125*s13^2*s23^2 + 165*s13*s23^3 + 680*s23^4) + 
                  s12^4*s13*s23*(5976*s13^5 + 3413*s13^4*s23 + 1790*s13^3*
                     s23^2 - 553*s13^2*s23^3 + 2489*s13*s23^4 - 70*s23^5) + 
                  s12^3*s13^2*s23*(-234*s13^5 + 1689*s13^4*s23 + 5798*s13^3*
                     s23^2 + 1227*s13^2*s23^3 - 834*s13*s23^4 - 51*s23^5) + 
                  s12^5*(2592*s13^6 - 5094*s13^5*s23 - 7215*s13^4*s23^2 + 
                    9270*s13^3*s23^3 + 476*s13^2*s23^4 + 2510*s13*s23^5 + 
                    1520*s23^6))) + p1q^4*s23*(p3q^3*(160*s13^4*s23^5*
                   (s13 + s23) + 360*s12^8*s23*(2*s13 + 5*s23) + 2*s12*s13^3*
                   s23^4*(308*s13^2 + 433*s13*s23 + 195*s23^2) + s12^2*s13^2*
                   s23^3*(416*s13^3 + 1263*s13^2*s23 + 1377*s13*s23^2 - 
                    480*s23^3) + 3*s12^7*(24*s13^3 + 627*s13^2*s23 + 
                    1540*s13*s23^2 + 1160*s23^3) + s12^3*s13*s23^2*
                   (-40*s13^4 + 1961*s13^3*s23 + 3108*s13^2*s23^2 - 
                    1310*s13*s23^3 + 570*s23^4) + s12^6*(648*s13^4 + 
                    1773*s13^3*s23 + 26*s13^2*s23^2 + 2460*s13*s23^3 + 
                    740*s23^4) - s12^4*s23*(423*s13^5 + 2502*s13^4*s23 + 
                    3742*s13^3*s23^2 + 250*s13^2*s23^3 + 1730*s13*s23^4 + 
                    820*s23^5) - s12^5*(72*s13^5 + 3573*s13^4*s23 + 
                    5323*s13^3*s23^2 + 555*s13^2*s23^3 + 3740*s13*s23^4 + 
                    1760*s23^5)) + p2q*p3q^2*(540*s12^8*s23*(s13 + 2*s23) - 
                  40*s13^3*s23^4*(3*s13^3 - 17*s13^2*s23 - 16*s13*s23^2 + 
                    4*s23^3) + s12^7*(72*s13^3 + 729*s13^2*s23 + 2330*s13*
                     s23^2 + 2700*s23^3) - 2*s12*s13^2*s23^3*(253*s13^4 - 
                    867*s13^3*s23 - 862*s13^2*s23^2 + 328*s13*s23^3 - 
                    80*s23^4) + s12^6*(-792*s13^4 - 2259*s13^3*s23 - 
                    972*s13^2*s23^2 + 2210*s13*s23^3 + 1240*s23^4) + 
                  s12^2*s13*s23^2*(302*s13^5 + 1112*s13^4*s23 + 515*s13^3*
                     s23^2 - 11*s13^2*s23^3 + 90*s13*s23^4 - 160*s23^5) - 
                  s12^5*(1368*s13^5 + 7461*s13^4*s23 + 10419*s13^3*s23^2 - 
                    4833*s13^2*s23^3 + 1240*s13*s23^4 + 1140*s23^5) + 
                  s12^4*(144*s13^6 - 5085*s13^5*s23 - 4754*s13^4*s23^2 - 
                    3530*s13^3*s23^3 - 234*s13^2*s23^4 - 590*s13*s23^5 - 
                    600*s23^6) + s12^3*s23*(630*s13^6 - 5474*s13^5*s23 - 
                    2925*s13^4*s23^2 + 5242*s13^3*s23^3 - 3744*s13^2*s23^4 + 
                    910*s13*s23^5 + 160*s23^6)) + p2q^3*(-20*s13^4*s23^3*
                   (90*s13^3 + 84*s13^2*s23 - 47*s13*s23^2 - 41*s23^3) - 
                  2*s12^6*s23*(-54*s13^3 + 119*s13^2*s23 + 100*s13*s23^2 + 
                    80*s23^3) - 10*s12*s13^3*s23^2*(414*s13^4 + 474*s13^3*
                     s23 - 305*s13^2*s23^2 - 308*s13*s23^3 + 57*s23^4) + 
                  s12^5*(72*s13^5 - 81*s13^4*s23 - 1864*s13^3*s23^2 - 
                    1128*s13^2*s23^3 - 790*s13*s23^4 - 320*s23^5) + 
                  s12^2*s13^2*s23*(-1845*s13^5 - 4848*s13^4*s23 + 1963*s13^3*
                     s23^2 + 2950*s13^2*s23^3 - 2256*s13*s23^4 + 480*s23^5) - 
                  s12^4*(648*s13^6 + 1467*s13^5*s23 - 1080*s13^4*s23^2 + 
                    1313*s13^3*s23^3 + 2889*s13^2*s23^4 + 980*s13*s23^5 + 
                    160*s23^6) - s12^3*s13*(72*s13^6 + 3969*s13^5*s23 + 
                    931*s13^4*s23^2 - 924*s13^3*s23^3 + 1246*s13^2*s23^4 + 
                    1583*s13*s23^5 + 390*s23^6)) - p2q^2*p3q*
                 (20*s12^7*s23*(18*s13^2 + 11*s13*s23 - 6*s23^2) + 
                  20*s13^3*s23^3*(54*s13^4 + 81*s13^3*s23 - 19*s13^2*s23^2 - 
                    38*s13*s23^3 + 8*s23^4) + 2*s12^6*(72*s13^4 - 486*s13^3*
                     s23 + 123*s13^2*s23^2 + 180*s13*s23^3 + 280*s23^4) - 
                  3*s12^5*(456*s13^5 - 1065*s13^4*s23 - 1012*s13^3*s23^2 + 
                    910*s13^2*s23^3 - 450*s13*s23^4 - 440*s23^5) + 
                  2*s12*s13^2*s23^2*(1323*s13^5 + 2245*s13^4*s23 - 536*s13^3*
                     s23^2 - 1240*s13^2*s23^3 + 628*s13*s23^4 - 80*s23^5) + 
                  s12^2*s13*s23*(1467*s13^6 + 2188*s13^5*s23 - 1579*s13^4*
                     s23^2 - 1338*s13^3*s23^3 + 2456*s13^2*s23^4 - 1050*s13*
                     s23^5 + 160*s23^6) + s12^4*(-792*s13^6 + 4959*s13^5*
                     s23 + 8768*s13^4*s23^2 + 1659*s13^3*s23^3 + 2225*s13^2*
                     s23^4 + 740*s13*s23^5 + 480*s23^6) + s12^3*(72*s13^7 - 
                    1719*s13^6*s23 + 5717*s13^5*s23^2 + 9452*s13^4*s23^3 - 
                    1536*s13^3*s23^4 + 2631*s13^2*s23^5 - 310*s13*s23^6 - 
                    160*s23^7)))))/(36*ep*p1q*(p2q + p3q)*s12^3*s13^3*s23^2*
             (p1q^5*s23^3*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
               (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*
                 (s13 + s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + 
                    s23))) - p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 
                  3*s12*s13 + (4*s13 - s23)*s23) + p3q*(s12^2*(3*s13 + 
                    4*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 3*s13*s23 + 
                    3*s23^2))) + p1q^3*s23*(p3q^2*(s12 + s23)*
                 (-(s13*s23*(s13 + s23)) + 3*s12^2*(s13 + 2*s23) + 
                  2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
                 (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                  s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                  s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                    3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                    s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
              p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                  3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                  s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                   (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                   (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                    s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + 
                     s23)) + s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + 
                  s13^2*s23*(-s13^2 + s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 
                    2*s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + s12*s13*
                   (-3*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 + 2*s23^3)) + 
                p2q^3*p3q*s13*(s12^3*(3*s13 + 2*s23) + s12^2*(-s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12*(-3*s13^3 + 2*s13^2*s23 + 
                    3*s13*s23^2 + 2*s23^3) + s13*(s13^3 - 3*s13^2*s23 - 
                    s13*s23^2 + 3*s23^3))) + p1q^2*(-(p3q^3*s12*(s12 + s23)*
                  (-(s13*s23*(2*s13 + 3*s23)) + s12^2*(s13 + 4*s23) + 
                   s12*(s13^2 - 6*s23^2))) - p2q^3*s13*(s13 + s23)*
                 (s12^2*(s13 - 2*s23) + 2*s13*(2*s13 - 3*s23)*s23 + 
                  s12*(s13^2 - 3*s23^2)) + p2q*p3q^2*(-(s12^4*(s13 + 
                     3*s23)) + s13*s23^2*(2*s13^2 + s13*s23 - s23^2) + 
                  s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + s12*s23*(2*s13^3 + 
                    2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + s12^2*(2*s13^3 + 
                    2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + p2q^2*p3q*
                 (-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 2*s12^3*(s13^2 + 
                    s13*s23 + s23^2) + s12^2*(s13^3 + 2*s13^2*s23 + 
                    2*s13*s23^2 + s23^3) - s12*(s13^4 - 3*s13^3*s23 - 
                    2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))) + 
           (ep*(9*p1q^6*s23^3*(s12 + s23)*(s13 + s23)^2*(10*s12^7*s23^2 - 
                10*s13^4*s23^3*(s13 + s23)^2 + s12^2*s13^3*s23*(s13^3 - 
                  20*s13^2*s23 - 41*s13*s23^2 - 20*s23^3) - 2*s12*s13^3*s23^2*
                 (6*s13^3 + 22*s13^2*s23 + 21*s13*s23^2 + 5*s23^3) + 
                s12^6*(-2*s13^3 - s13^2*s23 + 40*s13*s23^2 + 30*s23^3) + 
                s12^5*(-2*s13^4 - 6*s13^3*s23 + 46*s13^2*s23^2 + 
                  90*s13*s23^3 + 30*s23^4) + 2*s12^3*s13*(s13^5 + 
                  3*s13^4*s23 - 3*s13^3*s23^2 + 4*s13^2*s23^3 + 14*s13*
                   s23^4 + 5*s23^5) + s12^4*(2*s13^5 + 14*s13^3*s23^2 + 
                  75*s13^2*s23^3 + 60*s13*s23^4 + 10*s23^5)) + 
              9*(s12 - s13)*(p3q*s12 - p2q*s13)^2*s23^2*(s13 + s23)*(s12 + 
                s13 + s23)*(-(p2q^4*s13^2*(-10*s12^5*(s13 + s23) + 
                   3*s12^2*s13^2*(s13 + s23)^2 + 12*s12*s13^3*(s13 + s23)^2 + 
                   10*s13^3*s23*(s13 + s23)^2 - s12^4*(19*s13^2 + 39*s13*
                      s23 + 20*s23^2) + s12^3*(2*s13^3 - 17*s13^2*s23 - 
                     29*s13*s23^2 - 10*s23^3))) + p3q^4*s12^2*(-10*s12^6 + 
                  21*s12*s13^3*s23*(s13 + s23) + 10*s13^3*s23^2*(s13 + s23) - 
                  10*s12^5*(2*s13 + 3*s23) + s12^4*(s13^2 - 40*s13*s23 - 
                    30*s23^2) + s12^2*s13^2*(11*s13^2 + 13*s13*s23 + s23^2) + 
                  2*s12^3*(s13^3 + s13^2*s23 - 10*s13*s23^2 - 5*s23^3)) + 
                p2q^3*p3q*s13*(-10*s13^3*(s13 - s23)*s23*(s13 + s23)^2 - 
                  10*s12^6*(3*s13 + 2*s23) - s12^5*(48*s13^2 + 99*s13*s23 + 
                    50*s23^2) + s12^4*(24*s13^3 - 35*s13^2*s23 - 88*s13*
                     s23^2 - 40*s23^3) + s12^2*s13^2*(32*s13^3 + 55*s13^2*
                     s23 + 26*s13*s23^2 + 3*s23^3) + 2*s12*s13^3*(-6*s13^3 + 
                    9*s13^2*s23 + 31*s13*s23^2 + 16*s23^3) + s12^3*
                   (6*s13^4 + 31*s13^3*s23 + 16*s13^2*s23^2 - 19*s13*s23^3 - 
                    10*s23^4)) + p2q^2*p3q^2*(10*s13^4*s23^2*(s13 + s23)^2 + 
                  10*s12^7*(3*s13 + s23) + s12^6*(29*s13^2 + 80*s13*s23 + 
                    30*s23^2) + s12^2*s13^3*(35*s13^3 + 8*s13^2*s23 - 
                    45*s13*s23^2 - 18*s23^3) + 2*s12*s13^3*s23*(21*s13^3 + 
                    27*s13^2*s23 + s13*s23^2 - 5*s23^3) + s12^5*(-62*s13^3 - 
                    12*s13^2*s23 + 60*s13*s23^2 + 30*s23^3) - s12^4*
                   (2*s13^4 + 84*s13^3*s23 + 71*s13^2*s23^2 - 10*s23^4) - 
                  2*s12^3*s13*(13*s13^4 + 18*s13^3*s23 + 15*s13^2*s23^2 + 
                    15*s13*s23^3 + 5*s23^4)) + p2q*p3q^3*s12*(-10*s12^7 + 
                  10*s12^6*(s13 - 2*s23) + 60*s12^5*s13*(s13 + s23) - 
                  10*s13^3*s23^2*(2*s13^2 + 3*s13*s23 + s23^2) - s12*s13^3*
                   s23*(53*s13^2 + 64*s13*s23 + 11*s23^2) - s12^2*s13^2*
                   (34*s13^3 + 29*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
                  s12^4*(-2*s13^3 + 99*s13^2*s23 + 90*s13*s23^2 + 20*s23^3) + 
                  s12^3*(4*s13^4 + 3*s13^3*s23 + 38*s13^2*s23^2 + 40*s13*
                     s23^3 + 10*s23^4))) - p1q^5*s23^2*(s13 + s23)*(
                p3q*(s12 + s23)*(20*s13^4*s23^4*(s13 + s23)^3 + 90*s12^8*
                   s23^2*(3*s13 + 4*s23) - 10*s12*s13^3*s23^3*(s13 + s23)^2*
                   (s13^2 - 6*s13*s23 - 16*s23^2) + s12^7*s23*(-54*s13^3 + 
                    845*s13^2*s23 + 2030*s13*s23^2 + 1060*s23^3) + 
                  2*s12^2*s13^3*s23^2*(194*s13^4 + 613*s13^3*s23 + 554*s13^2*
                     s23^2 + 50*s13*s23^3 - 85*s23^4) + s12^6*(72*s13^5 - 
                    765*s13^4*s23 - 1277*s13^3*s23^2 + 1710*s13^2*s23^3 + 
                    3190*s13*s23^4 + 1020*s23^5) + s12^3*s13*s23*(495*s13^6 + 
                    1529*s13^5*s23 + 269*s13^4*s23^2 - 1603*s13^3*s23^3 - 
                    1244*s13^2*s23^4 - 486*s13*s23^5 - 160*s23^6) + 
                  s12^5*(144*s13^6 - 729*s13^5*s23 - 4426*s13^4*s23^2 - 
                    4839*s13^3*s23^3 - 385*s13^2*s23^4 + 1210*s13*s23^5 + 
                    300*s23^6) + s12^4*(72*s13^7 + 477*s13^6*s23 - 1361*s13^5*
                     s23^2 - 5054*s13^4*s23^3 - 4594*s13^3*s23^4 - 1736*s13^2*
                     s23^5 - 380*s13*s23^6 - 20*s23^7)) + 
                p2q*(-20*s13^4*(18*s13 - s23)*s23^4*(s13 + s23)^3 - 
                  2*s12*s13^3*s23^3*(s13 + s23)^2*(351*s13^3 + 571*s13^2*
                     s23 - 40*s13*s23^2 - 80*s23^3) + 2*s12^8*(18*s13^4 + 
                    9*s13^3*s23 + 31*s13^2*s23^2 + 25*s13*s23^3 - 10*s23^4) + 
                  s12^7*(72*s13^5 - 621*s13^4*s23 - 1295*s13^3*s23^2 - 
                    352*s13^2*s23^3 + 90*s13*s23^4 - 80*s23^5) + s12^2*s13^3*
                   s23^2*(-297*s13^5 - 1287*s13^4*s23 - 867*s13^3*s23^2 + 
                    1369*s13^2*s23^3 + 1596*s13*s23^4 + 350*s23^5) + 
                  s12^6*(72*s13^6 - 873*s13^5*s23 - 4336*s13^4*s23^2 - 
                    4649*s13^3*s23^3 - 1348*s13^2*s23^4 - 190*s13*s23^5 - 
                    120*s23^6) + s12^3*s13*s23*(72*s13^7 + 829*s13^6*s23 + 
                    2998*s13^5*s23^2 + 4185*s13^4*s23^3 + 3060*s13^3*s23^4 + 
                    1070*s13^2*s23^5 - 126*s13*s23^6 - 160*s23^7) + 
                  s12^5*(72*s13^7 + 405*s13^6*s23 - 1874*s13^5*s23^2 - 
                    5754*s13^4*s23^3 - 4375*s13^3*s23^4 - 1518*s13^2*s23^5 - 
                    610*s13*s23^6 - 80*s23^7) + s12^4*(36*s13^8 + 711*s13^7*
                     s23 + 2303*s13^6*s23^2 + 1356*s13^5*s23^3 - 231*s13^4*
                     s23^4 - 159*s13^3*s23^5 - 710*s13^2*s23^6 - 540*s13*
                     s23^7 - 20*s23^8))) + p1q*(-(p2q^5*s13^3*(s13 + s23)*
                  (90*s12^8*s23^2*(s13 + s23) + 340*s13^4*s23^4*(s13 + s23)^
                     3 + 2*s12*s13^3*s23^3*(s13 + s23)^2*(221*s13^2 + 
                     231*s13*s23 - 170*s23^2) + s12^7*(-36*s13^4 - 18*s13^3*
                      s23 + 199*s13^2*s23^2 + 661*s13*s23^3 + 470*s23^4) - 
                   s12^2*s13^3*s23^2*(388*s13^4 + 1433*s13^3*s23 + 2413*s13^2*
                      s23^2 + 1999*s13*s23^3 + 631*s23^4) + s12^6*
                    (-108*s13^5 + 333*s13^4*s23 + 1331*s13^3*s23^2 + 
                     1629*s13^2*s23^3 + 1679*s13*s23^4 + 870*s23^5) - 
                   s12^3*s13*s23*(459*s13^6 + 1907*s13^5*s23 + 2258*s13^4*
                      s23^2 + 1709*s13^3*s23^3 + 1483*s13^2*s23^4 + 
                     864*s13*s23^5 + 200*s23^6) + s12^5*(-108*s13^6 + 
                     261*s13^5*s23 + 3112*s13^4*s23^2 + 4137*s13^3*s23^3 + 
                     2329*s13^2*s23^4 + 1535*s13*s23^5 + 690*s23^6) + 
                   s12^4*(-36*s13^7 - 549*s13^6*s23 + 371*s13^5*s23^2 + 
                     2768*s13^4*s23^3 + 1822*s13^3*s23^4 + 35*s13^2*s23^5 + 
                     227*s13*s23^6 + 200*s23^7))) + p3q^5*s12^3*
                 (10*s13^4*s23^4*(s13 + s23)^3*(9*s13 + 20*s23) + s12*s13^3*
                   s23^3*(s13 + s23)^2*(189*s13^3 + 802*s13^2*s23 + 
                    503*s13*s23^2 - 200*s23^3) + 2*s12^8*(18*s13^4 + 
                    9*s13^3*s23 + 31*s13^2*s23^2 + 205*s13*s23^3 + 
                    170*s23^4) + s12^2*s13^3*s23^2*(99*s13^5 + 1350*s13^4*
                     s23 + 3948*s13^3*s23^2 + 3718*s13^2*s23^3 + 417*s13*
                     s23^4 - 604*s23^5) + s12^7*(108*s13^5 - 297*s13^4*s23 - 
                    1115*s13^3*s23^2 + 350*s13^2*s23^3 + 2340*s13*s23^4 + 
                    1360*s23^5) + s12^3*s13*s23^2*(1099*s13^6 + 4870*s13^5*
                     s23 + 5751*s13^4*s23^2 + 981*s13^3*s23^3 - 2098*s13^2*
                     s23^4 - 1359*s13*s23^5 - 340*s23^6) + s12^6*(108*s13^6 - 
                    153*s13^5*s23 - 3238*s13^4*s23^2 - 5162*s13^3*s23^3 - 
                    25*s13^2*s23^4 + 4220*s13*s23^5 + 2040*s23^6) + 
                  s12^4*s23*(495*s13^7 + 2897*s13^6*s23 + 3048*s13^5*s23^2 - 
                    2463*s13^4*s23^3 - 6126*s13^3*s23^4 - 3257*s13^2*s23^5 + 
                    90*s13*s23^6 + 340*s23^7) + s12^5*(36*s13^7 + 657*s13^6*
                     s23 - 164*s13^5*s23^2 - 5835*s13^4*s23^3 - 8461*s13^3*
                     s23^4 - 2211*s13^2*s23^5 + 2720*s13*s23^6 + 
                    1360*s23^7)) - p2q*p3q^4*s12^2*(90*s12^10*s23^2*
                   (s13 + s23) + 10*s13^4*s23^4*(s13 + s23)^3*(27*s13^2 + 
                    24*s13*s23 + 11*s23^2) + 2*s12*s13^3*s23^3*(s13 + s23)^2*
                   (333*s13^4 + 871*s13^3*s23 + 413*s13^2*s23^2 - 90*s13*
                     s23^3 - 55*s23^4) + s12^9*(-36*s13^4 - 18*s13^3*s23 + 
                    208*s13^2*s23^2 + 220*s13*s23^3 + 20*s23^4) + 
                  s12^8*(36*s13^5 + 405*s13^4*s23 + 1462*s13^3*s23^2 + 
                    1703*s13^2*s23^3 + 150*s13*s23^4 - 570*s23^5) + 
                  s12^7*(324*s13^6 - 963*s13^5*s23 - 1969*s13^4*s23^2 + 
                    3693*s13^3*s23^3 + 6625*s13^2*s23^4 + 1780*s13*s23^5 - 
                    680*s23^6) + s12^2*s13^3*s23^2*(405*s13^6 + 4040*s13^5*
                     s23 + 10722*s13^4*s23^2 + 10736*s13^3*s23^3 + 3021*s13^2*
                     s23^4 - 888*s13*s23^5 - 260*s23^6) + s12^3*s13*s23^2*
                   (3820*s13^7 + 15999*s13^6*s23 + 19139*s13^5*s23^2 + 
                    5085*s13^4*s23^3 - 4271*s13^3*s23^4 - 3528*s13^2*s23^5 - 
                    1542*s13*s23^6 - 250*s23^7) + s12^6*(396*s13^7 - 
                    1269*s13^6*s23 - 13409*s13^5*s23^2 - 18862*s13^4*s23^3 - 
                    1337*s13^3*s23^4 + 10881*s13^2*s23^5 + 5040*s13*s23^6 + 
                    230*s23^7) + s12^4*s23*(1944*s13^8 + 10048*s13^7*s23 + 
                    8223*s13^6*s23^2 - 11263*s13^5*s23^3 - 20933*s13^4*
                     s23^4 - 11297*s13^3*s23^5 - 1176*s13^2*s23^6 + 
                    1000*s13*s23^7 + 250*s23^8) + s12^5*(144*s13^8 + 
                    2061*s13^7*s23 - 3463*s13^6*s23^2 - 25744*s13^5*s23^3 - 
                    33700*s13^4*s23^4 - 11469*s13^3*s23^5 + 6117*s13^2*
                     s23^6 + 4530*s13*s23^7 + 660*s23^8)) + p2q^2*p3q^3*s12*
                 (10*s13^5*s23^4*(s13 + s23)^3*(27*s13^2 - 12*s13*s23 - 
                    14*s23^2) + 90*s12^10*s23^2*(4*s13^2 + 5*s13*s23 + 
                    s23^2) + s12*s13^4*s23^3*(s13 + s23)^2*(855*s13^4 + 
                    882*s13^3*s23 - 611*s13^2*s23^2 - 338*s13*s23^3 + 
                    30*s23^4) + s12^9*(-144*s13^5 - 108*s13^4*s23 + 
                    805*s13^3*s23^2 + 1529*s13^2*s23^3 + 840*s13*s23^4 + 
                    110*s23^5) + s12^8*(-216*s13^6 + 1332*s13^5*s23 + 
                    5642*s13^4*s23^2 + 5501*s13^3*s23^3 + 837*s13^2*s23^4 - 
                    1290*s13*s23^5 - 460*s23^6) + s12^7*(216*s13^7 - 
                    954*s13^6*s23 + 4012*s13^5*s23^2 + 16057*s13^4*s23^3 + 
                    13192*s13^3*s23^4 - 473*s13^2*s23^5 - 4020*s13*s23^6 - 
                    1140*s23^7) + s12^3*s13^2*s23^2*(4866*s13^7 + 19246*s13^6*
                     s23 + 23385*s13^5*s23^2 + 7897*s13^4*s23^3 - 1973*s13^3*
                     s23^4 - 881*s13^2*s23^5 - 236*s13*s23^6 - 140*s23^7) + 
                  s12^2*s13^3*s23^2*(621*s13^7 + 4110*s13^6*s23 + 9168*s13^5*
                     s23^2 + 9738*s13^4*s23^3 + 5365*s13^3*s23^4 + 1554*s13^2*
                     s23^5 + 358*s13*s23^6 + 110*s23^7) + s12^6*(504*s13^8 - 
                    3474*s13^7*s23 - 21193*s13^6*s23^2 - 22547*s13^5*s23^3 + 
                    4344*s13^4*s23^4 + 14739*s13^3*s23^5 + 2713*s13^2*s23^6 - 
                    2670*s13*s23^7 - 910*s23^8) + s12^4*s13*s23*(2862*s13^8 + 
                    12338*s13^7*s23 + 4218*s13^6*s23^2 - 24141*s13^5*s23^3 - 
                    29711*s13^4*s23^4 - 11286*s13^3*s23^5 + 396*s13^2*s23^6 + 
                    1574*s13*s23^7 + 390*s23^8) + s12^5*(216*s13^9 + 
                    1782*s13^8*s23 - 11915*s13^7*s23^2 - 46675*s13^6*s23^3 - 
                    52177*s13^5*s23^4 - 16456*s13^4*s23^5 + 6985*s13^3*
                     s23^6 + 4568*s13^2*s23^7 + 60*s13*s23^8 - 250*s23^9)) - 
                p2q^3*p3q^2*s13*(10*s13^5*(9*s13 - 25*s23)*s23^4*(s13 + s23)^
                    4 + 270*s12^10*s23^2*(2*s13^2 + 3*s13*s23 + s23^2) + 
                  2*s12*s13^4*s23^3*(s13 + s23)^3*(234*s13^3 - 343*s13^2*
                     s23 - 312*s13*s23^2 + 195*s23^3) - 3*s12^9*(72*s13^5 + 
                    72*s13^4*s23 - 389*s13^3*s23^2 - 1086*s13^2*s23^3 - 
                    917*s13*s23^4 - 230*s23^5) + s12^2*s13^3*s23^2*
                   (s13 + s23)^2*(423*s13^5 + 654*s13^4*s23 + 607*s13^3*
                     s23^2 + 2136*s13^2*s23^3 + 1000*s13*s23^4 - 140*s23^5) + 
                  s12^8*(-504*s13^6 + 1746*s13^5*s23 + 8810*s13^4*s23^2 + 
                    10493*s13^3*s23^3 + 5928*s13^2*s23^4 + 2075*s13*s23^5 + 
                    310*s23^6) + s12^7*(-216*s13^7 - 54*s13^6*s23 + 
                    12844*s13^5*s23^2 + 29684*s13^4*s23^3 + 22371*s13^3*
                     s23^4 + 4224*s13^2*s23^5 - 1525*s13*s23^6 - 510*s23^7) + 
                  s12^3*s13^2*s23^2*(2668*s13^7 + 10417*s13^6*s23 + 
                    14109*s13^5*s23^2 + 6421*s13^4*s23^3 - 1003*s13^3*s23^4 - 
                    880*s13^2*s23^5 + 294*s13*s23^6 + 110*s23^7) + 
                  s12^6*(216*s13^8 - 4338*s13^7*s23 - 15289*s13^6*s23^2 - 
                    6017*s13^5*s23^3 + 17153*s13^4*s23^4 + 16004*s13^3*
                     s23^5 + 1428*s13^2*s23^6 - 2291*s13*s23^7 - 540*s23^8) + 
                  s12^4*s13*s23*(1872*s13^8 + 5732*s13^7*s23 - 5862*s13^6*
                     s23^2 - 28227*s13^5*s23^3 - 26871*s13^4*s23^4 - 
                    8263*s13^3*s23^5 + 377*s13^2*s23^6 + 464*s13*s23^7 + 
                    30*s23^8) + s12^5*(144*s13^9 - 450*s13^8*s23 - 
                    16463*s13^7*s23^2 - 43623*s13^6*s23^3 - 41101*s13^5*
                     s23^4 - 11783*s13^4*s23^5 + 2694*s13^3*s23^6 + 
                    768*s13^2*s23^7 - 602*s13*s23^8 - 140*s23^9)) + 
                p2q^4*p3q*s13^2*(90*s12^9*s23^2*(4*s13^2 + 7*s13*s23 + 
                    3*s23^2) + 10*s13^4*s23^3*(s13 + s23)^4*(9*s13^2 - 
                    34*s13*s23 + 25*s23^2) + s12^2*s13^3*s23^2*(s13 + s23)^2*
                   (523*s13^4 + 1696*s13^3*s23 + 1985*s13^2*s23^2 - 
                    630*s13*s23^3 - 1012*s23^4) + 2*s12*s13^3*s23^2*
                   (s13 + s23)^3*(54*s13^4 - 122*s13^3*s23 + 346*s13^2*
                     s23^2 + 632*s13*s23^3 - 125*s23^4) + s12^8*(-144*s13^5 - 
                    180*s13^4*s23 + 751*s13^3*s23^2 + 2809*s13^2*s23^3 + 
                    3062*s13*s23^4 + 1050*s23^5) + s12^7*(-396*s13^6 + 
                    1026*s13^5*s23 + 6232*s13^4*s23^2 + 9245*s13^3*s23^3 + 
                    8209*s13^2*s23^4 + 5344*s13*s23^5 + 1640*s23^6) + 
                  s12^6*(-324*s13^7 + 387*s13^6*s23 + 11351*s13^5*s23^2 + 
                    24219*s13^4*s23^3 + 19930*s13^3*s23^4 + 8945*s13^2*
                     s23^5 + 4004*s13*s23^6 + 1320*s23^7) + s12^3*s13*s23*
                   (459*s13^8 + 157*s13^7*s23 - 6726*s13^6*s23^2 - 
                    16732*s13^5*s23^3 - 16379*s13^4*s23^4 - 7719*s13^3*
                     s23^5 - 2060*s13^2*s23^6 - 522*s13*s23^7 - 110*s23^8) + 
                  s12^5*(-36*s13^8 - 2565*s13^7*s23 - 4445*s13^6*s23^2 + 
                    5969*s13^5*s23^3 + 16087*s13^4*s23^4 + 9711*s13^3*s23^5 + 
                    1833*s13^2*s23^6 + 964*s13*s23^7 + 570*s23^8) + 
                  s12^4*(36*s13^9 - 1287*s13^8*s23 - 10213*s13^7*s23^2 - 
                    21022*s13^6*s23^3 - 18130*s13^5*s23^4 - 7813*s13^4*
                     s23^5 - 3421*s13^3*s23^6 - 1874*s13^2*s23^7 - 238*s13*
                     s23^8 + 110*s23^9))) - p1q^4*s23*(-(p3q^2*(s12 + s23)*
                  (70*s13^4*s23^5*(s13 + s23)^4 + 2*s12*s13^3*s23^4*
                    (s13 + s23)^3*(34*s13^2 + 54*s13*s23 - 35*s23^2) + 
                   270*s12^9*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) - 
                   2*s12^2*s13^3*s23^3*(s13 + s23)^2*(132*s13^3 + 203*s13^2*
                      s23 - 124*s13*s23^2 - 235*s23^3) + s12^3*s13*s23^2*
                    (s13 + s23)^2*(569*s13^5 + 2119*s13^4*s23 + 3060*s13^3*
                      s23^2 + 282*s13^2*s23^3 + 74*s13*s23^4 + 70*s23^5) + 
                   s12^8*(54*s13^5 + 63*s13^4*s23 + 628*s13^3*s23^2 + 
                     2959*s13^2*s23^3 + 3890*s13*s23^4 + 1560*s23^5) + 
                   s12^7*(198*s13^6 - 756*s13^5*s23 - 4741*s13^4*s23^2 - 
                     4973*s13^3*s23^3 + 1984*s13^2*s23^4 + 4470*s13*s23^5 + 
                     1370*s23^6) + s12^6*(234*s13^7 - 738*s13^6*s23 - 
                     8816*s13^5*s23^2 - 20059*s13^4*s23^3 - 17916*s13^3*
                      s23^4 - 6191*s13^2*s23^5 - 250*s13*s23^6 + 150*s23^7) + 
                   s12^5*(90*s13^8 + 972*s13^7*s23 + 464*s13^6*s23^2 - 
                     5256*s13^5*s23^3 - 11035*s13^4*s23^4 - 10545*s13^3*
                      s23^5 - 6478*s13^2*s23^6 - 2330*s13*s23^7 - 
                     270*s23^8) + s12^4*s23*(891*s13^8 + 4714*s13^7*s23 + 
                     9690*s13^6*s23^2 + 10604*s13^5*s23^3 + 7031*s13^4*
                      s23^4 + 1986*s13^3*s23^5 - 778*s13^2*s23^6 - 620*s13*
                      s23^7 - 70*s23^8))) + p2q^2*(s13 + s23)*
                 (10*s13^4*s23^4*(s13 + s23)^3*(54*s13^2 - 6*s13*s23 - 
                    7*s23^2) + 2*s12*s13^3*s23^3*(s13 + s23)^2*(459*s13^4 + 
                    589*s13^3*s23 - 429*s13^2*s23^2 - 299*s13*s23^3 + 
                    35*s23^4) + s12^8*(-72*s13^5 - 72*s13^4*s23 + 56*s13^3*
                     s23^2 + 106*s13^2*s23^3 + 90*s13*s23^4 + 70*s23^5) + 
                  s12^2*s13^3*s23^2*(297*s13^6 + 89*s13^5*s23 - 3587*s13^4*
                     s23^2 - 6315*s13^3*s23^3 - 2598*s13^2*s23^4 + 418*s13*
                     s23^5 + 80*s23^6) + s12^7*(-198*s13^6 + 1377*s13^5*s23 + 
                    2860*s13^4*s23^2 + 661*s13^3*s23^3 - 114*s13^2*s23^4 + 
                    540*s13*s23^5 + 280*s23^6) + s12^6*(-198*s13^7 + 
                    2016*s13^6*s23 + 10841*s13^5*s23^2 + 11441*s13^4*s23^3 + 
                    1872*s13^3*s23^4 - 342*s13^2*s23^5 + 1010*s13*s23^6 + 
                    420*s23^7) + s12^3*s13*s23*(-63*s13^8 - 2360*s13^7*s23 - 
                    7326*s13^6*s23^2 - 4606*s13^5*s23^3 + 1729*s13^4*s23^4 + 
                    2326*s13^3*s23^5 + 1106*s13^2*s23^6 + 336*s13*s23^7 - 
                    70*s23^8) + s12^5*(-90*s13^8 - 522*s13^7*s23 + 7510*s13^6*
                     s23^2 + 21521*s13^5*s23^3 + 16430*s13^4*s23^4 + 
                    3429*s13^3*s23^5 + 418*s13^2*s23^6 + 690*s13*s23^7 + 
                    280*s23^8) + s12^4*(-18*s13^9 - 1152*s13^8*s23 - 
                    3220*s13^7*s23^2 + 5578*s13^6*s23^3 + 14981*s13^5*s23^4 + 
                    9649*s13^4*s23^5 + 3258*s13^3*s23^6 + 876*s13^2*s23^7 + 
                    60*s13*s23^8 + 70*s23^9)) + p2q*p3q*(10*s13^4*(3*s13 - 
                    5*s23)*s23^5*(s13 + s23)^4 - 2*s12*s13^3*s23^4*
                   (s13 + s23)^3*(131*s13^3 + 120*s13^2*s23 + 109*s13*s23^2 - 
                    115*s23^3) - s12^2*s13^3*s23^3*(s13 + s23)^2*
                   (1927*s13^4 + 3723*s13^3*s23 + 339*s13^2*s23^2 - 
                    1627*s13*s23^3 - 40*s23^4) - 2*s12^9*(36*s13^5 + 
                    72*s13^4*s23 - 91*s13^3*s23^2 - 217*s13^2*s23^3 - 
                    80*s13*s23^4 + 15*s23^5) + s12^8*(-324*s13^6 + 360*s13^5*
                     s23 + 5139*s13^4*s23^2 + 8638*s13^3*s23^3 + 4793*s13^2*
                     s23^4 + 620*s13*s23^5 - 70*s23^6) + s12^7*(-468*s13^7 + 
                    1584*s13^6*s23 + 14241*s13^5*s23^2 + 29743*s13^4*s23^3 + 
                    26316*s13^3*s23^4 + 10042*s13^2*s23^5 + 1280*s13*s23^6 + 
                    20*s23^7) + s12^6*(-252*s13^8 + 648*s13^7*s23 + 
                    13932*s13^6*s23^2 + 38919*s13^5*s23^3 + 43822*s13^4*
                     s23^4 + 22737*s13^3*s23^5 + 6272*s13^2*s23^6 + 
                    1490*s13*s23^7 + 180*s23^8) - s12^3*s13*s23^2*
                   (2585*s13^8 + 10837*s13^7*s23 + 12977*s13^6*s23^2 + 
                    3697*s13^5*s23^3 - 1508*s13^4*s23^4 - 544*s13^3*s23^5 + 
                    176*s13^2*s23^6 + 470*s13*s23^7 + 230*s23^8) + 
                  s12^4*s23*(-1008*s13^9 - 5787*s13^8*s23 - 4974*s13^7*
                     s23^2 + 7250*s13^6*s23^3 + 10833*s13^5*s23^4 + 
                    1368*s13^4*s23^5 - 3689*s13^3*s23^6 - 2109*s13^2*s23^7 - 
                    310*s13*s23^8 + 50*s23^9) + s12^5*(-36*s13^9 - 1440*s13^8*
                     s23 + 1518*s13^7*s23^2 + 21388*s13^6*s23^3 + 36995*s13^5*
                     s23^4 + 21163*s13^4*s23^5 + 1174*s13^3*s23^6 - 
                    1050*s13^2*s23^7 + 590*s13*s23^8 + 170*s23^9))) + 
              p1q^2*(-(p2q^4*s13^2*(s13 + s23)*(10*s13^4*s23^3*(s13 + s23)^3*
                    (9*s13^2 - 2*s13*s23 - 48*s23^2) + 2*s12^8*(18*s13^4 + 
                     9*s13^3*s23 - 14*s13^2*s23^2 - 65*s13*s23^3 - 
                     55*s23^4) + 2*s12*s13^3*s23^2*(s13 + s23)^2*(54*s13^4 + 
                     14*s13^3*s23 - 494*s13^2*s23^2 - 439*s13*s23^3 + 
                     240*s23^4) + s12^7*(72*s13^5 - 243*s13^4*s23 - 
                     1087*s13^3*s23^2 - 944*s13^2*s23^3 - 672*s13*s23^4 - 
                     390*s23^5) - s12^6*s23*(-378*s13^5 + 2852*s13^4*s23 + 
                     6924*s13^3*s23^2 + 4259*s13^2*s23^3 + 1265*s13*s23^4 + 
                     510*s23^5) + s12^2*s13^3*s23^2*(-460*s13^5 - 576*s13^4*
                      s23 + 2421*s13^3*s23^2 + 5879*s13^2*s23^3 + 4171*s13*
                      s23^4 + 829*s23^5) + s12^3*s13*s23*(-441*s13^7 + 
                     227*s13^6*s23 + 6363*s13^5*s23^2 + 8927*s13^4*s23^3 + 
                     4824*s13^3*s23^4 + 1822*s13^2*s23^5 + 610*s13*s23^6 + 
                     60*s23^7) - s12^5*(72*s13^7 - 1116*s13^6*s23 - 
                     1400*s13^5*s23^2 + 8309*s13^4*s23^3 + 13119*s13^3*
                      s23^4 + 5712*s13^2*s23^5 + 974*s13*s23^6 + 290*s23^7) - 
                   s12^4*(36*s13^8 - 36*s13^7*s23 - 3988*s13^6*s23^2 - 
                     3922*s13^5*s23^3 + 4818*s13^4*s23^4 + 6252*s13^3*s23^5 + 
                     1759*s13^2*s23^6 + 191*s13*s23^7 + 60*s23^8))) + 
                p3q^4*s12^2*(s12 + s23)*(90*s12^9*s23^2*(s13 + s23) - 
                  10*s13^4*s23^4*(s13 + s23)^3*(11*s13 + 6*s23) - s12*s13^3*
                   s23^3*(s13 + s23)^2*(170*s13^3 + 631*s13^2*s23 + 
                    311*s13*s23^2 - 60*s23^3) + 2*s12^8*(18*s13^4 + 
                    9*s13^3*s23 + 76*s13^2*s23^2 + 205*s13*s23^3 + 
                    125*s23^4) + s12^7*(72*s13^5 - 441*s13^4*s23 - 1411*s13^3*
                     s23^2 - 1028*s13^2*s23^3 - 450*s13*s23^4 - 270*s23^5) - 
                  2*s12^2*s13^3*s23^2*(239*s13^5 + 1623*s13^4*s23 + 
                    3975*s13^3*s23^2 + 3908*s13^2*s23^3 + 1108*s13*s23^4 - 
                    209*s23^5) - 2*s12^6*s23*(117*s13^5 + 175*s13^4*s23 + 
                    9*s13^3*s23^2 + 1171*s13^2*s23^3 + 1810*s13*s23^4 + 
                    705*s23^5) + s12^5*(-72*s13^7 + 468*s13^6*s23 + 
                    4406*s13^5*s23^2 + 12037*s13^4*s23^3 + 11010*s13^3*
                     s23^4 + 189*s13^2*s23^5 - 4220*s13*s23^6 - 1460*s23^7) - 
                  s12^3*s13*s23*(459*s13^7 + 2725*s13^6*s23 + 5799*s13^5*
                     s23^2 + 4441*s13^4*s23^3 + 156*s13^3*s23^4 - 2257*s13^2*
                     s23^5 - 1825*s13*s23^6 - 480*s23^7) - 2*s12^4*
                   (18*s13^8 + 108*s13^7*s23 - 518*s13^6*s23^2 - 3506*s13^5*
                     s23^3 - 7092*s13^4*s23^4 - 5877*s13^3*s23^5 - 1588*s13^2*
                     s23^6 + 445*s13*s23^7 + 240*s23^8)) + p2q*p3q^3*s12*
                 (-10*s13^4*s23^5*(s13 + s23)^3*(14*s13^2 - 4*s13*s23 + 
                    5*s23^2) - s12*s13^3*s23^4*(s13 + s23)^2*(68*s13^4 + 
                    297*s13^3*s23 + 176*s13^2*s23^2 + 167*s13*s23^3 - 
                    50*s23^4) + 2*s12^10*(18*s13^4 + 9*s13^3*s23 - 149*s13^2*
                     s23^2 - 20*s13*s23^3 + 125*s23^4) - s12^9*(36*s13^5 + 
                    513*s13^4*s23 + 1696*s13^3*s23^2 + 1529*s13^2*s23^3 - 
                    150*s13*s23^4 - 540*s23^5) + s12^2*s13^3*s23^3*
                   (1178*s13^6 + 3960*s13^5*s23 + 4529*s13^4*s23^2 + 
                    2169*s13^3*s23^3 + 651*s13^2*s23^4 + 19*s13*s23^5 - 
                    210*s23^6) + s12^8*(-216*s13^6 + 765*s13^5*s23 + 
                    3883*s13^4*s23^2 + 4334*s13^3*s23^3 + 1562*s13^2*s23^4 + 
                    40*s13*s23^5 - 110*s23^6) + s12^7*(-72*s13^7 + 378*s13^6*
                     s23 + 8651*s13^5*s23^2 + 23988*s13^4*s23^3 + 26169*s13^3*
                     s23^4 + 11552*s13^2*s23^5 + 470*s13*s23^6 - 840*s23^7) + 
                  s12^3*s13*s23^2*(2469*s13^8 + 9333*s13^7*s23 + 8628*s13^6*
                     s23^2 - 3558*s13^5*s23^3 - 9611*s13^4*s23^4 - 5304*s13^3*
                     s23^5 - 1922*s13^2*s23^6 - 977*s13*s23^7 - 230*s23^8) + 
                  s12^6*(180*s13^8 - 2232*s13^7*s23 - 9554*s13^6*s23^2 - 
                    5821*s13^5*s23^3 + 15823*s13^4*s23^4 + 26313*s13^3*
                     s23^5 + 15211*s13^2*s23^6 + 3040*s13*s23^7 - 
                    210*s23^8) + s12^4*s23*(1449*s13^9 + 4961*s13^8*s23 - 
                    5555*s13^7*s23^2 - 30343*s13^6*s23^3 - 37420*s13^5*
                     s23^4 - 23934*s13^4*s23^5 - 8915*s13^3*s23^6 - 
                    535*s13^2*s23^7 + 960*s13*s23^8 + 230*s23^9) + 
                  s12^5*(108*s13^9 + 135*s13^8*s23 - 10432*s13^7*s23^2 - 
                    33808*s13^6*s23^3 - 41395*s13^5*s23^4 - 22951*s13^4*
                     s23^5 - 1061*s13^3*s23^6 + 6894*s13^2*s23^7 + 3610*s13*
                     s23^8 + 460*s23^9)) - p2q^2*p3q^2*(-10*s13^5*(25*s13 - 
                    23*s23)*s23^5*(s13 + s23)^4 - 2*s12*s13^4*s23^4*
                   (s13 + s23)^3*(317*s13^3 - 277*s13*s23^2 + 90*s23^3) + 
                  s12^2*s13^3*s23^3*(s13 + s23)^2*(466*s13^5 - 783*s13^4*
                     s23 - 2658*s13^3*s23^2 - 2633*s13^2*s23^3 - 494*s13*
                     s23^4 - 50*s23^5) + 2*s12^10*(54*s13^5 + 45*s13^4*s23 - 
                    168*s13^3*s23^2 + 16*s13^2*s23^3 + 310*s13*s23^4 + 
                    125*s23^5) + s12^9*(108*s13^6 - 1143*s13^5*s23 - 
                    4410*s13^4*s23^2 - 3697*s13^3*s23^3 + 842*s13^2*s23^4 + 
                    2320*s13*s23^5 + 770*s23^6) + s12^8*(-216*s13^7 + 
                    693*s13^6*s23 + 681*s13^5*s23^2 - 1324*s13^4*s23^3 + 
                    241*s13^3*s23^4 + 2877*s13^2*s23^5 + 2200*s13*s23^6 + 
                    580*s23^7) + s12^7*(-216*s13^8 + 1314*s13^7*s23 + 
                    17157*s13^6*s23^2 + 40524*s13^5*s23^3 + 41542*s13^4*
                     s23^4 + 21604*s13^3*s23^5 + 4459*s13^2*s23^6 - 
                    940*s13*s23^7 - 380*s23^8) + s12^3*s13^2*s23^2*
                   (2235*s13^8 + 3769*s13^7*s23 - 10913*s13^6*s23^2 - 
                    31612*s13^5*s23^3 - 28917*s13^4*s23^4 - 12275*s13^3*
                     s23^5 - 2503*s13^2*s23^6 + 70*s13*s23^7 + 50*s23^8) + 
                  s12^6*(108*s13^9 - 3060*s13^8*s23 - 2280*s13^7*s23^2 + 
                    29781*s13^6*s23^3 + 70758*s13^5*s23^4 + 68092*s13^4*
                     s23^5 + 31470*s13^3*s23^6 + 4293*s13^2*s23^7 - 
                    2120*s13*s23^8 - 670*s23^9) + s12^4*s13*s23*(1413*s13^9 + 
                    783*s13^8*s23 - 22367*s13^7*s23^2 - 48008*s13^6*s23^3 - 
                    34307*s13^5*s23^4 - 5340*s13^4*s23^5 + 4449*s13^3*s23^6 + 
                    2871*s13^2*s23^7 + 898*s13*s23^8 + 180*s23^9) + 
                  s12^5*(108*s13^10 - 1035*s13^9*s23 - 16134*s13^8*s23^2 - 
                    28176*s13^7*s23^3 - 1245*s13^6*s23^4 + 33854*s13^5*
                     s23^5 + 35224*s13^4*s23^6 + 16219*s13^3*s23^7 + 
                    2749*s13^2*s23^8 - 500*s13*s23^9 - 230*s23^10)) + 
                p2q^3*p3q*s13*(-10*s13^4*s23^4*(s13 + s23)^4*(25*s13^2 - 
                    46*s13*s23 + 23*s23^2) + 2*s12*s13^3*s23^3*(s13 + s23)^3*
                   (13*s13^4 + 82*s13^3*s23 - 148*s13^2*s23^2 - 582*s13*
                     s23^3 + 115*s23^4) + 2*s12^9*(54*s13^5 + 63*s13^4*s23 - 
                    69*s13^3*s23^2 - 88*s13^2*s23^3 + 65*s13*s23^4 + 
                    70*s23^5) + s12^2*s13^3*s23^2*(s13 + s23)^2*(811*s13^5 - 
                    863*s13^4*s23 - 5205*s13^3*s23^2 - 3638*s13^2*s23^3 + 
                    1144*s13*s23^4 + 511*s23^5) + s12^8*(180*s13^6 - 
                    819*s13^5*s23 - 4196*s13^4*s23^2 - 4699*s13^3*s23^3 - 
                    1300*s13^2*s23^4 + 682*s13*s23^5 + 380*s23^6) - 
                  s12^7*(72*s13^7 - 711*s13^6*s23 + 4283*s13^5*s23^2 + 
                    14414*s13^4*s23^3 + 11888*s13^3*s23^4 + 1807*s13^2*
                     s23^5 - 1203*s13*s23^6 - 350*s23^7) + s12^6*
                   (-216*s13^8 + 2142*s13^7*s23 + 11813*s13^6*s23^2 + 
                    11632*s13^5*s23^3 - 2361*s13^4*s23^4 - 5897*s13^3*s23^5 + 
                    20*s13^2*s23^6 + 1209*s13*s23^7 + 170*s23^8) + 
                  s12^3*s13*s23*(459*s13^9 - 1697*s13^8*s23 - 12941*s13^7*
                     s23^2 - 15871*s13^6*s23^3 + 1801*s13^5*s23^4 + 
                    12089*s13^4*s23^5 + 6521*s13^3*s23^6 + 1509*s13^2*s23^7 + 
                    140*s13*s23^8 - 50*s23^9) + s12^5*(-36*s13^9 - 1296*s13^8*
                     s23 + 7126*s13^7*s23^2 + 32689*s13^6*s23^3 + 42183*s13^5*
                     s23^4 + 21498*s13^4*s23^5 + 3878*s13^3*s23^6 + 
                    1117*s13^2*s23^7 + 837*s13*s23^8 + 110*s23^9) + 
                  s12^4*(36*s13^10 - 1323*s13^9*s23 - 7420*s13^8*s23^2 + 
                    1380*s13^7*s23^3 + 30371*s13^6*s23^4 + 37712*s13^5*
                     s23^5 + 17427*s13^4*s23^6 + 3260*s13^3*s23^7 + 
                    554*s13^2*s23^8 + 229*s13*s23^9 + 50*s23^10))) - 
              p1q^3*(p3q^3*s12*(s12 + s23)*(10*s13^4*s23^5*(s13 + s23)^3*
                   (5*s13 + 12*s23) + 90*s12^9*s23^2*(s13^2 + 5*s13*s23 + 
                    4*s23^2) - s12*s13^3*s23^4*(s13 + s23)^2*(23*s13^3 + 
                    82*s13^2*s23 + 89*s13*s23^2 + 120*s23^3) - 2*s12^2*s13^3*
                   s23^3*(411*s13^5 + 1965*s13^4*s23 + 3562*s13^3*s23^2 + 
                    2661*s13^2*s23^3 + 401*s13*s23^4 - 252*s23^5) + 
                  s12^8*(36*s13^5 + 108*s13^4*s23 + 179*s13^3*s23^2 + 
                    1217*s13^2*s23^3 + 2110*s13*s23^4 + 1020*s23^5) + 
                  s12^7*(108*s13^6 - 81*s13^5*s23 - 2816*s13^4*s23^2 - 
                    5215*s13^3*s23^3 - 1578*s13^2*s23^4 + 1480*s13*s23^5 + 
                    600*s23^6) + s12^6*(108*s13^7 - 117*s13^6*s23 - 
                    3643*s13^5*s23^2 - 10550*s13^4*s23^3 - 11827*s13^3*
                     s23^4 - 7405*s13^2*s23^5 - 3180*s13*s23^6 - 720*s23^7) + 
                  s12^3*s13*s23^2*(-386*s13^7 - 1235*s13^6*s23 + 804*s13^5*
                     s23^2 + 4671*s13^4*s23^3 + 3899*s13^3*s23^4 + 1710*s13^2*
                     s23^5 + 1049*s13*s23^6 + 300*s23^7) + s12^5*(36*s13^8 + 
                    441*s13^7*s23 + 1996*s13^6*s23^2 + 5322*s13^5*s23^3 + 
                    8087*s13^4*s23^4 + 3531*s13^3*s23^5 - 4225*s13^2*s23^6 - 
                    4310*s13*s23^7 - 960*s23^8) + s12^4*s23*(369*s13^8 + 
                    2348*s13^7*s23 + 8757*s13^6*s23^2 + 17949*s13^5*s23^3 + 
                    20601*s13^4*s23^4 + 11434*s13^3*s23^5 + 1524*s13^2*
                     s23^6 - 1010*s13*s23^7 - 300*s23^8)) - p2q^3*s13*
                 (s13 + s23)*(60*s13^4*s23^4*(s13 + s23)^3*(6*s13^2 - 
                    s13*s23 - 5*s23^2) + 2*s12*s13^3*s23^3*(s13 + s23)^3*
                   (261*s13^3 - 40*s13^2*s23 - 631*s13*s23^2 + 150*s23^3) + 
                  s12^8*(-36*s13^5 + 54*s13^4*s23 + 190*s13^3*s23^2 + 
                    110*s13^2*s23^3 + 30*s13*s23^4 + 50*s23^5) + 
                  s12^7*(-108*s13^6 + 423*s13^5*s23 + 215*s13^4*s23^2 - 
                    1660*s13^3*s23^3 - 985*s13^2*s23^4 + 359*s13*s23^5 + 
                    270*s23^6) + s12^2*s13^3*s23^2*(99*s13^6 - 983*s13^5*
                     s23 - 4095*s13^4*s23^2 - 2968*s13^3*s23^3 + 2851*s13^2*
                     s23^4 + 3255*s13*s23^5 + 449*s23^6) + s12^6*
                   (-108*s13^7 + 153*s13^6*s23 + 3346*s13^5*s23^2 - 
                    182*s13^4*s23^3 - 7571*s13^3*s23^4 - 3801*s13^2*s23^5 + 
                    863*s13*s23^6 + 510*s23^7) + s12^3*s13*s23*(-18*s13^8 - 
                    1873*s13^7*s23 - 4011*s13^6*s23^2 + 4566*s13^5*s23^3 + 
                    11404*s13^4*s23^4 + 6547*s13^3*s23^5 + 1805*s13^2*s23^6 + 
                    300*s13*s23^7 - 120*s23^8) + s12^4*s23*(-567*s13^8 - 
                    1511*s13^7*s23 + 8501*s13^6*s23^2 + 16190*s13^5*s23^3 + 
                    5505*s13^4*s23^4 - 2008*s13^3*s23^5 - 1073*s13^2*s23^6 - 
                    5*s13*s23^7 + 120*s23^8) + s12^5*(-36*s13^8 - 765*s13^7*
                     s23 + 3782*s13^6*s23^2 + 11875*s13^5*s23^3 + 1755*s13^4*
                     s23^4 - 9177*s13^3*s23^5 - 4079*s13^2*s23^6 + 649*s13*
                     s23^7 + 410*s23^8)) + p2q*p3q^2*(10*s13^4*(23*s13 - 
                    7*s23)*s23^6*(s13 + s23)^4 + 2*s12*s13^3*s23^5*
                   (s13 + s23)^3*(152*s13^3 + 113*s13^2*s23 - 134*s13*s23^2 + 
                    35*s23^3) - s12^2*s13^3*s23^4*(s13 + s23)^2*(1165*s13^4 + 
                    1992*s13^3*s23 + 841*s13^2*s23^2 - 46*s13*s23^3 + 
                    360*s23^4) + 2*s12^10*(18*s13^5 + 63*s13^4*s23 - 
                    122*s13^3*s23^2 - 422*s13^2*s23^3 - 160*s13*s23^4 + 
                    105*s23^5) + s12^9*(36*s13^6 - 99*s13^5*s23 - 3048*s13^4*
                     s23^2 - 7861*s13^3*s23^3 - 6188*s13^2*s23^4 - 790*s13*
                     s23^5 + 580*s23^6) - s12^8*(108*s13^7 - 333*s13^6*s23 + 
                    567*s13^5*s23^2 + 8092*s13^4*s23^3 + 13399*s13^3*s23^4 + 
                    7975*s13^2*s23^5 + 1080*s13*s23^6 - 290*s23^7) + 
                  s12^7*(-180*s13^8 + 531*s13^7*s23 + 8967*s13^6*s23^2 + 
                    21071*s13^5*s23^3 + 22644*s13^4*s23^4 + 14582*s13^3*
                     s23^5 + 4013*s13^2*s23^6 - 850*s13*s23^7 - 440*s23^8) - 
                  s12^3*s13*s23^3*(2502*s13^8 + 9538*s13^7*s23 + 12371*s13^6*
                     s23^2 + 9709*s13^5*s23^3 + 8617*s13^4*s23^4 + 4857*s13^3*
                     s23^5 + 708*s13^2*s23^6 + 164*s13*s23^7 + 70*s23^8) + 
                  s12^6*(-72*s13^9 - 963*s13^8*s23 + 3612*s13^7*s23^2 + 
                    26216*s13^6*s23^3 + 51968*s13^5*s23^4 + 56534*s13^4*
                     s23^5 + 36980*s13^3*s23^6 + 12461*s13^2*s23^7 + 
                    760*s13*s23^8 - 410*s23^9) + s12^5*s23*(-936*s13^9 - 
                    5307*s13^8*s23 - 1282*s13^7*s23^2 + 22758*s13^6*s23^3 + 
                    40387*s13^5*s23^4 + 31434*s13^4*s23^5 + 15521*s13^3*
                     s23^6 + 6695*s13^2*s23^7 + 1710*s13*s23^8 + 20*s23^9) + 
                  s12^4*s23^2*(-2189*s13^9 - 10014*s13^8*s23 - 11476*s13^7*
                     s23^2 - 1183*s13^6*s23^3 + 3220*s13^5*s23^4 - 1085*s13^4*
                     s23^5 - 1373*s13^3*s23^6 + 714*s13^2*s23^7 + 640*s13*
                     s23^8 + 70*s23^9)) + p2q^2*p3q*(-10*s13^4*s23^5*
                   (s13 + s23)^4*(21*s13^2 - 26*s13*s23 + 7*s23^2) + 
                  2*s12*s13^3*s23^4*(s13 + s23)^3*(193*s13^4 + 94*s13^3*s23 + 
                    2*s13^2*s23^2 - 344*s13*s23^3 + 35*s23^4) + s12^2*s13^3*
                   s23^3*(s13 + s23)^2*(2360*s13^5 + 2415*s13^4*s23 - 
                    4404*s13^3*s23^2 - 4635*s13^2*s23^3 + 394*s13*s23^4 + 
                    30*s23^5) - 2*s12^9*(36*s13^6 + 54*s13^5*s23 - 127*s13^4*
                     s23^2 - 311*s13^3*s23^3 - 106*s13^2*s23^4 + 165*s13*
                     s23^5 + 115*s23^6) + s12^8*(-180*s13^7 + 306*s13^6*s23 + 
                    2931*s13^5*s23^2 + 6837*s13^4*s23^3 + 7463*s13^3*s23^4 + 
                    2071*s13^2*s23^5 - 1680*s13*s23^6 - 850*s23^7) + 
                  s12^7*(-108*s13^8 - 243*s13^7*s23 + 5766*s13^6*s23^2 + 
                    18884*s13^5*s23^3 + 26951*s13^4*s23^4 + 20021*s13^3*
                     s23^5 + 4493*s13^2*s23^6 - 2630*s13*s23^7 - 
                    1100*s23^8) + s12^6*(36*s13^9 - 1323*s13^8*s23 - 
                    3378*s13^7*s23^2 + 7232*s13^6*s23^3 + 30204*s13^5*s23^4 + 
                    38462*s13^4*s23^5 + 21902*s13^3*s23^6 + 4123*s13^2*
                     s23^7 - 1180*s13*s23^8 - 500*s23^9) + s12^3*s13*s23^2*
                   (2161*s13^9 + 4993*s13^8*s23 - 8051*s13^7*s23^2 - 
                    25606*s13^6*s23^3 - 18091*s13^5*s23^4 - 2339*s13^4*
                     s23^5 + 2143*s13^3*s23^6 + 1410*s13^2*s23^7 + 226*s13*
                     s23^8 - 70*s23^9) + s12^5*(36*s13^10 - 153*s13^9*s23 - 
                    8577*s13^8*s23^2 - 22129*s13^7*s23^3 - 9622*s13^6*s23^4 + 
                    23353*s13^5*s23^5 + 30306*s13^4*s23^6 + 12899*s13^3*
                     s23^7 + 2217*s13^2*s23^8 + 390*s13*s23^9 + 50*s23^10) + 
                  s12^4*s23*(513*s13^10 + 51*s13^9*s23 - 16219*s13^8*s23^2 - 
                    35178*s13^7*s23^3 - 19357*s13^6*s23^4 + 9806*s13^5*
                     s23^5 + 14325*s13^4*s23^6 + 5627*s13^3*s23^7 + 
                    954*s13^2*s23^8 + 220*s13*s23^9 + 70*s23^10)))))/
            (36*p1q*(p2q + p3q)*s12^3*s13^3*(s12 + s13)*s23^2*(s12 + s23)*
             (s13 + s23)^2*(p1q^4*s23^2*(s12 + s23)*(s13 + s23) - 
              (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*
                 (s13 + s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + 
                    s23))) - p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - 
                  s12*s23 + 3*s13*s23 - s23^2) + p3q*(s12 + s23)*
                 (-(s23*(s13 + s23)) + s12*(2*s13 + 3*s23))) + 
              p1q*(-(p3q^3*s12^2*(s12 - s13 - 3*s23)*(s12 + s23)) + 
                p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 3*s23) + p2q*p3q^2*s12*
                 (s12^2*(3*s13 + s23) - 2*s23*(s13^2 + s13*s23 + s23^2) - 
                  s12*(3*s13^2 + 2*s13*s23 + s23^2)) - p2q^2*p3q*s13*
                 (s12^2*(3*s13 + 2*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(-3*s13^2 + 2*s13*s23 + 2*s23^2))) + 
              p1q^2*(p2q^2*s13*(s13 + s23)*(s12*(s13 - 2*s23) + 3*(s13 - s23)*
                   s23) + p3q^2*s12*(s12 + s23)*(s12*(s13 + 3*s23) - 
                  s23*(2*s13 + 3*s23)) - p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - 
                    s23^2) + 2*s12^2*(s13^2 + s13*s23 + s23^2) + 
                  s12*(2*s13^2*s23 + s23^3))))) + 
           (-9*p1q^7*(s12 + s13)*s23^4*(s12 + s23)*(s13 + s23)*
              (-60*s13^4*s23^3*(s13 + s23)^3 + 20*s12^7*s23^2*(4*s13 + 
                 3*s23) - 5*s12^6*(s13 + s23)^2*(15*s13^2 - 16*s13*s23 - 
                 36*s23^2) - 4*s12*s13^3*s23^2*(s13 + s23)^2*(33*s13^2 + 
                 58*s13*s23 + 10*s23^2) - s12^2*s13^3*s23*(s13 + s23)^2*
                (9*s13^2 + 185*s13*s23 + 84*s23^2) + s12^3*s13*(s13 + s23)^2*
                (75*s13^4 + 50*s13^3*s23 - 48*s13^2*s23^2 + 12*s13*s23^3 + 
                 40*s23^4) + s12^5*(-75*s13^5 - 208*s13^4*s23 + 69*s13^3*
                  s23^2 + 722*s13^2*s23^3 + 680*s13*s23^4 + 180*s23^5) + 
               s12^4*(75*s13^6 + 71*s13^5*s23 - 54*s13^4*s23^2 + 199*s13^3*
                  s23^3 + 549*s13^2*s23^4 + 360*s13*s23^5 + 60*s23^6)) + 
             9*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
              (p2q^5*s13^2*(60*s13^5*s23^3*(s13 + s23)^3 + 8*s12*s13^4*s23^2*
                  (s13 + s23)^3*(14*s13 + 5*s23) + s12^2*s13^3*s23*
                  (s13 + s23)^3*(4*s13^2 + 177*s13*s23 - 24*s23^2) + 
                 20*s12^7*s23^2*(4*s13^2 + 7*s13*s23 + 3*s23^2) + 
                 s12^3*s13^2*s23*(s13 + s23)^2*(713*s13^3 + 918*s13^2*s23 + 
                   269*s13*s23^2 - 40*s23^3) + s12^6*(576*s13^5 + 1551*s13^4*
                    s23 + 1501*s13^3*s23^2 + 733*s13^2*s23^3 + 307*s13*
                    s23^4 + 100*s23^5) + s12^4*s13*(648*s13^6 + 3397*s13^5*
                    s23 + 6262*s13^4*s23^2 + 5072*s13^3*s23^3 + 1690*s13^2*
                    s23^4 + 135*s13*s23^5 + 4*s23^6) + s12^5*(1224*s13^6 + 
                   4167*s13^5*s23 + 5272*s13^4*s23^2 + 3050*s13^3*s23^3 + 
                   852*s13^2*s23^4 + 171*s13*s23^5 + 40*s23^6)) - p3q^5*s12^2*
                (40*s13^5*s23^4*(s13 + s23)^2 + 20*s12^8*s23^2*(4*s13 + 
                   3*s23) + s12*s13^4*s23^3*(s13 + s23)^2*(79*s13 + 4*s23) + 
                 20*s12^7*s23*(-2*s13^3 + 8*s13^2*s23 + 19*s13*s23^2 + 
                   9*s23^3) + s12^2*s13^3*s23^2*(50*s13^4 + 127*s13^3*s23 + 
                   40*s13^2*s23^2 - 77*s13*s23^3 - 40*s23^4) + s12^3*s13^2*
                  s23*(11*s13^5 + 160*s13^4*s23 + 232*s13^3*s23^2 + 
                   24*s13^2*s23^3 - 83*s13*s23^4 - 24*s23^5) + s12^4*s13*s23*
                  (187*s13^5 + 540*s13^4*s23 + 380*s13^3*s23^2 + 56*s13^2*
                    s23^3 + 49*s13*s23^4 + 40*s23^5) + s12^6*(72*s13^5 + 
                   85*s13^4*s23 + 10*s13^3*s23^2 + 417*s13^2*s23^3 + 
                   560*s13*s23^4 + 180*s23^5) + s12^5*(72*s13^6 + 373*s13^5*
                    s23 + 360*s13^4*s23^2 + 149*s13^3*s23^3 + 330*s13^2*
                    s23^4 + 300*s13*s23^5 + 60*s23^6)) - p2q^4*p3q*s13*
                (-60*s13^5*(2*s13 - s23)*s23^3*(s13 + s23)^3 + 20*s12^8*s23^2*
                  (12*s13^2 + 17*s13*s23 + 6*s23^2) - 4*s12*s13^4*s23^2*
                  (s13 + s23)^2*(56*s13^3 + 8*s13^2*s23 - 43*s13*s23^2 - 
                   10*s23^3) - s12^2*s13^3*s23*(s13 + s23)^2*(8*s13^4 - 
                   13*s13^3*s23 - 362*s13^2*s23^2 - 389*s13*s23^3 + 
                   24*s23^4) - s12^3*s13^2*s23*(s13 + s23)^2*(1335*s13^4 + 
                   443*s13^3*s23 - 576*s13^2*s23^2 - 249*s13*s23^3 + 
                   40*s23^4) + s12^7*(1152*s13^5 + 2558*s13^4*s23 + 
                   1987*s13^3*s23^2 + 1092*s13^2*s23^3 + 811*s13*s23^4 + 
                   280*s23^5) + s12^6*(1368*s13^6 + 4741*s13^5*s23 + 
                   5817*s13^4*s23^2 + 3213*s13^3*s23^3 + 1115*s13^2*s23^4 + 
                   566*s13*s23^5 + 200*s23^6) - s12^4*s13*(1296*s13^7 + 
                   4605*s13^6*s23 + 5014*s13^5*s23^2 + 685*s13^4*s23^3 - 
                   1635*s13^3*s23^4 - 458*s13^2*s23^5 + 153*s13*s23^6 - 
                   4*s23^7) + s12^5*(-1080*s13^7 - 735*s13^6*s23 + 
                   2966*s13^5*s23^2 + 3945*s13^4*s23^3 + 1395*s13^3*s23^4 + 
                   150*s13^2*s23^5 + 99*s13*s23^6 + 40*s23^7)) + p2q^3*p3q^2*
                (60*s13^6*(s13 - 2*s23)*s23^3*(s13 + s23)^3 + 20*s12^9*s23^2*
                  (12*s13^2 + 13*s13*s23 + 3*s23^2) + 4*s12*s13^5*s23^2*
                  (s13 + s23)^2*(28*s13^3 - 98*s13^2*s23 - 91*s13*s23^2 - 
                   10*s23^3) + s12^3*s13^3*s23*(s13 + s23)^2*(675*s13^4 - 
                   871*s13^3*s23 - 581*s13^2*s23^2 - 79*s13*s23^3 + 
                   40*s23^4) + s12^2*s13^4*s23*(s13 + s23)^2*(4*s13^4 - 
                   425*s13^3*s23 - 496*s13^2*s23^2 - 187*s13*s23^3 + 
                   196*s23^4) + s12^8*(576*s13^5 + 967*s13^4*s23 + 
                   362*s13^3*s23^2 + 411*s13^2*s23^3 + 600*s13*s23^4 + 
                   180*s23^5) - s12^7*(936*s13^6 + 1499*s13^5*s23 + 
                   1269*s13^4*s23^2 + 1249*s13^3*s23^3 + 443*s13^2*s23^4 - 
                   380*s13*s23^5 - 180*s23^6) + s12^4*s13^2*(648*s13^7 - 
                   595*s13^6*s23 - 6168*s13^5*s23^2 - 9588*s13^4*s23^3 - 
                   6597*s13^3*s23^4 - 2367*s13^2*s23^5 - 609*s13*s23^6 - 
                   176*s23^7) - s12^6*(3672*s13^7 + 9848*s13^6*s23 + 
                   10329*s13^5*s23^2 + 6829*s13^4*s23^3 + 3691*s13^3*s23^4 + 
                   1095*s13^2*s23^5 - 60*s23^7) - s12^5*s13*(1512*s13^7 + 
                   9368*s13^6*s23 + 16978*s13^5*s23^2 + 13691*s13^4*s23^3 + 
                   6621*s13^3*s23^4 + 2729*s13^2*s23^5 + 657*s13*s23^6 + 
                   40*s23^7)) + p2q*p3q^4*s12*(20*s13^5*s23^4*(s13 + s23)^2*
                  (5*s13 + 2*s23) - 40*s12^9*s23^2*(4*s13 + 3*s23) + 
                 s12*s13^4*s23^3*(s13 + s23)^2*(255*s13^2 + 7*s13*s23 + 
                   4*s23^2) + s12^2*s13^3*s23^2*(s13 + s23)^2*(133*s13^3 - 
                   76*s13^2*s23 - 285*s13*s23^2 - 40*s23^3) - 20*s12^8*s23*
                  (-4*s13^3 + 4*s13^2*s23 + 25*s13*s23^2 + 15*s23^3) + 
                 s12^7*(432*s13^5 + 941*s13^4*s23 + 1110*s13^3*s23^2 + 
                   401*s13^2*s23^3 - 280*s13*s23^4 - 180*s23^5) + 
                 s12^3*s13^2*s23*(-46*s13^6 + 474*s13^5*s23 + 836*s13^4*
                    s23^2 + 79*s13^3*s23^3 - 316*s13^2*s23^4 - 103*s13*
                    s23^5 - 24*s23^6) + s12^4*s13*s23*(1353*s13^6 + 
                   4162*s13^5*s23 + 4469*s13^4*s23^2 + 2133*s13^3*s23^3 + 
                   698*s13^2*s23^4 + 285*s13*s23^5 + 40*s23^6) + 
                 s12^6*(1224*s13^6 + 3303*s13^5*s23 + 3665*s13^4*s23^2 + 
                   2641*s13^3*s23^3 + 1275*s13^2*s23^4 + 340*s13*s23^5 + 
                   60*s23^6) + s12^5*(792*s13^7 + 4201*s13^6*s23 + 
                   6600*s13^5*s23^2 + 4780*s13^4*s23^3 + 2372*s13^3*s23^4 + 
                   1103*s13^2*s23^5 + 320*s13*s23^6 + 60*s23^7)) + p2q^2*
                p3q^3*(-60*s13^6*s23^4*(s13 + s23)^3 - 20*s12^10*s23^2*
                  (4*s13 + 3*s23) - 4*s12*s13^5*s23^3*(s13 + s23)^2*
                  (68*s13^2 + 13*s13*s23 - 10*s23^2) - s12^2*s13^4*s23^2*
                  (s13 + s23)^2*(231*s13^3 - 274*s13^2*s23 - 225*s13*s23^2 - 
                   176*s23^3) + 20*s12^9*s23*(2*s13^3 + 16*s13^2*s23 + 
                   7*s13*s23^2 - 3*s23^3) + s12^3*s13^3*s23*(s13 + s23)^2*
                  (53*s13^4 - 263*s13^3*s23 + 267*s13^2*s23^2 - 151*s13*
                    s23^3 - 40*s23^4) + s12^8*(1080*s13^5 + 1993*s13^4*s23 + 
                   1722*s13^3*s23^2 + 1569*s13^2*s23^3 + 1000*s13*s23^4 + 
                   180*s23^5) - s12^4*s13^2*s23*(1849*s13^6 + 4396*s13^5*
                    s23 + 4238*s13^4*s23^2 + 3153*s13^3*s23^3 + 2167*s13^2*
                    s23^4 + 901*s13*s23^5 + 196*s23^6) + s12^7*(1512*s13^6 + 
                   4735*s13^5*s23 + 4823*s13^4*s23^2 + 2773*s13^3*s23^3 + 
                   2033*s13^2*s23^4 + 1300*s13*s23^5 + 300*s23^6) - 
                 s12^5*s13*(1368*s13^7 + 4572*s13^6*s23 + 4418*s13^5*s23^2 + 
                   1995*s13^4*s23^3 + 2217*s13^3*s23^4 + 1793*s13^2*s23^5 + 
                   257*s13*s23^6 - 40*s23^7) + s12^6*(-936*s13^7 + 
                   832*s13^6*s23 + 4129*s13^5*s23^2 + 2277*s13^4*s23^3 + 
                   159*s13^3*s23^4 + 723*s13^2*s23^5 + 560*s13*s23^6 + 
                   120*s23^7))) + p1q^6*s23^3*(p2q*(-20*s13^5*(135*s13 - 
                   4*s23)*s23^4*(s13 + s23)^4 + 180*s12^10*s23^2*(4*s13^2 + 
                   7*s13*s23 + 3*s23^2) - 20*s12*s13^4*s23^3*(s13 + s23)^3*
                  (396*s13^3 + 750*s13^2*s23 + 173*s13*s23^2 - 38*s23^3) - 
                 2*s12^2*s13^3*s23^2*(s13 + s23)^2*(2628*s13^5 + 14919*s13^4*
                    s23 + 20852*s13^3*s23^2 + 7675*s13^2*s23^3 - 1286*s13*
                    s23^4 - 480*s23^5) + s12^9*(-243*s13^5 - 9*s13^4*s23 + 
                   5191*s13^3*s23^2 + 11137*s13^2*s23^3 + 8260*s13*s23^4 + 
                   2080*s23^5) - s12^6*(s13 + s23)^2*(7938*s13^6 + 
                   42498*s13^5*s23 + 36197*s13^4*s23^2 - 24166*s13^3*s23^3 - 
                   34639*s13^2*s23^4 - 6020*s13*s23^5 - 220*s23^6) + 
                 s12^8*(-4563*s13^6 - 9342*s13^5*s23 + 6774*s13^4*s23^2 + 
                   36482*s13^3*s23^3 + 40649*s13^2*s23^4 + 18640*s13*s23^5 + 
                   2920*s23^6) + s12^7*(-11178*s13^7 - 42147*s13^6*s23 - 
                   43008*s13^5*s23^2 + 29330*s13^4*s23^3 + 88726*s13^3*
                    s23^4 + 63877*s13^2*s23^5 + 18200*s13*s23^6 + 
                   1680*s23^7) + s12^3*s13^2*s23*(1449*s13^8 - 10375*s13^7*
                    s23 - 69900*s13^6*s23^2 - 138762*s13^5*s23^3 - 
                   116723*s13^4*s23^4 - 32395*s13^3*s23^5 + 6638*s13^2*
                    s23^6 + 2036*s13*s23^7 - 960*s23^8) + s12^4*s13*
                  (1701*s13^9 + 2772*s13^8*s23 - 36335*s13^7*s23^2 - 
                   131954*s13^6*s23^3 - 165079*s13^5*s23^4 - 71260*s13^4*
                    s23^5 + 11225*s13^3*s23^6 + 10938*s13^2*s23^7 - 
                   1776*s13*s23^8 - 760*s23^9) + s12^5*(621*s13^9 - 
                   24237*s13^8*s23 - 116332*s13^7*s23^2 - 189231*s13^6*
                    s23^3 - 103884*s13^5*s23^4 + 32546*s13^4*s23^5 + 
                   51891*s13^3*s23^6 + 12438*s13^2*s23^7 - 860*s13*s23^8 - 
                   80*s23^9)) + p3q*(-20*s13^5*(27*s13 - 4*s23)*s23^4*
                  (s13 + s23)^4 + 180*s12^10*s23^2*(16*s13^2 + 32*s13*s23 + 
                   15*s23^2) - 4*s12*s13^4*s23^3*(s13 + s23)^3*(432*s13^3 + 
                   1077*s13^2*s23 + 415*s13*s23^2 - 190*s23^3) - s12^2*s13^3*
                  s23^2*(s13 + s23)^2*(1593*s13^5 + 12180*s13^4*s23 + 
                   23857*s13^3*s23^2 + 13838*s13^2*s23^3 - 772*s13*s23^4 - 
                   960*s23^5) + s12^9*(-1593*s13^5 - 3330*s13^4*s23 + 
                   10915*s13^3*s23^2 + 36472*s13^2*s23^3 + 34540*s13*s23^4 + 
                   10720*s23^5) + s12^8*(-81*s13^6 - 1476*s13^5*s23 + 
                   13821*s13^4*s23^2 + 72446*s13^3*s23^3 + 113990*s13^2*
                    s23^4 + 72280*s13*s23^5 + 15880*s23^6) + 2*s12^7*
                  (4509*s13^7 + 15642*s13^6*s23 + 23874*s13^5*s23^2 + 
                   41089*s13^4*s23^3 + 73523*s13^3*s23^4 + 73235*s13^2*
                    s23^5 + 33220*s13*s23^6 + 5160*s23^7) - s12^3*s13^2*s23*
                  (54*s13^8 + 6199*s13^7*s23 + 41442*s13^6*s23^2 + 
                   101790*s13^5*s23^3 + 114302*s13^4*s23^4 + 57415*s13^3*
                    s23^5 + 9490*s13^2*s23^6 + 844*s13*s23^7 + 960*s23^8) + 
                 2*s12^6*(6129*s13^8 + 29349*s13^7*s23 + 53915*s13^6*s23^2 + 
                   55455*s13^5*s23^3 + 55157*s13^4*s23^4 + 59758*s13^3*
                    s23^5 + 40401*s13^2*s23^6 + 12320*s13*s23^7 + 
                   1190*s23^8) + s12^4*s13*(351*s13^9 + 6858*s13^8*s23 + 
                   15442*s13^7*s23^2 - 10310*s13^6*s23^3 - 60130*s13^5*
                    s23^4 - 60568*s13^4*s23^5 - 22381*s13^3*s23^6 - 
                   5514*s13^2*s23^7 - 3576*s13*s23^8 - 760*s23^9) + 
                 s12^5*(5103*s13^9 + 36180*s13^8*s23 + 84620*s13^7*s23^2 + 
                   86664*s13^6*s23^3 + 48252*s13^5*s23^4 + 34328*s13^4*
                    s23^5 + 30291*s13^3*s23^6 + 12114*s13^2*s23^7 + 
                   940*s13*s23^8 - 80*s23^9))) - p1q*(p2q^6*s13^3*
                (2620*s13^6*s23^4*(s13 + s23)^4 + 180*s12^10*s23^2*
                  (4*s13^2 + 7*s13*s23 + 3*s23^2) + 20*s12*s13^5*s23^3*
                  (s13 + s23)^3*(286*s13^2 + 596*s13*s23 + 183*s23^2) - 
                 2*s12^2*s13^4*s23^2*(s13 + s23)^2*(190*s13^4 - 8219*s13^3*
                    s23 - 14920*s13^2*s23^2 - 6307*s13*s23^3 + 284*s23^4) + 
                 s12^9*(5076*s13^5 + 13311*s13^4*s23 + 13673*s13^3*s23^2 + 
                   10337*s13^2*s23^3 + 7499*s13*s23^4 + 2600*s23^5) + 
                 s12^8*(15660*s13^6 + 64773*s13^5*s23 + 100796*s13^4*s23^2 + 
                   79684*s13^3*s23^3 + 40852*s13^2*s23^4 + 17051*s13*s23^5 + 
                   4200*s23^6) + s12^3*s13^3*s23*(-7308*s13^7 - 6633*s13^6*
                    s23 + 67673*s13^5*s23^2 + 177458*s13^4*s23^3 + 
                   168750*s13^3*s23^4 + 62887*s13^2*s23^5 + 2509*s13*s23^6 - 
                   2088*s23^7) + s12^7*(11232*s13^7 + 115758*s13^6*s23 + 
                   295569*s13^5*s23^2 + 324828*s13^4*s23^3 + 180794*s13^3*
                    s23^4 + 61482*s13^2*s23^5 + 17233*s13*s23^6 + 
                   2760*s23^7) + s12^4*s13^2*(-5292*s13^8 - 20619*s13^7*s23 + 
                   66276*s13^6*s23^2 + 342995*s13^5*s23^3 + 512730*s13^4*
                    s23^4 + 337543*s13^3*s23^5 + 90534*s13^2*s23^6 + 
                   4177*s13*s23^7 - 152*s23^8) + s12^6*(-9504*s13^8 + 
                   84438*s13^7*s23 + 416948*s13^6*s23^2 + 667735*s13^5*
                    s23^3 + 494482*s13^4*s23^4 + 179386*s13^3*s23^5 + 
                   36382*s13^2*s23^6 + 7369*s13*s23^7 + 620*s23^8) + 
                 s12^5*s13*(-15444*s13^8 + 6831*s13^7*s23 + 281751*s13^6*
                    s23^2 + 698146*s13^5*s23^3 + 717433*s13^4*s23^4 + 
                   343780*s13^3*s23^5 + 70052*s13^2*s23^6 + 5983*s13*s23^7 + 
                   948*s23^8)) - p3q^6*s12^3*(20*s13^6*s23^4*(s13 + s23)^3*
                  (18*s13 + 31*s23) + s12*s13^5*s23^3*(s13 + s23)^2*
                  (387*s13^3 + 1776*s13^2*s23 + 2677*s13*s23^2 + 948*s23^3) + 
                 4*s12^10*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 + 
                   1005*s13*s23^3 + 655*s23^4) + 4*s12^9*(135*s13^5 - 
                   279*s13^4*s23 - 404*s13^3*s23^2 + 4130*s13^2*s23^3 + 
                   6655*s13*s23^4 + 2620*s23^5) - s12^2*s13^4*s23^2*
                  (198*s13^6 + 1497*s13^5*s23 + 3130*s13^4*s23^2 + 
                   1630*s13^3*s23^3 - 820*s13^2*s23^4 - 467*s13*s23^5 + 
                   152*s23^6) + s12^8*(1728*s13^6 - 6111*s13^5*s23 - 
                   23184*s13^4*s23^2 + 3433*s13^3*s23^3 + 63878*s13^2*s23^4 + 
                   59400*s13*s23^5 + 15720*s23^6) - s12^4*s13^2*s23*
                  (711*s13^7 + 18288*s13^6*s23 + 69788*s13^5*s23^2 + 
                   106568*s13^4*s23^3 + 80776*s13^3*s23^4 + 33490*s13^2*
                    s23^5 + 7659*s13*s23^6 + 568*s23^7) - s12^3*s13^3*s23*
                  (225*s13^7 + 3814*s13^6*s23 + 20360*s13^5*s23^2 + 
                   40970*s13^4*s23^3 + 39154*s13^3*s23^4 + 21394*s13^2*
                    s23^5 + 8367*s13*s23^6 + 2088*s23^7) + s12^7*
                  (3024*s13^7 - 9513*s13^6*s23 - 56894*s13^5*s23^2 - 
                   68735*s13^4*s23^3 + 23740*s13^3*s23^4 + 95798*s13^2*
                    s23^5 + 58680*s13*s23^6 + 10480*s23^7) + 2*s12^6*
                  (1242*s13^8 - 3249*s13^7*s23 - 33645*s13^6*s23^2 - 
                   67152*s13^5*s23^3 - 44572*s13^4*s23^4 + 13053*s13^3*
                    s23^5 + 30717*s13^2*s23^6 + 12770*s13*s23^7 + 
                   1310*s23^8) + 2*s12^5*s13*(378*s13^8 - 1125*s13^7*s23 - 
                   22914*s13^6*s23^2 - 63298*s13^5*s23^3 - 71962*s13^4*
                    s23^4 - 33822*s13^3*s23^5 + 1030*s13^2*s23^6 + 
                   6617*s13*s23^7 + 1830*s23^8)) - p2q^5*p3q*s13^2*
                (180*s12^11*s23^2*(4*s13 + 3*s23)^2 + 20*s13^6*s23^3*
                  (s13 + s23)^4*(27*s13^2 - 235*s13*s23 + 104*s23^2) + 
                 4*s12*s13^5*s23^2*(s13 + s23)^3*(252*s13^4 - 1861*s13^3*
                    s23 - 2180*s13^2*s23^2 + 1873*s13*s23^3 + 690*s23^4) + 
                 s12^10*(15120*s13^5 + 35145*s13^4*s23 + 35252*s13^3*s23^2 + 
                   29565*s13^2*s23^3 + 20318*s13*s23^4 + 5820*s23^5) + 
                 s12^2*s13^4*s23*(s13 + s23)^2*(36*s13^6 + 2893*s13^5*s23 - 
                   9179*s13^4*s23^2 + 7846*s13^3*s23^3 + 36733*s13^2*s23^4 + 
                   18619*s13*s23^5 - 712*s23^6) + s12^9*(36936*s13^6 + 
                   128349*s13^5*s23 + 170314*s13^4*s23^2 + 127923*s13^3*
                    s23^3 + 77304*s13^2*s23^4 + 37402*s13*s23^5 + 
                   8360*s23^6) + s12^8*(3888*s13^7 + 109179*s13^6*s23 + 
                   269513*s13^5*s23^2 + 259164*s13^4*s23^3 + 145993*s13^3*
                    s23^4 + 81271*s13^2*s23^5 + 35480*s13*s23^6 + 
                   6000*s23^7) + s12^3*s13^3*s23*(13365*s13^8 + 3124*s13^7*
                    s23 - 95447*s13^6*s23^2 - 132707*s13^5*s23^3 + 
                   12339*s13^4*s23^4 + 111602*s13^3*s23^5 + 55951*s13^2*
                    s23^6 + 2677*s13*s23^7 - 1512*s23^8) + s12^7*
                  (-47520*s13^8 - 115749*s13^7*s23 - 24424*s13^6*s23^2 + 
                   120425*s13^5*s23^3 + 94249*s13^4*s23^4 + 32242*s13^3*
                    s23^5 + 31851*s13^2*s23^6 + 18618*s13*s23^7 + 
                   2100*s23^8) - s12^6*(23328*s13^9 + 232749*s13^8*s23 + 
                   520033*s13^7*s23^2 + 463658*s13^6*s23^3 + 204139*s13^5*
                    s23^4 + 87477*s13^4*s23^5 + 41400*s13^3*s23^6 + 
                   922*s13^2*s23^7 - 5094*s13*s23^8 - 260*s23^9) + 
                 s12^4*s13^2*(11232*s13^9 + 15237*s13^8*s23 - 191313*s13^7*
                    s23^2 - 562070*s13^6*s23^3 - 555133*s13^5*s23^4 - 
                   181268*s13^4*s23^5 + 14645*s13^3*s23^6 - 437*s13^2*s23^7 - 
                   7957*s13*s23^8 + 172*s23^9) + s12^5*s13*(17496*s13^9 - 
                   99117*s13^8*s23 - 556518*s13^7*s23^2 - 888729*s13^6*
                    s23^3 - 609078*s13^5*s23^4 - 195823*s13^4*s23^5 - 
                   59637*s13^3*s23^6 - 26429*s13^2*s23^7 - 1949*s13*s23^8 + 
                   552*s23^9)) + p2q*p3q^5*s12^2*(180*s12^12*s23^2*
                  (4*s13 + 3*s23) + 20*s13^6*s23^4*(s13 + s23)^3*(63*s13^2 + 
                   48*s13*s23 + 13*s23^2) + 2*s12*s13^5*s23^3*(s13 + s23)^2*
                  (1341*s13^4 + 3172*s13^3*s23 + 2420*s13^2*s23^2 + 
                   1065*s13*s23^3 + 276*s23^4) - 4*s12^11*(54*s13^4 + 
                   198*s13^3*s23 - 496*s13^2*s23^2 + 390*s13*s23^3 + 
                   635*s23^4) - s12^10*(5184*s13^5 + 10071*s13^4*s23 - 
                   2162*s13^3*s23^2 + 1671*s13^2*s23^3 + 23080*s13*s23^4 + 
                   13480*s23^5) - s12^9*(14256*s13^6 + 24759*s13^5*s23 - 
                   8728*s13^4*s23^2 - 41877*s13^3*s23^3 + 6634*s13^2*s23^4 + 
                   43160*s13*s23^5 + 17720*s23^6) + s12^8*(-5616*s13^7 + 
                   1611*s13^6*s23 + 72397*s13^5*s23^2 + 172672*s13^4*s23^3 + 
                   154281*s13^3*s23^4 + 36999*s13^2*s23^5 - 14640*s13*s23^6 - 
                   5780*s23^7) + s12^2*s13^4*s23^2*(675*s13^7 + 3469*s13^6*
                    s23 + 397*s13^5*s23^2 - 14800*s13^4*s23^3 - 25755*s13^3*
                    s23^4 - 18325*s13^2*s23^5 - 4801*s13*s23^6 + 172*s23^7) + 
                 s12^4*s13^2*s23*(7389*s13^8 + 7187*s13^7*s23 - 46570*s13^6*
                    s23^2 - 117457*s13^5*s23^3 - 136494*s13^4*s23^4 - 
                   98325*s13^3*s23^5 - 37267*s13^2*s23^6 - 4539*s13*s23^7 - 
                   712*s23^8) - s12^3*s13^3*s23*(963*s13^8 + 4366*s13^7*s23 + 
                   31113*s13^6*s23^2 + 93729*s13^5*s23^3 + 140107*s13^4*
                    s23^4 + 121900*s13^3*s23^5 + 62125*s13^2*s23^6 + 
                   16145*s13*s23^7 + 1512*s23^8) + s12^7*(20088*s13^8 + 
                   74835*s13^7*s23 + 198730*s13^6*s23^2 + 350099*s13^5*
                    s23^3 + 374415*s13^4*s23^4 + 244922*s13^3*s23^5 + 
                   97563*s13^2*s23^6 + 22760*s13*s23^7 + 3620*s23^8) + 
                 s12^6*(24624*s13^9 + 100719*s13^8*s23 + 221403*s13^7*s23^2 + 
                   365424*s13^6*s23^3 + 416503*s13^5*s23^4 + 315459*s13^4*
                    s23^5 + 179752*s13^3*s23^6 + 77140*s13^2*s23^7 + 
                   17800*s13*s23^8 + 2080*s23^9) + s12^5*s13*(8208*s13^9 + 
                   51327*s13^8*s23 + 99468*s13^7*s23^2 + 127991*s13^6*s23^3 + 
                   147388*s13^5*s23^4 + 117687*s13^4*s23^5 + 73799*s13^3*
                    s23^6 + 47161*s13^2*s23^7 + 18843*s13*s23^8 + 
                   2760*s23^9)) - p2q^3*p3q^3*(-20*s13^8*(27*s13 - 77*s23)*
                  s23^4*(s13 + s23)^4 + 180*s12^13*s23^2*(16*s13^2 + 
                   16*s13*s23 + 3*s23^2) - 4*s12*s13^7*s23^3*(s13 + s23)^3*
                  (747*s13^3 - 1314*s13^2*s23 - 1231*s13*s23^2 + 40*s23^3) + 
                 s12^12*(4752*s13^5 + 7371*s13^4*s23 + 9890*s13^3*s23^2 + 
                   9671*s13^2*s23^3 + 4400*s13*s23^4 + 620*s23^5) - 
                 s12^2*s13^6*s23^2*(s13 + s23)^2*(3087*s13^5 + 729*s13^4*
                    s23 - 9650*s13^3*s23^2 + 2025*s13^2*s23^3 + 7465*s13*
                    s23^4 + 3228*s23^5) - s12^11*(13824*s13^6 + 40689*s13^5*
                    s23 + 34510*s13^4*s23^2 + 677*s13^3*s23^3 + 1212*s13^2*
                    s23^4 + 9520*s13*s23^5 + 2920*s23^6) - s12^10*
                  (61776*s13^7 + 193338*s13^6*s23 + 257569*s13^5*s23^2 + 
                   163437*s13^4*s23^3 + 41735*s13^3*s23^4 + 21445*s13^2*
                    s23^5 + 26000*s13*s23^6 + 7080*s23^7) + s12^4*s13^5*s23*
                  (-21915*s13^7 - 18804*s13^6*s23 + 123157*s13^5*s23^2 + 
                   258094*s13^4*s23^3 + 208410*s13^3*s23^4 + 108928*s13^2*
                    s23^5 + 52478*s13*s23^6 + 13432*s23^7) + s12^3*s13^5*s23*
                  (441*s13^8 - 7874*s13^7*s23 - 3637*s13^6*s23^2 + 
                   19049*s13^5*s23^3 - 1799*s13^4*s23^4 - 42066*s13^3*s23^5 - 
                   34661*s13^2*s23^6 - 9061*s13*s23^7 - 296*s23^8) - 
                 s12^9*(19440*s13^8 + 138330*s13^7*s23 + 294512*s13^6*s23^2 + 
                   272620*s13^5*s23^3 + 93873*s13^4*s23^4 - 6244*s13^3*
                    s23^5 + 9501*s13^2*s23^6 + 20080*s13*s23^7 + 
                   5620*s23^8) + 2*s12^8*(42120*s13^9 + 126108*s13^8*s23 + 
                   160173*s13^7*s23^2 + 147948*s13^6*s23^3 + 145101*s13^5*
                    s23^4 + 122017*s13^4*s23^5 + 55898*s13^3*s23^6 + 
                   6319*s13^2*s23^7 - 2480*s13*s23^8 - 770*s23^9) + 
                 s12^7*s13*(58752*s13^9 + 395136*s13^8*s23 + 874136*s13^7*
                    s23^2 + 1083502*s13^6*s23^3 + 1017303*s13^5*s23^4 + 
                   755455*s13^4*s23^5 + 375522*s13^3*s23^6 + 105045*s13^2*
                    s23^7 + 11925*s13*s23^8 + 160*s23^9) + s12^5*s13^3*
                  (-18576*s13^9 - 43758*s13^8*s23 + 168040*s13^7*s23^2 + 
                   595700*s13^6*s23^3 + 763069*s13^5*s23^4 + 615116*s13^4*
                    s23^5 + 392669*s13^3*s23^6 + 170316*s13^2*s23^7 + 
                   33328*s13*s23^8 + 296*s23^9) + s12^6*s13^2*(-20304*s13^9 + 
                   128466*s13^8*s23 + 657384*s13^7*s23^2 + 1130816*s13^6*
                    s23^3 + 1172682*s13^5*s23^4 + 946527*s13^4*s23^5 + 
                   562165*s13^3*s23^6 + 191347*s13^2*s23^7 + 30957*s13*
                    s23^8 + 3228*s23^9)) - p2q^4*p3q^2*s13*(-540*s12^12*s23^2*
                  (8*s13^2 + 10*s13*s23 + 3*s23^2) + 20*s13^7*s23^3*
                  (s13 + s23)^4*(27*s13^2 - 131*s13*s23 + 181*s23^2) + 
                 8*s12*s13^6*s23^2*(s13 + s23)^3*(126*s13^4 - 589*s13^3*s23 + 
                   877*s13^2*s23^2 + 2092*s13*s23^3 + 395*s23^4) - 
                 3*s12^11*(4968*s13^5 + 9927*s13^4*s23 + 10279*s13^3*s23^2 + 
                   9593*s13^2*s23^3 + 5893*s13*s23^4 + 1280*s23^5) + 
                 s12^2*s13^5*s23*(s13 + s23)^2*(36*s13^6 - 574*s13^5*s23 + 
                   1787*s13^4*s23^2 + 40940*s13^3*s23^3 + 46819*s13^2*s23^4 + 
                   9468*s13*s23^5 - 4748*s23^6) + s12^3*s13^4*s23*(s13 + s23)^
                   2*(6498*s13^6 - 27331*s13^5*s23 - 242*s13^4*s23^2 + 
                   64373*s13^3*s23^3 + 32436*s13^2*s23^4 - 8614*s13*s23^5 - 
                   1960*s23^6) - s12^10*(17064*s13^6 + 42237*s13^5*s23 + 
                   46688*s13^4*s23^2 + 50640*s13^3*s23^3 + 42852*s13^2*
                    s23^4 + 15747*s13*s23^5 + 1240*s23^6) + s12^9*
                  (50220*s13^7 + 169668*s13^6*s23 + 271316*s13^5*s23^2 + 
                   242778*s13^4*s23^3 + 98021*s13^3*s23^4 + 5128*s13^2*
                    s23^5 + 1437*s13*s23^6 + 3120*s23^7) + s12^8*
                  (69660*s13^8 + 422928*s13^7*s23 + 936640*s13^6*s23^2 + 
                   1093404*s13^5*s23^3 + 758378*s13^4*s23^4 + 301799*s13^3*
                    s23^5 + 54384*s13^2*s23^6 + 5851*s13*s23^7 + 
                   2700*s23^8) + s12^6*s13*(-73224*s13^9 - 137061*s13^8*s23 + 
                   425842*s13^7*s23^2 + 1479680*s13^6*s23^3 + 1820026*s13^5*
                    s23^4 + 1244569*s13^4*s23^5 + 536712*s13^3*s23^6 + 
                   130448*s13^2*s23^7 + 10192*s13*s23^8 - 548*s23^9) + 
                 s12^5*s13^2*(-16524*s13^9 - 158562*s13^8*s23 - 157812*s13^7*
                    s23^2 + 469815*s13^6*s23^3 + 1139565*s13^5*s23^4 + 
                   1038804*s13^4*s23^5 + 523849*s13^3*s23^6 + 170273*s13^2*
                    s23^7 + 31712*s13*s23^8 + 400*s23^9) + s12^7*
                  (-33480*s13^9 + 229761*s13^8*s23 + 1090300*s13^7*s23^2 + 
                   1793968*s13^6*s23^3 + 1607551*s13^5*s23^4 + 886096*s13^4*
                    s23^5 + 286931*s13^3*s23^6 + 40655*s13^2*s23^7 + 
                   398*s13*s23^8 + 560*s23^9) + s12^4*s13^3*(5940*s13^9 - 
                   26082*s13^8*s23 - 151332*s13^7*s23^2 - 100291*s13^6*
                    s23^3 + 269548*s13^5*s23^4 + 463369*s13^4*s23^5 + 
                   283282*s13^3*s23^6 + 85562*s13^2*s23^7 + 18476*s13*s23^8 + 
                   3836*s23^9)) + p2q^2*p3q^4*s12*(180*s12^13*s23^2*
                  (4*s13 + 3*s23) - 20*s13^7*s23^4*(s13 + s23)^3*(72*s13^2 - 
                   33*s13*s23 - 28*s23^2) - 4*s12^12*(27*s13^4 + 144*s13^3*
                    s23 + 22*s13^2*s23^2 + 105*s13*s23^3 + 115*s23^4) - 
                 s12*s13^6*s23^3*(s13 + s23)^2*(4743*s13^4 + 5136*s13^3*s23 - 
                   1717*s13^2*s23^2 - 102*s13*s23^3 + 548*s23^4) - 
                 2*s12^11*(4698*s13^5 + 9279*s13^4*s23 + 6832*s13^3*s23^2 + 
                   111*s13^2*s23^3 + 1240*s13*s23^4 + 1810*s23^5) + 
                 s12^10*(-13608*s13^6 - 19962*s13^5*s23 - 13663*s13^4*s23^2 + 
                   12888*s13^3*s23^3 + 39157*s13^2*s23^4 + 21920*s13*s23^5 + 
                   920*s23^6) + s12^2*s13^5*s23^2*(-2952*s13^7 - 14313*s13^6*
                    s23 - 15174*s13^5*s23^2 + 3560*s13^4*s23^3 + 9302*s13^3*
                    s23^4 + 1321*s13^2*s23^5 - 208*s13*s23^6 + 400*s23^7) + 
                 s12^9*(27000*s13^7 + 108054*s13^6*s23 + 190412*s13^5*s23^2 + 
                   185909*s13^4*s23^3 + 156046*s13^3*s23^4 + 132675*s13^2*
                    s23^5 + 68800*s13*s23^6 + 11780*s23^7) - s12^4*s13^3*s23*
                  (23481*s13^8 + 55649*s13^7*s23 - 32088*s13^6*s23^2 - 
                   171282*s13^5*s23^3 - 133994*s13^4*s23^4 + 315*s13^3*
                    s23^5 + 41255*s13^2*s23^6 + 16912*s13*s23^7 + 
                   1960*s23^8) + s12^3*s13^4*s23*(1215*s13^8 - 6816*s13^7*
                    s23 - 517*s13^6*s23^2 + 56804*s13^5*s23^3 + 90500*s13^4*
                    s23^4 + 51498*s13^3*s23^5 + 15592*s13^2*s23^6 + 
                   9300*s13*s23^7 + 3836*s23^8) + s12^8*(50220*s13^8 + 
                   234675*s13^7*s23 + 513281*s13^6*s23^2 + 592933*s13^5*
                    s23^3 + 392362*s13^4*s23^4 + 229910*s13^3*s23^5 + 
                   161575*s13^2*s23^6 + 71500*s13*s23^7 + 11860*s23^8) + 
                 s12^6*s13*(-47736*s13^9 - 114768*s13^8*s23 + 26199*s13^7*
                    s23^2 + 323416*s13^6*s23^3 + 356025*s13^5*s23^4 + 
                   73828*s13^4*s23^5 - 97366*s13^3*s23^6 - 46266*s13^2*
                    s23^7 + 4648*s13*s23^8 + 3160*s23^9) + s12^7*
                  (-8748*s13^9 + 95229*s13^8*s23 + 421560*s13^7*s23^2 + 
                   697488*s13^6*s23^3 + 553910*s13^5*s23^4 + 207258*s13^4*
                    s23^5 + 84720*s13^3*s23^6 + 77587*s13^2*s23^7 + 
                   29120*s13*s23^8 + 3620*s23^9) - s12^5*s13^2*(20088*s13^9 + 
                   110052*s13^8*s23 + 125084*s13^7*s23^2 - 77857*s13^6*
                    s23^3 - 198574*s13^5*s23^4 - 30485*s13^4*s23^5 + 
                   140154*s13^3*s23^6 + 112980*s13^2*s23^7 + 33106*s13*
                    s23^8 + 4748*s23^9))) + p1q^5*s23^2*(-(p3q^2*(s12 + s23)*
                 (20*s13^5*s23^4*(s13 + s23)^4*(4*s13 + 23*s23) + 360*s12^10*
                   s23^2*(12*s13^2 + 29*s13*s23 + 15*s23^2) - 4*s12*s13^4*
                   s23^3*(s13 + s23)^3*(170*s13^3 - 272*s13^2*s23 - 
                    687*s13*s23^2 - 35*s23^3) - 2*s12^2*s13^3*s23^2*
                   (s13 + s23)^2*(863*s13^5 + 3563*s13^4*s23 + 189*s13^3*
                     s23^2 - 4797*s13^2*s23^3 - 1796*s13*s23^4 + 300*s23^5) + 
                  s12^9*(-1053*s13^5 - 2700*s13^4*s23 + 17427*s13^3*s23^2 + 
                    58114*s13^2*s23^3 + 54000*s13*s23^4 + 15880*s23^5) + 
                  s12^8*(5076*s13^6 + 16641*s13^5*s23 + 40048*s13^4*s23^2 + 
                    101337*s13^3*s23^3 + 137914*s13^2*s23^4 + 79500*s13*
                     s23^5 + 14780*s23^6) + s12^7*(21060*s13^7 + 75591*s13^6*
                     s23 + 97413*s13^5*s23^2 + 90847*s13^4*s23^3 + 
                    116003*s13^3*s23^4 + 97398*s13^2*s23^5 + 33320*s13*
                     s23^6 + 3060*s23^7) + s12^6*(23490*s13^8 + 85455*s13^7*
                     s23 + 92058*s13^6*s23^2 + 9054*s13^5*s23^3 - 26298*s13^4*
                     s23^4 - 4281*s13^3*s23^5 - 4982*s13^2*s23^6 - 8200*s13*
                     s23^7 - 1700*s23^8) + s12^3*s13^2*s23*(-882*s13^8 - 
                    19517*s13^7*s23 - 75903*s13^6*s23^2 - 110915*s13^5*
                     s23^3 - 58383*s13^4*s23^4 + 6432*s13^3*s23^5 + 
                    13380*s13^2*s23^6 + 2812*s13*s23^7 + 600*s23^8) + 
                  s12^5*(9369*s13^9 + 27207*s13^8*s23 - 21899*s13^7*s23^2 - 
                    156890*s13^6*s23^3 - 205660*s13^5*s23^4 - 122127*s13^4*
                     s23^5 - 52352*s13^3*s23^6 - 24012*s13^2*s23^7 - 
                    5720*s13*s23^8 - 460*s23^9) + s12^4*s13*(810*s13^9 - 
                    2880*s13^8*s23 - 58684*s13^7*s23^2 - 187637*s13^6*s23^3 - 
                    244552*s13^5*s23^4 - 144091*s13^4*s23^5 - 39656*s13^3*
                     s23^6 - 12326*s13^2*s23^7 - 5152*s13*s23^8 - 
                    140*s23^9))) + p2q^2*(s13 + s23)*(20*s13^5*s23^4*
                  (s13 + s23)^3*(270*s13^2 - 16*s13*s23 - 23*s23^2) + 
                 4*s12*s13^4*s23^3*(s13 + s23)^2*(3600*s13^4 + 7100*s13^3*
                    s23 + 808*s13^2*s23^2 - 1312*s13*s23^3 - 35*s23^4) - 
                 4*s12^10*(27*s13^4 + 54*s13^3*s23 + 202*s13^2*s23^2 + 
                   105*s13*s23^3 - 20*s23^4) - 2*s12^9*(27*s13^5 + 
                   2502*s13^4*s23 + 4464*s13^3*s23^2 + 2669*s13^2*s23^3 + 
                   240*s13*s23^4 - 390*s23^5) + s12^8*(6669*s13^6 - 
                   1377*s13^5*s23 - 29397*s13^4*s23^2 - 35031*s13^3*s23^3 - 
                   11580*s13^2*s23^4 + 4020*s13*s23^5 + 2320*s23^6) + 
                 2*s12^2*s13^3*s23^2*(4095*s13^7 + 29474*s13^6*s23 + 
                   61566*s13^5*s23^2 + 43174*s13^4*s23^3 - 2995*s13^3*s23^4 - 
                   12148*s13^2*s23^5 - 1866*s13*s23^6 + 300*s23^7) + 
                 2*s12^7*(9585*s13^7 + 27666*s13^6*s23 + 8734*s13^5*s23^2 - 
                   32923*s13^4*s23^3 - 28202*s13^3*s23^4 - 1316*s13^2*s23^5 + 
                   5440*s13*s23^6 + 1540*s23^7) + s12^3*s13^2*s23*
                  (-1107*s13^8 + 25032*s13^7*s23 + 115528*s13^6*s23^2 + 
                   158122*s13^5*s23^3 + 50637*s13^4*s23^4 - 32814*s13^3*
                    s23^5 - 10770*s13^2*s23^6 + 4148*s13*s23^7 - 600*s23^8) + 
                 s12^6*(17280*s13^8 + 112761*s13^7*s23 + 183604*s13^6*s23^2 + 
                   59760*s13^5*s23^3 - 71690*s13^4*s23^4 - 34631*s13^3*
                    s23^5 + 17176*s13^2*s23^6 + 10020*s13*s23^7 + 
                   1920*s23^8) + s12^4*s13*(-1377*s13^9 + 10800*s13^8*s23 + 
                   109291*s13^7*s23^2 + 244543*s13^6*s23^3 + 182782*s13^5*
                    s23^4 + 9819*s13^4*s23^5 - 17526*s13^3*s23^6 + 
                   12260*s13^2*s23^7 + 3812*s13*s23^8 + 140*s23^9) + 
                 s12^5*(3348*s13^9 + 72747*s13^8*s23 + 239900*s13^7*s23^2 + 
                   267112*s13^6*s23^3 + 64326*s13^5*s23^4 - 40309*s13^4*
                    s23^5 + 4166*s13^3*s23^6 + 17170*s13^2*s23^7 + 
                   3360*s13*s23^8 + 460*s23^9)) + p2q*p3q*(20*s13^5*s23^4*
                  (s13 + s23)^4*(108*s13^2 + 7*s13*s23 - 19*s23^2) - 
                 180*s12^11*s23^2*(12*s13^2 + 25*s13*s23 + 12*s23^2) + 
                 4*s12*s13^4*s23^3*(s13 + s23)^3*(1548*s13^4 + 3740*s13^3*
                    s23 + 1085*s13^2*s23^2 - 962*s13*s23^3 + 155*s23^4) + 
                 s12^10*(270*s13^5 - 351*s13^4*s23 - 11908*s13^3*s23^2 - 
                   31487*s13^2*s23^3 - 28780*s13*s23^4 - 8780*s23^5) + 
                 s12^9*(3834*s13^6 + 9387*s13^5*s23 - 10870*s13^4*s23^2 - 
                   72289*s13^3*s23^3 - 106626*s13^2*s23^4 - 63540*s13*s23^5 - 
                   13140*s23^6) + s12^2*s13^3*s23^2*(s13 + s23)^2*
                  (4635*s13^6 + 31879*s13^5*s23 + 62208*s13^4*s23^2 + 
                   26275*s13^3*s23^3 - 14149*s13^2*s23^4 - 2700*s13*s23^5 + 
                   1560*s23^6) + s12^8*(5562*s13^7 + 44829*s13^6*s23 + 
                   93609*s13^5*s23^2 + 16096*s13^4*s23^3 - 142721*s13^3*
                    s23^4 - 154915*s13^2*s23^5 - 59140*s13*s23^6 - 
                   7960*s23^7) + s12^7*(-4320*s13^8 + 51093*s13^7*s23 + 
                   255278*s13^6*s23^2 + 374499*s13^5*s23^3 + 144689*s13^4*
                    s23^4 - 110620*s13^3*s23^5 - 97335*s13^2*s23^6 - 
                   17100*s13*s23^7 - 440*s23^8) + s12^3*s13^2*s23*
                  (117*s13^9 + 9964*s13^8*s23 + 89097*s13^7*s23^2 + 
                   245219*s13^6*s23^3 + 268219*s13^5*s23^4 + 91406*s13^4*
                    s23^5 - 24065*s13^3*s23^6 - 10397*s13^2*s23^7 + 
                   1264*s13*s23^8 - 1560*s23^9) + s12^6*(-12042*s13^9 - 
                   6039*s13^8*s23 + 209643*s13^7*s23^2 + 602658*s13^6*s23^3 + 
                   632777*s13^5*s23^4 + 238709*s13^4*s23^5 - 5228*s13^3*
                    s23^6 - 6918*s13^2*s23^7 + 5340*s13*s23^8 + 1380*s23^9) + 
                 s12^4*s13*(-702*s13^10 - 12807*s13^9*s23 - 9243*s13^8*
                    s23^2 + 150696*s13^7*s23^3 + 401931*s13^6*s23^4 + 
                   382028*s13^5*s23^5 + 139123*s13^4*s23^6 + 19057*s13^3*
                    s23^7 + 10241*s13^2*s23^8 + 1916*s13*s23^9 - 
                   620*s23^10) + s12^5*(-6426*s13^10 - 34965*s13^9*s23 + 
                   34524*s13^8*s23^2 + 382225*s13^7*s23^3 + 677422*s13^6*
                    s23^4 + 489481*s13^5*s23^5 + 150273*s13^4*s23^6 + 
                   33589*s13^3*s23^7 + 16277*s13^2*s23^8 + 1940*s13*s23^9 + 
                   380*s23^10))) + p1q^2*(p2q^5*s13^2*(-20*s13^6*s23^3*
                  (s13 + s23)^4*(27*s13^2 - 4*s13*s23 - 254*s23^2) - 
                 4*s12*s13^5*s23^2*(s13 + s23)^3*(252*s13^4 + 602*s13^3*s23 - 
                   3215*s13^2*s23^2 - 6010*s13*s23^3 - 1430*s23^4) - 
                 4*s12^10*(27*s13^5 + 81*s13^4*s23 + 76*s13^3*s23^2 - 
                   188*s13^2*s23^3 - 365*s13*s23^4 - 155*s23^5) - 
                 4*s12^2*s13^4*s23*(s13 + s23)^2*(9*s13^6 + 436*s13^5*s23 + 
                   1012*s13^4*s23^2 - 8610*s13^3*s23^3 - 13907*s13^2*s23^4 - 
                   4120*s13*s23^5 + 792*s23^6) + s12^9*(-5616*s13^6 - 
                   10368*s13^5*s23 - 3120*s13^4*s23^2 + 5498*s13^3*s23^3 + 
                   7844*s13^2*s23^4 + 5718*s13*s23^5 + 1740*s23^6) + 
                 s12^8*(-21276*s13^7 - 53784*s13^6*s23 - 36797*s13^5*s23^2 + 
                   9622*s13^4*s23^3 + 26712*s13^3*s23^4 + 19434*s13^2*s23^5 + 
                   7953*s13*s23^6 + 1320*s23^7) + s12^3*s13^3*s23*
                  (828*s13^8 - 24104*s13^7*s23 - 72423*s13^6*s23^2 - 
                   2105*s13^5*s23^3 + 170596*s13^4*s23^4 + 182828*s13^3*
                    s23^5 + 54135*s13^2*s23^6 - 5691*s13*s23^7 - 
                   2208*s23^8) - 2*s12^7*(15876*s13^8 + 63666*s13^7*s23 + 
                   71957*s13^6*s23^2 - 2525*s13^5*s23^3 - 50618*s13^4*s23^4 - 
                   30087*s13^3*s23^5 - 8421*s13^2*s23^6 - 2210*s13*s23^7 + 
                   50*s23^8) + s12^6*(-22140*s13^9 - 160416*s13^8*s23 - 
                   284660*s13^7*s23^2 - 58047*s13^6*s23^3 + 270085*s13^5*
                    s23^4 + 246156*s13^4*s23^5 + 66286*s13^3*s23^6 + 
                   2911*s13^2*s23^7 + 733*s13*s23^8 - 300*s23^9) + 
                 s12^5*s13*(-6696*s13^9 - 103176*s13^8*s23 - 297078*s13^7*
                    s23^2 - 192009*s13^6*s23^3 + 293153*s13^5*s23^4 + 
                   481504*s13^4*s23^5 + 226262*s13^3*s23^6 + 29073*s13^2*
                    s23^7 - 241*s13*s23^8 + 8*s23^9) + s12^4*s13^2*
                  (-540*s13^9 - 25488*s13^8*s23 - 145647*s13^7*s23^2 - 
                   203531*s13^6*s23^3 + 83907*s13^5*s23^4 + 387998*s13^4*
                    s23^5 + 287749*s13^3*s23^6 + 65969*s13^2*s23^7 + 
                   827*s13*s23^8 + 1348*s23^9)) + p3q^5*s12^2*
                (-20*s13^6*(13*s13 - 15*s23)*s23^5*(s13 + s23)^3 + 
                 180*s12^12*s23^2*(4*s13 + 3*s23) + s12*s13^5*s23^4*
                  (s13 + s23)^2*(834*s13^3 + 2497*s13^2*s23 + 2055*s13*
                    s23^2 - 8*s23^3) + 4*s12^11*(27*s13^4 - 36*s13^3*s23 + 
                   742*s13^2*s23^2 + 1275*s13*s23^3 + 520*s23^4) + 
                 4*s12^10*(270*s13^5 - 333*s13^4*s23 - 255*s13^3*s23^2 + 
                   1633*s13^2*s23^3 + 450*s13*s23^4 - 540*s23^5) + 
                 4*s12^9*(621*s13^6 - 2007*s13^5*s23 - 5590*s13^4*s23^2 - 
                   3733*s13^3*s23^3 - 7816*s13^2*s23^4 - 11620*s13*s23^5 - 
                   4660*s23^6) + s12^2*s13^4*s23^3*(2586*s13^6 + 18109*s13^5*
                    s23 + 46181*s13^4*s23^2 + 51368*s13^3*s23^3 + 22671*s13^2*
                    s23^4 + 613*s13*s23^5 - 1348*s23^6) + s12^8*(1944*s13^7 - 
                   19080*s13^6*s23 - 47561*s13^5*s23^2 - 26730*s13^4*s23^3 - 
                   48885*s13^3*s23^4 - 135732*s13^2*s23^5 - 115760*s13*
                    s23^6 - 30260*s23^7) + s12^3*s13^3*s23^2*(2248*s13^7 + 
                   27785*s13^6*s23 + 111901*s13^5*s23^2 + 195544*s13^4*
                    s23^3 + 159254*s13^3*s23^4 + 57435*s13^2*s23^5 + 
                   9249*s13*s23^6 + 2208*s23^7) + 2*s12^7*(54*s13^8 - 
                   8172*s13^7*s23 - 15161*s13^6*s23^2 + 23765*s13^5*s23^3 + 
                   48149*s13^4*s23^4 - 31193*s13^3*s23^5 - 94452*s13^2*
                    s23^6 - 55890*s13*s23^7 - 10200*s23^8) + s12^4*s13^2*s23*
                  (648*s13^8 + 18389*s13^7*s23 + 119653*s13^6*s23^2 + 
                   328376*s13^5*s23^3 + 429592*s13^4*s23^4 + 276682*s13^3*
                    s23^5 + 87813*s13^2*s23^6 + 17147*s13*s23^7 + 
                   3168*s23^8) + s12^5*s13*(-108*s13^9 + 3636*s13^8*s23 + 
                   44946*s13^7*s23^2 + 223481*s13^6*s23^3 + 486411*s13^5*
                    s23^4 + 498801*s13^4*s23^5 + 227691*s13^3*s23^6 + 
                   21858*s13^2*s23^7 - 16184*s13*s23^8 - 5720*s23^9) - 
                 s12^6*(432*s13^9 + 1116*s13^8*s23 - 26952*s13^7*s23^2 - 
                   186383*s13^6*s23^3 - 364916*s13^5*s23^4 - 252583*s13^4*
                    s23^5 + 20638*s13^3*s23^6 + 107352*s13^2*s23^7 + 
                   45640*s13*s23^8 + 5080*s23^9)) + p2q^4*p3q*s13*
                (-20*s13^6*s23^3*(s13 + s23)^4*(27*s13^3 + 100*s13^2*s23 - 
                   400*s13*s23^2 + 150*s23^3) + 4*s12^11*(81*s13^5 + 
                   216*s13^4*s23 - 6*s13^3*s23^2 - s13^2*s23^3 + 375*s13*
                    s23^4 + 230*s23^5) - 4*s12*s13^5*s23^2*(s13 + s23)^3*
                  (252*s13^5 + 1285*s13^4*s23 - 2599*s13^3*s23^2 - 
                   4680*s13^2*s23^3 + 1952*s13*s23^4 + 740*s23^5) + 
                 s12^10*(11448*s13^6 + 41769*s13^5*s23 + 61762*s13^4*s23^2 + 
                   41507*s13^3*s23^3 + 13364*s13^2*s23^4 + 4838*s13*s23^5 + 
                   2240*s23^6) - s12^2*s13^4*s23*(s13 + s23)^2*(36*s13^7 - 
                   427*s13^6*s23 + 9152*s13^5*s23^2 - 21962*s13^4*s23^3 - 
                   16293*s13^3*s23^4 + 31071*s13^2*s23^5 + 17471*s13*s23^6 - 
                   2456*s23^7) + s12^9*(31212*s13^7 + 145737*s13^6*s23 + 
                   315417*s13^5*s23^2 + 361635*s13^4*s23^3 + 206070*s13^3*
                    s23^4 + 46118*s13^2*s23^5 + 2791*s13*s23^6 + 
                   1760*s23^7) + s12^8*(19656*s13^8 + 167625*s13^7*s23 + 
                   542936*s13^6*s23^2 + 937903*s13^5*s23^3 + 887651*s13^4*
                    s23^4 + 415517*s13^3*s23^5 + 65587*s13^2*s23^6 - 
                   2655*s13*s23^7 + 1040*s23^8) + s12^3*s13^3*s23*
                  (1215*s13^9 - 50095*s13^8*s23 - 146402*s13^7*s23^2 - 
                   62697*s13^6*s23^3 + 136093*s13^5*s23^4 + 104593*s13^4*
                    s23^5 - 25198*s13^3*s23^6 - 22209*s13^2*s23^7 + 
                   4580*s13*s23^8 + 696*s23^9) + s12^7*(-19116*s13^9 - 
                   14067*s13^8*s23 + 304261*s13^7*s23^2 + 1081549*s13^6*
                    s23^3 + 1612636*s13^5*s23^4 + 1213218*s13^4*s23^5 + 
                   439714*s13^3*s23^6 + 54368*s13^2*s23^7 - 1287*s13*s23^8 + 
                   1160*s23^9) + s12^4*s13^2*(-432*s13^10 - 59589*s13^9*s23 - 
                   313284*s13^8*s23^2 - 407280*s13^7*s23^3 + 164432*s13^6*
                    s23^4 + 740844*s13^5*s23^5 + 600640*s13^4*s23^6 + 
                   223345*s13^3*s23^7 + 57114*s13^2*s23^8 + 10614*s13*s23^9 - 
                   1176*s23^10) + s12^5*s13*(-9828*s13^10 - 197829*s13^9*
                    s23 - 539391*s13^8*s23^2 - 222210*s13^7*s23^3 + 
                   919135*s13^6*s23^4 + 1521843*s13^5*s23^5 + 1041122*s13^4*
                    s23^6 + 383386*s13^3*s23^7 + 79560*s13^2*s23^8 + 
                   6192*s13*s23^9 + 544*s23^10) + s12^6*(-28080*s13^10 - 
                   213849*s13^9*s23 - 262609*s13^8*s23^2 + 503148*s13^7*
                    s23^3 + 1609056*s13^6*s23^4 + 1754520*s13^5*s23^5 + 
                   956428*s13^4*s23^6 + 257610*s13^3*s23^7 + 28899*s13^2*
                    s23^8 + 1365*s13*s23^9 + 560*s23^10)) + p2q^3*p3q^2*
                (-20*s13^7*s23^4*(s13 + s23)^4*(77*s13^2 - 250*s13*s23 + 
                   223*s23^2) - 4*s12*s13^6*s23^3*(s13 + s23)^3*(431*s13^4 - 
                   2059*s13^3*s23 - 652*s13^2*s23^2 + 3943*s13*s23^3 + 
                   1265*s23^4) - 4*s12^12*(81*s13^5 + 189*s13^4*s23 - 
                   420*s13^3*s23^2 + 427*s13^2*s23^3 + 1125*s13*s23^4 + 
                   385*s23^5) - 2*s12^11*(2916*s13^6 + 15813*s13^5*s23 + 
                   18168*s13^4*s23^2 + 6143*s13^3*s23^3 + 6342*s13^2*s23^4 + 
                   8180*s13*s23^5 + 2350*s23^6) + s12^2*s13^5*s23^2*
                  (s13 + s23)^2*(2207*s13^6 + 2424*s13^5*s23 + 20240*s13^4*
                    s23^2 - 11031*s13^3*s23^3 - 44145*s13^2*s23^4 - 
                   16807*s13*s23^5 + 4004*s23^6) + s12^10*(2808*s13^7 - 
                   27153*s13^6*s23 - 87997*s13^5*s23^2 - 79783*s13^4*s23^3 - 
                   31575*s13^3*s23^4 - 24548*s13^2*s23^5 - 18100*s13*s23^6 - 
                   3400*s23^7) + s12^9*(52704*s13^8 + 196767*s13^7*s23 + 
                   271497*s13^6*s23^2 + 194577*s13^5*s23^3 + 93576*s13^4*
                    s23^4 + 17702*s13^3*s23^5 - 9851*s13^2*s23^6 + 
                   1520*s13*s23^7 + 2600*s23^8) + s12^3*s13^4*s23*
                  (387*s13^9 - 23369*s13^8*s23 - 19932*s13^7*s23^2 + 
                   109685*s13^6*s23^3 + 177974*s13^5*s23^4 + 29378*s13^4*
                    s23^5 - 74001*s13^3*s23^6 - 23094*s13^2*s23^7 + 
                   10496*s13*s23^8 + 2324*s23^9) + s12^8*(84024*s13^9 + 
                   486207*s13^8*s23 + 1063858*s13^7*s23^2 + 1259814*s13^6*
                    s23^3 + 925391*s13^5*s23^4 + 413116*s13^4*s23^5 + 
                   93515*s13^3*s23^6 + 23271*s13^2*s23^7 + 17060*s13*s23^8 + 
                   4300*s23^9) + s12^4*s13^3*(108*s13^10 - 28287*s13^9*s23 - 
                   56970*s13^8*s23^2 + 224098*s13^7*s23^3 + 760261*s13^6*
                    s23^4 + 825203*s13^5*s23^5 + 353356*s13^4*s23^6 + 
                   16548*s13^3*s23^7 - 24419*s13^2*s23^8 - 6430*s13*s23^9 - 
                   2804*s23^10) + s12^5*s13^2*(-3456*s13^10 - 16875*s13^9*
                    s23 + 280815*s13^8*s23^2 + 1184203*s13^7*s23^3 + 
                   1915684*s13^6*s23^4 + 1564075*s13^5*s23^5 + 635500*s13^4*
                    s23^6 + 86315*s13^3*s23^7 - 17393*s13^2*s23^8 - 
                   7612*s13*s23^9 - 1004*s23^10) + s12^7*(44712*s13^10 + 
                   467955*s13^9*s23 + 1442897*s13^8*s23^2 + 2259586*s13^7*
                    s23^3 + 2131083*s13^6*s23^4 + 1238373*s13^5*s23^5 + 
                   404549*s13^4*s23^6 + 77618*s13^3*s23^7 + 30071*s13^2*
                    s23^8 + 11960*s13*s23^9 + 1460*s23^10) + s12^6*s13*
                  (1512*s13^10 + 186597*s13^9*s23 + 1012726*s13^8*s23^2 + 
                   2195165*s13^7*s23^3 + 2568964*s13^6*s23^4 + 1770452*s13^5*
                    s23^5 + 682344*s13^4*s23^6 + 117501*s13^3*s23^7 + 
                   14606*s13^2*s23^8 + 9517*s13*s23^9 + 2660*s23^10)) + p2q*
                p3q^4*s12*(180*s12^13*s23^2*(4*s13 + 3*s23) - 20*s13^6*s23^5*
                  (s13 + s23)^3*(28*s13^2 - 17*s13*s23 + 28*s23^2) + 
                 8*s12^12*(27*s13^4 + 9*s13^3*s23 + 112*s13^2*s23^2 + 
                   780*s13*s23^3 + 520*s23^4) - s12*s13^5*s23^4*(s13 + s23)^2*
                  (634*s13^4 + 849*s13^3*s23 - 440*s13^2*s23^2 + 1189*s13*
                    s23^3 + 544*s23^4) + s12^11*(1188*s13^5 - 423*s13^4*s23 - 
                   10134*s13^3*s23^2 + 3857*s13^2*s23^3 + 12300*s13*s23^4 + 
                   3240*s23^5) - s12^10*(5400*s13^6 + 33939*s13^5*s23 + 
                   63917*s13^4*s23^2 + 32469*s13^3*s23^3 + 791*s13^2*s23^4 + 
                   20100*s13*s23^5 + 14840*s23^6) - s12^2*s13^4*s23^3*
                  (1334*s13^7 + 10729*s13^6*s23 + 26833*s13^5*s23^2 + 
                   39457*s13^4*s23^3 + 40405*s13^3*s23^4 + 23274*s13^2*
                    s23^5 + 3712*s13*s23^6 - 1176*s23^7) - s12^9*
                  (25596*s13^7 + 110799*s13^6*s23 + 163456*s13^5*s23^2 + 
                   82289*s13^4*s23^3 - 14378*s13^3*s23^4 + 31646*s13^2*
                    s23^5 + 72280*s13*s23^6 + 27460*s23^7) - s12^3*s13^3*
                  s23^2*(2613*s13^8 + 30068*s13^7*s23 + 96478*s13^6*s23^2 + 
                   162118*s13^5*s23^3 + 189703*s13^4*s23^4 + 153852*s13^3*
                    s23^5 + 69370*s13^2*s23^6 + 12502*s13*s23^7 + 
                   696*s23^8) - s12^8*(35424*s13^8 + 127431*s13^7*s23 + 
                   133961*s13^6*s23^2 - 71539*s13^5*s23^3 - 258906*s13^4*
                    s23^4 - 155422*s13^3*s23^5 + 26871*s13^2*s23^6 + 
                   48760*s13*s23^7 + 12000*s23^8) - s12^4*s13^2*s23*
                  (981*s13^9 + 30097*s13^8*s23 + 120284*s13^7*s23^2 + 
                   181151*s13^6*s23^3 + 160499*s13^5*s23^4 + 153878*s13^4*
                    s23^5 + 128522*s13^3*s23^6 + 51804*s13^2*s23^7 + 
                   8820*s13*s23^8 + 2456*s23^9) + s12^7*(-19980*s13^9 - 
                   66213*s13^8*s23 + 26295*s13^7*s23^2 + 444360*s13^6*s23^3 + 
                   804507*s13^5*s23^4 + 630953*s13^4*s23^5 + 234084*s13^3*
                    s23^6 + 45986*s13^2*s23^7 + 12780*s13*s23^8 + 
                   4000*s23^9) + s12^5*s13*(324*s13^10 - 12501*s13^9*s23 - 
                   56804*s13^8*s23^2 - 10084*s13^7*s23^3 + 262899*s13^6*
                    s23^4 + 441912*s13^5*s23^5 + 266371*s13^4*s23^6 + 
                   68780*s13^3*s23^7 + 28928*s13^2*s23^8 + 16951*s13*s23^9 + 
                   2960*s23^10) + s12^6*(-3456*s13^10 - 27657*s13^9*s23 + 
                   21087*s13^8*s23^2 + 402624*s13^7*s23^3 + 932409*s13^6*
                    s23^4 + 932586*s13^5*s23^5 + 461478*s13^4*s23^6 + 
                   152355*s13^3*s23^7 + 64370*s13^2*s23^8 + 19100*s13*s23^9 + 
                   3000*s23^10)) + p2q^2*p3q^3*(20*s13^7*(77*s13 - 73*s23)*
                  s23^5*(s13 + s23)^4 + 4*s12*s13^6*s23^4*(s13 + s23)^3*
                  (1316*s13^3 + 285*s13^2*s23 - 926*s13*s23^2 - 665*s23^3) + 
                 4*s12^13*(27*s13^4 + 54*s13^3*s23 - 518*s13^2*s23^2 + 
                   105*s13*s23^3 + 385*s23^4) - s12^12*(216*s13^5 - 
                   153*s13^4*s23 + 7074*s13^3*s23^2 + 10143*s13^2*s23^3 + 
                   2100*s13*s23^4 - 1160*s23^5) + s12^2*s13^5*s23^3*
                  (s13 + s23)^2*(2056*s13^5 + 10088*s13^4*s23 - 185*s13^3*
                    s23^2 - 9334*s13^2*s23^3 - 5793*s13*s23^4 + 1004*s23^5) - 
                 s12^11*(14040*s13^6 + 64233*s13^5*s23 + 86257*s13^4*s23^2 + 
                   52247*s13^3*s23^3 + 24283*s13^2*s23^4 + 17900*s13*s23^5 + 
                   6300*s23^6) - s12^10*(36288*s13^7 + 201789*s13^6*s23 + 
                   356750*s13^5*s23^2 + 274341*s13^4*s23^3 + 94120*s13^3*
                    s23^4 + 26308*s13^2*s23^5 + 18260*s13*s23^6 + 
                   6000*s23^7) - s12^9*(19656*s13^8 + 192897*s13^7*s23 + 
                   503659*s13^6*s23^2 + 520303*s13^5*s23^3 + 206210*s13^4*
                    s23^4 + 7066*s13^3*s23^5 - 30279*s13^2*s23^6 - 
                   30380*s13*s23^7 - 8300*s23^8) + s12^3*s13^4*s23^2*
                  (-2130*s13^8 + 20493*s13^7*s23 + 76310*s13^6*s23^2 + 
                   88023*s13^5*s23^3 + 28413*s13^4*s23^4 - 16508*s13^3*
                    s23^5 - 7841*s13^2*s23^6 + 5548*s13*s23^7 + 2804*s23^8) + 
                 s12^4*s13^3*s23*(-18*s13^9 + 47394*s13^8*s23 + 205221*s13^7*
                    s23^2 + 341661*s13^6*s23^3 + 271402*s13^5*s23^4 + 
                   61438*s13^4*s23^5 - 70355*s13^3*s23^6 - 57881*s13^2*
                    s23^7 - 14682*s13*s23^8 - 2324*s23^9) + s12^8*
                  (23544*s13^9 - 4419*s13^8*s23 - 242904*s13^7*s23^2 - 
                   342710*s13^6*s23^3 - 45101*s13^5*s23^4 + 166155*s13^4*
                    s23^5 + 139583*s13^3*s23^6 + 108476*s13^2*s23^7 + 
                   62020*s13*s23^8 + 12840*s23^9) + s12^5*s13^2*
                  (-324*s13^10 + 35973*s13^9*s23 + 214051*s13^8*s23^2 + 
                   428991*s13^7*s23^3 + 461906*s13^6*s23^4 + 300533*s13^5*
                    s23^5 + 40992*s13^4*s23^6 - 106843*s13^3*s23^7 - 
                   72927*s13^2*s23^8 - 19280*s13*s23^9 - 4004*s23^10) + 
                 s12^7*(28728*s13^10 + 119277*s13^9*s23 + 88467*s13^8*s23^2 - 
                   1234*s13^7*s23^3 + 220185*s13^6*s23^4 + 415074*s13^5*
                    s23^5 + 258340*s13^4*s23^6 + 126883*s13^3*s23^7 + 
                   91940*s13^2*s23^8 + 33820*s13*s23^9 + 4460*s23^10) + 
                 s12^6*s13*(7776*s13^10 + 104409*s13^9*s23 + 267734*s13^8*
                    s23^2 + 296037*s13^7*s23^3 + 316284*s13^6*s23^4 + 
                   361312*s13^5*s23^5 + 189051*s13^4*s23^6 + 14733*s13^3*
                    s23^7 + 12441*s13^2*s23^8 + 19835*s13*s23^9 + 
                   5060*s23^10))) + p1q^4*s23*(p3q^3*(s12 + s23)*
                (460*s13^6*s23^5*(s13 + s23)^4 + 12*s12*s13^5*s23^4*
                  (s13 + s23)^4*(109*s13 + 135*s23) + 360*s12^11*s23^2*
                  (8*s13^2 + 26*s13*s23 + 15*s23^2) + s12^2*s13^4*s23^3*
                  (s13 + s23)^2*(42*s13^4 + 7793*s13^3*s23 + 15028*s13^2*
                    s23^2 + 7257*s13*s23^3 - 400*s23^4) + 3*s12^10*
                  (-9*s13^5 - 174*s13^4*s23 + 3955*s13^3*s23^2 + 16280*s13^2*
                    s23^3 + 16840*s13*s23^4 + 5240*s23^5) + s12^9*
                  (4995*s13^6 + 18603*s13^5*s23 + 29435*s13^4*s23^2 + 
                   71493*s13^3*s23^3 + 112606*s13^2*s23^4 + 69240*s13*s23^5 + 
                   12380*s23^6) + s12^8*(15066*s13^7 + 54351*s13^6*s23 + 
                   38937*s13^5*s23^2 - 3347*s13^4*s23^3 + 36221*s13^3*s23^4 + 
                   48220*s13^2*s23^5 + 7220*s13*s23^6 - 3180*s23^7) + 
                 s12^3*s13^3*s23^2*(-1652*s13^7 - 3625*s13^6*s23 + 
                   22996*s13^5*s23^2 + 83541*s13^4*s23^3 + 97293*s13^3*
                    s23^4 + 42880*s13^2*s23^5 + 2719*s13*s23^6 - 
                   1440*s23^7) + s12^7*(15606*s13^8 + 36846*s13^7*s23 - 
                   57267*s13^6*s23^2 - 223016*s13^5*s23^3 - 214058*s13^4*
                    s23^4 - 109322*s13^3*s23^5 - 70093*s13^2*s23^6 - 
                   39380*s13*s23^7 - 7620*s23^8) + s12^4*s13^2*s23*
                  (-1917*s13^8 - 27412*s13^7*s23 - 83610*s13^6*s23^2 - 
                   69647*s13^5*s23^3 + 46187*s13^4*s23^4 + 93080*s13^3*
                    s23^5 + 39908*s13^2*s23^6 + 7027*s13*s23^7 + 
                   2800*s23^8) + s12^6*(6129*s13^9 - 12312*s13^8*s23 - 
                   175546*s13^7*s23^2 - 430121*s13^6*s23^3 - 442527*s13^5*
                    s23^4 - 234643*s13^4*s23^5 - 112774*s13^3*s23^6 - 
                   65762*s13^2*s23^7 - 19900*s13*s23^8 - 2380*s23^9) + 
                 s12^5*s13*(567*s13^9 - 15849*s13^8*s23 - 124256*s13^7*
                    s23^2 - 315928*s13^6*s23^3 - 340064*s13^5*s23^4 - 
                   146183*s13^4*s23^5 - 22644*s13^3*s23^6 - 17912*s13^2*
                    s23^7 - 11295*s13*s23^8 - 1380*s23^9)) - p2q^3*
                (s13 + s23)*(20*s13^6*s23^4*(s13 + s23)^3*(270*s13^2 - 
                   24*s13*s23 - 119*s23^2) + 20*s12*s13^5*s23^3*(s13 + s23)^2*
                  (648*s13^4 + 1344*s13^3*s23 - 238*s13^2*s23^2 - 788*s13*
                    s23^3 - 69*s23^4) - 4*s12^10*(54*s13^5 + 387*s13^4*s23 + 
                   107*s13^3*s23^2 - 226*s13^2*s23^3 - 190*s13*s23^4 - 
                   115*s23^5) + s12^9*(-837*s13^6 - 6426*s13^5*s23 - 
                   753*s13^4*s23^2 + 8770*s13^3*s23^3 + 7574*s13^2*s23^4 + 
                   5220*s13*s23^5 + 1840*s23^6) + s12^8*(2349*s13^7 + 
                   6381*s13^6*s23 + 10461*s13^5*s23^2 + 27140*s13^4*s23^3 + 
                   38170*s13^3*s23^4 + 28339*s13^2*s23^5 + 12720*s13*s23^6 + 
                   2760*s23^7) + s12^2*s13^4*s23^2*(5724*s13^7 + 46470*s13^6*
                    s23 + 100462*s13^5*s23^2 + 45423*s13^4*s23^3 - 
                   62883*s13^3*s23^4 - 56993*s13^2*s23^5 - 5603*s13*s23^6 + 
                   2800*s23^7) + s12^3*s13^3*s23*(-243*s13^8 + 18948*s13^7*
                    s23 + 104404*s13^6*s23^2 + 157056*s13^5*s23^3 + 
                   31751*s13^4*s23^4 - 64085*s13^3*s23^5 - 14430*s13^2*
                    s23^6 + 9723*s13*s23^7 - 1440*s23^8) + s12^7*
                  (10206*s13^8 + 65421*s13^7*s23 + 102715*s13^6*s23^2 + 
                   80817*s13^5*s23^3 + 74546*s13^4*s23^4 + 75230*s13^3*
                    s23^5 + 47881*s13^2*s23^6 + 14440*s13*s23^7 + 
                   1840*s23^8) + s12^4*s13^2*(-351*s13^9 + 13077*s13^8*s23 + 
                   114248*s13^7*s23^2 + 296135*s13^6*s23^3 + 277672*s13^5*
                    s23^4 + 64994*s13^4*s23^5 + 878*s13^3*s23^6 + 26664*s13^2*
                    s23^7 + 7503*s13*s23^8 - 400*s23^9) + s12^6*
                  (10746*s13^9 + 109242*s13^8*s23 + 268319*s13^7*s23^2 + 
                   258827*s13^6*s23^3 + 126868*s13^5*s23^4 + 90256*s13^4*
                    s23^5 + 82313*s13^3*s23^6 + 36121*s13^2*s23^7 + 
                   7800*s13*s23^8 + 460*s23^9) + s12^5*s13*(3159*s13^9 + 
                   68400*s13^8*s23 + 278710*s13^7*s23^2 + 418637*s13^6*
                    s23^3 + 252732*s13^5*s23^4 + 74623*s13^4*s23^5 + 
                   61028*s13^3*s23^6 + 44998*s13^2*s23^7 + 9509*s13*s23^8 + 
                   1620*s23^9)) + p2q*p3q^2*(540*s12^12*s23^2*(4*s13^2 + 
                   11*s13*s23 + 6*s23^2) - 20*s13^5*s23^5*(s13 + s23)^4*
                  (15*s13^2 - 115*s13*s23 + 23*s23^2) - 4*s12*s13^4*s23^4*
                  (s13 + s23)^3*(227*s13^4 - 1353*s13^3*s23 - 2388*s13^2*
                    s23^2 + 67*s13*s23^3 + 35*s23^4) + s12^11*(189*s13^5 + 
                   945*s13^4*s23 + 8315*s13^3*s23^2 + 30459*s13^2*s23^3 + 
                   37580*s13*s23^4 + 14400*s23^5) + s12^2*s13^3*s23^3*
                  (s13 + s23)^2*(347*s13^6 - 4816*s13^5*s23 + 20255*s13^4*
                    s23^2 + 32166*s13^3*s23^3 + 516*s13^2*s23^4 - 5572*s13*
                    s23^5 + 600*s23^6) + s12^10*(945*s13^6 + 1800*s13^5*s23 - 
                   4289*s13^4*s23^2 + 25550*s13^3*s23^3 + 91514*s13^2*s23^4 + 
                   82260*s13*s23^5 + 22600*s23^6) - s12^9*(4428*s13^7 + 
                   46377*s13^6*s23 + 168031*s13^5*s23^2 + 204657*s13^4*
                    s23^3 + 20125*s13^3*s23^4 - 115550*s13^2*s23^5 - 
                   68680*s13*s23^6 - 11660*s23^7) - 2*s12^8*(7803*s13^8 + 
                   83025*s13^7*s23 + 291491*s13^6*s23^2 + 457388*s13^5*
                    s23^3 + 317901*s13^4*s23^4 + 59021*s13^3*s23^5 - 
                   21311*s13^2*s23^6 - 660*s13*s23^7 + 2380*s23^8) + 
                 s12^3*s13^2*s23^2*(1795*s13^9 - 24627*s13^8*s23 - 
                   90139*s13^7*s23^2 - 43627*s13^6*s23^3 + 125656*s13^5*
                    s23^4 + 146120*s13^4*s23^5 + 30000*s13^3*s23^6 - 
                   11806*s13^2*s23^7 - 1852*s13*s23^8 - 600*s23^9) - 
                 s12^7*(15579*s13^9 + 205713*s13^8*s23 + 844531*s13^7*s23^2 + 
                   1635108*s13^6*s23^3 + 1580314*s13^5*s23^4 + 712464*s13^4*
                    s23^5 + 137016*s13^3*s23^6 + 42375*s13^2*s23^7 + 
                   24340*s13*s23^8 + 6200*s23^9) + s12^4*s13*s23*
                  (306*s13^10 - 33881*s13^9*s23 - 213052*s13^8*s23^2 - 
                   402909*s13^7*s23^3 - 205793*s13^6*s23^4 + 167076*s13^5*
                    s23^5 + 190379*s13^4*s23^6 + 42438*s13^3*s23^7 + 
                   6716*s13^2*s23^8 + 6932*s13*s23^9 + 140*s23^10) - 
                 s12^6*(5643*s13^10 + 107640*s13^9*s23 + 599004*s13^8*s23^2 + 
                   1462241*s13^7*s23^3 + 1759641*s13^6*s23^4 + 1022027*s13^5*
                    s23^5 + 258558*s13^4*s23^6 + 56138*s13^3*s23^7 + 
                   32220*s13^2*s23^8 + 5180*s13*s23^9 + 760*s23^10) - 
                 s12^5*(486*s13^11 + 20439*s13^10*s23 + 219432*s13^9*s23^2 + 
                   732075*s13^8*s23^3 + 1054198*s13^7*s23^4 + 622383*s13^6*
                    s23^5 + 35476*s13^5*s23^6 - 69075*s13^4*s23^7 - 
                   9364*s13^3*s23^8 - 7974*s13^2*s23^9 - 2560*s13*s23^10 - 
                   460*s23^11)) + p2q^2*p3q*(-20*s13^5*s23^4*(s13 + s23)^4*
                  (162*s13^3 + 72*s13^2*s23 - 130*s13*s23^2 + 23*s23^3) - 
                 4*s12*s13^4*s23^3*(s13 + s23)^3*(2052*s13^5 + 5030*s13^4*
                    s23 + 536*s13^3*s23^2 - 2700*s13^2*s23^3 + 487*s13*
                    s23^4 + 35*s23^5) + 4*s12^11*(54*s13^5 + 189*s13^4*s23 - 
                   154*s13^3*s23^2 - 444*s13^2*s23^3 - 85*s13*s23^4 + 
                   75*s23^5) + s12^10*(1998*s13^6 + 10836*s13^5*s23 + 
                   11191*s13^4*s23^2 - 4194*s13^3*s23^3 - 9487*s13^2*s23^4 - 
                   4340*s13*s23^5 - 1100*s23^6) + s12^9*(10503*s13^7 + 
                   23616*s13^6*s23 - 124*s13^5*s23^2 - 28567*s13^4*s23^3 - 
                   21441*s13^3*s23^4 - 21251*s13^2*s23^5 - 22040*s13*s23^6 - 
                   6940*s23^7) - s12^2*s13^3*s23^2*(s13 + s23)^2*
                  (4527*s13^7 + 26719*s13^6*s23 + 56315*s13^5*s23^2 + 
                   2159*s13^4*s23^3 - 38122*s13^3*s23^4 + 1614*s13^2*s23^5 + 
                   6712*s13*s23^6 - 600*s23^7) + s12^8*(24759*s13^8 + 
                   11592*s13^7*s23 - 179524*s13^6*s23^2 - 344344*s13^5*
                    s23^3 - 221474*s13^4*s23^4 - 62166*s13^3*s23^5 - 
                   50499*s13^2*s23^6 - 43020*s13*s23^7 - 10760*s23^8) + 
                 s12^7*(26406*s13^9 - 10728*s13^8*s23 - 448555*s13^7*s23^2 - 
                   1083221*s13^6*s23^3 - 1037428*s13^5*s23^4 - 430846*s13^4*
                    s23^5 - 111183*s13^3*s23^6 - 75185*s13^2*s23^7 - 
                   34980*s13*s23^8 - 6140*s23^9) + s12^6*(12204*s13^10 - 
                   8100*s13^9*s23 - 466371*s13^8*s23^2 - 1502737*s13^7*
                    s23^3 - 1973156*s13^6*s23^4 - 1224065*s13^5*s23^5 - 
                   370337*s13^4*s23^6 - 92684*s13^3*s23^7 - 40106*s13^2*
                    s23^8 - 9260*s13*s23^9 - 460*s23^10) - s12^3*s13^2*s23*
                  (72*s13^10 - 496*s13^9*s23 + 70661*s13^8*s23^2 + 
                   263925*s13^7*s23^3 + 295851*s13^6*s23^4 + 54825*s13^5*
                    s23^5 - 65296*s13^4*s23^6 - 5422*s13^3*s23^7 + 
                   7756*s13^2*s23^8 - 3188*s13*s23^9 + 600*s23^10) + 
                 s12^4*s13*(351*s13^11 + 9000*s13^10*s23 - 25013*s13^9*
                    s23^2 - 362520*s13^8*s23^3 - 902035*s13^7*s23^4 - 
                   901725*s13^6*s23^5 - 376869*s13^5*s23^6 - 59415*s13^4*
                    s23^7 - 7464*s13^3*s23^8 + 8642*s13^2*s23^9 + 5792*s13*
                    s23^10 + 140*s23^11) + s12^5*(2187*s13^11 + 9756*s13^10*
                    s23 - 219333*s13^9*s23^2 - 1057135*s13^8*s23^3 - 
                   1848402*s13^7*s23^4 - 1513516*s13^6*s23^5 - 596644*s13^5*
                    s23^6 - 124739*s13^4*s23^7 - 19750*s13^3*s23^8 + 
                   4512*s13^2*s23^9 + 880*s13*s23^10 + 460*s23^11))) + 
             p1q^3*(-(p3q^4*s12*(s12 + s23)*(20*s13^6*s23^5*(s13 + s23)^3*
                   (28*s13 + 51*s23) + 180*s12^11*s23^2*(4*s13^2 + 
                    23*s13*s23 + 15*s23^2) + s12*s13^5*s23^4*(s13 + s23)^2*
                   (2349*s13^3 + 6518*s13^2*s23 + 6253*s13*s23^2 + 
                    1704*s23^3) + s12^10*(108*s13^5 + 261*s13^4*s23 + 
                    2734*s13^3*s23^2 + 19681*s13^2*s23^3 + 23560*s13*s23^4 + 
                    7780*s23^5) + s12^2*s13^4*s23^3*(1449*s13^6 + 17767*s13^5*
                     s23 + 54170*s13^4*s23^2 + 67850*s13^3*s23^3 + 
                    35457*s13^2*s23^4 + 3743*s13*s23^5 - 1716*s23^6) + 
                  s12^9*(1188*s13^6 + 7011*s13^5*s23 + 4702*s13^4*s23^2 + 
                    17563*s13^3*s23^3 + 41264*s13^2*s23^4 + 24600*s13*s23^5 + 
                    2220*s23^6) + s12^8*(3024*s13^7 + 13842*s13^6*s23 - 
                    18315*s13^5*s23^2 - 59735*s13^4*s23^3 - 29145*s13^3*
                     s23^4 - 21023*s13^2*s23^5 - 34360*s13*s23^6 - 
                    13020*s23^7) + s12^3*s13^3*s23^2*(-358*s13^7 + 
                    12935*s13^6*s23 + 83360*s13^5*s23^2 + 180084*s13^4*
                     s23^3 + 168451*s13^3*s23^4 + 64223*s13^2*s23^5 + 
                    5485*s13*s23^6 - 144*s23^7) + s12^7*(3024*s13^8 - 
                    774*s13^7*s23 - 95792*s13^6*s23^2 - 216685*s13^5*s23^3 - 
                    176858*s13^4*s23^4 - 113447*s13^3*s23^5 - 118500*s13^2*
                     s23^6 - 73180*s13*s23^7 - 15080*s23^8) + s12^4*s13^2*s23*
                   (-1548*s13^8 - 9837*s13^7*s23 + 6311*s13^6*s23^2 + 
                    133485*s13^5*s23^3 + 282166*s13^4*s23^4 + 232763*s13^3*
                     s23^5 + 80311*s13^2*s23^6 + 14705*s13*s23^7 + 
                    4656*s23^8) + s12^6*(1188*s13^9 - 17883*s13^8*s23 - 
                    135006*s13^7*s23^2 - 279818*s13^6*s23^3 - 213175*s13^5*
                     s23^4 - 70401*s13^4*s23^5 - 83753*s13^3*s23^6 - 
                    96524*s13^2*s23^7 - 37840*s13*s23^8 - 4920*s23^9) + 
                  s12^5*s13*(108*s13^9 - 11565*s13^8*s23 - 69696*s13^7*
                     s23^2 - 128121*s13^6*s23^3 - 17731*s13^5*s23^4 + 
                    148679*s13^4*s23^5 + 109655*s13^3*s23^6 + 1049*s13^2*
                     s23^7 - 16694*s13*s23^8 - 4200*s23^9))) + p2q^4*s13*
                (s13 + s23)*(20*s13^6*s23^4*(s13 + s23)^3*(135*s13^2 - 
                   16*s13*s23 - 246*s23^2) + 20*s12*s13^5*s23^3*(s13 + s23)^2*
                  (288*s13^4 + 636*s13^3*s23 - 679*s13^2*s23^2 - 1292*s13*
                    s23^3 - 210*s23^4) + 4*s12^10*(-27*s13^5 + 324*s13^4*
                    s23 + 1229*s13^3*s23^2 + 848*s13^2*s23^3 + 140*s13*
                    s23^4 + 95*s23^5) + s12^9*(-540*s13^6 + 12096*s13^5*s23 + 
                   37382*s13^4*s23^2 + 37895*s13^3*s23^3 + 14890*s13^2*
                    s23^4 + 4641*s13*s23^5 + 2160*s23^6) + s12^8*
                  (-432*s13^7 + 42471*s13^6*s23 + 118818*s13^5*s23^2 + 
                   148424*s13^4*s23^3 + 100107*s13^3*s23^4 + 37553*s13^2*
                    s23^5 + 12955*s13*s23^6 + 4200*s23^7) + s12^2*s13^4*s23^2*
                  (1557*s13^7 + 16377*s13^6*s23 + 38273*s13^5*s23^2 - 
                   15251*s13^4*s23^3 - 103340*s13^3*s23^4 - 77322*s13^2*
                    s23^5 - 8030*s13*s23^6 + 4656*s23^7) + s12^4*s13^2*s23*
                  (4815*s13^8 + 63774*s13^7*s23 + 241864*s13^6*s23^2 + 
                   284865*s13^5*s23^3 + 61916*s13^4*s23^4 - 43742*s13^3*
                    s23^5 + 4859*s13^2*s23^6 + 6961*s13*s23^7 - 1716*s23^8) + 
                 s12^3*s13^3*s23*(9*s13^8 + 3616*s13^7*s23 + 55261*s13^6*
                    s23^2 + 107923*s13^5*s23^3 + 6696*s13^4*s23^4 - 
                   85366*s13^3*s23^5 - 25424*s13^2*s23^6 + 11825*s13*s23^7 - 
                   144*s23^8) + s12^7*(864*s13^8 + 73881*s13^7*s23 + 
                   234842*s13^6*s23^2 + 311461*s13^5*s23^3 + 240719*s13^4*
                    s23^4 + 132335*s13^3*s23^5 + 56103*s13^2*s23^6 + 
                   15931*s13*s23^7 + 3440*s23^8) + s12^6*(1404*s13^9 + 
                   67050*s13^8*s23 + 298095*s13^7*s23^2 + 457391*s13^6*
                    s23^3 + 330763*s13^5*s23^4 + 168378*s13^4*s23^5 + 
                   96443*s13^3*s23^6 + 40847*s13^2*s23^7 + 8761*s13*s23^8 + 
                   1020*s23^9) + s12^5*s13*(540*s13^9 + 29646*s13^8*s23 + 
                   211320*s13^7*s23^2 + 455127*s13^6*s23^3 + 368200*s13^5*
                    s23^4 + 102880*s13^4*s23^5 + 35719*s13^3*s23^6 + 
                   38725*s13^2*s23^7 + 9083*s13*s23^8 + 1704*s23^9)) + p2q^3*
                p3q*(40*s13^6*s23^4*(s13 + s23)^4*(54*s13^3 + 67*s13^2*s23 - 
                   165*s13*s23^2 + 48*s23^3) + 8*s12*s13^5*s23^3*(s13 + s23)^
                   3*(594*s13^5 + 1700*s13^4*s23 - 688*s13^3*s23^2 - 
                   2385*s13^2*s23^3 + 534*s13*s23^4 + 155*s23^5) + 
                 4*s12^11*(54*s13^6 - 162*s13^5*s23 - 973*s13^4*s23^2 - 
                   979*s13^3*s23^3 + 43*s13^2*s23^4 + 710*s13*s23^5 + 
                   365*s23^6) + s12^2*s13^4*s23^2*(s13 + s23)^2*(1521*s13^7 + 
                   6557*s13^6*s23 + 24151*s13^5*s23^2 - 25032*s13^4*s23^3 - 
                   42269*s13^3*s23^4 + 13415*s13^2*s23^5 + 11897*s13*s23^6 - 
                   2200*s23^7) + s12^10*(864*s13^7 + 14967*s13^6*s23 + 
                   33456*s13^5*s23^2 + 20042*s13^4*s23^3 - 1524*s13^3*s23^4 + 
                   7647*s13^2*s23^5 + 15280*s13*s23^6 + 5380*s23^7) + 
                 s12^9*(-864*s13^8 + 71343*s13^7*s23 + 251830*s13^6*s23^2 + 
                   295314*s13^5*s23^3 + 122202*s13^4*s23^4 + 17431*s13^3*
                    s23^5 + 35480*s13^2*s23^6 + 30520*s13*s23^7 + 
                   6920*s23^8) + s12^8*(-5184*s13^9 + 136935*s13^8*s23 + 
                   634013*s13^7*s23^2 + 1028391*s13^6*s23^3 + 703348*s13^5*
                    s23^4 + 154757*s13^4*s23^5 + 18791*s13^3*s23^6 + 
                   55765*s13^2*s23^7 + 27120*s13*s23^8 + 3080*s23^9) + 
                 s12^7*(-4968*s13^10 + 145971*s13^9*s23 + 885148*s13^8*
                    s23^2 + 1872468*s13^7*s23^3 + 1750929*s13^6*s23^4 + 
                   613303*s13^5*s23^5 - 44030*s13^4*s23^6 - 25550*s13^3*
                    s23^7 + 27173*s13^2*s23^8 + 8440*s13*s23^9 - 
                   380*s23^10) + s12^4*s13^2*s23*(-1323*s13^10 + 76243*s13^9*
                    s23 + 539133*s13^8*s23^2 + 1158690*s13^7*s23^3 + 
                   978030*s13^6*s23^4 + 180528*s13^5*s23^5 - 181619*s13^4*
                    s23^6 - 111256*s13^3*s23^7 - 39333*s13^2*s23^8 - 
                   9737*s13*s23^9 + 540*s23^10) + s12^3*s13^3*s23*(9*s13^10 - 
                   5476*s13^9*s23 + 59736*s13^8*s23^2 + 252007*s13^7*s23^3 + 
                   267010*s13^6*s23^4 + 9695*s13^5*s23^5 - 84912*s13^4*
                    s23^6 + 2357*s13^3*s23^7 + 11461*s13^2*s23^8 - 
                   4439*s13*s23^9 + 840*s23^10) + s12^5*s13*(432*s13^11 + 
                   20349*s13^10*s23 + 389142*s13^9*s23^2 + 1479286*s13^8*
                    s23^3 + 2291618*s13^7*s23^4 + 1513616*s13^6*s23^5 + 
                   153179*s13^5*s23^6 - 300258*s13^4*s23^7 - 159474*s13^3*
                    s23^8 - 43621*s13^2*s23^9 - 6565*s13*s23^10 - 
                   1160*s23^11) - s12^6*(864*s13^11 - 86445*s13^10*s23 - 
                   771519*s13^9*s23^2 - 2118251*s13^8*s23^3 - 2553692*s13^7*
                    s23^4 - 1276283*s13^6*s23^5 + 11241*s13^5*s23^6 + 
                   225587*s13^4*s23^7 + 62346*s13^3*s23^8 + 7692*s13^2*
                    s23^9 + 1760*s13*s23^10 + 460*s23^11)) - p2q*p3q^3*
                (20*s13^6*(73*s13 - 23*s23)*s23^6*(s13 + s23)^4 + 
                 180*s12^13*s23^2*(4*s13^2 + 19*s13*s23 + 12*s23^2) + 
                 4*s12*s13^5*s23^5*(s13 + s23)^3*(1011*s13^3 + 1484*s13^2*
                    s23 + 433*s13*s23^2 - 290*s23^3) - s12^2*s13^4*s23^4*
                  (s13 + s23)^2*(721*s13^5 - 12253*s13^4*s23 - 17452*s13^3*
                    s23^2 - 1753*s13^2*s23^3 + 4785*s13*s23^4 - 540*s23^5) + 
                 s12^12*(216*s13^5 + 801*s13^4*s23 + 1670*s13^3*s23^2 + 
                   11005*s13^2*s23^3 + 22580*s13*s23^4 + 11320*s23^5) + 
                 s12^11*(1512*s13^6 + 5625*s13^5*s23 - 7296*s13^4*s23^2 - 
                   19599*s13^3*s23^3 + 27410*s13^2*s23^4 + 49780*s13*s23^5 + 
                   17080*s23^6) + s12^10*(1080*s13^7 - 17271*s13^6*s23 - 
                   116693*s13^5*s23^2 - 203885*s13^4*s23^3 - 107711*s13^3*
                    s23^4 + 23232*s13^2*s23^5 + 23700*s13*s23^6 + 
                   240*s23^7) + s12^3*s13^3*s23^3*(-6447*s13^8 - 10040*s13^7*
                    s23 + 31029*s13^6*s23^2 + 81271*s13^5*s23^3 + 37451*s13^4*
                    s23^4 - 40690*s13^3*s23^5 - 38705*s13^2*s23^6 - 
                   6373*s13*s23^7 + 840*s23^8) - s12^9*(3888*s13^8 + 
                   79659*s13^7*s23 + 361666*s13^6*s23^2 + 640592*s13^5*
                    s23^3 + 496407*s13^4*s23^4 + 141507*s13^3*s23^5 + 
                   31017*s13^2*s23^6 + 47620*s13*s23^7 + 19040*s23^8) + 
                 s12^4*s13^2*s23^2*(-2119*s13^9 + 856*s13^8*s23 + 81310*s13^7*
                    s23^2 + 288844*s13^6*s23^3 + 406436*s13^5*s23^4 + 
                   226729*s13^4*s23^5 + 8986*s13^3*s23^6 - 23815*s13^2*
                    s23^7 - 3079*s13*s23^8 - 2200*s23^9) - s12^8*
                  (6264*s13^9 + 84789*s13^8*s23 + 389783*s13^7*s23^2 + 
                   804301*s13^6*s23^3 + 732096*s13^5*s23^4 + 231881*s13^4*
                    s23^5 + 23669*s13^3*s23^6 + 73401*s13^2*s23^7 + 
                   52900*s13*s23^8 + 12200*s23^9) - s12^7*(2808*s13^10 + 
                   21861*s13^9*s23 + 101724*s13^8*s23^2 + 230606*s13^7*
                    s23^3 + 67106*s13^6*s23^4 - 357336*s13^5*s23^5 - 
                   385094*s13^4*s23^6 - 93593*s13^3*s23^7 + 20714*s13^2*
                    s23^8 + 4260*s13*s23^9 - 1080*s23^10) + s12^5*s13*s23*
                  (1143*s13^10 + 19102*s13^9*s23 + 137176*s13^8*s23^2 + 
                   482559*s13^7*s23^3 + 970206*s13^6*s23^4 + 1052128*s13^5*
                    s23^5 + 550560*s13^4*s23^6 + 118116*s13^3*s23^7 + 
                   22689*s13^2*s23^8 + 11769*s13*s23^9 + 1240*s23^10) + 
                 s12^6*(-216*s13^11 + 6507*s13^10*s23 + 56061*s13^9*s23^2 + 
                   231901*s13^8*s23^3 + 670030*s13^7*s23^4 + 1179634*s13^6*
                    s23^5 + 1076932*s13^5*s23^6 + 453678*s13^4*s23^7 + 
                   88805*s13^3*s23^8 + 29532*s13^2*s23^9 + 9180*s13*s23^10 + 
                   1920*s23^11)) + p2q^2*p3q^2*(20*s13^6*s23^5*(s13 + s23)^4*
                  (69*s13^2 - 238*s13*s23 + 119*s23^2) + 4*s12*s13^5*s23^4*
                  (s13 + s23)^3*(256*s13^4 - 2079*s13^3*s23 - 2840*s13^2*
                    s23^2 + 1355*s13*s23^3 + 600*s23^4) - 4*s12^12*
                  (27*s13^5 + 135*s13^4*s23 - 356*s13^3*s23^2 - 1269*s13^2*
                    s23^3 - 245*s13*s23^4 + 345*s23^5) - 2*s12^11*(54*s13^6 + 
                   2493*s13^5*s23 + 546*s13^4*s23^2 - 11123*s13^3*s23^3 - 
                   12520*s13^2*s23^4 - 3220*s13*s23^5 + 380*s23^6) - 
                 s12^2*s13^4*s23^3*(s13 + s23)^2*(4996*s13^6 + 3468*s13^5*
                    s23 + 32059*s13^4*s23^2 + 26128*s13^3*s23^3 - 19309*s13^2*
                    s23^4 - 12830*s13*s23^5 + 2740*s23^6) + s12^10*
                  (2916*s13^7 + 16920*s13^6*s23 + 74727*s13^5*s23^2 + 
                   122066*s13^4*s23^3 + 88835*s13^3*s23^4 + 46952*s13^2*
                    s23^5 + 29500*s13*s23^6 + 8380*s23^7) + s12^3*s13^4*s23^2*
                  (-4070*s13^8 + 17971*s13^7*s23 + 53008*s13^6*s23^2 - 
                   58221*s13^5*s23^3 - 220245*s13^4*s23^4 - 133946*s13^3*
                    s23^5 + 31897*s13^2*s23^6 + 34968*s13*s23^7 + 
                   182*s23^8) + s12^9*(6588*s13^8 + 89208*s13^7*s23 + 
                   358246*s13^6*s23^2 + 592122*s13^5*s23^3 + 439733*s13^4*
                    s23^4 + 152632*s13^3*s23^5 + 70275*s13^2*s23^6 + 
                   53040*s13*s23^7 + 13520*s23^8) + s12^8*(2700*s13^9 + 
                   135666*s13^8*s23 + 624793*s13^7*s23^2 + 1250761*s13^6*
                    s23^3 + 1213488*s13^5*s23^4 + 541422*s13^4*s23^5 + 
                   127815*s13^3*s23^6 + 69607*s13^2*s23^7 + 29420*s13*s23^8 + 
                   3380*s23^9) + s12^7*(-2916*s13^10 + 111870*s13^9*s23 + 
                   619046*s13^8*s23^2 + 1408637*s13^7*s23^3 + 1581098*s13^6*
                    s23^4 + 826561*s13^5*s23^5 + 144509*s13^4*s23^6 + 
                   3220*s13^3*s23^7 + 1491*s13^2*s23^8 - 11000*s13*s23^9 - 
                   4760*s23^10) - s12^4*s13^2*s23*(306*s13^10 - 45611*s13^9*
                    s23 - 236709*s13^8*s23^2 - 312370*s13^7*s23^3 + 
                   100106*s13^6*s23^4 + 506385*s13^5*s23^5 + 358571*s13^4*
                    s23^6 + 80818*s13^3*s23^7 + 12674*s13^2*s23^8 + 
                   4906*s13*s23^9 - 2740*s23^10) - s12^6*(2052*s13^11 - 
                   62532*s13^10*s23 - 452517*s13^9*s23^2 - 1102984*s13^8*
                    s23^3 - 1206307*s13^7*s23^4 - 447987*s13^6*s23^5 + 
                   200360*s13^5*s23^6 + 213678*s13^4*s23^7 + 83458*s13^3*
                    s23^8 + 42051*s13^2*s23^9 + 13820*s13*s23^10 + 
                   2380*s23^11) - s12^5*s13*(108*s13^11 - 18180*s13^10*s23 - 
                   226942*s13^9*s23^2 - 659960*s13^8*s23^3 - 696953*s13^7*
                    s23^4 + 19776*s13^6*s23^5 + 592799*s13^5*s23^6 + 
                   436018*s13^4*s23^7 + 144868*s13^3*s23^8 + 48388*s13^2*
                    s23^9 + 14482*s13*s23^10 + 2400*s23^11))))/
            (72*p1q*(p2q + p3q)*s12^3*s13^3*(s12 + s13)^2*s23^2*(s12 + s23)*
             (s13 + s23)^2*(p1q^5*s23^3*(s12 + s23)*(s13 + s23) + 
              (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(p3q^2*s12*
                 (s12 + s23) + p2q^2*s13*(s13 + s23) - p2q*p3q*
                 (s23*(s13 + s23) + s12*(2*s13 + s23))) - p1q^4*s23^2*(
                p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*s23) + 
                p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                  s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*(
                p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                   (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + 
                p2q^2*(s13 + s23)*(s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 
                    2*s23)*s23 + s12*(3*s13^2 - s23^2)) + p2q*p3q*
                 (s12^3*(2*s13 + 3*s23) + s12^2*(2*s13^2 + 3*s13*s23 - 
                    s23^2) + s12*(2*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 - 
                    3*s23^3) + s23*(3*s13^3 - s13^2*s23 - 3*s13*s23^2 + 
                    s23^3))) + p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + 
                  s13*(s13 - 4*s23) - 3*s12*s23) + p3q^4*s12^2*(s12 + s23)*
                 (s12^2 - 4*s12*s23 - s13*(s13 + 3*s23)) + p2q*p3q^3*s12*
                 (s12^4 - s12^2*(s13 - s23)^2 - 3*s12^3*(s13 + s23) + 
                  2*s13*s23*(s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + 
                    s13^2*s23 + s13*s23^2 + s23^3)) + p2q^2*p3q^2*
                 (-(s12^4*(3*s13 + s23)) + s12^3*(3*s13^2 + 3*s13*s23 + 
                    s23^2) + s13^2*s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12^2*(3*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + 
                  s12*s13*(-3*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 + 2*s23^3)) + 
                p2q^3*p3q*s13*(s12^3*(3*s13 + 2*s23) + s12^2*(-s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12*(-3*s13^3 + 2*s13^2*s23 + 
                    3*s13*s23^2 + 2*s23^3) + s13*(s13^3 - 3*s13^2*s23 - 
                    s13*s23^2 + 3*s23^3))) + p1q^2*(-(p3q^3*s12*(s12 + s23)*
                  (-(s13*s23*(2*s13 + 3*s23)) + s12^2*(s13 + 4*s23) + 
                   s12*(s13^2 - 6*s23^2))) - p2q^3*s13*(s13 + s23)*
                 (s12^2*(s13 - 2*s23) + 2*s13*(2*s13 - 3*s23)*s23 + 
                  s12*(s13^2 - 3*s23^2)) + p2q*p3q^2*(-(s12^4*(s13 + 
                     3*s23)) + s13*s23^2*(2*s13^2 + s13*s23 - s23^2) + 
                  s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + s12*s23*(2*s13^3 + 
                    2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + s12^2*(2*s13^3 + 
                    2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + p2q^2*p3q*
                 (-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 2*s12^3*(s13^2 + 
                    s13*s23 + s23^2) + s12^2*(s13^3 + 2*s13^2*s23 + 
                    2*s13*s23^2 + s23^3) - s12*(s13^4 - 3*s13^3*s23 - 
                    2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))) + 
           ((s12 + s13 + s23)*(9*p1q^2*(s12 - s13)*(s12 + s13)^3*s23 - 
              9*p3q^2*(s12^4*(24*s13 - s23) + s13^4*s23 - 2*s12*s13^2*s23*
                 (3*s13 + 4*s23) + 2*s12^3*s13*(24*s13 + 23*s23) + 
                8*s12^2*s13*(3*s13^2 + 5*s13*s23 + 3*s23^2)) + 
              9*p2q^2*(2*s12^3*s13*(12*s13 - 5*s23) + s12^4*s23 + 
                3*s13^4*s23 + 4*s12^2*s13*(12*s13^2 + 9*s13*s23 - 2*s23^2) + 
                2*s12*s13^2*(12*s13^2 + 25*s13*s23 + 12*s23^2)) - 
              18*p2q*p3q*(s12 - s13)*(s12^3*(12*s13 - s23) + s13^3*s23 + 
                3*s12^2*s13*(8*s13 + 9*s23) + s12*s13*(12*s13^2 + 
                  29*s13*s23 + 16*s23^2)) + p1q*p2q*(63*s12^4*s23 - 
                s13^2*s23*(99*s13^2 + 76*s13*s23 + 72*s23^2) - 6*s12*s13^2*
                 (36*s13^2 + 117*s13*s23 + 74*s23^2) + s12^3*(-216*s13^2 + 
                  342*s13*s23 + 140*s23^2) - 12*s12^2*(36*s13^3 + 
                  27*s13^2*s23 - 29*s13*s23^2 - 6*s23^3)) + 
              p1q*p3q*(9*s12^4*(24*s13 + 7*s23) - 6*s12*s13^2*s23*
                 (51*s13 + 50*s23) + 2*s12^3*(216*s13^2 + 333*s13*s23 + 
                  70*s23^2) - s13^2*s23*(63*s13^2 + 76*s13*s23 + 72*s23^2) + 
                12*s12^2*(18*s13^3 + 30*s13^2*s23 + 41*s13*s23^2 + 6*s23^3)))*
             den[-3 + 2*ep])/(8*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23^2))*
          p2 . E0conj) + nl*(((ep*(1 - (4*s12)/s13 - (4*s13)/s12))/6 + 
           (9*p1q^2*(s12 - s13)^2*s23*(s12 + s13 + s23) - 9*(p2q + p3q)*
              (s12 - s13)*(-(p3q*s12) + p2q*s13)*(s12^2 + 2*s12*s13 + s13^
                2 + 3*s12*s23 + 3*s13*s23 + 2*s23^2) + 
             p1q*p3q*(-9*s12^4 + s12^3*(27*s13 - 10*s23) + s12^2*
                (-27*s13^2 + 19*s13*s23 + 5*s23^2) + s13*s23*(-s13^2 + 
                 5*s13*s23 + 14*s23^2) + s12*(9*s13^3 - 8*s13^2*s23 + 
                 46*s13*s23^2 + 14*s23^3)) + p1q*p2q*(s12^3*(9*s13 - s23) + 
               s12^2*(-27*s13^2 - 8*s13*s23 + 5*s23^2) + s13*(-9*s13^3 - 
                 10*s13^2*s23 + 5*s13*s23^2 + 14*s23^3) + s12*(27*s13^3 + 
                 19*s13^2*s23 + 46*s13*s23^2 + 14*s23^3)))/
            (24*p1q*(p2q + p3q)*s12*s13*(s12 + s13)*s23) + 
           (3*(s12 + s13 + s23)*(-(p3q*(s12 - s13)*(2*s12 + s23)) + 
              2*p1q*s23*(s12 + s13 + s23) + p2q*(s12 - s13)*(2*s13 + s23))*
             den[-1 + ep])/(4*(p2q + p3q)*(s12 + s13)^2*s23) + 
           ((-9*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(s12^2 - s13^2)*(s12^2 + 
                2*s12*s13 + s13^2 + 3*s12*s23 + 3*s13*s23 + 2*s23^2) + 
              9*p1q^2*s23*(s12^4 + s12^3*(-8*s13 + s23) + s13^3*(s13 + s23) - 
                s12^2*s13*(18*s13 + 17*s23) - s12*s13*(8*s13^2 + 17*s13*s23 + 
                  8*s23^2)) + p1q*(p3q*(-9*s12^5 + s12^4*(90*s13 - 26*s23) + 
                  s12^3*s23*(89*s13 + 5*s23) + s13^2*s23*(-17*s13^2 + 
                    5*s13*s23 + 14*s23^2) + s12^2*(-90*s13^3 - 85*s13^2*s23 + 
                    87*s13*s23^2 + 14*s23^3) + s12*s13*(9*s13^3 - 73*s13^2*
                     s23 + 15*s13*s23^2 + 28*s23^3)) + 
                p2q*(s12^4*(9*s13 - 17*s23) + s12^3*(-90*s13^2 - 73*s13*s23 + 
                    5*s23^2) + s12^2*s23*(-85*s13^2 + 15*s13*s23 + 
                    14*s23^2) + s13^2*(-9*s13^3 - 26*s13^2*s23 + 5*s13*
                     s23^2 + 14*s23^3) + s12*s13*(90*s13^3 + 89*s13^2*s23 + 
                    87*s13*s23^2 + 28*s23^3))))*den[-3 + 2*ep])/
            (24*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^2*s23))*E0 . E0conj + 
         ((3*ep*(s12 - s13)*(s12 + s13 + s23))/(2*s12*s13*s23) - 
           ((s12 + s13 + s23)*(9*p1q^2*(s12^2 - s13^2) + 9*(s12 - s13)*(
                2*p2q*p3q*(-s12 + s13) + p3q^2*(s12 + s13) + 
                p2q^2*(s12 + 5*s13)) + p1q*(p2q*(-9*s12^2 - 32*s12*s23 + 
                  s13*(9*s13 + 4*s23)) + p3q*(27*s12^2 + s13*(9*s13 + 
                    4*s23) - 4*s12*(9*s13 + 8*s23)))))/(12*p1q*(p2q + p3q)*
             s12*s13*(s12 + s13)*s23) + (3*(s12^3*(2*s13 - s23) + 
              2*s12^2*(s13 - s23)*s23 + s13*s23^2*(s13 + s23) - 
              s12*(2*s13^3 + s13^2*s23 - s13*s23^2 + s23^3))*den[-1 + ep])/
            (2*s12*s13*(s12 + s13)^2*s23) - ((s12 + s13 + s23)*
             (9*p1q^2*(s12 - s13)*(s12 + s13)^2 + 9*(s12^2 - s13^2)*(
                2*p2q*p3q*(-s12 + s13) + p3q^2*(s12 + s13) + 
                p2q^2*(s12 + 5*s13)) + p1q*(p3q*(9*s12^3 + s12^2*(45*s13 - 
                    68*s23) + s12*(-81*s13^2 + 8*s13*s23 - 36*s23^2) + 
                  s13*(27*s13^2 + 4*s13*s23 + 36*s23^2)) + p2q*(-27*s12^3 + 
                  s12^2*(45*s13 - 68*s23) + s12*(-45*s13^2 + 8*s13*s23 - 
                    36*s23^2) + s13*(27*s13^2 + 4*s13*s23 + 36*s23^2))))*
             den[-3 + 2*ep])/(12*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^2*s23))*
          p1 . E0conj*p2 . E0 + 
         (((s12 + s13 + s23)*(-9*(p2q + p3q)*(s12 - s13)*(-(p3q*s12) + 
                p2q*s13) + p1q*p3q*(-9*s12^2 + 9*s12*s13 + 7*s12*s23 + 
                7*s13*s23) + p1q*p2q*(9*s12*s13 - 9*s13^2 + 7*s12*s23 + 
                7*s13*s23)))/(3*p1q*(p2q + p3q)*s12*s13*(s12 + s13)*s23) - 
           (3*(s12 - s13)^2*(s12 + s13 + s23)*den[-1 + ep])/
            (2*s12*s13*(s12 + s13)^2) + ((s12 + s13 + s23)*
             (-9*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(s12^2 - s13^2) + 
              p1q*p3q*(-9*s12^3 + s12*s13*(9*s13 - 4*s23) + 16*s12^2*s23 + 
                16*s13^2*s23) + p1q*p2q*(-4*s12*s13*s23 + s13^2*(-9*s13 + 
                  16*s23) + s12^2*(9*s13 + 16*s23)))*den[-3 + 2*ep])/
            (3*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^2*s23))*p2 . E0*
          p2 . E0conj + p1 . E0*((((s12 + s13 + s23)*(9*p2q^2*s13*
                 (-s12 + s13) + p1q*(p2q + p3q)*(9*s12*s13 + 4*s12*s23 + 
                  4*s13*s23)))/(3*p1q*(p2q + p3q)*s12*s13*(s12 + s13)*s23) + 
             (ep*(9*s12^3 + 2*s12^2*s23 - 7*s13*s23*(s13 + s23) - 
                s12*(9*s13^2 + 23*s13*s23 + 7*s23^2)))/(6*s12*s13*(s12 + s13)*
               s23) - (3*(s12 + s13 + s23)*(-2*p1q^2*s12*s13*s23*
                 (s12^2 + 2*s12*s13 + s13^2 + 3*s12*s23 + 3*s13*s23 + 
                  2*s23^2) - 2*s12*s13*(s12 + s13 + s23)*(p3q^2*s23*
                   (s12 + s13 + 2*s23) - 2*p2q^2*(s13^2 + s12*(s13 - s23) + 
                    s13*s23 - s23^2) + p2q*p3q*(2*s12^2 + s23*(s13 + 4*s23) + 
                    s12*(2*s13 + 5*s23))) + p1q*(p3q*(s12^4*(4*s13 + s23) + 
                    s13*s23^2*(s13^2 + 2*s13*s23 + 2*s23^2) + s12^3*
                     (4*s13^2 + 13*s13*s23 + 4*s23^2) + s12^2*s23*(3*s13^2 + 
                      14*s13*s23 + 5*s23^2) - s12*s23*(s13^3 + s13^2*s23 - 
                      7*s13*s23^2 - 2*s23^3)) + p2q*(s12^4*s23 + s13*s23^2*
                     (s13^2 + 2*s13*s23 + 2*s23^2) + s12^3*(-4*s13^2 + 
                      3*s13*s23 + 4*s23^2) + s12*s23*(s13^3 + s13^2*s23 + 
                      7*s13*s23^2 + 2*s23^3) + s12^2*(-4*s13^3 - 5*s13^2*
                       s23 + 8*s13*s23^2 + 5*s23^3))))*den[-1 + ep])/
              (2*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23^2) + 
             ((s12 + s13 + s23)*(-18*p1q^2*s12*s13*s23*(3*s12^2 + 6*s12*s13 + 
                  3*s13^2 + 7*s12*s23 + 7*s13*s23 + 4*s23^2) + 
                18*s13*(-(p3q^2*s12*s23*(3*s12^2 + 6*s12*s13 + 3*s13^2 + 
                     7*s12*s23 + 7*s13*s23 + 4*s23^2)) - 2*p2q*p3q*s12*
                   (3*s12^3 + s12^2*(6*s13 + 9*s23) + 2*s23*(s13^2 + 
                      3*s13*s23 + 2*s23^2) + s12*(3*s13^2 + 11*s13*s23 + 
                      10*s23^2)) + p2q^2*(6*s12^3*(s13 - s23) + s13^3*s23 + 
                    3*s12^2*(4*s13^2 + s13*s23 - 3*s23^2) + s12*(6*s13^3 + 
                      10*s13^2*s23 - s13*s23^2 - 4*s23^3))) + 
                p1q*(p3q*(9*s12^4*(12*s13 + 5*s23) + s13*s23^2*(37*s13^2 + 
                      54*s13*s23 + 36*s23^2) + 3*s12^2*s23*(63*s13^2 + 
                      121*s13*s23 + 36*s23^2) + s12^3*(108*s13^2 + 369*s13*
                       s23 + 109*s23^2) + 3*s12*s23*(3*s13^3 + 25*s13^2*s23 + 
                      54*s13*s23^2 + 12*s23^3)) + p2q*(45*s12^4*s23 + 
                    s13*s23^2*(37*s13^2 + 54*s13*s23 + 36*s23^2) + 
                    s12^3*(-108*s13^2 + 153*s13*s23 + 109*s23^2) + 3*s12*s23*
                     (15*s13^3 + 37*s13^2*s23 + 54*s13*s23^2 + 12*s23^3) + 
                    3*s12^2*(-36*s13^3 + 3*s13^2*s23 + 85*s13*s23^2 + 
                      36*s23^3))))*den[-3 + 2*ep])/(6*p1q*(p2q + p3q)*s12*s13*
               (s12 + s13)^3*s23^2))*p1 . E0conj + 
           (((s12 + s13 + s23)*(9*p1q^2*(s12^2 - s13^2) + 9*(p2q + p3q)*
                 (s12 - s13)*(p2q*(s12 - 3*s13) + p3q*(s12 + s13)) + 
                p1q*(p2q*(-9*s12^2 + 36*s12*s13 - 27*s13^2 - 4*s12*s23 + 
                    32*s13*s23) + p3q*(-9*s12^2 + 9*s13^2 - 4*s12*s23 + 
                    32*s13*s23))))/(12*p1q*(p2q + p3q)*s12*s13*(s12 + s13)*
               s23) - (3*(s12 + s13 + s23)*(2*(p2q + p3q)*s12*s13*
                 (s12 + s13 + s23)*(p3q*(-2*s12^2 - 2*s12*s13 - 3*s12*s23 + 
                    s13*s23) + p2q*(2*s12*s13 + 2*s13^2 - s12*s23 + 
                    3*s13*s23)) + p1q*(p3q*(s12^4*(4*s13 + s23) - 3*s12*s13^2*
                     s23*(2*s13 + 3*s23) - s13^2*s23*(s13^2 + 2*s13*s23 + 
                      2*s23^2) + s12^3*(8*s13^2 + 14*s13*s23 + 3*s23^2) + 
                    2*s12^2*(2*s13^3 + 4*s13^2*s23 + 6*s13*s23^2 + s23^3)) + 
                  p2q*(s12^4*s23 - s13^2*s23*(s13^2 + 2*s13*s23 + 2*s23^2) + 
                    s12^3*(-4*s13^2 + 6*s13*s23 + 3*s23^2) - s12*s13^2*
                     (4*s13^2 + 14*s13*s23 + 13*s23^2) + s12^2*(-8*s13^3 - 
                      8*s13^2*s23 + 8*s13*s23^2 + 2*s23^3))))*den[-1 + ep])/
              (2*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23^2) + 
             ((s12 + s13 + s23)*(9*p1q^2*(s12 - s13)*(s12 + s13)^3*s23 - 
                9*p3q^2*(s12^4*(24*s13 - s23) + s13^4*s23 - 2*s12*s13^2*s23*
                   (3*s13 + 4*s23) + 2*s12^3*s13*(24*s13 + 23*s23) + 
                  8*s12^2*s13*(3*s13^2 + 5*s13*s23 + 3*s23^2)) + 
                9*p2q^2*(2*s12^3*s13*(12*s13 - 5*s23) + s12^4*s23 + 
                  3*s13^4*s23 + 4*s12^2*s13*(12*s13^2 + 9*s13*s23 - 
                    2*s23^2) + 2*s12*s13^2*(12*s13^2 + 25*s13*s23 + 
                    12*s23^2)) - 18*p2q*p3q*(s12 - s13)*(s12^3*(12*s13 - 
                    s23) + s13^3*s23 + 3*s12^2*s13*(8*s13 + 9*s23) + 
                  s12*s13*(12*s13^2 + 29*s13*s23 + 16*s23^2)) + 
                p1q*p2q*(63*s12^4*s23 - s13^2*s23*(99*s13^2 + 76*s13*s23 + 
                    72*s23^2) - 6*s12*s13^2*(36*s13^2 + 117*s13*s23 + 
                    74*s23^2) + s12^3*(-216*s13^2 + 342*s13*s23 + 
                    140*s23^2) - 12*s12^2*(36*s13^3 + 27*s13^2*s23 - 
                    29*s13*s23^2 - 6*s23^3)) + p1q*p3q*(9*s12^4*(24*s13 + 
                    7*s23) - 6*s12*s13^2*s23*(51*s13 + 50*s23) + 2*s12^3*
                   (216*s13^2 + 333*s13*s23 + 70*s23^2) - s13^2*s23*
                   (63*s13^2 + 76*s13*s23 + 72*s23^2) + 12*s12^2*(18*s13^3 + 
                    30*s13^2*s23 + 41*s13*s23^2 + 6*s23^3)))*den[-3 + 2*ep])/
              (12*p1q*(p2q + p3q)*s12*s13*(s12 + s13)^3*s23^2))*
            p2 . E0conj)))*Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((-1/72*(ep^2*s12*(10*s12 + s13)*s23)/s13 + 
         (ep*(-9*p1q^2*s12*s23*(s13 + s23)*(s12 + s13 + s23) + 
            p3q^2*s12*(-9*s12^3 + 106*s12*s13*s23 + s13*(83*s13 - 81*s23)*
               s23 + s12^2*(9*s13 + 61*s23)) - p2q^2*(83*s13^2*s23*(s13 + 
                s23) + s12^2*(9*s13^2 + 79*s13*s23 + 70*s23^2) + 
              s12*s13*(-9*s13^2 + 88*s13*s23 + 178*s23^2)) - 
            p1q*p2q*(s13*s23*(2*s13^2 - 79*s13*s23 - 81*s23^2) + 
              s12^2*(9*s13^2 + 88*s13*s23 + 79*s23^2) + s12*(-9*s13^3 + 
                16*s13^2*s23 + 115*s13*s23^2 + 9*s23^3)) + 
            p3q*(p2q*(-83*s13^2*s23*(s13 + s23) + s12^3*(18*s13 + 79*s23) - 
                s12*s13*s23*(23*s13 + 268*s23) + s12^2*(-18*s13^2 + 
                  27*s13*s23 - 61*s23^2)) + p1q*(9*s12^3*(s13 + 2*s23) - 
                s12*s13*s23*(25*s13 + 106*s23) - s12^2*(9*s13^2 + 
                  61*s13*s23 + 52*s23^2) + s13*s23*(-2*s13^2 + 79*s13*s23 + 
                  81*s23^2)))))/(144*(p2q + p3q)*s13*(-(p3q*s12) + 
            (p1q + p2q)*(s13 + s23))) + 
         (18*p1q^4*s23^2*(-(s13^2*s23*(s13 + s23)^2) + 
             s12^2*(36*s13^3 + 54*s13^2*s23 + 32*s13*s23^2 + 5*s23^3) + 
             s12*(36*s13^4 + 89*s13^3*s23 + 85*s13^2*s23^2 + 37*s13*s23^3 + 5*
                s23^4)) + 9*(p2q + p3q)^2*s23*(s12 + s13 + s23)*
            (p3q^2*s12^2*(s12^2*(21*s13 + 10*s23) + 2*s13^2*(19*s13 + 
                 11*s23) + s12*s13*(59*s13 + 50*s23)) - p2q^2*s13*
              (s12*s13*(49*s13^2 + 17*s13*s23 - 14*s23^2) + s12^2*
                (33*s13^2 + 5*s13*s23 - 10*s23^2) + 2*s13^2*(8*s13^2 + 
                 15*s13*s23 + 7*s23^2)) + p2q*p3q*s12*(s12^2*(12*s13^2 - 
                 41*s13*s23 - 10*s23^2) - 5*s12*s13*(2*s13^2 + 21*s13*s23 + 
                 10*s23^2) - 2*s13^2*(11*s13^2 + 14*s13*s23 + 11*s23^2))) - 
           p1q^3*s23*(p2q*(18*s12^3*(36*s13^3 + 54*s13^2*s23 + 32*s13*s23^2 + 
                 5*s23^3) + s12^2*(648*s13^4 + 792*s13^3*s23 + 777*s13^2*
                  s23^2 + 379*s13*s23^3 + 70*s23^4) + 2*s13*s23*(63*s13^4 + 
                 205*s13^3*s23 + 444*s13^2*s23^2 + 442*s13*s23^3 + 
                 140*s23^4) + s12*(1296*s13^5 + 1926*s13^4*s23 + 1776*s13^3*
                  s23^2 + 947*s13^2*s23^3 - 57*s13*s23^4 - 20*s23^5)) + 
             p3q*(18*s12^3*(72*s13^3 + 144*s13^2*s23 + 91*s13*s23^2 + 
                 15*s23^3) + 2*s13*s23*(72*s13^4 + 214*s13^3*s23 + 
                 435*s13^2*s23^2 + 433*s13*s23^3 + 140*s23^4) + s12^2*
                (648*s13^4 + 2718*s13^3*s23 + 3981*s13^2*s23^2 + 
                 2107*s13*s23^3 + 340*s23^4) + s12*(648*s13^5 + 954*s13^4*
                  s23 + 1956*s13^3*s23^2 + 1937*s13^2*s23^3 + 519*s13*s23^4 + 
                 70*s23^5))) - p1q*(p3q^3*s12*(18*s12^4*(36*s13^2 + 
                 27*s13*s23 + 5*s23^2) + 2*s13^2*s23*(252*s13^3 + 
                 511*s13^2*s23 + 581*s13*s23^2 + 158*s23^3) + s12^2*s23*
                (1692*s13^3 + 3543*s13^2*s23 + 1977*s13*s23^2 + 250*s23^3) + 
               s12^3*(648*s13^3 + 981*s13^2*s23 + 1173*s13*s23^2 + 
                 340*s23^3) + s12*s13*s23*(1053*s13^3 + 4130*s13^2*s23 + 
                 3114*s13*s23^2 + 1160*s23^3)) + p2q*p3q^2*(18*s12^5*s23*
                (27*s13 + 5*s23) + s12^4*(-1944*s13^3 - 1746*s13^2*s23 + 
                 1005*s13*s23^2 + 410*s23^3) + s12*s13*s23*(2043*s13^4 + 
                 1748*s13^3*s23 + 156*s13^2*s23^2 - 1077*s13*s23^3 - 
                 710*s23^4) + 2*s12^2*s23*(846*s13^4 + 2858*s13^3*s23 + 
                 1587*s13^2*s23^2 + 231*s13*s23^3 - 80*s23^4) + 2*s13^2*s23*
                (72*s13^4 + 218*s13^3*s23 + 78*s13^2*s23^2 - 127*s13*s23^3 - 
                 59*s23^4) + s12^3*(-1944*s13^4 - 495*s13^3*s23 + 
                 4671*s13^2*s23^2 + 1991*s13*s23^3 + 160*s23^4)) - 
             p2q^2*p3q*(s12^4*s23*(783*s13^2 + 168*s13*s23 - 70*s23^2) + 4*
                s13^2*s23*(-36*s13^4 - 110*s13^3*s23 + 102*s13^2*s23^2 + 
                 307*s13*s23^3 + 131*s23^4) + s12^3*(-1944*s13^4 - 
                 4590*s13^3*s23 - 3636*s13^2*s23^2 + 275*s13*s23^3 + 
                 160*s23^4) + s12*s13*s23*(-3096*s13^4 - 1429*s13^3*s23 + 
                 2868*s13^2*s23^2 + 2823*s13*s23^3 + 970*s23^4) + s12^2*
                (-1944*s13^5 - 6381*s13^4*s23 - 4145*s13^3*s23^2 + 
                 1212*s13^2*s23^3 + 1287*s13*s23^4 + 230*s23^5)) + 
             p2q^3*(2*s13^2*s23^2*(2*s13^3 - 282*s13^2*s23 - 487*s13*s23^2 - 
                 203*s23^3) + s12^3*s23*(945*s13^3 + 564*s13^2*s23 - 
                 289*s13*s23^2 - 70*s23^3) - s12^2*(648*s13^5 + 90*s13^4*
                  s23 + 1329*s13^3*s23^2 + 1920*s13^2*s23^3 + 589*s13*s23^4 + 
                 70*s23^5) - s12*s13*(648*s13^5 + 387*s13^4*s23 + 
                 1241*s13^3*s23^2 + 2510*s13^2*s23^3 + 1430*s13*s23^4 + 
                 260*s23^5))) + p1q^2*(p3q^2*(18*s12^4*(36*s13^3 + 
                 126*s13^2*s23 + 86*s13*s23^2 + 15*s23^3) + 2*s13^2*s23^2*
                (70*s13^3 + 282*s13^2*s23 + 271*s13*s23^2 + 59*s23^3) + s12^2*
                s23*(1296*s13^4 + 3534*s13^3*s23 + 4758*s13^2*s23^2 + 
                 1767*s13*s23^3 + 230*s23^4) + s12^3*(648*s13^4 + 
                 1764*s13^3*s23 + 3432*s13^2*s23^2 + 2425*s13*s23^3 + 
                 500*s23^4) + s12*s13*s23*(-144*s13^4 + 2402*s13^3*s23 + 
                 3847*s13^2*s23^2 + 2781*s13*s23^3 + 990*s23^4)) + 
             p2q*p3q*(18*s12^4*s23*(54*s13^2 + 59*s13*s23 + 10*s23^2) + s12^3*
                (-1296*s13^4 - 3096*s13^3*s23 - 1119*s13^2*s23^2 + 
                 986*s13*s23^3 + 300*s23^4) + 2*s13*s23*(72*s13^5 + 
                 284*s13^4*s23 + 791*s13^3*s23^2 + 629*s13^2*s23^3 - 
                 90*s13*s23^4 - 140*s23^5) + s12*s23*(-1440*s13^5 + 
                 2725*s13^4*s23 + 5166*s13^3*s23^2 + 2616*s13^2*s23^3 + 
                 731*s13*s23^4 - 70*s23^5) + s12^2*(-1296*s13^5 - 
                 1764*s13^4*s23 + 1992*s13^3*s23^2 + 3750*s13^2*s23^3 + 
                 825*s13*s23^4 + 50*s23^5)) + p2q^2*(-(s12^3*s23*(972*s13^3 + 
                  1167*s13^2*s23 + 377*s13*s23^2 + 20*s23^3)) + 2*s13*s23*
                (72*s13^5 + 223*s13^4*s23 + 527*s13^3*s23^2 + 367*s13^2*
                  s23^3 - 149*s13*s23^4 - 140*s23^5) + 6*s12^2*(108*s13^5 + 
                 138*s13^4*s23 + 307*s13^3*s23^2 + 135*s13^2*s23^3 - 
                 76*s13*s23^4 - 15*s23^5) + s12*(648*s13^6 + 827*s13^4*
                  s23^2 + 905*s13^3*s23^3 - 525*s13^2*s23^4 - 349*s13*s23^5 - 
                 70*s23^6))))/(288*p1q*(p2q + p3q)*s13^2*s23*
           (p3q^2*s12*(s12 + s13) - p2q^2*(s12 + s13)*(s13 + s23) + 
            p1q^2*s23*(s13 + s23) + p2q*(p3q*(s12 + s13)*(s12 - s13 - s23) - 
              p1q*(s12 + s13 - s23)*(s13 + s23)) - p1q*p3q*(s13*(s13 + s23) + 
              s12*(s13 + 2*s23)))) + 
         (s12*(-90*p1q^2*s23^2*(s12 + s13 + s23) - 9*p3q^2*s12*
             (s12 + s13 + s23)*(33*s13 + 10*s23) - 9*p2q*p3q*(s12 - s13)*
             (s12 + s13 + s23)*(33*s13 + 10*s23) + 9*p2q^2*s13*
             (s12 + s13 + s23)*(33*s13 + 10*s23) + p1q*p3q*s23*
             (90*s12^2 + 177*s12*s13 - 624*s13^2 + 160*s12*s23 + 
              267*s13*s23 + 70*s23^2) + p1q*p2q*s23*(177*s12*s13 - 
              534*s13^2 + 70*s12*s23 + 357*s13*s23 + 70*s23^2))*
           den[-1 + 2*ep])/(288*p1q*(p2q + p3q)*s13^2))*E0 . E0conj + 
       (-1/72*(ep^2*(10*s12 + s13)*(s12^2 - s13*s23 + s12*(s13 + s23)))/
           s13^2 + (ep*(-18*p1q^5*s12*(5*s12 + 4*s13)*s23^3*(s13 + s23)*
             (s12 + s13 + s23) + 18*(5*s12 + 4*s13)*(-(p3q*s12) + p2q*s13)^3*
             (s12 + s13 + s23)*(-(p3q^2*s12*s23) + p2q^2*(s12 - s13 + s23)*(
                s13 + s23) + p2q*p3q*(-s12^2 + s12*(s13 - s23) + 
                s23*(s13 + s23))) + p1q^4*s23^2*
             (p3q*(90*s12^4*(3*s13 + 4*s23) + 4*s12^3*(69*s13^2 + 
                  172*s13*s23 + 85*s23^2) + s12^2*(75*s13^3 + 13*s13^2*s23 - 
                  12*s13*s23^2 + 50*s23^3) + s12*(105*s13^4 - 240*s13^3*s23 - 
                  141*s13^2*s23^2 + 112*s13*s23^3 + 70*s23^4) + 
                s13*(36*s13^4 + 237*s13^3*s23 + 131*s13^2*s23^2 + 
                  22*s13*s23^3 + 92*s23^4)) + p2q*(20*s12^3*(3*s13^2 + 
                  2*s13*s23 - s23^2) + 5*s12^2*(69*s13^3 + 71*s13^2*s23 + 
                  12*s13*s23^2 + 10*s23^3) + s12*(321*s13^4 + 354*s13^3*s23 + 
                  327*s13^2*s23^2 + 202*s13*s23^3 + 70*s23^4) + 
                s13*(36*s13^4 + 309*s13^3*s23 + 275*s13^2*s23^2 + 
                  94*s13*s23^3 + 92*s23^4))) - p1q*(p3q^4*s12^2*(90*s12^5 + 
                162*s13^3*s23*(s13 + s23) + s12^4*(-48*s13 + 70*s23) + 
                s12^3*(-69*s13^2 - 188*s13*s23 + 320*s23^2) + s12*s13*
                 (36*s13^3 + 597*s13^2*s23 + 218*s13*s23^2 + 308*s23^3) + 
                s12^2*(105*s13^3 - 21*s13^2*s23 + 618*s13*s23^2 + 
                  340*s23^3)) + p2q^3*p3q*s13*(-10*s12^4*(18*s13^2 + 
                  3*s13*s23 - 14*s23^2) + s12^3*(327*s13^3 + 608*s13^2*s23 + 
                  514*s13*s23^2 + 280*s23^3) + s13^2*(-36*s13^4 - 147*s13^3*
                   s23 + 31*s13^2*s23^2 + 194*s13*s23^3 + 52*s23^4) + 
                2*s12^2*(165*s13^4 + 499*s13^3*s23 + 795*s13^2*s23^2 + 
                  419*s13*s23^3 + 70*s23^4) + 3*s12*s13*(-71*s13^4 + 
                  407*s13^3*s23 + 327*s13^2*s23^2 + 218*s13*s23^3 + 
                  98*s23^4)) + p2q^4*s13^2*(10*s12^3*(3*s13^2 + 14*s13*s23 + 
                  11*s23^2) + s12^2*(-93*s13^3 - 121*s13^2*s23 + 192*s13*
                   s23^2 + 220*s23^3) + s13*(36*s13^4 - 381*s13^3*s23 - 
                  491*s13^2*s23^2 - 22*s13*s23^3 + 52*s23^4) + 
                s12*(-87*s13^4 - 372*s13^3*s23 - 453*s13^2*s23^2 + 
                  104*s13*s23^3 + 110*s23^4)) - p2q*p3q^3*s12*(50*s12^5*
                 (6*s13 - 5*s23) + 324*s13^4*s23*(s13 + s23) - 
                s12^4*(237*s13^2 + 226*s13*s23 + 610*s23^2) - 2*s12^3*
                 (147*s13^3 + 315*s13^2*s23 + 202*s13*s23^2 + 55*s23^3) + 
                s12*s13*(108*s13^4 + 1341*s13^3*s23 + 405*s13^2*s23^2 + 
                  710*s13*s23^3 + 236*s23^4) + s12^2*(351*s13^4 - 501*s13^3*
                   s23 + 949*s13^2*s23^2 + 718*s13*s23^3 + 250*s23^4)) + 
              p2q^2*p3q^2*(162*s13^5*s23*(s13 + s23) + 10*s12^5*(36*s13^2 - 
                  36*s13*s23 - 25*s23^2) - s12^4*(423*s13^3 + 783*s13^2*s23 + 
                  1316*s13*s23^2 + 500*s23^3) + s12^2*s13*(423*s13^4 - 
                  1320*s13^3*s23 - 159*s13^2*s23^2 - 254*s13*s23^3 - 
                  96*s23^4) + s12*s13^2*(108*s13^4 + 891*s13^3*s23 + 
                  156*s13^2*s23^2 + 208*s13*s23^3 + 184*s23^4) - 
                s12^3*(468*s13^4 + 1068*s13^3*s23 + 1861*s13^2*s23^2 + 
                  1052*s13*s23^3 + 250*s23^4))) - p1q^3*s23*
             (p3q^2*(162*s13^3*s23^2*(s13 + s23) + 270*s12^5*(s13 + 2*s23) + 
                s12^4*(66*s13^2 + 572*s13*s23 + 480*s23^2) - 
                s12^3*(66*s13^3 + 475*s13^2*s23 + 428*s13*s23^2 - 
                  240*s23^3) + s12^2*(210*s13^4 - 375*s13^3*s23 - 303*s13^2*
                   s23^2 + 518*s13*s23^3 + 300*s23^4) + s12*s13*(72*s13^4 + 
                  510*s13^3*s23 + 859*s13^2*s23^2 + 118*s13*s23^3 + 
                  348*s23^4)) + p2q^2*(-10*s12^3*(15*s13^3 + 16*s13^2*s23 + 
                  8*s13*s23^2 + 7*s23^3) + s12^2*(852*s13^4 + 185*s13^3*s23 - 
                  415*s13^2*s23^2 - 212*s13*s23^3 - 140*s23^4) + 
                s13*(72*s13^5 + 978*s13^4*s23 + 961*s13^3*s23^2 + 165*s13^2*
                   s23^3 + 18*s13*s23^4 - 92*s23^5) + s12*(1074*s13^5 + 
                  1485*s13^4*s23 + 894*s13^3*s23^2 - 157*s13^2*s23^3 - 
                  224*s13*s23^4 - 70*s23^5)) + p2q*p3q*(-10*s12^4*
                 (24*s13^2 + 22*s13*s23 - 3*s23^2) + s12^3*(-378*s13^3 - 
                  293*s13^2*s23 + 122*s13*s23^2 + 350*s23^3) + 2*s12^2*
                 (360*s13^4 - 113*s13^3*s23 + 172*s13^2*s23^2 + 540*s13*
                   s23^3 + 125*s23^4) + s13*(72*s13^5 + 762*s13^4*s23 + 
                  763*s13^3*s23^2 + 255*s13^2*s23^3 + 90*s13*s23^4 - 
                  92*s23^5) + s12*(930*s13^5 + 1293*s13^4*s23 + 1519*s13^3*
                   s23^2 + 375*s13^2*s23^3 + 286*s13*s23^4 - 70*s23^5))) + 
            p1q^2*(p3q^3*s12*(324*s13^3*s23^2*(s13 + s23) + 90*s12^5*
                 (s13 + 4*s23) + s12^4*(-48*s13^2 + 88*s13*s23 + 300*s23^2) - 
                s12^3*(69*s13^3 + 413*s13^2*s23 + 532*s13*s23^2 - 
                  420*s23^3) + s12^2*(105*s13^4 - 30*s13^3*s23 - 183*s13^2*
                   s23^2 + 862*s13*s23^3 + 480*s23^4) + s12*s13*(36*s13^4 + 
                  309*s13^3*s23 + 1325*s13^2*s23^2 + 242*s13*s23^3 + 
                  492*s23^4)) + p2q^3*s13*(-10*s12^3*(12*s13^3 + 8*s13^2*
                   s23 + s13*s23^2 + 5*s23^3) + s12^2*(21*s13^4 - 659*s13^3*
                   s23 - 578*s13^2*s23^2 - 322*s13*s23^3 - 100*s23^4) + 
                s13*(36*s13^5 + 705*s13^4*s23 + 377*s13^3*s23^2 - 348*s13^2*
                   s23^3 - 168*s13*s23^4 - 112*s23^5) + s12*(177*s13^5 - 
                  108*s13^4*s23 - 291*s13^3*s23^2 - 866*s13^2*s23^3 - 
                  424*s13*s23^4 - 50*s23^5)) + p2q*p3q^2*(324*s13^4*s23^2*
                 (s13 + s23) - 10*s12^5*(30*s13^2 + 56*s13*s23 - 21*s23^2) + 
                s12^4*(117*s13^3 - 331*s13^2*s23 + 216*s13*s23^2 + 
                  730*s23^3) + s12^3*(315*s13^4 + 1114*s13^3*s23 + 
                  897*s13^2*s23^2 + 1498*s13*s23^3 + 290*s23^4) + 
                s12^2*(-174*s13^5 + 717*s13^4*s23 + 2297*s13^3*s23^2 + 
                  60*s13^2*s23^3 - 74*s13*s23^4 - 230*s23^5) - 2*s12*s13*
                 (36*s13^5 + 399*s13^4*s23 - 319*s13^3*s23^2 - 29*s13^2*
                   s23^3 + 130*s13*s23^4 + 128*s23^5)) + p2q^2*p3q*(
                10*s12^4*(33*s13^3 + 28*s13^2*s23 - 8*s13*s23^2 - 23*s23^3) - 
                2*s12^3*(45*s13^4 - 451*s13^3*s23 - 85*s13^2*s23^2 + 
                  328*s13*s23^3 + 230*s23^4) + s12*s13*(33*s13^5 - 
                  1392*s13^4*s23 + 185*s13^3*s23^2 - 286*s13^2*s23^3 - 
                  414*s13*s23^4 - 306*s23^5) + s13^2*(36*s13^5 + 489*s13^4*
                   s23 + 485*s13^3*s23^2 + 192*s13^2*s23^3 + 48*s13*s23^4 - 
                  112*s23^5) - s12^2*(423*s13^5 + 593*s13^4*s23 - 790*s13^3*
                   s23^2 + 432*s13^2*s23^3 + 882*s13*s23^4 + 230*s23^5)))))/
          (144*p1q*(p2q + p3q)*s13^3*(-(p3q^3*s12^3) + (p1q + p2q)*
             (s13 + s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*
             (p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (18*p2q^6*s13^3*(25*s12^4*s23*(s13 + s23) - 2*s13^2*s23*
              (s13 + s23)^2*(8*s13 + 5*s23) + s12^3*(-144*s13^3 + 2*s13^2*
                s23 + 96*s13*s23^2 + 40*s23^3) + s12*s13*(-144*s13^4 - 152*
                s13^3*s23 + 31*s13^2*s23^2 + 26*s13*s23^3 - 13*s23^4) - 
             3*s12^2*(96*s13^4 + 53*s13^3*s23 - 24*s13^2*s23^2 - 16*s13*
                s23^3 - 5*s23^4)) - p2q^5*s13^2*
            (18*p3q*(2*s13^3*s23*(s13 + s23)^2*(24*s13 + s23) + 25*s12^5*s23*
                (4*s13 + 3*s23) + s12^4*(-432*s13^3 + 70*s13^2*s23 + 
                 292*s13*s23^2 + 130*s23^3) + s12^2*s13*(144*s13^4 + 
                 14*s13^3*s23 + 158*s13^2*s23^2 + 15*s13*s23^3 - 51*s23^4) + 
               2*s12*s13^2*(144*s13^4 + 162*s13^3*s23 - 27*s13^2*s23^2 - 
                 52*s13*s23^3 - 7*s23^4) + s12^3*(-576*s13^4 - 292*s13^3*
                  s23 + 167*s13^2*s23^2 + 121*s13*s23^3 + 55*s23^4)) + 
             p1q*(30*s12^4*s23*(-s13^2 + 16*s13*s23 + 17*s23^2) - s13^2*s23*
                (360*s13^4 + 413*s13^3*s23 + 1115*s13^2*s23^2 + 1286*s13*
                  s23^3 + 224*s23^4) + s12^3*(2592*s13^4 - 4131*s13^3*s23 + 
                 293*s13^2*s23^2 + 2816*s13*s23^3 + 660*s23^4) + s12*s13*
                (2592*s13^5 - 8679*s13^4*s23 - 12743*s13^3*s23^2 + 
                 2842*s13^2*s23^3 + 4690*s13*s23^4 + 52*s23^5) + s12^2*
                (5184*s13^5 - 12420*s13^4*s23 - 6037*s13^3*s23^2 + 
                 6641*s13^2*s23^3 + 2028*s13*s23^4 + 150*s23^5))) + 
           s23*(p3q*s12 - p1q*s23)^2*(18*p3q^4*s12*(25*s12^4*s23 + s12^2*s13*
                (-44*s13^2 - 36*s13*s23 + 5*s23^2) - 2*s13^3*(s13^2 + 
                 10*s13*s23 + 9*s23^2) - s12*s13^2*(25*s13^2 + 61*s13*s23 + 
                 20*s23^2) + s12^3*(-21*s13^2 + 30*s13*s23 + 25*s23^2)) + 
             18*p1q^4*s23*(25*s12^3*s23*(s13 + s23) - 2*s13^3*(s13 + s23)^2 - 
               s12*s13*(41*s13^3 + 82*s13^2*s23 + 61*s13*s23^2 + 20*s23^3) + 
               s12^2*(-39*s13^3 - 16*s13^2*s23 + 30*s13*s23^2 + 25*s23^3)) + 
             p1q*p3q^3*(-450*s12^6 - 30*s12^5*(7*s13 + 13*s23) + s12^4*
                (-2061*s13^2 + 590*s13*s23 - 1230*s23^2) + 36*s13^3*
                (10*s13^3 + 20*s13^2*s23 + 19*s13*s23^2 + 9*s23^3) + s12^2*
                s13*(1365*s13^3 + 1750*s13^2*s23 + 2532*s13*s23^2 + 
                 520*s23^3) + s12*s13^2*(2070*s13^3 + 3043*s13^2*s23 + 
                 1476*s13*s23^2 + 1000*s23^3) - s12^3*(2646*s13^3 + 
                 889*s13^2*s23 + 480*s13*s23^2 + 1290*s23^3)) + 
             p1q^2*p3q^2*(450*s12^5*(s13 + 3*s23) + s12^4*(-168*s13^2 + 
                 900*s13*s23 + 1230*s23^2) + s12^3*(2565*s13^3 + 2674*s13^2*
                  s23 - 1600*s13*s23^2 + 1110*s23^3) + s12*s13*(363*s13^4 - 
                 1891*s13^3*s23 - 4067*s13^2*s23^2 - 2890*s13*s23^3 - 
                 1250*s23^4) + 2*s12^2*(2097*s13^4 + 2984*s13^3*s23 + 
                 1196*s13^2*s23^2 - 300*s13*s23^3 + 615*s23^4) - s13^2*
                (648*s13^4 + 2143*s13^3*s23 + 1513*s13^2*s23^2 + 
                 658*s13*s23^3 + 640*s23^4)) + p1q^3*p3q*(-450*s12^4*s23*
                (2*s13 + 3*s23) + 6*s12^3*(117*s13^3 + 76*s13^2*s23 - 
                 205*s13*s23^2 - 215*s23^3) + s12^2*(468*s13^4 - 1419*s13^3*
                  s23 + 425*s13^2*s23^2 + 1370*s13*s23^3 - 330*s23^4) + 3*s12*
                (42*s13^5 - 793*s13^4*s23 - 1452*s13^3*s23^2 - 415*s13^2*
                  s23^3 + 180*s13*s23^4 - 130*s23^5) + s13*(360*s13^5 + 
                 1692*s13^4*s23 + 3115*s13^3*s23^2 + 2089*s13^2*s23^3 + 
                 946*s13*s23^4 + 640*s23^5))) + p2q^4*s13*
            (18*p3q^2*(-2*s13^4*(6*s13 - 13*s23)*s23*(s13 + s23)^2 + 75*s12^6*
                s23*(2*s13 + s23) - s12*s13^3*(3*s13 + s23)^2*(16*s13^2 - 
                 15*s13*s23 - 31*s23^2) + s12^4*s23*(-137*s13^3 - 
                 7*s13^2*s23 + 48*s13*s23^2 + 65*s23^3) + s12^5*(-432*s13^3 + 
                 119*s13^2*s23 + 321*s13*s23^2 + 140*s23^3) + s12^3*s13*
                (1152*s13^4 + 752*s13^3*s23 + 129*s13^2*s23^2 - 178*s13*
                  s23^3 - 113*s23^4) + s12^2*s13^2*(576*s13^4 + 909*s13^3*
                  s23 + 13*s13^2*s23^2 - 87*s13*s23^3 + 7*s23^4)) + 
             p1q^2*s23*(6*s12^4*(146*s13^3 + 342*s13^2*s23 - 75*s13*s23^2 - 
                 55*s23^3) + s12^3*(8685*s13^4 + 6247*s13^3*s23 + 
                 3326*s13^2*s23^2 + 388*s13*s23^3 - 840*s23^4) + 2*s12^2*
                (11115*s13^5 + 1751*s13^4*s23 + 53*s13^3*s23^2 + 4377*s13^2*
                  s23^3 + 537*s13*s23^4 - 255*s23^5) + s12*s13*(15429*s13^5 + 
                 8000*s13^4*s23 - 9986*s13^3*s23^2 + 2521*s13^2*s23^3 + 
                 6790*s13*s23^4 + 416*s23^5) + s13^2*(1008*s13^5 + 
                 2213*s13^4*s23 + 5204*s13^3*s23^2 + 3953*s13^2*s23^3 + 
                 686*s13*s23^4 + 732*s23^5)) + p1q*p3q*(-30*s12^5*s23*
                (-12*s13^2 + 11*s13*s23 + 26*s23^2) + s12^4*(5184*s13^4 + 
                 1509*s13^3*s23 + 2250*s13^2*s23^2 - 1586*s13*s23^3 - 
                 1200*s23^4) - 2*s13^3*s23*(432*s13^4 + 1279*s13^3*s23 + 
                 307*s13^2*s23^2 - 188*s13*s23^3 + 352*s23^4) + s12^3*
                (5184*s13^5 - 1980*s13^4*s23 + 5981*s13^3*s23^2 + 
                 5262*s13^2*s23^3 + 942*s13*s23^4 - 420*s23^5) - s12*s13^2*
                (5184*s13^5 - 8610*s13^4*s23 - 16705*s13^3*s23^2 + 
                 3486*s13^2*s23^3 + 6830*s13*s23^4 + 282*s23^5) + s12^2*s13*
                (-5184*s13^5 + 6345*s13^4*s23 - 1960*s13^3*s23^2 + 
                 1378*s13^2*s23^3 + 4854*s13*s23^4 + 1838*s23^5))) + 
           p2q^3*(-18*p3q^3*(25*s12^7*s23*(4*s13 + s23) - 2*s13^5*s23*
                (s13 + s23)^2*(10*s13 + 9*s23) + s12*s13^4*s23*(-169*s13^3 - 
                 194*s13^2*s23 + 7*s13*s23^2 + 32*s23^3) + s12^3*s13^2*s23*
                (530*s13^3 + 31*s13^2*s23 + 54*s13*s23^2 + 41*s23^3) + s12^6*
                (-144*s13^3 + 11*s13^2*s23 + 150*s13*s23^2 + 50*s23^3) + 
               s12^4*s13*(1152*s13^4 + 814*s13^3*s23 - 122*s13^2*s23^2 - 
                 322*s13*s23^3 - 125*s23^4) + s12^5*(576*s13^4 - 
                 69*s13^3*s23 - 302*s13^2*s23^2 - 75*s13*s23^3 + 25*s23^4) + 
               s12^2*s13^3*(-432*s13^4 - 413*s13^3*s23 + 310*s13^2*s23^2 + 
                 242*s13*s23^3 + 61*s23^4)) + p1q*p3q^2*(30*s12^6*s23*
                (-42*s13^2 + 70*s13*s23 + 43*s23^2) - s13^4*s23*(864*s13^4 + 
                 3619*s13^3*s23 + 4429*s13^2*s23^2 + 3250*s13*s23^3 + 
                 1576*s23^4) + s12^5*(-2592*s13^4 - 4833*s13^3*s23 + 
                 1161*s13^2*s23^2 + 4240*s13*s23^3 + 2580*s23^4) + 2*s12^3*
                s13*(7776*s13^5 + 4230*s13^4*s23 + 6623*s13^3*s23^2 + 
                 2005*s13^2*s23^3 - 1140*s13*s23^4 - 1040*s23^5) + s12*s13^3*
                (-2592*s13^5 + 4449*s13^4*s23 + 5549*s13^3*s23^2 - 
                 8634*s13^2*s23^3 - 6430*s13*s23^4 + 42*s23^5) + 3*s12^4*
                (1728*s13^5 + 1828*s13^4*s23 - 89*s13^3*s23^2 - 713*s13^2*
                  s23^3 + 20*s13*s23^4 + 430*s23^5) + 2*s12^2*s13^2*
                (2592*s13^5 + 2358*s13^4*s23 - 5977*s13^3*s23^2 + 
                 1349*s13^2*s23^3 + 3714*s13*s23^4 + 1500*s23^5)) + 
             p1q^2*p3q*s23*(-6*s12^5*(s13^3 - 160*s13^2*s23 + 140*s13*s23^2 + 
                 205*s23^3) + 2*s12^4*(741*s13^4 + 2489*s13^3*s23 - 
                 844*s13^2*s23^2 - 1030*s13*s23^3 - 1230*s23^4) + s12^3*
                (3078*s13^5 + 1467*s13^4*s23 - 7990*s13^3*s23^2 + 
                 2690*s13^2*s23^3 - 1410*s13*s23^4 - 1230*s23^5) + 2*s12^2*
                s13*(9447*s13^5 - 9067*s13^4*s23 - 14756*s13^3*s23^2 - 
                 2666*s13^2*s23^3 + 2416*s13*s23^4 - 95*s23^5) + s12*s13^2*
                (17664*s13^5 + 3783*s13^4*s23 - 29225*s13^3*s23^2 - 
                 15221*s13^2*s23^3 + 1654*s13*s23^4 + 754*s23^5) + s13^3*
                (360*s13^5 + 2518*s13^4*s23 + 9561*s13^3*s23^2 + 6177*s13^2*
                  s23^3 + 930*s13*s23^4 + 2156*s23^5)) + 
             p1q^3*s23*(6*s12^4*s23*(281*s13^3 + 90*s13^2*s23 + 
                 90*s13*s23^2 + 65*s23^3) + s12^3*(702*s13^5 - 1560*s13^4*
                  s23 + 1171*s13^3*s23^2 + 2765*s13^2*s23^3 + 760*s13*s23^4 + 
                 780*s23^5) + 3*s13^2*(120*s13^6 - 120*s13^5*s23 - 
                 653*s13^4*s23^2 - 2478*s13^3*s23^3 - 2259*s13^2*s23^4 - 
                 666*s13*s23^5 - 472*s23^6) + 3*s12^2*(1020*s13^6 - 
                 7223*s13^5*s23 - 2943*s13^4*s23^2 + 1753*s13^3*s23^3 - 
                 169*s13^2*s23^4 + 160*s13*s23^5 + 130*s23^6) + s12*s13*
                (2718*s13^6 - 17487*s13^5*s23 - 25603*s13^4*s23^2 - 
                 3140*s13^3*s23^3 + 874*s13^2*s23^4 - 3068*s13*s23^5 + 
                 260*s23^6))) + p2q^2*(18*p3q^4*s12*(25*s12^7*s23 + 5*s12^6*
                s23*(-13*s13 + 5*s23) + s12^5*(288*s13^3 - 100*s13^2*s23 - 
                 275*s13*s23^2 - 50*s23^3) - s12*s13^3*s23*(327*s13^3 + 
                 455*s13^2*s23 + 126*s13*s23^2 + 14*s23^3) - 2*s13^4*s23*
                (21*s13^3 + 68*s13^2*s23 + 65*s13*s23^2 + 18*s23^3) + s12^4*
                (144*s13^4 + 188*s13^3*s23 - 129*s13^2*s23^2 - 180*s13*
                  s23^3 - 50*s23^4) + s12^2*s13^2*(-432*s13^4 - 795*s13^3*
                  s23 - 83*s13^2*s23^2 + 94*s13*s23^3 + 37*s23^4) + s12^3*s13*
                (-576*s13^4 - 312*s13^3*s23 + 47*s13^2*s23^2 + 158*s13*
                  s23^3 + 55*s23^4)) + p1q^2*p3q^2*s23*(-30*s12^6*
                (44*s13^2 + 74*s13*s23 - 39*s23^2) + s12^5*(1239*s13^3 + 
                 1249*s13^2*s23 - 2790*s13*s23^2 + 1290*s23^3) + 2*s12^4*
                (7557*s13^4 + 15102*s13^3*s23 - 1769*s13^2*s23^2 - 
                 1945*s13*s23^3 - 1815*s23^4) + s12^3*(16986*s13^5 + 
                 46664*s13^4*s23 + 16726*s13^3*s23^2 - 3695*s13^2*s23^3 - 
                 3930*s13*s23^4 - 3750*s23^5) + s13^3*(-648*s13^5 - 
                 1063*s13^4*s23 + 3781*s13^3*s23^2 + 4852*s13^2*s23^3 + 
                 2404*s13*s23^4 + 1748*s23^5) + s12*s13^2*(6123*s13^5 + 
                 1239*s13^4*s23 - 3469*s13^3*s23^2 + 4150*s13^2*s23^3 + 
                 3200*s13*s23^4 + 1978*s23^5) + s12^2*s13*(11202*s13^5 + 
                 10567*s13^4*s23 + 17694*s13^3*s23^2 + 10341*s13^2*s23^3 + 
                 8350*s13*s23^4 + 2090*s23^5)) + p1q*p3q^3*(30*s12^7*
                (44*s13 - 43*s23)*s23 + s12^6*s23*(-1467*s13^2 + 
                 2900*s13*s23 - 1350*s23^2) + s12*s13^3*s23*(3798*s13^4 + 
                 3765*s13^3*s23 - 3490*s13^2*s23^2 - 3336*s13*s23^3 - 
                 376*s23^4) + 36*s13^4*s23*(10*s13^4 - 39*s13^2*s23^2 - 
                 47*s13*s23^3 - 18*s23^4) + s12^5*(-5184*s13^4 - 13446*s13^3*
                  s23 + 2189*s13^2*s23^2 + 9260*s13*s23^3 + 2970*s23^4) + 2*
                s12^3*s13*(2592*s13^5 + 1062*s13^4*s23 + 1052*s13^3*s23^2 - 
                 2495*s13^2*s23^3 - 2902*s13*s23^4 - 1045*s23^5) + 3*s12^2*
                s13^2*(1728*s13^5 + 1809*s13^4*s23 - 1950*s13^3*s23^2 - 
                 262*s13^2*s23^3 - 224*s13*s23^4 - 116*s23^5) + s12^4*
                (-5184*s13^5 - 10524*s13^4*s23 - 8426*s13^3*s23^2 + 
                 4860*s13^2*s23^3 + 7390*s13*s23^4 + 3030*s23^5)) - 
             p1q^4*s23^2*(60*s12^4*s23*(-8*s13^2 - 7*s13*s23 + s23^2) + s12^3*
                (1404*s13^4 + 453*s13^3*s23 - 1075*s13^2*s23^2 + 
                 260*s13*s23^3 + 60*s23^4) + s12^2*(6822*s13^5 - 3576*s13^4*
                  s23 - 3372*s13^3*s23^2 + 2080*s13^2*s23^3 - 20*s13*s23^4 + 
                 390*s23^5) + s13*(756*s13^6 + 2376*s13^5*s23 + 4197*s13^4*
                  s23^2 + 956*s13^3*s23^3 - 1015*s13^2*s23^4 - 34*s13*s23^5 - 
                 640*s23^6) + s12*(6174*s13^6 + 1125*s13^5*s23 - 8888*s13^4*
                  s23^2 - 2474*s13^3*s23^3 + 1381*s13^2*s23^4 - 890*s13*
                  s23^5 + 390*s23^6)) + p1q^3*p3q*s23*(30*s12^5*s23*
                (28*s13^2 + 16*s13*s23 - 9*s23^2) + s12^4*(-1404*s13^4 + 
                 534*s13^3*s23 - 617*s13^2*s23^2 + 1320*s13*s23^3 - 
                 330*s23^4) - s12^3*(5418*s13^5 + 26550*s13^4*s23 + 
                 20554*s13^3*s23^2 - 5709*s13^2*s23^3 + 440*s13*s23^4 - 
                 1950*s23^5) + s13^2*(360*s13^6 + 972*s13^5*s23 + 
                 23*s13^4*s23^2 - 8495*s13^3*s23^3 - 5750*s13^2*s23^4 + 
                 100*s13*s23^5 - 2056*s23^6) - s12^2*(4968*s13^6 + 
                 57435*s13^5*s23 + 51324*s13^4*s23^2 + 7558*s13^3*s23^3 - 
                 3018*s13^2*s23^4 + 1110*s13*s23^5 - 2010*s23^6) - s12*s13*
                (594*s13^6 + 28923*s13^5*s23 + 39476*s13^4*s23^2 + 
                 10110*s13^3*s23^3 + 852*s13^2*s23^4 + 4944*s13*s23^5 + 
                 1630*s23^6))) + p2q*(18*p3q^5*s12^2*(25*s12^6*s23 + 5*s12^5*
                s23*(7*s13 + 15*s23) + 2*s13^3*s23*(12*s13^3 + 49*s13^2*s23 + 
                 46*s13*s23^2 + 9*s23^3) + s12*s13^2*s23*(195*s13^3 + 
                 320*s13^2*s23 + 113*s13*s23^2 + 20*s23^3) + s12^4*
                (144*s13^3 + 40*s13^2*s23 - 20*s13*s23^2 + 25*s23^3) + s12^3*
                (288*s13^4 + 294*s13^3*s23 - 71*s13^2*s23^2 - 110*s13*s23^3 - 
                 25*s23^4) + s12^2*s13*(144*s13^4 + 435*s13^3*s23 + 
                 174*s13^2*s23^2 - 6*s13*s23^3 - 5*s23^4)) - 
             p1q*p3q^4*s12*(450*s12^7*s23 - 30*s12^6*(37*s13 - 71*s23)*s23 + 
               2*s12^5*s23*(1134*s13^2 + 295*s13*s23 + 2835*s23^2) + 72*s13^3*
                s23*(10*s13^4 + 29*s13^3*s23 + 38*s13^2*s23^2 + 
                 28*s13*s23^3 + 9*s23^4) + s12*s13^2*s23*(5004*s13^4 + 
                 11865*s13^3*s23 + 8353*s13^2*s23^2 + 4422*s13*s23^3 + 
                 1360*s23^4) + s12^4*(2592*s13^4 + 10899*s13^3*s23 + 
                 4529*s13^2*s23^2 + 380*s13*s23^3 + 2250*s23^4) + s12^3*
                (5184*s13^5 + 13164*s13^4*s23 + 12319*s13^3*s23^2 - 
                 2623*s13^2*s23^3 - 5390*s13*s23^4 - 1740*s23^5) + s12^2*s13*
                (2592*s13^5 + 10377*s13^4*s23 + 14731*s13^3*s23^2 + 
                 10570*s13^2*s23^3 + 2686*s13*s23^4 + 430*s23^5)) + 
             p1q^5*s23^3*(-450*s12^4*s23*(s13 + s23) + 6*s12^3*(117*s13^3 - 
                 107*s13^2*s23 - 235*s13*s23^2 - 65*s23^3) + s12^2*
                (4464*s13^4 + 2631*s13^3*s23 - 637*s13^2*s23^2 - 
                 430*s13*s23^3 - 330*s23^4) + 3*s12*(1398*s13^5 + 
                 2417*s13^4*s23 + 1242*s13^3*s23^2 + 335*s13^2*s23^3 + 
                 90*s13*s23^4 - 130*s23^5) + s13*(432*s13^5 + 1800*s13^4*
                  s23 + 3619*s13^3*s23^2 + 3061*s13^2*s23^3 + 1450*s13*
                  s23^4 + 640*s23^5)) + p1q^2*p3q^3*s23*(450*s12^7*
                (s13 + 4*s23) - 12*s12^6*(124*s13^2 + 165*s13*s23 - 
                 340*s23^2) + s12^5*(1218*s13^3 + 5051*s13^2*s23 - 
                 1940*s13*s23^2 + 9240*s23^3) - 36*s13^3*s23*(20*s13^4 + 
                 30*s13^3*s23 + 9*s13^2*s23^2 - 10*s13*s23^3 - 9*s23^4) + 
               s12^4*(8334*s13^4 + 27666*s13^3*s23 + 5812*s13^2*s23^2 + 
                 2430*s13*s23^3 + 4440*s23^4) + s12^3*(7404*s13^5 + 
                 23009*s13^4*s23 + 11439*s13^3*s23^2 - 7921*s13^2*s23^3 - 
                 5290*s13*s23^4 - 2520*s23^5) + 2*s12*s13^2*(648*s13^5 - 
                 35*s13^4*s23 + 586*s13^3*s23^2 + 1757*s13^2*s23^3 + 
                 811*s13*s23^4 + 820*s23^5) + s12^2*s13*(3522*s13^5 + 
                 6120*s13^4*s23 + 15971*s13^3*s23^2 + 11709*s13^2*s23^3 + 
                 4346*s13*s23^4 + 1770*s23^5)) + p1q^4*p3q*s23^2*
              (450*s12^5*s23*(3*s13 + 4*s23) - 6*s12^4*(234*s13^3 + 
                 34*s13^2*s23 - 510*s13*s23^2 - 325*s23^3) + s12^3*
                (-6120*s13^4 - 3564*s13^3*s23 + 1549*s13^2*s23^2 - 
                 370*s13*s23^3 + 2610*s23^4) + s12^2*(-4896*s13^5 + 
                 6768*s13^4*s23 + 4912*s13^3*s23^2 - 3336*s13^2*s23^3 + 
                 50*s13*s23^4 + 2070*s23^5) - s12*(900*s13^6 - 9606*s13^5*
                  s23 - 11927*s13^4*s23^2 + 5285*s13^3*s23^3 + 9169*s13^2*
                  s23^4 + 1730*s13*s23^5 + 390*s23^6) + s13*(-720*s13^6 - 
                 3024*s13^5*s23 - 4792*s13^4*s23^2 + 267*s13^3*s23^3 + 
                 1005*s13^2*s23^4 - 1110*s13*s23^5 + 640*s23^6)) - 
             p1q^3*p3q^2*s23*(1350*s12^6*s23*(s13 + 2*s23) - 6*s12^5*
                (117*s13^3 + 389*s13^2*s23 - 130*s13*s23^2 - 660*s23^3) + 
               s12^4*(-1656*s13^4 + 285*s13^3*s23 + 3695*s13^2*s23^2 - 
                 2700*s13*s23^3 + 7200*s23^4) - s13^2*s23*(1296*s13^5 + 
                 4070*s13^4*s23 + 1567*s13^3*s23^2 + 199*s13^2*s23^3 + 
                 766*s13*s23^4 - 640*s23^5) + s12^3*(-1782*s13^5 + 
                 18441*s13^4*s23 + 27757*s13^3*s23^2 - 328*s13^2*s23^3 + 
                 2010*s13*s23^4 + 4320*s23^5) + s12^2*(-108*s13^6 + 
                 21894*s13^5*s23 + 26295*s13^4*s23^2 + 1708*s13^3*s23^3 - 
                 14295*s13^2*s23^4 - 2970*s13*s23^5 - 1620*s23^6) + s12*s13*
                (720*s13^6 + 7422*s13^5*s23 + 6491*s13^4*s23^2 + 5257*s13^3*
                  s23^3 + 5036*s13^2*s23^4 + 442*s13*s23^5 + 1890*s23^6))))/
          (288*p1q*(p2q + p3q)*s13^3*s23*(-(p2q^4*s13^2*(s12 + s13)*
              (s13 + s23)) + (p3q*s12 - p1q*s23)^2*(p3q^2*s12*(s12 + s13) + 
              p1q^2*s23*(s13 + s23) - p1q*p3q*(s13*(s13 + s23) + 
                s12*(s13 + 2*s23))) + p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + 
                 s12*(s13 - 2*s23))*(s13 + s23)) + p3q*(s12 + s13)*(
                -(s13*(s13 + s23)) + s12*(3*s13 + 2*s23))) + 
            p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 3*s13 - s23) - 
              p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + p1q^2*p3q*s23*(
                s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 2*s13*s23 - 3*s23^2) + 
                s13*(2*s13^2 + s13*s23 - s23^2)) + p1q*p3q^2*s12*(
                -(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + s13*s23 + s23^2) + 
                s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
            p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*(s13 + 
                s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                  s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                s12*(s13^3 + 2*s13*s23^2))))) + 
         ((-18*p1q^2*s12*(15*s12^2*s23 + s12*(-33*s13^2 - 13*s13*s23 + 
                15*s23^2) - s13*(33*s13^2 + 61*s13*s23 + 28*s23^2)) + 
            18*(s12 + s13 + s23)*(p3q^2*s12*(33*s13^2 - 15*s12*s23 + 
                28*s13*s23) + p2q^2*s13*(15*s12^2 + 28*s13*(-s13 + s23) + 
                5*s12*(4*s13 + s23)) + p2q*p3q*(-15*s12^3 + s12^2*
                 (13*s13 - 15*s23) + 28*s13^2*s23 + s12*s13*(94*s13 + 
                  33*s23))) + p1q*(p3q*(270*s12^4 + s12^3*(-264*s13 + 
                  250*s23) + s13*s23*(327*s13^2 - 1158*s13*s23 - 664*s23^2) + 
                s12^2*(-861*s13^2 - 674*s13*s23 + 230*s23^2) - 
                s12*(327*s13^3 + 831*s13^2*s23 + 534*s13*s23^2 - 
                  250*s23^3)) - p2q*(50*s12^3*(6*s13 - 5*s23) + 
                s12^2*(123*s13^2 + 584*s13*s23 - 500*s23^2) + s13*s23*
                 (-831*s13^2 + 654*s13*s23 + 664*s23^2) + s12*(-177*s13^3 + 
                  237*s13^2*s23 + 948*s13*s23^2 - 250*s23^3))))*
           den[-1 + 2*ep])/(288*p1q*(p2q + p3q)*s13^3))*p1 . E0conj*p2 . E0 + 
       (-1/72*(ep^2*(s12 + s13)^2*(10*s12 + s13))/s13^2 + 
         (ep*(-18*p1q^5*(5*s12^2 + 9*s12*s13 + 4*s13^2)*s23^3*(s13 + s23)*
             (s12 + s13 + s23) + 18*(p2q + p3q)*(-(p3q*s12) + p2q*s13)^3*
             (5*s12^2 - s12*s13 - 4*s13^2)*(s12 + s13 + s23)*
             (-(p3q*s12) + p2q*(s13 + s23)) - p1q*(p3q*s12 - p2q*s13)*
             (-(p2q^3*s13*(s13 + s23)*(10*s12^3*(3*s13 + 11*s23) + 
                 s13^2*(327*s13^2 - 214*s13*s23 - 52*s23^2) + 2*s12*s13*
                  (342*s13^2 - 136*s13*s23 - 29*s23^2) + s12^2*(387*s13^2 + 
                   52*s13*s23 + 110*s23^2))) + p3q^3*s12^2*(90*s12^4 + 
                2*s12^3*(66*s13 + 215*s23) - 5*s12^2*(81*s13^2 - 76*s13*s23 - 
                  68*s23^2) - 2*s12*s13*(423*s13^2 + 134*s13*s23 + 
                  16*s23^2) - s13^2*(399*s13^2 + 218*s13*s23 + 308*s23^2)) + 
              p2q^2*p3q*(10*s12^4*(15*s13^2 - 11*s13*s23 - 25*s23^2) + 
                s12^3*(906*s13^3 + 243*s13^2*s23 - 486*s13*s23^2 - 
                  250*s23^3) - 3*s12*s13^2*(64*s13^3 + 135*s13^2*s23 - 
                  190*s13*s23^2 - 98*s23^3) + s12^2*s13*(963*s13^3 + 
                  205*s13^2*s23 - 28*s13*s23^2 - 96*s23^3) + 
                s13^3*(-399*s13^3 - 257*s13^2*s23 + 194*s13*s23^2 + 
                  52*s23^3)) + p2q*p3q^2*s12*(-3*s12^3*s13*(217*s13 + 
                  78*s23) + s12^4*(-210*s13 + 250*s23) + s12^2*(126*s13^3 - 
                  173*s13^2*s23 - 570*s13*s23^2 - 250*s23^3) + s12*s13*
                 (1365*s13^3 + 786*s13^2*s23 - 156*s13*s23^2 + 14*s23^3) + 
                s13^2*(798*s13^3 + 475*s13^2*s23 + 402*s13*s23^2 + 
                  236*s23^3))) + p1q^4*s23^2*(p2q*(s13 + s23)*(20*s12^3*
                 (3*s13 - s23) + s13^2*(213*s13^2 + 538*s13*s23 - 
                  164*s23^2) + 2*s12*s13*(99*s13^2 + 100*s13*s23 - 
                  70*s23^2) + 5*s12^2*(9*s13^2 - 14*s13*s23 - 4*s23^2)) + 
              p3q*(90*s12^4*(3*s13 + 4*s23) + 2*s12^3*(273*s13^2 + 
                  569*s13*s23 + 215*s23^2) + s13^2*(-3*s13^3 + 391*s13^2*
                   s23 + 302*s13*s23^2 - 92*s23^3) + s12^2*(-9*s13^3 + 
                  623*s13^2*s23 + 630*s13*s23^2 + 70*s23^3) + 
                s12*(-288*s13^4 - 52*s13^3*s23 + 258*s13^2*s23^2 + 
                  22*s13*s23^3))) + p1q^3*s23*(-(p3q^2*s12*
                (270*s12^4*(s13 + 2*s23) + 2*s12^3*(168*s13^2 + 691*s13*s23 + 
                   420*s23^2) + s13^2*(-330*s13^3 + 59*s13^2*s23 + 
                   530*s13*s23^2 - 348*s23^3) - 2*s12*s13*(558*s13^3 + 
                   691*s13^2*s23 - 106*s13*s23^2 - 24*s23^3) + 
                 s12^2*(-720*s13^3 - 347*s13^2*s23 + 1010*s13*s23^2 + 
                   300*s23^3))) + p2q^2*(10*s12^3*(15*s13^3 + 16*s13^2*s23 + 
                  8*s13*s23^2 + 7*s23^3) + s13^2*(114*s13^4 - 749*s13^3*s23 - 
                  465*s13^2*s23^2 + 306*s13*s23^3 - 92*s23^4) - 2*s12*s13*
                 (9*s13^4 + 470*s13^3*s23 + 275*s13^2*s23^2 - 197*s13*s23^3 - 
                  11*s23^4) + s12^2*(18*s13^4 + 365*s13^3*s23 + 155*s13^2*
                   s23^2 + 202*s13*s23^3 + 70*s23^4)) + p2q*p3q*(
                10*s12^4*(24*s13^2 + 22*s13*s23 - 3*s23^2) + 
                s12^3*(1338*s13^3 + 1713*s13^2*s23 + 348*s13*s23^2 + 
                  40*s23^3) + s13^2*(330*s13^4 - 533*s13^3*s23 - 681*s13^2*
                   s23^2 + 90*s13*s23^3 - 92*s23^4) + s12*s13*(870*s13^4 - 
                  801*s13^3*s23 - 1710*s13^2*s23^2 + 472*s13*s23^3 + 
                  22*s23^4) + s12^2*(1638*s13^4 + 1873*s13^3*s23 - 
                  3*s13^2*s23^2 + 370*s13*s23^3 + 70*s23^4))) + 
            p1q^2*(p3q^3*s12^2*(90*s12^4*(s13 + 4*s23) + s12^3*(42*s13^2 + 
                  718*s13*s23 + 840*s23^2) - 4*s12*s13*(189*s13^3 + 
                  508*s13^2*s23 + 38*s13*s23^2 - 3*s23^3) + s12^2*
                 (-477*s13^3 - 979*s13^2*s23 + 850*s13*s23^2 + 480*s23^3) - 
                s13^2*(327*s13^3 + 731*s13^2*s23 - 82*s13*s23^2 + 
                  492*s23^3)) - p2q^3*s13*(10*s12^3*(12*s13^3 + 8*s13^2*s23 + 
                  s13*s23^2 + 5*s23^3) + s13^2*(255*s13^4 - 469*s13^3*s23 - 
                  348*s13^2*s23^2 + 264*s13*s23^3 - 112*s23^4) + 
                2*s12*s13*(297*s13^4 - 163*s13^3*s23 - 253*s13^2*s23^2 + 
                  238*s13*s23^3 + 31*s23^4) + s12^2*(459*s13^4 + 259*s13^3*
                   s23 - 392*s13^2*s23^2 + 182*s13*s23^3 + 50*s23^4)) + 
              p2q^2*p3q*(10*s12^4*(33*s13^3 + 28*s13^2*s23 - 8*s13*s23^2 - 
                  23*s23^3) + 2*s12^3*(480*s13^4 + 966*s13^3*s23 + 
                  535*s13^2*s23^2 - 223*s13*s23^3 - 115*s23^4) + 
                s12^2*s13*(711*s13^4 + 1753*s13^3*s23 + 3080*s13^2*s23^2 - 
                  50*s13*s23^3 - 76*s23^4) + 2*s12*s13^2*(-123*s13^4 + 
                  375*s13^3*s23 + 953*s13^2*s23^2 + 63*s13*s23^3 + 
                  97*s23^4) + s13^3*(-327*s13^4 + 541*s13^3*s23 + 708*s13^2*
                   s23^2 - 48*s13*s23^3 + 112*s23^4)) - p2q*p3q^2*s12*(
                10*s12^4*(30*s13^2 + 56*s13*s23 - 21*s23^2) + 
                s12^3*(543*s13^3 + 2391*s13^2*s23 + 634*s13*s23^2 + 
                  20*s23^3) + s12*s13*(-1257*s13^4 - 813*s13^3*s23 - 
                  1942*s13^2*s23^2 + 522*s13*s23^3 + 26*s23^4) - 
                2*s13^2*(327*s13^4 + 95*s13^3*s23 + 259*s13^2*s23^2 + 
                  130*s13*s23^3 + 128*s23^4) + s12^2*(-360*s13^4 + 
                  1100*s13^3*s23 + 152*s13^2*s23^2 + 690*s13*s23^3 + 
                  230*s23^4)))))/(144*p1q*(p2q + p3q)*s13^3*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (18*p1q^6*(25*s12^2 - 5*s12*s13 - 28*s13^2)*s23^5*(s13 + s23)*
            (s12 + s13 + s23) + 18*p3q^6*s12^4*(25*s12^4*s23 + 
             5*s12^3*s23*(7*s13 + 5*s23) + 36*s13^3*(4*s13^2 + 5*s13*s23 + 
               s23^2) + s12^2*s13*(144*s13^2 + 103*s13*s23 + 10*s23^2) + 
             3*s12*s13^2*(96*s13^2 + 91*s13*s23 + 31*s23^2)) - 
           18*p2q^6*s13^3*(-25*s12^4*s23*(s13 + s23) + 36*s13^3*s23*
              (s13 + s23)^2 + s12^3*(144*s13^3 + 37*s13^2*s23 - 60*s13*
                s23^2 - 25*s23^3) + s12^2*s13*(288*s13^3 + 257*s13^2*s23 + 31*
                s13*s23^2 - 10*s23^3) + 3*s12*s13^2*(48*s13^3 + 77*s13^2*
                s23 + 22*s13*s23^2 - 7*s23^3)) - p1q^5*p3q*s23^4*
            (450*s12^4*(4*s13 + 5*s23) + 30*s12^3*(58*s13^2 + 143*s13*s23 + 
               88*s23^2) + 2*s12*s13*(585*s13^3 + 722*s13^2*s23 - 238*s13*
                s23^2 - 375*s23^3) + s12^2*(639*s13^3 - 485*s13^2*s23 - 230*
                s13*s23^2 + 390*s23^3) + s13^2*(471*s13^3 + 1881*s13^2*s23 + 
               3170*s13*s23^2 + 1760*s23^3)) - p1q*p3q^5*s12^3*
            (450*s12^5*s23 + 30*s12^4*s23*(37*s13 + 88*s23) + 
             s12^3*s23*(2901*s13^2 + 2650*s13*s23 + 2190*s23^2) + 
             s12^2*s13*(2592*s13^3 + 16911*s13^2*s23 + 9086*s13*s23^2 - 90*
                s23^3) + s13^3*(2592*s13^3 + 10047*s13^2*s23 + 9042*s13*
                s23^2 + 2408*s23^3) + s12*s13^2*(5184*s13^3 + 24717*s13^2*
                s23 + 23302*s13*s23^2 + 7976*s23^3)) + p1q^4*p3q^2*s23^3*
            (900*s12^5*(3*s13 + 5*s23) + 30*s12^4*(102*s13^2 + 304*s13*s23 + 
               217*s23^2) + s12^2*s13*(11133*s13^3 + 18715*s13^2*s23 + 5060*
                s13*s23^2 - 2880*s23^3) - s13^3*(321*s13^3 + 999*s13^2*s23 + 
               214*s13*s23^2 - 464*s23^3) + s12^3*(5331*s13^3 + 5490*s13^2*
                s23 + 610*s13*s23^2 + 2010*s23^3) + s12*s13^2*
              (5841*s13^3 + 16018*s13^2*s23 + 17590*s13*s23^2 + 8234*
                s23^3)) + p1q^2*p3q^4*s12^2*s23*(450*s12^5*(s13 + 5*s23) + 
             30*s12^4*(22*s13^2 + 173*s13*s23 + 217*s23^2) + 
             s12^2*s13*(12465*s13^3 + 38849*s13^2*s23 + 17110*s13*s23^2 - 
               2100*s23^3) + s13^3*(4215*s13^3 + 10671*s13^2*s23 + 8150*s13*
                s23^2 + 3336*s23^3) + s12^3*(2271*s13^3 + 10210*s13^2*s23 + 
               4210*s13*s23^2 + 4260*s23^3) + s12*s13^2*(14619*s13^3 + 46138*
                s13^2*s23 + 43112*s13*s23^2 + 15644*s23^3)) - 
           p1q^3*p3q^3*s12*s23^2*(900*s12^5*(2*s13 + 5*s23) + 
             180*s12^4*(13*s13^2 + 54*s13*s23 + 48*s23^2) + 
             s12^2*s13*(19332*s13^3 + 40793*s13^2*s23 + 14910*s13*s23^2 - 
               3960*s23^3) + 3*s12^3*(2123*s13^3 + 4200*s13^2*s23 + 980*s13*
                s23^2 + 1380*s23^3) + s13^3*(1302*s13^3 + 2217*s13^2*s23 + 
               2134*s13*s23^2 + 2040*s23^3) + s12*s13^2*(14805*s13^3 + 40742*
                s13^2*s23 + 39144*s13*s23^2 + 15816*s23^3)) + 
           p2q^5*s13^2*(-18*p3q*(72*s13^4*s23*(s13 + s23)^2 + 25*s12^5*s23*
                (4*s13 + 3*s23) + 6*s12*s13^3*(72*s13^3 + 101*s13^2*s23 + 
                 16*s13*s23^2 - 13*s23^3) - s12^3*s13*(432*s13^3 + 
                 378*s13^2*s23 + 59*s13*s23^2 + 20*s23^3) + s12^4*
                (-432*s13^3 - 54*s13^2*s23 + 155*s13*s23^2 + 75*s23^3) + 
               s12^2*s13^2*(432*s13^3 + 310*s13^2*s23 + 245*s13*s23^2 + 
                 115*s23^3)) + p1q*(30*s12^4*s23*(s13^2 - 16*s13*s23 - 
                 17*s23^2) + s13^3*s23*(327*s13^3 + 3537*s13^2*s23 + 
                 6914*s13*s23^2 + 3704*s23^3) + s12^2*s13*(-5184*s13^4 + 
                 8847*s13^3*s23 + 11435*s13^2*s23^2 + 122*s13*s23^3 - 
                 1170*s23^4) + s12^3*(-2592*s13^4 + 3009*s13^3*s23 + 
                 1249*s13^2*s23^2 - 2270*s13*s23^3 - 510*s23^4) + s12*s13^2*
                (-2592*s13^4 + 6195*s13^3*s23 + 18427*s13^2*s23^2 + 
                 10164*s13*s23^3 + 524*s23^4))) + p2q^4*s13*
            (18*p3q^2*(-36*s13^5*s23*(s13 + s23)^2 + 75*s12^6*s23*
                (2*s13 + s23) + s12^2*s13^3*(432*s13^3 + 727*s13^2*s23 - 
                 217*s13*s23^2 - 224*s23^3) + s12^4*s13*(432*s13^3 + 
                 3*s13^2*s23 - 160*s13*s23^2 - 120*s23^3) + s12^5*
                (-432*s13^3 - 62*s13^2*s23 + 105*s13*s23^2 + 75*s23^3) + 
               s12^3*s13^2*(1728*s13^3 + 1425*s13^2*s23 + 595*s13*s23^2 + 
                 172*s23^3) + s12*(-432*s13^7 - 519*s13^6*s23 + 6*s13^5*
                  s23^2 + 93*s13^4*s23^3)) + p1q*p3q*(-30*s12^5*s23*
                (-12*s13^2 + 11*s13*s23 + 26*s23^2) + 2*s13^4*s23*
                (3*s13^3 + 1917*s13^2*s23 + 4646*s13*s23^2 + 2732*s23^3) + 
               s12^2*s13^2*(-10368*s13^4 + 14949*s13^3*s23 + 16714*s13^2*
                  s23^2 + 614*s13*s23^3 - 2128*s23^4) + s12^4*(5184*s13^4 + 
                 5073*s13^3*s23 + 4908*s13^2*s23^2 + 160*s13*s23^3 - 
                 780*s23^4) + s12*s13^3*(-7776*s13^4 + 11787*s13^3*s23 + 
                 38720*s13^2*s23^2 + 18834*s13*s23^3 + 498*s23^4) + s12^3*s13*
                (2592*s13^4 + 7881*s13^3*s23 + 12986*s13^2*s23^2 + 
                 5332*s13*s23^3 + 1050*s23^4)) + p1q^2*s23*
              (6*s12^4*(146*s13^3 + 342*s13^2*s23 - 75*s13*s23^2 - 
                 55*s23^3) + s13^3*(975*s13^4 + 3708*s13^3*s23 + 551*s13^2*
                  s23^2 - 9406*s13*s23^3 - 7224*s23^4) + s12*s13^2*
                (11649*s13^4 + 14605*s13^3*s23 - 6570*s13^2*s23^2 - 
                 10958*s13*s23^3 - 1432*s23^4) + s12^3*(7563*s13^4 + 
                 9925*s13^3*s23 + 2894*s13^2*s23^2 + 850*s13*s23^3 - 
                 330*s23^4) + s12^2*s13*(17361*s13^4 + 14882*s13^3*s23 + 
                 2703*s13^2*s23^2 + 3352*s13*s23^3 + 1410*s23^4))) + 
           p2q*(18*p3q^5*s12^3*(50*s12^5*s23 - 5*s12^4*(6*s13 - 5*s23)*s23 + 
               s12^3*(432*s13^3 + 66*s13^2*s23 - 115*s13*s23^2 - 25*s23^3) + 
               s12^2*s13*(432*s13^3 + 278*s13^2*s23 + 43*s13*s23^2 - 
                 10*s23^3) - 36*s13^3*(12*s13^3 + 16*s13^2*s23 + 
                 5*s13*s23^2 + s23^3) - 3*s12*s13^2*(144*s13^3 + 148*s13^2*
                  s23 + 143*s13*s23^2 + 31*s23^3)) + p1q^5*s23^4*
              (-450*s12^4*(s13 + s23) - 30*s12^3*(43*s13^2 + 56*s13*s23 + 
                 13*s23^2) + s13^2*(1185*s13^3 + 927*s13^2*s23 - 
                 2522*s13*s23^2 - 2264*s23^3) + s12^2*(603*s13^3 - 
                 703*s13^2*s23 + 50*s13*s23^2 + 60*s23^3) + 2*s12*s13*
                (1314*s13^3 + 1051*s13^2*s23 + 67*s13*s23^2 + 330*s23^3)) + 
             p1q^4*p3q*s23^3*(450*s12^5*(3*s13 + 4*s23) + 30*s12^4*
                (64*s13^2 + 159*s13*s23 + 80*s23^2) + s12^3*(-564*s13^3 + 
                 2257*s13^2*s23 - 1570*s13*s23^2 + 210*s23^3) + s13^2*
                (1596*s13^4 + 6477*s13^3*s23 + 10511*s13^2*s23^2 + 
                 3870*s13*s23^3 - 1760*s23^4) + s12^2*(12996*s13^4 + 
                 14357*s13^3*s23 + 347*s13^2*s23^2 - 2770*s13*s23^3 - 
                 390*s23^4) + s12*s13*(15726*s13^4 + 34435*s13^3*s23 + 
                 25124*s13^2*s23^2 + 7986*s13*s23^3 + 750*s23^4)) + 
             p1q^2*p3q^3*s12*s23*(450*s12^6*(s13 + 4*s23) + s12^5*
                (-660*s13^2 + 990*s13*s23 + 6780*s23^2) + s12^4*(-558*s13^3 + 
                 1067*s13^2*s23 - 5330*s13*s23^2 + 2460*s23^3) + s12*s13^2*
                (13536*s13^4 + 29407*s13^3*s23 + 10525*s13^2*s23^2 - 
                 13704*s13*s23^3 - 9342*s23^4) + s12^3*(20100*s13^4 + 
                 57983*s13^3*s23 + 10577*s13^2*s23^2 - 8640*s13*s23^3 - 
                 2520*s23^4) + 2*s13^3*(2913*s13^4 + 6507*s13^3*s23 + 
                 4747*s13^2*s23^2 + 1186*s13*s23^3 - 788*s23^4) + s12^2*s13*
                (27258*s13^4 + 88051*s13^3*s23 + 63894*s13^2*s23^2 + 
                 17328*s13*s23^3 + 1830*s23^4)) - p1q^3*p3q^2*s23^2*
              (1350*s12^6*(s13 + 2*s23) - 30*s12^5*(s13^2 - 143*s13*s23 - 
                 192*s23^2) + s12^4*(-519*s13^3 + 2633*s13^2*s23 - 
                 4650*s13*s23^2 + 1440*s23^3) + s12*s13^2*(19236*s13^4 + 
                 39701*s13^3*s23 + 25509*s13^2*s23^2 + 1854*s13*s23^3 - 
                 6474*s23^4) + s12^3*(27348*s13^4 + 51963*s13^3*s23 + 
                 5483*s13^2*s23^2 - 6120*s13*s23^3 - 1620*s23^4) + s13^3*
                (6*s13^4 + 915*s13^3*s23 + 3811*s13^2*s23^2 + 2438*s13*
                  s23^3 - 464*s23^4) + s12^2*s13*(45717*s13^4 + 93378*s13^3*
                  s23 + 62167*s13^2*s23^2 + 15608*s13*s23^3 + 2130*s23^4)) + 
             p1q*p3q^4*s12^2*(-450*s12^6*s23 + 30*s12^5*(7*s13 - 131*s23)*
                s23 + 4*s12^4*s23*(3*s13^2 + 685*s13*s23 - 435*s23^2) - s12^2*
                s13*(10368*s13^4 + 34611*s13^3*s23 + 29093*s13^2*s23^2 + 
                 8216*s13*s23^3 + 270*s23^4) + s12^3*(-7776*s13^4 - 
                 30015*s13^3*s23 - 6763*s13^2*s23^2 + 6700*s13*s23^3 + 
                 1740*s23^4) + s13^3*(5184*s13^4 + 9405*s13^3*s23 + 
                 4125*s13^2*s23^2 + 3306*s13*s23^3 + 1760*s23^4) + s12*s13^2*
                (2592*s13^4 + 4161*s13^3*s23 + 14385*s13^2*s23^2 + 
                 19410*s13*s23^3 + 6302*s23^4))) + 
           p2q^2*(18*p3q^4*s12^2*(25*s12^6*s23 - 5*s12^5*s23*(33*s13 + 
                 5*s23) + s12^4*(432*s13^3 - 27*s13^2*s23 - 185*s13*s23^2 - 
                 50*s23^3) - 27*s12*s13^3*(16*s13^3 + 22*s13^2*s23 - 
                 11*s13*s23^2 - 5*s23^3) + 36*s13^4*(12*s13^3 + 16*s13^2*
                  s23 + 5*s13*s23^2 + s23^3) - 3*s12^2*s13^2*(576*s13^3 + 
                 486*s13^2*s23 + 247*s13*s23^2 + 52*s23^3) + s12^3*s13*
                (-432*s13^3 - 125*s13^2*s23 + 62*s13*s23^2 + 55*s23^3)) + 
             p1q^4*s23^3*(60*s12^4*(8*s13^2 + 7*s13*s23 - s23^2) - s12^3*
                (1575*s13^3 - 457*s13^2*s23 + 1010*s13*s23^2 + 450*s23^3) + 
               s13^2*(117*s13^4 + 5532*s13^3*s23 + 12237*s13^2*s23^2 + 
                 5062*s13*s23^3 - 1760*s23^4) - s12^2*(1125*s13^4 - 
                 448*s13^3*s23 + 2067*s13^2*s23^2 + 790*s13*s23^3 + 
                 390*s23^4) + s12*s13*(1047*s13^4 + 9291*s13^3*s23 + 
                 8092*s13^2*s23^2 + 598*s13*s23^3 + 750*s23^4)) + 
             p1q^2*p3q^2*s23*(-30*s12^6*(44*s13^2 + 74*s13*s23 - 39*s23^2) - 
               s12^5*(2835*s13^3 + 3089*s13^2*s23 + 7320*s13*s23^2 + 
                 2580*s23^3) + s12^2*s13^2*(34776*s13^4 + 38443*s13^3*s23 - 
                 11895*s13^2*s23^2 - 37352*s13*s23^3 - 13636*s23^4) + s12*
                s13^3*(22383*s13^4 + 33208*s13^3*s23 + 2168*s13^2*s23^2 - 
                 13602*s13*s23^3 - 9050*s23^4) + s12^4*(12609*s13^4 + 
                 37966*s13^3*s23 + 671*s13^2*s23^2 - 6320*s13*s23^3 - 
                 3750*s23^4) + s13^4*(327*s13^4 + 2235*s13^3*s23 + 
                 4376*s13^2*s23^2 + 892*s13*s23^3 - 1576*s23^4) + s12^3*s13*
                (26844*s13^4 + 69633*s13^3*s23 + 26690*s13^2*s23^2 + 
                 2682*s13*s23^3 + 2820*s23^4)) + p1q*p3q^3*s12*
              (30*s12^6*(44*s13 - 43*s23)*s23 + s12^5*s23*(1653*s13^2 + 
                 7490*s13*s23 + 1740*s23^2) - 4*s12^3*s13*s23*(1902*s13^3 + 
                 1975*s13^2*s23 + 504*s13*s23^2 + 600*s23^3) + s13^4*
                (-2592*s13^4 + 963*s13^3*s23 + 9804*s13^2*s23^2 + 
                 7092*s13*s23^3 + 1664*s23^4) + s12*s13^3*(10368*s13^4 + 
                 13995*s13^3*s23 + 906*s13^2*s23^2 + 4984*s13*s23^3 + 
                 2148*s23^4) + s12^4*(-7776*s13^4 - 22959*s13^3*s23 - 
                 1880*s13^2*s23^2 + 7760*s13*s23^3 + 3030*s23^4) + 2*s12^2*
                s13^2*(10368*s13^4 + 14358*s13^3*s23 + 22851*s13^2*s23^2 + 
                 21208*s13*s23^3 + 6095*s23^4)) + p1q^3*p3q*s23^2*
              (30*s12^5*(28*s13^2 + 16*s13*s23 - 9*s23^2) + s12^4*
                (5010*s13^3 + 1219*s13^2*s23 + 3810*s13*s23^2 + 1740*s23^3) + 
               s12^3*(-13344*s13^4 - 19551*s13^3*s23 + 4002*s13^2*s23^2 + 
                 2680*s13*s23^3 + 2010*s23^4) - s12^2*s13*(48777*s13^4 + 
                 64752*s13^3*s23 + 21392*s13^2*s23^2 + 2140*s13*s23^3 + 
                 2160*s23^4) + s12*s13^2*(-33690*s13^4 - 62351*s13^3*s23 - 
                 25800*s13^2*s23^2 + 6652*s13*s23^3 + 6254*s23^4) + s13^3*
                (-2427*s13^4 - 9897*s13^3*s23 - 13510*s13^2*s23^2 + 
                 352*s13*s23^3 + 6392*s23^4))) + 
           p2q^3*(-18*p3q^3*s12*(25*s12^6*s23*(4*s13 + s23) + 4*s12^4*s13*
                (252*s13^3 + 23*s13^2*s23 - 73*s13*s23^2 - 35*s23^3) - s12^5*
                (144*s13^3 + 160*s13^2*s23 + 15*s13*s23^2 - 25*s23^3) - 3*s12*
                s13^4*(336*s13^3 + 452*s13^2*s23 + 59*s13*s23^2 - 21*s23^3) + 
               36*s13^5*(4*s13^3 + 4*s13^2*s23 - s13*s23^2 - s23^3) + 4*s12^3*
                s13^2*(288*s13^3 + 215*s13^2*s23 + 64*s13*s23^2 + 27*s23^3) - 
               s12^2*s13^3*(1152*s13^3 + 992*s13^2*s23 + 1073*s13*s23^2 + 
                 348*s23^3)) + p1q^3*s23^2*(6*s12^4*(281*s13^3 + 
                 90*s13^2*s23 + 90*s13*s23^2 + 65*s23^3) - 3*s13^3*
                (591*s13^4 + 3162*s13^3*s23 + 4217*s13^2*s23^2 - 
                 330*s13*s23^3 - 1976*s23^4) - s12^2*s13*(10719*s13^4 + 
                 13916*s13^3*s23 + 1465*s13^2*s23^2 - 406*s13*s23^3 + 
                 30*s23^4) - s12*s13^2*(12138*s13^4 + 28917*s13^3*s23 + 
                 15835*s13^2*s23^2 - 724*s13*s23^3 + 220*s23^4) + s12^3*
                (1332*s13^4 - 497*s13^3*s23 + 3107*s13^2*s23^2 + 
                 790*s13*s23^3 + 390*s23^4)) + p1q*p3q^2*(30*s12^6*s23*
                (-42*s13^2 + 70*s13*s23 + 43*s23^2) + 2*s12^2*s13^3*s23*
                (5346*s13^3 + 1030*s13^2*s23 + 1085*s13*s23^2 - 285*s23^3) + 
               s13^5*s23*(-321*s13^3 + 297*s13^2*s23 + 2378*s13*s23^2 + 
                 1760*s23^3) + s12^4*s13*(10368*s13^4 + 7329*s13^3*s23 + 
                 3279*s13^2*s23^2 - 1106*s13*s23^3 - 2910*s23^4) + s12^5*
                (-2592*s13^4 - 9495*s13^3*s23 - 4533*s13^2*s23^2 + 
                 370*s13*s23^3 + 1290*s23^4) + s12*s13^4*(-7776*s13^4 + 
                 6555*s13^3*s23 + 30097*s13^2*s23^2 + 15762*s13*s23^3 + 
                 1638*s23^4) + 4*s12^3*s13^2*(5184*s13^4 + 4845*s13^3*s23 + 
                 8503*s13^2*s23^2 + 7050*s13*s23^3 + 1862*s23^4)) - 
             p1q^2*p3q*s23*(6*s12^5*(s13^3 - 160*s13^2*s23 + 140*s13*s23^2 + 
                 205*s23^3) + s12^3*s13*(-21768*s13^4 - 23839*s13^3*s23 + 
                 4518*s13^2*s23^2 + 636*s13*s23^3 - 660*s23^4) - 2*s12^4*
                (2925*s13^4 + 5330*s13^3*s23 - 187*s13^2*s23^2 - 
                 595*s13*s23^3 - 615*s23^4) + s12^2*s13^2*(-42816*s13^4 - 
                 23825*s13^3*s23 + 25859*s13^2*s23^2 + 21136*s13*s23^3 + 
                 2884*s23^4) + s13^4*(-1302*s13^4 - 5295*s13^3*s23 - 
                 3631*s13^2*s23^2 + 9162*s13*s23^3 + 8800*s23^4) + s12*s13^3*
                (-28206*s13^4 - 30533*s13^3*s23 + 21132*s13^2*s23^2 + 
                 29902*s13*s23^3 + 8906*s23^4))))/(288*p1q*(p2q + p3q)*s13^3*
           s23*(-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + 
            (p3q*s12 - p1q*s23)^2*(p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + 
                s23) - p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + 
            p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*
                (s13 + s23)) + p3q*(s12 + s13)*(-(s13*(s13 + s23)) + 
                s12*(3*s13 + 2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 
                3*s13 - s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + 
              p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 
                  2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + s13*s23 - s23^2)) + 
              p1q*p3q^2*s12*(-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + 
                  s13*s23 + s23^2) + s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
            p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*(s13 + 
                s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                  s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                s12*(s13^3 + 2*s13*s23^2))))) + 
         ((18*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(15*s12^2 - 13*s12*s13 - 
              28*s13^2)*(s12 + s13 + s23) - 18*p1q^2*(15*s12^2 - 23*s12*s13 + 
              28*s13^2)*s23*(s12 + s13 + s23) + p1q*p3q*(270*s12^4 + 
              s12^3*(6*s13 + 520*s23) + s12^2*(-1125*s13^2 - 538*s13*s23 + 
                250*s23^2) - 2*s12*s13*(594*s13^2 - 50*s13*s23 + 317*s23^2) + 
              s13^2*(-327*s13^2 + 1158*s13*s23 + 664*s23^2)) + 
            p1q*p2q*(-50*s12^3*(6*s13 - 5*s23) + 2*s12*s13*(27*s13^2 + 
                419*s13*s23 - 317*s23^2) + s12^2*(-423*s13^2 - 574*s13*s23 + 
                250*s23^2) + s13^2*(177*s13^2 + 1662*s13*s23 + 664*s23^2)))*
           den[-1 + 2*ep])/(288*p1q*(p2q + p3q)*s13^3))*p2 . E0*p2 . E0conj + 
       p1 . E0*((-1/72*(ep^2*(10*s12 + s13)*(s12 + s23)^2)/s13^2 + 
           (ep*(-90*p1q^6*s12*s23^4*(s13 + s23)*(s12^2 + 3*s12*s13 + 
                2*s13^2 + 2*s12*s23 + 3*s13*s23 + s23^2) - 18*(p2q + p3q)*(
                s12 + s13)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*(
                5*p3q^3*s12^2*s23*(s12 + 2*s13 + s23) + p2q^3*s13*(s13 + s23)*
                 (5*s12^2 + 4*s12*s13 - 9*s13^2 + 10*s12*s23 + 4*s13*s23 + 
                  5*s23^2) + p2q*p3q^2*s12*(5*s12^3 - 5*s12*s13*(2*s13 + 
                    s23) + 5*s12^2*(s13 + 2*s23) - s23*(19*s13^2 + 
                    20*s13*s23 + 5*s23^2)) - p2q^2*p3q*(5*s12^3*(2*s13 + 
                    s23) - s13*s23*(9*s13^2 + 14*s13*s23 + 5*s23^2) + 
                  s12^2*(9*s13^2 + 25*s13*s23 + 10*s23^2) + s12*(-19*s13^3 - 
                    6*s13^2*s23 + 10*s13*s23^2 + 5*s23^3))) + 
              p1q^5*s23^3*(p2q*(s13 + s23)*(90*s12^4 + 20*s12^3*(21*s13 + 
                    8*s23) + s12^2*(951*s13^2 + 460*s13*s23 + 120*s23^2) + 
                  2*s12*(540*s13^3 + 317*s13^2*s23 + 100*s13*s23^2 + 
                    60*s23^3) + s23*(442*s13^3 + 43*s13^2*s23 + 160*s13*
                     s23^2 + 70*s23^3)) + p3q*(90*s12^4*(4*s13 + 5*s23) + 
                  10*s12^3*(96*s13^2 + 193*s13*s23 + 88*s23^2) + 
                  s12^2*(681*s13^3 + 1501*s13^2*s23 + 1300*s13*s23^2 + 
                    480*s23^3) + 2*s12*(270*s13^4 + 56*s13^3*s23 - 339*s13^2*
                     s23^2 - 65*s13*s23^3 + 60*s23^4) + s23*(280*s13^4 + 
                    71*s13^3*s23 - 139*s13^2*s23^2 + 140*s13*s23^3 + 
                    70*s23^4))) - p1q^4*s23^2*(p2q^2*(20*s12^4*(3*s13^2 + 
                    2*s13*s23 - s23^2) + s12^3*(411*s13^3 + 391*s13^2*s23 - 
                    60*s13*s23^2 - 40*s23^3) + s12^2*(1917*s13^4 + 1324*s13^3*
                     s23 - 259*s13^2*s23^2 - 80*s13*s23^3 - 90*s23^4) + 
                  s12*(2484*s13^5 + 2758*s13^4*s23 + 49*s13^3*s23^2 - 
                    175*s13^2*s23^3 - 90*s13*s23^4 - 140*s23^5) + 
                  s23*(1488*s13^5 + 1265*s13^4*s23 + 52*s13^3*s23^2 + 
                    235*s13^2*s23^3 - 110*s13*s23^4 - 70*s23^5)) + 
                p2q*p3q*(90*s12^5*(3*s13 + 4*s23) + 10*s12^4*(69*s13^2 + 
                    157*s13*s23 + 71*s23^2) + s12^3*(894*s13^3 + 1925*s13^2*
                     s23 + 1310*s13*s23^2 + 800*s23^3) + s12^2*(2778*s13^4 + 
                    1847*s13^3*s23 - 233*s13^2*s23^2 + 1740*s13*s23^3 + 
                    840*s23^4) + s23*(1282*s13^5 + 256*s13^4*s23 - 699*s13^3*
                     s23^2 + 447*s13^2*s23^3 + 50*s13*s23^4 - 70*s23^5) + 
                  s12*(2304*s13^5 + 1640*s13^4*s23 - 856*s13^3*s23^2 + 
                    779*s13^2*s23^3 + 1780*s13*s23^4 + 320*s23^5)) + 
                p3q^2*(180*s12^5*(3*s13 + 5*s23) + 20*s12^4*(63*s13^2 + 
                    162*s13*s23 + 86*s23^2) + s12^3*(753*s13^3 + 1714*s13^2*
                     s23 + 1640*s13*s23^2 + 1110*s23^3) + s13*s23*
                   (280*s13^4 + 71*s13^3*s23 - 139*s13^2*s23^2 + 140*s13*
                     s23^3 + 70*s23^4) + s12^2*(1311*s13^4 - 53*s13^3*s23 - 
                    2782*s13^2*s23^2 - 160*s13*s23^3 + 660*s23^4) + 
                  s12*(360*s13^5 + 502*s13^4*s23 - 365*s13^3*s23^2 - 
                    396*s13^2*s23^3 + 970*s13*s23^4 + 370*s23^5))) + 
              p1q*(p2q^5*s13^2*(s13 + s23)*(10*s12^4*(3*s13 + 11*s23) + 
                  s12^3*(-93*s13^2 + 334*s13*s23 + 330*s23^2) + 
                  s12^2*(-573*s13^3 - 212*s13^2*s23 + 778*s13*s23^2 + 
                    330*s23^3) + s12*(-288*s13^4 - 950*s13^3*s23 + 117*s13^2*
                     s23^2 + 674*s13*s23^3 + 110*s23^4) + s13*(162*s13^4 - 
                    514*s13^3*s23 - 151*s13^2*s23^2 + 236*s13*s23^3 + 
                    200*s23^4)) + p3q^5*s12^3*(90*s12^5 + 10*s12^4*
                   (15*s13 + 16*s23) + s12^3*(-69*s13^2 - 100*s13*s23 + 
                    480*s23^2) + s13*s23*(460*s13^3 + 601*s13^2*s23 + 
                    970*s13*s23^2 + 340*s23^3) + s12^2*(231*s13^3 - 
                    688*s13^2*s23 + 1310*s13*s23^2 + 840*s23^3) + 
                  s12*(360*s13^4 + 32*s13^3*s23 + 1431*s13^2*s23^2 + 
                    1900*s13*s23^3 + 430*s23^4)) + p2q^4*p3q*s13*
                 (-10*s12^5*(18*s13^2 + 3*s13*s23 - 14*s23^2) + 
                  s12^4*(177*s13^3 + 166*s13^2*s23 + 524*s13*s23^2 + 
                    420*s23^3) + s12^3*(1713*s13^4 + 2300*s13^3*s23 + 
                    1560*s13^2*s23^2 + 1228*s13*s23^3 + 420*s23^4) + 
                  s12*s13*(-1152*s13^5 - 250*s13^4*s23 + 1813*s13^3*s23^2 + 
                    2418*s13^2*s23^3 + 1108*s13*s23^4 + 90*s23^5) + 
                  s12^2*(42*s13^5 + 2162*s13^4*s23 + 3437*s13^3*s23^2 + 
                    2012*s13^2*s23^3 + 764*s13*s23^4 + 140*s23^5) + 
                  2*s13^2*(81*s13^5 - 154*s13^4*s23 + 118*s13^3*s23^2 + 
                    688*s13^2*s23^3 + 490*s13*s23^4 + 155*s23^5)) + 
                p2q^3*p3q^2*(10*s12^6*(36*s13^2 - 36*s13*s23 - 25*s23^2) - 
                  s12^5*(45*s13^3 + 627*s13^2*s23 + 1780*s13*s23^2 + 
                    750*s23^3) + s13^3*s23*(-118*s13^4 + 487*s13^3*s23 + 
                    949*s13^2*s23^2 + 454*s13*s23^3 + 110*s23^4) - 
                  s12^4*(1815*s13^4 + 1549*s13^3*s23 + 2290*s13^2*s23^2 + 
                    2180*s13*s23^3 + 750*s23^4) + s12^3*(1671*s13^5 - 
                    395*s13^4*s23 - 1109*s13^3*s23^2 - 193*s13^2*s23^3 - 
                    460*s13*s23^4 - 250*s23^5) + s12*s13^2*(-864*s13^5 + 
                    928*s13^4*s23 + 977*s13^3*s23^2 + 591*s13^2*s23^3 + 
                    548*s13*s23^4 + 120*s23^5) + s12^2*s13*(2217*s13^5 + 
                    1933*s13^4*s23 + 1113*s13^3*s23^2 + 1059*s13^2*s23^3 + 
                    1230*s13*s23^4 + 300*s23^5)) + p2q*p3q^4*s12^2*
                 (90*s12^6 - 50*s12^5*(3*s13 - 10*s23) - 8*s12^4*(51*s13^2 - 
                    65*s13*s23 - 190*s23^2) + s12^3*(1029*s13^3 + 415*s13^2*
                     s23 + 2990*s13*s23^2 + 1560*s23^3) + s12^2*(-63*s13^4 + 
                    1609*s13^3*s23 + 1024*s13^2*s23^2 + 870*s13*s23^3 + 
                    110*s23^4) - s13*s23*(1038*s13^4 + 967*s13^3*s23 + 
                    1927*s13^2*s23^2 + 1270*s13*s23^3 + 250*s23^4) - 
                  s12*(1260*s13^5 - 176*s13^4*s23 + 1557*s13^3*s23^2 + 
                    2869*s13^2*s23^3 + 1700*s13*s23^4 + 340*s23^5)) - 
                p2q^2*p3q^3*s12*(50*s12^6*(6*s13 - 5*s23) + s12^5*
                   (-21*s13^2 + 280*s13*s23 - 520*s23^2) + s12^4*
                   (-933*s13^3 + 646*s13^2*s23 + 1500*s13*s23^2 + 
                    300*s23^3) + s13^2*s23*(-696*s13^4 + 121*s13^3*s23 + 
                    64*s13^2*s23^2 - 404*s13*s23^3 - 140*s23^4) + 
                  s12^3*(2385*s13^4 + 844*s13^3*s23 + 4965*s13^2*s23^2 + 
                    4530*s13*s23^3 + 1160*s23^4) + s12*s13*(-1602*s13^5 + 
                    828*s13^4*s23 + 1015*s13^3*s23^2 + 1214*s13^2*s23^3 + 
                    474*s13*s23^4 + 90*s23^5) + s12^2*(1395*s13^5 + 
                    2252*s13^4*s23 + 4451*s13^3*s23^2 + 5632*s13^2*s23^3 + 
                    3100*s13*s23^4 + 590*s23^5))) + p1q^3*s23*(p3q^3*s12*
                 (180*s12^5*(2*s13 + 5*s23) + 240*s12^4*(3*s13^2 + 
                    11*s13*s23 + 7*s23^2) + s12^3*(183*s13^3 + 656*s13^2*
                     s23 + 720*s13*s23^2 + 1440*s23^3) + s13*s23*(560*s13^4 + 
                    602*s13^3*s23 - 37*s13^2*s23^2 + 710*s13*s23^3 + 
                    300*s23^4) + s12^2*(1002*s13^4 - 211*s13^3*s23 - 
                    4218*s13^2*s23^2 + 660*s13*s23^3 + 1440*s23^4) + 
                  s12*(720*s13^5 + 524*s13^4*s23 - 911*s13^3*s23^2 + 
                    156*s13^2*s23^3 + 2520*s13*s23^4 + 780*s23^5)) + 
                p2q*p3q^2*(270*s12^6*(s13 + 2*s23) + 10*s12^5*(12*s13^2 + 
                    125*s13*s23 + 126*s23^2) + s12^4*(-585*s13^3 - 711*s13^2*
                     s23 + 860*s13*s23^2 + 2040*s23^3) + s12^3*(1728*s13^4 + 
                    461*s13^3*s23 - 2573*s13^2*s23^2 + 4250*s13*s23^3 + 
                    2160*s23^4) + s13*s23*(560*s13^5 - 300*s13^4*s23 - 
                    763*s13^3*s23^2 + 77*s13^2*s23^3 - 90*s13*s23^4 - 
                    70*s23^5) + s12^2*(1506*s13^5 + 155*s13^4*s23 - 
                    1178*s13^3*s23^2 + 3377*s13^2*s23^3 + 4100*s13*s23^4 + 
                    540*s23^5) + s12*(720*s13^6 - 420*s13^5*s23 - 1300*s13^4*
                     s23^2 - 647*s13^3*s23^3 + 1429*s13^2*s23^4 - 340*s13*
                     s23^5 - 300*s23^6)) - p2q^3*(10*s12^4*(15*s13^3 + 
                    16*s13^2*s23 + 8*s13*s23^2 + 7*s23^3) + s12^3*
                   (-570*s13^4 + 367*s13^3*s23 + 863*s13^2*s23^2 + 460*s13*
                     s23^3 + 210*s23^4) + 3*s13*s23*(-604*s13^5 - 349*s13^4*
                     s23 + 222*s13^3*s23^2 + 93*s13^2*s23^3 + 166*s13*s23^4 + 
                    40*s23^5) + s12^2*(-2385*s13^5 - 938*s13^4*s23 + 
                    1495*s13^3*s23^2 + 1286*s13^2*s23^3 + 800*s13*s23^4 + 
                    210*s23^5) + s12*(-2124*s13^6 - 1886*s13^5*s23 + 
                    726*s13^4*s23^2 + 1099*s13^3*s23^3 + 1081*s13^2*s23^4 + 
                    540*s13*s23^5 + 70*s23^6)) - p2q^2*p3q*
                 (10*s12^5*(24*s13^2 + 22*s13*s23 - 3*s23^2) + s12^4*
                   (558*s13^3 + 717*s13^2*s23 + 300*s13*s23^2 - 80*s23^3) + 
                  s12^3*(-1116*s13^4 - 89*s13^3*s23 + 1180*s13^2*s23^2 - 
                    340*s13*s23^3 + 300*s23^4) + s13*s23*(-1886*s13^5 + 
                    9*s13^4*s23 + 1213*s13^3*s23^2 - 554*s13^2*s23^3 + 
                    318*s13*s23^4 + 190*s23^5) + s12^2*(-2721*s13^5 + 
                    43*s13^4*s23 + 1546*s13^3*s23^2 - 1017*s13^2*s23^3 + 
                    570*s13*s23^4 + 720*s23^5) + s12*(-2664*s13^6 - 
                    24*s13^5*s23 + 2160*s13^4*s23^2 - 505*s13^3*s23^3 - 
                    682*s13^2*s23^4 + 1180*s13*s23^5 + 370*s23^6))) + 
              p1q^2*(-(p3q^4*s12^2*(90*s12^5*(s13 + 5*s23) + 10*s12^4*
                    (15*s13^2 + 103*s13*s23 + 82*s23^2) - s12^3*(69*s13^3 + 
                     76*s13^2*s23 + 80*s13*s23^2 - 1110*s23^3) + s13*s23*
                    (280*s13^4 + 991*s13^3*s23 + 523*s13^2*s23^2 + 1270*s13*
                      s23^3 + 480*s23^4) + s12^2*(231*s13^4 + 185*s13^3*s23 - 
                     2802*s13^2*s23^2 + 1640*s13*s23^3 + 1560*s23^4) + 
                   s12*(360*s13^5 + 662*s13^4*s23 - 443*s13^3*s23^2 + 
                     1394*s13^2*s23^3 + 3140*s13*s23^4 + 820*s23^5))) + 
                p2q^4*s13*(10*s12^4*(12*s13^3 + 8*s13^2*s23 + s13*s23^2 + 
                    5*s23^3) + s12^3*(159*s13^4 + 1009*s13^3*s23 + 654*s13^2*
                     s23^2 + 278*s13*s23^3 + 150*s23^4) + s13*s23*
                   (-928*s13^5 - 77*s13^4*s23 + 928*s13^3*s23^2 + 271*s13^2*
                     s23^3 + 134*s13*s23^4 - 60*s23^5) + s12^2*(-501*s13^5 + 
                    1294*s13^4*s23 + 2341*s13^3*s23^2 + 1186*s13^2*s23^3 + 
                    466*s13*s23^4 + 150*s23^5) + s12*(-540*s13^6 - 104*s13^5*
                     s23 + 1287*s13^4*s23^2 + 1509*s13^3*s23^3 + 746*s13^2*
                     s23^4 + 138*s13*s23^5 + 50*s23^6)) + p2q^3*p3q*
                 (-10*s12^5*(33*s13^3 + 28*s13^2*s23 - 8*s13*s23^2 - 
                    23*s23^3) - 2*s12^4*(174*s13^4 + 764*s13^3*s23 + 
                    96*s13^2*s23^2 - 540*s13*s23^3 - 345*s23^4) - s13^2*s23*
                   (1046*s13^5 - 340*s13^4*s23 - 327*s13^3*s23^2 + 1137*s13^2*
                     s23^3 + 88*s13*s23^4 + 10*s23^5) + s12^3*(1230*s13^5 + 
                    297*s13^4*s23 - 1388*s13^3*s23^2 + 834*s13^2*s23^3 + 
                    2110*s13*s23^4 + 690*s23^5) + s12*s13*(-900*s13^6 + 
                    1360*s13^5*s23 - 594*s13^4*s23^2 - 2741*s13^3*s23^3 - 
                    972*s13^2*s23^4 + 572*s13*s23^5 + 190*s23^6) + 
                  s12^2*(348*s13^6 + 2115*s13^5*s23 - 619*s13^4*s23^2 - 
                    1648*s13^3*s23^3 + 1328*s13^2*s23^4 + 1300*s13*s23^5 + 
                    230*s23^6)) - p2q*p3q^3*s12*(90*s12^6*(s13 + 4*s23) + 
                  s12^5*(-150*s13^2 + 110*s13*s23 + 1120*s23^2) + 
                  s12^4*(-528*s13^3 - 1633*s13^2*s23 + 380*s13*s23^2 + 
                    2520*s23^3) + s12^3*(870*s13^4 + 1437*s13^3*s23 - 
                    1181*s13^2*s23^2 + 5190*s13*s23^3 + 2640*s23^4) - 
                  2*s13*s23*(280*s13^5 - 109*s13^4*s23 + 114*s13^3*s23^2 + 
                    264*s13^2*s23^3 + 365*s13*s23^4 + 115*s23^5) + 
                  s12^2*(438*s13^5 + 1374*s13^4*s23 + 2282*s13^3*s23^2 + 
                    4527*s13^2*s23^3 + 3600*s13*s23^4 + 400*s23^5) - 
                  s12*(720*s13^6 + 170*s13^5*s23 - 1240*s13^4*s23^2 - 
                    409*s13^3*s23^3 + 105*s13^2*s23^4 + 1460*s13*s23^5 + 
                    480*s23^6)) + p2q^2*p3q^2*(10*s12^6*(30*s13^2 + 
                    56*s13*s23 - 21*s23^2) + s12^5*(129*s13^3 + 1007*s13^2*
                     s23 + 430*s13*s23^2 - 460*s23^3) + s12^4*(-1107*s13^4 - 
                    2338*s13^3*s23 + 355*s13^2*s23^2 + 420*s23^4) + 
                  s13^2*s23*(-280*s13^5 + 489*s13^4*s23 + 299*s13^3*s23^2 - 
                    472*s13^2*s23^3 + 48*s13*s23^4 + 50*s23^5) + 
                  s12^3*(993*s13^5 - 650*s13^4*s23 - 2013*s13^3*s23^2 + 
                    267*s13^2*s23^3 + 2940*s13*s23^4 + 1380*s23^5) + 
                  s12*s13*(-360*s13^6 + 1610*s13^5*s23 - 1487*s13^4*s23^2 - 
                    1970*s13^3*s23^3 - 74*s13^2*s23^4 + 1254*s13*s23^5 + 
                    370*s23^6) + s12^2*(1569*s13^6 + 1271*s13^5*s23 - 
                    1373*s13^4*s23^2 - 524*s13^3*s23^3 + 2903*s13^2*s23^4 + 
                    3180*s13*s23^5 + 710*s23^6)))))/(144*p1q*(p2q + p3q)*
             s13^3*(-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + 
              (p3q*s12 - p1q*s23)^2*(p3q^2*s12*(s12 + s13) + p1q^2*s23*
                 (s13 + s23) - p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 
                    2*s23))) + p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + 
                   s12*(s13 - 2*s23))*(s13 + s23)) + p3q*(s12 + s13)*
                 (-(s13*(s13 + s23)) + s12*(3*s13 + 2*s23))) + 
              p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 3*s13 - s23) - 
                p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + p1q^2*p3q*s23*
                 (s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 2*s13*s23 - 
                    3*s23^2) + s13*(2*s13^2 + s13*s23 - s23^2)) + 
                p1q*p3q^2*s12*(-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + 
                    s13*s23 + s23^2) + s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) + 
           (18*p2q^6*s13^3*(25*s12^4*s23*(s13 + s23) - s13*s23*(s13 + s23)^2*
                (41*s13^2 + 28*s13*s23 - 5*s23^2) + s12^3*(-144*s13^3 - 
                 30*s13^2*s23 + 97*s13*s23^2 + 55*s23^3) + s12^2*
                (-288*s13^4 - 248*s13^3*s23 + 17*s13^2*s23^2 + 84*s13*s23^3 + 
                 35*s23^4) + s12*(-144*s13^5 - 234*s13^4*s23 - 93*s13^3*
                  s23^2 + 9*s13^2*s23^3 + 17*s13*s23^4 + 5*s23^5)) + 
             s23*(p3q*s12 - p1q*s23)^2*(90*p3q^4*s12^2*(s12 + s13)*s23*
                (5*s12^2 + 11*s12*s13 + 6*s13^2 + 10*s12*s23 + 11*s13*s23 + 
                 5*s23^2) + 90*p1q^4*s12*s23^2*(s13 + s23)*(5*s12^2 + 
                 11*s12*s13 + 6*s13^2 + 10*s12*s23 + 11*s13*s23 + 5*s23^2) - 
               p1q^3*p3q*s23*(450*s12^4*(2*s13 + 3*s23) + 30*s12^3*
                  (64*s13^2 + 155*s13*s23 + 88*s23^2) + s12^2*(2991*s13^3 + 
                   4711*s13^2*s23 + 3340*s13*s23^2 + 1620*s23^3) + 
                 2*s12*(630*s13^4 + 1966*s13^3*s23 + 1121*s13^2*s23^2 + 
                   145*s13*s23^3 + 360*s23^4) + s23*(560*s13^4 + 1861*s13^3*
                    s23 + 1611*s13^2*s23^2 + 700*s13*s23^3 + 390*s23^4)) - 
               p1q*p3q^3*s12*(450*s12^5 + 30*s12^4*(31*s13 + 28*s23) + 
                 s12^3*(1941*s13^2 + 580*s13*s23 + 1620*s23^2) + 
                 s13*s23*(1100*s13^3 + 2831*s13^2*s23 + 1750*s13*s23^2 + 
                   840*s23^3) + s12^2*(2181*s13^3 + 2412*s13^2*s23 + 
                   3170*s13*s23^2 + 2520*s23^3) + s12*(720*s13^4 + 
                   3772*s13^3*s23 + 4381*s13^2*s23^2 + 4360*s13*s23^3 + 
                   1290*s23^4)) + p1q^2*p3q^2*(450*s12^5*(s13 + 3*s23) + 
                 30*s12^4*(31*s13^2 + 123*s13*s23 + 86*s23^2) + 
                 s12^3*(1941*s13^3 + 5062*s13^2*s23 + 2480*s13*s23^2 + 
                   2340*s23^3) + s13*s23*(560*s13^4 + 1861*s13^3*s23 + 
                   1611*s13^2*s23^2 + 700*s13*s23^3 + 390*s23^4) + 
                 s12^2*(2181*s13^4 + 4413*s13^3*s23 + 4474*s13^2*s23^2 + 
                   2020*s13*s23^3 + 2340*s23^4) + s12*(720*s13^5 + 
                   2962*s13^4*s23 + 3763*s13^3*s23^2 + 4282*s13^2*s23^3 + 
                   3170*s13*s23^4 + 1230*s23^5))) - p2q^5*s13^2*
              (18*p3q*(25*s12^5*s23*(4*s13 + 3*s23) + s13^2*s23*(s13 + s23)^2*
                  (41*s13^2 - 21*s13*s23 - 10*s23^2) + s12^4*(-432*s13^3 + 
                   32*s13^2*s23 + 374*s13*s23^2 + 185*s23^3) + 
                 s12^3*(-720*s13^4 - 579*s13^3*s23 + 199*s13^2*s23^2 + 
                   373*s13*s23^3 + 145*s23^4) + s12*s13*(144*s13^5 + 
                   27*s13^4*s23 - 318*s13^3*s23^2 - 216*s13^2*s23^3 + 
                   10*s13*s23^4 + 25*s23^5) + s12^2*(-144*s13^5 - 525*s13^4*
                    s23 - 191*s13^3*s23^2 + 127*s13^2*s23^3 + 124*s13*s23^4 + 
                   35*s23^5)) - p1q*(30*s12^4*s23*(s13^2 - 16*s13*s23 - 
                   17*s23^2) + s12^3*(-2592*s13^4 + 2859*s13^3*s23 + 
                   901*s13^2*s23^2 - 1472*s13*s23^3 - 810*s23^4) - 
                 s12^2*(5184*s13^5 - 6771*s13^4*s23 - 5799*s13^3*s23^2 + 
                   1186*s13^2*s23^3 + 304*s13*s23^4 + 90*s23^5) + 
                 s13*s23*(-738*s13^5 - 1564*s13^4*s23 + 1519*s13^3*s23^2 + 
                   4077*s13^2*s23^3 + 1852*s13*s23^4 + 120*s23^5) + 
                 s12*(-2592*s13^6 + 3204*s13^5*s23 + 8038*s13^4*s23^2 + 
                   1799*s13^3*s23^3 + 155*s13^2*s23^4 + 808*s13*s23^5 + 
                   210*s23^6))) + p2q^4*s13*(18*p3q^2*(75*s12^6*s23*
                  (2*s13 + s23) + s13^3*s23^2*(s13 + s23)^2*(49*s13 + 
                   5*s23) + s12^5*(-432*s13^3 + 179*s13^2*s23 + 507*s13*
                    s23^2 + 205*s23^3) + s12*s13^2*s23*(207*s13^4 + 
                   306*s13^3*s23 + 6*s13^2*s23^2 - 158*s13*s23^3 - 
                   65*s23^4) + s12^4*(-432*s13^4 - 468*s13^3*s23 + 
                   267*s13^2*s23^2 + 469*s13*s23^3 + 185*s23^4) + 
                 s12^2*s13*(432*s13^5 + 470*s13^4*s23 - 369*s13^3*s23^2 - 
                   429*s13^2*s23^3 - 161*s13*s23^4 - 15*s23^5) + 
                 s12^3*(432*s13^5 - 234*s13^4*s23 - 359*s13^3*s23^2 - 
                   68*s13^2*s23^3 + 97*s13*s23^4 + 55*s23^5)) - p1q^2*s23*
                (-6*s12^4*(146*s13^3 + 342*s13^2*s23 - 75*s13*s23^2 - 
                   55*s23^3) + s12^3*(-7287*s13^4 - 6241*s13^3*s23 - 
                   1130*s13^2*s23^2 + 2414*s13*s23^3 + 1350*s23^4) + 
                 s13*s23*(-1064*s13^5 - 5707*s13^4*s23 - 3516*s13^3*s23^2 + 
                   3449*s13^2*s23^3 + 3222*s13*s23^4 + 900*s23^5) + 
                 s12^2*(-15123*s13^5 - 4890*s13^4*s23 + 1619*s13^3*s23^2 + 
                   2478*s13^2*s23^3 + 4378*s13*s23^4 + 1710*s23^5) + 
                 s12*(-8712*s13^6 - 6364*s13^5*s23 + 6293*s13^4*s23^2 + 
                   5739*s13^3*s23^3 + 4418*s13^2*s23^4 + 3314*s13*s23^5 + 
                   690*s23^6)) + p1q*p3q*(-30*s12^5*s23*(-12*s13^2 + 
                   11*s13*s23 + 26*s23^2) + s12^4*(5184*s13^4 + 3453*s13^3*
                    s23 + 2238*s13^2*s23^2 - 1892*s13*s23^3 - 1620*s23^4) + 
                 s12^3*(7776*s13^5 + 7401*s13^4*s23 + 9428*s13^3*s23^2 + 
                   4484*s13^2*s23^3 - 364*s13*s23^4 - 900*s23^5) + 
                 s12^2*s23*(9366*s13^5 + 2550*s13^4*s23 + 7541*s13^3*s23^2 + 
                   9104*s13^2*s23^3 + 2188*s13*s23^4 - 60*s23^5) + 
                 2*s13^2*s23*(-369*s13^5 - 106*s13^4*s23 + 2248*s13^3*s23^2 + 
                   2682*s13^2*s23^3 + 862*s13*s23^4 + 165*s23^5) + 
                 s12*s13*(-2592*s13^6 + 4320*s13^5*s23 + 11030*s13^4*s23^2 + 
                   4497*s13^3*s23^3 + 6318*s13^2*s23^4 + 6108*s13*s23^5 + 
                   990*s23^6))) - p2q*s23*(p1q^5*s23^3*(s13 + s23)*
                (450*s12^4 + 120*s12^3*(16*s13 + 7*s23) + s12^2*(4737*s13^2 + 
                   2620*s13*s23 + 720*s23^2) + 2*s12*(1278*s13^3 + 
                   2497*s13^2*s23 + 550*s13*s23^2 + 360*s23^3) + 
                 s23*(146*s13^3 + 977*s13^2*s23 + 400*s13*s23^2 + 
                   390*s23^3)) - 18*p3q^5*s12^3*(25*s12^5 + 25*s12^4*
                  (3*s13 + 4*s23) + s12^2*s13*(s13^2 - 69*s13*s23 - 
                   30*s23^2) + s12^3*(63*s13^2 + 155*s13*s23 + 100*s23^2) - 
                 s13*s23*(67*s13^3 + 177*s13^2*s23 + 135*s13*s23^2 + 
                   25*s23^3) - s12*(12*s13^4 + 191*s13^3*s23 + 307*s13^2*
                    s23^2 + 135*s13*s23^3 + 25*s23^4)) - p1q^4*p3q*s23^2*
                (450*s12^5*(3*s13 + 4*s23) + 30*s12^4*(115*s13^2 + 
                   261*s13*s23 + 125*s23^2) + s12^3*(10122*s13^3 + 
                   17599*s13^2*s23 + 9290*s13*s23^2 + 4560*s23^3) + 
                 3*s12^2*(4282*s13^4 + 7287*s13^3*s23 + 5467*s13^2*s23^2 + 
                   3120*s13*s23^3 + 1560*s23^4) + s23*(1826*s13^5 + 
                   6560*s13^4*s23 + 5087*s13^3*s23^2 + 1513*s13^2*s23^3 + 
                   770*s13*s23^4 - 390*s23^5) + s12*(4824*s13^5 + 13936*s13^4*
                    s23 + 10016*s13^3*s23^2 + 7365*s13^2*s23^3 + 7320*s13*
                    s23^4 + 1680*s23^5)) + p1q*p3q^4*s12^2*(450*s12^6 - 
                 30*s12^5*(13*s13 - 86*s23) + 4*s12^4*(327*s13^2 + 
                   935*s13*s23 + 1950*s23^2) + s12^3*(-345*s13^3 + 
                   8001*s13^2*s23 + 13230*s13*s23^2 + 7920*s23^3) + 
                 s12^2*(-4869*s13^4 - 109*s13^3*s23 + 7028*s13^2*s23^2 + 
                   4290*s13*s23^3 + 510*s23^4) - s13*s23*(1698*s13^4 + 
                   5309*s13^3*s23 + 5309*s13^2*s23^2 + 4630*s13*s23^3 + 
                   1290*s23^4) - s12*(2376*s13^5 + 8648*s13^4*s23 + 
                   4143*s13^3*s23^2 + 7895*s13^2*s23^3 + 6100*s13*s23^4 + 
                   1740*s23^5)) + p1q^3*p3q^2*s23*(1350*s12^6*(s13 + 2*s23) + 
                 30*s12^5*(38*s13^2 + 233*s13*s23 + 222*s23^2) + 
                 s12^4*(6273*s13^3 + 14675*s13^2*s23 + 9600*s13*s23^2 + 
                   11160*s23^3) + s12^3*(8712*s13^4 + 21767*s13^3*s23 + 
                   20733*s13^2*s23^2 + 20910*s13*s23^3 + 11520*s23^4) + 
                 s13*s23*(1120*s13^5 + 3576*s13^4*s23 + 2099*s13^3*s23^2 + 
                   23*s13^2*s23^3 - 10*s13*s23^4 - 390*s23^5) + 
                 s12^2*(5802*s13^5 + 10217*s13^4*s23 + 16838*s13^3*s23^2 + 
                   20111*s13^2*s23^3 + 17640*s13*s23^4 + 2700*s23^5) + 
                 s12*(1440*s13^6 + 3984*s13^5*s23 + 6864*s13^4*s23^2 + 
                   11387*s13^3*s23^3 + 5703*s13^2*s23^4 + 300*s13*s23^5 - 
                   1620*s23^6)) - p1q^2*p3q^3*s12*(450*s12^6*(s13 + 4*s23) - 
                 30*s12^5*(13*s13^2 - 51*s13*s23 - 196*s23^2) + 
                 s12^4*(888*s13^3 + 5741*s13^2*s23 + 6040*s13*s23^2 + 
                   13320*s23^3) + s12^3*(462*s13^4 + 7351*s13^3*s23 + 
                   17293*s13^2*s23^2 + 23810*s13*s23^3 + 13680*s23^4) - 
                 2*s13*s23*(560*s13^5 + 583*s13^4*s23 - 358*s13^3*s23^2 + 
                   930*s13^2*s23^3 + 1105*s13*s23^4 + 615*s23^5) + 
                 s12^2*(-2706*s13^5 - 1642*s13^4*s23 + 8538*s13^3*s23^2 + 
                   22393*s13^2*s23^3 + 15940*s13*s23^4 + 1920*s23^5) - 
                 s12*(1440*s13^6 + 6946*s13^5*s23 + 648*s13^4*s23^2 - 
                   6315*s13^3*s23^3 - 1821*s13^2*s23^4 + 4140*s13*s23^5 + 
                   2520*s23^6))) + p2q^3*(-18*p3q^3*s12*(25*s12^6*s23*
                  (4*s13 + s23) + s13^3*s23^2*(105*s13^3 + 201*s13^2*s23 + 
                   131*s13*s23^2 + 35*s23^3) + s12^5*(-144*s13^3 + 
                   117*s13^2*s23 + 280*s13*s23^2 + 75*s23^3) + s12*s13^2*s23*
                  (303*s13^4 + 450*s13^3*s23 - 2*s13^2*s23^2 - 180*s13*
                    s23^3 - 75*s23^4) + s12^4*(144*s13^4 - 266*s13^3*s23 - 
                   95*s13^2*s23^2 + 155*s13*s23^3 + 75*s23^4) + s12^2*s13*
                  (432*s13^5 + 694*s13^4*s23 - 315*s13^3*s23^2 - 720*s13^2*
                    s23^3 - 424*s13*s23^4 - 85*s23^5) + s12^3*(720*s13^5 + 
                   108*s13^4*s23 - 722*s13^3*s23^2 - 581*s13^2*s23^3 - 
                   110*s13*s23^4 + 25*s23^5)) + p1q^3*s23^2*
                (6*s12^4*(281*s13^3 + 90*s13^2*s23 + 90*s13*s23^2 + 
                   65*s23^3) + s12^3*(-1338*s13^4 + 1057*s13^3*s23 + 
                   4133*s13^2*s23^2 + 2260*s13*s23^3 + 1170*s23^4) + 
                 3*s13*s23*(-20*s13^5 - 1631*s13^4*s23 - 1682*s13^3*s23^2 + 
                   167*s13^2*s23^3 + 598*s13*s23^4 + 360*s23^5) + 
                 s12^2*(-14211*s13^5 - 5158*s13^4*s23 + 6693*s13^3*s23^2 + 
                   6570*s13^2*s23^3 + 3620*s13*s23^4 + 1170*s23^5) + 
                 s12*(-10476*s13^6 - 15166*s13^5*s23 + 162*s13^4*s23^2 + 
                   6673*s13^3*s23^3 + 4411*s13^2*s23^4 + 2980*s13*s23^5 + 
                   390*s23^6)) + p1q*p3q^2*(30*s12^6*s23*(-42*s13^2 + 
                   70*s13*s23 + 43*s23^2) + s13^3*s23^2*(794*s13^4 + 
                   1951*s13^3*s23 + 909*s13^2*s23^2 - 38*s13*s23^3 + 
                   210*s23^4) + s12^5*(-2592*s13^4 - 5625*s13^3*s23 + 
                   2985*s13^2*s23^2 + 8380*s13*s23^3 + 3870*s23^4) + 
                 s12^4*s23*(-7179*s13^4 - 3945*s13^3*s23 + 8030*s13^2*s23^2 + 
                   9560*s13*s23^3 + 3870*s23^4) + s12*s13^2*s23*(2412*s13^5 - 
                   1568*s13^4*s23 - 11991*s13^3*s23^2 - 3093*s13^2*s23^3 + 
                   3996*s13*s23^4 + 720*s23^5) + 3*s12^2*s13*(1728*s13^6 + 
                   1483*s13^5*s23 - 6641*s13^4*s23^2 - 5037*s13^3*s23^3 + 
                   493*s13^2*s23^4 + 1190*s13*s23^5 + 60*s23^6) + 
                 s12^3*(7776*s13^6 - 777*s13^5*s23 - 6839*s13^4*s23^2 - 
                   5197*s13^3*s23^3 + 5555*s13^2*s23^4 + 3460*s13*s23^5 + 
                   1290*s23^6)) - p1q^2*p3q*s23*(6*s12^5*(s13^3 - 160*s13^2*
                    s23 + 140*s13*s23^2 + 205*s23^3) + s12^4*(-4080*s13^4 - 
                   8116*s13^3*s23 + 2012*s13^2*s23^2 + 5360*s13*s23^3 + 
                   3690*s23^4) + s13^2*s23*(-2182*s13^5 - 6124*s13^4*s23 + 
                   1241*s13^3*s23^2 + 7969*s13^2*s23^3 + 4376*s13*s23^4 + 
                   1590*s23^5) + s12^3*(-11382*s13^5 - 18257*s13^4*s23 - 
                   2760*s13^3*s23^2 + 7590*s13^2*s23^3 + 9670*s13*s23^4 + 
                   3690*s23^5) + s12^2*(-15432*s13^6 - 8467*s13^5*s23 - 
                   7313*s13^4*s23^2 + 1240*s13^3*s23^3 + 10544*s13^2*s23^4 + 
                   7700*s13*s23^5 + 1230*s23^6) + s12*s13*(-8136*s13^6 - 
                   10168*s13^5*s23 + 202*s13^4*s23^2 - 2011*s13^3*s23^3 + 
                   4264*s13^2*s23^4 + 8596*s13*s23^5 + 2550*s23^6))) + 
             p2q^2*(p1q^4*s23^3*(60*s12^4*(8*s13^2 + 7*s13*s23 - s23^2) + 
                 s12^3*(2001*s13^3 + 3817*s13^2*s23 + 400*s13*s23^2 - 
                   120*s23^3) + s12^2*(9315*s13^4 + 9332*s13^3*s23 + 
                   2511*s13^2*s23^2 + 100*s13*s23^3 - 450*s23^4) + 
                 s12*(6372*s13^5 + 14210*s13^4*s23 + 6959*s13^3*s23^2 + 
                   311*s13^2*s23^3 + 410*s13*s23^4 - 780*s23^5) + 
                 s23*(-120*s13^5 + 2611*s13^4*s23 + 3368*s13^3*s23^2 + 
                   1317*s13^2*s23^3 + 290*s13*s23^4 - 390*s23^5)) + 18*p3q^4*
                s12^2*(25*s12^6*s23 - 25*s12^5*(s13 - 2*s23)*s23 + 
                 s12^4*(144*s13^3 - 204*s13^2*s23 - 280*s13*s23^2 - 
                   25*s23^3) + s13^2*s23^2*(93*s13^3 + 220*s13^2*s23 + 
                   182*s13*s23^2 + 55*s23^3) + s12^3*(288*s13^4 - 12*s13^3*
                    s23 - 641*s13^2*s23^2 - 495*s13*s23^3 - 100*s23^4) + 
                 s12*s13*s23*(149*s13^4 + 311*s13^3*s23 + 183*s13^2*s23^2 + 
                   47*s13*s23^3 + 5*s23^4) + s12^2*(144*s13^5 + 291*s13^4*
                    s23 - 165*s13^3*s23^2 - 435*s13^2*s23^3 - 235*s13*s23^4 - 
                   50*s23^5)) + p1q^3*p3q*s23^2*(30*s12^5*(28*s13^2 + 
                   16*s13*s23 - 9*s23^2) + s12^4*(1098*s13^3 - 2741*s13^2*
                    s23 + 180*s13*s23^2 - 600*s23^3) - s12^3*(10764*s13^4 + 
                   13547*s13^3*s23 + 2260*s13^2*s23^2 + 1520*s13*s23^3 - 
                   1620*s23^4) - s12^2*(22263*s13^5 + 24371*s13^4*s23 + 
                   11386*s13^3*s23^2 + 2963*s13^2*s23^3 - 890*s13*s23^4 - 
                   3960*s23^5) + s13*s23*(-2710*s13^5 - 9873*s13^4*s23 - 
                   5633*s13^3*s23^2 + 1594*s13^2*s23^3 + 1534*s13*s23^4 + 
                   1470*s23^5) - s12*(9108*s13^6 + 19308*s13^5*s23 + 
                   9044*s13^4*s23^2 + 6347*s13^3*s23^3 + 3470*s13^2*s23^4 - 
                   3580*s13*s23^5 - 2010*s23^6)) + p1q*p3q^3*s12*
                (30*s12^6*(44*s13 - 43*s23)*s23 + s12^5*s23*(-627*s13^2 + 
                   1640*s13*s23 - 2640*s23^2) + s13^2*s23^2*(-1392*s13^4 - 
                   3349*s13^3*s23 + 32*s13^2*s23^2 + 1108*s13*s23^3 - 
                   60*s23^4) + s12^4*(-2592*s13^4 - 4755*s13^3*s23 + 
                   3666*s13^2*s23^2 + 8280*s13*s23^3 + 1620*s23^4) + 
                 s12*s13*s23*(-3330*s13^5 - 8280*s13^4*s23 + 2513*s13^3*
                    s23^2 + 7550*s13^2*s23^3 + 6282*s13*s23^4 + 1530*s23^5) + 
                 s12^3*(-5184*s13^5 - 10197*s13^4*s23 + 4832*s13^3*s23^2 + 
                   19815*s13^2*s23^3 + 19530*s13*s23^4 + 6000*s23^5) + 
                 s12^2*(-2592*s13^6 - 10719*s13^5*s23 + 2392*s13^4*s23^2 + 
                   12669*s13^3*s23^3 + 21144*s13^2*s23^4 + 13100*s13*s23^5 + 
                   3030*s23^6)) - p1q^2*p3q^2*s23*(30*s12^6*(44*s13^2 + 
                   74*s13*s23 - 39*s23^2) + s12^5*(1059*s13^3 + 209*s13^2*
                    s23 + 1770*s13*s23^2 - 2460*s23^3) + s12^4*(-2781*s13^4 - 
                   13658*s13^3*s23 - 475*s13^2*s23^2 + 1820*s13*s23^3 + 
                   2340*s23^4) + s13^2*s23*(-560*s13^5 - 921*s13^4*s23 + 
                   2345*s13^3*s23^2 + 3440*s13^2*s23^3 + 1424*s13*s23^4 + 
                   690*s23^5) + s12^3*(-4557*s13^5 - 18554*s13^4*s23 - 
                   11011*s13^3*s23^2 + 4665*s13^2*s23^3 + 11920*s13*s23^4 + 
                   7380*s23^5) + s12*s13*(-720*s13^6 + 2734*s13^5*s23 + 
                   5407*s13^4*s23^2 - 3246*s13^3*s23^3 + 3758*s13^2*s23^4 + 
                   7942*s13*s23^5 + 3090*s23^6) + s12^2*(-2757*s13^6 + 
                   4541*s13^5*s23 - 8615*s13^4*s23^2 - 4960*s13^3*s23^3 + 
                   10201*s13^2*s23^4 + 12740*s13*s23^5 + 3750*s23^6))))/
            (288*p1q*(p2q + p3q)*s13^3*s23*(-(p2q^4*s13^2*(s12 + s13)*
                (s13 + s23)) + (p3q*s12 - p1q*s23)^2*(p3q^2*s12*(s12 + s13) + 
                p1q^2*s23*(s13 + s23) - p1q*p3q*(s13*(s13 + s23) + 
                  s12*(s13 + 2*s23))) + p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + 
                   s12*(s13 - 2*s23))*(s13 + s23)) + p3q*(s12 + s13)*
                 (-(s13*(s13 + s23)) + s12*(3*s13 + 2*s23))) + 
              p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 3*s13 - s23) - 
                p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + p1q^2*p3q*s23*
                 (s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 2*s13*s23 - 
                    3*s23^2) + s13*(2*s13^2 + s13*s23 - s23^2)) + 
                p1q*p3q^2*s12*(-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + 
                    s13*s23 + s23^2) + s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) + 
           ((-90*p1q^2*s12*s23*(3*s12^2 + 5*s12*s13 + 2*s13^2 + 6*s12*s23 + 
                5*s13*s23 + 3*s23^2) - 18*(s12 + s13 + s23)*(5*p3q^2*s12*s23*
                 (3*s12 + 2*s13 + 3*s23) + p2q^2*s13*(-15*s12^2 + 23*s13^2 - 
                  28*s13*s23 + 5*s23^2 - 2*s12*(24*s13 + 5*s23)) + 
                p2q*p3q*(15*s12^3 + 15*s12^2*(s13 + 2*s23) + s13*s23*
                   (-23*s13 + 5*s23) + s12*(-56*s13^2 + 15*s23^2))) + 
              p1q*(p3q*(270*s12^4 + 40*s12^3*(6*s13 + 13*s23) + 
                  s23^2*(-741*s13^2 + 330*s13*s23 + 250*s23^2) + 
                  s12^2*(-741*s13^2 - 90*s13*s23 + 480*s23^2) - 
                  6*s12*(307*s13^2*s23 - 80*s23^3)) + p2q*(-50*s12^3*
                   (6*s13 - 5*s23) - 3*s12^2*(s13^2 - 250*s23^2) + 
                  6*s12*(168*s13^3 - 10*s13^2*s23 + 90*s13*s23^2 + 
                    125*s23^3) + s23*(414*s13^3 - 417*s13^2*s23 + 240*s13*
                     s23^2 + 250*s23^3))))*den[-1 + 2*ep])/
            (288*p1q*(p2q + p3q)*s13^3))*p1 . E0conj + 
         (-1/72*(ep^2*(10*s12 + s13)*(s12^2 - s13*s23 + s12*(s13 + s23)))/
             s13^2 + (ep*(-18*p1q^5*s23^3*(s13 + s23)*(5*s12^3 + 
                10*s12^2*(2*s13 + s23) + s13*(9*s13^2 + 14*s13*s23 + 
                  5*s23^2) + s12*(24*s13^2 + 25*s13*s23 + 5*s23^2)) + 
              18*(p2q + p3q)*(s12 - s13)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + 
                s23)*(5*p3q^2*s12^2*(s12 + 2*s13 + s23) + p2q^2*s13*
                 (s13 + s23)*(5*s12 + 9*s13 + 5*s23) - p2q*p3q*s12*
                 (19*s13^2 + 20*s13*s23 + 5*s23^2 + 5*s12*(2*s13 + s23))) + 
              p1q^4*s23^2*(p2q*(20*s12^3*(3*s13^2 + 2*s13*s23 - s23^2) + 
                  s12^2*(201*s13^3 + 131*s13^2*s23 - 110*s13*s23^2 - 
                    40*s23^3) + s13*(162*s13^4 + 1083*s13^3*s23 + 869*s13^2*
                     s23^2 - 212*s13*s23^3 - 160*s23^4) + s12*(303*s13^4 + 
                    634*s13^3*s23 - 121*s13^2*s23^2 - 310*s13*s23^3 - 
                    20*s23^4)) + p3q*(90*s12^4*(3*s13 + 4*s23) + 10*s12^3*
                   (87*s13^2 + 184*s13*s23 + 79*s23^2) + s12^2*(417*s13^3 + 
                    1949*s13^2*s23 + 1960*s13*s23^2 + 500*s23^3) + 
                  s13*(-324*s13^4 + 3*s13^3*s23 + 257*s13^2*s23^2 - 
                    140*s13*s23^3 - 70*s23^4) + s12*(-507*s13^4 - 176*s13^3*
                     s23 + 419*s13^2*s23^2 + 320*s13*s23^3 + 70*s23^4))) + 
              p1q*(p3q^4*s12^2*(-90*s12^5 + 162*s13^3*s23*(s13 + s23) - 
                  40*s12^4*(6*s13 + 13*s23) + s12^3*(267*s13^2 - 920*s13*
                     s23 - 770*s23^2) + s12^2*(921*s13^3 + 677*s13^2*s23 - 
                    340*s13*s23^2 - 340*s23^3) + s12*s13*(504*s13^3 + 
                    807*s13^2*s23 + 970*s13*s23^2 + 340*s23^3)) - 
                p2q^4*s13^2*(10*s12^3*(3*s13^2 + 14*s13*s23 + 11*s23^2) + 
                  s12^2*(357*s13^3 + 571*s13^2*s23 + 434*s13*s23^2 + 
                    220*s23^3) + s13*(324*s13^4 - 327*s13^3*s23 - 1085*s13^2*
                     s23^2 - 544*s13*s23^3 - 110*s23^4) + s12*(651*s13^4 + 
                    536*s13^3*s23 + 121*s13^2*s23^2 + 184*s13*s23^3 + 
                    110*s23^4)) + p2q^3*p3q*s13*(10*s12^4*(18*s13^2 + 
                    3*s13*s23 - 14*s23^2) + s12^3*(1293*s13^3 + 874*s13^2*
                     s23 - 354*s13*s23^2 - 280*s23^3) + 2*s12^2*(834*s13^4 + 
                    661*s13^3*s23 + 130*s13^2*s23^2 - 177*s13*s23^3 - 
                    70*s23^4) + s12*s13*(69*s13^4 - 1175*s13^3*s23 - 
                    1069*s13^2*s23^2 + 40*s13*s23^3 + 30*s23^4) + 
                  s13^2*(-486*s13^4 + 75*s13^3*s23 + 905*s13^2*s23^2 + 
                    454*s13*s23^3 + 110*s23^4)) + p2q^2*p3q^2*
                 (162*s13^5*s23*(s13 + s23) + s12^5*(-360*s13^2 + 360*s13*
                     s23 + 250*s23^2) + s12^4*(-1755*s13^3 - 483*s13^2*s23 + 
                    1110*s13*s23^2 + 500*s23^3) + s12^2*s13*(1755*s13^4 + 
                    1974*s13^3*s23 - 557*s13^2*s23^2 - 1404*s13*s23^3 - 
                    390*s23^4) + s12*s13^2*(1476*s13^4 + 585*s13^3*s23 - 
                    300*s13^2*s23^2 + 404*s13*s23^3 + 140*s23^4) + 
                  s12^3*(-1116*s13^4 - 1884*s13^3*s23 - 1107*s13^2*s23^2 + 
                    360*s13*s23^3 + 250*s23^4)) + p2q*p3q^3*s12*
                 (50*s12^5*(6*s13 - 5*s23) - 324*s13^4*s23*(s13 + s23) + 
                  s12^4*(1059*s13^2 + 700*s13*s23 - 250*s23^2) + 
                  s12^3*(-168*s13^3 + 2018*s13^2*s23 + 1810*s13*s23^2 + 
                    250*s23^3) + s12^2*(-2421*s13^4 - 1803*s13^3*s23 + 
                    809*s13^2*s23^2 + 1160*s13*s23^3 + 250*s23^4) - 
                  s12*s13*(1494*s13^4 + 1467*s13^3*s23 + 1647*s13^2*s23^2 + 
                    1270*s13*s23^3 + 250*s23^4))) + p1q^3*s23*(
                p3q^2*(162*s13^3*s23^2*(s13 + s23) - 270*s12^5*(s13 + 
                    2*s23) - 20*s12^4*(33*s13^2 + 115*s13*s23 + 69*s23^2) + 
                  s12^3*(462*s13^3 - 985*s13^2*s23 - 2860*s13*s23^2 - 
                    1140*s23^3) + 5*s12^2*(300*s13^4 + 503*s13^3*s23 + 
                    137*s13^2*s23^2 - 106*s13*s23^3 - 60*s23^4) + 
                  s12*s13*(648*s13^4 + 498*s13^3*s23 - 67*s13^2*s23^2 + 
                    710*s13*s23^3 + 300*s23^4)) + p2q^2*(10*s12^3*(15*s13^3 + 
                    16*s13^2*s23 + 8*s13*s23^2 + 7*s23^3) + s12^2*(30*s13^4 + 
                    677*s13^3*s23 + 513*s13^2*s23^2 + 330*s13*s23^3 + 
                    140*s23^4) + s13*(162*s13^5 - 1572*s13^4*s23 - 1357*s13^3*
                     s23^2 + 627*s13^2*s23^3 + 180*s13*s23^4 - 70*s23^5) + 
                  s12*(42*s13^5 - 569*s13^4*s23 + 498*s13^3*s23^2 + 
                    733*s13^2*s23^3 + 180*s13*s23^4 + 70*s23^5)) + 
                p2q*p3q*(10*s12^4*(24*s13^2 + 22*s13*s23 - 3*s23^2) + 
                  s12^3*(1458*s13^3 + 2037*s13^2*s23 + 640*s13*s23^2 + 
                    10*s23^3) + 2*s12^2*(1116*s13^4 + 1848*s13^3*s23 + 
                    1058*s13^2*s23^2 + 485*s13*s23^3 + 55*s23^4) + 
                  s13*(648*s13^5 - 816*s13^4*s23 - 1411*s13^3*s23^2 + 
                    33*s13^2*s23^3 - 90*s13*s23^4 - 70*s23^5) + 
                  s12*(1662*s13^5 + 451*s13^4*s23 - 793*s13^3*s23^2 + 
                    669*s13^2*s23^3 + 480*s13*s23^4 + 70*s23^5))) + 
              p1q^2*(p3q^3*s12*(-324*s13^3*s23^2*(s13 + s23) + 90*s12^5*
                   (s13 + 4*s23) + 10*s12^4*(15*s13^2 + 124*s13*s23 + 
                    120*s23^2) + s12^3*(-447*s13^3 - 349*s13^2*s23 + 
                    2180*s13*s23^2 + 1320*s23^3) + s12^2*(-831*s13^4 - 
                    2846*s13^3*s23 - 1349*s13^2*s23^2 + 550*s13*s23^3 + 
                    480*s23^4) - s12*s13*(324*s13^4 + 1005*s13^3*s23 + 
                    817*s13^2*s23^2 + 1270*s13*s23^3 + 480*s23^4)) - 
                p2q^3*s13*(10*s12^3*(12*s13^3 + 8*s13^2*s23 + s13*s23^2 + 
                    5*s23^3) + s12^2*(519*s13^4 + 559*s13^3*s23 - 186*s13^2*
                     s23^2 + 198*s13*s23^3 + 100*s23^4) + s13*(162*s13^5 - 
                    1227*s13^4*s23 - 665*s13^3*s23^2 + 996*s13^2*s23^3 + 
                    222*s13*s23^4 - 50*s23^5) + s12*(561*s13^5 - 172*s13^4*
                     s23 - 141*s13^3*s23^2 + 194*s13^2*s23^3 + 138*s13*
                     s23^4 + 50*s23^5)) + p2q^2*p3q*(10*s12^4*(33*s13^3 + 
                    28*s13^2*s23 - 8*s13*s23^2 - 23*s23^3) + 2*s12^3*
                   (594*s13^4 + 1269*s13^3*s23 + 606*s13^2*s23^2 - 365*s13*
                     s23^3 - 230*s23^4) + s12^2*(675*s13^5 + 2691*s13^4*s23 + 
                    4916*s13^3*s23^2 + 984*s13^2*s23^3 - 470*s13*s23^4 - 
                    230*s23^5) + s13^2*(-324*s13^5 + 1299*s13^4*s23 + 
                    1241*s13^3*s23^2 - 384*s13^2*s23^3 + 48*s13*s23^4 + 
                    50*s23^5) + s12*s13*(-507*s13^5 - 32*s13^4*s23 + 
                    1589*s13^3*s23^2 + 1448*s13^2*s23^3 + 682*s13*s23^4 + 
                    180*s23^5)) - p2q*p3q^2*(324*s13^4*s23^2*(s13 + s23) + 
                  10*s12^5*(30*s13^2 + 56*s13*s23 - 21*s23^2) + 
                  s12^4*(819*s13^3 + 3147*s13^2*s23 + 1050*s13*s23^2 - 
                    190*s23^3) + s12^3*(-333*s13^4 + 2442*s13^3*s23 + 
                    3061*s13^2*s23^2 + 1660*s13*s23^3 + 250*s23^4) - 
                  2*s12*s13*(324*s13^5 - 183*s13^4*s23 - 284*s13^3*s23^2 + 
                    146*s13^2*s23^3 + 365*s13*s23^4 + 115*s23^5) + 
                  s12^2*(-1500*s13^5 - 1579*s13^4*s23 - 2347*s13^3*s23^2 + 
                    664*s13^2*s23^3 + 940*s13*s23^4 + 230*s23^5)))))/
            (144*p1q*(p2q + p3q)*s13^3*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (-18*p2q^6*s13^3*(-25*s12^4*s23*(s13 + s23) + 
               s13^2*s23*(s13 + s23)^2*(61*s13 + 23*s23) + s12^3*
                (144*s13^3 + 69*s13^2*s23 - 61*s13*s23^2 - 40*s23^3) + s12^2*
                (288*s13^4 + 346*s13^3*s23 + 91*s13^2*s23^2 - 36*s13*s23^3 - 
                 15*s23^4) + s12*s13*(144*s13^4 + 313*s13^3*s23 + 
                 200*s13^2*s23^2 + 21*s13*s23^3 - 10*s23^4)) + 
             p2q^5*s13^2*(-18*p3q*(2*s13^3*(35*s13 - 4*s23)*s23*(s13 + s23)^
                   2 + 25*s12^5*s23*(4*s13 + 3*s23) + s12^2*s13^2*
                  (144*s13^3 - 238*s13^2*s23 - 265*s13*s23^2 - 65*s23^3) + 
                 s12^4*(-432*s13^3 - 92*s13^2*s23 + 237*s13*s23^2 + 
                   130*s23^3) + s12*s13^2*(288*s13^4 + 312*s13^3*s23 - 
                   217*s13^2*s23^2 - 322*s13*s23^3 - 81*s23^4) + 
                 s12^3*(-576*s13^4 - 672*s13^3*s23 - 114*s13^2*s23^2 + 
                   117*s13*s23^3 + 55*s23^4)) + p1q*(30*s12^4*s23*
                  (s13^2 - 16*s13*s23 - 17*s23^2) + s12^3*(-2592*s13^4 + 
                   1737*s13^3*s23 + 2443*s13^2*s23^2 - 926*s13*s23^3 - 
                   660*s23^4) + s13^2*s23*(-1584*s13^4 - 955*s13^3*s23 + 
                   3867*s13^2*s23^2 + 3766*s13*s23^3 + 528*s23^4) + 
                 s12*s13*(-2592*s13^5 - 195*s13^4*s23 + 10169*s13^3*s23^2 + 
                   8710*s13^2*s23^3 + 632*s13*s23^4 - 630*s23^5) + 
                 s12^2*(-5184*s13^5 + 3096*s13^4*s23 + 10159*s13^3*s23^2 + 
                   3581*s13^2*s23^3 - 716*s13*s23^4 - 150*s23^5))) + 
             s23*(p3q*s12 - p1q*s23)^2*(18*p3q^4*s12*(25*s12^5 + 
                 25*s12^4*(3*s13 + 2*s23) + s12*s13^2*(13*s13^2 + 
                   14*s13*s23 - 15*s23^2) + 2*s13^3*(s13^2 + 10*s13*s23 + 
                   9*s23^2) + s12^2*s13*(45*s13^2 + 29*s13*s23 + 10*s23^2) + 
                 s12^3*(84*s13^2 + 85*s13*s23 + 25*s23^2)) - p1q*p3q^3*
                (450*s12^6 + 30*s12^5*(61*s13 + 73*s23) + s12^4*(3627*s13^2 + 
                   5620*s13*s23 + 3030*s23^2) + s12*s13^2*(1278*s13^3 + 
                   1457*s13^2*s23 + 664*s13*s23^2 - 660*s23^3) + s12^2*s13*
                  (4089*s13^3 + 5414*s13^2*s23 + 1424*s13*s23^2 - 90*s23^3) + 
                 36*s13^3*(10*s13^3 + 20*s13^2*s23 + 19*s13*s23^2 + 
                   9*s23^3) + s12^3*(5418*s13^3 + 6811*s13^2*s23 + 
                   3700*s13*s23^2 + 1290*s23^3)) + 18*p1q^4*s23*
                (25*s12^3*s23*(s13 + s23) + s13*(s13 + s23)^2*(2*s13^2 - 
                   23*s13*s23 + 5*s23^2) + s12^2*(39*s13^3 + 91*s13^2*s23 + 
                   120*s13*s23^2 + 50*s23^3) + s12*(41*s13^4 + 84*s13^3*s23 + 
                   118*s13^2*s23^2 + 100*s13*s23^3 + 25*s23^4)) + p1q^2*p3q^2*
                (450*s12^5*(s13 + 3*s23) + 6*s12^4*(293*s13^2 + 960*s13*s23 + 
                   655*s23^2) + s12^3*(1773*s13^3 + 9028*s13^2*s23 + 
                   8930*s13*s23^2 + 3810*s23^3) + s12*s13*(2343*s13^4 + 
                   7379*s13^3*s23 + 5739*s13^2*s23^2 + 1512*s13*s23^3 - 
                   660*s23^4) + s13^2*(72*s13^4 + 1043*s13^3*s23 + 
                   1653*s13^2*s23^2 + 292*s13*s23^3 - 390*s23^4) + 
                 2*s12^2*(1368*s13^4 + 4181*s13^3*s23 + 4246*s13^2*s23^2 + 
                   1480*s13*s23^3 + 615*s23^4)) - p1q^3*p3q*
                (450*s12^4*s23*(2*s13 + 3*s23) + 6*s12^3*(117*s13^3 + 
                   566*s13^2*s23 + 1015*s13*s23^2 + 515*s23^3) + 
                 s12^2*(468*s13^4 + 3615*s13^3*s23 + 7585*s13^2*s23^2 + 
                   6460*s13*s23^3 + 2130*s23^4) + s13*(360*s13^5 + 
                   702*s13^4*s23 + 1277*s13^3*s23^2 + 1995*s13^2*s23^3 + 
                   670*s13*s23^4 - 390*s23^5) + s12*(126*s13^5 + 525*s13^4*
                    s23 + 3312*s13^3*s23^2 + 3079*s13^2*s23^3 + 880*s13*
                    s23^4 + 390*s23^5))) + p2q^4*s13*(18*p3q^2*
                (-(s13^4*(29*s13 - 13*s23)*s23*(s13 + s23)^2) + 75*s12^6*s23*
                  (2*s13 + s23) + s12^4*s23*(-389*s13^3 - 175*s13^2*s23 + 
                   51*s13*s23^2 + 65*s23^3) + s12^5*(-432*s13^3 - 2*s13^2*
                    s23 + 291*s13*s23^2 + 140*s23^3) + s12^3*s13*
                  (1152*s13^4 + 603*s13^3*s23 - 220*s13^2*s23^2 - 267*s13*
                    s23^3 - 80*s23^4) + 2*s12^2*s13^2*(288*s13^4 + 
                   433*s13^3*s23 - 99*s13^2*s23^2 - 200*s13*s23^3 - 
                   49*s23^4) - 3*s12*s13^3*(48*s13^4 + s13^3*s23 - 
                   102*s13^2*s23^2 - 63*s13*s23^3 - 8*s23^4)) + p1q^2*s23*
                (6*s12^4*(146*s13^3 + 342*s13^2*s23 - 75*s13*s23^2 - 
                   55*s23^3) + s12^3*(6165*s13^4 + 9919*s13^3*s23 + 
                   698*s13^2*s23^2 - 1952*s13*s23^3 - 840*s23^4) + 
                 2*s12^2*(5076*s13^5 + 7718*s13^4*s23 + 439*s13^3*s23^2 - 
                   2624*s13^2*s23^3 - 676*s13*s23^4 - 255*s23^5) + 
                 s12*s13*(4017*s13^5 + 11996*s13^4*s23 - 630*s13^3*s23^2 - 
                   10129*s13^2*s23^3 - 2486*s13*s23^4 + 330*s23^5) + 
                 s13^2*(-846*s13^5 + 3131*s13^4*s23 + 6822*s13^3*s23^2 - 
                   545*s13^2*s23^3 - 2814*s13*s23^4 + 576*s23^5)) + p1q*p3q*
                (-30*s12^5*s23*(-12*s13^2 + 11*s13*s23 + 26*s23^2) + 
                 s12^4*(5184*s13^4 + 7017*s13^3*s23 + 4896*s13^2*s23^2 - 
                   146*s13*s23^3 - 1200*s23^4) - 2*s13^3*s23*(837*s13^4 + 
                   163*s13^3*s23 - 2031*s13^2*s23^2 - 868*s13*s23^3 + 
                   489*s23^4) + s12^3*(5184*s13^5 + 16524*s13^4*s23 + 
                   17807*s13^3*s23^2 + 8112*s13^2*s23^3 + 1234*s13*s23^4 - 
                   420*s23^5) + s12*s13^2*(-5184*s13^5 + 6702*s13^4*s23 + 
                   27649*s13^3*s23^2 + 12964*s13^2*s23^3 - 1378*s13*s23^4 - 
                   372*s23^5) + s12^2*s13*(-5184*s13^5 + 18243*s13^4*s23 + 
                   23708*s13^3*s23^2 + 9630*s13^2*s23^3 + 2380*s13*s23^4 + 
                   690*s23^5))) - p2q^3*(18*p3q^3*(25*s12^7*s23*(4*s13 + 
                   s23) + 2*s13^5*s23*(s13 + s23)^2*(10*s13 + 9*s23) + 
                 s12^3*s13^2*s23*(416*s13^3 - 193*s13^2*s23 - 157*s13*s23^2 - 
                   20*s23^3) + s12*s13^4*s23*(-38*s13^3 - 25*s13^2*s23 + 
                   24*s13*s23^2 + 11*s23^3) + s12^6*(-144*s13^3 - 54*s13^2*
                    s23 + 115*s13*s23^2 + 50*s23^3) + s12^4*s13*(1152*s13^4 + 
                   596*s13^3*s23 - 450*s13^2*s23^2 - 423*s13*s23^3 - 
                   120*s23^4) + s12^5*(576*s13^4 - 246*s13^3*s23 - 
                   447*s13^2*s23^2 - 105*s13*s23^3 + 25*s23^4) + s12^2*s13^3*
                  (-432*s13^4 - 330*s13^3*s23 + 357*s13^2*s23^2 + 295*s13*
                    s23^3 + 82*s23^4)) + p1q*p3q^2*(-30*s12^6*s23*
                  (-42*s13^2 + 70*s13*s23 + 43*s23^2) + s12^5*(2592*s13^4 + 
                   10287*s13^3*s23 + 2709*s13^2*s23^2 - 4510*s13*s23^3 - 
                   2580*s23^4) + s13^4*s23*(450*s13^4 - 629*s13^3*s23 - 
                   1599*s13^2*s23^2 + 338*s13*s23^3 + 858*s23^4) + 
                 s12^4*(-5184*s13^5 + 4398*s13^4*s23 + 5325*s13^3*s23^2 + 
                   885*s13^2*s23^3 - 760*s13*s23^4 - 1290*s23^5) - 
                 2*s12^3*s13*(7776*s13^5 + 5382*s13^4*s23 + 3626*s13^3*
                    s23^2 + 3589*s13^2*s23^3 + 272*s13*s23^4 - 825*s23^5) - 
                 4*s12^2*s13^2*(1296*s13^5 + 3096*s13^4*s23 - 1859*s13^3*
                    s23^2 - 1972*s13^2*s23^3 - 411*s13*s23^4 + 135*s23^5) + 
                 s12*s13^3*(2592*s13^5 - 5799*s13^4*s23 - 13937*s13^3*s23^2 + 
                   1624*s13^2*s23^3 + 5174*s13*s23^4 + 618*s23^5)) + p1q^2*
                p3q*s23*(6*s12^5*(s13^3 - 160*s13^2*s23 + 140*s13*s23^2 + 
                   205*s23^3) + s12^4*(-8448*s13^4 - 13798*s13^3*s23 + 
                   698*s13^2*s23^2 + 4490*s13*s23^3 + 2460*s23^4) + 
                 s13^3*(774*s13^5 - 3148*s13^4*s23 - 4085*s13^3*s23^2 + 
                   4963*s13^2*s23^3 + 3212*s13*s23^4 - 1914*s23^5) - 
                 3*s12*s13^2*(5708*s13^5 + 9553*s13^4*s23 - 2885*s13^3*
                    s23^2 - 6385*s13^2*s23^3 - 1176*s13*s23^4 + 380*s23^5) + 
                 2*s12^2*s13*(-19275*s13^5 - 22298*s13^4*s23 + 579*s13^3*
                    s23^2 + 10122*s13^2*s23^3 + 3435*s13*s23^4 + 390*s23^5) + 
                 s12^3*(-29106*s13^5 - 38403*s13^4*s23 - 3732*s13^3*s23^2 + 
                   10248*s13^2*s23^3 + 4430*s13*s23^4 + 1230*s23^5)) - p1q^3*
                s23*(6*s12^4*s23*(281*s13^3 + 90*s13^2*s23 + 90*s13*s23^2 + 
                   65*s23^3) + s12^3*(-702*s13^5 + 1554*s13^4*s23 - 
                   611*s13^3*s23^2 + 4475*s13^2*s23^3 + 2290*s13*s23^4 + 
                   780*s23^5) - 3*s13^2*(120*s13^6 - 528*s13^5*s23 + 
                   701*s13^4*s23^2 + 2902*s13^3*s23^3 + 355*s13^2*s23^4 - 
                   838*s13*s23^5 + 360*s23^6) + s12^2*(-3060*s13^6 - 
                   3147*s13^5*s23 - 8451*s13^4*s23^2 + 3193*s13^3*s23^3 + 
                   8567*s13^2*s23^4 + 2260*s13*s23^5 + 390*s23^6) + 
                 s12*s13*(-2718*s13^6 - 2727*s13^5*s23 - 12553*s13^4*s23^2 - 
                   4552*s13^3*s23^3 + 8890*s13^2*s23^4 + 3352*s13*s23^5 + 
                   510*s23^6))) + p2q*(18*p3q^5*s12^2*(50*s12^6*s23 + 
                 25*s12^5*s23*(2*s13 + 3*s23) + s12^4*s13*(144*s13^2 - 
                   78*s13*s23 - 95*s23^2) - 2*s13^3*s23*(12*s13^3 + 
                   49*s13^2*s23 + 46*s13*s23^2 + 9*s23^3) + s12*s13^2*s23*
                  (-46*s13^3 - 93*s13^2*s23 + 15*s23^3) + s12^3*(288*s13^4 - 
                   32*s13^3*s23 - 302*s13^2*s23^2 - 155*s13*s23^3 - 
                   25*s23^4) + s12^2*s13*(144*s13^4 + 24*s13^3*s23 - 
                   199*s13^2*s23^2 - 99*s13*s23^3 - 10*s23^4)) + p1q^2*p3q^3*
                s23*(450*s12^7*(s13 + 4*s23) + 6*s12^6*(73*s13^2 + 
                   750*s13*s23 + 1430*s23^2) + s12^5*(-762*s13^3 + 
                   4835*s13^2*s23 + 9760*s13*s23^2 + 9240*s23^3) + 
                 s12^4*(6750*s13^4 + 24912*s13^3*s23 + 9930*s13^2*s23^2 - 
                   4550*s13*s23^3 - 60*s23^4) + 36*s13^3*s23*(20*s13^4 + 
                   30*s13^3*s23 + 9*s13^2*s23^2 - 10*s13*s23^3 - 9*s23^4) + 
                 s12^3*(6072*s13^5 + 31181*s13^4*s23 + 18509*s13^3*s23^2 - 
                   7203*s13^2*s23^3 - 9510*s13*s23^4 - 2520*s23^5) - 
                 s12^2*s13*(1572*s13^5 + 1962*s13^4*s23 + 10467*s13^3*s23^2 + 
                   14281*s13^2*s23^3 + 5366*s13*s23^4 - 750*s23^5) - 
                 2*s12*s13^2*(72*s13^5 + 287*s13^4*s23 + 3201*s13^3*s23^2 + 
                   3756*s13^2*s23^3 + 1390*s13*s23^4 - 525*s23^5)) + p1q^5*
                s23^3*(-450*s12^4*s23*(s13 + s23) - 6*s12^3*(117*s13^3 + 
                   428*s13^2*s23 + 505*s13*s23^2 + 140*s23^3) - 
                 s12^2*(4464*s13^4 + 6855*s13^3*s23 + 7603*s13^2*s23^2 + 
                   2950*s13*s23^3 + 330*s23^4) - s12*(4194*s13^5 + 
                   6789*s13^4*s23 + 8298*s13^3*s23^2 + 5329*s13^2*s23^3 - 
                   110*s13*s23^4 - 60*s23^5) + s13*(-432*s13^5 + 576*s13^4*
                    s23 + 811*s13^3*s23^2 - 1851*s13^2*s23^3 - 1174*s13*
                    s23^4 + 480*s23^5)) + p1q*p3q^4*s12*(-450*s12^7*s23 - 
                 30*s12^6*s23*(17*s13 + 146*s23) - 2*s12^5*s23*(-63*s13^2 + 
                   2095*s13*s23 + 2835*s23^2) + s12^4*s13*(-2592*s13^3 - 
                   8289*s13^2*s23 + 511*s13*s23^2 + 4700*s23^3) + 
                 s12*s13^2*s23*(2106*s13^4 + 5343*s13^3*s23 + 7031*s13^2*
                    s23^2 + 1150*s13*s23^3 - 930*s23^4) + 72*s13^3*s23*
                  (10*s13^4 + 29*s13^3*s23 + 38*s13^2*s23^2 + 28*s13*s23^3 + 
                   9*s23^4) + s12^2*s13*(-2592*s13^5 + 261*s13^4*s23 + 
                   12161*s13^3*s23^2 + 12300*s13^2*s23^3 + 4166*s13*s23^4 + 
                   90*s23^5) + s12^3*(-5184*s13^5 - 9600*s13^4*s23 + 
                   155*s13^3*s23^2 + 11841*s13^2*s23^3 + 8470*s13*s23^4 + 
                   1740*s23^5)) + p1q^4*p3q*s23^2*(450*s12^5*s23*(3*s13 + 
                   4*s23) + 6*s12^4*(234*s13^3 + 929*s13^2*s23 + 1590*s13*
                    s23^2 + 700*s23^3) + s12^3*(6120*s13^4 + 13428*s13^3*
                    s23 + 20053*s13^2*s23^2 + 9980*s13*s23^3 + 2610*s23^4) + 
                 2*s12^2*(2448*s13^5 + 9072*s13^4*s23 + 15713*s13^3*s23^2 + 
                   8579*s13^2*s23^3 - 250*s13*s23^4 - 90*s23^5) + 
                 s12*(900*s13^6 + 5718*s13^5*s23 + 22907*s13^4*s23^2 + 
                   19593*s13^3*s23^3 + 2759*s13^2*s23^4 - 1900*s13*s23^5 - 
                   390*s23^6) + s13*(720*s13^6 + 630*s13^5*s23 + 3002*s13^4*
                    s23^2 + 6235*s13^3*s23^3 + 613*s13^2*s23^4 - 2140*s13*
                    s23^5 + 390*s23^6)) - p1q^3*p3q^2*s23*(1350*s12^6*s23*
                  (s13 + 2*s23) + 6*s12^5*(117*s13^3 + 574*s13^2*s23 + 
                   1750*s13*s23^2 + 1410*s23^3) + s12^4*(1656*s13^4 + 
                   5811*s13^3*s23 + 17411*s13^2*s23^2 + 13500*s13*s23^3 + 
                   7200*s23^4) + s12^3*(1782*s13^5 + 14193*s13^4*s23 + 
                   42103*s13^3*s23^2 + 20866*s13^2*s23^3 - 1950*s13*s23^4 - 
                   180*s23^5) + s13^2*s23*(144*s13^5 + 1888*s13^4*s23 + 
                   1129*s13^3*s23^2 - 2635*s13^2*s23^3 - 1630*s13*s23^4 + 
                   390*s23^5) + s12^2*(108*s13^6 + 15954*s13^5*s23 + 
                   46203*s13^4*s23^2 + 35350*s13^3*s23^3 + 787*s13^2*s23^4 - 
                   5250*s13*s23^5 - 1620*s23^6) + s12*s13*(-720*s13^6 + 
                   4326*s13^5*s23 + 14537*s13^4*s23^2 + 4921*s13^3*s23^3 - 
                   5190*s13^2*s23^4 - 5122*s13*s23^5 + 1050*s23^6))) + 
             p2q^2*(18*p3q^4*s12*(25*s12^7*s23 - 125*s12^6*s13*s23 + 
                 s12^5*(288*s13^3 - 258*s13^2*s23 - 370*s13*s23^2 - 
                   75*s23^3) + s12*s13^3*s23*(24*s13^3 + 99*s13^2*s23 + 
                   42*s13*s23^2 - 17*s23^3) + 2*s13^4*s23*(21*s13^3 + 
                   68*s13^2*s23 + 65*s13*s23^2 + 18*s23^3) + s12^4*
                  (144*s13^4 + 71*s13^3*s23 - 250*s13^2*s23^2 - 200*s13*
                    s23^3 - 50*s23^4) + s12^3*s13*(-576*s13^4 - 129*s13^3*
                    s23 + 150*s13^2*s23^2 + 158*s13*s23^3 + 45*s23^4) + 
                 s12^2*s13^2*(-432*s13^4 - 326*s13^3*s23 + 353*s13^2*s23^2 + 
                   249*s13*s23^3 + 60*s23^4)) + p1q*p3q^3*
                (30*s12^7*(44*s13 - 43*s23)*s23 + s12^6*s23*(2493*s13^2 + 
                   6230*s13*s23 + 450*s23^2) + 36*s13^4*s23*(-10*s13^4 + 
                   39*s13^2*s23^2 + 47*s13*s23^3 + 18*s23^4) - s12*s13^3*s23*
                  (378*s13^4 + 1455*s13^3*s23 + 3142*s13^2*s23^2 + 
                   1148*s13*s23^3 + 228*s23^4) + s12^5*(-5184*s13^4 - 
                   13518*s13^3*s23 + 7967*s13^2*s23^2 + 16750*s13*s23^3 + 
                   4770*s23^4) - 2*s12^4*(2592*s13^5 + 8448*s13^4*s23 + 
                   1756*s13^3*s23^2 - 6530*s13^2*s23^3 - 5350*s13*s23^4 - 
                   1515*s23^5) + s12^2*s13^2*(5184*s13^5 - 297*s13^4*s23 - 
                   14850*s13^3*s23^2 - 5502*s13^2*s23^3 - 2618*s13*s23^4 - 
                   1230*s23^5) + 2*s12^3*s13*(2592*s13^5 - 1242*s13^4*s23 + 
                   2987*s13^3*s23^2 + 5804*s13^2*s23^3 + 808*s13*s23^4 - 
                   570*s23^5)) - p1q^2*p3q^2*s23*(30*s12^6*(44*s13^2 + 
                   74*s13*s23 - 39*s23^2) + s12^5*(5133*s13^3 + 4547*s13^2*
                    s23 + 6300*s13*s23^2 + 1410*s23^3) + s12^4*(-1218*s13^4 - 
                   21186*s13^3*s23 + 3954*s13^2*s23^2 + 16100*s13*s23^3 + 
                   6330*s23^4) + s12*s13^2*(-10371*s13^5 - 14649*s13^4*s23 + 
                   8451*s13^3*s23^2 + 10274*s13^2*s23^3 + 2382*s13*s23^4 - 
                   1860*s23^5) + s13^3*(-72*s13^5 - 1295*s13^4*s23 + 
                   631*s13^3*s23^2 + 3716*s13^2*s23^3 + 848*s13*s23^4 - 
                   1014*s23^5) + s12^2*s13*(-16386*s13^5 - 18631*s13^4*s23 + 
                   4038*s13^3*s23^2 + 22275*s13^2*s23^3 + 8544*s13*s23^4 - 
                   480*s23^5) + s12^3*(-11118*s13^5 - 40454*s13^4*s23 - 
                   16046*s13^3*s23^2 + 15971*s13^2*s23^3 + 11540*s13*s23^4 + 
                   3750*s23^5)) + p1q^4*s23^2*(-60*s12^4*s23*(-8*s13^2 - 
                   7*s13*s23 + s23^2) + s12^3*(1404*s13^4 + 879*s13^3*s23 + 
                   3199*s13^2*s23^2 - 350*s13*s23^3 - 510*s23^4) + 
                 6*s12^2*(1137*s13^5 + 782*s13^4*s23 + 955*s13^3*s23^2 + 
                   88*s13^2*s23^3 - 390*s13*s23^4 - 140*s23^5) + 
                 s12*(6174*s13^6 + 6579*s13^5*s23 + 9518*s13^4*s23^2 + 
                   4176*s13^3*s23^3 - 4431*s13^2*s23^4 - 1180*s13*s23^5 - 
                   390*s23^6) + s13*(756*s13^6 - 972*s13^5*s23 + 447*s13^4*
                    s23^2 + 6022*s13^3*s23^3 + 1437*s13^2*s23^4 - 2020*s13*
                    s23^5 + 390*s23^6)) + p1q^3*p3q*s23*(30*s12^5*s23*
                  (28*s13^2 + 16*s13*s23 - 9*s23^2) + s12^4*(1404*s13^4 + 
                   5574*s13^3*s23 - 905*s13^2*s23^2 + 2670*s13*s23^3 + 
                   1470*s23^4) + s12^3*(5418*s13^5 + 1278*s13^4*s23 - 
                   13822*s13^3*s23^2 + 583*s13^2*s23^3 + 8350*s13*s23^4 + 
                   3750*s23^5) + s13^2*(-360*s13^6 + 846*s13^5*s23 - 
                   3199*s13^4*s23^2 - 6739*s13^3*s23^3 + 3334*s13^2*s23^4 + 
                   4198*s13*s23^5 - 1470*s23^6) + s12*s13*(594*s13^6 - 
                   11337*s13^5*s23 - 36920*s13^4*s23^2 - 13512*s13^3*s23^3 + 
                   12250*s13^2*s23^4 + 6584*s13*s23^5 - 540*s23^6) + 
                 s12^2*(4968*s13^6 - 14343*s13^5*s23 - 38076*s13^4*s23^2 - 
                   12028*s13^3*s23^3 + 12322*s13^2*s23^4 + 5620*s13*s23^5 + 
                   2010*s23^6))))/(288*p1q*(p2q + p3q)*s13^3*s23*
             (-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + (p3q*s12 - p1q*s23)^2*(
                p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + s23) - 
                p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*
                  (s13 + s23)) + p3q*(s12 + s13)*(-(s13*(s13 + s23)) + 
                  s12*(3*s13 + 2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*
                 (s12 - 3*s13 - s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*
                 (s13 + s23) + p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + 
                  s12*(2*s13^2 + 2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + 
                    s13*s23 - s23^2)) + p1q*p3q^2*s12*
                 (-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + s13*s23 + s23^2) + 
                  s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) + 
           ((-18*p1q^2*(15*s12^3*s23 + s13*s23*(23*s13^2 + 18*s13*s23 - 
                  5*s23^2) + s12^2*(33*s13^2 + 30*s13*s23 + 30*s23^2) + 
                s12*(33*s13^3 + 71*s13^2*s23 + 25*s13*s23^2 + 15*s23^3)) + 
              18*(p2q + p3q)*(s12 + s13 + s23)*(p2q*s13*(15*s12^2 + 
                  5*s12*(3*s13 + s23) + s13*(-23*s13 + 5*s23)) + 
                p3q*s12*(-15*s12^2 - 15*s12*(s13 + s23) + s13*(23*s13 + 
                    5*s23))) + p1q*(p3q*(270*s12^4 + 10*s12^3*(51*s13 + 
                    79*s23) + s13*s23*(741*s13^2 - 330*s13*s23 - 250*s23^2) + 
                  s12^2*(93*s13^2 + 820*s13*s23 + 770*s23^2) + 
                  s12*(-147*s13^3 - 57*s13^2*s23 + 60*s13*s23^2 + 
                    250*s23^3)) + p2q*(-50*s12^3*(6*s13 - 5*s23) + 
                  s12^2*(-303*s13^2 + 10*s13*s23 + 500*s23^2) + 
                  s13*(414*s13^3 + 1065*s13^2*s23 - 420*s13*s23^2 - 
                    250*s23^3) + s12*(411*s13^3 - 3*s13^2*s23 + 60*s13*
                     s23^2 + 250*s23^3))))*den[-1 + 2*ep])/
            (288*p1q*(p2q + p3q)*s13^3))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]] + 
     (((ep*(p3q^2*s12*(s12^3*(s13 - 2*s23) + s13*s23^2*(-3*s13 + s23) + 
              s12^2*(s13^2 - 5*s13*s23 - s23^2) + s12*s23*(-s13^2 - 
                6*s13*s23 + s23^2)) + p2q^2*s13*(s12^2*(s13^2 - s13*s23 - 
                3*s23^2) + s13*s23*(-2*s13^2 - s13*s23 + s23^2) + 
              s12*(s13^3 - 5*s13^2*s23 - 6*s13*s23^2 + s23^3)) - 
            p1q^2*(s12^3*(s13^2 + s13*s23 - s23^2) + s13*s23^2*(-s13^2 + 
                s13*s23 + 2*s23^2) + s12^2*(s13^3 + s23^3) + s12*s23*(s13^3 + 
                2*s23^3)) + p2q*p3q*(3*s13^2*s23^2*(s13 + s23) + 
              s12^3*(-2*s13^2 + 3*s13*s23 + 3*s23^2) + s12*s13*s23*(3*s13^2 + 
                6*s13*s23 + 8*s23^2) + s12^2*(-2*s13^3 + 10*s13^2*s23 + 
                6*s13*s23^2 + 3*s23^3)) + p1q*(p3q*(s12^4*(s13 - s23) + 
                3*s12^3*s23*(-s13 + s23) + s13*s23^2*(2*s13^2 + s13*s23 - 
                  s23^2) + s12*s23^2*(2*s13^2 + 6*s13*s23 - s23^2) + 
                s12^2*(-s13^3 + 2*s13^2*s23 + s13*s23^2 + 3*s23^3)) + 
              p2q*(-(s12^3*(s13^2 - 2*s23^2)) + s12^2*s23*(2*s13^2 + 
                  2*s13*s23 + s23^2) - s13*s23*(s13^3 - 3*s13^2*s23 - 
                  3*s13*s23^2 + s23^3) + s12*(s13^4 - 3*s13^3*s23 + 
                  s13^2*s23^2 + 6*s13*s23^3 - s23^4)))))/
          (16*s23*(-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*
             (s12 + s23) - p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
            p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
             (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
         (p3q^2*s12*(s12^3*(7*s13 + 8*s23) + 2*s23^2*(3*s13^2 + 3*s13*s23 + 4*
                s23^2) + 3*s12*s23*(5*s13^2 - 2*s13*s23 + 6*s23^2) + 
             s12^2*(7*s13^2 - 7*s13*s23 + 18*s23^2)) + 
           p2q^2*s13*(s12^2*(7*s13^2 + 15*s13*s23 + 6*s23^2) + 
             2*s23*(4*s13^3 + 9*s13^2*s23 + 9*s13*s23^2 + 4*s23^3) + 
             s12*(7*s13^3 - 7*s13^2*s23 - 6*s13*s23^2 + 6*s23^3)) - 
           p1q^2*(s12^3*(7*s13^2 + 15*s13*s23 + 6*s23^2) + 
             2*s23^2*(3*s13^3 + 7*s13^2*s23 + 8*s13*s23^2 + 4*s23^3) + 
             s12^2*(7*s13^3 + 11*s13*s23^2 + 14*s23^3) + 
             s12*s23*(15*s13^3 + 11*s13^2*s23 + 14*s13*s23^2 + 16*s23^3)) - 
           p2q*p3q*(s12^3*(14*s13^2 + 23*s13*s23 + 6*s23^2) + 
             2*s23^2*(3*s13^3 + 7*s13^2*s23 + 8*s13*s23^2 + 4*s23^3) + 
             s12^2*(14*s13^3 - 14*s13^2*s23 + 19*s13*s23^2 + 14*s23^3) + 
             s12*s23*(23*s13^3 + 19*s13^2*s23 + 22*s13*s23^2 + 16*s23^3)) + 
           p1q*(p3q*(6*s12^3*s23*(-4*s13 + s23) + s12^4*(7*s13 + 6*s23) + s12*
                s23*(-13*s13^3 + s13^2*s23 - 6*s13*s23^2 - 10*s23^3) - s12^2*
                (7*s13^3 - 17*s13^2*s23 + 19*s13*s23^2 + 2*s23^3) - 2*s23^2*
                (2*s13^3 + 5*s13^2*s23 + 7*s13*s23^2 + 4*s23^3)) - 
             p2q*(s12^3*(7*s13^2 + 13*s13*s23 + 4*s23^2) + s12^2*s23*
                (-17*s13^2 - s13*s23 + 10*s23^2) + 2*s23*(-3*s13^4 - 
                 3*s13^3*s23 + s13^2*s23^2 + 5*s13*s23^3 + 4*s23^4) + s12*
                (-7*s13^4 + 24*s13^3*s23 + 19*s13^2*s23^2 + 6*s13*s23^3 + 
                 14*s23^4))))/(32*s23*(-(p3q^2*s12*(s12 + s23)) - 
            p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
            p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
            p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
             (2*s13 + s23))) - (7*s12*s13*(s12 + s13 - 2*s23)*den[-1 + 2*ep])/
          (32*s23))*E0 . E0conj + 
       ((ep^2*(s12^3 - s13*s23*(s13 + 2*s23) + s12^2*(2*s13 + 3*s23) + 
            s12*(s13^2 + 2*s13*s23 + 2*s23^2)))/(8*s23^2) + 
         (p3q^4*s12^2*(7*s12^5 + 14*s12^4*s13 + 6*s12^2*s23^3 - 
             4*s13*s23^3*(s13 + s23) + s12^3*(7*s13^2 - 13*s23^2) + 
             s12*s23^2*(-15*s13^2 + 14*s13*s23 + 12*s23^2)) - 
           p1q^4*s23^2*(7*s12^4*(s13 + s23) + 2*s12^3*(7*s13^2 + 11*s13*s23 - 
               2*s23^2) + s12^2*(7*s13^3 + 23*s13^2*s23 + 15*s13*s23^2 - 17*
                s23^3) + 2*s12*s23*(4*s13^3 + 22*s13^2*s23 + 25*s13*s23^2 + 5*
                s23^3) + s23^2*(-3*s13^3 + 35*s13^2*s23 + 54*s13*s23^2 + 16*
                s23^3)) - p2q*p3q^3*s12*(-8*s13^2*s23^3*(s13 + s23) + 
             7*s12^5*(4*s13 + s23) + s12^4*(56*s13^2 + 7*s13*s23 + 8*s23^2) + 
             s12^3*(28*s13^3 - 7*s13^2*s23 - 5*s13*s23^2 + 3*s23^3) + 
             s12*s23^2*(-45*s13^3 + 59*s13^2*s23 + 86*s13*s23^2 + 16*s23^3) + 
             s12^2*s23*(-7*s13^3 + 54*s13^2*s23 + 94*s13*s23^2 + 18*s23^3)) + 
           p2q^2*p3q^2*(-4*s13^3*s23^3*(s13 + s23) + 21*s12^5*s13*
              (2*s13 + s23) + s12^4*(84*s13^3 + 21*s13^2*s23 + s13*s23^2 + 4*
                s23^3) + s12*s13*s23^2*(-45*s13^3 + 60*s13^2*s23 + 120*s13*
                s23^2 + 32*s23^3) + s12^2*s13*s23*(-21*s13^3 + 139*s13^2*
                s23 + 196*s13*s23^2 + 40*s23^3) + s12^3*(42*s13^4 - 21*s13^3*
                s23 + 17*s13^2*s23^2 - 8*s13*s23^3 + 4*s23^4)) + 
           p2q^4*s13^2*(7*s12^3*s13*(s13 + s23) + s12^2*(14*s13^3 + 7*s13^2*
                s23 - 15*s13*s23^2 + 4*s23^3) + s13*s23*(-7*s13^3 + 31*s13^2*
                s23 + 58*s13*s23^2 + 20*s23^3) + s12*(7*s13^4 - 7*s13^3*s23 - 
               12*s13^2*s23^2 + 2*s13*s23^3 + 4*s23^4)) - 
           p2q^3*p3q*s13*(7*s12^4*s13*(4*s13 + 3*s23) + 
             s12^3*(56*s13^3 + 21*s13^2*s23 - 22*s13*s23^2 + 8*s23^3) + 
             s13*s23^2*(-15*s13^3 + 15*s13^2*s23 + 46*s13*s23^2 + 16*s23^3) + 
             s12*s13*s23*(-21*s13^3 + 116*s13^2*s23 + 166*s13*s23^2 + 42*
                s23^3) + s12^2*(28*s13^4 - 21*s13^3*s23 - 3*s13^2*s23^2 - 9*
                s13*s23^3 + 8*s23^4)) + p1q^3*s23*
            (p3q*(7*s12^5*(2*s13 + 3*s23) + s12^4*(28*s13^2 + 43*s13*s23 - 
                 15*s23^2) + s12^3*(14*s13^3 + 23*s13^2*s23 - 24*s13*s23^2 - 
                 43*s23^3) - s23^3*(-3*s13^3 + 39*s13^2*s23 + 58*s13*s23^2 + 
                 16*s23^3) + s12*s23^2*(-22*s13^3 - 13*s13^2*s23 + 
                 56*s13*s23^2 + 34*s23^3) + s12^2*s23*(s13^3 + 25*s13^2*s23 + 
                 45*s13*s23^2 + 43*s23^3)) + p2q*(s12^4*(14*s13^2 + 
                 23*s13*s23 + s23^2) + s12^3*(28*s13^3 + 61*s13^2*s23 + 
                 41*s13*s23^2 + 28*s23^3) + s23^2*(-13*s13^4 + 96*s13^3*s23 + 
                 115*s13^2*s23^2 - 10*s13*s23^3 - 16*s23^4) + s12*s23*
                (15*s13^4 + 65*s13^3*s23 + 60*s13^2*s23^2 - 4*s13*s23^3 + 
                 2*s23^4) + s12^2*(14*s13^4 + 53*s13^3*s23 + 62*s13^2*s23^2 + 
                 16*s13*s23^3 + 45*s23^4))) + 
           p1q*(p3q^3*s12*(7*s12^6 + 7*s12^5*(s13 - 3*s23) + 8*s13*s23^4*
                (s13 + s23) + s12^2*s23^2*(-19*s13^2 + 4*s13*s23 - 
                 10*s23^2) - s12^4*(7*s13^2 + 42*s13*s23 + 9*s23^2) + s12*
                s23^2*(11*s13^3 + 15*s13^2*s23 - 70*s13*s23^2 - 40*s23^3) + 
               s12^3*(-7*s13^3 - 21*s13^2*s23 + 17*s13*s23^2 + 49*s23^3)) + 
             p2q*p3q^2*(8*s13^2*s23^4*(s13 + s23) - 7*s12^6*(3*s13 + s23) + 
               s12^5*(-21*s13^2 + 21*s13*s23 + 2*s23^2) + s12^4*(21*s13^3 + 
                 56*s13^2*s23 + 2*s13*s23^2 - 11*s23^3) + s12^3*(21*s13^4 + 
                 21*s13^3*s23 - 64*s13^2*s23^2 - 90*s13*s23^3 - 48*s23^4) + 
               s12^2*s23*(-7*s13^4 + 82*s13^3*s23 + 131*s13^2*s23^2 + 
                 26*s13*s23^3 + 4*s23^4) + 2*s12*s23^2*(-11*s13^4 + 
                 27*s13^3*s23 + 55*s13^2*s23^2 + 50*s13*s23^3 + 16*s23^4)) + 
             p2q^3*s13*(-7*s12^4*s13*(s13 + s23) - s12^3*s13*(7*s13^2 + 
                 21*s13*s23 + 10*s23^2) + s12^2*(7*s13^4 - 28*s13^3*s23 - 
                 44*s13^2*s23^2 + 27*s13*s23^3 - 8*s23^4) - s13*s23*
                (7*s13^4 - 40*s13^3*s23 + 55*s13^2*s23^2 + 158*s13*s23^3 + 
                 56*s23^4) + s12*(7*s13^5 - 21*s13^4*s23 - 50*s13^3*s23^2 - 
                 64*s13^2*s23^3 - 34*s13*s23^4 - 8*s23^5)) + 
             p2q^2*p3q*(7*s12^5*s13*(3*s13 + 2*s23) + s12^4*s13*(21*s13^2 + 
                 21*s13*s23 + 8*s23^2) + s12^3*(-21*s13^4 + 14*s13^3*s23 + 
                 51*s13^2*s23^2 + 12*s13*s23^3 - 8*s23^4) + s12*s13*s23*
                (14*s13^4 - 103*s13^3*s23 + 12*s13^2*s23^2 + 118*s13*s23^3 + 
                 28*s23^4) + s13*s23^2*(11*s13^4 - 37*s13^3*s23 + 
                 12*s13^2*s23^2 + 92*s13*s23^3 + 32*s23^4) + s12^2*
                (-21*s13^5 + 21*s13^4*s23 + 97*s13^3*s23^2 + 193*s13^2*
                  s23^3 + 6*s13*s23^4 - 8*s23^5))) + 
           p1q^2*(p3q^2*(-4*s13*s23^5*(s13 + s23) - 7*s12^6*(s13 + 3*s23) + 
               s12^5*(-14*s13^2 - 28*s13*s23 + 25*s23^2) + s12^3*s23*
                (14*s13^3 + 33*s13^2*s23 - 12*s13*s23^2 - 69*s23^3) + s12^2*
                s23^2*(19*s13^3 + 67*s13^2*s23 - 6*s13*s23^2 - 14*s23^3) + 
               s12^4*(-7*s13^3 + 7*s13^2*s23 + 67*s13*s23^2 + 35*s23^3) + s12*
                s23^3*(-14*s13^3 + 39*s13^2*s23 + 114*s13*s23^2 + 
                 44*s23^3)) + p2q*p3q*(2*s12^5*(7*s13^2 + 7*s13*s23 + 
                 3*s23^2) + s12^4*(28*s13^3 + 28*s13^2*s23 + 14*s13*s23^2 - 
                 23*s23^3) + s12^2*s23^2*(62*s13^3 + 153*s13^2*s23 + 
                 57*s13*s23^2 + 49*s23^3) + s12^3*(14*s13^4 + 14*s13^3*s23 + 
                 22*s13^2*s23^2 + 21*s13*s23^3 - 26*s23^4) + s23^3*
                (-14*s13^4 + 61*s13^3*s23 + 61*s13^2*s23^2 - 30*s13*s23^3 - 
                 16*s23^4) + s12*s23^2*(-8*s13^4 + 47*s13^3*s23 + 
                 16*s13^2*s23^2 + 30*s13*s23^3 + 30*s23^4)) + 
             p2q^2*(s12^4*s13*(-7*s13^2 + 7*s13*s23 + 22*s23^2) + s12^3*s13*
                (-14*s13^3 + 49*s13*s23^2 + 23*s23^3) + s13*s23^2*
                (17*s13^4 - 94*s13^3*s23 - 37*s13^2*s23^2 + 126*s13*s23^3 + 
                 52*s23^4) + s12^2*(-7*s13^5 - 21*s13^4*s23 + 31*s13^3*
                  s23^2 + 84*s13^2*s23^3 - 25*s13*s23^4 + 4*s23^5) + s12*s23*
                (-14*s13^5 - 7*s13^4*s23 + 47*s13^3*s23^2 + 90*s13^2*s23^3 + 
                 30*s13*s23^4 + 4*s23^5))))/(32*s23^2*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) + 
         (ep*(p1q^4*s23^2*(5*s12^4*(s13 + s23) - 7*s13*s23^2*(s13^2 + 
                3*s13*s23 + 2*s23^2) + 2*s12^3*(5*s13^2 + 15*s13*s23 + 
                9*s23^2) - 2*s12*s23*(2*s13^3 + 7*s13^2*s23 + s13*s23^2 - 
                3*s23^3) + s12^2*(5*s13^3 + 21*s13^2*s23 + 39*s13*s23^2 + 
                19*s23^3)) - p1q^3*s23*(p3q*(5*s12^5*(2*s13 + 3*s23) + 
                s13*s23^3*(7*s13^2 + 19*s13*s23 + 12*s23^2) + 
                s12^4*(20*s13^2 + 69*s13*s23 + 55*s23^2) - s12*s23^2*
                 (6*s13^3 + 29*s13^2*s23 + 40*s13*s23^2 + 4*s23^3) + 
                s12^2*s23*(-9*s13^3 - 37*s13^2*s23 - 39*s13*s23^2 + 
                  9*s23^3) + s12^3*(10*s13^3 + 45*s13^2*s23 + 80*s13*s23^2 + 
                  53*s23^3)) + p2q*(s12^4*(10*s13^2 - 3*s13*s23 - 9*s23^2) + 
                s12^3*(20*s13^3 + 43*s13^2*s23 - 13*s13*s23^2 - 30*s23^3) - 
                s13*s23^2*(19*s13^3 + 58*s13^2*s23 + 31*s13*s23^2 - 
                  8*s23^3) + s12^2*(10*s13^4 + 47*s13^3*s23 + 62*s13^2*
                   s23^2 - 14*s13*s23^3 - 29*s23^4) + s12*s23*(s13^4 - 
                  9*s13^3*s23 + 14*s13^2*s23^2 + 8*s13*s23^3 - 8*s23^4))) - 
            (p3q*s12 - p2q*s13)^2*(p3q^2*(5*s12^5 + 16*s12^2*s23^3 - 
                2*s13*s23^3*(s13 + s23) + 2*s12^4*(5*s13 + 12*s23) + 
                s12*s23^2*(-5*s13^2 - 14*s13*s23 + 2*s23^2) + 
                s12^3*(5*s13^2 + 24*s13*s23 + 33*s23^2)) - 
              p2q*p3q*(5*s12^4*(2*s13 + s23) - 5*s13*s23^2*(s13^2 + 
                  3*s13*s23 + 2*s23^2) + s12^3*(20*s13^2 + 53*s13*s23 + 
                  24*s23^2) + s12*s23*(-5*s13^3 - 14*s13^2*s23 + 
                  14*s13*s23^2 + 10*s23^3) + s12^2*(10*s13^3 + 43*s13^2*s23 + 
                  71*s13*s23^2 + 29*s23^3)) + p2q^2*(5*s12^3*s13*
                 (s13 + s23) - s13*s23*(5*s13^3 + 19*s13^2*s23 + 
                  16*s13*s23^2 + 2*s23^3) + s12^2*(10*s13^3 + 29*s13^2*s23 + 
                  19*s13*s23^2 + 2*s23^3) + s12*(5*s13^4 + 19*s13^3*s23 + 
                  28*s13^2*s23^2 + 14*s13*s23^3 + 2*s23^4))) + 
            p1q^2*(p3q^2*(2*s13*s23^5*(s13 + s23) + 5*s12^6*(s13 + 3*s23) + 
                s12^5*(10*s13^2 + 44*s13*s23 + 51*s23^2) + s12^2*s23^2*
                 (s13^3 - 11*s13^2*s23 - 42*s13*s23^2 - 24*s23^3) + 
                s12*s23^3*(10*s13^3 + 39*s13^2*s23 + 38*s13*s23^2 - 
                  2*s23^3) + s12^4*(5*s13^3 + 19*s13^2*s23 + 21*s13*s23^2 + 
                  25*s23^3) - s12^3*s23*(10*s13^3 + 57*s13^2*s23 + 
                  108*s13*s23^2 + 33*s23^3)) - p2q*p3q*(2*s12^5*(5*s13^2 + 
                  5*s13*s23 + 7*s23^2) + s12^2*s23^2*(2*s13^3 + 11*s13^2*
                   s23 - 49*s13*s23^2 - 17*s23^3) - 5*s13*s23^3*(2*s13^3 + 
                  5*s13^2*s23 + s13*s23^2 - 2*s23^3) + s12^4*(20*s13^3 + 
                  68*s13^2*s23 + 50*s13*s23^2 + 43*s23^3) + s12*s23^2*
                 (4*s13^4 + 9*s13^3*s23 + 32*s13^2*s23^2 - 22*s13*s23^3 - 
                  10*s23^4) + s12^3*(10*s13^4 + 58*s13^3*s23 + 90*s13^2*
                   s23^2 + 35*s13*s23^3 + 22*s23^4)) + p2q^2*(s12^4*s13*
                 (5*s13^2 - 5*s13*s23 - 6*s23^2) + s12^3*s13*(10*s13^3 + 
                  24*s13^2*s23 - 41*s13*s23^2 - 45*s23^3) - s13*s23^2*
                 (17*s13^4 + 48*s13^3*s23 + s13^2*s23^2 - 32*s13*s23^3 - 
                  2*s23^4) + s12^2*(5*s13^5 + 39*s13^4*s23 + 29*s13^3*s23^2 - 
                  82*s13^2*s23^3 - 69*s13*s23^4 - 2*s23^5) + s12*s23*
                 (10*s13^5 + 19*s13^4*s23 + 27*s13^3*s23^2 - 22*s13^2*s23^3 - 
                  30*s13*s23^4 - 2*s23^5))) + p1q*(p3q^3*s12*(-5*s12^6 - 
                4*s13*s23^4*(s13 + s23) - s12^5*(5*s13 + 9*s23) + 
                s12^4*(5*s13^2 + 30*s13*s23 + 33*s23^2) + s12^2*s23^2*
                 (3*s13^2 + 16*s13*s23 + 36*s23^2) + s12*s23^2*(-3*s13^3 - 
                  25*s13^2*s23 - 40*s13*s23^2 + 4*s23^3) + s12^3*(5*s13^3 + 
                  39*s13^2*s23 + 95*s13*s23^2 + 69*s23^3)) + 
              p2q*p3q^2*(-4*s13^2*s23^4*(s13 + s23) + 5*s12^6*(3*s13 + s23) + 
                s12^5*(15*s13^2 + 57*s13*s23 + 8*s23^2) + 2*s12*s13*s23^2*
                 (3*s13^3 + 13*s13^2*s23 + 11*s13*s23^2 + 12*s23^3) - 
                s12^4*(15*s13^3 + 40*s13^2*s23 + 31*s23^3) + s12^2*s23*
                 (5*s13^4 + 20*s13^3*s23 - 13*s13^2*s23^2 - 20*s13*s23^3 - 
                  20*s23^4) - s12^3*(15*s13^4 + 87*s13^3*s23 + 162*s13^2*
                   s23^2 + 98*s13*s23^3 + 54*s23^4)) - p2q^2*p3q*(
                5*s12^5*s13*(3*s13 + 2*s23) + 3*s12^4*s13*(5*s13^2 + 
                  29*s13*s23 + 12*s23^2) + s13^2*s23^2*(3*s13^3 + s13^2*s23 - 
                  22*s13*s23^2 - 20*s23^3) + s12^3*(-15*s13^4 + 10*s13^3*
                   s23 + 119*s13^2*s23^2 + 48*s13*s23^3 - 4*s23^4) + 
                s12*s13*s23*(10*s13^4 + 29*s13^3*s23 - 12*s13^2*s23^2 + 
                  32*s13*s23^3 + 24*s23^4) - s12^2*(15*s13^5 + 57*s13^4*s23 + 
                  59*s13^3*s23^2 - 63*s13^2*s23^3 - 42*s13*s23^4 + 
                  4*s23^5)) + p2q^3*s13*(5*s12^4*s13*(s13 + s23) + 
                s12^3*s13*(5*s13^2 + 39*s13*s23 + 28*s23^2) + s13*s23*
                 (5*s13^4 + 6*s13^3*s23 - 35*s13^2*s23^2 - 40*s13*s23^3 - 
                  4*s23^4) + s12^2*(-5*s13^4 + 20*s13^3*s23 + 86*s13^2*
                   s23^2 + 59*s13*s23^3 + 4*s23^4) + s12*(-5*s13^5 - 
                  9*s13^4*s23 + 8*s13^3*s23^2 + 52*s13^2*s23^3 + 
                  36*s13*s23^4 + 4*s23^5)))))/(16*s23^2*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) - 
         (7*(s12^3 + s12^2*(2*s13 - s23) - s13*(s13 - 2*s23)*s23 + 
            s12*(s13^2 - 2*s13*s23 - 2*s23^2))*den[-1 + 2*ep])/(32*s23^2))*
        p1 . E0conj*p2 . E0 + ((ep^2*(s12 + s13)^2*(s12 + s13 + 2*s23))/
          (8*s23^2) - (ep*(s12 + s13)*(-(p1q^4*s23^2*(s12 + s23)*(s13 + s23)*
              (5*s12^2 + 10*s12*s13 + 5*s13^2 + 6*s12*s23 + 6*s13*s23 - 8*
                s23^2)) + (s12 + s13)*(p3q*s12 - p2q*s13)^2*(5*s12 + 5*s13 + 
              14*s23)*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) + 
            p1q^3*s23*(p3q*(5*s12^4*(2*s13 + 3*s23) + s12^3*(20*s13^2 + 
                  55*s13*s23 + 36*s23^2) + s12^2*(10*s13^3 + 37*s13^2*s23 + 
                  35*s13*s23^2 - 5*s23^3) + s23^2*(-9*s13^3 - 23*s13^2*s23 - 
                  10*s13*s23^2 + 4*s23^3) - s12*s23*(3*s13^3 + 10*s13^2*s23 + 
                  20*s13*s23^2 + 22*s23^3)) + p2q*(s12^3*(10*s13^2 - 
                  3*s13*s23 - 9*s23^2) + s12^2*(20*s13^3 + 37*s13^2*s23 - 
                  10*s13*s23^2 - 23*s23^3) + 5*s12*(2*s13^4 + 11*s13^3*s23 + 
                  7*s13^2*s23^2 - 4*s13*s23^3 - 2*s23^4) + s23*(15*s13^4 + 
                  36*s13^3*s23 - 5*s13^2*s23^2 - 22*s13*s23^3 + 4*s23^4))) + 
            p1q^2*(p3q^2*s12*(-5*s12^4*(s13 + 3*s23) - s12^3*(10*s13^2 + 
                  39*s13*s23 + 34*s23^2) - s12^2*(5*s13^3 + 19*s13^2*s23 + 
                  6*s13*s23^2 - 23*s23^3) + s23^2*(6*s13^3 + 35*s13^2*s23 + 
                  30*s13*s23^2 - 8*s23^3) + s12*s23*(5*s13^3 + 34*s13^2*s23 + 
                  58*s13*s23^2 + 34*s23^3)) + p2q*p3q*(2*s12^4*(5*s13^2 + 
                  5*s13*s23 + 7*s23^2) + s13*s23^2*(14*s13^3 + 33*s13^2*s23 - 
                  3*s13*s23^2 - 22*s23^3) + s12^3*(20*s13^3 + 58*s13^2*s23 + 
                  40*s13*s23^2 + 33*s23^3) + s12*s23*(10*s13^4 + 40*s13^3*
                   s23 + 11*s13^2*s23^2 - 14*s13*s23^3 - 22*s23^4) + 
                s12^2*(10*s13^4 + 58*s13^3*s23 + 52*s13^2*s23^2 + 
                  11*s13*s23^3 - 3*s23^4)) + p2q^2*s13*(s12^3*(-5*s13^2 + 
                  5*s13*s23 + 6*s23^2) + s12^2*(-10*s13^3 - 19*s13^2*s23 + 
                  34*s13*s23^2 + 35*s23^3) + s23*(-15*s13^4 - 34*s13^3*s23 + 
                  23*s13^2*s23^2 + 34*s13*s23^3 - 8*s23^4) + 
                s12*(-5*s13^4 - 39*s13^3*s23 - 6*s13^2*s23^2 + 58*s13*s23^3 + 
                  30*s23^4))) + p1q*(p2q^3*s13^2*(5*s13^4 + 4*s13^3*s23 - 
                39*s13^2*s23^2 - 34*s13*s23^3 + 4*s23^4 - 5*s12^3*
                 (s13 + s23) - s12^2*(5*s13^2 + 34*s13*s23 + 25*s23^2) + 
                s12*(5*s13^3 - 25*s13^2*s23 - 64*s13*s23^2 - 34*s23^3)) + 
              p3q^3*s12^2*(5*s12^4 + s12^3*(5*s13 + 4*s23) - 
                s12^2*(5*s13^2 + 25*s13*s23 + 39*s23^2) + s23*(-5*s13^3 - 
                  25*s13^2*s23 - 34*s13*s23^2 + 4*s23^3) - s12*(5*s13^3 + 
                  34*s13^2*s23 + 64*s13*s23^2 + 34*s23^3)) + p2q^2*p3q*s13*(
                5*s12^4*(3*s13 + 2*s23) + 3*s12^3*(5*s13^2 + 24*s13*s23 + 
                  10*s23^2) + s12^2*(-15*s13^3 + 25*s13^2*s23 + 69*s13*
                   s23^2 + 22*s23^3) + s13*s23*(-5*s13^3 - 5*s13^2*s23 + 
                  32*s13*s23^2 + 32*s23^3) + s12*(-15*s13^4 - 42*s13^3*s23 + 
                  34*s13^2*s23^2 + 54*s13*s23^3 + 20*s23^4)) + 
              p2q*p3q^2*s12*(-5*s12^4*(3*s13 + s23) - s12^3*(15*s13^2 + 
                  42*s13*s23 + 5*s23^2) + 2*s13*s23*(5*s13^3 + 15*s13^2*s23 + 
                  11*s13*s23^2 + 10*s23^3) + s12^2*(15*s13^3 + 25*s13^2*s23 + 
                  34*s13*s23^2 + 32*s23^3) + s12*(15*s13^4 + 72*s13^3*s23 + 
                  69*s13^2*s23^2 + 54*s13*s23^3 + 32*s23^4)))))/
          (16*s23^2*(p1q^4*s23^2*(s12 + s23)*(s13 + s23) - 
            (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) + 
         (-(p1q^4*s23^2*(7*s12^4*(s13 + s23) + s12^3*(21*s13^2 + 30*s13*s23 - 
                7*s23^2) + s12^2*(21*s13^3 + 46*s13^2*s23 + 59*s13*s23^2 + 
                18*s23^3) + s23*(7*s13^4 - 7*s13^3*s23 + 18*s13^2*s23^2 + 
                64*s13*s23^3 + 32*s23^4) + s12*(7*s13^4 + 30*s13^3*s23 + 
                59*s13^2*s23^2 + 100*s13*s23^3 + 64*s23^4))) + 
           (p3q*s12 - p2q*s13)^2*(p2q^2*s13*(7*s13^4 - 7*s13^3*s23 + 18*s13^2*
                s23^2 + 64*s13*s23^3 + 32*s23^4 + 7*s12^3*(s13 + s23) + s12^2*
                (21*s13^2 + 7*s13*s23 - 30*s23^2) + s12*(21*s13^3 - 
                 7*s13^2*s23 - 12*s13*s23^2 + 16*s23^3)) + 
             p3q^2*s12*(7*s12^4 + 7*s12^3*(3*s13 - s23) + s12^2*(21*s13^2 - 
                 7*s13*s23 + 18*s23^2) + s23*(7*s13^3 - 30*s13^2*s23 + 
                 16*s13*s23^2 + 32*s23^3) + s12*(7*s13^3 + 7*s13^2*s23 - 
                 12*s13*s23^2 + 64*s23^3)) - p2q*p3q*(7*s12^4*(2*s13 + s23) + 
               7*s12^3*(6*s13^2 - s23^2) + s12^2*(42*s13^3 - 14*s13^2*s23 + 
                 75*s13*s23^2 + 18*s23^3) + s23*(7*s13^4 - 7*s13^3*s23 + 
                 18*s13^2*s23^2 + 64*s13*s23^3 + 32*s23^4) + s12*
                (14*s13^4 + 75*s13^2*s23^2 + 132*s13*s23^3 + 64*s23^4))) + 
           p1q^3*s23*(p3q*(7*s12^5*(2*s13 + 3*s23) + s12^4*(42*s13^2 + 
                 58*s13*s23 - 28*s23^2) + s12^3*(42*s13^3 + 76*s13^2*s23 + 
                 41*s13*s23^2 + 53*s23^3) + s23^2*(s13^4 + 31*s13^3*s23 + 
                 6*s13^2*s23^2 - 56*s13*s23^3 - 32*s23^4) + s12*s23*
                (23*s13^4 + 19*s13^3*s23 + 3*s13^2*s23^2 + 52*s13*s23^3 + 
                 24*s23^4) + s12^2*(14*s13^4 + 62*s13^3*s23 + 87*s13^2*
                  s23^2 + 105*s13*s23^3 + 158*s23^4)) + 
             p2q*(s12^4*(14*s13^2 + 23*s13*s23 + s23^2) + s12^3*(42*s13^3 + 
                 62*s13^2*s23 + 19*s13*s23^2 + 31*s23^3) + s12^2*
                (42*s13^4 + 76*s13^3*s23 + 87*s13^2*s23^2 + 3*s13*s23^3 + 
                 6*s23^4) + s12*(14*s13^5 + 58*s13^4*s23 + 41*s13^3*s23^2 + 
                 105*s13^2*s23^3 + 52*s13*s23^4 - 56*s23^5) + s23*
                (21*s13^5 - 28*s13^4*s23 + 53*s13^3*s23^2 + 158*s13^2*s23^3 + 
                 24*s13*s23^4 - 32*s23^5))) + 
           p1q*(p2q^3*s13^2*(7*s13^5 - 28*s13^4*s23 + 31*s13^3*s23^2 - 6*
                s13^2*s23^3 - 168*s13*s23^4 - 96*s23^5 - 7*s12^4*
                (s13 + s23) + s12^3*(-14*s13^2 - 21*s13*s23 + s23^2) + 7*
                s12^2*s23*(-7*s13^2 - 9*s13*s23 + 6*s23^2) + s12*
                (14*s13^4 - 63*s13^3*s23 - 33*s13^2*s23^2 - 60*s13*s23^3 - 
                 104*s23^4)) + p3q^3*s12^2*(7*s12^5 + 14*s12^4*
                (s13 - 2*s23) + s12^3*s23*(-63*s13 + 31*s23) - s12^2*
                (14*s13^3 + 49*s13^2*s23 + 33*s13*s23^2 + 6*s23^3) + s23*
                (-7*s13^4 + s13^3*s23 + 42*s13^2*s23^2 - 104*s13*s23^3 - 
                 96*s23^4) - s12*(7*s13^4 + 21*s13^3*s23 + 63*s13^2*s23^2 + 
                 60*s13*s23^3 + 168*s23^4)) + p2q*p3q^2*s12*
              (-7*s12^5*(3*s13 + s23) + s12^3*s23*(77*s13^2 - 101*s13*s23 - 
                 48*s23^2) + s12^4*(-42*s13^2 + 35*s13*s23 + 13*s23^2) + 
               s12^2*(42*s13^4 + 35*s13^3*s23 + 33*s13^2*s23^2 - 
                 78*s13*s23^3 - 36*s23^4) + 2*s23*(7*s13^5 - 7*s13^4*s23 + 
                 33*s13^3*s23^2 + 58*s13^2*s23^3 + 64*s13*s23^4 + 32*s23^5) + 
               s12*(21*s13^5 + 14*s13^4*s23 + 133*s13^3*s23^2 + 324*s13^2*
                  s23^3 + 144*s13*s23^4 + 96*s23^5)) + p2q^2*p3q*s13*
              (7*s12^5*(3*s13 + 2*s23) + 14*s12^4*(3*s13^2 + s13*s23 - 
                 s23^2) + s12^3*s23*(35*s13^2 + 133*s13*s23 + 66*s23^2) + 
               s12^2*(-42*s13^4 + 77*s13^3*s23 + 33*s13^2*s23^2 + 
                 324*s13*s23^3 + 116*s23^4) + s23*(-7*s13^5 + 13*s13^4*s23 - 
                 48*s13^3*s23^2 - 36*s13^2*s23^3 + 96*s13*s23^4 + 64*s23^5) + 
               s12*(-21*s13^5 + 35*s13^4*s23 - 101*s13^3*s23^2 - 
                 78*s13^2*s23^3 + 144*s13*s23^4 + 128*s23^5))) + 
           p1q^2*(p3q^2*s12*(-7*s12^5*(s13 + 3*s23) - 21*s12^4*(s13^2 + 
                 2*s13*s23 - 2*s23^2) - s12^3*(21*s13^3 + 14*s13^2*s23 - 
                 60*s13*s23^2 + 59*s23^3) + s12^2*(-7*s13^4 + 14*s13^3*s23 + 
                 64*s13^2*s23^2 + 35*s13*s23^3 - 106*s23^4) + s23^2*
                (22*s13^4 + 9*s13^3*s23 + 14*s13^2*s23^2 + 144*s13*s23^3 + 
                 96*s23^4) + s12*s23*(7*s13^4 + 68*s13^3*s23 + 151*s13^2*
                  s23^2 + 84*s13*s23^3 + 112*s23^4)) + 
             p2q*p3q*(2*s12^5*(7*s13^2 + 7*s13*s23 + 3*s23^2) + s12^4*
                (42*s13^3 + 28*s13^2*s23 + 6*s13*s23^2 - 37*s23^3) + s12^3*
                (42*s13^4 + 28*s13^3*s23 + 84*s13^2*s23^2 + 68*s13*s23^3 + 
                 35*s23^4) + s12*s13*s23*(14*s13^4 + 6*s13^3*s23 + 
                 68*s13^2*s23^2 + 73*s13*s23^3 + 60*s23^4) + s23^2*
                (6*s13^5 - 37*s13^4*s23 + 35*s13^3*s23^2 + 110*s13^2*s23^3 - 
                 32*s23^5) + s12^2*(14*s13^5 + 28*s13^4*s23 + 84*s13^3*
                  s23^2 + 306*s13^2*s23^3 + 73*s13*s23^4 + 110*s23^5)) + 
             p2q^2*s13*(s12^4*(-7*s13^2 + 7*s13*s23 + 22*s23^2) + s12^3*
                (-21*s13^3 + 14*s13^2*s23 + 68*s13*s23^2 + 9*s23^3) + s12^2*
                (-21*s13^4 - 14*s13^3*s23 + 64*s13^2*s23^2 + 151*s13*s23^3 + 
                 14*s23^4) + s23*(-21*s13^5 + 42*s13^4*s23 - 59*s13^3*s23^2 - 
                 106*s13^2*s23^3 + 112*s13*s23^4 + 96*s23^5) + s12*
                (-7*s13^5 - 42*s13^4*s23 + 60*s13^3*s23^2 + 35*s13^2*s23^3 + 
                 84*s13*s23^4 + 144*s23^5))))/(32*s23^2*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) - 
         (7*(s12 + s13)^2*(s12 + s13 - 2*s23)*den[-1 + 2*ep])/(32*s23^2))*
        p2 . E0*p2 . E0conj + p1 . E0*
        (((ep^2*(s12 + s23)*(s12^2 - s13*s23 + s12*(s13 + s23)))/(8*s23^2) + 
           (p3q^3*s12^3*(7*s12^3 + 7*s12^2*s13 + s12*s23*(14*s13 + 3*s23) + 
               s23^2*(31*s13 + 10*s23)) - p1q^3*s23^2*(7*s12^3*(s13 + s23) + 
               s12*s23*(14*s13^2 + s13*s23 - 13*s23^2) + s12^2*(7*s13^2 + 
                 7*s13*s23 - 8*s23^2) + s23^2*(23*s13^2 + 25*s13*s23 + 
                 2*s23^2)) - p2q^3*s13^2*(7*s12^3*(s13 + s23) + s12^2*
                (7*s13^2 + 7*s13*s23 - 8*s23^2) + s12*s23*(14*s13^2 + 
                 17*s13*s23 + 3*s23^2) + 3*s23^2*(13*s13^2 + 19*s13*s23 + 
                 6*s23^2)) + p1q*p2q^2*s13*(s12^3*(-7*s13^2 + 7*s13*s23 + 
                 22*s23^2) + 7*s12*s23*(-2*s13^3 + 5*s13^2*s23 + 
                 9*s13*s23^2 + 2*s23^3) + s12^2*(-7*s13^3 + 7*s13^2*s23 + 
                 46*s13*s23^2 + 16*s23^3) + s23^2*(-31*s13^3 + 21*s13^2*s23 + 
                 72*s13*s23^2 + 20*s23^3)) + p1q^2*p2q*s23*
              (s12^3*(14*s13^2 + 23*s13*s23 + s23^2) + s23^2*(54*s13^3 + 
                 43*s13^2*s23 - 13*s13*s23^2 - 2*s23^3) + s12*s23*
                (44*s13^3 + 44*s13^2*s23 + 21*s13*s23^2 + 21*s23^3) + s12^2*
                (14*s13^3 + 39*s13^2*s23 + 33*s13*s23^2 + 24*s23^3)) - 
             p3q^2*s12^2*(p2q*(7*s12^3*(3*s13 + s23) + s12^2*(21*s13^2 + 
                   7*s13*s23 + 8*s23^2) + s23^2*(85*s13^2 + 61*s13*s23 + 
                   18*s23^2) + s12*s23*(42*s13^2 + 23*s13*s23 + 19*s23^2)) + 
               p1q*(7*s12^3*(s13 + 3*s23) + s12^2*(7*s13^2 + 21*s13*s23 - 
                   8*s23^2) + s12*s23*(14*s13^2 + 29*s13*s23 - 7*s23^2) + 
                 s23^2*(23*s13^2 + 87*s13*s23 + 22*s23^2))) + 
             p3q*s12*(p2q^2*s13*(7*s12^3*(3*s13 + 2*s23) + 7*s12^2*s13*
                  (3*s13 + 2*s23) + s12*s23*(42*s13^2 + 37*s13*s23 - 
                   10*s23^2) + s23^2*(93*s13^2 + 76*s13*s23 + 4*s23^2)) + 
               p1q^2*s23*(7*s12^3*(2*s13 + 3*s23) + s12*s23*(28*s13^2 + 
                   16*s13*s23 - 23*s23^2) + s12^2*(14*s13^2 + 21*s13*s23 - 
                   16*s23^2) + s23^2*(46*s13^2 + 81*s13*s23 + 14*s23^2)) + 2*
                p1q*p2q*(s12^3*(7*s13^2 + 7*s13*s23 + 3*s23^2) + 
                 s12^2*(7*s13^3 + 7*s13^2*s23 + 3*s13*s23^2 - 8*s23^3) + 
                 s12*s23*(14*s13^3 + 13*s13^2*s23 + 9*s13*s23^2 - s23^3) + 
                 s23^2*(27*s13^3 + 33*s13^2*s23 + 37*s13*s23^2 + 10*s23^3))))/
            (32*s23^2*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - 
                 p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (ep*(-(p3q^3*s12^3*(5*s12^3 + s12^2*
                  (5*s13 + 12*s23) + s23^2*(5*s13 + 14*s23) + s12*s23*
                  (-2*s13 + 21*s23))) + p2q^3*s13^2*(5*s12^3*(s13 + s23) + 
                s12^2*(5*s13^2 + 17*s13*s23 + 8*s23^2) + s23^2*(s13^2 + 
                  11*s13*s23 + 10*s23^2) + s12*s23*(-2*s13^2 + 11*s13*s23 + 
                  13*s23^2)) + p1q^3*s23^2*(5*s12^3*(s13 + s23) + 
                s12^2*(5*s13^2 + 17*s13*s23 + 8*s23^2) + s23^2*(s13^2 + 
                  11*s13*s23 + 10*s23^2) + s12*s23*(-2*s13^2 + 11*s13*s23 + 
                  13*s23^2)) + p1q^2*p2q*s23*(s12^3*(-10*s13^2 + 3*s13*s23 + 
                  9*s23^2) + s23^2*(2*s13^3 - 13*s13^2*s23 - 5*s13*s23^2 + 
                  10*s23^3) + s12^2*(-10*s13^3 - 13*s13^2*s23 + 21*s13*
                   s23^2 + 16*s23^3) + s12*s23*(12*s13^3 - 4*s13^2*s23 + 
                  s13*s23^2 + 17*s23^3)) + p1q*p2q^2*s13*(s12^3*(5*s13^2 - 
                  5*s13*s23 - 6*s23^2) + s23^2*(-3*s13^3 + s13^2*s23 - 
                  16*s13*s23^2 - 20*s23^3) + s12^2*(5*s13^3 + 7*s13^2*s23 - 
                  22*s13*s23^2 - 16*s23^3) - s12*s23*(2*s13^3 - 11*s13^2*
                   s23 + 17*s13*s23^2 + 30*s23^3)) + p3q^2*s12^2*(
                p2q*(5*s12^3*(3*s13 + s23) + s12^2*(15*s13^2 + 41*s13*s23 + 
                    8*s23^2) + s23^2*(11*s13^2 + 39*s13*s23 + 10*s23^2) + 
                  s12*s23*(-6*s13^2 + 53*s13*s23 + 13*s23^2)) + 
                p1q*(5*s12^3*(s13 + 3*s23) + s12^2*(5*s13^2 + 27*s13*s23 + 
                    32*s23^2) + s23^2*(s13^2 + 21*s13*s23 + 38*s23^2) + 
                  s12*s23*(-2*s13^2 + 7*s13*s23 + 55*s23^2))) - 
              p3q*s12*(p2q^2*s13*(5*s12^3*(3*s13 + 2*s23) + s12^2*(15*s13^2 + 
                    46*s13*s23 + 16*s23^2) + s23^2*(7*s13^2 + 36*s13*s23 + 
                    20*s23^2) + s12*s23*(-6*s13^2 + 43*s13*s23 + 26*s23^2)) + 
                p1q^2*s23*(5*s12^3*(2*s13 + 3*s23) + s12^2*(10*s13^2 + 
                    39*s13*s23 + 28*s23^2) + s23^2*(2*s13^2 + 27*s13*s23 + 
                    34*s23^2) + s12*s23*(-4*s13^2 + 20*s13*s23 + 47*s23^2)) + 
                2*p1q*p2q*(s12^3*(5*s13^2 + 5*s13*s23 + 7*s23^2) + 
                  s23^2*(-s13^3 + 7*s13^2*s23 + 9*s13*s23^2 + 10*s23^3) + 
                  s12^2*(5*s13^3 + 17*s13^2*s23 + 15*s13*s23^2 + 12*s23^3) + 
                  s12*s23*(-2*s13^3 + 9*s13^2*s23 + 7*s13*s23^2 + 
                    15*s23^3)))))/(16*s23^2*(-(p3q^3*s12^3) + 
              (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
              p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
           (7*(s12 + s13 - 2*s23)*(s12 + s23)^2*den[-1 + 2*ep])/(32*s23^2))*
          p1 . E0conj + ((ep^2*(s12 + s13)^2*(s12 + s23))/(8*s23^2) + 
           (ep*(p1q^4*s23^2*(5*s12^4*(s13 + s23) + s13*s23^2*(5*s13^2 - 
                  s13*s23 - 6*s23^2) + 2*s12^3*(5*s13^2 + 9*s13*s23 + 
                  3*s23^2) + s12^2*(5*s13^3 + 21*s13^2*s23 + 15*s13*s23^2 - 
                  s23^3) - 2*s12*s23*(-4*s13^3 - 5*s13^2*s23 + s13*s23^2 + 
                  s23^3)) - p1q^3*s23*(p3q*(5*s12^5*(2*s13 + 3*s23) + 
                  s13*s23^3*(-5*s13^2 + 3*s13*s23 + 8*s23^2) + s12^4*
                   (20*s13^2 + 45*s13*s23 + 19*s23^2) + s12*s23^2*(6*s13^3 + 
                    3*s13^2*s23 - 4*s13*s23^2 + 4*s23^3) + s12^2*s23*
                   (15*s13^3 + 23*s13^2*s23 + 5*s13*s23^2 + 5*s23^3) + 
                  s12^3*(10*s13^3 + 45*s13^2*s23 + 44*s13*s23^2 + 5*s23^3)) + 
                p2q*(s13^2*s23^2*(17*s13^2 - 10*s13*s23 - 27*s23^2) + 
                  s12^4*(10*s13^2 - 3*s13*s23 - 9*s23^2) + s12^3*(20*s13^3 + 
                    19*s13^2*s23 - 25*s13*s23^2 - 18*s23^3) + s12^2*
                   (10*s13^4 + 47*s13^3*s23 + 2*s13^2*s23^2 - 46*s13*s23^3 - 
                    13*s23^4) + s12*s23*(25*s13^4 + 27*s13^3*s23 - 30*s13^2*
                     s23^2 - 28*s13*s23^3 - 4*s23^4))) - (p3q*s12 - p2q*s13)^
                2*(p3q^2*(5*s12^5 + 2*s13*s23^3*(s13 + s23) + 2*s12^4*
                   (5*s13 + 6*s23) + 4*s12^2*s23*(3*s13^2 + 5*s13*s23 + 
                    2*s23^2) + s12*s23^2*(11*s13^2 + 6*s13*s23 + 2*s23^2) + 
                  s12^3*(5*s13^2 + 24*s13*s23 + 13*s23^2)) - p2q*p3q*
                 (5*s12^4*(2*s13 + s23) + s13*s23^2*(11*s13^2 + 9*s13*s23 - 
                    2*s23^2) + s12^3*(20*s13^2 + 29*s13*s23 + 8*s23^2) + 
                  s12*s23*(19*s13^3 + 26*s13^2*s23 + 14*s13*s23^2 + 
                    2*s23^3) + s12^2*(10*s13^3 + 43*s13^2*s23 + 31*s13*
                     s23^2 + 5*s23^3)) + p2q^2*(5*s12^3*s13*(s13 + s23) + 
                  s13*s23*(7*s13^3 + s13^2*s23 - 8*s13*s23^2 - 2*s23^3) + 
                  s12^2*(10*s13^3 + 17*s13^2*s23 + 3*s13*s23^2 - 2*s23^3) + 
                  s12*(5*s13^4 + 19*s13^3*s23 + 8*s13^2*s23^2 - 6*s13*s23^3 - 
                    2*s23^4))) + p1q^2*(p3q^2*(-2*s13*s23^5*(s13 + s23) + 
                  5*s12^6*(s13 + 3*s23) - s12^2*s13*s23^2*(11*s13^2 + 
                    19*s13*s23 + 14*s23^2) + s12^5*(10*s13^2 + 32*s13*s23 + 
                    15*s23^2) + s12^4*(5*s13^3 + 19*s13^2*s23 + 21*s13*
                     s23^2 + s23^3) - s12*s23^3*(14*s13^3 + 9*s13^2*s23 - 
                    10*s13*s23^2 + 2*s23^3) + s12^3*s23*(2*s13^3 - 9*s13^2*
                     s23 - 20*s13*s23^2 + 3*s23^3)) - p2q*p3q*
                 (2*s12^5*(5*s13^2 + 5*s13*s23 + 7*s23^2) + s13*s23^3*
                   (14*s13^3 - 9*s13^2*s23 - 21*s13*s23^2 + 2*s23^3) + 
                  s12^4*(20*s13^3 + 44*s13^2*s23 + 26*s13*s23^2 + 19*s23^3) + 
                  s12*s23^2*(28*s13^4 + 25*s13^3*s23 - 8*s13^2*s23^2 - 
                    22*s13*s23^3 - 2*s23^4) + s12^2*s23*(24*s13^4 + 
                    50*s13^3*s23 + 11*s13^2*s23^2 - 9*s13*s23^3 - s23^4) + 
                  s12^3*(10*s13^4 + 58*s13^3*s23 + 42*s13^2*s23^2 + 
                    19*s13*s23^3 + 6*s23^4)) + p2q^2*(s12^4*s13*(5*s13^2 - 
                    5*s13*s23 - 6*s23^2) + s12^3*s13*(10*s13^3 + 12*s13^2*
                     s23 - 29*s13*s23^2 - 21*s23^3) + s13*s23^2*(19*s13^4 - 
                    24*s13^3*s23 - 37*s13^2*s23^2 + 8*s13*s23^3 + 2*s23^4) + 
                  s12^2*(5*s13^5 + 39*s13^4*s23 - 19*s13^3*s23^2 - 74*s13^2*
                     s23^3 - 21*s13*s23^4 + 2*s23^5) + s12*s23*(22*s13^5 + 
                    19*s13^4*s23 - 61*s13^3*s23^2 - 50*s13^2*s23^3 - 
                    2*s13*s23^4 + 2*s23^5))) + p1q*(p3q^3*s12*(-5*s12^6 + 
                  4*s13*s23^4*(s13 + s23) + s12^5*(-5*s13 + 3*s23) + 
                  s12^4*(5*s13^2 + 18*s13*s23 + 17*s23^2) + s12*s23^2*
                   (9*s13^3 + 23*s13^2*s23 + 4*s13*s23^2 + 4*s23^3) + 
                  s12^2*s23*(12*s13^3 + 35*s13^2*s23 + 36*s13*s23^2 + 
                    12*s23^3) + s12^3*(5*s13^3 + 27*s13^2*s23 + 51*s13*
                     s23^2 + 17*s23^3)) + p2q*p3q^2*(4*s13^2*s23^4*
                   (s13 + s23) + 5*s12^6*(3*s13 + s23) + s12^5*(15*s13^2 + 
                    21*s13*s23 - 4*s23^2) + 2*s12*s13*s23^2*(-9*s13^3 - 
                    3*s13^2*s23 + 3*s13*s23^2 + 4*s23^3) - s12^4*(15*s13^3 + 
                    4*s13^2*s23 + 15*s23^3) - s12^2*s23*(31*s13^4 + 
                    28*s13^3*s23 + s13^2*s23^2 + 12*s13*s23^3 + 4*s23^4) - 
                  s12^3*(15*s13^4 + 51*s13^3*s23 + 30*s13^2*s23^2 + 
                    14*s13*s23^3 + 10*s23^4)) + p2q^3*s13*(5*s12^4*s13*
                   (s13 + s23) + s12^3*s13*(5*s13^2 + 27*s13*s23 + 
                    16*s23^2) + s13*s23*(-7*s13^4 + 22*s13^3*s23 + 17*s13^2*
                     s23^2 - 16*s13*s23^3 - 4*s23^4) + s12^2*(-5*s13^4 + 
                    32*s13^3*s23 + 54*s13^2*s23^2 + 11*s13*s23^3 - 4*s23^4) + 
                  s12*(-5*s13^5 + 3*s13^4*s23 + 52*s13^3*s23^2 + 32*s13^2*
                     s23^3 - 8*s13*s23^4 - 4*s23^5)) - p2q^2*p3q*
                 (5*s12^5*s13*(3*s13 + 2*s23) + 3*s12^4*s13*(5*s13^2 + 
                    17*s13*s23 + 4*s23^2) + s13^2*s23^2*(-9*s13^3 + 
                    17*s13^2*s23 + 22*s13*s23^2 - 4*s23^3) + s12^3*
                   (-15*s13^4 + 46*s13^3*s23 + 71*s13^2*s23^2 + 16*s13*
                     s23^3 + 4*s23^4) + s12*s13*s23*(-26*s13^4 + 29*s13^3*
                     s23 + 72*s13^2*s23^2 + 40*s13*s23^3 + 8*s23^4) + 
                  s12^2*(-15*s13^5 - 21*s13^4*s23 + 73*s13^3*s23^2 + 
                    75*s13^2*s23^3 + 26*s13*s23^4 + 4*s23^5)))))/
            (16*s23^2*(p1q^4*s23^2*(s12 + s23)*(s13 + s23) - 
              (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*
                 (s13 + s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + 
                    s23))) - p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - 
                  s12*s23 + 3*s13*s23 - s23^2) + p3q*(s12 + s23)*
                 (-(s23*(s13 + s23)) + s12*(2*s13 + 3*s23))) + 
              p1q*(-(p3q^3*s12^2*(s12 - s13 - 3*s23)*(s12 + s23)) + 
                p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 3*s23) + p2q*p3q^2*s12*
                 (s12^2*(3*s13 + s23) - 2*s23*(s13^2 + s13*s23 + s23^2) - 
                  s12*(3*s13^2 + 2*s13*s23 + s23^2)) - p2q^2*p3q*s13*
                 (s12^2*(3*s13 + 2*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(-3*s13^2 + 2*s13*s23 + 2*s23^2))) + 
              p1q^2*(p2q^2*s13*(s13 + s23)*(s12*(s13 - 2*s23) + 3*(s13 - s23)*
                   s23) + p3q^2*s12*(s12 + s23)*(s12*(s13 + 3*s23) - 
                  s23*(2*s13 + 3*s23)) - p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - 
                    s23^2) + 2*s12^2*(s13^2 + s13*s23 + s23^2) + 
                  s12*(2*s13^2*s23 + s23^3))))) + 
           (p3q^4*s12^2*(7*s12^5 + 14*s12^4*s13 + 4*s13*s23^3*(s13 + s23) + 2*
                s12^2*s23^2*(8*s13 + 7*s23) + s12^3*(7*s13^2 - 5*s23^2) + s12*
                s23^2*(-7*s13^2 + 30*s13*s23 + 12*s23^2)) - 
             p1q^4*s23^2*(7*s12^4*(s13 + s23) + 2*s12^3*(7*s13^2 + 
                 11*s13*s23 - 2*s23^2) + s12^2*(7*s13^3 + 23*s13^2*s23 + 
                 15*s13*s23^2 - 9*s23^3) + 2*s12*s23*(4*s13^3 + 22*s13^2*
                  s23 + 25*s13*s23^2 + 9*s23^3) + s23^2*(-3*s13^3 + 
                 27*s13^2*s23 + 46*s13*s23^2 + 16*s23^3)) - 
             p2q*p3q^3*s12*(8*s13^2*s23^3*(s13 + s23) + 7*s12^5*
                (4*s13 + s23) + 7*s12^4*s13*(8*s13 + s23) + s12^3*
                (28*s13^3 - 7*s13^2*s23 + 3*s13*s23^2 + 3*s23^3) + s12*s23^2*
                (-21*s13^3 + 91*s13^2*s23 + 78*s13*s23^2 + 16*s23^3) + s12^2*
                s23*(-7*s13^3 + 94*s13^2*s23 + 110*s13*s23^2 + 26*s23^3)) - 
             p2q^3*p3q*s13*(7*s12^4*s13*(4*s13 + 3*s23) + s12^3*(56*s13^3 + 
                 21*s13^2*s23 - 46*s13*s23^2 - 8*s23^3) + s13*s23^2*
                (-7*s13^3 + 15*s13^2*s23 + 38*s13*s23^2 + 16*s23^3) + s12*s13*
                s23*(-21*s13^3 + 108*s13^2*s23 + 150*s13*s23^2 + 50*s23^3) + 
               s12^2*(28*s13^4 - 21*s13^3*s23 - 43*s13^2*s23^2 - 
                 41*s13*s23^3 - 8*s23^4)) + p2q^2*p3q^2*(4*s13^3*s23^3*
                (s13 + s23) + 21*s12^5*s13*(2*s13 + s23) + s12^4*
                (84*s13^3 + 21*s13^2*s23 - 23*s13*s23^2 - 4*s23^3) + s12*s13*
                s23^2*(-21*s13^3 + 76*s13^2*s23 + 104*s13*s23^2 + 32*s23^3) + 
               s12^2*s13*s23*(-21*s13^3 + 163*s13^2*s23 + 196*s13*s23^2 + 
                 56*s23^3) + s12^3*(42*s13^4 - 21*s13^3*s23 - 7*s13^2*s23^2 - 
                 24*s13*s23^3 - 4*s23^4)) + p2q^4*s13^2*(7*s12^3*s13*
                (s13 + s23) + s12^2*(14*s13^3 + 7*s13^2*s23 - 23*s13*s23^2 - 
                 4*s23^3) + s13*s23*(-7*s13^3 + 23*s13^2*s23 + 50*s13*s23^2 + 
                 20*s23^3) + s12*(7*s13^4 - 7*s13^3*s23 - 28*s13^2*s23^2 - 
                 14*s13*s23^3 - 4*s23^4)) + p1q^3*s23*
              (p3q*(7*s12^5*(2*s13 + 3*s23) + s12^4*(28*s13^2 + 43*s13*s23 - 
                   15*s23^2) + s12^3*(14*s13^3 + 23*s13^2*s23 - 24*s13*
                    s23^2 - 19*s23^3) - s23^3*(-3*s13^3 + 23*s13^2*s23 + 
                   42*s13*s23^2 + 16*s23^3) + s12*s23^2*(-22*s13^3 - 
                   21*s13^2*s23 + 56*s13*s23^2 + 26*s23^3) + s12^2*s23*
                  (s13^3 + 25*s13^2*s23 + 61*s13*s23^2 + 59*s23^3)) + p2q*
                (s12^4*(14*s13^2 + 23*s13*s23 + s23^2) + s12^3*(28*s13^3 + 
                   61*s13^2*s23 + 41*s13*s23^2 + 28*s23^3) + s23^2*
                  (-13*s13^4 + 72*s13^3*s23 + 99*s13^2*s23^2 - 2*s13*s23^3 - 
                   16*s23^4) + s12*s23*(15*s13^4 + 65*s13^3*s23 + 44*s13^2*
                    s23^2 - 4*s13*s23^3 - 14*s23^4) + s12^2*(14*s13^4 + 
                   53*s13^3*s23 + 62*s13^2*s23^2 + 24*s13*s23^3 + 
                   29*s23^4))) + p1q^2*(p3q^2*(4*s13*s23^5*(s13 + s23) - 
                 7*s12^6*(s13 + 3*s23) + s12^5*(-14*s13^2 - 28*s13*s23 + 
                   25*s23^2) + s12^3*s23*(14*s13^3 + 33*s13^2*s23 - 
                   44*s13*s23^2 - 69*s23^3) + s12^2*s23^2*(19*s13^3 + 
                   59*s13^2*s23 - 14*s13*s23^2 + 10*s23^3) + s12^4*
                  (-7*s13^3 + 7*s13^2*s23 + 67*s13*s23^2 + 11*s23^3) + 
                 s12*s23^3*(-14*s13^3 + 15*s13^2*s23 + 98*s13*s23^2 + 
                   44*s23^3)) + p2q*p3q*(2*s12^5*(7*s13^2 + 7*s13*s23 + 
                   3*s23^2) + s12^4*(28*s13^3 + 28*s13^2*s23 + 14*s13*s23^2 - 
                   23*s23^3) + s12^2*s23^2*(62*s13^3 + 153*s13^2*s23 + 
                   113*s13*s23^2 + 81*s23^3) + s23^3*(-14*s13^4 + 21*s13^3*
                    s23 + 29*s13^2*s23^2 - 22*s13*s23^3 - 16*s23^4) + 
                 s12^3*(14*s13^4 + 14*s13^3*s23 + 22*s13^2*s23^2 + 
                   37*s13*s23^3 + 14*s23^4) + s12*s23^2*(-8*s13^4 + 
                   31*s13^3*s23 - 40*s13^2*s23^2 + 30*s13*s23^3 + 
                   22*s23^4)) + p2q^2*(s12^4*s13*(-7*s13^2 + 7*s13*s23 + 
                   22*s23^2) + s12^3*s13*(-14*s13^3 + 49*s13*s23^2 + 
                   23*s23^3) + s13*s23^2*(17*s13^4 - 70*s13^3*s23 - 
                   37*s13^2*s23^2 + 102*s13*s23^3 + 52*s23^4) + s12*s23*
                  (-14*s13^5 - 7*s13^4*s23 + 79*s13^3*s23^2 + 98*s13^2*
                    s23^3 + 46*s13*s23^4 - 4*s23^5) - s12^2*(7*s13^5 + 
                   21*s13^4*s23 - 31*s13^3*s23^2 - 92*s13^2*s23^3 + 
                   s13*s23^4 + 4*s23^5))) + p1q*(p3q^3*s12*(7*s12^6 + 
                 7*s12^5*(s13 - 3*s23) - 8*s13*s23^4*(s13 + s23) - 
                 s12^4*(7*s13^2 + 42*s13*s23 + s23^2) - s12^2*s23^2*
                  (11*s13^2 + 12*s13*s23 + 34*s23^2) + s12*s23^2*(11*s13^3 + 
                   15*s13^2*s23 - 86*s13*s23^2 - 40*s23^3) + s12^3*
                  (-7*s13^3 - 21*s13^2*s23 + 33*s13*s23^2 + 33*s23^3)) + 
               p2q^3*s13*(-7*s12^4*s13*(s13 + s23) - s12^3*s13*(7*s13^2 + 
                   21*s13*s23 + 10*s23^2) + s12^2*(7*s13^4 - 28*s13^3*s23 - 
                   52*s13^2*s23^2 + 27*s13*s23^3 + 8*s23^4) - s13*s23*
                  (7*s13^4 - 32*s13^3*s23 + 39*s13^2*s23^2 + 134*s13*s23^3 + 
                   56*s23^4) + s12*(7*s13^5 - 21*s13^4*s23 - 66*s13^3*s23^2 - 
                   48*s13^2*s23^3 - 18*s13*s23^4 + 8*s23^5)) + p2q^2*p3q*
                (7*s12^5*s13*(3*s13 + 2*s23) + s12^4*s13*(21*s13^2 + 
                   21*s13*s23 + 8*s23^2) + s12^3*(-21*s13^4 + 14*s13^3*s23 + 
                   75*s13^2*s23^2 + 44*s13*s23^3 + 8*s23^4) + s13*s23^2*
                  (11*s13^4 - 5*s13^3*s23 + 28*s13^2*s23^2 + 76*s13*s23^3 + 
                   32*s23^4) + s12*s13*s23*(14*s13^4 - 79*s13^3*s23 + 
                   60*s13^2*s23^2 + 110*s13*s23^3 + 44*s23^4) + 
                 s12^2*(-21*s13^5 + 21*s13^4*s23 + 145*s13^3*s23^2 + 
                   241*s13^2*s23^3 + 70*s13*s23^4 + 8*s23^5)) + p2q*p3q^2*
                (-8*s13^2*s23^4*(s13 + s23) - 7*s12^6*(3*s13 + s23) + 
                 s12^5*(-21*s13^2 + 21*s13*s23 + 2*s23^2) + s12^4*(21*s13^3 + 
                   56*s13^2*s23 - 22*s13*s23^2 - 43*s23^3) + s12^3*
                  (21*s13^4 + 21*s13^3*s23 - 112*s13^2*s23^2 - 138*s13*
                    s23^3 - 64*s23^4) + s12^2*s23*(-7*s13^4 + 58*s13^3*s23 + 
                   83*s13^2*s23^2 + 34*s13*s23^3 + 20*s23^4) + 
                 s12*(-22*s13^4*s23^2 + 22*s13^3*s23^3 + 46*s13^2*s23^4 + 
                   84*s13*s23^5 + 32*s23^6))))/(32*s23^2*
             (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*(
                p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
                p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
              p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                  s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                  s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                   3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                  3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                  2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 
                    2*s13*s23 + s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 
                    2*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(-3*s13^2 + 2*s13*s23 + 2*s23^2))) + 
              p1q^2*(p2q^2*s13*(s13 + s23)*(s12*(s13 - 2*s23) + 3*(s13 - s23)*
                   s23) + p3q^2*s12*(s12 + s23)*(s12*(s13 + 3*s23) - 
                  s23*(2*s13 + 3*s23)) - p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - 
                    s23^2) + 2*s12^2*(s13^2 + s13*s23 + s23^2) + 
                  s12*(2*s13^2*s23 + s23^3))))) - 
           (7*(s12^3 + s12^2*(2*s13 - s23) - s13*(s13 - 2*s23)*s23 + 
              s12*(s13^2 - 2*s13*s23 - 2*s23^2))*den[-1 + 2*ep])/(32*s23^2))*
          p2 . E0conj))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + 
     ((-1/72*(ep^2*s13*(s12 + 10*s13)*s23)/s12 + 
         (ep*(9*p1q^2*s13*s23*(s12 + s23)*(s12 + s13 + s23) + 
            p2q^2*s13*(s13^2*(9*s13 - 61*s23) - 83*s12^2*s23 + 
              s12*(-9*s13^2 - 106*s13*s23 + 81*s23^2)) + 
            p3q^2*(70*s13^2*s23^2 + s12^3*(-9*s13 + 83*s23) + 
              s12*s13*s23*(79*s13 + 178*s23) + s12^2*(9*s13^2 + 88*s13*s23 + 
                83*s23^2)) + p2q*p3q*(83*s12^3*s23 + s13^2*s23*(-79*s13 + 
                61*s23) + s12^2*(18*s13^2 + 23*s13*s23 + 83*s23^2) + 
              s12*s13*(-18*s13^2 - 27*s13*s23 + 268*s23^2)) + 
            p1q*(p3q*(s12^3*(-9*s13 + 2*s23) + s13*s23^2*(79*s13 + 9*s23) + 
                s12*s23*(88*s13^2 + 115*s13*s23 - 81*s23^2) + 
                s12^2*(9*s13^2 + 16*s13*s23 - 79*s23^2)) + p2q*(2*s12^3*s23 + 
                2*s13^2*s23*(-9*s13 + 26*s23) + s12^2*(9*s13^2 + 25*s13*s23 - 
                  79*s23^2) + s12*(-9*s13^3 + 61*s13^2*s23 + 106*s13*s23^2 - 
                  81*s23^3)))))/(144*(p2q + p3q)*s12*(p2q*s13 - 
            p1q*(s12 + s23) - p3q*(s12 + s23))) + 
         (18*p1q^4*s23^2*(s12^4*(36*s13 - s23) + 5*s13*s23^3*(s13 + s23) + 
             s12*s13*s23^2*(32*s13 + 37*s23) + s12^3*(36*s13^2 + 89*s13*s23 - 
               2*s23^2) + s12^2*s23*(54*s13^2 + 85*s13*s23 - s23^2)) - 
           9*(p2q + p3q)^2*s23*(s12 + s13 + s23)*
            (-(p2q^2*s13^2*(38*s12^3 + 10*s13^2*s23 + s12^2*(59*s13 + 
                  22*s23) + s12*s13*(21*s13 + 50*s23))) + 
             p3q^2*s12*(16*s12^4 + s12*s13*(5*s13 - 14*s23)*s23 - 10*s13^2*
                s23^2 + s12^3*(49*s13 + 30*s23) + s12^2*(33*s13^2 + 
                 17*s13*s23 + 14*s23^2)) + p2q*p3q*s13*(22*s12^4 + 10*s13^2*
                s23^2 + 2*s12^3*(5*s13 + 14*s23) + s12*s13*s23*(41*s13 + 
                 50*s23) + s12^2*(-12*s13^2 + 105*s13*s23 + 22*s23^2))) - 
           p1q^3*s23*(p2q*(72*s12^5*(9*s13 + 2*s23) + 10*s13*s23^3*
                (27*s13^2 + 34*s13*s23 + 7*s23^2) + s12^4*(648*s13^2 + 
                 954*s13*s23 + 428*s23^2) + 6*s12^3*(216*s13^3 + 453*s13^2*
                  s23 + 326*s13*s23^2 + 145*s23^3) + s12*s23^2*(1638*s13^3 + 
                 2107*s13^2*s23 + 519*s13*s23^2 + 280*s23^3) + s12^2*s23*
                (2592*s13^3 + 3981*s13^2*s23 + 1937*s13*s23^2 + 866*s23^3)) + 
             p3q*(18*s12^5*(72*s13 + 7*s23) + 10*s13*s23^3*(9*s13^2 + 
                 7*s13*s23 - 2*s23^2) + 2*s12^4*(324*s13^2 + 963*s13*s23 + 
                 205*s23^2) + 24*s12^3*(27*s13^3 + 33*s13^2*s23 + 
                 74*s13*s23^2 + 37*s23^3) + s12*s23^2*(576*s13^3 + 
                 379*s13^2*s23 - 57*s13*s23^2 + 280*s23^3) + s12^2*s23*
                (972*s13^3 + 777*s13^2*s23 + 947*s13*s23^2 + 884*s23^3))) + 
           p1q*(p3q^3*(648*s12^6*s13 + 70*s13^2*s23^4*(s13 + s23) + s12^5*
                (648*s13^2 + 387*s13*s23 - 4*s23^2) + s12*s13*s23^3*
                (289*s13^2 + 589*s13*s23 + 260*s23^2) + s12^4*s23*
                (90*s13^2 + 1241*s13*s23 + 564*s23^2) + 2*s12^2*s23^2*
                (-282*s13^3 + 960*s13^2*s23 + 715*s13*s23^2 + 203*s23^3) + 
               s12^3*s23*(-945*s13^3 + 1329*s13^2*s23 + 2510*s13*s23^2 + 
                 974*s23^3)) - p2q^2*p3q*(144*s12^6*s23 + s12^5*s23*
                (2043*s13 + 436*s23) - 4*s12^4*(486*s13^3 - 423*s13^2*s23 - 
                 437*s13*s23^2 - 39*s23^3) + 10*s13^2*s23^2*(9*s13^3 + 
                 41*s13^2*s23 + 16*s13*s23^2 - 16*s23^3) + s12*s13*s23*
                (486*s13^4 + 1005*s13^3*s23 + 1991*s13^2*s23^2 + 
                 462*s13*s23^3 - 710*s23^4) + s12^3*(-1944*s13^4 - 
                 495*s13^3*s23 + 5716*s13^2*s23^2 + 156*s13*s23^3 - 
                 254*s23^4) + s12^2*s23*(-1746*s13^4 + 4671*s13^3*s23 + 
                 3174*s13^2*s23^2 - 1077*s13*s23^3 - 118*s23^4)) - 
             p2q^3*s13*(504*s12^5*s23 + s12^4*s23*(1053*s13 + 1022*s23) + 10*
                s13^2*s23^2*(9*s13^2 + 34*s13*s23 + 25*s23^2) + 2*s12^3*
                (324*s13^3 + 846*s13^2*s23 + 2065*s13*s23^2 + 581*s23^3) + 
               s12*s13*s23*(486*s13^3 + 1173*s13^2*s23 + 1977*s13*s23^2 + 
                 1160*s23^3) + s12^2*(648*s13^4 + 981*s13^3*s23 + 
                 3543*s13^2*s23^2 + 3114*s13*s23^3 + 316*s23^4)) + 
             p2q*p3q^2*(-144*s12^6*s23 + 10*s13^2*s23^3*(-7*s13^2 + 
                 16*s13*s23 + 23*s23^2) - 8*s12^5*(243*s13^2 + 387*s13*s23 + 
                 55*s23^2) - s12^4*(1944*s13^3 + 6381*s13^2*s23 + 
                 1429*s13*s23^2 - 408*s23^3) + s12*s13*s23^2*(168*s13^3 + 
                 275*s13^2*s23 + 1287*s13*s23^2 + 970*s23^3) + s12^3*s23*
                (-4590*s13^3 - 4145*s13^2*s23 + 2868*s13*s23^2 + 
                 1228*s23^3) + s12^2*s23*(783*s13^4 - 3636*s13^3*s23 + 
                 1212*s13^2*s23^2 + 2823*s13*s23^3 + 524*s23^4))) + 
           p1q^2*(p3q^2*(72*s12^6*(9*s13 + 2*s23) - 10*s13*s23^4*
                (2*s13^2 + 9*s13*s23 + 7*s23^2) + s12^5*(648*s13^2 + 
                 446*s23^2) + s12^4*s23*(828*s13^2 + 827*s13*s23 + 
                 1054*s23^2) - s12*s23^3*(377*s13^3 + 456*s13^2*s23 + 
                 349*s13*s23^2 + 280*s23^3) - s12^2*s23^2*(1167*s13^3 - 
                 810*s13^2*s23 + 525*s13*s23^2 + 298*s23^3) + s12^3*s23*
                (-972*s13^3 + 1842*s13^2*s23 + 905*s13*s23^2 + 734*s23^3)) + 
             p2q*p3q*(144*s12^6*s23 - 8*s12^5*(162*s13^2 + 180*s13*s23 - 
                 71*s23^2) + 10*s13*s23^3*(18*s13^3 + 30*s13^2*s23 + 
                 5*s13*s23^2 - 7*s23^3) + 2*s12^3*s23*(-1548*s13^3 + 
                 996*s13^2*s23 + 2583*s13*s23^2 + 629*s23^3) + s12^4*
                (-1296*s13^3 - 1764*s13^2*s23 + 2725*s13*s23^2 + 
                 1582*s23^3) + s12*s23^2*(1062*s13^4 + 986*s13^3*s23 + 
                 825*s13^2*s23^2 + 731*s13*s23^3 - 280*s23^4) + 3*s12^2*s23*
                (324*s13^4 - 373*s13^3*s23 + 1250*s13^2*s23^2 + 872*s13*
                  s23^3 - 60*s23^4)) + p2q^2*(-4*s12^5*(36*s13 - 35*s23)*
                s23 + 10*s13^2*s23^3*(27*s13^2 + 50*s13*s23 + 23*s23^2) + 2*
                s12^4*(324*s13^3 + 648*s13^2*s23 + 1201*s13*s23^2 + 
                 282*s23^3) + s12*s13*s23^2*(1548*s13^3 + 2425*s13^2*s23 + 
                 1767*s13*s23^2 + 990*s23^3) + s12^2*s23*(2268*s13^4 + 
                 3432*s13^3*s23 + 4758*s13^2*s23^2 + 2781*s13*s23^3 + 
                 118*s23^4) + s12^3*(648*s13^4 + 1764*s13^3*s23 + 
                 3534*s13^2*s23^2 + 3847*s13*s23^3 + 542*s23^4))))/
          (288*p1q*(p2q + p3q)*s12^2*s23*(p1q^2*s23*(s12 + s23) + 
            (p2q + p3q)*(s12 + s13)*(p2q*s13 - p3q*(s12 + s23)) - 
            p1q*(p3q*(s12 + s13 - s23)*(s12 + s23) + p2q*(s12^2 + 2*s13*s23 + 
                s12*(s13 + s23))))) + 
         (s13*(-90*p1q^2*s23^2*(s12 + s13 + s23) + 9*p3q^2*s12*
             (s12 + s13 + s23)*(33*s12 + 10*s23) - 9*p2q^2*s13*
             (s12 + s13 + s23)*(33*s12 + 10*s23) + p1q*p3q*s23*
             (-534*s12^2 + 70*s23*(s13 + s23) + 3*s12*(59*s13 + 119*s23)) + 
            p2q*(9*p3q*(s12 - s13)*(s12 + s13 + s23)*(33*s12 + 10*s23) + 
              p1q*s23*(-624*s12^2 + 177*s12*s13 + 90*s13^2 + 267*s12*s23 + 
                160*s13*s23 + 70*s23^2)))*den[-1 + 2*ep])/
          (288*p1q*(p2q + p3q)*s12^2))*E0 . E0conj + 
       (-1/72*(ep^2*(s12 + 10*s13)*(s12^2 - s13*s23 + s12*(s13 + s23)))/
           s12^2 + (ep*(-18*p1q^5*s12*(4*s12 + 5*s13)*s23^3*(s12 + s23)*
             (s12 + s13 + s23) - 18*(4*s12 + 5*s13)*(p3q*s12 - p2q*s13)^3*
             (s12 + s13 + s23)*(p2q^2*s13*(-s12 + s13 - s23) + 
              p3q^2*s23*(s12 + s23) + p2q*p3q*(s12^2 - s12*s13 + 2*s12*s23 - 
                2*s13*s23 + s23^2)) + p1q^3*s23*(p3q^2*(186*s12^6 - 
                70*s13*s23^4*(s13 + s23) + s12^5*(1056*s13 + 229*s23) + 
                s12^2*s23^2*(-260*s13^2 + 237*s13*s23 - 74*s23^2) - 
                2*s12*s23^3*(5*s13^2 + 101*s13*s23 + 46*s23^2) + 
                s12^3*s23*(550*s13^2 + 344*s13*s23 + 471*s23^2) + 
                s12^4*(870*s13^2 + 545*s13*s23 + 496*s23^2)) + 
              p2q^2*(402*s12^5*s13 - 60*s13^2*s23^2*(6*s13^2 + s13*s23 - 
                  5*s23^2) + s12^4*(1326*s13^2 + 451*s13*s23 + 162*s23^2) - 
                s12^2*s13*(270*s13^3 + 128*s13^2*s23 + 515*s13*s23^2 - 
                  466*s23^3) + s12^3*(654*s13^3 + 1007*s13^2*s23 + 
                  329*s13*s23^2 + 162*s23^3) + 2*s12*s13*s23*(-405*s13^3 - 
                  719*s13^2*s23 + 235*s13*s23^2 + 174*s23^3)) + 
              p2q*p3q*(402*s12^6 + s12^5*(1800*s13 + 229*s23) + 10*s13*s23^3*
                 (39*s13^2 + 32*s13*s23 - 7*s23^2) + s12^4*(2358*s13^2 + 
                  492*s13*s23 + 82*s23^2) + 2*s12*s23^2*(235*s13^3 + 
                  725*s13^2*s23 + 154*s13*s23^2 - 46*s23^3) + s12^2*s23*
                 (1420*s13^3 + 341*s13^2*s23 + 847*s13*s23^2 - 2*s23^3) + 
                s12^3*(960*s13^3 + 1647*s13^2*s23 - 191*s13*s23^2 + 
                  345*s23^3))) + p1q^2*(p3q^3*s12*(-291*s12^6 + 50*s13*s23^4*
                 (s13 + s23) - s12^5*(771*s13 + 236*s23) + s12^4*
                 (-480*s13^2 + 434*s13*s23 - 29*s23^2) + 10*s12^2*s23^2*
                 (97*s13^2 + 39*s13*s23 + 28*s23^2) + 2*s12*s23^3*
                 (70*s13^2 + 181*s13*s23 + 56*s23^2) + s12^3*s23*(400*s13^2 + 
                  797*s13*s23 + 84*s23^2)) + p2q*p3q^2*(-363*s12^7 + 
                230*s13^2*s23^4*(s13 + s23) + s12^6*(-279*s13 + 52*s23) + 
                2*s12*s13*s23^3*(105*s13^2 + 403*s13*s23 + 153*s23^2) + 
                s12^5*(1134*s13^2 + 2142*s13*s23 + 223*s23^2) + 
                s12^4*(1050*s13^3 + 2346*s13^2*s23 + 1721*s13*s23^2 - 
                  240*s23^3) + 2*s12^3*s23*(515*s13^3 + 1145*s13^2*s23 + 
                  206*s13*s23^2 + 32*s23^3) + 2*s12^2*s23^2*(450*s13^3 + 
                  191*s13^2*s23 + 304*s13*s23^2 + 56*s23^3)) + 
              p2q^2*p3q*(726*s12^6*s13 + s12^5*(1431*s13^2 + 988*s13*s23 - 
                  324*s23^2) - 10*s13^2*s23^3*(75*s13^2 + 52*s13*s23 - 
                  23*s23^2) - s12^2*s13*s23*(2060*s13^3 + 1049*s13^2*s23 + 
                  582*s13*s23^2 - 516*s23^3) - s12^3*s13*(660*s13^3 + 
                  2214*s13^2*s23 + 355*s13*s23^2 - 202*s23^3) + 
                3*s12^4*(15*s13^3 + 32*s13^2*s23 - 40*s13*s23^2 - 
                  108*s23^3) + 2*s12*s13*s23^2*(-425*s13^3 - 1094*s13^2*s23 + 
                  24*s13*s23^2 + 128*s23^3)) - p2q^3*s13*(363*s12^5*s13 - 
                60*s13^2*s23^2*(9*s13^2 + s13*s23 - 8*s23^2) + 
                s12^4*(861*s13^2 + 1040*s13*s23 + 324*s23^2) + 2*s12*s13*s23*
                 (-315*s13^3 - 691*s13^2*s23 + 425*s13*s23^2 + 246*s23^3) + 
                s12^3*(408*s13^3 + 2002*s13^2*s23 + 1243*s13*s23^2 + 
                  324*s23^3) + s12^2*s13*(-90*s13^3 + 566*s13^2*s23 - 
                  31*s13*s23^2 + 734*s23^3))) + 
            p1q*(-(p3q^4*s12^2*(291*s12^5 - 110*s13*s23^3*(s13 + s23) + 
                 s12^4*(771*s13 + 494*s23) + s12^2*s23*(560*s13^2 + 
                   123*s13*s23 - 30*s23^2) - 2*s12*s23^2*(15*s13^2 + 
                   81*s13*s23 + 26*s23^2) + s12^3*(480*s13^2 + 784*s13*s23 + 
                   225*s23^2))) + p2q^2*p3q^2*(-250*s13^3*s23^3*(s13 + s23) + 
                9*s12^6*(145*s13 + 18*s23) - 2*s12*s13^2*s23^2*(415*s13^2 + 
                  603*s13*s23 + 48*s23^2) + 3*s12^5*(660*s13^2 + 541*s13*
                   s23 + 54*s23^2) + s12^4*s13*(-1305*s13^2 - 129*s13*s23 + 
                  364*s23^2) - s12^3*s13*(1980*s13^3 + 1446*s13^2*s23 + 
                  885*s13*s23^2 - 392*s23^3) - s12^2*s13*s23*(1260*s13^3 + 
                  2403*s13^2*s23 + 534*s13*s23^2 - 184*s23^3)) + 
              p2q^4*s13^2*(3*s12^4*(145*s13 + 54*s23) - 20*s13^2*s23*
                 (18*s13^2 + s13*s23 - 17*s23^2) + s12^3*(951*s13^2 + 
                  815*s13*s23 + 162*s23^2) + s12^2*s13*(336*s13^2 + 
                  247*s13*s23 + 526*s23^2) + 2*s12*s13*(-90*s13^3 - 
                  284*s13^2*s23 + 325*s13*s23^2 + 154*s23^3)) + 
              p2q*p3q^3*s12*(-435*s12^6 + 140*s13^2*s23^3*(s13 + s23) - 
                2*s12^5*(39*s13 + 202*s23) + 2*s12*s13*s23^2*(95*s13^2 + 
                  342*s13*s23 + 147*s23^2) + s12^4*(1977*s13^2 + 929*s13*
                   s23 + 225*s23^2) + 2*s12^2*s23*(645*s13^3 + 616*s13^2*
                   s23 + 448*s13*s23^2 + 26*s23^3) + s12^3*(1620*s13^3 + 
                  1615*s13^2*s23 + 1285*s13*s23^2 + 246*s23^3)) - 
              p2q^3*p3q*s13*(9*s12^5*(145*s13 + 36*s23) - 10*s13^2*s23^2*
                 (61*s13^2 + 36*s13*s23 - 25*s23^2) + 6*s12^4*(427*s13^2 + 
                  339*s13*s23 + 54*s23^2) + s12^3*s13*(237*s13^2 + 
                  553*s13*s23 + 1115*s23^2) + 2*s12*s13*s23*(-445*s13^3 - 
                  657*s13^2*s23 + 366*s13*s23^2 + 118*s23^3) + s12^2*s13*
                 (-1020*s13^3 - 1183*s13^2*s23 + 825*s13*s23^2 + 
                  946*s23^3))) - p1q^4*s23^2*(p3q*(-177*s12^5 + 
                s12^4*(123*s13 - 442*s23) + 70*s13*s23^3*(s13 + s23) + 
                s12^3*(300*s13^2 - 44*s13*s23 - 99*s23^2) + 2*s12*s23^2*
                 (75*s13^2 + 171*s13*s23 + 46*s23^2) + s12^2*s23*(380*s13^2 + 
                  267*s13*s23 + 258*s23^2)) + p2q*(39*s12^5 + 
                s12^4*(393*s13 - 154*s23) + s12^3*(84*s13^2 - 188*s13*s23 - 
                  171*s23^2) - 10*s13*s23^2*(9*s13^2 + 2*s13*s23 - 7*s23^2) - 
                s12^2*(270*s13^3 + 610*s13^2*s23 + 399*s13*s23^2 - 
                  114*s23^3) + s12*(-450*s13^3*s23 - 642*s13^2*s23^2 + 
                  90*s13*s23^3 + 92*s23^4)))))/(144*p1q*(p2q + p3q)*s12^3*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (18*p1q^6*s12*s23^4*(2*s12^4 + s12^3*(41*s13 - 24*s23) + 
             15*s13*s23^2*(s13 + s23) + s12^2*(39*s13^2 + 49*s13*s23 - 54*
                s23^2) + s12*s23*(36*s13^2 + 23*s13*s23 - 28*s23^2)) - 
           18*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
            (p3q^3*s12*s23*(20*s12^4 + s12*s13*(36*s13 - 13*s23)*s23 + 15*
                s13^2*s23^2 + s12^3*(59*s13 + 10*s23) + s12^2*(39*s13^2 + 
                 28*s13*s23 - 10*s23^2)) + p2q*p3q^2*(-25*s13^3*s23^3 + 4*
                s12^5*(36*s13 + s23) + 5*s12*s13^2*s23^2*(-13*s13 + 2*s23) + 
               s12^2*s13*s23*(-46*s13^2 + 55*s13*s23 + 7*s23^2) + s12^3*s23*
                (117*s13^2 + 6*s13*s23 + 8*s23^2) + s12^4*(144*s13^2 + 
                 95*s13*s23 + 12*s23^2)) - p2q^3*s13*(25*s13^3*(s13 - s23)*
                s23 + 5*s12*s13^2*(2*s13 - s23)*s23 + 2*s12^4*(72*s13 + 
                 s23) + 2*s12^2*s13*s23*(57*s13 + 10*s23) + s12^3*
                (144*s13^2 + 59*s13*s23 + 18*s23^2)) + p2q^2*p3q*
              (25*s13^3*(2*s13 - s23)*s23^2 + 4*s12^5*(36*s13 + 5*s23) + 
               s12^4*s23*(199*s13 + 38*s23) + 5*s12*s13^2*s23*(10*s13^2 - 
                 5*s13*s23 - s23^2) + 2*s12^2*s13*s23*(-11*s13^2 + 
                 51*s13*s23 + 10*s23^2) + s12^3*(-144*s13^3 + 251*s13^2*s23 + 
                 89*s13*s23^2 + 18*s23^3))) - p1q^5*s23^3*
            (p2q*(360*s12^6 + 3*s12^5*(66*s13 + 721*s23) + 30*s13*s23^3*
                (15*s13^2 + 2*s13*s23 - 13*s23^2) + s12^4*(1944*s13^2 - 
                 1065*s13*s23 + 4996*s23^2) + 10*s12*s23^2*(198*s13^3 + 
                 186*s13^2*s23 - 21*s13*s23^2 + 64*s23^3) + s12^2*s23*
                (2772*s13^3 + 2136*s13^2*s23 - 1721*s13*s23^2 + 2706*s23^3) + 
               s12^3*(2106*s13^3 + 2172*s13^2*s23 - 2840*s13*s23^2 + 
                 5259*s23^3)) + p3q*(432*s12^6 - 390*s13*s23^4*(s13 + s23) + 
               s12^5*(4194*s13 + 615*s23) + s12^4*(4464*s13^2 + 4623*s13*
                  s23 + 2692*s23^2) + 10*s12*s23^2*(27*s13^3 - 48*s13^2*s23 - 
                 39*s13*s23^2 + 64*s23^3) + s12^2*s23*(648*s13^3 + 
                 66*s13^2*s23 + 871*s13*s23^2 + 3714*s23^3) + s12^3*
                (702*s13^3 + 2028*s13^2*s23 + 1624*s13*s23^2 + 
                 5583*s23^3))) + p1q^4*s23^2*(p3q^2*(756*s12^7 + 9*s12^6*
                (686*s13 + 277*s23) + 390*s13*s23^4*(-s13^2 + s23^2) + 3*
                s12^5*(2274*s13^2 + 724*s13*s23 + 3243*s23^2) + s12^2*s23^2*
                (-618*s13^3 + 13*s13^2*s23 + 1979*s13*s23^2 - 1794*s23^3) - 
               10*s12*s23^3*(75*s13^3 + 81*s13^2*s23 + 14*s13*s23^2 + 
                 64*s23^3) + s12^3*s23*(-1122*s13^3 - 2924*s13^2*s23 + 
                 5618*s13*s23^2 + 4047*s23^3) + s12^4*(1404*s13^3 - 
                 4701*s13^2*s23 + 403*s13*s23^2 + 13193*s23^3)) + 
             p2q^2*(s12^6*(720*s13 + 327*s23) + 30*s13^2*s23^3*(75*s13^2 + 
                 8*s13*s23 - 67*s23^2) + 2*s12^5*(144*s13^2 + 4431*s13*s23 + 
                 572*s23^2) + 10*s12*s13*s23^2*(522*s13^3 + 531*s13^2*s23 - 
                 120*s13*s23^2 + 253*s23^3) + s12^4*(1674*s13^3 + 
                 2253*s13^2*s23 + 24139*s13*s23^2 + 1299*s23^3) + 2*s12^2*s23*
                (2214*s13^4 + 2382*s13^3*s23 + 89*s13^2*s23^2 + 6508*s13*
                  s23^3 + 320*s23^4) + s12^3*(2106*s13^4 + 1404*s13^3*s23 + 
                 4071*s13^2*s23^2 + 25835*s13*s23^3 + 1122*s23^4)) + 
             p2q*p3q*(720*s12^7 + 60*s12^6*(15*s13 + 77*s23) + s12^5*
                (4896*s13^2 + 6120*s13*s23 + 11269*s23^2) + 30*s13*s23^3*
                (15*s13^3 - 80*s13^2*s23 - 82*s13*s23^2 + 13*s23^3) + 4*s12^4*
                (1530*s13^3 + 1557*s13^2*s23 + 5627*s13*s23^2 + 2561*s23^3) + 
               s12^2*s23*(2124*s13^4 + 708*s13^3*s23 + 3683*s13^2*s23^2 + 
                 17155*s13*s23^3 - 650*s23^4) - 10*s12*s23^2*(-171*s13^4 + 
                 120*s13^3*s23 + 282*s13^2*s23^2 - 248*s13*s23^3 + 
                 64*s23^4) + s12^3*(1404*s13^4 + 3000*s13^3*s23 + 
                 9445*s13^2*s23^2 + 30409*s13*s23^3 + 2865*s23^4))) - 
           p1q^3*s23*(p3q^3*(360*s12^8 + 390*s13^2*s23^5*(s13 + s23) + 9*
                s12^7*(302*s13 + 157*s23) + 10*s12*s13*s23^4*(-3*s13^2 + 
                 51*s13*s23 + 26*s23^2) + s12^6*(3060*s13^2 - 5349*s13*s23 + 
                 7527*s23^2) + s12^4*s23*(-2892*s13^3 + 5087*s13^2*s23 + 
                 12695*s13*s23^2 - 7767*s23^3) + 2*s12^3*s23^2*(834*s13^3 + 
                 3362*s13^2*s23 + 75*s13*s23^2 - 3963*s23^3) - s12^2*s23^3*
                (342*s13^3 + 913*s13^2*s23 + 2848*s13*s23^2 + 1416*s23^3) + 
               s12^5*(702*s13^3 - 10950*s13^2*s23 + 3314*s13*s23^2 + 
                 5217*s23^3)) + p2q*p3q^2*(360*s12^8 + s12^7*(-594*s13 + 
                 3399*s23) - 30*s13^2*s23^4*(69*s13^2 + 2*s13*s23 - 
                 67*s23^2) + s12^6*(-4968*s13^2 + 4767*s13*s23 + 
                 9920*s23^2) - 10*s12*s13*s23^3*(249*s13^3 + 312*s13^2*s23 - 
                 105*s13*s23^2 + 163*s23^3) + s12^5*(-5418*s13^3 - 
                 8658*s13^2*s23 + 22875*s13*s23^2 + 5015*s23^3) + s12^2*s23^2*
                (-1836*s13^4 + 1707*s13^3*s23 + 5158*s13^2*s23^2 - 
                 11198*s13*s23^3 - 2056*s23^4) - 6*s12^4*(234*s13^4 + 
                 2201*s13^3*s23 - 2238*s13^2*s23^2 - 2615*s13*s23^3 + 
                 1017*s23^4) - s12^3*s23*(4476*s13^4 + 1003*s13^3*s23 - 
                 13834*s13^2*s23^2 + 7504*s13*s23^3 + 6292*s23^4)) + 
             p2q^2*p3q*(s12^7*(-720*s13 + 1302*s23) + s12^6*(108*s13^2 + 
                 11814*s13*s23 + 4985*s23^2) + 180*s13^2*s23^3*(10*s13^3 - 
                 32*s13^2*s23 - 33*s13*s23^2 + 9*s23^3) + s12^5*(1782*s13^3 + 
                 23823*s13^2*s23 + 33210*s13*s23^2 + 5378*s23^3) + 30*s12*s13*
                s23^2*(117*s13^4 - 65*s13^3*s23 - 271*s13^2*s23^2 + 
                 170*s13*s23^3 - 63*s23^4) + s12^4*(1656*s13^4 + 8907*s13^3*
                  s23 + 67083*s13^2*s23^2 + 20252*s13*s23^3 + 2637*s23^4) + 
               s12^2*s23*(2304*s13^5 - 1062*s13^4*s23 + 5811*s13^3*s23^2 + 
                 29903*s13^2*s23^3 - 6916*s13*s23^4 - 640*s23^5) + s12^3*
                (702*s13^5 - 804*s13^4*s23 + 24206*s13^3*s23^2 + 60459*s13^2*
                  s23^3 - 3182*s13*s23^4 + 302*s23^5)) + 
             p2q^3*(180*s13^3*s23^3*(25*s13^2 + 2*s13*s23 - 23*s23^2) + 6*
                s12^6*(60*s13^2 + 433*s13*s23 + 60*s23^2) + 60*s12*s13^2*
                s23^2*(108*s13^3 + 135*s13^2*s23 - 45*s13*s23^2 + 61*s23^3) + 
               s12^5*(126*s13^3 + 15771*s13^2*s23 + 8573*s13*s23^2 + 
                 720*s23^3) + 6*s12^2*s13*s23*(522*s13^4 + 936*s13^3*s23 + 
                 1332*s13^2*s23^2 + 4179*s13*s23^3 + 380*s23^4) + s12^4*
                (468*s13^4 + 8565*s13^3*s23 + 49004*s13^2*s23^2 + 
                 8203*s13*s23^3 + 684*s23^4) + s12^3*(702*s13^5 - 
                 180*s13^4*s23 + 21855*s13^3*s23^2 + 51117*s13^2*s23^3 + 
                 4832*s13*s23^4 + 324*s23^5))) + 
           p1q*(-(p2q^5*s13^2*(72*s12^6*(36*s13 + 5*s23) + 30*s13^3*s23^2*
                 (75*s13^2 + 2*s13*s23 - 73*s23^2) + 3*s12^5*(1728*s13^2 + 
                  4039*s13*s23 + 264*s23^2) + 10*s12*s13^2*s23*(90*s13^3 + 
                  324*s13^2*s23 - 165*s13*s23^2 + 34*s23^3) + s12^3*s23*
                 (14265*s13^3 + 26636*s13^2*s23 + 6080*s13*s23^2 + 
                  972*s23^3) + s12^4*(2592*s13^3 + 26082*s13^2*s23 + 
                  12985*s13*s23^2 + 1404*s23^3) + s12^2*s13*s23*(840*s13^3 + 
                  8953*s13^2*s23 + 11804*s13*s23^2 + 1720*s23^3))) + 
             p3q^5*s12^2*s23*(-33*s12^6 - 4*s12^5*(621*s13 - 781*s23) + 150*
                s13^2*s23^3*(s13 + s23) + 26*s12*s13*s23^2*(21*s13^2 + 
                 33*s13*s23 + 2*s23^2) + s12^4*(-3573*s13^2 + 5684*s13*s23 + 
                 5799*s23^2) + s12^2*s23*(1542*s13^3 + 6763*s13^2*s23 + 
                 5214*s13*s23^2 - 224*s23^3) + s12^3*(-1122*s13^3 + 
                 5398*s13^2*s23 + 13006*s13*s23^2 + 2418*s23^3)) + 
             p2q*p3q^4*s12*(420*s13^3*s23^4*(s13 + s23) + s12^7*(-2592*s13 + 
                 870*s23) + 2*s12*s13^2*s23^3*(873*s13^2 + 54*s13*s23 - 
                 919*s23^2) + s12^6*(-5184*s13^2 + 3177*s13*s23 + 
                 6392*s23^2) + 2*s12^2*s13*s23^2*(1329*s13^3 + 35*s13^2*s23 - 
                 3491*s13*s23^2 + 141*s23^3) + s12^4*s23*(9861*s13^3 + 
                 18674*s13^2*s23 + 22320*s13*s23^2 + 5088*s23^3) + s12^5*
                (-2592*s13^3 + 8604*s13^2*s23 + 22015*s13*s23^2 + 
                 9906*s23^3) + s12^3*s23*(3564*s13^4 + 7005*s13^3*s23 - 
                 764*s13^2*s23^2 + 7328*s13*s23^3 + 704*s23^4)) + 
             p2q^4*p3q*s13*(144*s12^7*(36*s13 + 5*s23) + 9*s12^6*
                (576*s13^2 + 1601*s13*s23 + 232*s23^2) - 6*s12^5*
                (864*s13^3 - 2423*s13^2*s23 - 2665*s13*s23^2 - 456*s23^3) - 
               30*s13^3*s23^2*(60*s13^3 - 131*s13^2*s23 - 133*s13*s23^2 + 
                 58*s23^3) - 10*s12*s13^2*s23*(90*s13^4 - 333*s13^3*s23 - 
                 708*s13^2*s23^2 + 566*s13*s23^3 - 43*s23^4) + 2*s12^3*s23*
                (-9558*s13^4 - 8387*s13^3*s23 + 14990*s13^2*s23^2 + 
                 3091*s13*s23^3 + 324*s23^4) + s12^2*s13*s23*(2280*s13^4 - 
                 2234*s13^3*s23 - 10839*s13^2*s23^2 + 8988*s13*s23^3 + 
                 1360*s23^4) + s12^4*(-5184*s13^4 - 21447*s13^3*s23 + 
                 29116*s13^2*s23^2 + 11659*s13*s23^3 + 2016*s23^4)) + 
             p2q^2*p3q^3*(-1290*s13^4*s23^4*(s13 + s23) + s12^8*(-5184*s13 + 
                 543*s23) - 10*s12*s13^3*s23^3*(387*s13^2 + 297*s13*s23 - 
                 208*s23^2) + s12^7*(-5184*s13^2 + 2106*s13*s23 + 
                 3916*s23^2) + s12^2*s13^2*s23^2*(-5694*s13^3 + 1033*s13^2*
                  s23 + 9728*s13*s23^2 - 3000*s23^3) + s12^6*(5184*s13^3 + 
                 5976*s13^2*s23 + 24548*s13*s23^2 + 6807*s23^3) - 2*s12^3*s13*
                s23*(2331*s13^4 - 1773*s13^3*s23 - 12095*s13^2*s23^2 + 
                 3999*s13*s23^3 + 21*s23^4) + s12^4*s23*(1845*s13^4 + 
                 20766*s13^3*s23 - 528*s13^2*s23^2 + 8068*s13*s23^3 + 
                 1576*s23^4) + 2*s12^5*(2592*s13^4 + 5460*s13^3*s23 + 
                 7007*s13^2*s23^2 + 12198*s13*s23^3 + 2505*s23^4)) + 
             p2q^3*p3q^2*(81*s12^7*s13*(64*s13 - 35*s23) - 72*s12^8*
                (36*s13 + 5*s23) + 30*s13^4*s23^3*(103*s13^2 + 2*s13*s23 - 
                 101*s23^2) + 9*s12^6*(1728*s13^3 + 952*s13^2*s23 + 
                 671*s13*s23^2 + 156*s23^3) + 10*s12*s13^3*s23^2*
                (459*s13^3 - 150*s13^2*s23 - 979*s13*s23^2 + 209*s23^3) + 
               s12^2*s13^2*s23*(3120*s13^4 - 4069*s13^3*s23 - 6876*s13^2*
                  s23^2 + 17994*s13*s23^3 + 348*s23^4) + s12^3*s13*s23*
                (-9513*s13^4 + 526*s13^3*s23 + 47406*s13^2*s23^2 + 
                 2820*s13*s23^3 + 376*s23^4) + 2*s12^5*(2592*s13^4 + 
                 13296*s13^3*s23 + 3378*s13^2*s23^2 + 5291*s13*s23^3 + 
                 846*s23^4) + s12^4*(-2592*s13^5 + 2916*s13^4*s23 + 
                 43598*s13^3*s23^2 + 5770*s13^2*s23^3 + 5000*s13*s23^4 + 
                 648*s23^5))) + p1q^2*s23*(-(p3q^4*s12*(33*s12^7 + 
                5*s12^6*(756*s13 - 299*s23) - 510*s13^2*s23^4*(s13 + s23) - 
                2*s12*s13*s23^3*(231*s13^2 + 168*s13*s23 - 208*s23^2) + 
                s12^5*(4869*s13^2 - 6605*s13*s23 + 4653*s23^2) + 
                2*s12^2*s23^2*(216*s13^3 + 2701*s13^2*s23 + 4111*s13*s23^2 + 
                  366*s23^3) + s12^3*s23*(-3678*s13^3 - 2597*s13^2*s23 + 
                  13479*s13*s23^2 + 7910*s23^3) + s12^4*(1122*s13^3 - 
                  11380*s13^2*s23 - 3416*s13*s23^2 + 13359*s23^3))) + 
             p2q*p3q^3*(942*s12^8 + 1230*s13^3*s23^4*(s13 + s23) + s12^7*
                (10542*s13 + 2777*s23) + s12^6*(23922*s13^2 + 26750*s13*s23 - 
                 5930*s23^2) + 10*s12*s13^2*s23^3*(87*s13^2 + 207*s13*s23 + 
                 19*s23^2) + s12^5*(18690*s13^3 + 41959*s13^2*s23 + 
                 8093*s13*s23^2 - 15339*s23^3) + 2*s12^2*s13*s23^2*
                (657*s13^3 - 1663*s13^2*s23 - 3858*s13*s23^2 - 377*s23^3) + 
               s12^4*(4368*s13^4 + 22372*s13^3*s23 + 3653*s13^2*s23^2 - 
                 14681*s13*s23^3 - 9730*s23^4) - 2*s12^3*s23*(-2841*s13^4 - 
                 1736*s13^3*s23 + 7902*s13^2*s23^2 + 5280*s13*s23^3 + 
                 1078*s23^4)) + p2q^4*s13*(s12^6*(4863*s13 + 720*s23) + 60*
                s13^3*s23^2*(75*s13^2 + 4*s13*s23 - 71*s23^2) + 2*s12^5*
                (7128*s13^2 + 8477*s13*s23 + 738*s23^2) + 10*s12*s13^2*s23*
                (387*s13^3 + 699*s13^2*s23 - 300*s13*s23^2 + 220*s23^3) + 
               s12^4*(8271*s13^3 + 50759*s13^2*s23 + 16199*s13*s23^2 + 
                 1728*s23^3) + s12^3*(-294*s13^4 + 27589*s13^3*s23 + 
                 51471*s13^2*s23^2 + 8044*s13*s23^3 + 972*s23^4) + 2*s12^2*
                s13*(414*s13^4 + 1707*s13^3*s23 + 6659*s13^2*s23^2 + 
                 12123*s13*s23^3 + 1500*s23^4)) + p2q^3*p3q*
              (30*s12^7*(151*s13 + 24*s23) + 2*s12^6*(5007*s13^2 + 
                 6542*s13*s23 + 540*s23^2) + 60*s13^3*s23^2*(45*s13^3 - 
                 113*s13^2*s23 - 116*s13*s23^2 + 42*s23^3) + s12^5*
                (19854*s13^3 + 23287*s13^2*s23 + 8322*s13*s23^2 + 
                 324*s23^3) + 2*s12^4*(5883*s13^4 + 32521*s13^3*s23 - 
                 2723*s13^2*s23^2 - 571*s13*s23^3 - 180*s23^4) + 10*s12*s13^2*
                s23*(297*s13^4 - 339*s13^3*s23 - 1107*s13^2*s23^2 + 
                 712*s13*s23^3 - 177*s23^4) + s12^2*s13*(828*s13^5 - 
                 3984*s13^4*s23 + 4765*s13^3*s23^2 + 25249*s13^2*s23^3 - 
                 13688*s13*s23^4 - 1640*s23^5) - s12^3*(1776*s13^5 - 
                 30317*s13^4*s23 - 52455*s13^3*s23^2 + 25413*s13^2*s23^3 + 
                 3198*s13*s23^4 + 324*s23^5)) + p2q^2*p3q^2*(975*s12^8 + 2*
                s12^7*(8130*s13 + 1649*s23) - 30*s13^3*s23^3*(129*s13^2 + 
                 4*s13*s23 - 125*s23^2) + s12^6*(23574*s13^2 + 31969*s13*
                  s23 + 595*s23^2) + 3*s12^5*(3286*s13^3 + 9292*s13^2*s23 + 
                 1879*s13*s23^2 - 1320*s23^3) - 10*s12*s13^2*s23^2*
                (453*s13^3 + 243*s13^2*s23 - 675*s13*s23^2 + 209*s23^3) + 
               s12^2*s13*s23*(-4338*s13^4 + 4209*s13^3*s23 + 6377*s13^2*
                  s23^2 - 21986*s13*s23^3 - 1978*s23^4) - s12^4*(2505*s13^4 - 
                 22969*s13^3*s23 + 29589*s13^2*s23^2 + 17752*s13*s23^3 + 
                 3980*s23^4) - s12^3*(4074*s13^5 - 7762*s13^4*s23 - 
                 9964*s13^3*s23^2 + 47693*s13^2*s23^3 + 12250*s13*s23^4 + 
                 1748*s23^5))))/(288*p1q*(p2q + p3q)*s12^3*s23*
           (p1q^4*s23^3*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p2q*s13 - p3q*(s12 + s23)) - 
            p1q^3*s23^2*(p3q*(3*s12 + s13 - s23)*(s12 + s23) + 
              p2q*(s12^2 + 4*s13*s23 + s12*(3*s13 + s23))) + 
            p1q^2*s23*(p3q^2*(s12 + s23)*(3*s12^2 + 2*s12*s13 - 3*s12*s23 - 
                s13*s23) + p2q^2*s13*(2*s12^2 + 6*s13*s23 + 3*s12*
                 (s13 + s23)) + p2q*p3q*(2*s12^3 + 3*s13*(s13 - s23)*s23 + 
                s12^2*(2*s13 + s23) + s12*(2*s13^2 + 2*s13*s23 - s23^2))) + 
            p1q*(-(p3q^3*s12*(s12 + s23)*(s12^2 + s12*(s13 - 3*s23) - 
                 2*s13*s23)) - p2q^3*s13^2*(s12^2 + 4*s13*s23 + 
                s12*(s13 + 3*s23)) + p2q*p3q^2*(-s12^4 + 2*s13^2*s23^2 + 
                s12^3*(s13 + s23) + 2*s12*s13*s23*(s13 + s23) + 
                2*s12^2*(s13^2 + s23^2)) + p2q^2*p3q*s13*(2*s12^3 + 
                3*s13*s23*(-s13 + s23) + s12^2*(s13 + 2*s23) + 
                s12*(-s13^2 + 2*s13*s23 + 2*s23^2))))) + 
         ((-18*p1q^2*s12*(5*s13*s23*(s13 + s23) + s12^2*(33*s13 + 28*s23) + 
              s12*(33*s13^2 + 66*s13*s23 + 28*s23^2)) - 18*(s12 + s13 + s23)*
             (p3q^2*s12*(33*s12*s13 + 28*s12*s23 + 5*s13*s23) + 
              p2q^2*s13*(5*s12^2 + 15*s13*(s13 - s23) + s12*(-13*s13 + 
                  28*s23)) + p2q*p3q*(28*s12^3 - 15*s13^2*s23 + 3*s12*s13*
                 (-5*s13 + 11*s23) + s12^2*(79*s13 + 28*s23))) + 
            p1q*(p3q*(177*s12^4 - 250*s13*s23^2*(s13 + s23) + 
                s12^3*(-123*s13 + 831*s23) + 2*s12*s23*(5*s13^2 + 
                  157*s13*s23 + 332*s23^2) + s12^2*(-300*s13^2 + 1075*s13*
                   s23 + 1318*s23^2)) + p2q*(-327*s12^4 + s12^3*(-861*s13 + 
                  831*s23) + 10*s13*s23*(27*s13^2 + 2*s13*s23 - 25*s23^2) + 
                s12^2*(-264*s13^2 + 931*s13*s23 + 1822*s23^2) + 
                2*s12*(135*s13^3 + 68*s13^2*s23 - 50*s13*s23^2 + 
                  332*s23^3))))*den[-1 + 2*ep])/(288*p1q*(p2q + p3q)*s12^3))*
        p1 . E0conj*p2 . E0 + (-1/72*(ep^2*(s12 + s13)^2*(s12 + 10*s13))/
           s12^2 + (ep*(-18*p1q^5*(4*s12^2 + 9*s12*s13 + 5*s13^2)*s23^3*
             (s12 + s23)*(s12 + s13 + s23) + 18*(p2q + p3q)*
             (-(p3q*s12) + p2q*s13)^3*(4*s12^2 + s12*s13 - 5*s13^2)*
             (s12 + s13 + s23)*(-(p2q*s13) + p3q*(s12 + s23)) + 
            p1q^4*s23^2*(p3q*(s12 + s23)*(213*s12^4 - 20*s13^2*s23*
                 (s13 + s23) + 2*s12^3*(99*s13 + 269*s23) + s12^2*
                 (45*s13^2 + 200*s13*s23 - 164*s23^2) + 10*s12*s13*
                 (6*s13^2 - 7*s13*s23 - 14*s23^2)) + p2q*(-3*s12^5 + 
                s12^4*(-288*s13 + 391*s23) + 10*s13^2*s23*(36*s13^2 + 
                  43*s13*s23 + 7*s23^2) + s12^3*(-9*s13^2 - 52*s13*s23 + 
                  302*s23^2) + s12^2*(546*s13^3 + 623*s13^2*s23 + 
                  258*s13*s23^2 - 92*s23^3) + 2*s12*s13*(135*s13^3 + 
                  569*s13^2*s23 + 315*s13*s23^2 + 11*s23^3))) + 
            p1q*(-(p3q*s12) + p2q*s13)*(p3q^3*s12*(s12 + s23)*(327*s12^4 + 
                s12^3*(684*s13 - 214*s23) + 110*s13^2*s23*(s13 + s23) + 
                s12^2*(387*s13^2 - 272*s13*s23 - 52*s23^2) + 2*s12*s13*
                 (15*s13^2 + 26*s13*s23 - 29*s23^2)) + p2q^3*s13^2*(
                399*s12^4 + s12^3*(846*s13 + 218*s23) - 4*s12*s13*
                 (33*s13^2 + 95*s13*s23 - 8*s23^2) - 10*s13^2*(9*s13^2 + 
                  43*s13*s23 + 34*s23^2) + s12^2*(405*s13^2 + 268*s13*s23 + 
                  308*s23^2)) + p2q^2*p3q*s13*(-798*s12^5 - 5*s12^4*
                 (273*s13 + 95*s23) + 250*s13^2*s23*(-s13^2 + s23^2) - 
                6*s12^3*(21*s13^2 + 131*s13*s23 + 67*s23^2) + 
                s12^2*(651*s13^3 + 173*s13^2*s23 + 156*s13*s23^2 - 
                  236*s23^3) + 2*s12*s13*(105*s13^3 + 117*s13^2*s23 + 
                  285*s13*s23^2 - 7*s23^3)) + p2q*p3q^2*(399*s12^6 + 
                250*s13^3*s23^2*(s13 + s23) + s12^5*(192*s13 + 257*s23) + 
                s12^4*(-963*s13^2 + 405*s13*s23 - 194*s23^2) + 2*s12*s13^2*
                 s23*(55*s13^2 + 243*s13*s23 + 48*s23^2) - s12^3*(906*s13^3 + 
                  205*s13^2*s23 + 570*s13*s23^2 + 52*s23^3) - s12^2*s13*
                 (150*s13^3 + 243*s13^2*s23 - 28*s13*s23^2 + 294*s23^3))) + 
            p1q^3*s23*(-(p2q^2*s13*(-330*s12^5 + s12^4*(-1116*s13 + 59*s23) - 
                 2*s12^3*(360*s13^2 + 691*s13*s23 - 265*s23^2) + 60*s13^2*s23*
                  (9*s13^2 + 14*s13*s23 + 5*s23^2) + s12^2*(336*s13^3 - 
                   347*s13^2*s23 + 212*s13*s23^2 - 348*s23^3) + 2*s12*s13*
                  (135*s13^3 + 691*s13^2*s23 + 505*s13*s23^2 + 24*s23^3))) + 
              p3q^2*(114*s12^6 + 70*s13^2*s23^3*(s13 + s23) - 
                s12^5*(18*s13 + 749*s23) + s12^4*(18*s13^2 - 940*s13*s23 - 
                  465*s23^2) + 2*s12*s13*s23^2*(40*s13^2 + 101*s13*s23 + 
                  11*s23^2) + s12^2*s23*(160*s13^3 + 155*s13^2*s23 + 
                  394*s13*s23^2 - 92*s23^3) + s12^3*(150*s13^3 + 365*s13^2*
                   s23 - 550*s13*s23^2 + 306*s23^3)) + p2q*p3q*(330*s12^6 + 
                s12^5*(870*s13 - 533*s23) + 3*s12^4*(546*s13^2 - 267*s13*
                   s23 - 227*s23^2) + 10*s13^2*s23^2*(-3*s13^2 + 4*s13*s23 + 
                  7*s23^2) + 2*s12*s13*s23*(110*s13^3 + 174*s13^2*s23 + 
                  185*s13*s23^2 + 11*s23^3) + s12^3*(1338*s13^3 + 1873*s13^2*
                   s23 - 1710*s13*s23^2 + 90*s23^3) + s12^2*(240*s13^4 + 
                  1713*s13^3*s23 - 3*s13^2*s23^2 + 472*s13*s23^3 - 
                  92*s23^4))) - p1q^2*(p3q^3*s12*(255*s12^6 + 
                s12^5*(594*s13 - 469*s23) + 50*s13^2*s23^3*(s13 + s23) + 
                s12^4*(459*s13^2 - 326*s13*s23 - 348*s23^2) + 2*s12*s13*s23^2*
                 (5*s13^2 + 91*s13*s23 + 31*s23^2) + 4*s12^2*s23*(20*s13^3 - 
                  98*s13^2*s23 + 119*s13*s23^2 - 28*s23^3) + 
                s12^3*(120*s13^3 + 259*s13^2*s23 - 506*s13*s23^2 + 
                  264*s23^3)) + p2q^3*s13^2*(327*s12^5 + s12^4*(756*s13 + 
                  731*s23) + s12^3*(477*s13^2 + 2032*s13*s23 - 82*s23^2) - 
                120*s13^2*s23*(3*s13^2 + 7*s13*s23 + 4*s23^2) - 2*s12*s13*
                 (45*s13^3 + 359*s13^2*s23 + 425*s13*s23^2 + 6*s23^3) + 
                s12^2*(-42*s13^3 + 979*s13^2*s23 + 152*s13*s23^2 + 
                  492*s23^3)) + p2q^2*p3q*s13*(-654*s12^6 - s12^5*
                 (1257*s13 + 190*s23) + 10*s13^2*s23^2*(-21*s13^2 + 
                  2*s13*s23 + 23*s23^2) - s12^4*(360*s13^2 + 813*s13*s23 + 
                  518*s23^2) + s12^3*(543*s13^3 + 1100*s13^2*s23 - 
                  1942*s13*s23^2 - 260*s23^3) + 2*s12*s13*s23*(280*s13^3 + 
                  317*s13^2*s23 + 345*s13*s23^2 + 13*s23^3) + 
                s12^2*(300*s13^4 + 2391*s13^3*s23 + 152*s13^2*s23^2 + 
                  522*s13*s23^3 - 256*s23^4)) + p2q*p3q^2*(327*s12^7 + 
                s12^6*(246*s13 - 541*s23) + 230*s13^3*s23^3*(s13 + s23) + 
                2*s12*s13^2*s23^2*(40*s13^2 + 223*s13*s23 + 38*s23^2) - 
                3*s12^5*(237*s13^2 + 250*s13*s23 + 236*s23^2) - 
                s12^4*(960*s13^3 + 1753*s13^2*s23 + 1906*s13*s23^2 - 
                  48*s23^3) - 2*s12^2*s13*s23*(140*s13^3 + 535*s13^2*s23 - 
                  25*s13*s23^2 + 97*s23^3) - 2*s12^3*(165*s13^4 + 966*s13^3*
                   s23 + 1540*s13^2*s23^2 + 63*s13*s23^3 + 56*s23^4)))))/
          (144*p1q*(p2q + p3q)*s12^3*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))) - (18*p1q^6*(28*s12^2 + 5*s12*s13 - 25*s13^2)*s23^5*
            (s12 + s23)*(s12 + s13 + s23) + 18*(p2q + p3q)^2*
            (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
            (-(p2q^2*s13^2*(144*s12^4 + 93*s12^2*s13*s23 + 10*s12*s13^2*s23 + 
                25*s13^3*s23 + 36*s12^3*(4*s13 + s23))) + p2q*p3q*s13*
              (144*s12^5 + 72*s12^4*s23 + 25*s13^3*s23^2 + 10*s12*s13^2*s23*
                (5*s13 + s23) + s12^2*s13*s23*(20*s13 + 93*s23) - 6*s12^3*
                (24*s13^2 - 31*s13*s23 - 6*s23^2)) + p3q^2*s12*
              (s12^2*s13*(62*s13 - 21*s23)*s23 - 25*s13^3*s23^2 + 36*s12^4*
                (4*s13 + s23) - 5*s12*s13^2*s23*(5*s13 + 2*s23) + 3*s12^3*
                (48*s13^2 + 17*s13*s23 + 12*s23^2))) + p1q^5*s23^4*
            (p2q*(471*s12^5 + 9*s12^4*(130*s13 + 209*s23) + 30*s13^2*s23*
                (75*s13^2 + 88*s13*s23 + 13*s23^2) + s12^3*(639*s13^2 + 
                 1444*s13*s23 + 3170*s23^2) + 10*s12*s13*(180*s13^3 + 
                 429*s13^2*s23 - 23*s13*s23^2 - 75*s23^3) + s12^2*
                (1740*s13^3 - 485*s13^2*s23 - 476*s13*s23^2 + 1760*s23^3)) + 
             p3q*(-1185*s12^5 - 9*s12^4*(292*s13 + 103*s23) + 30*s13^2*s23*
                (15*s13^2 + 13*s13*s23 - 2*s23^2) + s12^3*(-603*s13^2 - 
                 2102*s13*s23 + 2522*s23^2) + 10*s12*s13*(45*s13^3 + 
                 168*s13^2*s23 - 5*s13*s23^2 - 66*s23^3) + s12^2*
                (1290*s13^3 + 703*s13^2*s23 - 134*s13*s23^2 + 2264*s23^3))) - 
           p1q^4*s23^3*(p2q^2*(-321*s12^6 + 9*s12^5*(649*s13 - 111*s23) + 
               s12^4*(11133*s13^2 + 16018*s13*s23 - 214*s23^2) + 30*s13^3*s23*
                (150*s13^2 + 217*s13*s23 + 67*s23^2) + 10*s12*s13^2*
                (270*s13^3 + 912*s13^2*s23 + 61*s13*s23^2 - 288*s23^3) + 
               s12^3*(5331*s13^3 + 18715*s13^2*s23 + 17590*s13*s23^2 + 
                 464*s23^3) + 2*s12^2*s13*(1530*s13^3 + 2745*s13^2*s23 + 
                 2530*s13*s23^2 + 4117*s23^3)) + p3q^2*(117*s12^6 + 3*s12^5*
                (349*s13 + 1844*s23) - 30*s13^2*s23^2*(2*s13^2 + 15*s13*s23 + 
                 13*s23^2) + s12^4*(-1125*s13^2 + 9291*s13*s23 + 
                 12237*s23^2) + 10*s12*s13*s23*(42*s13^3 - 101*s13^2*s23 - 
                 79*s13*s23^2 + 75*s23^3) + s12^3*(-1575*s13^3 + 448*s13^2*
                  s23 + 8092*s13*s23^2 + 5062*s23^3) + s12^2*(480*s13^4 + 
                 457*s13^3*s23 - 2067*s13^2*s23^2 + 598*s13*s23^3 - 
                 1760*s23^4)) + p2q*p3q*(1596*s12^6 + 3*s12^5*(5242*s13 + 
                 2159*s23) + s12^4*(12996*s13^2 + 34435*s13*s23 + 
                 10511*s23^2) + 30*s13^2*s23*(60*s13^3 + 80*s13^2*s23 + 
                 7*s13*s23^2 - 13*s23^3) + s12^3*(-564*s13^3 + 14357*s13^2*
                  s23 + 25124*s13*s23^2 + 3870*s23^3) + s12^2*(1920*s13^4 + 
                 2257*s13^3*s23 + 347*s13^2*s23^2 + 7986*s13*s23^3 - 
                 1760*s23^4) + 10*s12*s13*(135*s13^4 + 477*s13^3*s23 - 
                 157*s13^2*s23^2 - 277*s13*s23^3 + 75*s23^4))) + 
           p1q*(p2q + p3q)*(p2q^4*s13^3*(2592*s12^6 + 3*s12^5*(1728*s13 + 
                 3349*s23) + 10*s12*s13^2*s23*(111*s13^2 + 265*s13*s23 - 
                 9*s23^2) + 30*s13^3*s23*(15*s13^2 + 88*s13*s23 + 73*s23^2) + 
               s12^3*s23*(16911*s13^2 + 23302*s13*s23 + 2408*s23^2) + 3*s12^4*
                (864*s13^2 + 8239*s13*s23 + 3014*s23^2) + s12^2*s13*s23*
                (2901*s13^2 + 9086*s13*s23 + 7976*s23^2)) + 
             p3q^4*s12^2*(3*s12^6*(864*s13 - 109*s23) + 510*s13^3*s23^3*
                (s13 + s23) + s12^5*(5184*s13^2 - 6195*s13*s23 - 
                 3537*s23^2) + 10*s12*s13^2*s23^2*(48*s13^2 + 227*s13*s23 + 
                 117*s23^2) + s12^4*(2592*s13^3 - 8847*s13^2*s23 - 
                 18427*s13*s23^2 - 6914*s23^3) - s12^2*s13*s23*(30*s13^3 + 
                 1249*s13^2*s23 + 122*s13*s23^2 + 524*s23^3) - s12^3*s23*
                (3009*s13^3 + 11435*s13^2*s23 + 10164*s13*s23^2 + 
                 3704*s23^3)) - p2q^3*p3q*s13^2*(5184*s12^7 + 9*s12^6*
                (576*s13 + 1045*s23) + 30*s13^3*s23^2*(-43*s13^2 + 
                 15*s13*s23 + 58*s23^2) + s12^5*(-5184*s13^2 + 14208*s13*
                  s23 + 4125*s23^2) + 10*s12*s13^2*s23*(132*s13^3 + 
                 539*s13^2*s23 + 661*s13*s23^2 - 27*s23^3) + s12^3*s23*
                (-13104*s13^3 - 5791*s13^2*s23 + 21818*s13*s23^2 + 
                 1760*s23^3) + s12^4*(-5184*s13^3 - 9894*s13^2*s23 + 
                 23427*s13*s23^2 + 3306*s23^3) + s12^2*s13*s23*(2913*s13^3 + 
                 2323*s13^2*s23 - 240*s13*s23^2 + 6302*s23^3)) + 
             p2q^2*p3q^2*s13*(2592*s12^8 - 1290*s13^4*s23^3*(s13 + s23) - 9*
                s12^7*(576*s13 + 107*s23) - 10*s12*s13^3*s23^2*(210*s13^2 + 
                 115*s13*s23 - 213*s23^2) - 6*s12^6*(2592*s13^2 + 
                 765*s13*s23 + 1634*s23^2) + s12^2*s13^2*s23*(1260*s13^3 + 
                 4203*s13^2*s23 + 1776*s13*s23^2 - 5888*s23^3) + s12^3*s13*
                s23*(9855*s13^3 + 2109*s13^2*s23 - 20598*s13*s23^2 - 
                 388*s23^3) - 3*s12^5*(1728*s13^3 + 4836*s13^2*s23 - 
                 1073*s13*s23^2 + 2364*s23^3) + s12^4*(2592*s13^4 - 
                 2286*s13^3*s23 - 22275*s13^2*s23^2 - 1678*s13*s23^3 - 
                 1664*s23^4)) + p2q*p3q^3*s12*(780*s13^4*s23^3*(s13 + s23) + 
               s12^7*(5184*s13 + 321*s23) + 10*s12*s13^3*s23^2*(33*s13^2 - 
                 67*s13*s23 - 156*s23^2) + 3*s12^6*(1728*s13^2 - 
                 1864*s13*s23 - 99*s23^2) - 2*s12^2*s13^2*s23*(180*s13^3 + 
                 2694*s13^2*s23 + 3801*s13*s23^2 - 479*s23^3) - s12^3*s13*s23*
                (5043*s13^3 + 11737*s13^2*s23 + 492*s13*s23^2 - 26*s23^3) - 
               s12^5*(5184*s13^3 + 6102*s13^2*s23 + 20293*s13*s23^2 + 
                 2378*s23^3) - s12^4*(5184*s13^4 + 4872*s13^3*s23 + 
                 5279*s13^2*s23^2 + 8670*s13*s23^3 + 1760*s23^4))) - 
           p1q^2*s23*(p2q^4*s13^2*(4215*s12^6 + 3*s12^5*(4873*s13 + 
                 3557*s23) + 30*s13^3*s23*(75*s13^2 + 217*s13*s23 + 
                 142*s23^2) + s12^4*(12465*s13^2 + 46138*s13*s23 + 
                 8150*s23^2) + 10*s12*s13^2*(45*s13^3 + 519*s13^2*s23 + 
                 421*s13*s23^2 - 210*s23^3) + s12^3*(2271*s13^3 + 
                 38849*s13^2*s23 + 43112*s13*s23^2 + 3336*s23^3) + 2*s12^2*
                s13*(330*s13^3 + 5105*s13^2*s23 + 8555*s13*s23^2 + 
                 7822*s23^3)) + p3q^4*s12*(975*s12^7 - 330*s13^3*s23^3*
                (s13 + s23) + 3*s12^6*(3883*s13 + 1236*s23) + 10*s12*s13^2*
                s23^2*(-45*s13^2 + 85*s13*s23 + 141*s23^2) + s12^5*
                (17361*s13^2 + 14605*s13*s23 + 551*s23^2) + s12^4*
                (7563*s13^3 + 14882*s13^2*s23 - 6570*s13*s23^2 - 
                 9406*s23^3) + 2*s12^2*s13*s23*(1026*s13^3 + 1447*s13^2*s23 + 
                 1676*s13*s23^2 - 716*s23^3) + s12^3*(876*s13^4 + 
                 9925*s13^3*s23 + 2703*s13^2*s23^2 - 10958*s13*s23^3 - 
                 7224*s23^4)) + p2q^2*p3q^2*(327*s12^8 + 3*s12^7*
                (7461*s13 + 745*s23) + 30*s13^4*s23^2*(39*s13^2 - 
                 86*s13*s23 - 125*s23^2) + 8*s12^6*(4347*s13^2 + 
                 4151*s13*s23 + 547*s23^2) - 20*s12*s13^3*s23*(111*s13^3 + 
                 366*s13^2*s23 + 316*s13*s23^2 - 141*s23^3) + s12^5*
                (26844*s13^3 + 38443*s13^2*s23 + 2168*s13*s23^2 + 
                 892*s23^3) + s12^2*s13^2*(-1320*s13^4 - 3089*s13^3*s23 + 
                 671*s13^2*s23^2 + 2682*s13*s23^3 - 13636*s23^4) + s12^3*s13*
                (-2835*s13^4 + 37966*s13^3*s23 + 26690*s13^2*s23^2 - 
                 37352*s13*s23^3 - 9050*s23^4) + s12^4*(12609*s13^4 + 
                 69633*s13^3*s23 - 11895*s13^2*s23^2 - 13602*s13*s23^3 - 
                 1576*s23^4)) + p2q^3*p3q*s13*(5826*s12^7 + 18*s12^6*
                (752*s13 + 723*s23) + s12^5*(27258*s13^2 + 29407*s13*s23 + 
                 9494*s23^2) + 60*s13^3*s23*(30*s13^3 + 113*s13^2*s23 + 
                 41*s13*s23^2 - 42*s23^3) + s12^4*(20100*s13^3 + 88051*s13^2*
                  s23 + 10525*s13*s23^2 + 2372*s23^3) + s12^2*s13*
                (-660*s13^4 + 1067*s13^3*s23 + 10577*s13^2*s23^2 + 
                 17328*s13*s23^3 - 9342*s23^4) + s12^3*(-558*s13^4 + 
                 57983*s13^3*s23 + 63894*s13^2*s23^2 - 13704*s13*s23^3 - 
                 1576*s23^4) + 10*s12*s13^2*(45*s13^4 + 99*s13^3*s23 - 
                 533*s13^2*s23^2 - 864*s13*s23^3 + 183*s23^4)) + 
             p2q*p3q^3*(1302*s12^8 - 1230*s13^4*s23^3*(s13 + s23) + 3*s12^7*
                (9402*s13 + 1765*s23) - 10*s12*s13^3*s23^2*(84*s13^2 + 
                 119*s13*s23 - 66*s23^2) + s12^6*(42816*s13^2 + 30533*s13*
                  s23 + 3631*s23^2) + s12^5*(21768*s13^3 + 23825*s13^2*s23 - 
                 21132*s13*s23^2 - 9162*s23^3) + 2*s12^2*s13^2*s23*
                (480*s13^3 - 187*s13^2*s23 - 318*s13*s23^2 - 1442*s23^3) + 
               s12^4*(5850*s13^4 + 23839*s13^3*s23 - 25859*s13^2*s23^2 - 
                 29902*s13*s23^3 - 8800*s23^4) - 2*s12^3*s13*(3*s13^4 - 
                 5330*s13^3*s23 + 2259*s13^2*s23^2 + 10568*s13*s23^3 + 
                 4453*s23^4))) + p1q^3*s23^2*(p2q^3*s13*(1302*s12^6 + 3*s12^5*
                (4935*s13 + 739*s23) + 180*s13^3*s23*(25*s13^2 + 48*s13*s23 + 
                 23*s23^2) + 2*s12^4*(9666*s13^2 + 20371*s13*s23 + 
                 1067*s23^2) + 60*s12*s13^2*(30*s13^3 + 162*s13^2*s23 + 
                 49*s13*s23^2 - 66*s23^3) + s12^3*(6369*s13^3 + 40793*s13^2*
                  s23 + 39144*s13*s23^2 + 2040*s23^3) + 6*s12^2*s13*
                (390*s13^3 + 2100*s13^2*s23 + 2485*s13*s23^2 + 2636*s23^3)) + 
             p3q^3*(1773*s12^7 - 390*s13^3*s23^3*(s13 + s23) + 102*s12^6*
                (119*s13 + 93*s23) - 10*s12*s13^2*s23^2*(54*s13^2 + 
                 79*s13*s23 - 3*s23^2) + 3*s12^5*(3573*s13^2 + 9639*s13*s23 + 
                 4217*s23^2) + s12^4*(-1332*s13^3 + 13916*s13^2*s23 + 
                 15835*s13*s23^2 - 990*s23^3) - s12^2*s13*s23*(540*s13^3 + 
                 3107*s13^2*s23 + 406*s13*s23^2 - 220*s23^3) + s12^3*
                (-1686*s13^4 + 497*s13^3*s23 + 1465*s13^2*s23^2 - 
                 724*s13*s23^3 - 5928*s23^4)) + p2q^2*p3q*(6*s12^7 + 3*s12^6*
                (6412*s13 + 305*s23) + s12^5*(45717*s13^2 + 39701*s13*s23 + 
                 3811*s23^2) + 180*s13^3*s23*(15*s13^3 + 32*s13^2*s23 + 
                 8*s13*s23^2 - 9*s23^3) + s12^4*(27348*s13^3 + 93378*s13^2*
                  s23 + 25509*s13*s23^2 + 2438*s23^3) + s12^2*s13*
                (-30*s13^4 + 2633*s13^3*s23 + 5483*s13^2*s23^2 + 15608*s13*
                  s23^3 - 6474*s23^4) + s12^3*(-519*s13^4 + 51963*s13^3*s23 + 
                 62167*s13^2*s23^2 + 1854*s13*s23^3 - 464*s23^4) + 30*s12*
                s13^2*(45*s13^4 + 143*s13^3*s23 - 155*s13^2*s23^2 - 
                 204*s13*s23^3 + 71*s23^4)) + p2q*p3q^2*(2427*s12^7 + s12^6*
                (33690*s13 + 9897*s23) + 30*s13^3*s23^2*(9*s13^2 - 
                 58*s13*s23 - 67*s23^2) + s12^5*(48777*s13^2 + 62351*s13*
                  s23 + 13510*s23^2) - 10*s12*s13^2*s23*(48*s13^3 + 
                 381*s13^2*s23 + 268*s13*s23^2 - 216*s23^3) + 8*s12^4*
                (1668*s13^3 + 8094*s13^2*s23 + 3225*s13*s23^2 - 44*s23^3) + 
               s12^3*(-5010*s13^4 + 19551*s13^3*s23 + 21392*s13^2*s23^2 - 
                 6652*s13*s23^3 - 6392*s23^4) - s12^2*s13*(840*s13^4 + 
                 1219*s13^3*s23 + 4002*s13^2*s23^2 - 2140*s13*s23^3 + 
                 6254*s23^4))))/(288*p1q*(p2q + p3q)*s12^3*s23*
           (p1q^4*s23^3*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p2q*s13 - p3q*(s12 + s23)) - 
            p1q^3*s23^2*(p3q*(3*s12 + s13 - s23)*(s12 + s23) + 
              p2q*(s12^2 + 4*s13*s23 + s12*(3*s13 + s23))) + 
            p1q^2*s23*(p3q^2*(s12 + s23)*(3*s12^2 + 2*s12*s13 - 3*s12*s23 - 
                s13*s23) + p2q^2*s13*(2*s12^2 + 6*s13*s23 + 3*s12*
                 (s13 + s23)) + p2q*p3q*(2*s12^3 + 3*s13*(s13 - s23)*s23 + 
                s12^2*(2*s13 + s23) + s12*(2*s13^2 + 2*s13*s23 - s23^2))) + 
            p1q*(-(p3q^3*s12*(s12 + s23)*(s12^2 + s12*(s13 - 3*s23) - 
                 2*s13*s23)) - p2q^3*s13^2*(s12^2 + 4*s13*s23 + 
                s12*(s13 + 3*s23)) + p2q*p3q^2*(-s12^4 + 2*s13^2*s23^2 + 
                s12^3*(s13 + s23) + 2*s12*s13*s23*(s13 + s23) + 
                2*s12^2*(s13^2 + s23^2)) + p2q^2*p3q*s13*(2*s12^3 + 
                3*s13*s23*(-s13 + s23) + s12^2*(s13 + 2*s23) + 
                s12*(-s13^2 + 2*s13*s23 + 2*s23^2))))) + 
         ((18*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(28*s12^2 + 13*s12*s13 - 
              15*s13^2)*(s12 + s13 + s23) - 18*p1q^2*(28*s12^2 - 23*s12*s13 + 
              15*s13^2)*s23*(s12 + s13 + s23) + p1q*p2q*(-327*s12^4 - 
              6*s12^3*(198*s13 - 193*s23) + 2*s12*s13*(3*s13^2 - 
                269*s13*s23 - 317*s23^2) + 10*s13^2*(27*s13^2 + 52*s13*s23 + 
                25*s23^2) + s12^2*(-1125*s13^2 + 100*s13*s23 + 664*s23^2)) + 
            p1q*p3q*(177*s12^4 + 250*s13^2*s23*(s13 + s23) + 6*s12^3*(9*s13 + 
                277*s23) - 2*s12*s13*(150*s13^2 + 287*s13*s23 + 317*s23^2) + 
              s12^2*(-423*s13^2 + 838*s13*s23 + 664*s23^2)))*den[-1 + 2*ep])/
          (288*p1q*(p2q + p3q)*s12^3))*p2 . E0*p2 . E0conj + 
       p1 . E0*((-1/72*(ep^2*(s12 + 10*s13)*(s12 + s23)^2)/s12^2 + 
           (ep*(90*p1q^5*s12*s23^4*(s12 + s23)*(s12 + s13 + s23) + 
              18*(p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + 
                s23)*(-5*p3q^2*s12*s23*(s12 + s23) + p2q^2*s13*(s12 - s13 + 
                  s23)*(6*s12 + 5*s23) + p2q*p3q*(-5*s12^3 + 5*s12^2*
                   (s13 - 2*s23) + s12*(11*s13 - 5*s23)*s23 + 5*s13*s23^2)) + 
              p1q^4*s23^3*(p2q*(195*s12^4 + s12^3*(294*s13 - 34*s23) + 
                  10*s23^2*(-9*s13^2 - 2*s13*s23 + 7*s23^2) + 2*s12*s23*
                   (-234*s13^2 - 305*s13*s23 + 24*s23^2) - s12^2*(360*s13^2 + 
                    628*s13*s23 + 251*s23^2)) - p3q*(75*s12^4 - 70*s23^3*
                   (s13 + s23) + s12^3*(-294*s13 + 484*s23) + 2*s12*s23*
                   (45*s13^2 + 26*s13*s23 - 69*s23^2) + s12^2*(90*s13^2 + 
                    160*s13*s23 + 341*s23^2))) - p1q^3*s23^2*(
                p3q^2*(-9*s12^5 + 3*s12^4*(353*s13 - 340*s23) + 70*s13*s23^3*
                   (s13 + s23) + s12^3*(150*s13^2 - 352*s13*s23 - 
                    897*s23^2) + 2*s12*s23^2*(19*s13^2 + 129*s13*s23 + 
                    60*s23^2) + s12^2*s23*(110*s13^2 - 227*s13*s23 + 
                    234*s23^2)) + p2q^2*(285*s12^5 + s12^4*(1005*s13 + 
                    146*s23) + s12^3*(1098*s13^2 - 136*s13*s23 - 161*s23^2) - 
                  60*s13*s23^2*(6*s13^2 + s13*s23 - 5*s23^2) - s12^2*
                   (540*s13^3 + 912*s13^2*s23 + 697*s13*s23^2 - 48*s23^3) + 
                  2*s12*s23*(-486*s13^3 - 690*s13^2*s23 + 206*s13*s23^2 + 
                    35*s23^3)) + 2*p2q*p3q*(273*s12^5 + s12^4*(1077*s13 - 
                    302*s23) + s12^3*(669*s13^2 - 451*s13*s23 - 664*s23^2) + 
                  5*s13*s23^2*(-9*s13^2 + 28*s13*s23 + 37*s23^2) - 
                  s12^2*(135*s13^3 + 86*s13^2*s23 + 714*s13*s23^2 - 
                    6*s23^3) + s12*s23*(-189*s13^3 - 239*s13^2*s23 + 
                    335*s13*s23^2 + 95*s23^3))) + p1q^2*s23*(
                -(p3q^3*s12*(153*s12^5 - 50*s13*s23^3*(s13 + s23) + 
                   s12^4*(-876*s13 + 1308*s23) + 2*s12*s23^2*(7*s13^2 - 
                     18*s13*s23 + 30*s23^2) + 2*s12^2*s23*(-245*s13^2 + 
                     239*s13*s23 + 63*s23^2) + s12^3*(-570*s13^2 + 584*s13*
                      s23 + 1221*s23^2))) + p2q*p3q^2*(183*s12^6 + 
                  2*s12^5*(981*s13 - 922*s23) + 230*s13^2*s23^3*(s13 + s23) + 
                  s12^4*(1062*s13^2 - 1602*s13*s23 - 2587*s23^2) + 
                  2*s12*s13*s23^2*(47*s13^2 + 287*s13*s23 + 95*s23^2) + 
                  2*s12^3*(330*s13^3 - 75*s13^2*s23 - 974*s13*s23^2 - 
                    285*s23^3) + 2*s12^2*s23*(227*s13^3 - 202*s13^2*s23 + 
                    73*s13*s23^2 - 5*s23^3)) + p2q^3*s13*(246*s12^5 + 
                  s12^4*(1101*s13 + 76*s23) + 2*s12^3*(477*s13^2 - 
                    31*s13*s23 - 8*s23^2) - 60*s13*s23^2*(9*s13^2 + s13*s23 - 
                    8*s23^2) - s12^2*(360*s13^3 + 768*s13^2*s23 + 335*s13*
                     s23^2 - 384*s23^3) + 2*s12*s23*(-504*s13^3 - 690*s13^2*
                     s23 + 484*s13*s23^2 + 115*s23^3)) + p2q^2*p3q*
                 (246*s12^6 + 2*s12^5*(576*s13 - 223*s23) + s12^4*
                   (1593*s13^2 - 798*s13*s23 - 916*s23^2) + 10*s13^2*s23^2*
                   (-27*s13^2 + 44*s13*s23 + 71*s23^2) + 2*s12^3*(897*s13^3 - 
                    207*s13^2*s23 - 536*s13*s23^2 - 87*s23^3) + 2*s12*s13*s23*
                   (-297*s13^3 - 256*s13^2*s23 + 791*s13*s23^2 + 185*s23^3) + 
                  s12^2*(-270*s13^4 + 334*s13^3*s23 - 401*s13^2*s23^2 + 
                    584*s13*s23^3 + 50*s23^4))) + p1q*(p3q^4*s12^2*
                 (129*s12^5 + 110*s13*s23^3*(s13 + s23) + s12^4*(-201*s13 + 
                    592*s23) + 2*s12*s23^2*(71*s13^2 + 211*s13*s23 + 
                    100*s23^2) + s12^2*s23*(-290*s13^2 + 483*s13*s23 + 
                    402*s23^2) + s12^3*(-330*s13^2 + 302*s13*s23 + 
                    665*s23^2)) + p2q^4*s13^2*(39*s12^5 - s12^4*(291*s13 + 
                    38*s23) + 20*s13*s23^2*(18*s13^2 + s13*s23 - 17*s23^2) - 
                  s12^3*(240*s13^2 + 148*s13*s23 + 451*s23^2) + 
                  s12^2*(90*s13^3 + 412*s13^2*s23 - 417*s13*s23^2 - 
                    624*s23^3) + 2*s12*s23*(261*s13^3 + 305*s13^2*s23 - 
                    446*s13*s23^2 - 125*s23^3)) + 2*p2q*p3q^3*s12*
                 (84*s12^6 + 70*s13^2*s23^3*(s13 + s23) + s12^5*(-375*s13 + 
                    682*s23) - 5*s12*s13*s23^2*(5*s13^2 - 24*s13*s23 - 
                    9*s23^2) + s12^4*(-84*s13^2 + 61*s13*s23 + 935*s23^2) + 
                  s12^2*s23*(299*s13^3 - 62*s13^2*s23 + 263*s13*s23^2 + 
                    155*s23^3) + s12^3*(375*s13^3 - 322*s13^2*s23 + 
                    322*s13*s23^2 + 492*s23^3)) - 2*p2q^3*p3q*s13*
                 (39*s12^6 + s12^5*(-375*s13 + 358*s23) + 5*s13^2*s23^2*
                   (-27*s13^2 + 32*s13*s23 + 59*s23^2) + s12^4*(6*s13^2 + 
                    88*s13*s23 + 359*s23^2) + s12^3*(375*s13^3 + 209*s13^2*
                     s23 + 394*s13*s23^2 - 30*s23^3) + s12*s13*s23*
                   (-207*s13^3 + 101*s13^2*s23 + 813*s13*s23^2 + 45*s23^3) + 
                  s12^2*(-45*s13^4 + 272*s13^3*s23 + 739*s13^2*s23^2 + 
                    146*s13*s23^3 - 70*s23^4)) + p2q^2*p3q^2*(39*s12^7 - 
                  250*s13^3*s23^3*(s13 + s23) + s12^6*(-627*s13 + 682*s23) - 
                  2*s12*s13^2*s23^2*(217*s13^2 + 207*s13*s23 - 150*s23^2) + 
                  s12^5*(873*s13^2 - 1184*s13*s23 + 1025*s23^2) + s12^2*s13*
                   s23*(-650*s13^3 - 733*s13^2*s23 + 462*s13*s23^2 + 
                    120*s23^3) + s12^4*(1029*s13^3 - 708*s13^2*s23 - 
                    1025*s13*s23^2 + 492*s23^3) + s12^3*(-510*s13^4 + 
                    508*s13^3*s23 - 801*s13^2*s23^2 - 16*s13*s23^3 + 
                    110*s23^4)))))/(144*p1q*(p2q + p3q)*s12^3*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) + (-18*p2q^5*s13^3*(144*s12^5 + 96*s12^4*
                (3*s13 + 2*s23) + 25*s13*s23^2*(-s13^2 + s23^2) + 5*s12^2*s23*
                (8*s13^2 + 37*s13*s23 + 18*s23^2) + s12^3*(144*s13^2 + 
                 272*s13*s23 + 113*s23^2) + 5*s12*s23*(-8*s13^3 - 
                 5*s13^2*s23 + 18*s13*s23^2 + 5*s23^3)) + 
             s23*(p3q*s12 - p1q*s23)^2*(90*p3q^3*s12*(s12 + s13)*s23*
                (s12 + s23)*(s12 + s13 + s23) - 90*p1q^3*s12*s23^2*
                (s12 + s23)*(s12 + s13 + s23) + p1q*p3q^2*(813*s12^5 + 
                 390*s13*s23^3*(s13 + s23) + s12^4*(915*s13 + 1612*s23) + 
                 10*s12*s23^2*(115*s13^2 + 173*s13*s23 + 30*s23^2) + 
                 s12^2*s23*(846*s13^2 + 3547*s13*s23 + 1250*s23^2) + 
                 s12^3*(102*s13^2 + 2458*s13*s23 + 1749*s23^2)) - p1q^2*p3q*
                s23*(1371*s12^4 + 390*s23^3*(s13 + s23) + s12^3*(570*s13 + 
                   2728*s23) + 10*s12*s23*(-9*s13^2 + 106*s13*s23 + 
                   143*s23^2) + s12^2*(-90*s13^2 + 576*s13*s23 + 
                   2397*s23^2))) + p2q*s23*(p1q^4*s23^3*(-1461*s12^4 - 
                 2*s12^3*(177*s13 + 1409*s23) + 3*s12^2*(132*s13^2 + 
                   360*s13*s23 - 769*s23^2) + 10*s12*s23*(144*s13^2 + 
                   83*s13*s23 - 134*s23^2) + 30*s23^2*(15*s13^2 + 2*s13*s23 - 
                   13*s23^2)) + 18*p3q^4*s12^2*(5*s12^5 - 35*s13^2*s23^2*
                  (s13 + s23) + s12^4*(3*s13 + 20*s23) - 5*s12*s13*s23*
                  (15*s13^2 + 27*s13*s23 + 5*s23^2) + s12^3*(-9*s13^2 - 
                   47*s13*s23 + 25*s23^2) - s12^2*(7*s13^3 + 142*s13^2*s23 + 
                   75*s13*s23^2 - 10*s23^3)) - p1q^2*p3q^2*s23*(4245*s12^6 + 
                 1230*s13^2*s23^3*(s13 + s23) + s12^5*(2538*s13 + 9176*s23) + 
                 10*s12*s13*s23^2*(257*s13^2 + 613*s13*s23 + 255*s23^2) + 
                 s12^4*(-738*s13^2 + 4486*s13*s23 + 10527*s23^2) - 
                 2*s12^3*(582*s13^3 + 287*s13^2*s23 - 6274*s13*s23^2 - 
                   3593*s23^3) + 2*s12^2*s23*(-171*s13^3 + 4670*s13^2*s23 + 
                   4915*s13*s23^2 + 795*s23^3)) + 2*p1q*p3q^3*s12*
                (858*s12^6 - 30*s13^2*s23^3*(s13 + s23) + 7*s12^5*(111*s13 + 
                   310*s23) - 5*s12*s13*s23^2*(59*s13^2 - 56*s13*s23 - 
                   99*s23^2) + 3*s12^4*(134*s13^2 + 1041*s13*s23 + 
                   865*s23^2) + 3*s12^2*s23*(-3*s13^3 + 572*s13^2*s23 + 
                   1057*s13*s23^2 + 55*s23^3) + s12^3*(483*s13^3 + 
                   944*s13^2*s23 + 5686*s13*s23^2 + 1448*s23^3)) + 2*p1q^3*
                p3q*s23^2*(1995*s12^5 + s12^4*(2613*s13 + 3782*s23) + 
                 15*s13*s23^2*(-15*s13^2 + 52*s13*s23 + 67*s23^2) + 
                 s12^3*(465*s13^2 + 3737*s13*s23 + 3642*s23^2) + 5*s12*s23*
                  (-135*s13^3 + 253*s13^2*s23 + 737*s13*s23^2 + 147*s23^3) + 
                 s12^2*(-153*s13^3 - 918*s13^2*s23 + 5132*s13*s23^2 + 
                   2590*s23^3))) + p2q^4*s13^2*(18*p3q*(288*s12^6 + 
                 s12^4*s23*(355*s13 + 169*s23) + s12^5*(432*s13 + 389*s23) + 
                 25*s13^2*s23^2*(s13^2 - s13*s23 - 2*s23^2) - 3*s12^3*
                  (48*s13^3 + 67*s13^2*s23 - 46*s13*s23^2 - 41*s23^3) + 
                 5*s12*s13*s23*(8*s13^3 - 18*s13^2*s23 - 40*s13*s23^2 + 
                   s23^3) + s12^2*s23*(-127*s13^3 - 362*s13^2*s23 + 
                   20*s13*s23^2 + 55*s23^3)) + p1q*s23*(4791*s12^5 + 
                 s12^4*(12633*s13 + 6670*s23) - 60*s13*s23^2*(30*s13^2 + 
                   s13*s23 - 29*s23^2) + s12^3*(7716*s13^2 + 15148*s13*s23 + 
                   5169*s23^2) + 10*s12*s23*(-333*s13^3 - 191*s13^2*s23 + 
                   614*s13*s23^2 + 129*s23^3) + s12^2*(-126*s13^3 + 
                   1260*s13^2*s23 + 11827*s13*s23^2 + 4580*s23^3))) + 
             p2q^3*s13*(-18*p3q^2*(144*s12^7 + 202*s12^6*s23 + 25*s13^3*s23^3*
                  (s13 + s23) + 5*s12*s13^2*s23^2*(23*s13^2 + 11*s13*s23 - 
                   17*s23^2) + s12^5*(-432*s13^2 - 111*s13*s23 + 71*s23^2) + 
                 s12^2*s13*s23*(87*s13^3 + 17*s13^2*s23 - 345*s13*s23^2 - 
                   75*s23^3) - s12^4*(288*s13^3 + 525*s13^2*s23 + 155*s13*
                    s23^2 - 48*s23^3) + s12^3*s23*(-125*s13^3 - 540*s13^2*
                    s23 - 183*s13*s23^2 + 35*s23^3)) - p1q^2*s23^2*
                (2454*s12^5 + s12^4*(11823*s13 + 3620*s23) - 180*s13*s23^2*
                  (15*s13^2 + s13*s23 - 14*s23^2) + 6*s12^3*(1365*s13^2 + 
                   3071*s13*s23 + 706*s23^2) + 30*s12*s23*(-192*s13^3 - 
                   104*s13^2*s23 + 292*s13*s23^2 + 41*s23^3) + 
                 s12^2*(-468*s13^3 - 360*s13^2*s23 + 15971*s13*s23^2 + 
                   4300*s23^3)) + 2*p1q*p3q*s23*(2337*s12^6 + s12^5*
                  (5073*s13 + 4580*s23) + 15*s13^2*s23^2*(-45*s13^2 + 
                   56*s13*s23 + 101*s23^2) + s12^4*(5538*s13^2 + 5526*s13*
                    s23 + 3579*s23^2) + 5*s12*s13*s23*(-261*s13^3 + 
                   365*s13^2*s23 + 1195*s13*s23^2 + 153*s23^3) + 
                 s12^3*(2739*s13^3 + 7831*s13^2*s23 + 3998*s13*s23^2 + 
                   1306*s23^3) + s12^2*(-63*s13^4 + 1692*s13^3*s23 + 
                   9471*s13^2*s23^2 + 2850*s13*s23^3 - 30*s23^4))) + 
             p2q^2*(-18*p3q^3*s12*(s12^6*(144*s13 - 5*s23) - 55*s13^3*s23^3*
                  (s13 + s23) + s12^5*(288*s13^2 + 199*s13*s23 - 15*s23^2) - 
                 5*s12*s13^2*s23^2*(32*s13^2 + 40*s13*s23 - 3*s23^2) + 
                 s12^4*(144*s13^3 + 287*s13^2*s23 + 128*s13*s23^2 - 
                   15*s23^3) + s12^3*s23*(29*s13^3 + 161*s13^2*s23 + 
                   138*s13*s23^2 - 5*s23^3) + s12^2*s13*s23*(-54*s13^3 - 
                   214*s13^2*s23 + 80*s13*s23^2 + 65*s23^3)) + p1q^3*s23^3*
                (255*s12^5 + s12^4*(5835*s13 + 406*s23) - 180*s13*s23^2*
                  (10*s13^2 + s13*s23 - 9*s23^2) + 3*s12^3*(1170*s13^2 + 
                   3664*s13*s23 + 367*s23^2) + 30*s12*s23*(-150*s13^3 - 
                   80*s13^2*s23 + 186*s13*s23^2 + 13*s23^3) + s12^2*
                  (-648*s13^3 - 1800*s13^2*s23 + 9781*s13*s23^2 + 
                   1340*s23^3)) + p1q*p3q^2*s23*(903*s12^7 + 1290*s13^3*s23^3*
                  (s13 + s23) + s12^6*(6609*s13 + 2818*s23) + 10*s12*s13^2*
                  s23^2*(349*s13^2 + 485*s13*s23 + 18*s23^2) + 3*s12^5*
                  (3315*s13^2 + 4220*s13*s23 + 1267*s23^2) + 3*s12^2*s13*s23*
                  (666*s13^3 + 1953*s13^2*s23 + 370*s13*s23^2 + 240*s23^3) + 
                 s12^4*(3297*s13^3 + 5892*s13^2*s23 + 11347*s13*s23^2 + 
                   2096*s23^3) + s12^3*(-942*s13^4 + 1936*s13^3*s23 + 
                   2067*s13^2*s23^2 + 5352*s13*s23^3 + 210*s23^4)) - p1q^2*
                p3q*s23^2*(1158*s12^6 + s12^5*(8928*s13 + 3314*s23) - 
                 150*s13^2*s23^2*(9*s13^2 - 16*s13*s23 - 25*s23^2) + 
                 s12^4*(13671*s13^2 + 15574*s13*s23 + 5172*s23^2) + 
                 10*s12*s13*s23*(-315*s13^3 + 350*s13^2*s23 + 1429*s13*
                    s23^2 + 309*s23^3) + 2*s12^3*(1713*s13^3 + 7855*s13^2*
                    s23 + 7942*s13*s23^2 + 1853*s23^3) + s12^2*(-342*s13^4 - 
                   1134*s13^3*s23 + 20473*s13^2*s23^2 + 11000*s13*s23^3 + 
                   690*s23^4))))/(288*p1q*(p2q + p3q)*s12^3*s23*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) + ((-90*p1q^2*s12*s23*(s12 + s23)*(s12 + s13 + 
                s23) - 18*(s12 + s13 + s23)*(5*p3q^2*s12*s23*(s12 + s23) + 
                p2q^2*s13*(s12 - s13 + s23)*(28*s12 + 15*s23) + 
                p2q*p3q*(5*s12^3 + 15*s13*s23^2 + s12*s23*(43*s13 + 5*s23) + 
                  s12^2*(61*s13 + 10*s23))) + p1q*(-(p3q*(s12 + s23)*
                  (237*s12^3 - 250*s23^2*(s13 + s23) - 8*s12*s23*(68*s13 + 
                     113*s23) - 3*s12^2*(158*s13 + 139*s23))) - 
                p2q*(327*s12^4 + s12^3*(714*s13 - 90*s23) + s12^2*
                   (1098*s13^2 + 854*s13*s23 - 1411*s23^2) + 2*s12*s23*
                   (387*s13^2 + 80*s13*s23 - 622*s23^2) + 10*s23^2*
                   (27*s13^2 + 2*s13*s23 - 25*s23^2))))*den[-1 + 2*ep])/
            (288*p1q*(p2q + p3q)*s12^3))*p1 . E0conj + 
         (-1/72*(ep^2*(s12 + 10*s13)*(s12^2 - s13*s23 + s12*(s13 + s23)))/
             s12^2 + (ep*(18*(p2q + p3q)*(s12 - s13)*(p3q*s12 - p2q*s13)^2*(
                s12 + s13 + s23)*(5*p3q^2*s12*(s12 + s23)^2 + p2q^2*s13^2*
                 (6*s12 + 5*s23) - p2q*p3q*s13*(11*s12^2 + 16*s12*s23 + 
                  5*s23^2)) + 18*p1q^5*s23^3*(s12 + s23)*(5*s12^3 + 
                5*s13*s23*(s13 + s23) + s12^2*(11*s13 + 10*s23) + 
                s12*(6*s13^2 + 16*s13*s23 + 5*s23^2)) + p1q^4*s23^2*(
                p3q*(51*s12^5 + 20*s13*s23^3*(s13 + s23) - s12^4*(105*s13 + 
                    332*s23) + 10*s12*s23^2*(2*s13^2 + 17*s13*s23 + 
                    16*s23^2) + s12^2*s23*(-156*s13^2 + 181*s13*s23 + 
                    48*s23^2) - s12^3*(156*s13^2 + 236*s13*s23 + 
                    495*s23^2)) + p2q*(321*s12^5 + s12^4*(219*s13 + 
                    388*s23) - 10*s13*s23^2*(36*s13^2 + 43*s13*s23 + 
                    7*s23^2) + s12^3*(-426*s13^2 + 124*s13*s23 + 45*s23^2) - 
                  s12^2*(324*s13^3 + 1326*s13^2*s23 + 161*s13*s23^2 - 
                    48*s23^3) - 2*s12*s23*(351*s13^3 + 665*s13^2*s23 + 
                    149*s13*s23^2 - 35*s23^3))) - p1q*(p3q^4*s12^2*
                 (3*s12^5 - 110*s13*s23^3*(s13 + s23) + 11*s12^4*(3*s13 + 
                    40*s23) + 2*s12*s23^2*(-136*s13^2 - 121*s13*s23 + 
                    55*s23^2) + s12^2*s23*(-132*s13^2 - 451*s13*s23 + 
                    492*s23^2) + s12^3*(30*s13^2 - 124*s13*s23 + 
                    819*s23^2)) + p2q^3*p3q*s13*(-27*s12^5*(11*s13 + 
                    12*s23) + s12^3*s13*(363*s13^2 - 749*s13*s23 - 
                    937*s23^2) + 250*s13^2*s23^2*(-s13^2 + s23^2) - 
                  6*s12^4*(35*s13^2 + 129*s13*s23 + 54*s23^2) + s12^2*s13*
                   (276*s13^3 + 1465*s13^2*s23 + 685*s13*s23^2 - 
                    1034*s23^3) + 2*s12*s13*s23*(18*s13^3 + 450*s13^2*s23 + 
                    587*s13*s23^2 - 125*s23^3)) + p2q^4*s13^2*
                 (3*s12^4*(35*s13 + 54*s23) - 10*s13^2*s23*(9*s13^2 + 
                    43*s13*s23 + 34*s23^2) + s12^3*(75*s13^2 + 589*s13*s23 + 
                    162*s23^2) + s12^2*s13*(-138*s13^2 + 409*s13*s23 + 
                    662*s23^2) - 4*s12*s13*(27*s13^3 + 135*s13^2*s23 + 
                    93*s13*s23^2 - 85*s23^3)) + p2q*p3q^3*s12*(-87*s12^6 - 
                  140*s13^2*s23^3*(s13 + s23) + s12^5*(-66*s13 + 332*s23) - 
                  10*s12*s13*s23^2*(3*s13^2 + 20*s13*s23 - 3*s23^2) + 
                  s12^3*s23*(705*s13^2 - 1373*s13*s23 + 402*s23^2) + 
                  s12^4*(21*s13^2 - 883*s13*s23 + 711*s23^2) + 2*s12^2*s23*
                   (96*s13^3 + 309*s13^2*s23 - 101*s13*s23^2 + 55*s23^3)) + 
                p2q^2*p3q^2*(250*s13^3*s23^3*(s13 + s23) + 9*s12^6*
                   (31*s13 + 18*s23) + s12^4*s13*(-279*s13^2 + 783*s13*s23 - 
                    508*s23^2) + 2*s12*s13^2*s23^2*(312*s13^2 + 257*s13*s23 - 
                    195*s23^2) + 3*s12^5*(66*s13^2 - 49*s13*s23 + 54*s23^2) - 
                  s12^2*s13*s23*(6*s13^3 + 565*s13^2*s23 + 1124*s13*s23^2 - 
                    140*s23^3) + s12^3*s13*(-198*s13^3 - 1506*s13^2*s23 + 
                    169*s13*s23^2 + 220*s23^3))) - p1q^3*s23*(
                p3q^2*(48*s12^6 + s12^5*(60*s13 - 823*s23) + 70*s13*s23^4*
                   (s13 + s23) + s12^4*(12*s13^2 + 371*s13*s23 - 892*s23^2) + 
                  2*s12*s23^3*(64*s13^2 + 79*s13*s23 - 35*s23^2) + 
                  s12^2*s23^2*(358*s13^2 + 339*s13*s23 + 272*s23^2) + 
                  s12^3*s23*(312*s13^2 + 1048*s13*s23 + 321*s23^2)) + 
                p2q*p3q*(318*s12^6 + s12^5*(792*s13 - 283*s23) + 2*s12^4*
                   (297*s13^2 + 626*s13*s23 - 365*s23^2) + 10*s13*s23^3*
                   (-3*s13^2 + 4*s13*s23 + 7*s23^2) + s12^3*(120*s13^3 + 
                    1823*s13^2*s23 + 917*s13*s23^2 - 57*s23^3) + 2*s12*s23^2*
                   (146*s13^3 + 300*s13^2*s23 + 229*s13*s23^2 - 35*s23^3) + 
                  s12^2*s23*(324*s13^3 + 2119*s13^2*s23 + 197*s13*s23^2 + 
                    2*s23^3)) + p2q^2*(318*s12^5*s13 - 60*s13^2*s23^2*
                   (9*s13^2 + 14*s13*s23 + 5*s23^2) + s12^4*(384*s13^2 + 
                    557*s13*s23 + 162*s23^2) - 2*s12*s13*s23*(459*s13^3 + 
                    925*s13^2*s23 + 241*s13*s23^2 - 150*s23^3) + 
                  s12^3*(-258*s13^3 + 1133*s13^2*s23 + 463*s13*s23^2 + 
                    162*s23^3) + s12^2*s13*(-324*s13^3 - 1332*s13^2*s23 + 
                    897*s13*s23^2 + 362*s23^3))) + p1q^2*(p3q^3*s12*
                 (-93*s12^6 + 50*s13*s23^4*(s13 + s23) - s12^5*(33*s13 + 
                    758*s23) + s12^4*(60*s13^2 + 154*s13*s23 - 317*s23^2) + 
                  2*s12*s23^3*(8*s13^2 + 38*s13*s23 - 25*s23^2) + 
                  2*s12^2*s23^2*(103*s13^2 - 141*s13*s23 + 167*s23^2) + 
                  s12^3*s23*(300*s13^2 + 365*s13*s23 + 732*s23^2)) - 
                p2q*p3q^2*(3*s12^7 - 230*s13^2*s23^4*(s13 + s23) + 
                  s12^6*(-261*s13 + 758*s23) - 2*s12*s13*s23^3*(142*s13^2 + 
                    197*s13*s23 - 90*s23^2) + s12^5*(-36*s13^2 - 782*s13*
                     s23 + 533*s23^2) + s12^4*(228*s13^3 + 938*s13^2*s23 - 
                    317*s13*s23^2 - 336*s23^3) + 2*s12^3*s23*(303*s13^3 + 
                    918*s13^2*s23 + 661*s13*s23^2 - 32*s23^3) + 2*s12^2*s23^2*
                   (71*s13^3 + 517*s13^2*s23 + 244*s13*s23^2 + 25*s23^3)) + 
                p2q^2*p3q*(6*s12^6*s13 + 10*s13^2*s23^3*(-21*s13^2 + 
                    2*s13*s23 + 23*s23^2) + s12^5*(-243*s13^2 + 556*s13*s23 + 
                    324*s23^2) + s12^2*s13*s23*(756*s13^3 + 2909*s13^2*s23 + 
                    142*s13*s23^2 - 474*s23^3) + 2*s12*s13*s23^2*(208*s13^3 + 
                    485*s13^2*s23 + 457*s13*s23^2 - 115*s23^3) + s12^3*s13*
                   (276*s13^3 + 1342*s13^2*s23 - 405*s13*s23^2 - 32*s23^3) + 
                  s12^4*(27*s13^3 - 766*s13^2*s23 + 1086*s13*s23^2 + 
                    324*s23^3)) + p2q^3*s13*(-3*s12^5*s13 - 120*s13^2*s23^2*
                   (3*s13^2 + 7*s13*s23 + 4*s23^2) + s12^4*(75*s13^2 + 
                    274*s13*s23 + 324*s23^2) - 2*s12*s13*s23*(261*s13^3 + 
                    665*s13^2*s23 + 269*s13*s23^2 - 240*s23^3) + 
                  s12^3*(-30*s13^3 + 814*s13^2*s23 + 899*s13*s23^2 + 
                    324*s23^3) + s12^2*s13*(-108*s13^3 - 630*s13^2*s23 + 
                    1197*s13*s23^2 + 778*s23^3)))))/(144*p1q*(p2q + p3q)*
             s12^3*(p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*(
                -(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*
                 (2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
              p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                  2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
           (-18*p1q^6*s23^4*(2*s12^5 + 25*s13*s23^3*(s13 + s23) + s12^4*
                (41*s13 + 9*s23) + 5*s12*s23^2*(15*s13^2 + 21*s13*s23 + 
                 s23^2) + s12^2*s23*(71*s13^2 + 156*s13*s23 + 15*s23^2) + 
               s12^3*(39*s13^2 + 117*s13*s23 + 17*s23^2)) + 
             p1q^5*s23^3*(p3q*(432*s12^6 + s12^5*(4194*s13 + 609*s23) + 
                 30*s13*s23^3*(15*s13^2 + 13*s13*s23 - 2*s23^2) + 
                 s12^4*(4464*s13^2 + 9417*s13*s23 + 116*s23^2) + s12^2*s23*
                  (1278*s13^3 + 6900*s13^2*s23 + 5463*s13*s23^2 - 
                   1090*s23^3) + s12^3*(702*s13^3 + 7458*s13^2*s23 + 
                   10400*s13*s23^2 - 671*s23^3) + 10*s12*s23^2*(135*s13^3 + 
                   300*s13^2*s23 + 55*s13*s23^2 - 48*s23^3)) + p2q*
                (360*s12^6 + 33*s12^5*(6*s13 + 7*s23) + s12^4*(1944*s13^2 - 
                   1329*s13*s23 - 604*s23^2) + 30*s13*s23^3*(75*s13^2 + 
                   88*s13*s23 + 13*s23^2) + s12^3*(2106*s13^3 + 6000*s13^2*
                    s23 + 464*s13*s23^2 - 1175*s23^3) + s12^2*s23*
                  (4932*s13^3 + 12318*s13^2*s23 + 3087*s13*s23^2 - 
                   1090*s23^3) + 10*s12*s23^2*(612*s13^3 + 1029*s13^2*s23 + 
                   181*s13*s23^2 - 39*s23^3))) - 18*(p2q + p3q)*
              (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*(p2q^3*s13*
                (25*s13^3*s23^2 + 2*s12^4*(-72*s13 + s23) + 10*s12*s13^2*s23*
                  (4*s13 + s23) - s12^2*s13*s23*(59*s13 + 15*s23) + 
                 s12^3*(-144*s13^2 - 25*s13*s23 + 18*s23^2)) - p3q^3*s12*s23*
                (25*s12^4 - 15*s13^2*s23^2 - s12*s13*s23*(s13 + 10*s23) + 
                 s12^3*(57*s13 + 48*s23) + s12^2*(32*s13^2 + 29*s13*s23 + 
                   23*s23^2)) + p2q*p3q^2*(-25*s13^3*s23^3 + 5*s12*s13^2*
                  s23^2*(-16*s13 + s23) + 9*s12^5*(16*s13 + 3*s23) + 
                 s12^2*s13*s23*(-26*s13^2 + 40*s13*s23 + 25*s23^2) + 
                 s12^3*s23*(174*s13^2 + 88*s13*s23 + 31*s23^2) + 
                 s12^4*(144*s13^2 + 155*s13*s23 + 58*s23^2)) + p2q^2*p3q*
                (4*s12^5*(36*s13 - 5*s23) + 2*s12^4*(35*s13 - 19*s23)*s23 + 
                 25*s13^3*(s13 - s23)*s23^2 + 10*s12*s13^2*s23*(4*s13^2 - 
                   7*s13*s23 - s23^2) + s12^2*s13*s23*(-85*s13^2 + 
                   24*s13*s23 + 15*s23^2) - s12^3*(144*s13^3 - 109*s13^2*
                    s23 + 9*s13*s23^2 + 18*s23^3))) - p1q^4*s23^2*
              (p3q^2*(756*s12^7 + 9*s12^6*(686*s13 - 121*s23) + 
                 s12^5*(6822*s13^2 + 5532*s13*s23 - 5085*s23^2) - 
                 30*s13*s23^4*(2*s13^2 + 15*s13*s23 + 13*s23^2) + 
                 s12^4*(1404*s13^3 + 5817*s13^2*s23 + 227*s13*s23^2 - 
                   6215*s23^3) + s12^3*s23*(2454*s13^3 + 5282*s13^2*s23 - 
                   3916*s13*s23^2 - 3625*s23^3) + s12^2*s23^2*(2742*s13^3 + 
                   2595*s13^2*s23 - 5029*s13*s23^2 - 260*s23^3) + 
                 10*s12*s23^3*(66*s13^3 - 155*s13^2*s23 - 193*s13*s23^2 + 
                   39*s23^3)) + p2q^2*(s12^6*(720*s13 + 393*s23) + 
                 30*s13^2*s23^3*(150*s13^2 + 217*s13*s23 + 67*s23^2) + 
                 s12^5*(288*s13^2 - 2094*s13*s23 + 2042*s23^2) + 10*s12*s13*
                  s23^2*(1098*s13^3 + 2304*s13^2*s23 + 769*s13*s23^2 - 
                   144*s23^3) + s12^4*(1674*s13^3 - 7689*s13^2*s23 - 
                   6085*s13*s23^2 + 1867*s23^3) + 2*s12^2*s23*(3564*s13^4 + 
                   10416*s13^3*s23 + 4678*s13^2*s23^2 - 2691*s13*s23^3 - 
                   195*s23^4) + s12^3*(2106*s13^4 + 5184*s13^3*s23 - 
                   4431*s13^2*s23^2 - 7861*s13*s23^3 - 172*s23^4)) + p2q*p3q*
                (720*s12^7 + s12^6*(900*s13 - 966*s23) + s12^5*(4896*s13^2 - 
                   10008*s13*s23 - 3475*s23^2) + 4*s12^4*(1530*s13^3 + 
                   1287*s13^2*s23 - 2882*s13*s23^2 - 1069*s23^3) + 
                 30*s13*s23^3*(60*s13^3 + 80*s13^2*s23 + 7*s13*s23^2 - 
                   13*s23^3) + s12^3*(1404*s13^4 + 13992*s13^3*s23 + 
                   17069*s13^2*s23^2 - 5531*s13*s23^3 - 3257*s23^4) + 
                 s12^2*s23*(3654*s13^4 + 17796*s13^3*s23 + 16811*s13^2*
                    s23^2 - 5227*s13*s23^3 - 380*s23^4) + 10*s12*s23^2*
                  (477*s13^4 + 1155*s13^3*s23 + 227*s13^2*s23^2 - 265*s13*
                    s23^3 + 39*s23^4))) + p1q*(p3q^5*s12^2*s23*(1911*s12^6 + 
                 150*s13^2*s23^3*(s13 + s23) + s12^5*(6390*s13 + 4492*s23) - 
                 2*s12*s13*s23^2*(672*s13^2 + 227*s13*s23 - 315*s23^2) + 
                 s12^4*(5751*s13^2 + 8258*s13*s23 + 3047*s23^2) + 
                 2*s12^3*(636*s13^3 + 638*s13^2*s23 + 727*s13*s23^2 - 
                   31*s23^3) - 3*s12^2*s23*(398*s13^3 + 1153*s13^2*s23 + 
                   36*s13*s23^2 + 176*s23^3)) + p2q^5*s13^2*
                (-72*s12^6*(36*s13 - 5*s23) + 30*s13^3*s23^2*(15*s13^2 + 
                   88*s13*s23 + 73*s23^2) + s12^5*(-5184*s13^2 - 8769*s13*
                    s23 + 792*s23^2) - s12^4*(2592*s13^3 + 20628*s13^2*s23 + 
                   7117*s13*s23^2 - 1404*s23^3) + s12^2*s13*s23*(726*s13^3 + 
                   749*s13^2*s23 - 5508*s13*s23^2 - 1200*s23^3) + 
                 10*s12*s13^2*s23*(72*s13^3 + 567*s13^2*s23 + 685*s13*s23^2 + 
                   27*s23^3) + s12^3*s23*(-11493*s13^3 - 16268*s13^2*s23 - 
                   1240*s13*s23^2 + 972*s23^3)) + p2q*p3q^4*s12*
                (-48*s12^7*(54*s13 - 35*s23) + 420*s13^3*s23^4*(s13 + s23) + 
                 2*s12*s13^2*s23^3*(153*s13^2 - 92*s13*s23 - 345*s23^2) + 
                 s12^6*(-5184*s13^2 + 5085*s13*s23 + 4160*s23^2) + 
                 4*s12^2*s13*s23^2*(3*s13^3 - 695*s13^2*s23 - 1127*s13*
                    s23^2 + 93*s23^3) + s12^4*s23*(-8643*s13^3 - 6994*s13^2*
                    s23 + 5870*s13*s23^2 + 3728*s23^3) + s12^5*(-2592*s13^3 - 
                   3294*s13^2*s23 + 11071*s13*s23^2 + 5230*s23^3) + 
                 s12^3*s23*(-1944*s13^4 - 4821*s13^3*s23 - 9016*s13^2*s23^2 + 
                   1876*s13*s23^3 + 978*s23^4)) + p2q^2*p3q^3*
                (-1290*s13^4*s23^4*(s13 + s23) + s12^8*(-5184*s13 + 
                   129*s23) - 10*s12*s13^3*s23^3*(414*s13^2 + 367*s13*s23 - 
                   165*s23^2) - 4*s12^7*(1296*s13^2 - 189*s13*s23 + 
                   83*s23^2) - s12^2*s13^2*s23^2*(1824*s13^3 + 221*s13^2*
                    s23 - 6904*s13*s23^2 + 540*s23^3) + s12^6*(5184*s13^3 - 
                   1692*s13^2*s23 + 16160*s13*s23^2 + 779*s23^3) + 
                 2*s12^3*s13*s23*(396*s13^4 + 4302*s13^3*s23 + 10511*s13^2*
                    s23^2 + 537*s13*s23^3 + 309*s23^4) + s12^4*s23*
                  (11727*s13^4 + 26760*s13^3*s23 + 10058*s13^2*s23^2 + 
                   6812*s13*s23^3 + 858*s23^4) + 2*s12^5*(2592*s13^4 + 
                   4308*s13^3*s23 + 4748*s13^2*s23^2 + 8693*s13*s23^3 + 
                   1049*s23^4)) + p2q^4*p3q*s13*(144*s12^7*(36*s13 - 5*s23) + 
                 9*s12^6*(576*s13^2 + 811*s13*s23 - 232*s23^2) + 
                 30*s13^3*s23^2*(15*s13^3 + 131*s13^2*s23 + 58*s13*s23^2 - 
                   58*s23^3) - 6*s12^5*(864*s13^3 - 650*s13^2*s23 + 
                   203*s13*s23^2 + 456*s23^3) + 10*s12*s13^2*s23*(72*s13^4 + 
                   693*s13^3*s23 + 200*s13^2*s23^2 - 874*s13*s23^3 - 
                   9*s23^4) - 2*s12^3*s23*(10863*s13^4 + 14624*s13^3*s23 - 
                   3555*s13^2*s23^2 - 305*s13*s23^3 + 324*s23^4) + 
                 s12^2*s13*s23*(-114*s13^4 - 7274*s13^3*s23 - 20057*s13^2*
                    s23^2 + 2136*s13*s23^3 + 930*s23^4) - s12^4*(5184*s13^4 + 
                   25011*s13^3*s23 - 2224*s13^2*s23^2 + 3725*s13*s23^3 + 
                   2016*s23^4)) + p2q^3*p3q^2*(-72*s12^8*(36*s13 - 5*s23) + 
                 9*s12^7*s13*(576*s13 + 149*s23) + 30*s13^4*s23^3*(43*s13^2 - 
                   58*s13*s23 - 101*s23^2) + 9*s12^6*(1728*s13^3 + 
                   1588*s13^2*s23 + 1251*s13*s23^2 - 156*s23^3) + 
                 10*s12*s13^3*s23^2*(126*s13^3 - 899*s13^2*s23 - 1310*s13*
                    s23^2 + 114*s23^3) + 2*s12^5*(2592*s13^4 + 15600*s13^3*
                    s23 + 7878*s13^2*s23^2 + 5117*s13*s23^3 - 846*s23^4) + 
                 s12^3*s13*s23*(-9441*s13^4 - 4388*s13^3*s23 + 30808*s13^2*
                    s23^2 + 4766*s13*s23^3 + 228*s23^4) + s12^2*s13^2*s23*
                  (-840*s13^4 - 9847*s13^3*s23 - 15076*s13^2*s23^2 + 
                   10574*s13*s23^3 + 1230*s23^4) + s12^4*(-2592*s13^5 + 
                   9288*s13^4*s23 + 39728*s13^3*s23^2 + 10486*s13^2*s23^3 + 
                   2812*s13*s23^4 - 648*s23^5))) + p1q^3*s23*
              (p3q^3*(360*s12^8 + 9*s12^7*(302*s13 - 373*s23) - 390*s13^2*
                  s23^5*(s13 + s23) + s12^6*(3060*s13^2 - 9411*s13*s23 - 
                   7383*s23^2) - 10*s12*s13*s23^4*(150*s13^2 + 229*s13*s23 + 
                   51*s23^2) + s12^5*(702*s13^3 - 7572*s13^2*s23 - 
                   16364*s13*s23^2 - 3945*s23^3) + s12^2*s23^3*(-1368*s13^3 - 
                   8161*s13^2*s23 - 3572*s13*s23^2 + 1080*s23^3) + 
                 2*s12^3*s23^2*(57*s13^3 - 2329*s13^2*s23 - 4083*s13*s23^2 + 
                   1707*s23^3) + s12^4*s23*(-222*s13^3 - 5465*s13^2*s23 - 
                   11283*s13*s23^2 + 2055*s23^3)) + p2q*p3q^2*(360*s12^8 - 
                 3*s12^7*(198*s13 + 1091*s23) + 30*s13^2*s23^4*(9*s13^2 - 
                   58*s13*s23 - 67*s23^2) - s12^6*(4968*s13^2 + 22353*s13*
                    s23 + 6698*s23^2) + 10*s12*s13*s23^3*(114*s13^3 - 
                   567*s13^2*s23 - 778*s13*s23^2 + 54*s23^3) - 3*s12^5*
                  (1806*s13^3 + 11478*s13^2*s23 + 8477*s13*s23^2 + 
                   2257*s23^3) - s12^3*s23*(564*s13^4 + 5729*s13^3*s23 + 
                   9364*s13^2*s23^2 + 5598*s13*s23^3 - 2194*s23^4) - 
                 6*s12^4*(234*s13^4 + 2437*s13^3*s23 + 4446*s13^2*s23^2 + 
                   2048*s13*s23^3 + 497*s23^4) + s12^2*s23^2*(2124*s13^4 + 
                   3419*s13^3*s23 - 14462*s13^2*s23^2 - 330*s13*s23^3 + 
                   1470*s23^4)) + p2q^3*(180*s13^3*s23^3*(25*s13^2 + 
                   48*s13*s23 + 23*s23^2) + 6*s12^6*(60*s13^2 - 193*s13*s23 + 
                   60*s23^2) + 60*s12*s13^2*s23^2*(162*s13^3 + 450*s13^2*
                    s23 + 241*s13*s23^2 - 30*s23^3) + s12^5*(126*s13^3 - 
                   9417*s13^2*s23 + 1147*s13*s23^2 + 720*s23^3) + 
                 6*s12^2*s13*s23*(762*s13^4 + 2778*s13^3*s23 + 1994*s13^2*
                    s23^2 - 1783*s13*s23^3 - 240*s23^4) + s12^4*(468*s13^4 - 
                   13335*s13^3*s23 - 20618*s13^2*s23^2 + 2629*s13*s23^3 + 
                   684*s23^4) + s12^3*(702*s13^5 + 792*s13^4*s23 - 
                   15339*s13^3*s23^2 - 20257*s13^2*s23^3 - 792*s13*s23^4 + 
                   324*s23^5)) + p2q^2*p3q*(s12^7*(-720*s13 + 138*s23) + 
                 s12^6*(108*s13^2 - 14910*s13*s23 + 973*s23^2) + 
                 9*s12^5*(198*s13^3 - 3307*s13^2*s23 - 2796*s13*s23^2 - 
                   298*s23^3) + 180*s13^2*s23^3*(15*s13^3 + 32*s13^2*s23 + 
                   8*s13*s23^2 - 9*s23^3) + s12^4*(1656*s13^4 - 13155*s13^3*
                    s23 - 47175*s13^2*s23^2 - 20588*s13*s23^3 - 5073*s23^4) + 
                 30*s12*s13*s23^2*(207*s13^4 + 605*s13^3*s23 + 139*s13^2*
                    s23^2 - 246*s13*s23^3 + 35*s23^4) + s12^3*(702*s13^5 + 
                   6330*s13^4*s23 - 9860*s13^3*s23^2 - 26817*s13^2*s23^3 - 
                   7044*s13*s23^4 - 1166*s23^5) + s12^2*s23*(3474*s13^5 + 
                   14778*s13^4*s23 + 15383*s13^3*s23^2 - 14821*s13^2*s23^3 + 
                   1352*s13*s23^4 + 390*s23^5))) + p1q^2*s23*
              (p3q^4*s12*(1821*s12^7 + 510*s13^2*s23^4*(s13 + s23) + 
                 s12^6*(7632*s13 + 577*s23) + s12^5*(7209*s13^2 + 2609*s13*
                    s23 - 6271*s23^2) + 2*s12*s13*s23^3*(1401*s13^2 + 
                   1381*s13*s23 - 165*s23^2) + s12^4*(1398*s13^3 - 
                   554*s13^2*s23 - 5940*s13*s23^2 - 8861*s23^3) + 
                 s12^3*s23*(6*s13^3 + 1825*s13^2*s23 - 829*s13*s23^2 - 
                   4410*s23^3) + 2*s12^2*s23^2*(1098*s13^3 + 4300*s13^2*s23 + 
                   527*s13*s23^2 - 288*s23^3)) + p2q^4*s13*
                (s12^6*(4143*s13 - 720*s23) + 4*s12^5*(3069*s13^2 + 
                   1768*s13*s23 - 369*s23^2) - 30*s13^3*s23^2*(75*s13^2 + 
                   217*s13*s23 + 142*s23^2) + s12^4*(9729*s13^3 + 30581*s13^2*
                    s23 + 3349*s13*s23^2 - 1728*s23^3) - 10*s12*s13^2*s23*
                  (423*s13^3 + 1731*s13^2*s23 + 1399*s13*s23^2 - 66*s23^3) - 
                 2*s12^2*s13*(549*s13^4 + 3036*s13^3*s23 + 3258*s13^2*s23^2 - 
                   5381*s13*s23^3 - 990*s23^4) + s12^3*(498*s13^4 + 
                   19651*s13^3*s23 + 25735*s13^2*s23^2 + 1464*s13*s23^3 - 
                   972*s23^4)) + p2q*p3q^3*(2076*s12^8 + 1230*s13^3*s23^4*
                  (s13 + s23) + s12^7*(11082*s13 + 2147*s23) + 2*s12^6*
                  (2133*s13^2 + 937*s13*s23 - 227*s23^2) + 10*s12*s13^2*s23^3*
                  (330*s13^2 + 509*s13*s23 + 78*s23^2) + 2*s12^2*s13*s23^2*
                  (162*s13^3 + 4806*s13^2*s23 + 1993*s13*s23^2 - 570*s23^3) - 
                 s12^5*(7338*s13^3 + 20771*s13^2*s23 + 12477*s13*s23^2 + 
                   4199*s23^3) - 2*s12^3*s23*(1569*s13^4 + 4125*s13^3*s23 + 
                   446*s13^2*s23^2 + 2689*s13*s23^3 + 957*s23^4) - 
                 s12^4*(2598*s13^4 + 14564*s13^3*s23 + 24701*s13^2*s23^2 + 
                   10747*s13*s23^3 + 5588*s23^4)) + p2q^2*p3q^2*(255*s12^8 + 
                 4*s12^7*(3003*s13 + 235*s23) + 30*s13^3*s23^3*(-39*s13^2 + 
                   86*s13*s23 + 125*s23^2) + s12^6*(18390*s13^2 + 18559*s13*
                    s23 + 5007*s23^2) - 20*s12*s13^2*s23^2*(51*s13^3 - 
                   489*s13^2*s23 - 718*s13*s23^2 + 24*s23^3) + 
                 s12^5*(15726*s13^3 + 19812*s13^2*s23 + 10619*s13*s23^2 + 
                   4608*s23^3) + s12^2*s13*s23*(1458*s13^4 + 4625*s13^3*s23 + 
                   18653*s13^2*s23^2 - 5092*s13*s23^3 - 1860*s23^4) + 
                 s12^4*(11391*s13^4 + 29179*s13^3*s23 - 7857*s13^2*s23^2 - 
                   3328*s13*s23^3 - 728*s23^4) + s12^3*(2298*s13^5 + 
                   16780*s13^4*s23 + 10644*s13^3*s23^2 - 15077*s13^2*s23^3 - 
                   6668*s13*s23^4 - 1014*s23^5)) + p2q^3*p3q*
                (30*s12^7*(199*s13 - 24*s23) + 4*s12^6*(3777*s13^2 + 
                   3397*s13*s23 - 270*s23^2) + s12^5*(21186*s13^3 + 
                   31369*s13^2*s23 + 15896*s13*s23^2 - 324*s23^3) - 
                 60*s13^3*s23^2*(30*s13^3 + 113*s13^2*s23 + 41*s13*s23^2 - 
                   42*s23^3) - 10*s12*s13^2*s23*(351*s13^4 + 1509*s13^3*s23 + 
                   409*s13^2*s23^2 - 1134*s13*s23^3 + 75*s23^4) + 
                 2*s12^4*(6675*s13^4 + 28435*s13^3*s23 + 10496*s13^2*s23^2 + 
                   4942*s13*s23^3 + 180*s23^4) + s12^3*(204*s13^5 + 
                   33071*s13^4*s23 + 45385*s13^3*s23^2 + 577*s13^2*s23^3 + 
                   1204*s13*s23^4 + 324*s23^5) - s12^2*s13*(1098*s13^5 + 
                   3768*s13^4*s23 - 647*s13^3*s23^2 - 24531*s13^2*s23^3 + 
                   3976*s13*s23^4 + 1050*s23^5))))/(288*p1q*(p2q + p3q)*s12^3*
             s23*(p1q^4*s23^3*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
               (p3q*s12 - p2q*s13)^2*(p2q*s13 - p3q*(s12 + s23)) - 
              p1q^3*s23^2*(p3q*(3*s12 + s13 - s23)*(s12 + s23) + 
                p2q*(s12^2 + 4*s13*s23 + s12*(3*s13 + s23))) + 
              p1q^2*s23*(p3q^2*(s12 + s23)*(3*s12^2 + 2*s12*s13 - 3*s12*s23 - 
                  s13*s23) + p2q^2*s13*(2*s12^2 + 6*s13*s23 + 3*s12*
                   (s13 + s23)) + p2q*p3q*(2*s12^3 + 3*s13*(s13 - s23)*s23 + 
                  s12^2*(2*s13 + s23) + s12*(2*s13^2 + 2*s13*s23 - s23^2))) + 
              p1q*(-(p3q^3*s12*(s12 + s23)*(s12^2 + s12*(s13 - 3*s23) - 
                   2*s13*s23)) - p2q^3*s13^2*(s12^2 + 4*s13*s23 + 
                  s12*(s13 + 3*s23)) + p2q*p3q^2*(-s12^4 + 2*s13^2*s23^2 + 
                  s12^3*(s13 + s23) + 2*s12*s13*s23*(s13 + s23) + 
                  2*s12^2*(s13^2 + s23^2)) + p2q^2*p3q*s13*(2*s12^3 + 
                  3*s13*s23*(-s13 + s23) + s12^2*(s13 + 2*s23) + 
                  s12*(-s13^2 + 2*s13*s23 + 2*s23^2))))) + 
           ((18*(p2q + p3q)*(s12 + s13 + s23)*(-(p3q*s12*(5*s12^2 + 
                   28*s12*s13 + 5*s12*s23 + 5*s13*s23)) + p2q*s13*
                 (5*s12^2 + 28*s12*s13 - 5*s12*s23 + 15*s13*s23)) + 
              18*p1q^2*(s12^3*(33*s13 - 5*s23) + 15*s13*s23^2*(s13 + s23) + 
                s12^2*(33*s13^2 + 66*s13*s23 - 10*s23^2) + s12*s23*
                 (38*s13^2 + 48*s13*s23 - 5*s23^2)) - 
              p1q*(p3q*(237*s12^4 + s12^3*(357*s13 - 597*s23) + 250*s13*s23^2*
                   (s13 + s23) + s12^2*(120*s13^2 - 841*s13*s23 - 
                    1084*s23^2) + 2*s12*s23*(292*s13^2 + 347*s13*s23 - 
                    125*s23^2)) + p2q*(327*s12^4 + 3*s12^3*(347*s13 - 
                    139*s23) + s12^2*(1218*s13^2 - 157*s13*s23 - 994*s23^2) + 
                  10*s13*s23*(27*s13^2 + 52*s13*s23 + 25*s23^2) + 
                  2*s12*(252*s13^3 + 679*s13^2*s23 + 347*s13*s23^2 - 
                    125*s23^3))))*den[-1 + 2*ep])/(288*p1q*(p2q + p3q)*
             s12^3))*p2 . E0conj))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*
        DS[k + p1 + p2 + p3]] + 
     (((-9*ep*p1q*(s12 + s13 + s23)*(-(p3q*s12) + p2q*s13 + 
            p1q*(2*s13 + s23)))/(16*p3q*s12 - 16*(p1q + p2q)*(s13 + s23)) - 
         (9*(s12 + s13 + s23)*(p1q^3*s23*(s12 + s13 + s23) + 
            p1q^2*(-(p2q*s13^2) + p2q*s12*(s13 + 2*s23) - p3q*(s12^2 - 
                s12*s13 + s23^2)) + p1q*(-(p3q^2*s12*(s12 - 2*s23)) + 
              p2q^2*(2*s12*s13 + s13^2 + 3*s12*s23 + 4*s13*s23 + 2*s23^2) + 
              p2q*p3q*(4*s12*s13 + 2*s13^2 + 6*s12*s23 + 5*s13*s23 + 
                2*s23^2)) + (p2q + p3q)*(-(p3q^2*s12^2) - p2q*p3q*s12*(
                3*s12 + s13 + 2*s23) + p2q^2*(3*s12*s13 + 2*s13^2 + 
                4*s12*s23 + 6*s13*s23 + 4*s23^2))))/(16*(p2q + p3q)*s23*
           (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*E0 . E0conj + 
       ((9*ep*p1q*(s12 + s13 + s23)*(p1q^4*s23^2*(2*s13 + s23) + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-(p3q*(2*s12 + s23)) + 
              p2q*(2*s13 + s23)) - 2*p1q^3*s23*(p3q*s12*(s13 + s23) - 
              p3q*s23*(2*s13 + s23) + p2q*(s12*s13 + 2*s13^2 - s13*s23 - 
                s23^2)) + 2*p1q*(p2q^3*s13*(s12*s13 + 2*s13^2 - s13*s23 - 
                s23^2) + p2q*p3q^2*(s12^3 + s13*s23^2 - s12*s13*(2*s13 + 
                  s23) + 2*s12^2*(s13 + 2*s23)) + p3q^3*s12*(s23^2 + 
                s12*(s13 + 3*s23)) - p2q^2*p3q*(2*s12^2*s13 - 
                s13^2*(s13 - 2*s23) + s12*(4*s13^2 + 3*s13*s23 + s23^2))) + 
            p1q^2*(p2q^2*(2*s13^3 + 2*s12*s13*(s13 - s23) - 7*s13^2*s23 - 
                2*s13*s23^2 + s23^3) - p3q^2*s23*(-s12^2 + s23^2 + 
                6*s12*(s13 + s23)) - 2*p2q*p3q*(3*s13^2*s23 + 
                s12^2*(s13 + s23) + s12*(s13^2 + 5*s13*s23 + 4*s23^2)))))/
          (8*(p1q + p2q + p3q)*s23*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))) - (9*(p1q^6*s23^3*(s12 + s13 + s23)^2 - 
            p1q^5*s23^2*(s12 + s13 + s23)*(p3q*(2*s12^2 + s23^2 + 
                s12*(2*s13 + s23)) + p2q*(2*s12*(s13 - s23) + 
                s13*(2*s13 + s23))) - p1q^3*s23*(s12 + s13 + s23)*
             (p3q^3*(-s12^3 - 5*s12*s23^2 + s23^3 + s12^2*(2*s13 + 9*s23)) + 
              p2q^3*(-s13^3 + 4*s12^2*(s13 - s23) + 14*s13^2*s23 - 
                5*s13*s23^2 - 14*s23^3 + 2*s12*(4*s13^2 + 7*s13*s23 - 
                  11*s23^2)) + p2q^2*p3q*(4*s12^3 + 2*s12^2*(9*s13 + 
                  13*s23) + s23*(11*s13^2 - 12*s13*s23 - 11*s23^2) + 
                s12*(13*s13^2 + 28*s13*s23 - 11*s23^2)) + p2q*p3q^2*(
                -2*s12^3 + s13*(4*s13 - 3*s23)*s23 + 13*s12^2*(s13 + 2*s23) + 
                2*s12*(3*s13^2 + 8*s13*s23 - 3*s23^2))) + 
            p1q^4*s23*(s12 + s13 + s23)*(p3q^2*(s12^3 + s12^2*(s13 - s23) + 
                (s13 - s23)*s23^2 + 2*s12*s23*(s13 + 3*s23)) - 
              2*p2q*p3q*(-3*s13*s23^2 + s12^2*(s13 + 2*s23) + 
                s12*(s13^2 + s13*s23 - 5*s23^2)) + p2q^2*(s13^3 + 
                4*s12^2*s23 - s13^2*s23 + 7*s13*s23^2 + 5*s23^3 + 
                s12*(s13^2 + 2*s13*s23 + 14*s23^2))) + (p2q + p3q)*
             (p3q*s12 - p2q*s13)^2*(p3q^3*s12*s23*(s12 + s13 + s23) - 
              p2q*p3q^2*s12*(4*s12 + s23)*(s12 + s13 + s23) + 
              p2q^2*p3q*(-4*s12^3 - s12^2*s23 + 4*s23*(s13 + s23)^2 + 
                s12*(4*s13^2 + 11*s13*s23 + 7*s23^2)) + 
              p2q^3*(8*s23*(s13 + s23)^2 + s12^2*(4*s13 + 9*s23) + 
                s12*(4*s13^2 + 21*s13*s23 + 17*s23^2))) - 
            p1q^2*(s12 + s13 + s23)*(2*p2q*p3q^3*(-(s13*s23^3) + 
                3*s12^2*s23*(s13 + 3*s23) + s12*s13*s23*(s13 + 4*s23) - 
                2*s12^3*(s13 + 5*s23)) + p3q^4*s12*s23*(-4*s12^2 - 3*s23^2 + 
                s12*(s13 + 7*s23)) + p2q^4*(4*s12^2*s13*s23 + 
                s12*(-4*s13^3 + 8*s13^2*s23 + 36*s13*s23^2 - 9*s23^3) + 
                s23*(-7*s13^3 + 25*s13^2*s23 + 20*s13*s23^2 - 8*s23^3)) + 
              p2q^2*p3q^2*(-4*s12^3*(s13 + 4*s23) + 4*s12*s23*(5*s13^2 + 
                  12*s13*s23 + 5*s23^2) + s12^2*(8*s13^2 + 29*s13*s23 + 
                  43*s23^2) + s23*(-3*s13^3 + 9*s13^2*s23 - 4*s23^3)) + 
              2*p2q^3*p3q*(-2*s12^3*s23 + 2*s12^2*(2*s13^2 + 6*s13*s23 + 
                  7*s23^2) + s23*(-3*s13^3 + 15*s13^2*s23 + 7*s13*s23^2 - 
                  6*s23^3) + s12*(-2*s13^3 + 15*s13^2*s23 + 34*s13*s23^2 + 
                  4*s23^3))) + p1q*(3*p3q^5*s12^2*(s12 - s23)*s23*(s12 + 
                s13 + s23) + p2q*p3q^4*s12^2*(-4*s12^3 + 12*s12^2*s23 + 
                s13*s23*(s13 + s23) + s12*(4*s13^2 + 21*s13*s23 + 
                  16*s23^2)) + p2q^5*s13*(2*s12^2*(4*s13^2 + 5*s13*s23 - 
                  9*s23^2) + s12*(8*s13^3 + 33*s13^2*s23 - 10*s13*s23^2 - 
                  34*s23^3) + s23*(15*s13^3 + 13*s13^2*s23 - 18*s13*s23^2 - 
                  16*s23^3)) - p2q^2*p3q^3*(4*s12^5 + s13^2*s23^2*
                 (s13 + s23) - s12^4*(16*s13 + 31*s23) - 3*s12^3*(4*s13^2 + 
                  19*s13*s23 + 14*s23^2) + s12^2*(8*s13^3 + 17*s13^2*s23 + 
                  3*s13*s23^2 + s23^3) + s12*s23*(11*s13^3 + 24*s13^2*s23 + 
                  20*s13*s23^2 + 8*s23^3)) + p2q^3*p3q^2*(2*s12^4*
                 (8*s13 + 13*s23) + s12^3*(-12*s13^2 + 19*s13*s23 + 
                  16*s23^2) + s13*s23*(7*s13^3 + 3*s13^2*s23 - 12*s13*s23^2 - 
                  8*s23^3) - s12^2*(24*s13^3 + 87*s13^2*s23 + 87*s13*s23^2 + 
                  34*s23^3) + s12*(4*s13^4 - 25*s13^3*s23 - 94*s13^2*s23^2 - 
                  86*s13*s23^3 - 24*s23^4)) - p2q^4*p3q*(2*s12^3*(10*s13^2 + 
                  18*s13*s23 + 9*s23^2) + 3*s13*s23*(-6*s13^3 - 3*s13^2*s23 + 
                  11*s13*s23^2 + 8*s23^3) + s12^2*(8*s13^3 + 83*s13^2*s23 + 
                  122*s13*s23^2 + 34*s23^3) + s12*(-12*s13^4 - 3*s13^3*s23 + 
                  104*s13^2*s23^2 + 108*s13*s23^3 + 16*s23^4)))))/
          (8*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(-(p3q^3*s12^3) + 
            (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((9*ep*p1q^2*(s12 + s13 + s23)*(p1q^3*s23^2*(s13 + s23) + 
            p3q^3*s12^2*(s12 + s13 + s23) + p2q^3*s13^2*(s12 + s13 + s23) + 
            p1q^2*p3q*s23*(-s13^2 + s23*(-s12 + s23)) - p1q*p3q^2*s12*
             (s13^2 + s13*s23 + 2*s23^2 + s12*(s13 + s23)) + 
            p2q^2*s13*(-(p3q*(2*s12 - s13)*(s12 + s13 + s23)) + 
              p1q*(s13^2 + s12*(s13 - s23) - s13*s23 - 2*s23^2)) + 
            p2q*(p3q^2*s12*(s12 - 2*s13)*(s12 + s13 + s23) - p1q*p3q*(s12 + 
                s13)*(s13 + s23)*(s12 - s13 + 2*s23) + p1q^2*s23*(
                -(s12*s13) - 2*s13^2 - s13*s23 + s23^2))))/
          (4*(p1q + p2q + p3q)*s23*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))) + (9*(s12 + s13 + s23)*
           (p1q^5*s23^3*(2*p2q*s12 + 3*p2q*(s13 + s23) + p3q*(s13 + s23)) - 
            2*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(-(p3q^2*s12^2) + 
              p2q*p3q*s12*(-s12 + s13) + p2q^2*(2*s23*(s13 + s23) + 
                s12*(s13 + 2*s23))) - p1q^4*s23^2*(p2q^2*(2*s12^2 + 
                7*s12*s13 + 6*s13^2 + 2*s12*s23 + 3*s13*s23 - 3*s23^2) + 
              p3q^2*((s13 + s23)^2 + s12*(6*s13 + 7*s23)) + 
              p2q*p3q*(4*s12^2 + 3*s13*(s13 + s23) + s12*(11*s13 + 
                  13*s23))) + 2*p1q*(p2q + p3q)^2*(p3q^3*s12^3*(s12 - s13 - 
                3*s23) - p2q*p3q^2*s12^2*(4*s12*s13 - 2*s13^2 + 5*s12*s23 + 
                2*s23^2) + p2q^3*s13*(-(s12*(2*s13^2 + s13*s23 - 4*s23^2)) + 
                2*s23*(-s13^2 + s13*s23 + 2*s23^2)) + p2q^2*p3q*s12*(-s13^3 + 
                5*s13^2*s23 + 8*s13*s23^2 + 4*s23^3 + s12*(5*s13^2 + 
                  6*s13*s23 + 4*s23^2))) + p1q^3*s23*
             (p3q^3*s12*(3*s13*(s13 + s23) + s12*(7*s13 + 13*s23)) + 
              p2q*p3q^2*(2*s12^3 + s13^3 + s13^2*s23 - 4*s13*s23^2 - 
                4*s23^3 + 2*s12^2*(7*s13 + 11*s23) + s12*(7*s13^2 + 
                  3*s13*s23 - 10*s23^2)) + p2q^3*(3*s13^3 + 2*s12^2*
                 (s13 - s23) - 3*s13^2*s23 - 10*s13*s23^2 - 4*s23^3 + 
                s12*(7*s13^2 - 3*s13*s23 - 8*s23^2)) + p2q^2*p3q*(2*s12^3 + 
                7*s12^2*(s13 + s23) + s12*(7*s13^2 - s13*s23 - 18*s23^2) + 
                2*(s13^3 - 5*s13*s23^2 - 4*s23^3))) + 
            p1q^2*(p3q^4*s12^2*(s23*(s13 + 5*s23) - s12*(2*s13 + 9*s23)) + 
              2*p2q*p3q^3*s12*(-2*s12^2*(s13 + 4*s23) + s23*(3*s13^2 + 
                  7*s13*s23 + 4*s23^2) + s12*(2*s13^2 + 8*s13*s23 + 
                  13*s23^2)) + 2*p2q^3*p3q*(-(s12^3*s23) + s12^2*(2*s13^2 + 
                  3*s13*s23 + 6*s23^2) + s12*s13*(-2*s13^2 + 6*s13*s23 + 
                  15*s23^2) + s23*(s13^3 + 9*s13^2*s23 + 4*s13*s23^2 - 
                  4*s23^3)) + p2q^4*(2*s12^2*s13*s23 + s23*(3*s13^3 + 
                  11*s13^2*s23 + 4*s13*s23^2 - 4*s23^3) + s12*(-2*s13^3 + 
                  9*s13^2*s23 + 12*s13*s23^2 - 4*s23^3)) + p2q^2*p3q^2*(
                -(s12^3*(2*s13 + 7*s23)) + s12^2*(8*s13^2 + 25*s13*s23 + 
                  35*s23^2) + s23*(s13^3 + 9*s13^2*s23 + 4*s13*s23^2 - 
                  4*s23^3) + s12*(-2*s13^3 + 15*s13^2*s23 + 36*s13*s23^2 + 
                  12*s23^3)))))/(4*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((9*ep*p1q^2*p2q*(s12 + s13 + s23)*(-((p1q + p2q)*s12*s13*
                (-(p2q*s13) + p1q*s23)) + p3q^2*s12*(s12^2 + 2*s12*s23 + 
                s23*(-s13 + s23)) + p2q*p3q*s13*(-2*s12^2 - 2*s12*s23 + 
                s23*(s13 + s23)) - p1q*p3q*(s12^2*(s13 + s23) + 
                s23^2*(s13 + s23) + 2*s12*s23*(2*s13 + s23))))/
            (4*(p1q + p2q + p3q)*s23*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (9*p2q*(s12 + s13 + s23)*
             (-2*p2q*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-(p3q*s12*
                  (s12 + s23)) + 2*p2q*s23*(s13 + s23) + p2q*s12*
                 (s13 + 2*s23)) - p1q^4*s23^2*(2*p2q*s12^2 + 4*p2q*s23*
                 (s13 + s23) + 2*p3q*s23*(s13 + s23) + 3*p2q*s12*
                 (s13 + 2*s23) + p3q*s12*(s13 + 2*s23)) + p1q^3*s23*(
                p2q^2*(s13 - s23)*(2*s12^2 + 8*s23*(s13 + s23) + 
                  5*s12*(s13 + 2*s23)) + p3q^2*(4*s12*s23*(s13 + s23) - 
                  s23^2*(s13 + s23) + s12^2*(3*s13 + 5*s23)) + p2q*p3q*
                 (2*s12^3 + s12^2*(3*s13 + 7*s23) + s23*(4*s13^2 - 
                    3*s13*s23 - 7*s23^2) + s12*(s13^2 + 3*s13*s23 - 
                    2*s23^2))) + p1q^2*(p3q^3*s12*s23*(-3*s12^2 + 2*s12*s13 + 
                  3*s23*(s13 + s23)) + p2q*p3q^2*(-(s12^3*(2*s13 + 3*s23)) + 
                  2*s12^2*s23*(s13 + 4*s23) + s12*s23^2*(5*s13 + 9*s23) + 
                  s23^2*(s13^2 - s13*s23 - 2*s23^2)) + p2q^2*p3q*
                 (-2*s12^3*s23 + s12*s23*(13*s13^2 + 20*s13*s23 + 4*s23^2) + 
                  s12^2*(4*s13^2 + 6*s13*s23 + 8*s23^2) + s23*(-2*s13^3 + 
                    11*s13^2*s23 + 7*s13*s23^2 - 6*s23^3)) + 
                p2q^3*(2*s12^2*s13*s23 + s12*(-2*s13^3 + 5*s13^2*s23 + 
                    16*s13*s23^2 - 4*s23^3) - 4*s23*(s13^3 - 3*s13^2*s23 - 
                    3*s13*s23^2 + s23^3))) - 2*p1q*(p3q^4*s12^2*s23*
                 (s12 + s23) + 2*p2q^4*s13*(s13 - s23)*(2*s23*(s13 + s23) + 
                  s12*(s13 + 2*s23)) - p2q*p3q^3*s12*(s12 + s23)*
                 (s12^2 + s23^2 - s12*(s13 + 3*s23)) + p2q^2*p3q^2*
                 (-(s13*s23^2*(s13 + s23)) + s12^3*(4*s13 + 6*s23) + 
                  s12^2*(-2*s13^2 + 4*s13*s23 + 3*s23^2) - s12*s23*
                   (5*s13^2 + 4*s13*s23 + 3*s23^2)) - p2q^3*p3q*
                 (s12^2*(5*s13^2 + 8*s13*s23 + 4*s23^2) + s13*s23*(-3*s13^2 + 
                    2*s13*s23 + 5*s23^2) + s12*(-s13^3 + 10*s13^2*s23 + 
                    15*s13*s23^2 + 4*s23^3)))))/(4*(p2q + p3q)*
             (p1q + p2q + p3q)*s23^2*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p1 . E0conj + 
         ((9*ep*p1q*(s12 + s13 + s23)*((p2q + p3q)^2*(p3q*s12 - p2q*s13)^
                2*s23 + p1q^4*s23^2*(2*s13 + 3*s23) - 2*p1q^3*s23*(
                p2q*s12*s13 - p3q*s23*(s13 + 2*s23) + p3q*s12*(s13 + 3*s23) + 
                2*p2q*(s13^2 + s13*s23 - s23^2)) + 2*p1q*(p3q^3*s12*
                 (2*s12 - s23)*s23 + p2q^3*s13*(s12*s13 + s13^2 + 2*s13*s23 - 
                  s23^2) + p2q*p3q^2*(s12^3 - s13*s23^2 - s12*s23*(3*s13 + 
                    2*s23) + s12^2*(s13 + 3*s23)) - p2q^2*p3q*(2*s12^2*s13 - 
                  s13*(s13 - 2*s23)*s23 + s12*(2*s13^2 + 5*s13*s23 + 
                    s23^2))) + p1q^2*(p2q^2*(2*s13^3 + 2*s12*s13*(s13 - 
                    s23) - s13^2*s23 - 8*s13*s23^2 + s23^3) + p3q^2*s23*
                 (3*s12^2 + s23^2 - 2*s12*(s13 + 4*s23)) - 2*p2q*p3q*
                 (s12^2*(s13 + s23) + s23*(s13^2 + 3*s13*s23 - s23^2) + 
                  s12*(s13^2 + 5*s13*s23 + 5*s23^2)))))/(8*(p1q + p2q + p3q)*
             s23*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - 
                 p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (9*(p1q^6*s23^3*(s12 + s13 + s23)^2 - 
              p1q^5*s23^2*(s12 + s13 + s23)*(p2q*(2*s13^2 + 2*s12*
                   (s13 - 3*s23) - 3*s13*s23 - 4*s23^2) + p3q*(2*s12^2 + 
                  s23^2 + s12*(2*s13 + s23))) + p1q^3*s23*(s12 + s13 + s23)*(
                p3q^3*(s12^3 + s12^2*(2*s13 - s23) + 7*s12*s23^2 - s23^3) + 
                p2q^2*p3q*(4*s12^3 + 2*s12^2*(s13 + s23) + s23*(9*s13^2 + 
                    4*s13*s23 - 17*s23^2) + s12*(3*s13^2 - 12*s13*s23 - 
                    11*s23^2)) + p2q^3*(5*s13^3 + 4*s12^2*(s13 - s23) + 
                  2*s13^2*s23 - 9*s13*s23^2 - 12*s23^3 + 2*s12*(8*s13^2 - 
                    5*s13*s23 - 7*s23^2)) + p2q*p3q^2*(6*s12^3 + 
                  s12^2*(15*s13 + 14*s23) + s23*(4*s13^2 + 5*s13*s23 - 
                    6*s23^2) + 6*s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p1q^4*s23*(s12 + s13 + s23)*(p3q^2*(s12^3 + s12^2*(s13 - s23) + 
                  2*s12*s23*(-s13 + s23) - s23^2*(s13 + 3*s23)) - 
                p2q^2*(-s13^3 + 4*s12^2*s23 + 9*s13^2*s23 + 7*s13*s23^2 + 
                  s23^3 + s12*(-s13^2 + 18*s13*s23 + 2*s23^2)) - 
                2*p2q*p3q*(s23^2*(s13 + 4*s23) + s12^2*(s13 + 6*s23) + 
                  s12*(s13^2 + 9*s13*s23 + 5*s23^2))) - (p2q + p3q)*
               (p3q*s12 - p2q*s13)^2*(-(p3q^3*s12*s23*(s12 + s13 + s23)) - 
                p2q*p3q^2*s12*(s12 + s13 + s23)*(4*s12 + 3*s23) + 
                p2q^2*p3q*(-4*s12^3 - 3*s12^2*s23 + 4*s23*(s13 + s23)^2 + 
                  s12*(4*s13^2 + 9*s13*s23 + 5*s23^2)) + p2q^3*
                 (8*s23*(s13 + s23)^2 + s12^2*(4*s13 + 7*s23) + 
                  s12*(4*s13^2 + 19*s13*s23 + 15*s23^2))) + p1q^2*(s12 + 
                s13 + s23)*(p3q^4*s12*s23*(s12*(s13 - 5*s23) + 3*s23^2) - 
                2*p2q*p3q^3*(-(s13*s23^3) + 2*s12^3*(s13 + 3*s23) + 
                  s12^2*s23*(s13 + 3*s23) - s12*s23*(s13^2 + 4*s13*s23 + 
                    8*s23^2)) + p2q^4*(4*s12^2*s13*s23 + s23*(s13^3 + 
                    21*s13^2*s23 + 16*s13*s23^2 - 8*s23^3) + s12*(-4*s13^3 + 
                    20*s13^2*s23 + 20*s13*s23^2 - 7*s23^3)) + p2q^2*p3q^2*
                 (-4*s12^3*(s13 + s23) + 12*s12*s23*(2*s13^2 + 4*s13*s23 + 
                    3*s23^2) + s12^2*(8*s13^2 + 21*s13*s23 + 31*s23^2) + 
                  s23*(-3*s13^3 + 5*s13^2*s23 + 12*s13*s23^2 - 4*s23^3)) + 
                2*p2q^3*p3q*(-2*s12^3*s23 + s12^2*(4*s13^2 + 6*s23^2) + 
                  s23*(-3*s13^3 + 11*s13^2*s23 + 13*s13*s23^2 - 6*s23^3) + 
                  s12*(-2*s13^3 + 11*s13^2*s23 + 18*s13*s23^2 + 4*s23^3))) - 
              p1q*(p2q + p3q)*(s12 + s13 + s23)*(-(p3q^4*s12^2*(s12 - 3*s23)*
                  s23) + p2q*p3q^3*s12^2*(-4*s12^2 + 4*s12*s13 + 9*s12*s23 + 
                  9*s13*s23 + 11*s23^2) + p2q^4*s13*(s23*(11*s13^2 - 
                    4*s13*s23 - 16*s23^2) + 2*s12*(4*s13^2 + s13*s23 - 
                    7*s23^2)) + p2q^2*p3q^2*(s13^2*s23^2 + 2*s12^3*
                   (8*s13 + 9*s23) - s12*s23*(15*s13^2 + 16*s13*s23 + 
                    8*s23^2) + s12^2*(-8*s13^2 + 9*s13*s23 + 10*s23^2)) - 
                p2q^3*p3q*(-(s13*s23*(7*s13^2 + s13*s23 - 8*s23^2)) + 
                  2*s12^2*(10*s13^2 + 10*s13*s23 + 7*s23^2) + 
                  s12*(-4*s13^3 + 29*s13^2*s23 + 42*s13*s23^2 + 16*s23^3)))))/
            (8*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(-(p3q^3*s12^3) + 
              (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
              p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*
          p2 . E0conj))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*Eik[k]] + 
     ((-1/16*(ep*p2q*(s12 + s13)*(s12 + s13 + s23)*(-(p3q*s12) + p2q*s13 + 
             p1q*(2*s13 + s23)))/(s13*(-(p3q*s12) + (p1q + p2q)*
              (s13 + s23))) + (p2q*(s12 + s13 + s23)*
           ((p3q*s12 - p2q*s13)*(p3q*s12 - p2q*(s13 + s23)) + 
            p1q^2*(2*s13^2 + 4*s13*s23 + s23*(s12 + 3*s23)) + 
            p1q*(-(p3q*s12*(s12 + 2*s13 + 4*s23)) + p2q*(s12*s13 + 2*s13^2 + 
                2*s12*s23 + 4*s13*s23 + 3*s23^2))))/(16*p1q*s13*
           (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*E0 . E0conj + 
       (-1/8*(ep*p2q*(s12 + s13 + s23)*((p2q + p3q)^2*(s12 - s13)*
              (p3q*s12 - p2q*s13)^2 + p1q^4*s23^2*(s12 + s13 + 2*s23) - 
             2*p1q*(p2q + p3q)*(p2q^2*s13*(s12^2 + s12*s23 - 2*s13*s23) + 
               p3q^2*s12*(-(s13*s23) + s12*(s13 + s23)) - p2q*p3q*
                (s12^3 + s12^2*s23 + s13^2*s23 + s12*s13*(s13 + s23))) + 
             2*p1q^3*s23*(p2q*(s12^2 - s13^2 + s12*s23 - 2*s13*s23 + s23^2) - 
               p3q*(s12^2 + s13*s23 + s12*(s13 + 2*s23))) + 
             p1q^2*(p3q^2*(s12^3 - s13*s23^2 + s12*s23*(4*s13 + s23) + 
                 s12^2*(s13 + 2*s23)) + p2q^2*(-2*s12^2*(s13 - s23) + 
                 s13*(s13^2 + 2*s13*s23 - 5*s23^2) + s12*(-s13^2 - 
                   2*s13*s23 + s23^2)) - 2*p2q*p3q*(s12^3 - s13*(s13 - 2*s23)*
                  s23 + 2*s12^2*(2*s13 + s23) + s12*(3*s13^2 + 3*s13*s23 + 
                   2*s23^2)))))/((p1q + p2q + p3q)*s13*(-(p3q^3*s12^3) + 
             (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
             p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
             p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
               2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (p2q*(p1q^5*s23^2*(3*s12^2 + 9*s12*s13 + 6*s13^2 + 10*s12*s23 + 
              13*s13*s23 + 7*s23^2) + (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
             (s12 + s13 + s23)*(-(p3q*s12) + p2q*(s13 + s23)) - 
            p1q^4*s23*(s12 + s13 + s23)*(p2q*(2*s12^2 + 8*s12*s13 + 
                12*s13^2 - 2*s12*s23 + 3*s13*s23 - 13*s23^2) + 
              p3q*(6*s12^2 - 2*s23*(2*s13 + 3*s23) + 3*s12*(4*s13 + 
                  5*s23))) + p1q^3*(s12 + s13 + s23)*
             (p3q^2*(3*s12^3 + s23^3 + s12^2*(6*s13 + 9*s23) - s12*s23*
                 (8*s13 + 15*s23)) + p2q^2*(6*s13^3 + 2*s12^2*(s13 - s23) - 
                15*s13^2*s23 - 20*s13*s23^2 + 7*s23^3 + s12*(5*s13^2 - 
                  10*s13*s23 - s23^2)) + 2*p2q*p3q*(s12^3 - 4*s12^2*s23 + 
                s23*(-3*s13^2 - 2*s13*s23 + 4*s23^2) - 2*s12*(2*s13^2 + 
                  7*s13*s23 + 7*s23^2))) - p1q^2*(s12 + s13 + s23)*
             (-(p2q^3*(2*s12^2*s13 + 11*s13^3 + 2*s12*s13*(4*s13 - s23) + 
                 s13^2*s23 - 13*s13*s23^2 + s23^3)) + p3q^3*s12*(s12^2 + 
                3*s23^2 - 4*s12*(s13 + 3*s23)) + p2q*p3q^2*(-6*s12^3 + 
                (s13 - s23)*s23^2 - 19*s12^2*(s13 + s23) + 2*s12*(3*s13^2 + 
                  6*s13*s23 + 7*s23^2)) + p2q^2*p3q*(2*s12^3 + 2*s12^2*
                 (3*s13 + 5*s23) + s12*(21*s13^2 + 36*s13*s23 + 19*s23^2) - 
                2*(s13^3 - 2*s13^2*s23 - 5*s13*s23^2 + s23^3))) + 
            p1q*(-3*p3q^4*s12^2*(s12 - s23)*(s12 + s13 + s23) + 
              p2q^4*s13*(3*s12^2*s13 + 6*s13^3 + 11*s13^2*s23 + 3*s13*s23^2 - 
                2*s23^3 + s12*(9*s13^2 + 8*s13*s23 - 2*s23^2)) - 
              2*p2q*p3q^3*s12*(2*s12^3 + s23*(s13 + s23)^2 - 2*s12^2*
                 (2*s13 + s23) - 3*s12*(2*s13^2 + 3*s13*s23 + s23^2)) - 
              2*p2q^3*p3q*(s12^3*s13 + s12^2*(9*s13^2 + 10*s13*s23 + s23^2) - 
                s13*(s13^3 + s13^2*s23 - 2*s13*s23^2 - 2*s23^3) + 
                s12*(7*s13^3 + 17*s13^2*s23 + 12*s13*s23^2 + s23^3)) - 
              p2q^2*p3q^2*(s12^4 - s12^3*(13*s13 + 4*s23) - s12^2*
                 (3*s13^2 + 3*s13*s23 + s23^2) + s13*s23*(s13^2 + 3*s13*s23 + 
                  2*s23^2) + s12*(11*s13^3 + 28*s13^2*s23 + 22*s13*s23^2 + 
                  4*s23^3)))))/(8*p1q*(p1q + p2q + p3q)*s13*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((ep*p1q*p2q*(s12 + s13)*(s12 + s13 + s23)*
           ((p2q + p3q)^2*s12*(-(p3q*s12) + p2q*s13) - p1q^2*s23*
             (p2q*s12 + p3q*(s13 + s23)) + p1q*(p2q^2*s12*(s13 - s23) + 
              p3q^2*s12*(s13 + 2*s23) + p2q*p3q*(s12^2 + s13*(s13 + s23) + 
                2*s12*(2*s13 + s23)))))/(4*(p1q + p2q + p3q)*s13*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (p2q*(s12 + s13 + s23)*(2*p1q^4*s23^2*(s12 + 2*(s13 + s23)) + 
            2*(-(p3q*s12) + p2q*s13)*(p3q^3*s12^2 + p2q*p3q^2*s12*(2*s12 - 
                s13 - s23) - p2q^2*p3q*(2*s12 - s13)*(s13 + s23) + 
              p2q^3*s13*(s12 + 2*(s13 + s23))) - p1q^3*s23*
             (p2q*(s12^2 + 5*s12*s13 + 8*s13^2 - 2*s12*s23 - 8*s23^2) + 
              p3q*(4*s12^2 + s13^2 - s13*s23 - 2*s23^2 + 9*s12*(s13 + 
                  s23))) + p1q*(p3q^3*s12^2*(-s12 + 3*s13 + 6*s23) + 
              p2q^3*s13*(s12^2 + 5*s12*s13 + 8*s13^2 - 2*s12*s23 - 8*s23^2) + 
              p2q*p3q^2*s12*(2*s12^2 + 11*s12*s13 - 3*s13^2 + 12*s12*s23 - 
                4*s13*s23 - 4*s23^2) - p2q^2*p3q*(s12^3 - 4*s13^3 + 
                4*s13*s23^2 + s12^2*(3*s13 + 4*s23) + 2*s12*(5*s13^2 + 
                  8*s13*s23 + 4*s23^2))) + p1q^2*(p3q^2*s12*(2*s12^2 + 
                5*s12*s13 + s13^2 + 6*s12*s23 - 4*s13*s23 - 6*s23^2) + 
              p2q*p3q*(s12^3 + s13^3 + s12^2*(s13 - 4*s23) - 5*s13^2*s23 - 
                4*s13*s23^2 + 2*s23^3 - s12*(3*s13^2 + 17*s13*s23 + 
                  16*s23^2)) + p2q^2*(s12*s13*(3*s13 - 7*s23) + 
                s12^2*(s13 - s23) + 4*(s13^3 - 3*s13^2*s23 - 3*s13*s23^2 + 
                  s23^3)))))/(4*(p1q + p2q + p3q)*s13*(-(p3q^3*s12^3) + 
            (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*((-1/4*(ep*p2q*(s12 + s13 + s23)*(p1q^4*s23^2*(s12 + 
                 2*(s13 + s23)) + (p2q + p3q)*(-(p3q*s12) + p2q*s13)*
                (p3q^2*s12^2 + p2q^2*s13*(s12 + s13 + s23) - p2q*p3q*s12*
                  (s12 + 2*(s13 + s23))) + p1q^3*s23*(p2q*(s12^2 - s12*s13 - 
                   4*s13^2 + 2*s12*s23 - s13*s23 + 3*s23^2) + 2*p3q*
                  (-s12^2 - 2*s12*(s13 + s23) + s23*(s13 + s23))) - p1q*
                (-2*p3q^3*s12^2*(s13 + 2*s23) + p2q^3*s13*(s12^2 - s12*s13 - 
                   3*s13^2 + 2*s12*s23 - s13*s23 + 2*s23^2) + p2q*p3q^2*s12*
                  (4*s13^2 + 5*s13*s23 + 4*s23^2 - s12*(s13 + 2*s23)) + 
                 p2q^2*p3q*(-s12^3 + s12^2*(s13 - 2*s23) + s12*(4*s13^2 + 
                     5*s13*s23 + s23^2) + s13*(-2*s13^2 + s13*s23 + 
                     3*s23^2))) - p1q^2*(p2q^2*(-2*s13^3 + s12^2*(s13 - 
                     s23) + 4*s13^2*s23 + s12*(3*s13 - s23)*s23 + 
                   5*s13*s23^2 - s23^3) - p3q^2*s12*(s12^2 + 2*s12*
                    (s13 + s23) - s23*(4*s13 + 5*s23)) + p2q*p3q*(s12^3 + 
                   s12^2*(3*s13 + 2*s23) + 2*s23*(2*s13^2 + s13*s23 - 
                     s23^2) + s12*(4*s13^2 + 8*s13*s23 + 5*s23^2)))))/
             ((p1q + p2q + p3q)*s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
                (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                 p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                 p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                   s23^2)))) + (p2q*(s12 + s13 + s23)*
             (p1q^5*s23^2*(s12 + 2*(s13 + s23)) + 2*p2q^2*p3q*s13*(p3q*s12 - 
                p2q*s13)*(p3q*s12 - p2q*(s13 + s23)) + p1q*(-(p3q^4*s12^3) + 
                p2q^4*s13^2*(s12 + s13 + s23) + p2q*p3q^3*s12^2*(2*s12 + 
                  5*s13 + 4*s23) + p2q^3*p3q*s13*(-4*s12*s13 + 3*s13^2 - 
                  5*s12*s23 + s13*s23 - 2*s23^2) - p2q^2*p3q^2*s12*
                 (s12^2 - s12*s13 + 7*s13^2 + 4*s12*s23 + 9*s13*s23 + 
                  4*s23^2)) - p1q^4*s23*(p2q*(s12^2 + 3*s12*s13 + 4*s13^2 + 
                  s13*s23 - 3*s23^2) + 2*p3q*(s12^2 + 2*s12*(s13 + s23) - 
                  s23*(s13 + s23))) + p1q^3*(p3q^2*s12*(s12^2 + 
                  2*s12*(s13 + s23) - s23*(4*s13 + 5*s23)) + 
                p2q^2*(2*s13^3 + s12^2*(s13 - s23) - 4*s13^2*s23 - 
                  5*s13*s23^2 + s23^3 + s12*(2*s13^2 - 3*s13*s23 - s23^2)) + 
                p2q*p3q*(s12^3 - s12*(2*s13 + 3*s23)^2 - s12^2*(s13 + 
                    4*s23) + 2*s23*(-2*s13^2 - s13*s23 + s23^2))) + 
              p1q^2*(2*p3q^3*s12^2*(s13 + 2*s23) + p2q*p3q^2*s12*(4*s12^2 + 
                  5*s12*s13 - 4*s13^2 + 4*s12*s23 - 7*s13*s23 - 6*s23^2) + 
                p2q^3*s13*(s12^2 + 3*s12*s13 + 3*s13^2 + s13*s23 - 2*s23^2) - 
                p2q^2*p3q*(s12^3 + 3*s12^2*(s13 + 2*s23) + s13*(-2*s13^2 + 
                    3*s13*s23 + 5*s23^2) + s12*(8*s13^2 + 15*s13*s23 + 
                    7*s23^2)))))/(4*p1q*(p1q + p2q + p3q)*s13*
             (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*
          p1 . E0conj + (-1/8*(ep*p2q*(s12 + s13)*((p2q + p3q)^2*
                (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + p1q^4*s23^2*
                (s12 + s13 + s23) + 2*p1q^3*s23*(s12 + s13 + s23)*
                (p3q*(-s12 + s23) + p2q*(s12 - s13 + s23)) - p1q^2*
                (s12 + s13 + s23)*(2*p2q*p3q*(s12^2 + 3*s12*s13 + 2*s12*s23 + 
                   3*s13*s23) - p3q^2*(s12^2 - 4*s12*s23 + s23^2) - 
                 p2q^2*(-2*s12*s13 + s13^2 + 2*s12*s23 - 4*s13*s23 + 
                   s23^2)) - 2*p1q*(-(p3q^3*s12*(s12 - s23)*(s12 + s13 + 
                    s23)) + p2q^3*s13*(s12^2 - s13^2 + 2*s12*s23 + s23^2) - 
                 p2q^2*p3q*(s12^3 - s12^2*(s13 - 2*s23) + s12*s23*(-2*s13 + 
                     s23) + s13*(2*s13^2 + s13*s23 - s23^2)) + p2q*p3q^2*
                  (-s12^3 + 2*s12^2*s13 + s13*s23*(s13 + s23) + 
                   s12*(3*s13^2 + 5*s13*s23 + s23^2)))))/((p1q + p2q + p3q)*
              s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
                (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                 p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                 p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                   s23^2)))) - (p2q*(-(p1q^5*s23^2*(3*s12^2 + 7*s12*s13 + 
                 4*s13^2 + 6*s12*s23 + 7*s13*s23 + 3*s23^2)) + 
              (p2q - p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*(
                -(p3q*s12) + p2q*(s13 + s23)) + p1q^4*s23*(s12 + s13 + s23)*(
                p2q*(2*s12^2 + 8*s12*s13 + 8*s13^2 - 2*s12*s23 - s13*s23 - 
                  5*s23^2) + p3q*(6*s12^2 - 2*s23*(2*s13 + s23) + 
                  s12*(8*s13 + 3*s23))) - p1q^3*(s12 + s13 + s23)*(
                p3q^2*(3*s12^3 + s12^2*(4*s13 - 3*s23) - s23^3 - s12*s23*
                   (8*s13 + 3*s23)) + p2q^2*(4*s13^3 + 2*s12^2*(s13 - s23) - 
                  11*s13^2*s23 - 8*s13*s23^2 + s23^3 + s12*(5*s13^2 - 
                    10*s13*s23 - s23^2)) + 2*p2q*p3q*(s12^3 - 4*s12^2*s23 + 
                  s23*(-3*s13^2 + 2*s13*s23 + 2*s23^2) - 2*s12*(s13^2 + 
                    5*s13*s23 + 2*s23^2))) + p1q^2*(s12 + s13 + s23)*(
                -(p3q^3*s12*(3*s12^2 + 4*s12*s13 + 3*s23^2)) + 
                p2q^3*(-2*s12^2*s13 - 7*s13^3 - s13^2*s23 + 3*s13*s23^2 + 
                  s23^3 + 2*s12*s13*(-4*s13 + s23)) + p2q*p3q^2*(-6*s12^3 + 
                  s23^2*(-s13 + s23) + 6*s12*(s13 + s23)^2 - s12^2*
                   (7*s13 + 3*s23)) + p2q^2*p3q*(2*s12^3 + 2*s12^2*
                   (3*s13 + 5*s23) + s12*(9*s13^2 + 20*s13*s23 + 5*s23^2) - 
                  2*(s13^3 - 4*s13^2*s23 - s13*s23^2 + s23^3))) - 
              p1q*(p3q^4*s12^2*(s12 - 3*s23)*(s12 + s13 + s23) + 
                2*p2q*p3q^3*s12*(2*s12 + s23)*(s13 + s23)*(s12 + s13 + s23) + 
                p2q^4*s13*(3*s12^2*s13 + 2*s13^3 + 5*s13^2*s23 + 
                  5*s13*s23^2 + 2*s23^3 + s12*(5*s13^2 + 6*s13*s23 + 
                    2*s23^2)) - 2*p2q^3*p3q*(s12^3*s13 + s12^2*(3*s13^2 + 
                    4*s13*s23 - s23^2) + s12*(s13^3 + 7*s13^2*s23 + 
                    4*s13*s23^2 - s23^3) + s13*(-s13^3 + s13^2*s23 + 
                    4*s13*s23^2 + 2*s23^3)) - p2q^2*p3q^2*(s12^4 - 
                  s12^3*(s13 - 6*s23) - s13*s23*(s13^2 + 3*s13*s23 + 
                    2*s23^2) + s12^2*(5*s13^2 + 11*s13*s23 + 9*s23^2) + 
                  s12*(7*s13^3 + 14*s13^2*s23 + 10*s13*s23^2 + 4*s23^3)))))/
            (8*p1q*(p1q + p2q + p3q)*s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k]] + 
     (((9*ep*p1q*(s12 + s13 + s23)*(p3q*s12 - p2q*s13 + p1q*(2*s12 + s23)))/
          (16*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
         (9*(s12 + s13 + s23)*(p1q^3*s23*(s12 + s13 + s23) + 
            p1q^2*(p3q*(-s12^2 + s12*s13 + 2*s13*s23) + p2q*(s12*s13 - 
                s13^2 - s23^2)) + p1q*(-(p2q^2*s13*(s13 - 2*s23)) + 
              p3q^2*(s12^2 + 2*s12*s13 + 4*s12*s23 + 3*s13*s23 + 2*s23^2) + 
              p2q*p3q*(2*s12^2 + 4*s12*s13 + 5*s12*s23 + 6*s13*s23 + 
                2*s23^2)) - (p2q + p3q)*(p2q^2*s13^2 + p2q*p3q*s13*(s12 + 
                3*s13 + 2*s23) - p3q^2*(2*s12^2 + 4*s23*(s13 + s23) + 
                3*s12*(s13 + 2*s23)))))/(16*(p2q + p3q)*s23*
           (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*E0 . E0conj + 
       ((9*ep*p1q*(s12 + s13 + s23)*(p1q^4*s23^3 + (p2q + p3q)*
             (p3q*s12 - p2q*s13)^2*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + 
                s23)) - 2*p1q^3*s12*s23*(2*p3q*s23 + p2q*(s12 - s13 + 
                2*s23)) - 2*p1q*(p3q^3*s12*(s12^2 - 2*s12*s23 - s23^2) + 
              p2q^3*s13*(-s13^2 + 2*s13*s23 + s23^2) - p2q*p3q^2*(
                s12*s13*s23 + s13*s23^2 + 3*s12^2*(s13 + s23)) + 
              p2q^2*p3q*(3*s13^2*s23 + s12*(3*s13^2 + s13*s23 + s23^2))) + 
            p1q^2*(-(p3q^2*s23*(-5*s12^2 + 2*s12*s23 + s23^2)) + 
              2*p2q*p3q*(s12^3 + s12*(3*s13 - 2*s23)*s23 + 2*s13*s23^2 + 
                s12^2*(s13 + 2*s23)) + p2q^2*(-2*s12^2*s13 - 2*s12*s13*
                 (s13 - 2*s23) + s23*(-3*s13^2 + 2*s13*s23 + s23^2)))))/
          (8*(p1q + p2q + p3q)*s23*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))) + (9*(p1q^6*s23^3*(s12 + s13 + s23)^2 - 
            p1q^5*s23^2*(s12 + s13 + s23)*(p2q*(2*s13^2 + 2*s12*(s13 - s23) + 
                s13*s23 - s23^2) + p3q*(2*s12^2 + s12*(2*s13 - 5*s23) - 
                6*s23*(s13 + s23))) + p1q^4*s23*(s12 + s13 + s23)*
             (p3q^2*(s12^3 + s12^2*(s13 - 13*s23) + s12*s23*(-12*s13 + s23) + 
                s23^2*(10*s13 + 11*s23)) - 2*p2q*p3q*(s12^2*(s13 + 3*s23) + 
                2*s13*s23*(3*s13 + 4*s23) + s12*s13*(s13 + 12*s23)) + 
              p2q^2*(s13^3 - 2*s12^2*s23 - s13^2*s23 - 8*s13*s23^2 - 
                3*s23^3 + s12*(s13^2 - 10*s13*s23 - 3*s23^2))) + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q^3*s13*s23*(s12 + s13 + 
                s23) + p2q^3*s13*(s12 + s13 + s23)*(4*s13 + s23) - 
              p2q^2*p3q*s13*(4*s12^2 - 4*s13^2 + 5*s12*s23 - 3*s13*s23 + 
                s23^2) - p2q*p3q^2*(4*s12^2*(s13 + s23) + s23*(5*s13^2 + 
                  9*s13*s23 + 4*s23^2) + s12*(4*s13^2 + 13*s13*s23 + 
                  8*s23^2))) + p1q^3*s23*(s12 + s13 + s23)*
             (p2q^3*(6*s12^2*s13 + s13^3 + 17*s13^2*s23 + 5*s13*s23^2 - 
                s23^3 + 6*s12*s13*(2*s13 + s23)) + p3q^3*(7*s12^3 + 
                s12^2*(6*s13 - 20*s23) + 6*s23^2*(s13 + s23) - 5*s12*s23*
                 (4*s13 + 3*s23)) + p2q*p3q^2*(4*s12^3 + s12^2*(s13 - 
                  11*s23) - 2*s12*(2*s13^2 + 15*s13*s23 + 4*s23^2) - 
                s23*(12*s13^2 + 25*s13*s23 + 5*s23^2)) + p2q^2*p3q*(2*s12^3 + 
                s12^2*(8*s13 - 2*s23) + 5*s12*(3*s13^2 - 2*s13*s23 - s23^2) + 
                2*(3*s13^3 + 9*s13^2*s23 - 7*s13*s23^2 - 4*s23^3))) - 
            p1q^2*(s12 + s13 + s23)*(p3q^4*s23*(-13*s12^3 - s13*s23^2 + 
                12*s12*s23*(s13 + s23) + s12^2*(-10*s13 + 3*s23)) + 
              p2q^4*s13*(s12*s13*(4*s13 - s23) + s23*(14*s13^2 - 3*s13*s23 - 
                  3*s23^2)) + 2*p2q*p3q^3*(s12^3*(2*s13 - 5*s23) + 
                3*s12^2*(s13 - s23)*s23 + 2*s23^2*(s13 + s23)^2 + 
                s12*s23*(6*s13^2 + 4*s13*s23 - s23^2)) - 2*p2q^3*p3q*(
                s12^2*s13*(4*s13 + 5*s23) + s13*s23*(-6*s13^2 + 17*s13*s23 + 
                  8*s23^2) + s12*(-2*s13^3 + 13*s13^2*s23 + 10*s13*s23^2 + 
                  s23^3)) + p2q^2*p3q^2*(s12^3*(4*s13 - 5*s23) - 
                s12*s23*(21*s13^2 + 24*s13*s23 + 8*s23^2) - s12^2*
                 (8*s13^2 + 10*s13*s23 + 9*s23^2) + s23*(-2*s13^3 - 
                  27*s13^2*s23 - 4*s13*s23^2 + 4*s23^3))) + 
            p1q*(-(p2q^5*s13^2*(4*s12^2*s13 - 4*s13^3 + 5*s13^2*s23 + 
                 12*s13*s23^2 + 3*s23^3 + s12*s23*(13*s13 + 3*s23))) + 
              p3q^5*s12*s23*(7*s12^3 + 13*s12^2*(s13 + s23) - 2*s13*s23*
                 (s13 + s23) + 2*s12*(3*s13^2 + 5*s13*s23 + 3*s23^2)) - 
              p2q*p3q^4*(s12^4*(8*s13 - 2*s23) + 2*s13^2*s23^2*(s13 + s23) + 
                s12^3*(8*s13^2 + 21*s13*s23 - 9*s23^2) + 3*s12^2*s23*
                 (9*s13^2 + 4*s13*s23 - 5*s23^2) + 2*s12*s23*(6*s13^3 + 
                  9*s13^2*s23 - 2*s13*s23^2 - 4*s23^3)) + p2q^4*p3q*s13^2*(
                8*s12^3 + s12^2*(-12*s13 + 9*s23) - s12*(16*s13^2 + 
                  47*s13*s23 + 7*s23^2) + 4*(s13^3 - 6*s13^2*s23 - 
                  9*s13*s23^2 - 2*s23^3)) + p2q^2*p3q^3*(
                -(s12^4*(12*s13 + s23)) + 2*s13*s23*(s13 + s23)^2*
                 (3*s13 + 4*s23) + s12^3*(8*s13^2 - 13*s13*s23 + 3*s23^2) + 
                s12*s23*(31*s13^3 + 65*s13^2*s23 + 42*s13*s23^2 + 8*s23^3) + 
                s12^2*(20*s13^3 + 45*s13^2*s23 + 30*s13*s23^2 + 12*s23^3)) + 
              p2q^3*p3q^2*(-4*s12^4*s13 + s12^3*(24*s13^2 + 5*s13*s23 - 
                  s23^2) + s12^2*(12*s13^3 + 63*s13^2*s23 + 28*s13*s23^2 - 
                  s23^3) + s13*s23*(-17*s13^3 - 10*s13^2*s23 + 15*s13*s23^2 + 
                  8*s23^3) + s12*s13*(-16*s13^3 - 7*s13^2*s23 + 53*s13*
                   s23^2 + 28*s23^3)))))/(8*(p2q + p3q)*(p1q + p2q + p3q)*
           s23^2*(p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p1 . E0conj*p2 . E0 + ((9*ep*p1q^2*(s12 + s13 + s23)*
           (p1q^3*s23^2*(s12 + s23) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
             (s12 + s13 + s23) - p1q^2*s23*(p2q*(s12^2 + (s13 - s23)*s23) + 
              p3q*(2*s12^2 - s23^2 + s12*(s13 + s23))) - 
            p1q*(-(p2q*p3q*(s12 + s13)*(s12 - s13 - 2*s23)*(s12 + s23)) + 
              p3q^2*s12*(-s12^2 + s12*(-s13 + s23) + s23*(s13 + 2*s23)) + 
              p2q^2*s13*(s12^2 + s12*(s13 + s23) + s23*(s13 + 2*s23)))))/
          (4*(p1q + p2q + p3q)*s23*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))) + (9*(s12 + s13 + s23)*
           (p1q^5*s23^3*(p2q*(s12 + s23) + p3q*(3*s12 + 2*s13 + 3*s23)) - 
            p1q^4*s23^2*(p2q*p3q*(3*s12^2 + 11*s12*s13 + 4*s13^2 + 
                3*s12*s23 + 13*s13*s23) + p3q^2*(6*s12^2 + 7*s12*s13 + 
                2*s13^2 + 3*s12*s23 + 2*s13*s23 - 3*s23^2) + p2q^2*(s12^2 + 
                2*s12*(3*s13 + s23) + s23*(7*s13 + s23))) - 
            2*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(p2q*p3q*(s12 - s13)*s13 - 
              p2q^2*s13^2 + p3q^2*(2*s23*(s13 + s23) + s12*(s13 + 2*s23))) - 
            2*p1q*(p2q + p3q)^2*(p2q^3*s13^3*(s12 - s13 + 3*s23) + 
              p3q^3*s12*(s12*(s13 - 2*s23)*s23 + 2*s12^2*(s13 + s23) - 
                4*s23^2*(s13 + s23)) + p2q^2*p3q*s13^2*(-2*s12^2 + 
                4*s12*s13 + s23*(5*s13 + 2*s23)) - p2q*p3q^2*s13*(-s12^3 + 
                5*s12^2*(s13 + s23) + 4*s23^2*(s13 + s23) + 2*s12*s23*
                 (3*s13 + 4*s23))) + p1q^3*s23*(p2q^3*s13*(3*s12^2 + 
                7*s12*s13 + 3*s12*s23 + 13*s13*s23) + p2q*p3q^2*(2*s12^3 + 
                7*s12^2*s13 + 2*s13^3 + 7*s13^2*s23 - 18*s13*s23^2 - 
                8*s23^3 + s12*(7*s13^2 - s13*s23 - 10*s23^2)) + 
              p3q^3*(3*s12^3 + s12^2*(7*s13 - 3*s23) + s12*(2*s13^2 - 
                  3*s13*s23 - 10*s23^2) - 2*s23*(s13^2 + 4*s13*s23 + 
                  2*s23^2)) + p2q^2*p3q*(s12^3 + s12^2*(7*s13 + s23) + 
                s12*(14*s13^2 + 3*s13*s23 - 4*s23^2) + 2*(s13^3 + 
                  11*s13^2*s23 - 5*s13*s23^2 - 2*s23^3))) - 
            p1q^2*(p2q^4*s13^2*(2*s12*s13 - s12*s23 + 9*s13*s23 - 5*s23^2) + 
              p3q^4*(s12^3*(2*s13 - 3*s23) + 4*s23^3*(s13 + s23) - 
                s12^2*s23*(9*s13 + 11*s23) - 2*s12*s23*(s13^2 + 6*s13*s23 + 
                  2*s23^2)) - 2*p2q^3*p3q*s13*(s12^2*(2*s13 + 3*s23) + 
                s23*(-8*s13^2 + 13*s13*s23 + 4*s23^2) + s12*(-2*s13^2 + 
                  8*s13*s23 + 7*s23^2)) + 2*p2q*p3q^3*(s12^3*(2*s13 - s23) - 
                s12*s23*(3*s13^2 + 15*s13*s23 + 4*s23^2) - s12^2*(2*s13^2 + 
                  6*s13*s23 + 9*s23^2) + s23*(s13^3 - 6*s13^2*s23 + 
                  4*s23^3)) + p2q^2*p3q^2*(s12^3*(2*s13 - s23) - 
                s12^2*(8*s13^2 + 15*s13*s23 + 9*s23^2) + s12*(2*s13^3 - 
                  25*s13^2*s23 - 36*s13*s23^2 - 4*s23^3) + s23*(7*s13^3 - 
                  35*s13^2*s23 - 12*s13*s23^2 + 4*s23^3)))))/
          (4*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((-9*ep*p1q*(s12 + s13 + s23)*((p2q + p3q)*(p3q*s12 - 
                 p2q*s13)^2 + p1q^3*s23^2 + p1q^2*s23*(p3q*(-2*s12 + s23) + 
                p2q*(s12 - 2*s13 + 2*s23)) + p1q*(p2q^2*s13*(s12 + s13 - 
                  3*s23) + p3q^2*s12*(s12 - 2*s23) - p2q*p3q*(s12^2 + 
                  2*s12*s13 + 3*s12*s23 + 2*s13*s23))))/(4*(p1q + p2q + p3q)*
             s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) + (9*(-2*p2q^2*(p2q + p3q)*s13*(p3q*s12 - p2q*s13)^
                2*(s12 + s13 + s23) + p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + 
                s23) - p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*(p2q*s12 + 
                2*p3q*s12 + 4*p2q*s13 - p3q*s23) + p1q^2*s23*(s12 + s13 + 
                s23)*(p3q^3*s12*(s12 - 2*s23) + p2q^3*s13*(3*s12 + 5*s13 - 
                  s23) + p2q^2*p3q*(s12^2 + 3*s13^2 + s12*(s13 - 3*s23) - 
                  7*s13*s23 - 2*s23^2) + p2q*p3q^2*(2*s12^2 - 5*s12*s23 - 
                  2*s23*(2*s13 + s23))) + p1q*(-(p2q^4*s13^2*(2*s13 - 3*s23)*
                  (s12 + s13 + s23)) + p3q^4*s12^2*s23*(s12 + s13 + s23) + 
                2*p2q*p3q^3*s12*s23*(2*s12 + s23)*(s12 + s13 + s23) - 
                p2q^2*p3q^2*(s12^3*(2*s13 - 3*s23) + s12^2*(2*s13^2 + 
                    3*s13*s23 - 5*s23^2) + s12*s23*(5*s13^2 + 4*s13*s23 - 
                    2*s23^2) + s13*s23*(s13^2 + 3*s13*s23 + 2*s23^2)) + 
                2*p2q^3*p3q*s13*(s12^2*(2*s13 + s23) + s23*(4*s13^2 + 
                    5*s13*s23 + s23^2) + s12*(2*s13^2 + 7*s13*s23 + 
                    2*s23^2)))))/(4*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))))*p1 . E0conj + 
         ((-9*ep*p1q*(s12 + s13 + s23)*((p2q + p3q)^2*(p3q*s12 - p2q*s13)^
                2*s23 + p1q^4*s23^3 + 2*p1q^3*s23*(p3q*s23*(-s12 + s23) + 
                p2q*(s12^2 + s23*(-2*s13 + s23) + s12*(-s13 + s23))) + 
              p1q^2*(p3q^2*s23*(s12^2 - 4*s12*s23 + s23^2) - 2*p2q*p3q*
                 (s12^3 + s12^2*s13 + (3*s13 - s23)*s23^2 + s12*s23*
                   (3*s13 + s23)) + p2q^2*(2*s12^2*s13 + 2*s12*s13^2 + 
                  s23*(5*s13^2 - 4*s13*s23 + s23^2))) - 2*p1q*(p3q^3*s12*s23*
                 (-s12 + s23) + p2q^3*s13*(s12*s13 + s13^2 - s13*s23 + 
                  s23^2) + p2q*p3q^2*(s12^3 + s12^2*s13 + s13*s23^2 + 
                  s12*s23*(3*s13 + 2*s23)) + p2q^2*p3q*(-2*s12^2*s13 + 
                  2*s13*s23*(-s13 + s23) + s12*(-2*s13^2 + s13*s23 + 
                    s23^2)))))/(8*(p1q + p2q + p3q)*s23*
             (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + 
                p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + 
                p3q*(2*s12^2 + s12*s23 - s23^2)) + p1q*(p2q^2*s13^2*
                 (s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 2*s23^2) - 
                2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
           (9*(-(p1q^6*s23^3*(s12 + s13 + s23)^2) + p1q^5*s23^2*(s12 + s13 + 
                s23)*(p2q*(2*s13^2 + s13*s23 + 3*s23^2 + 2*s12*(s13 + s23)) + 
                p3q*(2*s12^2 + 2*s23*(-s13 + s23) + s12*(2*s13 + 3*s23))) - 
              p1q^4*s23*(s12 + s13 + s23)*(p3q^2*(s12^3 + (2*s13 - 7*s23)*
                   s23^2 - s12*s23*(4*s13 + s23) + s12^2*(s13 + 3*s23)) - 
                2*p2q*p3q*(s12^2*(s13 - 3*s23) + s12*(s13^2 - 2*s13*s23 - 
                    2*s23^2) + 2*s23*(s13^2 - 4*s13*s23 + 2*s23^2)) + 
                p2q^2*(s13^3 + 2*s12^2*s23 - s13^2*s23 + 16*s13*s23^2 - 
                  s23^3 + s12*(s13^2 + 10*s13*s23 + 3*s23^2))) - 
              p1q*(p2q + p3q)*(s12 + s13 + s23)*(-(p3q^4*s12*s23*(3*s12^2 - 
                   2*s12*s13 + 4*s12*s23 + 2*s13*s23)) + p2q^4*s13^2*
                 (4*s12*s13 - 4*s13^2 + 13*s13*s23 - 3*s23^2) + p2q^3*p3q*
                 s13^2*(-8*s12^2 + 16*s12*s13 - 9*s12*s23 + 23*s13*s23 - 
                  3*s23^2) + p2q^2*p3q^2*(4*s12^3*s13 - s12*s13*s23*
                   (33*s13 + 16*s23) + 2*s13*s23*(s13^2 - 9*s13*s23 - 
                    4*s23^2) - s12^2*(20*s13^2 + 5*s13*s23 + s23^2)) + 
                p2q*p3q^3*(s12^2*(13*s13 - 9*s23)*s23 - 2*s13^2*s23^2 + 
                  s12^3*(8*s13 + s23) - 2*s12*s23*(2*s13^2 + 3*s13*s23 + 
                    4*s23^2))) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(
                p2q^3*s13*(4*s13 - s23)*(s12 + s13 + s23) - p3q^3*s13*s23*
                 (s12 + s13 + s23) + p2q^2*p3q*s13*(-4*s12^2 + 4*s13^2 - 
                  7*s12*s23 + s13*s23 - 3*s23^2) - p2q*p3q^2*
                 (4*s12^2*(s13 + s23) + s23*(7*s13^2 + 11*s13*s23 + 
                    4*s23^2) + s12*(4*s13^2 + 15*s13*s23 + 8*s23^2))) + 
              p1q^3*s23*(s12 + s13 + s23)*(p2q^3*(6*s12^2*s13 - s13^3 + 
                  27*s13^2*s23 - 7*s13*s23^2 + s23^3 + 6*s12*s13*(2*s13 + 
                    s23)) + p3q^3*(s12^3 + s12*(4*s13 - 11*s23)*s23 - 
                  2*(s13 - 2*s23)*s23^2 - 2*s12^2*(s13 + 4*s23)) + 
                p2q*p3q^2*(4*s12^3 + s12^2*(11*s13 - 9*s23) + 2*s12*
                   (6*s13^2 + 5*s13*s23 - 12*s23^2) + s23*(12*s13^2 - 
                    25*s13*s23 + s23^2)) + p2q^2*p3q*(2*s12^3 + 
                  s12^2*(8*s13 - 2*s23) + s12*(13*s13^2 - 6*s13*s23 - 
                    13*s23^2) - 2*(s13^3 - 15*s13^2*s23 + 19*s13*s23^2 + 
                    s23^3))) - p1q^2*(s12 + s13 + s23)*(p3q^4*s23*
                 (-5*s12^3 + s12^2*(2*s13 - s23) - 4*s12*(s13 - 2*s23)*s23 + 
                  s13*s23^2) + p2q^4*s13*(s12*s13*(4*s13 - s23) + 
                  3*s23*(6*s13^2 - 5*s13*s23 + s23^2)) + 2*p2q*p3q^3*
                 (s12^3*(2*s13 - 5*s23) - s12^2*s23*(s13 + 7*s23) + 
                  2*s23^2*(-3*s13^2 + 2*s13*s23 + s23^2) + s12*s23*
                   (-6*s13^2 - 12*s13*s23 + 5*s23^2)) - 2*p2q^3*p3q*
                 (s12^2*s13*(4*s13 + 5*s23) + s13^2*s23*(-10*s13 + 29*s23) - 
                  s12*(2*s13^3 - 17*s13^2*s23 - 10*s13*s23^2 + s23^3)) + 
                p2q^2*p3q^2*(s12^3*(4*s13 - 5*s23) + s12*s23*(-29*s13^2 - 
                    24*s13*s23 + 4*s23^2) - s12^2*(8*s13^2 + 6*s13*s23 + 
                    13*s23^2) + s23*(10*s13^3 - 39*s13^2*s23 + 12*s13*s23^2 + 
                    4*s23^3)))))/(8*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
             (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + 
                p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + 
                p3q*(2*s12^2 + s12*s23 - s23^2)) + p1q*(p2q^2*s13^2*
                 (s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 2*s23^2) - 
                2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k]] + 
     ((-1/16*(ep*p3q*(s12 + s13)*(s12 + s13 + s23)*(p3q*s12 - p2q*s13 + 
             p1q*(2*s12 + s23)))/(s12*(-(p2q*s13) + p1q*(s12 + s23) + 
             p3q*(s12 + s23))) + (p3q*(s12 + s13 + s23)*
           ((p3q*s12 - p2q*s13)*(-(p2q*s13) + p3q*(s12 + s23)) + 
            p1q^2*(2*s12^2 + 4*s12*s23 + s23*(s13 + 3*s23)) + 
            p1q*(-(p2q*s13*(2*s12 + s13 + 4*s23)) + p3q*(2*s12^2 + s12*s13 + 
                4*s12*s23 + 2*s13*s23 + 3*s23^2))))/(16*p1q*s12*
           (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*E0 . E0conj + 
       ((ep*p3q*(s12 + s13 + s23)*(-((p2q + p3q)^2*(s12 - s13)*
              (p3q*s12 - p2q*s13)^2) + p1q^4*s23^2*(s12 + s13 + 2*s23) - 
            2*p1q*(p2q + p3q)*(p2q^2*s13*(s12*(2*s13 - s23) + 
                s13*(s13 + s23)) - p2q*p3q*(s12*s13*s23 + s13^2*s23 + 
                s12^2*(2*s13 + s23)) + p3q^2*s12*(s13*s23 - 
                s12*(s13 + 2*s23))) - 2*p1q^3*s23*(p3q*(s12^2 - 
                s23*(s13 + s23) + s12*(s13 + 2*s23)) + p2q*(s12^2 + 
                2*s12*(s13 + s23) + s13*(s13 + 3*s23))) + 
            p1q^2*(p3q^2*(s12^3 + s13*s23^2 + s12^2*(s13 + 2*s23) - 
                s12*s23*(4*s13 + 5*s23)) + 2*p2q*p3q*(s12^3 - 2*s13*s23^2 + 
                2*s12^2*(s13 + s23) + s12*(s13^2 - 2*s23^2)) + 
              p2q^2*(2*s12^2*s13 + s12*(3*s13^2 + 8*s13*s23 - s23^2) + 
                s13*(s13^2 + 6*s13*s23 + s23^2)))))/(8*(p1q + p2q + p3q)*s12*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (p3q*(-((p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
              (-(p2q*s13) + p3q*(s12 + s23))) + p1q^5*s23^2*
             (2*s12^2 + 3*s12*(s13 + s23) + (s13 + s23)^2) - 
            p1q^4*s23*(s12 + s13 + s23)*(p3q*(4*s12^2 + 2*s12*s13 - 
                3*s12*s23 - 2*s13*s23 - 3*s23^2) + p2q*(2*s12^2 + 2*s13^2 + 
                3*s13*s23 + 2*s23^2 + 2*s12*(3*s13 + s23))) + 
            p1q^3*(s12 + s13 + s23)*(p2q^2*(2*s12^2*s13 + 4*s12*s13^2 + 
                s13^3 + 3*s13^2*s23 + 3*s13*s23^2 - s23^3) + p3q^2*(2*s12^3 + 
                s12^2*(s13 - 9*s23) - 4*s12*s23*(s13 + s23) + 
                s23^2*(s13 + s23)) + 2*p2q*p3q*(s12^3 + s12^2*(s13 - 2*s23) - 
                2*s23^2*(s13 + s23) + s12*(s13^2 - 3*s13*s23 - 2*s23^2))) + 
            p1q^2*(s12 + s13 + s23)*(p2q^3*s13*(2*s12*s13 - s13^2 + 
                3*s23^2) + p2q^2*p3q*(s13 + s23)*(-2*s13^2 + 7*s13*s23 - 
                s23^2 + s12*(3*s13 + s23)) + p3q^3*(s12 - s23)*(5*s12^2 + 
                s23^2 + 2*s12*(s13 + 2*s23)) + p2q*p3q^2*(6*s12^3 + 
                2*s12*s23*(2*s13 + s23) + s12^2*(s13 + 4*s23) + 
                s23*(2*s13^2 + 3*s13*s23 - 2*s23^2))) + 
            p1q*(-(p2q^4*s13^2*(s12 + s13 + s23)*(s13 + 3*s23)) - 
              2*p2q^3*p3q*s13*(2*s13^3 + s12^2*(2*s13 - s23) + 4*s13^2*s23 + 
                s13*s23^2 - s23^3 + s12*(4*s13^2 + 3*s13*s23 - 2*s23^2)) + 
              p3q^4*s12*(2*s12^3 + 2*s23^2*(s13 + s23) + s12^2*(3*s13 + 
                  5*s23) + s12*(s13^2 + 4*s13*s23 + 5*s23^2)) + 
              2*p2q*p3q^3*(s12^4 + s13*s23^2*(s13 + s23) + s12^3*
                 (s13 + 3*s23) + s12^2*(-s13^2 + 3*s13*s23 + 4*s23^2) + 
                s12*(-s13^3 + 4*s13*s23^2 + 2*s23^3)) + p2q^2*p3q^2*(
                s12^3*(3*s13 + s23) + s12^2*(5*s13^2 + 12*s13*s23 + 
                  3*s23^2) + s12*(3*s13^3 + 13*s13^2*s23 + 14*s13*s23^2 + 
                  2*s23^3) + s13*(s13^3 + 4*s13^2*s23 + 7*s13*s23^2 + 
                  4*s23^3)))))/(8*p1q*(p1q + p2q + p3q)*s12*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p1 . E0conj*p2 . E0 + 
       (-1/4*(ep*p1q*p3q*(s12 + s13)*(s12 + s13 + s23)*
            ((p2q + p3q)^2*s13*(-(p3q*s12) + p2q*s13) + p1q^2*s23*
              (p3q*s13 + p2q*(s12 + s23)) - p1q*(p3q^2*s13*(s12 - s23) + 
               p2q^2*s13*(s12 + 2*s23) + p2q*p3q*(s12^2 + 4*s12*s13 + s13^2 + 
                 s12*s23 + 2*s13*s23))))/((p1q + p2q + p3q)*s12*
            (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
              (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*
                (2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
             p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (p3q*(s12 + s13 + s23)*(2*p1q^4*s23^2*(2*s12 + s13 + 2*s23) + 
            2*(p3q*s12 - p2q*s13)*(p2q^3*s13^2 + p2q*p3q^2*(s12 - 2*s13)*(
                s12 + s23) - p2q^2*p3q*s13*(s12 - 2*s13 + s23) + 
              p3q^3*s12*(2*s12 + s13 + 2*s23)) - p1q^3*s23*
             (p3q*(8*s12^2 + 5*s12*s13 + s13^2 - 2*s13*s23 - 8*s23^2) + 
              p2q*(s12^2 + 9*s12*s13 + 4*s13^2 - s12*s23 + 9*s13*s23 - 
                2*s23^2)) + p1q^2*(p2q^2*s13*(s12^2 + 5*s12*s13 + 2*s13^2 - 
                4*s12*s23 + 6*s13*s23 - 6*s23^2) + p3q^2*(4*s12^3 + 
                3*s12^2*(s13 - 4*s23) - s13^2*s23 + 4*s23^3 + 
                s12*(s13^2 - 7*s13*s23 - 12*s23^2)) + p2q*p3q*(s12^3 + 
                s13^3 - 4*s13^2*s23 - 16*s13*s23^2 + 2*s23^3 - 
                s12^2*(3*s13 + 5*s23) + s12*(s13^2 - 17*s13*s23 - 
                  4*s23^2))) + p1q*(p2q^3*s13^2*(3*s12 - s13 + 6*s23) + 
              p3q^3*s12*(8*s12^2 + 5*s12*s13 + s13^2 - 2*s13*s23 - 8*s23^2) + 
              p2q^2*p3q*s13*(-3*s12^2 + 11*s12*s13 + 2*s13^2 - 4*s12*s23 + 
                12*s13*s23 - 4*s23^2) + p2q*p3q^2*(4*s12^3 - 10*s12^2*s13 - 
                s12*(3*s13^2 + 16*s13*s23 + 4*s23^2) - s13*(s13^2 + 
                  4*s13*s23 + 8*s23^2)))))/(4*(p1q + p2q + p3q)*s12*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p2 . E0*p2 . E0conj + p1 . E0*
        ((-1/4*(ep*p3q*(s12 + s13 + s23)*((p2q + p3q)*(p3q^2*s12^2 - 
                 3*p2q*p3q*s12*s13 + 2*p2q^2*s13^2) + p1q^3*s23^2 + p1q^2*s23*
                (p3q*(-2*s12 + s23) + p2q*(s12 - s13 + 2*s23)) - p1q*
                (-(p3q^2*s12*(s12 - 2*s23)) + p2q^2*s13*(s12 + 4*s23) + 
                 p2q*p3q*(s12^2 + s13*s23 + 3*s12*(s13 + s23)))))/
             ((p1q + p2q + p3q)*s12*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*
                p3q*s12*(p2q*s13 + p1q*s23))) + (p3q*(s12 + s13 + s23)*
             (2*p2q^2*p3q*s13*(p3q*s12 - p2q*s13) + p1q^4*s23^2 + 
              p1q^3*s23*(-(p2q*(s12 + 3*s13)) + p3q*(-2*s12 + s23)) + 
              p1q*(p3q^3*s12^2 - p2q^2*p3q*s12*s13 + 2*p2q^3*s13^2 + 
                p2q*p3q^2*s12*(3*s12 - s13 + 2*s23)) + p1q^2*(p3q^2*s12*
                 (s12 - 2*s23) + p2q^2*s13*(s12 + 2*s13 - 2*s23) + 
                p2q*p3q*(s12^2 - s23*(3*s13 + 2*s23) - s12*(s13 + 3*s23)))))/
            (4*p1q*(p1q + p2q + p3q)*s12*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
               2 - 2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj + 
         ((ep*p3q*(s12 + s13)*((p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + 
                s13 + s23) - 2*p1q^3*(p2q*(s12 + s13) + p3q*(s12 - s23))*s23*(
                s12 + s13 + s23) + p1q^4*s23^2*(s12 + s13 + s23) + 
              p1q^2*(s12 + s13 + s23)*(2*p2q*p3q*s12*(s12 + s13 - 2*s23) + 
                p2q^2*(2*s12*s13 + s13^2 + s23^2) + p3q^2*(s12^2 - 
                  4*s12*s23 + s23^2)) - 2*p1q*(-(p3q^3*s12*(s12 - s23)*
                  (s12 + s13 + s23)) + p2q^3*s13*s23*(s12 + s13 + s23) - 
                p2q*p3q^2*(2*s12^3 - s12*s23^2 + s13*s23*(s13 + s23) + 
                  s12^2*(2*s13 + s23)) + p2q^2*p3q*(s13*(s13 + s23)^2 + 
                  s12^2*(2*s13 + s23) + s12*(3*s13^2 + 4*s13*s23 + s23^2)))))/
            (8*(p1q + p2q + p3q)*s12*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))) + (p3q*(p1q^5*s23^2*(4*s12^2 + 
                5*s12*s13 + s13^2 + 9*s12*s23 + 6*s13*s23 + 5*s23^2) + 
              (p2q - p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*(
                -(p2q*s13) + p3q*(s12 + s23)) - p1q^4*s23*(s12 + s13 + s23)*(
                p2q*(2*s12^2 + 2*s13^2 + 15*s13*s23 - 2*s23^2 + 
                  2*s12*(5*s13 + s23)) + p3q*(8*s12^2 + s12*(2*s13 + s23) - 
                  s23*(2*s13 + 11*s23))) + p1q^3*(s12 + s13 + s23)*(
                p2q^2*(2*s12^2*s13 + 6*s12*s13^2 + s13^3 + 15*s13^2*s23 - 
                  9*s13*s23^2 + s23^3) + p3q^2*(4*s12^3 + s12^2*(s13 - 
                    13*s23) - 4*s12*s23*(s13 + 4*s23) + s23^2*(s13 + 
                    7*s23)) + 2*p2q*p3q*(s12^3 - 12*s13*s23^2 - 
                  s12^2*(s13 + 2*s23) + s12*(s13^2 - 7*s13*s23 - 6*s23^2))) + 
              p1q^2*(s12 + s13 + s23)*(p2q^3*s13*(2*s12*s13 - 5*s13^2 + 
                  12*s13*s23 - 3*s23^2) + p3q^3*(9*s12^3 + s12^2*(2*s13 - 
                    s23) + s23^3 - s12*s23*(2*s13 + 13*s23)) + p2q*p3q^2*
                 (6*s12^3 - 6*s12*s23*(2*s13 + s23) + s12^2*(-11*s13 + 
                    8*s23) + s23*(2*s13^2 - 11*s13*s23 - 2*s23^2)) + 
                p2q^2*p3q*(-2*s13^3 + 21*s13^2*s23 - 2*s13*s23^2 + s23^3 + 
                  s12*(15*s13^2 + 4*s13*s23 - s23^2))) - 
              p1q*(p2q^4*s13^2*(5*s13 - 3*s23)*(s12 + s13 + s23) + 
                2*p2q^3*p3q*s13*(4*s13^3 + 4*s13^2*s23 + s13*s23^2 + s23^3 + 
                  s12^2*(-2*s13 + s23) + s12*(2*s13^2 - s13*s23 + 2*s23^2)) - 
                p3q^4*s12*(6*s12^3 - 2*s23^2*(s13 + s23) + s12^2*(7*s13 + 
                    11*s23) + s12*(s13^2 + 6*s13*s23 + 3*s23^2)) - 
                2*p2q*p3q^3*(s12^4 - 5*s12^3*(s13 - s23) - s13*s23^2*
                   (s13 + s23) + s12^2*(-7*s13^2 - 7*s13*s23 + 6*s23^2) - 
                  s12*(s13^3 + 6*s13^2*s23 + 4*s13*s23^2 - 2*s23^3)) + 
                p2q^2*p3q^2*(s12^3*(s13 + s23) + s12^2*(-13*s13^2 + 
                    2*s13*s23 + 3*s23^2) - s12*(15*s13^3 + 27*s13^2*s23 + 
                    2*s13*s23^2 - 2*s23^3) - s13*(s13^3 + 14*s13^2*s23 + 
                    17*s13*s23^2 + 4*s23^3)))))/(8*p1q*(p1q + p2q + p3q)*s12*
             (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + 
                p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + 
                p3q*(2*s12^2 + s12*s23 - s23^2)) + p1q*(p2q^2*s13^2*
                 (s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 2*s23^2) - 
                2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k]] + 
     ((-9*p2q*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2*(2*s13 + s23) - 
          (p2q + p3q)^3*s23*(p2q*s13*(2*s12 + 2*s13 + s23) + 
            p3q*(2*s12^2 + 4*s13*(s13 + s23) + 3*s12*(2*s13 + s23))) - 
          p1q^2*s23*(p3q^2*(8*s12*s13 + 4*s13^2 + 3*s12*s23 + 3*s13*s23) + 
            4*p2q*p3q*(s13^2 + s12*(s13 + s23)) + p2q^2*(s12*(4*s13 + s23) + 
              s13*(8*s13 + 5*s23))) - p1q*(p2q + p3q)*
           (-(p2q^2*(4*s13^3 + 3*s13^2*s23 + s23^3 + s13*s23*(-s12 + 
                 2*s23))) - p3q^2*(s12^2*(4*s13 + s23) + s12*s23*(s13 + 
                2*s23) + s23^2*(4*s13 + 3*s23)) + p2q*p3q*(-(s12^2*s23) + 
              s23*(s13^2 - 6*s13*s23 - 4*s23^2) + s12*(8*s13^2 + 4*s13*s23 - 
                2*s23^2))))*E0 . E0conj)/(16*p1q*(p2q + p3q)^2*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) + 
       ((-9*ep*p1q*p2q*(s12 + s13 + s23)*(p3q^2*s12^2 + p1q^2*s23^2 + 
            p2q^2*s13*(s13 + s23) - p1q*p2q*s23*(2*s12 + 2*s13 + s23) - 
            p3q*s12*(2*p1q*s23 + p2q*(2*s13 + s23))))/(4*(p1q + p2q + p3q)*
           s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (9*p2q*(s12 + s13 + s23)*
           (-(p1q^5*(p3q*(5*s12 - 3*s13 - 2*s23) + p2q*(s12 + 9*s13 - 2*s23))*
              s23^3) + 2*p1q^6*s23^4 - (p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*
             (-(p3q*s23^2) + p2q*(8*s12*s13 + 8*s13^2 + 4*s13*s23 - s23^2)) + 
            p1q^4*s23^2*(2*p2q*p3q*(s12^2 + 4*s12*s13 - 3*s13^2 + 2*s13*s23 + 
                4*s23^2) + p2q^2*(12*s13^2 - 4*s13*s23 + 5*s23^2 + 
                2*s12*(s13 + 2*s23)) + p3q^2*(4*s12^2 - 6*s12*s13 + 
                s23*(12*s13 + 7*s23))) + p1q^2*s23*(p2q^4*(-4*s12^2*s13 + 
                16*s13^3 + 4*s12*s13*(4*s13 - 5*s23) - 9*s13^2*s23 - 
                16*s13*s23^2 + s23^3) + p3q^4*(4*s12^3 + s23^3 + 
                s12^2*(12*s13 + s23) - 2*s12*s23*(7*s13 + 6*s23)) + 
              p2q^2*p3q^2*(8*s12^3 + 24*s13^3 + 3*s12^2*(8*s13 - s23) - 
                41*s13^2*s23 - 36*s13*s23^2 + 6*s23^3 + s12*(28*s13^2 - 
                  66*s13*s23 - 28*s23^2)) + 4*p2q^3*p3q*(s12^3 + 
                2*s12^2*s13 + 10*s13^3 - 8*s13^2*s23 - 10*s13*s23^2 + s23^3 + 
                s12*(12*s13^2 - 13*s13*s23 - 2*s23^2)) + 2*p2q*p3q^3*(
                4*s12^3 + s12^2*(12*s13 + s23) + s23*(-7*s13^2 - 4*s13*s23 + 
                  2*s23^2) - 2*s12*(s13^2 + 10*s13*s23 + 7*s23^2))) - 
            p1q^3*s23*(p3q^3*(s12^3 - 3*s12^2*(s13 - 2*s23) - 
                s23^2*(7*s13 + 6*s23) + s12*s23*(24*s13 + 11*s23)) + 
              p2q^3*(5*s13^3 + 6*s13^2*s23 + 7*s13*s23^2 - 6*s23^3 + 
                s12*(s13^2 + 12*s13*s23 - 5*s23^2)) + p2q^2*p3q*(-3*s13^3 - 
                2*s12^2*(s13 - 4*s23) + 30*s13^2*s23 + 9*s13*s23^2 - 
                14*s23^3 + s12*(-9*s13^2 + 28*s13*s23 + 3*s23^2)) + 
              p2q*p3q^2*(s12^3 + s12^2*(3*s13 + 10*s23) + s23*(28*s13^2 + 
                  3*s13*s23 - 10*s23^2) + s12*(6*s13^2 + 40*s13*s23 + 
                  19*s23^2))) - p1q*(p2q + p3q)*(-(p3q^4*s12*s23*
                (3*s12^2 + 7*s12*s13 + 6*s12*s23 - 2*s23^2)) + 
              p2q^4*s13*(8*s13^3 + s12*s13*(8*s13 - 23*s23) - 19*s13^2*s23 - 
                14*s13*s23^2 + 2*s23^3) + 2*p2q*p3q^3*(s12^3*(4*s13 - 
                  3*s23) + s13*s23^3 + s12^2*(4*s13^2 - 8*s13*s23 - 
                  6*s23^2) + s12*s23*(-s13^2 + 2*s13*s23 + 3*s23^2)) - 
              2*p2q^3*p3q*(s12^2*s13*(8*s13 + s23) + s13*(-4*s13^3 + 
                  19*s13^2*s23 + 12*s13*s23^2 - 3*s23^3) + s12*(4*s13^3 + 
                  24*s13^2*s23 - 4*s13*s23^2 - s23^3)) + p2q^2*p3q^2*(
                s12^3*(8*s13 - 7*s23) + s13*s23*(-23*s13^2 - 14*s13*s23 + 
                  6*s23^2) - s12^2*(8*s13^2 + 23*s13*s23 + 10*s23^2) + 
                s12*(-16*s13^3 - 39*s13^2*s23 + 4*s13*s23^2 + 6*s23^3)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*
        p1 . E0conj*p2 . E0 + ((9*ep*p1q^2*p2q*s23*(s12 + s13 + s23)*
           (p3q*s12 + p2q*(2*s12 + s13) - p1q*s23))/(4*(p1q + p2q + p3q)*s13*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (9*p2q*(s12 + s13 + s23)*
           (p1q^5*(p2q - 3*p3q)*s23^4 - 2*(p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*
             (2*p3q*s13*(s13 + s23) + p3q*s12*(2*s13 + s23) + 
              p2q*s13*(2*s12 + 2*s13 + s23)) + p1q^4*s23^3*
             (p2q^2*(s12 + 2*s23) + p3q^2*(10*s12 + 7*s13 + 2*s23) + 
              p2q*p3q*(s12 + 13*s13 + 2*s23)) - p1q^3*s23^2*
             (p2q^2*p3q*(3*s12^2 + 25*s12*s13 + 28*s13^2 + 4*s12*s23 - 
                6*s23^2) + p2q*p3q^2*(8*s12^2 + 29*s12*s13 + 21*s13^2 + 
                8*s12*s23 - 2*s13*s23 - 6*s23^2) + p2q^3*(3*s12*s13 + 
                7*s13^2 - 2*s12*s23 + 2*s13*s23 - 2*s23^2) + 
              p3q^3*(11*s12^2 + 19*s12*s13 + 6*s13^2 + 4*s12*s23 + 
                2*s13*s23 - 2*s23^2)) - 2*p1q^2*(p2q + p3q)*s23*
             (p2q^3*s13*(s12^2 - 3*s12*s13 - 5*s13^2 + 4*s12*s23 + 
                3*s13*s23 + 3*s23^2) - p2q*p3q^2*(s12^3 + s12^2*(7*s13 + 
                  s23) + s13*(3*s13^2 - 7*s13*s23 - 7*s23^2) + 
                s12*(6*s13^2 - 7*s13*s23 - 6*s23^2)) - p2q^2*p3q*(s12^3 + 
                4*s12^2*s13 + 2*s13*(5*s13^2 - 4*s13*s23 - 4*s23^2) + 
                s12*(10*s13^2 - 10*s13*s23 - 3*s23^2)) + p3q^3*(-2*s12^3 + 
                2*s13*s23*(s13 + s23) - s12^2*(8*s13 + s23) + 
                s12*(-5*s13^2 + s13*s23 + 3*s23^2))) - 2*p1q*(p2q + p3q)^2*
             (p2q^3*s13^2*(2*s12*s13 + 2*s13^2 - 5*s12*s23 - 5*s13*s23 - 
                3*s23^2) + p3q^3*s12*(2*s12^2*s13 - 4*s13*s23*(s13 + s23) + 
                s12*(2*s13^2 - 4*s13*s23 - 3*s23^2)) + p2q*p3q^2*(
                s12^3*(2*s13 - s23) - 4*s13^2*s23*(s13 + s23) - 2*s12*s13*
                 (2*s13^2 + 6*s13*s23 + 3*s23^2) - s12^2*(2*s13^2 + 
                  9*s13*s23 + 3*s23^2)) - p2q^2*p3q*s13*(2*s12^2*
                 (2*s13 + s23) + 2*s12*(s13^2 + 5*s13*s23 + s23^2) + 
                s13*(-2*s13^2 + 8*s13*s23 + 7*s23^2)))))/(4*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s13*s23*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((-9*ep*p2q*(s12 + s13 + s23)*(p1q^4*s23^3 - 
              (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q*(s12 + s13) + 
                p3q*(2*s12 + 2*s13 + s23)) - p1q^3*s23^2*(2*p3q*(2*s12 + 
                  s13) + p2q*(3*s12 + 4*s13 + s23)) + p1q^2*s23*(
                p2q*p3q*(5*s12^2 + 6*s12*s13 + 4*s13^2 - 3*s12*s23 - 
                  3*s13*s23 - 2*s23^2) + p3q^2*(5*s12^2 + s12*(4*s13 - 
                    2*s23) - s23*(2*s13 + s23)) + p2q^2*(2*s12^2 + 
                  s12*(5*s13 + s23) + s13*(5*s13 + s23))) + 
              p1q*(p2q^3*s13^2*(-2*s12 - 2*s13 + s23) + 2*p3q^3*s12*
                 (-s12^2 - s12*s13 + 2*s12*s23 + 2*s13*s23 + s23^2) + 
                p2q^2*p3q*(4*s12^2*(s13 + s23) + 2*s12*(s13^2 + 4*s13*s23 + 
                    s23^2) + s13*(-2*s13^2 + 6*s13*s23 + 3*s23^2)) + 
                p2q*p3q^2*(-2*s12^3 + 2*s13*s23*(2*s13 + s23) + 
                  s12^2*(2*s13 + 7*s23) + s12*(4*s13^2 + 10*s13*s23 + 
                    3*s23^2)))))/(4*(p1q + p2q + p3q)*s13*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) + (9*p2q*(p1q^5*(p2q + p3q)*s23^4*(s12 + s13 + 
                s23) - p1q^4*s23^3*(s12 + s13 + s23)*(2*p3q^2*(2*s12 + s13) + 
                p2q*p3q*(5*s12 + 4*s13 - s23) + p2q^2*(3*s12 + 8*s13 + 
                  s23)) + 2*p2q^2*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(s12 + 
                s13 + s23)*(p2q*s13*(2*s12 + 2*s13 + s23) + 
                p3q*(2*s12*s13 + 2*s13^2 - s12*s23 - s23^2)) + 
              p1q^3*s23^2*(s12 + s13 + s23)*(p2q^2*p3q*(5*s12^2 + 
                  19*s12*s13 + 9*s13^2 - 6*s12*s23 - 10*s13*s23 - 4*s23^2) + 
                p2q^3*(9*s12*s13 + 17*s13^2 - 3*s12*s23 - 3*s13*s23 - 
                  2*s23^2) + p2q*p3q^2*(8*s12^2 + 8*s12*s13 + 4*s13^2 - 
                  3*s12*s23 - s13*s23 + s23^2) + p3q^3*(5*s12^2 + 
                  s12*(4*s13 - 2*s23) - s23*(2*s13 + s23))) + 
              p1q^2*s23*(s12 + s13 + s23)*(2*p3q^4*s12*(-s12^2 - s12*s13 + 
                  2*s12*s23 + 2*s13*s23 + s23^2) + p2q^4*s13*(2*s12^2 - 
                  10*s12*s13 - 14*s13^2 + 12*s12*s23 + 13*s13*s23 + 
                  6*s23^2) - p2q^3*p3q*(2*s12^3 + 2*s12^2*s13 + 10*s13^3 - 
                  25*s13^2*s23 - 9*s13*s23^2 + 2*s23^3 + 2*s12*(3*s13^2 - 
                    16*s13*s23 + s23^2)) + p2q^2*p3q^2*(-4*s12^3 - 2*s13^3 + 
                  10*s13^2*s23 + s13*s23^2 - 2*s23^3 + s12^2*(-8*s13 + 
                    7*s23) + s12*(-4*s13^2 + 24*s13*s23 + s23^2)) + 
                p2q*p3q^3*(-4*s12^3 + 7*s12^2*s23 + 2*s23*(2*s13^2 + 
                    2*s13*s23 + s23^2) + s12*(4*s13^2 + 10*s13*s23 + 
                    3*s23^2))) + p1q*(-(p3q^5*s12^2*s23*(2*s12^2 + 
                   4*s12*s13 + 2*s13^2 + 3*s12*s23 + 3*s13*s23 + s23^2)) + 
                p2q^5*s13^2*(4*s13^3 + s12^2*(4*s13 - 13*s23) - 9*s13^2*s23 - 
                  19*s13*s23^2 - 6*s23^3 + s12*(8*s13^2 - 22*s13*s23 - 
                    19*s23^2)) - p2q^4*p3q*s13*(-4*s13^4 + s12^3*(8*s13 - 
                    2*s23) + 20*s13^3*s23 + 31*s13^2*s23^2 + 3*s13*s23^3 - 
                  4*s23^4 + s12*s23*(50*s13^2 + 19*s13*s23 - 14*s23^2) + 
                  4*s12^2*(3*s13^2 + 7*s13*s23 - 3*s23^2)) - p2q*p3q^4*s12*
                 s23*(5*s12^3 + s12^2*(6*s13 + 9*s23) + s12*(-3*s13^2 + 
                    5*s13*s23 + 6*s23^2) + 2*(-2*s13^3 - 2*s13^2*s23 + 
                    s13*s23^2 + s23^3)) + p2q^2*p3q^3*(4*s12^4*(s13 - 
                    2*s23) + s12^3*(8*s13^2 - 10*s13*s23 - 13*s23^2) + 
                  s12*s13*s23*(-2*s13^2 + 7*s13*s23 + 8*s23^2) + 
                  s12^2*(4*s13^3 - 2*s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
                  s13*s23*(-2*s13^3 - s13^2*s23 + 3*s13*s23^2 + 2*s23^3)) + 
                p2q^3*p3q^2*(s12^4*(4*s13 - 5*s23) - 3*s12^3*s23*(2*s13 + 
                    3*s23) - s12*s13*(8*s13^3 + 34*s13^2*s23 + 3*s13*s23^2 - 
                    16*s23^3) - s12^2*(12*s13^3 + 22*s13^2*s23 - 3*s13*
                     s23^2 + 4*s23^3) + s13*s23*(-13*s13^3 - 15*s13^2*s23 + 
                    2*s13*s23^2 + 4*s23^3)))))/(4*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s13*s23*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))))*p1 . E0conj + 
         ((-9*ep*p2q*(s12 + s13 + s23)*((p2q + p3q)*(p3q*s12 - p2q*s13)^2 + 
              p1q^3*s23^2 + p1q^2*s23*(-2*p2q*(s12 + s13) + 
                p3q*(-2*s12 + s23)) + p1q*(p3q^2*s12*(s12 - 2*s23) + 
                p2q^2*s13*(s13 - s23) - p2q*p3q*(2*s12*s13 + 3*s12*s23 + 
                  2*s13*s23))))/(4*(p1q + p2q + p3q)*s13*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           (9*p2q*(s12 + s13 + s23)*(-(p1q^5*(p3q*(5*s12 - 3*s13 - 10*s23) + 
                 p2q*(s12 + 9*s13 - 2*s23))*s23^3) + 2*p1q^6*s23^4 + 
              (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(p3q^2*s23^2 + 
                2*p2q*p3q*(4*s12*s13 + 4*s13^2 + 2*s13*s23 - s23^2) + 
                p2q^2*(8*s12*s13 + 8*s13^2 + 4*s13*s23 + s23^2)) + 
              p1q^4*s23^2*(p2q^2*(12*s13^2 + 2*s12*(s13 - 2*s23) - 
                  20*s13*s23 - s23^2) + 2*p2q*p3q*(s12^2 + 4*s12*s13 - 
                  3*s13^2 - 6*s12*s23 - 16*s13*s23 + 2*s23^2) + 
                p3q^2*(4*s12^2 - 6*s12*s13 - 28*s12*s23 + 9*s23^2)) - 
              p1q^3*s23*(p3q^3*(s12^3 + 25*s12*s23^2 + (3*s13 - 2*s23)*
                   s23^2 - s12^2*(3*s13 + 26*s23)) - p2q^2*p3q*(3*s13^3 + 
                  50*s13^2*s23 - 23*s13*s23^2 - 6*s23^3 + 2*s12^2*
                   (s13 + 4*s23) + s12*(9*s13^2 + 60*s13*s23 - 5*s23^2)) + 
                p2q^3*(5*s13^3 - 42*s13^2*s23 + 9*s13*s23^2 + 2*s23^3 + 
                  s12*(s13^2 - 12*s13*s23 + 5*s23^2)) + p2q*p3q^2*
                 (s12^3 + s12^2*(3*s13 - 22*s23) + s23*(-4*s13^2 + 
                    25*s13*s23 - 2*s23^2) + s12*(6*s13^2 - 32*s13*s23 + 
                    9*s23^2))) + p1q^2*s23*(p3q^4*(-8*s12^3 + 23*s12^2*s23 + 
                  2*s12*(3*s13 - 2*s23)*s23 + s23^3) + p2q^4*(4*s12^2*s13 - 
                  32*s13^3 - 4*s12*s13*(4*s13 - 5*s23) + 29*s13^2*s23 + 
                  8*s13*s23^2 + s23^3) - 4*p2q^3*p3q*(s12^3 + 2*s12^2*s13 + 
                  5*s12*s13*(s13 - 3*s23) + s13*(11*s13^2 - 15*s13*s23 - 
                    6*s23^2)) - 2*p2q*p3q^3*(6*s12^3 + s12^2*(10*s13 - 
                    9*s23) + s13*s23*(-3*s13 + 4*s23) + 2*s12*(5*s13^2 - 
                    2*s13*s23 - s23^2)) + p2q^2*p3q^2*(-8*s12^3 - 12*s13^3 + 
                  49*s13^2*s23 + 12*s13*s23^2 - 2*s23^3 + s12^2*(-32*s13 + 
                    7*s23) + s12*(-24*s13^2 + 66*s13*s23 + 12*s23^2))) + 
              p1q*(p2q + p3q)*(-(p3q^4*s12*s23*(7*s12^2 + 3*s12*s13 - 
                   2*s12*s23 + 2*s23^2)) + p2q^4*s13*(8*s13^3 + s12*s13*
                   (8*s13 - 23*s23) - 27*s13^2*s23 - 10*s13*s23^2 - 
                  2*s23^3) + 2*p2q*p3q^3*(s12^3*(4*s13 - 3*s23) - s13*s23^3 + 
                  4*s12^2*(s13^2 - s13*s23 - s23^2) + s12*s23*(-5*s13^2 - 
                    6*s13*s23 + s23^2)) + p2q^2*p3q^2*(s12^3*(8*s13 - 
                    7*s23) + s13*s23*(-19*s13^2 - 6*s13*s23 + 2*s23^2) - 
                  s12^2*(8*s13^2 + 31*s13*s23 + 6*s23^2) - s12*(16*s13^3 + 
                    43*s13^2*s23 + 4*s13*s23^2 - 2*s23^3)) - 2*p2q^3*p3q*
                 (s12^2*s13*(8*s13 + s23) + s12*(4*s13^3 + 16*s13^2*s23 + 
                    s23^3) - s13*(4*s13^3 - 19*s13^2*s23 - 10*s13*s23^2 + 
                    s23^3)))))/(8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p2 . E0conj))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        Eik[k]] + ((-9*p3q*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2*
           (2*s12 + s23) - p1q^2*s23*(4*p2q*p3q*(s12^2 + s12*s13 + s13*s23) + 
            p3q^2*(8*s12^2 + 4*s12*s13 + 5*s12*s23 + s13*s23) + 
            p2q^2*(4*s12^2 + 8*s12*s13 + 3*s12*s23 + 3*s13*s23)) - 
          (p2q + p3q)^3*s23*(p3q*s12*(2*s12 + 2*s13 + s23) + 
            p2q*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 4*s12*s23 + 3*s13*s23)) + 
          p1q*(p2q + p3q)*(p3q^2*(4*s12^3 + 3*s12^2*s23 + s23^3 + 
              s12*s23*(-s13 + 2*s23)) + p2q^2*(s23*(s13^2 + 2*s13*s23 + 
                3*s23^2) + s12*(4*s13^2 + s13*s23 + 4*s23^2)) + 
            p2q*p3q*(-(s12^2*(8*s13 + s23)) + s23*(s13^2 + 2*s13*s23 + 
                4*s23^2) + s12*(-4*s13*s23 + 6*s23^2))))*E0 . E0conj)/
        (16*p1q*(p2q + p3q)^2*s12*s23*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) + ((9*ep*p1q*p3q*(s12 + s13 + s23)*
           (p3q^2*s12*(s12 + s23) + p2q*s13*(p2q*s13 - p1q*s23) - 
            p3q*(p1q*s23*(s12 + s23) + p2q*s13*(2*s12 + s23))))/
          (4*(p1q + p2q + p3q)*s12*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23))) + (9*p3q*(s12 + s13 + s23)*
           (2*p1q^6*s23^4 + p1q^5*s23^3*(-(p3q*(9*s12 + s13)) + 
              p2q*(3*s12 - 5*s13 + 8*s23)) - p1q^4*s23^2*
             (2*p2q*p3q*(3*s12^2 - 4*s12*s13 - s13^2 + 11*s12*s23 + s13*s23 - 
                2*s23^2) - p3q^2*(12*s12^2 + 2*s12*(s13 - 2*s23) + 
                s23*(2*s13 + s23)) + p2q^2*(-4*s13^2 + 20*s13*s23 - 3*s23^2 + 
                2*s12*(3*s13 + s23))) + (p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*
             (p3q*s23^2 + p2q*(8*s12^2 + 8*s12*(s13 + s23) + 
                s23*(4*s13 + s23))) - p1q^2*s23*(p3q^4*(4*s12^3 - s23^3 + 
                4*s12*s23*(s13 + s23) - s12^2*(4*s13 + 3*s23)) + 
              2*p2q^3*p3q*(6*s12^3 + 2*s13^3 + s12^2*(24*s13 - 11*s23) + 
                3*s13^2*s23 - 4*s13*s23^2 - 2*s23^3 + 2*s12*(9*s13^2 + 
                  2*s13*s23 - 7*s23^2)) + p2q^2*p3q^2*(28*s12^3 + 
                s12^2*(36*s13 - 19*s23) + s12*(20*s13^2 - 2*s13*s23 - 
                  24*s23^2) + s23*(7*s13^2 - 8*s13*s23 - 6*s23^2)) + 
              p2q^4*(4*s13^3 + 4*s12^2*(5*s13 - 2*s23) + 3*s13^2*s23 - 
                s23^3 + 2*s12*(10*s13^2 + 5*s13*s23 - 4*s23^2)) + 
              4*p2q*p3q^3*(5*s12^3 + s12^2*(s13 - 3*s23) - s23^2*
                 (s13 + s23) + s12*(s13^2 - s13*s23 - s23^2))) + 
            p1q^3*s23*(p3q^3*(-5*s12^3 - s12^2*(s13 - 8*s23) - 3*s12*s23*
                 (2*s13 + s23) + s23^2*(s13 + 2*s23)) + p2q*p3q^2*(3*s12^3 + 
                s12^2*(9*s13 + 26*s23) + s12*(2*s13^2 + 22*s13*s23 - 
                  9*s23^2) + s23*(-2*s13^2 + 5*s13*s23 + 2*s23^2)) - 
              p2q^2*p3q*(s13^3 + 2*s12^2*(3*s13 - 7*s23) - 6*s13^2*s23 + 
                3*s13*s23^2 + 2*s23^3 + s12*(3*s13^2 - 18*s13*s23 + 
                  7*s23^2)) + p2q^3*(-s13^3 + 12*s12^2*s23 + 16*s13^2*s23 - 
                3*s13*s23^2 + 2*s23^3 + s12*(3*s13^2 + 14*s13*s23 + 
                  11*s23^2))) + p1q*(p2q + p3q)*(-(p3q^4*s12*s23*
                (s12^2 - 3*s12*s13 - 2*s12*s23 + 2*s23^2)) + 
              p2q^4*s13*(8*s12^2*(s13 - 2*s23) + s12*(8*s13^2 - 9*s13*s23 - 
                  16*s23^2) + s23*(3*s13^2 - 6*s13*s23 - 2*s23^2)) + 
              2*p2q*p3q^3*(4*s12^4 + s12^3*(4*s13 - 7*s23) - s13*s23^3 - 
                2*s12^2*s23*(3*s13 + 4*s23) - s12*s23*(3*s13^2 + 8*s13*s23 + 
                  3*s23^2)) + p2q^2*p3q^2*(8*s12^4 - s12^3*(8*s13 + 25*s23) + 
                s13*s23*(3*s13^2 - 2*s13*s23 - 6*s23^2) - 3*s12*s23*
                 (7*s13^2 + 12*s13*s23 + 2*s23^2) - s12^2*(16*s13^2 + 
                  49*s13*s23 + 30*s23^2)) - 2*p2q^3*p3q*(8*s12^3*
                 (s13 + s23) + s13*s23*(-s13^2 + 6*s13*s23 + 3*s23^2) + 
                s12^2*(4*s13^2 + 31*s13*s23 + 8*s23^2) + s12*(-4*s13^3 + 
                  18*s13^2*s23 + 22*s13*s23^2 + s23^3)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*
        p1 . E0conj*p2 . E0 + ((9*ep*p1q^2*p3q*s23*(s12 + s13 + s23)*
           (p2q*s13 + p3q*(s12 + 2*s13) - p1q*s23))/(4*(p1q + p2q + p3q)*s12*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (9*p3q*(s12 + s13 + s23)*
           (-(p1q^5*(3*p2q - p3q)*s23^4) - 2*(p2q + p3q)^3*
             (p3q*s12 - p2q*s13)^2*(p3q*s12*(2*s12 + 2*s13 + s23) + 
              p2q*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23))) + 
            p1q^4*s23^3*(p3q^2*(s13 + 2*s23) + p2q*p3q*(13*s12 + s13 + 
                2*s23) + p2q^2*(7*s12 + 2*(5*s13 + s23))) - 
            p1q^3*s23^2*(p2q*p3q^2*(28*s12^2 + 25*s12*s13 + 3*s13^2 + 
                4*s13*s23 - 6*s23^2) + p2q^2*p3q*(21*s12^2 + 29*s12*s13 + 
                8*s13^2 - 2*s12*s23 + 8*s13*s23 - 6*s23^2) + p2q^3*(6*s12^2 + 
                19*s12*s13 + 11*s13^2 + 2*s12*s23 + 4*s13*s23 - 2*s23^2) + 
              p3q^3*(7*s12^2 - 2*s23*(s13 + s23) + s12*(3*s13 + 2*s23))) + 
            2*p1q^2*(p2q + p3q)*s23*(p3q^3*s12*(5*s12^2 - s13^2 + 
                3*s12*(s13 - s23) - 4*s13*s23 - 3*s23^2) + p2q*p3q^2*(
                10*s12^3 + s13^3 + 2*s12^2*(5*s13 - 4*s23) - 3*s13*s23^2 + 
                2*s12*(2*s13^2 - 5*s13*s23 - 4*s23^2)) + 
              p2q^3*(s12^2*(5*s13 - 2*s23) + s13*(2*s13^2 + s13*s23 - 
                  3*s23^2) + s12*(8*s13^2 - s13*s23 - 2*s23^2)) + 
              p2q^2*p3q*(3*s12^3 + s12^2*(6*s13 - 7*s23) + 
                s13*(s13^2 + s13*s23 - 6*s23^2) + 7*s12*(s13^2 - s13*s23 - 
                  s23^2))) - 2*p1q*(p2q + p3q)^2*(p3q^3*s12^2*(2*s12^2 + 
                2*s12*s13 - 5*s12*s23 - 5*s13*s23 - 3*s23^2) + 
              p2q^3*s13*(2*s12^2*(s13 - 2*s23) - 3*s13*s23^2 + 
                2*s12*(s13^2 - 2*s13*s23 - 2*s23^2)) - p2q^2*p3q*(
                4*s12^3*(s13 + s23) + s13^2*s23*(s13 + 3*s23) + 
                2*s12^2*(s13^2 + 6*s13*s23 + 2*s23^2) + s12*s13*(-2*s13^2 + 
                  9*s13*s23 + 6*s23^2)) + p2q*p3q^2*s12*(2*s12^3 - 
                2*s13*s23*(s13 + s23) - 2*s12^2*(s13 + 4*s23) - 
                s12*(4*s13^2 + 10*s13*s23 + 7*s23^2)))))/(4*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s23*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((9*ep*p2q*p3q*(s12 + s13 + s23)*(p1q^3*s23^2*(s12 + s23) + 
              p3q^3*s12^2*(s12 + s13 + s23) + p2q^3*s13^2*(s12 + s13 + s23) - 
              p1q*p3q^2*s23*(3*s12^2 + 4*s12*s13 + 3*s12*s23 + 2*s13*s23) - 
              p1q^2*p3q*s23*(s12^2 + s12*(2*s13 - s23) + (s13 - 2*s23)*s23) - 
              p2q^2*s13*(p3q*(2*s12 - s13)*(s12 + s13 + s23) + p1q*s23*
                 (2*s12 + s13 + 2*s23)) + p2q*(-(p1q^2*(s13 - s23)*s23*
                  (s12 + s23)) + p3q^2*s12*(s12 - 2*s13)*(s12 + s13 + s23) - 
                p1q*p3q*s23*(2*s12^2 + 3*s13*s23 + 2*s12*(2*s13 + s23)))))/
            (4*(p1q + p2q + p3q)*s12*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))) - (9*p2q*p3q*(s12 + s13 + s23)*
             (p1q^4*(3*p2q - p3q)*s23^3*(s12 + s23) - 2*p2q*(p2q + p3q)*
               (p3q*s12 - p2q*s13)^2*(p3q*(s12 + s23)*(2*s12 + 2*s13 + s23) + 
                p2q*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23))) + 
              p1q^3*s23^2*(p3q^2*(3*s12^2 + 3*s12*s23 + s13*s23) + 
                p2q^2*(-6*s12^2 - 11*s12*s13 - 5*s12*s23 - 9*s13*s23 + 
                  s23^2) - p2q*p3q*(9*s12^2 - s23^2 + s12*(s13 + 8*s23))) + 
              p1q^2*s23*(-(p3q^3*s12*(2*s12^2 + (4*s13 - s23)*s23 + 
                   s12*(2*s13 + s23))) + p2q*p3q^2*(10*s12^3 + (s13 - 2*s23)*
                   s23^2 + 5*s12^2*(2*s13 + s23) + s12*(2*s13^2 + 8*s13*s23 - 
                    7*s23^2)) + p2q^2*p3q*(6*s12^3 + 2*s12^2*(5*s13 - 
                    6*s23) + s12*(8*s13^2 - 2*s13*s23 - 22*s23^2) + 
                  s23*(5*s13^2 - 5*s13*s23 - 4*s23^2)) + p2q^3*
                 (2*s12^2*(5*s13 - 2*s23) + s13*(9*s13 - 4*s23)*s23 + 
                  4*s12*(3*s13^2 + s13*s23 - s23^2))) + 
              p1q*(-(p3q^4*s12*s23*(s12^2 + 2*s13*s23 + s12*(s13 + s23))) + 
                2*p2q*p3q^3*(-2*s12^4 - 2*s12^3*(s13 - s23) + 3*s12^2*s23*
                   (s13 + 2*s23) + s13*s23^2*(s13 + 2*s23) + s12*s23*
                   (s13^2 + 6*s13*s23 + 2*s23^2)) + p2q^4*s13*
                 (-4*s12^2*(s13 - 2*s23) + s13*s23*(-3*s13 + 5*s23) + 
                  s12*(-4*s13^2 + 5*s13*s23 + 8*s23^2)) + 2*p2q^3*p3q*
                 (4*s12^3*(s13 + s23) + s13*s23*(-2*s13^2 + 5*s13*s23 + 
                    3*s23^2) + s12^2*(2*s13^2 + 15*s13*s23 + 4*s23^2) + 
                  s12*s13*(-2*s13^2 + 9*s13*s23 + 12*s23^2)) + p2q^2*p3q^2*
                 (-4*s12^4 + s12^3*(4*s13 + 13*s23) + s12*s23*(15*s13^2 + 
                    26*s13*s23 + 2*s23^2) + s13*s23*(-s13^2 + 5*s13*s23 + 
                    8*s23^2) + s12^2*(8*s13^2 + 29*s13*s23 + 19*s23^2)))))/
            (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p1 . E0conj + 
         ((9*ep*p3q*(s12 + s13 + s23)*((p2q + p3q)*(p3q*s12 - p2q*s13)^2 - 
              p1q^2*(p3q*s12 + p2q*(s13 - s23))*s23 + p1q*(p2q^2*s13*
                 (s13 - 2*s23) + p3q^2*s12*(s12 - s23) - p2q*p3q*(3*s13*s23 + 
                  2*s12*(s13 + s23)))))/(4*(p1q + p2q + p3q)*s12*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) - (9*p3q*(2*p1q^6*s23^4*(s12 + s13 + s23) + 
              p1q^5*s23^3*(s12 + s13 + s23)*(-(p3q*(9*s12 + s13 - 4*s23)) + 
                p2q*(3*s12 - 5*s13 + 4*s23)) - p1q^4*s23^2*(s12 + s13 + s23)*(
                p2q^2*(6*s12*s13 - 4*s13^2 - 14*s12*s23 + 8*s13*s23 - 
                  13*s23^2) + 2*p2q*p3q*(3*s12^2 - 4*s12*s13 - s13^2 + 
                  3*s12*s23 + 5*s13*s23 - 4*s23^2) + p3q^2*(-12*s12^2 - 
                  2*s12*s13 + 20*s12*s23 + 2*s13*s23 - 3*s23^2)) - 
              (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*(
                -(p3q^2*s23^2) + 2*p2q*p3q*(2*s12 + s23)*(2*s12 + 2*s13 + 
                  s23) + p2q^2*(8*s12^2 + (4*s13 - s23)*s23 + 8*s12*
                   (s13 + s23))) - p1q^3*s23*(s12 + s13 + s23)*(
                p3q^3*(5*s12^3 + s12^2*(s13 - 28*s23) + (s13 - 2*s23)*s23^2 + 
                  s12*s23*(-6*s13 + 13*s23)) - p2q*p3q^2*(3*s12^3 + 
                  s12^2*(9*s13 - 6*s23) + s12*(2*s13^2 + 10*s13*s23 - 
                    23*s23^2) + s23*(2*s13^2 - 13*s13*s23 + 6*s23^2)) + 
                p2q^3*(s13^3 + 12*s12^2*s23 - 4*s13^2*s23 + 33*s13*s23^2 - 
                  6*s23^3 + s12*(-3*s13^2 + 38*s13*s23 + 7*s23^2)) + 
                p2q^2*p3q*(s13^3 - 6*s13^2*s23 + 25*s13*s23^2 - 14*s23^3 + 
                  s12^2*(6*s13 + 38*s23) + s12*(3*s13^2 + 26*s13*s23 + 
                    21*s23^2))) - p1q*(p2q + p3q)*(s12 + s13 + s23)*(
                p3q^4*s12*s23*(7*s12^2 + 3*s12*s13 - 2*s12*s23 + 2*s23^2) + 
                2*p2q*p3q^3*(4*s12^4 + s12^3*(4*s13 - 7*s23) + s13*s23^3 - 
                  2*s12^2*s23*(7*s13 + 5*s23) - s12*s23*(3*s13^2 + 
                    4*s13*s23 + s23^2)) + p2q^4*s13*(8*s12^2*(s13 - 2*s23) + 
                  s12*(8*s13^2 - 13*s13*s23 - 16*s23^2) + s23*(7*s13^2 - 
                    14*s13*s23 + 2*s23^2)) + p2q^2*p3q^2*(8*s12^4 - 
                  s12^3*(8*s13 + 29*s23) + s13*s23*(3*s13^2 - 6*s13*s23 - 
                    2*s23^2) - s12*s23*(13*s13^2 + 28*s13*s23 + 2*s23^2) - 
                  s12^2*(16*s13^2 + 45*s13*s23 + 38*s23^2)) - 2*p2q^3*p3q*
                 (8*s12^3*(s13 + s23) + s13*s23*(-s13^2 + 8*s13*s23 + 
                    s23^2) + s12^2*(4*s13^2 + 27*s13*s23 + 8*s23^2) - 
                  s12*(4*s13^3 - 22*s13^2*s23 - 14*s13*s23^2 + s23^3))) + 
              p1q^2*s23*(2*p2q^3*p3q*(6*s12^4 + 9*s12^3*(2*s13 - s23) + 
                  s12^2*(32*s13^2 - 15*s13*s23 - 37*s23^2) + s13*s23*
                   (13*s13^2 - 3*s13*s23 - 16*s23^2) + s12*(20*s13^3 + 
                    21*s13^2*s23 - 50*s13*s23^2 - 22*s23^3)) + 4*p2q*p3q^3*
                 (4*s12^4 - 3*s13*s23^2*(s13 + s23) + 4*s12^3*(3*s13 + 
                    2*s23) + s12^2*(9*s13^2 + 13*s13*s23 - s23^2) + 
                  s12*(s13^3 + 2*s13^2*s23 - 7*s13*s23^2 - 5*s23^3)) + 
                p3q^4*(-12*s12^4 + s23^3*(s13 + s23) + s12^3*(-16*s13 + 
                    5*s23) + s12^2*(-4*s13^2 + 17*s13*s23 + 13*s23^2) + 
                  s12*(4*s13^2*s23 - 3*s23^3)) + p2q^4*(4*s12^3*(5*s13 - 
                    2*s23) + 2*s12^2*(26*s13^2 + 7*s13*s23 - 8*s23^2) + 
                  s12*(32*s13^3 + 61*s13^2*s23 - 22*s13*s23^2 - 7*s23^3) + 
                  s23*(27*s13^3 + 11*s13^2*s23 - 15*s13*s23^2 + s23^3)) + 
                p2q^2*p3q^2*(40*s12^4 + s12^3*(80*s13 + 29*s23) + 
                  s12^2*(52*s13^2 + 27*s13*s23 - 59*s23^2) + s12*(12*s13^3 + 
                    21*s13^2*s23 - 74*s13*s23^2 - 50*s23^3) - 
                  s23*(-11*s13^3 + 13*s13^2*s23 + 26*s13*s23^2 + 2*s23^3)))))/
            (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p2 . E0conj))*Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*
        Eik[k]] + 
     (((9*ep*p1q*(s12 + s13 + s23)*(p3q^2*s12*(-3*s12^3 + s12^2*(2*s13 - 
                3*s23) + s13*s23*(-3*s13 + s23) + s12*s13*(-3*s13 + 2*s23)) + 
            p2q^2*s13*(-3*s12^2*(s13 + s23) - 3*s13^2*(s13 + s23) + 
              s12*(2*s13^2 + 2*s13*s23 + s23^2)) + p2q*p3q*
             (3*s13^2*s23*(s13 + s23) + 3*s12^3*(2*s13 + s23) + 
              s12*s13^2*(6*s13 + s23) + s12^2*(-4*s13^2 + s13*s23 + 
                3*s23^2)) + p1q^2*(2*s12^3*(s13 + s23) + s13*s23*(2*s13^2 + 
                s13*s23 - s23^2) + s12^2*(-4*s13^2 - 2*s13*s23 + s23^2) + 
              s12*(2*s13^3 - 2*s13^2*s23 - 4*s13*s23^2 - s23^3)) + 
            p1q*(p3q*(-2*s12^4 + 2*s12^3*(3*s13 + s23) + s12*s13*(2*s13^2 - 
                  4*s13*s23 - s23^2) + s13*s23*(2*s13^2 + s13*s23 - s23^2) + 
                s12^2*(-6*s13^2 + 4*s13*s23 + 4*s23^2)) + 
              p2q*(2*s12^3*(s13 + s23) + s12^2*(-6*s13^2 - 4*s13*s23 + 
                  s23^2) + 2*s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                s12*(6*s13^3 + 4*s13^2*s23 - s13*s23^2 - s23^3)))))/
          (16*s12*s13*(-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*
             (s12 + s23) - p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
            p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
             (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) - 
         (9*(s12 + s13 + s23)*(p1q^5*s23^2*(s13*s23^2*(s13 + s23)^2 + 
              s12*s23*(s13 + s23)^2*(8*s13 + s23) + s12^3*(8*s13^2 + 
                8*s13*s23 + s23^2) + s12^2*(8*s13^3 + 24*s13^2*s23 + 
                17*s13*s23^2 + 2*s23^3)) + (p2q + p3q)^2*(-(p3q*s12) + 
              p2q*s13)*s23*(s12 + s13 + s23)*(p2q^2*s13*(s13*s23*
                 (s13 + s23) + s12^2*(2*s13 + s23) + s12*(2*s13^2 - s23^2)) - 
              p3q^2*s12*(s13*(s13 - s23)*s23 + s12^2*(2*s13 + s23) + 
                s12*(2*s13^2 + s23^2)) + p2q*p3q*(-2*s12^3*s13 - 
                s13*s23^2*(s13 + s23) + s12^2*s23*(2*s13 + s23) + 
                s12*(2*s13^3 - 2*s13^2*s23 + s23^3))) - 
            p1q^4*s23*(p2q*(s12^4*(8*s13^2 + 9*s13*s23 + 2*s23^2) + 
                s13*s23^2*(4*s13^3 + 7*s13^2*s23 + 5*s13*s23^2 + 2*s23^3) + 
                s12^3*(8*s13^3 + 11*s13^2*s23 + 7*s13*s23^2 + 3*s23^3) + 
                s12*s23*(25*s13^4 + 41*s13^3*s23 + 22*s13^2*s23^2 + 
                  7*s13*s23^3 + 2*s23^4) + s12^2*(16*s13^4 + 35*s13^3*s23 + 
                  18*s13^2*s23^2 + 4*s13*s23^3 + 3*s23^4)) + 
              p3q*(s12^4*(16*s13^2 + 25*s13*s23 + 4*s23^2) + s13*s23^2*
                 (2*s13^3 + 3*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s12^3*(8*s13^3 + 35*s13^2*s23 + 41*s13*s23^2 + 7*s23^3) + 
                s12*s23*(9*s13^4 + 7*s13^3*s23 + 4*s13^2*s23^2 + 
                  7*s13*s23^3 + 2*s23^4) + s12^2*(8*s13^4 + 11*s13^3*s23 + 
                  18*s13^2*s23^2 + 22*s13*s23^3 + 5*s23^4))) + 
            p1q^3*(p3q^2*(s12^5*(8*s13^2 + 25*s13*s23 + 5*s23^2) - 
                2*s13*s23^3*(s13^3 + s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + 
                s12^3*s23*(19*s13^3 + 11*s13^2*s23 + 5*s13*s23^2 + 5*s23^3) + 
                s12^4*(8*s13^3 + 13*s13^2*s23 + 22*s13*s23^2 + 6*s23^3) - 
                s12*s23^2*(10*s13^4 - 6*s13^3*s23 - 8*s13^2*s23^2 + 
                  3*s13*s23^3 + s23^4) + s12^2*s23*(-9*s13^4 + 20*s13^3*s23 + 
                  21*s13^2*s23^2 + 6*s13*s23^3 + 3*s23^4)) + 
              p2q*p3q*(s12^5*s23*(9*s13 + 4*s23) - s12^4*(16*s13^3 + 
                  44*s13^2*s23 + 23*s13*s23^2 - 3*s23^3) - s12^3*(16*s13^4 + 
                  26*s13^3*s23 + 13*s13^2*s23^2 + s13*s23^3 - 5*s23^4) + 
                s13*s23^2*(4*s13^4 + 3*s13^3*s23 + 5*s13^2*s23^2 + 
                  2*s13*s23^3 - 4*s23^4) + s12^2*s23*(-44*s13^4 - 
                  13*s13^3*s23 + 52*s13^2*s23^2 + 30*s13*s23^3 + 2*s23^4) + 
                s12*s23*(9*s13^5 - 23*s13^4*s23 - s13^3*s23^2 + 30*s13^2*
                   s23^3 + 4*s13*s23^4 - 4*s23^5)) + p2q^2*(
                -(s12^4*s23*(9*s13^2 + 10*s13*s23 + 2*s23^2)) + 
                s12^3*(8*s13^4 + 19*s13^3*s23 + 20*s13^2*s23^2 + 
                  6*s13*s23^3 - 2*s23^4) + s13*s23^2*(5*s13^4 + 6*s13^3*s23 + 
                  5*s13^2*s23^2 + 3*s13*s23^3 - s23^4) + s12*s23*(25*s13^5 + 
                  22*s13^4*s23 + 5*s13^3*s23^2 + 6*s13^2*s23^3 - 
                  3*s13*s23^4 - 4*s23^5) + s12^2*(8*s13^5 + 13*s13^4*s23 + 
                  11*s13^3*s23^2 + 21*s13^2*s23^3 + 8*s13*s23^4 - 
                  4*s23^5))) - p1q*(p2q^2*p3q^2*(-(s12^5*s23*(15*s13 + 
                   4*s23)) + s12^4*(48*s13^3 + 60*s13^2*s23 + 25*s13*s23^2 - 
                  s23^3) - s13^2*s23^2*(4*s13^3 + s13^2*s23 - s13*s23^2 + 
                  2*s23^3) + s12*s13*s23*(-15*s13^4 + 25*s13^3*s23 + 
                  27*s13^2*s23^2 - 10*s13*s23^3 - 12*s23^4) + s12^2*s23*
                 (60*s13^4 + 59*s13^3*s23 - 4*s13^2*s23^2 - 10*s13*s23^3 - 
                  2*s23^4) + s12^3*(48*s13^4 + 102*s13^3*s23 + 59*s13^2*
                   s23^2 + 27*s13*s23^3 + s23^4)) + p3q^4*s12*(2*s12^5*
                 (4*s13 + s23) + 3*s12^3*s23*(5*s13^2 + 5*s13*s23 + s23^2) + 
                s12^4*(8*s13^2 + 11*s13*s23 + 2*s23^2) + s13*s23^2*
                 (2*s13^3 + s13^2*s23 + s13*s23^2 - 2*s23^3) + s12^2*s23*
                 (s13^3 + 26*s13^2*s23 + 20*s13*s23^2 + 5*s23^3) + 
                s12*s23*(3*s13^4 + 3*s13^3*s23 + 16*s13^2*s23^2 + 
                  7*s13*s23^3 + 2*s23^4)) + p2q^4*s13*(s12^4*s23*
                 (3*s13 + 2*s23) + s12^3*s23*(s13^2 + 3*s13*s23 + s23^2) + 
                s12^2*(8*s13^4 + 15*s13^3*s23 + 26*s13^2*s23^2 + 
                  16*s13*s23^3 + s23^4) + s13*s23*(2*s13^4 + 2*s13^3*s23 + 
                  3*s13^2*s23^2 + 5*s13*s23^3 + 2*s23^4) + s12*(8*s13^5 + 
                  11*s13^4*s23 + 15*s13^3*s23^2 + 20*s13^2*s23^3 + 
                  7*s13*s23^4 - 2*s23^5)) - p2q^3*p3q*(3*s12^5*s13*s23 - 
                s12^4*s23*(12*s13^2 + 11*s13*s23 + 2*s23^2) + 
                s12^3*(32*s13^4 + 44*s13^3*s23 + 27*s13^2*s23^2 + s13*s23^3 - 
                  2*s23^4) + s12*s23*(33*s13^5 + 17*s13^4*s23 - 17*s13^3*
                   s23^2 + s13^2*s23^3 + 8*s13*s23^4 - s23^5) + 
                s12^2*(32*s13^5 + 62*s13^4*s23 + 29*s13^3*s23^2 + 
                  18*s13^2*s23^3 + 9*s13*s23^4 - s23^5) + s13*s23*
                 (-2*s13^5 + 2*s13^4*s23 - 4*s13^2*s23^3 + s13*s23^4 + 
                  s23^5)) + p2q*p3q^3*(2*s12^6*s23 - s12^5*(32*s13^2 + 
                  33*s13*s23 + 2*s23^2) - s12^4*s13*(32*s13^2 + 62*s13*s23 + 
                  17*s23^2) + s13*s23^3*(2*s13^3 + 2*s13^2*s23 + s13*s23^2 + 
                  s23^3) + s12^3*s23*(-44*s13^3 - 29*s13^2*s23 + 
                  17*s13*s23^2 + 4*s23^3) - s12^2*s23*(-12*s13^4 + 
                  27*s13^3*s23 + 18*s13^2*s23^2 + s13*s23^3 + s23^4) - 
                s12*s23*(3*s13^5 - 11*s13^4*s23 + s13^3*s23^2 + 9*s13^2*
                   s23^3 + 8*s13*s23^4 + s23^5))) + 
            p1q^2*(p3q^3*(-2*s12^6*(4*s13 + s23) + s12^5*s23*(10*s13 + s23) + 
                s13*s23^4*(2*s13^2 + s13*s23 - s23^2) + s12^3*s23*
                 (18*s13^3 + 4*s13^2*s23 + 13*s13*s23^2 + s23^3) + 
                s12^4*(8*s13^3 + 4*s13^2*s23 + 18*s13*s23^2 + s23^3) + 
                s12*s23^2*(-5*s13^4 + 13*s13^3*s23 + 19*s13^2*s23^2 + 
                  11*s13*s23^3 + s23^4) + s12^2*s23*(-6*s13^4 + 22*s13^3*
                   s23 + 23*s13^2*s23^2 + 22*s13*s23^3 + 4*s23^4)) - 
              p2q*p3q^2*(2*s12^6*s23 - 2*s12^5*(12*s13^2 + 15*s13*s23 + 
                  s23^2) + 2*s12^4*s23*(12*s13^2 + 13*s13*s23 + 2*s23^2) + 
                s12^2*s23*(66*s13^4 + 40*s13^3*s23 - 2*s13^2*s23^2 - 
                  14*s13*s23^3 - 5*s23^4) + 2*s12^3*(12*s13^4 + 15*s13^3*
                   s23 + 30*s13^2*s23^2 + 21*s13*s23^3 + s23^4) + 
                s13*s23^2*(-2*s13^4 + 2*s13^3*s23 - 2*s13^2*s23^2 - 
                  3*s13*s23^3 + 3*s23^4) + s12*s23*(-4*s13^5 + 46*s13^4*s23 + 
                  20*s13^3*s23^2 - 22*s13^2*s23^3 - 12*s13*s23^4 + s23^5)) + 
              p2q^2*p3q*(2*s12^5*s23*(2*s13 + s23) + 2*s12^3*s23*(-15*s13^3 - 
                  20*s13^2*s23 - 10*s13*s23^2 + s23^3) - 2*s12^4*(12*s13^3 + 
                  33*s13^2*s23 + 23*s13*s23^2 + s23^3) + s12*s23*(30*s13^5 - 
                  26*s13^4*s23 - 42*s13^3*s23^2 + 14*s13^2*s23^3 + 
                  12*s13*s23^4 - 3*s23^5) - s13*s23*(2*s13^5 - 2*s13^4*s23 + 
                  4*s13^3*s23^2 + 2*s13^2*s23^3 - 5*s13*s23^4 + s23^5) + 
                s12^2*(24*s13^5 - 24*s13^4*s23 - 60*s13^3*s23^2 + 
                  2*s13^2*s23^3 + 22*s13*s23^4 + 3*s23^5)) + 
              p2q^3*(-(s12^4*s13*s23*(6*s13 + 5*s23)) + s12^2*s23*
                 (4*s13^4 + 4*s13^3*s23 + 23*s13^2*s23^2 + 19*s13*s23^3 + 
                  s23^4) + s12^3*(8*s13^4 + 18*s13^3*s23 + 22*s13^2*s23^2 + 
                  13*s13*s23^3 + 2*s23^4) + s13*s23*(-2*s13^5 + s13^4*s23 + 
                  s13^3*s23^2 + s13^2*s23^3 + 4*s13*s23^4 + s23^5) + 
                s12*(-8*s13^6 + 10*s13^5*s23 + 18*s13^4*s23^2 + 13*s13^3*
                   s23^3 + 22*s13^2*s23^4 + 11*s13*s23^5 - s23^6)))))/
          (16*(p2q + p3q)*s12*s13*s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
            (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
              p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
              p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*
                 (s13 + s23) + s12*(s13^2 + s23^2))) - 
            p1q^2*(p2q*(s13 + s23)*(s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
              p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + s13*s23 + s23^2))))))*E0 . E0conj + 
       ((9*ep*p1q*(s12 + s13 + s23)^2*(p1q^5*s23^2*(-2*s12^2*(s13 + s23) + 
              s13*s23*(2*s13 + 3*s23) + s12*(2*s13^2 - 3*s23^2)) + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q^2*(2*s12^3 - s12*s13*s23 + 
                s13*s23^2 + s12^2*(-2*s13 + 3*s23)) + p2q*p3q*(
                -(s12^2*(4*s13 + s23)) + s13*s23*(s13 + 3*s23) + 
                s12*(4*s13^2 - 3*s23^2)) + p2q^2*(-(s13^2*(2*s13 + 3*s23)) + 
                s12*(2*s13^2 + s13*s23 - s23^2))) + 
            p1q^3*(-(p3q^2*(2*s12^4*(s13 + 3*s23) - s13*s23^3*(2*s13 + 
                   5*s23) + s12^2*s23*(6*s13^2 + s13*s23 - 16*s23^2) - 
                 s12^3*(2*s13^2 + 12*s13*s23 + 3*s23^2) + s12*s23^2*
                  (6*s13^2 + 16*s13*s23 + 3*s23^2))) - 2*p2q*p3q*(s12^4*s13 + 
                2*s13*s23^2*(s13^2 + s13*s23 - 3*s23^2) - 2*s12^3*
                 (s13^2 + s13*s23 + 2*s23^2) + s12*s23^2*(-10*s13^2 - 
                  s13*s23 + 6*s23^2) + s12^2*(s13^3 - 4*s13^2*s23 + 
                  3*s13*s23^2 - 4*s23^3)) + p2q^2*(2*s12^3*(s13^2 - s23^2) + 
                s12*s23*(-12*s13^3 + 11*s13^2*s23 + 16*s13*s23^2 - 7*s23^3) + 
                s13*s23*(2*s13^3 - 5*s13^2*s23 - 14*s13*s23^2 + 3*s23^3) - 
                2*s12^2*(s13^3 - 7*s13^2*s23 - 3*s13*s23^2 + 3*s23^3))) - 
            p1q*(-(p3q^4*s12*(4*s12^4 - 6*s12^3*s13 - 2*s13*s23^3 + 
                 s12*s13*s23*(2*s13 + 7*s23) + s12^2*(2*s13^2 + 2*s13*s23 - 
                   9*s23^2))) + p2q^2*p3q^2*(4*s12^4*(3*s13 + s23) + 
                s13^2*s23*(-2*s13^2 - 5*s13*s23 + 6*s23^2) + 
                s12^3*(-30*s13^2 + 2*s13*s23 + 7*s23^2) + s12*s13^2*
                 (-6*s13^2 + 2*s13*s23 + 7*s23^2) + s12^2*(24*s13^3 - 
                  10*s13^2*s23 - 11*s13*s23^2 - 6*s23^3)) + 2*p2q*p3q^3*(
                -2*s12^5 + s13^2*s23^3 + s12^4*(9*s13 + s23) + s12*s13*s23*
                 (2*s13^2 + 6*s13*s23 + 5*s23^2) + s12^3*(-10*s13^2 + 
                  2*s13*s23 + 6*s23^2) + s12^2*(3*s13^3 + s13^2*s23 - 
                  3*s13*s23^2 - 3*s23^3)) + p2q^4*s13*(4*s12^2*s13*
                 (s13 + s23) + s13^2*(2*s13^2 - 2*s13*s23 - 9*s23^2) + 
                s12*(-6*s13^3 + 6*s13^2*s23 + 9*s13*s23^2 - 2*s23^3)) - 
              2*p2q^3*p3q*(2*s12^3*s13*(3*s13 + 2*s23) + s13^2*(-s13^3 + 
                  s13^2*s23 + 5*s13*s23^2 - 3*s23^3) + s12^2*(-11*s13^3 + 
                  5*s13^2*s23 + 8*s13*s23^2 + s23^3) + s12*s13*(6*s13^3 - 
                  4*s13^2*s23 - 4*s13*s23^2 + 5*s23^3))) - 
            p1q^4*s23*(p3q*(-2*s12^3*(2*s13 + 3*s23) + s12*s23^2*
                 (7*s13 + 6*s23) - s13*s23^2*(4*s13 + 7*s23) + 
                s12^2*(4*s13^2 + 6*s13*s23 - 5*s23^2)) + 
              p2q*(2*s12^3*(s13 + s23) + s13*s23*(4*s13^2 + 3*s13*s23 - 
                  6*s23^2) + s12^2*(-4*s13^2 + 6*s13*s23 + 8*s23^2) + 
                s12*(2*s13^3 - 8*s13^2*s23 - 3*s13*s23^2 + 9*s23^3))) + 
            p1q^2*(p3q^3*(2*s12^5 + s13*s23^4 + 9*s12^2*s23^2*(s13 + s23) - 
                3*s12^4*(2*s13 + 3*s23) - s12*s13*s23^2*(4*s13 + 11*s23) + 
                s12^3*(4*s13^2 + 11*s13*s23 - 12*s23^2)) + p2q*p3q^2*(
                2*s12^5 - 3*s13*(s13 - 2*s23)*s23^3 - 2*s12^4*(5*s13 + 
                  2*s23) + s12^3*(16*s13^2 + 9*s13*s23 + s23^2) - 
                s12*s23*(2*s13^3 - 2*s13^2*s23 + 11*s13*s23^2 + 3*s23^3) + 
                s12^2*(-8*s13^3 - s13^2*s23 + 2*s13*s23^2 + 22*s23^3)) + 
              p2q^2*p3q*(-2*s12^4*(2*s13 + s23) + 2*s12^3*(7*s13^2 - 
                  s13*s23 - s23^2) + s13*s23*(2*s13^3 - 3*s13^2*s23 - 
                  20*s13*s23^2 + 3*s23^3) + s12^2*(-14*s13^3 + 17*s13^2*s23 + 
                  2*s13*s23^2 + 3*s23^3) + s12*(4*s13^4 - 17*s13^3*s23 + 
                  6*s13^2*s23^2 + 13*s13*s23^3 - 6*s23^4)) + 
              p2q^3*(2*s12^3*s13*(s13 + s23) + s13^2*s23*(7*s13^2 + 
                  8*s13*s23 - 9*s23^2) + 2*s12^2*s13*(-3*s13^2 + 3*s13*s23 + 
                  5*s23^2) + s12*(4*s13^4 - 17*s13^3*s23 - 3*s13^2*s23^2 + 
                  15*s13*s23^3 - s23^4)))))/(8*(p1q + p2q + p3q)*s12*s13*s23*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) - 
         (9*(s12 + s13 + s23)^2*(p1q^8*s23^4*(s13*s23*(s13 + s23) - 
              s12^2*(2*s13 + s23) + s12*(2*s13^2 - s23^2)) + 
            p1q^7*s23^3*(p2q*(s12^3*s13 + s12^2*(12*s13^2 + 3*s13*s23 - 
                  5*s23^2) + s13*s23*(-3*s13^2 + 2*s13*s23 + 6*s23^2) + 
                s12*(-5*s13^3 + 18*s13^2*s23 + 12*s13*s23^2 - 6*s23^3)) + 
              p3q*(s12^3*(5*s13 + 3*s23) + s13*s23^2*(5*s13 + 6*s23) - 
                2*s12^2*(6*s13^2 + 11*s13*s23 + 3*s23^2) - 
                s12*(s13^3 - s13^2*s23 + 12*s13*s23^2 + 10*s23^3))) + 
            (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(p2q^4*s13*(4*s13 - s23)*(
                s13*s23*(s13 + s23) + s12^2*(2*s13 + s23) + 
                s12*(2*s13^2 - s23^2)) + p3q^4*s12*s23*(s13*(s13 - s23)*s23 + 
                s12^2*(2*s13 + s23) + s12*(2*s13^2 + s23^2)) + 
              p2q*p3q^3*(s13*s23^3*(s13 + s23) + 4*s12^4*(2*s13 + s23) + 
                s12^2*s23*(8*s13^2 - 6*s13*s23 + s23^2) + s12^3*(8*s13^2 + 
                  6*s13*s23 + 6*s23^2) - s12*s23*(2*s13^3 - 4*s13^2*s23 + 
                  2*s13*s23^2 + s23^3)) + p2q^2*p3q^2*(8*s12^4*s13 + 
                s13*s23^2*(-s13^2 + s13*s23 + 2*s23^2) - s12^3*(8*s13^2 + 
                  6*s13*s23 + 3*s23^2) + s12*s23*(-10*s13^3 + 13*s13^2*s23 + 
                  4*s13*s23^2 - 2*s23^3) - s12^2*(16*s13^3 - 8*s13^2*s23 + 
                  9*s13*s23^2 + 5*s23^3)) - p2q^3*p3q*(2*s12^3*s13*
                 (8*s13 + s23) + s13*s23^2*(6*s13^2 + 5*s13*s23 - s23^2) + 
                s12^2*(8*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
                s12*(-8*s13^4 + 18*s13^3*s23 + 2*s13^2*s23^2 - 6*s13*s23^3 + 
                  s23^4))) - p1q^6*s23^2*(p3q^2*(s12^4*(4*s13 + 3*s23) + 
                s13*s23^2*(2*s13^2 - 5*s13*s23 - 11*s23^2) - 2*s12^3*
                 (9*s13^2 + 29*s13*s23 + 13*s23^2) + s12^2*(-2*s13^3 + 
                  31*s13^2*s23 + 31*s13*s23^2 - 13*s23^3) + s12*s23*
                 (8*s13^3 + 21*s13^2*s23 + 46*s13*s23^2 + 22*s23^3)) + 
              2*p2q*p3q*(s12^4*s13 + s13*s23^2*(8*s13^2 + 2*s13*s23 - 
                  11*s23^2) + s12^3*(7*s13^2 + s13*s23 - 8*s23^2) + 
                s12^2*(-7*s13^3 - 10*s13^2*s23 + 19*s13*s23^2 + 3*s23^3) - 
                s12*(s13^4 - 5*s13^3*s23 + 35*s13^2*s23^2 + 12*s13*s23^3 - 
                  16*s23^4)) + p2q^2*(2*s12^3*(s13^2 + 3*s13*s23 + 2*s23^2) + 
                s13*s23*(-3*s13^3 + 12*s13^2*s23 + 7*s13*s23^2 - 14*s23^3) + 
                s12^2*(18*s13^3 - 27*s13^2*s23 - 11*s13*s23^2 + 17*s23^3) + 
                s12*(-4*s13^4 + 48*s13^3*s23 - 25*s13^2*s23^2 - 42*s13*
                   s23^3 + 17*s23^4))) - p1q*(p2q + p3q)*
             (p3q^6*s12^2*s23*(2*s12^4 + s13*(2*s13 - 3*s23)*s23^2 - 
                s12^3*(17*s13 + 4*s23) - 2*s12^2*(5*s13^2 - s13*s23 + 
                  2*s23^2) + s12*(s13^3 + 5*s13*s23^2 + 3*s23^3)) - 
              2*p2q*p3q^5*s12*(4*s12^5*(2*s13 + s23) - s13*s23^3*
                 (s13^2 + s13*s23 + s23^2) + s12^4*(4*s13^2 - 4*s13*s23 + 
                  3*s23^2) - s12^2*s23*(18*s13^3 + 8*s13^2*s23 + 
                  10*s13*s23^2 + 7*s23^3) - s12^3*(4*s13^3 + 23*s13^2*s23 + 
                  42*s13*s23^2 + 7*s23^3) + s12*s23*(s13^4 - 3*s13^3*s23 + 
                  2*s13^2*s23^2 + 6*s13*s23^3 + s23^4)) + p2q^6*s13^2*(
                s12^3*s13*(8*s13 + 3*s23) + s13*s23*(-6*s13^3 + 16*s13^2*
                   s23 + 20*s13*s23^2 - 3*s23^3) - 2*s12^2*(4*s13^3 - 
                  9*s13^2*s23 - 2*s13*s23^2 + s23^3) + s12*(-16*s13^4 + 
                  57*s13^3*s23 + 18*s13^2*s23^2 - 21*s13*s23^3 + 3*s23^4)) + 
              p2q^2*p3q^4*(s13^2*s23^4*(s13 + 2*s23) - 2*s12^6*(12*s13 + 
                  5*s23) + 2*s12^5*s13*(24*s13 + 37*s23) + 2*s12^4*
                 (24*s13^3 - 9*s13^2*s23 + 49*s13*s23^2 + 8*s23^3) - 
                2*s12^2*s23*(20*s13^4 - 15*s13^3*s23 + 5*s13^2*s23^2 + 
                  11*s13*s23^3 + 3*s23^4) + s12*s13*s23*(s13^4 - 4*s13^3*
                   s23 + 25*s13^2*s23^2 + 15*s13*s23^3 + 4*s23^4) + 
                s12^3*(-24*s13^4 + 17*s13^3*s23 - 130*s13^2*s23^2 - 
                  32*s13*s23^3 + 6*s23^4)) - 2*p2q^5*p3q*s13*(3*s12^4*s13*
                 (4*s13 + s23) + s12^3*(-24*s13^3 + 2*s13^2*s23 - 
                  5*s13*s23^2 + s23^3) + s13*s23*(2*s13^4 - 11*s13^3*s23 - 
                  s13^2*s23^2 + 13*s13*s23^3 - s23^4) + s12^2*(-24*s13^4 + 
                  57*s13^3*s23 + 14*s13^2*s23^2 - 20*s13*s23^3 + s23^4) + 
                s12*(12*s13^5 - 56*s13^4*s23 + 40*s13^3*s23^2 + 40*s13^2*
                   s23^3 - 12*s13*s23^4 + s23^5)) + p2q^4*p3q^2*(
                3*s12^5*s13*(8*s13 + s23) - 8*s12^4*s13*(12*s13^2 + 
                  7*s13*s23 + 3*s23^2) - s12^3*(32*s13^4 - 115*s13^3*s23 + 
                  6*s13^2*s23^2 + 49*s13*s23^3 + s23^4) + 2*s13^2*s23*
                 (s13^4 + 6*s13^3*s23 - 6*s13^2*s23^2 - 11*s13*s23^3 + 
                  3*s23^4) + s12^2*(80*s13^5 - 202*s13^4*s23 + 118*s13^3*
                   s23^2 + 86*s13^2*s23^3 - 23*s13*s23^4 - 2*s23^5) - 
                2*s12*s13*(4*s13^5 - 33*s13^4*s23 + 65*s13^3*s23^2 + 
                  12*s13^2*s23^3 - 23*s13*s23^4 + 2*s23^5)) - 
              2*p2q^3*p3q^3*(4*s12^6*s13 - s12^5*(40*s13^2 + 26*s13*s23 + 
                  5*s23^2) + s12^4*(16*s13^3 + 62*s13^2*s23 - 8*s13*s23^2 - 
                  7*s23^3) + s13^2*s23^2*(s13^3 + 5*s13^2*s23 + 3*s13*s23^2 - 
                  3*s23^3) - s12*s13^2*s23*(6*s13^3 - 30*s13^2*s23 + 
                  13*s13*s23^2 + 15*s23^3) + s12^3*(48*s13^4 - 52*s13^3*s23 + 
                  73*s13^2*s23^2 + 31*s13*s23^3 - s23^4) + s12^2*(-12*s13^5 + 
                  54*s13^4*s23 - 79*s13^3*s23^2 - 20*s13^2*s23^3 + 
                  13*s13*s23^4 + 3*s23^5))) + p1q^3*(p3q^5*s23*(-2*s12^6 + 
                s13*s23^5 + s12^5*(38*s13 + 29*s23) - 2*s12^4*(11*s13^2 + 
                  62*s13*s23 + 10*s23^2) - s12*s23^2*(-3*s13^3 - 8*s13^2*
                   s23 + 13*s13*s23^2 + s23^3) + s12^2*s23*(12*s13^3 + 
                  21*s13^2*s23 + 53*s13*s23^2 + 20*s23^3) - s12^3*
                 (14*s13^3 + 29*s13^2*s23 + 4*s13*s23^2 + 45*s23^3)) + 
              p2q*p3q^4*(2*s12^6*s23 - 2*s12^5*(4*s13^2 + 5*s13*s23 - 
                  12*s23^2) + s12^3*s23*(30*s13^3 + 86*s13^2*s23 + 
                  196*s13*s23^2 - 65*s23^3) + s13*s23^3*(4*s13^3 + 
                  4*s13^2*s23 - 6*s13*s23^2 + 7*s23^3) - s12^4*(8*s13^3 + 
                  82*s13^2*s23 + 155*s13*s23^2 + 63*s23^3) + s12*s23^2*
                 (2*s13^4 - 43*s13^3*s23 + 2*s13^2*s23^2 - 59*s13*s23^3 - 
                  11*s23^4) + s12^2*s23*(12*s13^4 + 31*s13^3*s23 + 
                  2*s13^2*s23^2 + 13*s13*s23^3 + 64*s23^4)) - 
              p2q^5*(2*s12^4*s13*s23*(3*s13 + s23) + s12^3*s13*(8*s13^3 - 
                  18*s13^2*s23 + 20*s13*s23^2 + 5*s23^3) + s12^2*s13*
                 (8*s13^4 - 66*s13^3*s23 + 25*s13^2*s23^2 + 79*s13*s23^3 - 
                  8*s23^4) + s13*s23^2*(17*s13^4 - 46*s13^3*s23 - 
                  41*s13^2*s23^2 + 36*s13*s23^3 - s23^4) + s12*s23*
                 (62*s13^5 - 228*s13^4*s23 + 10*s13^3*s23^2 + 151*s13^2*
                   s23^3 - 29*s13*s23^4 + s23^5)) + p2q^4*p3q*(-6*s12^5*
                 s23^2 + 2*s12^4*(8*s13^3 + 21*s13^2*s23 + 20*s13*s23^2 - 
                  5*s23^3) + s12^3*s23*(-18*s13^3 + 35*s13^2*s23 + 
                  29*s13*s23^2 - 4*s23^3) - 2*s12^2*(8*s13^5 - 117*s13^4*
                   s23 + 77*s13^3*s23^2 + 4*s13^2*s23^3 - 8*s13*s23^4 - 
                  s23^5) - s12*s23*(70*s13^5 - 491*s13^4*s23 + 178*s13^3*
                   s23^2 + 245*s13^2*s23^3 - 115*s13*s23^4 + 11*s23^5) + 
                s13*s23*(4*s13^5 - 22*s13^4*s23 + 71*s13^3*s23^2 + 
                  49*s13^2*s23^3 - 88*s13*s23^4 + 15*s23^5)) + 
              p2q^2*p3q^3*(10*s12^6*s23 + 2*s12^4*s23*(52*s13^2 + 
                  40*s13*s23 - 35*s23^2) - s12^5*(16*s13^2 + 70*s13*s23 + 
                  11*s23^2) + s12^3*(16*s13^4 + 104*s13^3*s23 + 266*s13^2*
                   s23^2 + 335*s13*s23^3 - 21*s23^4) + s13*s23^2*(-6*s13^4 + 
                  13*s13^3*s23 + 13*s13^2*s23^2 - 38*s13*s23^3 + 16*s23^4) + 
                s12^2*s23*(46*s13^4 - 18*s13^3*s23 + 75*s13^2*s23^2 - 
                  99*s13*s23^3 + 88*s23^4) - s12*s23*(2*s13^5 - 89*s13^4*
                   s23 + 129*s13^3*s23^2 - 51*s13^2*s23^3 + 2*s13*s23^4 + 
                  16*s23^5)) + p2q^3*p3q^2*(6*s12^6*s23 - 2*s12^5*
                 (4*s13^2 + 19*s13*s23 + 6*s23^2) + s12^4*(24*s13^3 + 
                  148*s13^2*s23 + 97*s13*s23^2 - 25*s23^3) + 
                s12^3*(24*s13^4 - 72*s13^3*s23 + 38*s13^2*s23^2 + 
                  61*s13*s23^3 + 11*s23^4) - s12^2*(8*s13^5 - 138*s13^4*s23 + 
                  334*s13^3*s23^2 + 79*s13^2*s23^3 + 187*s13*s23^4 - 
                  46*s23^5) + s13*s23*(4*s13^5 - 11*s13^4*s23 + 42*s13^3*
                   s23^2 + 25*s13^2*s23^3 - 88*s13*s23^4 + 20*s23^5) - 
                s12*s23*(26*s13^5 - 294*s13^4*s23 + 367*s13^3*s23^2 + 
                  181*s13^2*s23^3 - 62*s13*s23^4 + 20*s23^5))) - 
            p1q^4*s23*(p3q^4*(-(s12^5*(14*s13 + 15*s23)) + 2*s13*s23^3*
                 (s13^2 + s13*s23 - 2*s23^2) + s12*s23^3*(4*s13^2 + 
                  39*s13*s23 + 7*s23^2) + s12^4*(26*s13^2 + 128*s13*s23 + 
                  53*s23^2) + s12^3*(8*s13^3 - 33*s13^2*s23 - 94*s13*s23^2 + 
                  28*s23^3) - s12^2*s23*(26*s13^3 + 51*s13^2*s23 + 
                  83*s13*s23^2 + 53*s23^3)) + p2q*p3q^3*(s12^5*(4*s13 - 
                  2*s23) + 6*s12^4*(3*s13^2 + 11*s13*s23 + 13*s23^2) - 
                2*s12^3*(18*s13^3 + 32*s13^2*s23 + 96*s13*s23^2 - s23^3) - 
                s13*s23^2*(12*s13^3 + 6*s13^2*s23 - 13*s13*s23^2 + 
                  21*s23^3) + s12^2*(-2*s13^4 - 40*s13^3*s23 + 24*s13^2*
                   s23^2 + 80*s13*s23^3 - 109*s23^4) + s12*s23*(-16*s13^4 + 
                  10*s13^3*s23 - 74*s13^2*s23^2 + 50*s13*s23^3 + 29*s23^4)) + 
              p2q^4*(s12^4*(6*s13^2 - 4*s13*s23 - 2*s23^2) - 2*s12^3*
                 (s13^3 - 6*s13^2*s23 + 8*s13*s23^2 + s23^3) + s13*s23*
                 (5*s13^4 - 33*s13^3*s23 + 6*s13^2*s23^2 + 53*s13*s23^3 - 
                  11*s23^4) + s12^2*(-44*s13^4 + 115*s13^3*s23 + 39*s13^2*
                   s23^2 - 66*s13*s23^3 + 4*s23^4) + s12*(12*s13^5 - 
                  146*s13^4*s23 + 172*s13^3*s23^2 + 127*s13^2*s23^3 - 
                  93*s13*s23^4 + 8*s23^5)) + p2q^3*p3q*(2*s12^5*(5*s13 + 
                  4*s23) + 2*s12^4*(3*s13^2 + 4*s13*s23 + s23^2) + 
                2*s12^3*(24*s13^3 + 64*s13^2*s23 + 55*s13*s23^2 - 12*s23^3) + 
                s13*s23*(14*s13^4 - 34*s13^3*s23 + 16*s13^2*s23^2 + 
                  91*s13*s23^3 - 33*s23^4) + s12^2*(-54*s13^4 + 256*s13^3*
                   s23 + 86*s13^2*s23^2 + 96*s13*s23^3 - 13*s23^4) + 
                s12*(6*s13^5 - 166*s13^4*s23 + 416*s13^3*s23^2 + 146*s13^2*
                   s23^3 - 156*s13*s23^4 + 33*s23^5)) + p2q^2*p3q^2*(
                4*s12^5*(3*s13 + 5*s23) + s12^4*(-40*s13^2 - 65*s13*s23 + 
                  39*s23^2) + s12^3*(6*s13^3 + 71*s13^2*s23 - 32*s13*s23^2 - 
                  49*s23^3) + s12^2*(20*s13^4 + 141*s13^3*s23 + 74*s13^2*
                   s23^2 + 224*s13*s23^3 - 93*s23^4) + s13*s23*(10*s13^4 - 
                  15*s13^3*s23 + 11*s13^2*s23^2 + 65*s13*s23^3 - 35*s23^4) + 
                s12*(10*s13^5 - 21*s13^4*s23 + 274*s13^3*s23^2 - 54*s13^2*
                   s23^3 - 80*s13*s23^4 + 39*s23^5))) + 
            p1q^5*s23*(p3q^3*(s12^5*(s13 + s23) - s13*s23^3*(4*s13^2 + 
                  s13*s23 - 9*s23^2) - 2*s12^4*(4*s13^2 + 25*s13*s23 + 
                  16*s23^2) - s12*s23^2*(10*s13^3 + 31*s13^2*s23 + 
                  63*s13*s23^2 + 19*s23^3) + s12^3*(-s13^3 + 55*s13^2*s23 + 
                  132*s13*s23^2 + 25*s23^3) + s12^2*s23*(16*s13^3 + 
                  5*s13^2*s23 + 30*s13*s23^2 + 54*s23^3)) + p2q*p3q^2*(
                s12^5*s13 + 3*s12^4*(2*s13^2 + s13*s23 - 5*s23^2) + 
                s13*s23^2*(8*s13^3 - 11*s13^2*s23 - 14*s13*s23^2 + 
                  31*s23^3) + s12^3*(15*s13^3 + 16*s13^2*s23 + 94*s13*s23^2 + 
                  62*s23^3) + s12*s23*(18*s13^4 + 18*s13^3*s23 + 128*s13^2*
                   s23^2 + 7*s13*s23^3 - 45*s23^4) + s12^2*(2*s13^4 + 
                  57*s13^3*s23 + 26*s13^2*s23^2 - 77*s13*s23^3 + 67*s23^4)) + 
              p2q^3*(2*s12^4*s23*(3*s13 + s23) + s12^3*(s13^3 + 12*s13^2*
                   s23 + 14*s13*s23^2 - 2*s23^3) - s13*s23*(s13^4 - 
                  14*s13^3*s23 + 17*s13^2*s23^2 + 28*s13*s23^3 - 19*s23^4) + 
                s12^2*(8*s13^4 - 65*s13^3*s23 + 51*s13^2*s23^2 + 
                  63*s13*s23^3 - 17*s23^4) - s12*(s13^5 - 42*s13^4*s23 + 
                  128*s13^3*s23^2 + 2*s13^2*s23^3 - 97*s13*s23^4 + 
                  19*s23^5)) - p2q^2*p3q*(2*s12^4*(s13^2 - 7*s13*s23 - 
                  7*s23^2) + s12^3*(15*s13^3 + 71*s13^2*s23 + 38*s13*s23^2 - 
                  47*s23^3) + s13*s23^2*(-21*s13^3 + 20*s13^2*s23 + 
                  39*s13*s23^2 - 37*s23^3) + 2*s12^2*(3*s13^4 + 34*s13^3*
                   s23 - 13*s13^2*s23^2 + 28*s13*s23^3 - 7*s23^4) + 
                s12*(s13^5 - 15*s13^4*s23 + 170*s13^3*s23^2 - 81*s13^2*
                   s23^3 - 119*s13*s23^4 + 45*s23^5))) + 
            p1q^2*(p3q^6*s12*s23*(-4*s12^5 + s13*(s13 - 3*s23)*s23^3 + 
                2*s12^4*(20*s13 + 9*s23) + s12*s23^2*(-8*s13^2 + 14*s13*s23 + 
                  3*s23^2) + s12^3*(4*s13^2 - 44*s13*s23 + 7*s23^2) - 
                s12^2*(8*s13^3 + 26*s13^2*s23 + 23*s13*s23^2 + 18*s23^3)) + 
              p2q*p3q^5*(s13*s23^5*(-s13 + s23) + 4*s12^6*(2*s13 + s23) + 
                s12^5*(-8*s13^2 - 6*s13*s23 + 24*s23^2) + s12^3*s23*
                 (-22*s13^3 + 30*s13^2*s23 + 82*s13*s23^2 - 33*s23^3) - 
                s12^4*(16*s13^3 + 102*s13^2*s23 + 162*s13*s23^2 + 13*s23^3) - 
                s12*s23^2*(-2*s13^4 + 12*s13^3*s23 - 2*s13^2*s23^2 + 
                  16*s13*s23^3 + s23^4) + s12^2*s23*(14*s13^4 + 30*s13^3*
                   s23 + 43*s13^2*s23^2 + 71*s13*s23^3 + 25*s23^4)) + 
              p2q^6*s13*(2*s12^3*s13*(-8*s13^2 + 7*s13*s23 + 3*s23^2) + 
                s13*s23*(2*s13^4 - 32*s13^3*s23 + 5*s13^2*s23^2 + 
                  42*s13*s23^3 - 3*s23^4) - s12^2*(8*s13^4 - 10*s13^3*s23 - 
                  40*s13^2*s23^2 + 2*s13*s23^3 + s23^4) + s12*(8*s13^5 - 
                  106*s13^4*s23 + 106*s13^3*s23^2 + 97*s13^2*s23^3 - 
                  38*s13*s23^4 + 3*s23^5)) + p2q^2*p3q^4*(4*s12^6*
                 (4*s13 + 5*s23) - 2*s12^5*(24*s13^2 + 73*s13*s23 - 
                  3*s23^2) - s12^4*(24*s13^3 - 6*s13^2*s23 + 142*s13*s23^2 + 
                  41*s23^3) + s12^3*(40*s13^4 + 42*s13^3*s23 + 270*s13^2*
                   s23^2 + 248*s13*s23^3 - 29*s23^4) + s13*s23^2*(2*s13^4 + 
                  12*s13^3*s23 + 13*s13^2*s23^2 - 7*s13*s23^3 + 4*s23^4) + 
                2*s12^2*s23*(33*s13^4 - 18*s13^3*s23 + 31*s13^2*s23^2 + 
                  28*s13*s23^3 + 19*s23^4) - s12*s23*(4*s13^5 - 44*s13^4*
                   s23 + 53*s13^3*s23^2 - 5*s13^2*s23^3 + 19*s13*s23^4 + 
                  4*s23^5)) + p2q^3*p3q^3*(4*s12^6*(2*s13 + 3*s23) - 
                2*s12^5*(36*s13^2 + 71*s13*s23 + 6*s23^2) + s12^4*
                 (40*s13^3 + 234*s13^2*s23 - 4*s13*s23^2 - 35*s23^3) + 
                s12^3*(88*s13^4 - 120*s13^3*s23 + 280*s13^2*s23^2 + 
                  222*s13*s23^3 - 11*s23^4) - s12^2*(32*s13^5 - 164*s13^4*
                   s23 + 360*s13^3*s23^2 + 38*s13^2*s23^3 + s13*s23^4 - 
                  30*s23^5) + s13*s23*(-2*s13^5 - 12*s13^4*s23 + 17*s13^3*
                   s23^2 + 23*s13^2*s23^3 - 34*s13*s23^4 + 6*s23^5) - 
                s12*s23*(50*s13^5 - 180*s13^4*s23 + 158*s13^3*s23^2 + 
                  79*s13^2*s23^3 - 4*s13*s23^4 + 6*s23^5)) + p2q^4*p3q^2*(
                -2*s12^5*(16*s13^2 + 21*s13*s23 + 6*s23^2) + 2*s12^4*
                 (44*s13^3 + 69*s13^2*s23 + 19*s13*s23^2 - 9*s23^3) + 
                s12^3*(40*s13^4 - 216*s13^3*s23 + 38*s13^2*s23^2 + 
                  107*s13*s23^3 - 5*s23^4) + s13*s23*(2*s13^5 - 30*s13^4*
                   s23 + 39*s13^3*s23^2 + 53*s13^2*s23^3 - 58*s13*s23^4 + 
                  4*s23^5) + s12^2*(-72*s13^5 + 332*s13^4*s23 - 404*s13^3*
                   s23^2 - 136*s13^2*s23^3 + 15*s13*s23^4 + 11*s23^5) + 
                s12*(8*s13^6 - 150*s13^5*s23 + 414*s13^4*s23^2 - 104*s13^3*
                   s23^3 - 204*s13^2*s23^4 + 35*s13*s23^5 - 4*s23^6)) + 
              p2q^5*p3q*(2*s12^4*s13*(20*s13^2 + 8*s13*s23 + 9*s23^2) - 
                2*s12^3*s13*(12*s13^3 + 13*s13^2*s23 + 11*s13*s23^2 - 
                  18*s23^3) + s13*s23*(6*s13^5 - 48*s13^4*s23 + 35*s13^3*
                   s23^2 + 77*s13^2*s23^3 - 37*s13*s23^4 + s23^5) + 
                s12^2*(-48*s13^5 + 230*s13^4*s23 - 70*s13^3*s23^2 - 
                  89*s13^2*s23^3 + 22*s13*s23^4 + s23^5) + s12*(16*s13^6 - 
                  210*s13^5*s23 + 382*s13^4*s23^2 + 102*s13^3*s23^3 - 
                  167*s13^2*s23^4 + 28*s13*s23^5 - s23^6)))))/
          (8*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
           (p1q^5*s23^3*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*
        p1 . E0conj*p2 . E0 + ((9*ep*p1q^2*(s12 + s13 + s23)^3*
           (-((p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-(p2q*s13^2) + p2q*s12*
                (s13 + s23) + p3q*(-s12^2 + s12*s13 + s13*s23))) - 
            p1q^3*s23*(p3q*(s13 + s23)*(-s12^2 + s12*s13 + s13*s23) + 
              p2q*(s12 + s23)*(-s13^2 + s12*(s13 + s23))) + 
            p1q*(p3q^3*s12*(s12^3 - 2*s12^2*(s13 + s23) + s12*s13*
                 (s13 + s23) + s13*s23*(s13 + 2*s23)) + p2q^2*p3q*(
                s13^2*(s13 - s23)^2 - s12^3*(2*s13 + s23) + s12^2*s13*
                 (5*s13 + s23) + s12*s13*(-4*s13^2 + 2*s13*s23 + s23^2)) + 
              p2q*p3q^2*(s12^4 - s13^3*s23 - 2*s12^3*(2*s13 + s23) + 
                s12*s13*(-2*s13^2 + s13*s23 + s23^2) + s12^2*(5*s13^2 + 
                  2*s13*s23 + s23^2)) + p2q^3*s13*(s13^2*(s13 - 2*s23) + 
                s12^2*(s13 + s23) + s12*(-2*s13^2 + s13*s23 + 2*s23^2))) + 
            p1q^2*(p3q^2*(s12*s13*s23^2 - s13*s23^2*(s13 + s23) - 
                s12^3*(s13 + 2*s23) + s12^2*(s13^2 + 3*s13*s23 + s23^2)) + 
              p2q*p3q*(-(s12^3*s13) + 2*s13^2*s23^2 + s12*s13*(-s13^2 + 
                  3*s13*s23 + 2*s23^2) + s12^2*(2*s13^2 + 3*s13*s23 + 
                  2*s23^2)) + p2q^2*(s13^2*s23*(-2*s13 + s23) + 
                s12^2*(s13^2 - s23^2) - s12*(s13^3 - 3*s13^2*s23 - 
                  s13*s23^2 + s23^3)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) - 
         (9*(s12 + s13 + s23)^2*(-2*p1q^7*s23^4*(p3q*s12*(s12 - s13 + s23)*(
                s13 + s23) + p2q*s13*(s12 + s23)*(-s12 + s13 + s23)) + 
            2*(p2q + p3q)^3*(-(p3q*s12) + p2q*s13)^3*
             (p2q^2*s13*(s13*s23*(s13 + s23) + s12^2*(2*s13 + s23) + 
                s12*(2*s13^2 - s23^2)) - p3q^2*s12*(s13*(s13 - s23)*s23 + 
                s12^2*(2*s13 + s23) + s12*(2*s13^2 + s23^2)) + 
              p2q*p3q*(-2*s12^3*s13 - s13*s23^2*(s13 + s23) + s12^2*s23*
                 (2*s13 + s23) + s12*(2*s13^3 - 2*s13^2*s23 + s23^3))) - 
            p1q^6*s23^3*(p2q^2*(s12^3*(7*s13 + 3*s23) + s13*s23*(-7*s13^2 - 
                  3*s13*s23 + 4*s23^2) + s12^2*(2*s13^2 + 5*s13*s23 + 
                  6*s23^2) + s12*(-5*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 + 
                  3*s23^3)) + p3q^2*(3*s13*s23*(s13 + s23)^2 - 
                s12^3*(5*s13 + 7*s23) + s12^2*(2*s13^2 + 3*s13*s23 - 
                  3*s23^2) + s12*(7*s13^3 + 5*s13^2*s23 + 2*s13*s23^2 + 
                  4*s23^3)) + p2q*p3q*(6*s12^3*s13 + 5*s13*s23^2*
                 (s13 + s23) + s12^2*(-20*s13^2 - 16*s13*s23 + 5*s23^2) + 
                s12*(6*s13^3 - 16*s13^2*s23 - 24*s13*s23^2 + 5*s23^3))) + 
            p1q^5*s23^2*(p3q^3*(s13*(s13 - 5*s23)*s23*(s13 + s23)^2 - 
                s12^4*(4*s13 + 9*s23) + s12^3*(-5*s13^2 + 2*s13*s23 + 
                  4*s23^2) + s12^2*(14*s13^3 + 28*s13^2*s23 + 14*s13*s23^2 + 
                  13*s23^3) + s12*s13*(3*s13^3 + 2*s13^2*s23 + 16*s13*s23^2 + 
                  17*s23^3)) + p2q^2*p3q*(s12^4*(16*s13 + 11*s23) + 
                s12^3*(-7*s13^2 - 10*s13*s23 + 18*s23^2) + s12^2*(-26*s13^3 + 
                  26*s13^2*s23 + 36*s13*s23^2) + s13*s23*(3*s13^3 + 
                  21*s13^2*s23 + 14*s13*s23^2 - 4*s23^3) + s12*(9*s13^4 - 
                  38*s13^3*s23 + 2*s13^2*s23^2 + 63*s13*s23^3 - 7*s23^4)) + 
              p2q^3*(s12^4*(3*s13 + s23) + s12^3*(14*s13^2 + 2*s13*s23 - 
                  3*s23^2) + s13^2*s23*(-9*s13^2 + 4*s13*s23 + 13*s23^2) + 
                s12^2*(-5*s13^3 + 28*s13^2*s23 + 16*s13*s23^2 - 9*s23^3) + 
                s12*(-4*s13^4 + 2*s13^3*s23 + 14*s13^2*s23^2 + 17*s13*s23^3 - 
                  5*s23^4)) + p2q*p3q^2*(3*s12^4*(3*s13 + s23) + 
                s12^3*(-26*s13^2 - 38*s13*s23 + 21*s23^2) + s13*s23*
                 (11*s13^3 + 18*s13^2*s23 - 7*s23^3) + s12^2*(-7*s13^3 + 
                  26*s13^2*s23 + 2*s13*s23^2 + 14*s23^3) + s12*(16*s13^4 - 
                  10*s13^3*s23 + 36*s13^2*s23^2 + 63*s13*s23^3 - 4*s23^4))) - 
            2*p1q*(p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*
             (p2q^4*s13^2*(s12^3*(2*s13 + s23) + s12^2*(-2*s13^2 + 
                  2*s13*s23 + s23^2) + s13*s23*(-s13^2 + 3*s13*s23 + 
                  4*s23^2) + s12*(-4*s13^3 + 10*s13^2*s23 + 5*s13*s23^2 - 
                  4*s23^3)) + p3q^4*s12^2*(s12^3*(4*s13 + s23) - 
                s13*s23*(s13^2 + s13*s23 - 4*s23^2) + s12^2*(2*s13^2 - 
                  10*s13*s23 - 3*s23^2) - s12*(2*s13^3 + 2*s13^2*s23 + 
                  5*s13*s23^2 + 4*s23^3)) + p2q^3*p3q*s13*(
                -(s12^4*(4*s13 + s23)) + s12^3*(10*s13^2 + 9*s13*s23 + 
                  5*s23^2) + s13*s23*(-2*s13^3 + s13^2*s23 - 3*s23^3) + 
                s12^2*(8*s13^3 - 9*s13^2*s23 + s13*s23^2 + 5*s23^3) - 
                s12*(6*s13^4 - 19*s13^3*s23 + s13^2*s23^2 + 7*s13*s23^3 - 
                  3*s23^4)) + p2q^2*p3q^2*(s12 - s13)*(2*s12^4*s13 + 
                s13*s23^2*(-2*s13^2 - s13*s23 + s23^2) - s12^3*(12*s13^2 + 
                  13*s13*s23 + 2*s23^2) + s12^2*(-12*s13^3 + 4*s13^2*s23 + 
                  s13*s23^2 - s23^3) + s12*(2*s13^4 - 13*s13^3*s23 + 
                  s13^2*s23^2 + 2*s13*s23^3 + s23^4)) + p2q*p3q^3*s12*(
                2*s12^4*(3*s13 + s23) + s12^2*s13*(-10*s13^2 + 9*s13*s23 + 
                  s23^2) - s12^3*(8*s13^2 + 19*s13*s23 + s23^2) + 
                s13*s23*(s13^3 - 5*s13^2*s23 - 5*s13*s23^2 - 3*s23^3) + 
                s12*(4*s13^4 - 9*s13^3*s23 - s13^2*s23^2 + 7*s13*s23^3 + 
                  3*s23^4))) - p1q^3*(-(p2q*p3q^4*(3*s12^6*s23 + 
                 s12^5*(-12*s13^2 - 40*s13*s23 + s23^2) + 4*s12^4*(-s13^3 + 
                   19*s13^2*s23 + 42*s13*s23^2 + s23^3) + s12^2*s23*
                  (27*s13^4 + 33*s13^3*s23 - 3*s13^2*s23^2 - 116*s13*s23^3 - 
                   12*s23^4) + s12^3*(8*s13^4 + 6*s13^3*s23 - 34*s13^2*
                    s23^2 + 9*s13*s23^3 - 8*s23^4) - s13*s23^2*(3*s13^4 + 
                   3*s13^3*s23 + 2*s13*s23^3 + 2*s23^4) + s12*s23^2*
                  (21*s13^4 - 7*s13^3*s23 + 9*s13^2*s23^2 + 28*s13*s23^3 + 
                   2*s23^4))) + p2q^5*s13*(s12^4*s23*(3*s13 + s23) + 
                s12^3*(4*s13^3 - 2*s13^2*s23 + 4*s13*s23^2 + s23^3) + 
                s12^2*(4*s13^4 - 22*s13^3*s23 + 27*s13^2*s23^2 + 
                  29*s13*s23^3 - 8*s23^4) + s12*s23*(12*s13^4 - 52*s13^3*
                   s23 + 7*s13^2*s23^2 + 49*s13*s23^3 - 8*s23^4) + 
                s13*s23*(s13^4 - 6*s13^3*s23 - 13*s13^2*s23^2 + 2*s13*s23^3 + 
                  8*s23^4)) + p3q^5*s12*(s12^5*s23 + 2*s12^4*(2*s13^2 + 
                  6*s13*s23 - 3*s23^2) + s12^3*(4*s13^3 - 22*s13^2*s23 - 
                  52*s13*s23^2 - 13*s23^3) + s13*s23^2*(s13^3 + s13^2*s23 - 
                  8*s13*s23^2 - 8*s23^3) + s12^2*s23*(-2*s13^3 + 27*s13^2*
                   s23 + 7*s13*s23^2 + 2*s23^3) + s12*s23*(3*s13^4 + 
                  4*s13^3*s23 + 29*s13^2*s23^2 + 49*s13*s23^3 + 8*s23^4)) + 
              p2q^3*p3q^2*(-3*s12^6*s23 + s12^5*(4*s13^2 + 20*s13*s23 + 
                  9*s23^2) - s12^4*(20*s13^3 + 97*s13^2*s23 + 93*s13*s23^2 - 
                  6*s23^3) - 2*s12^3*(6*s13^4 + 8*s13^3*s23 + 5*s13^2*s23^2 - 
                  17*s13*s23^3 + 6*s23^4) + s12^2*(12*s13^5 - 121*s13^4*s23 + 
                  34*s13^3*s23^2 + 2*s13^2*s23^3 + 68*s13*s23^4 - 4*s23^5) + 
                s13*s23*(-7*s13^5 + 11*s13^4*s23 + 14*s13^3*s23^2 - 
                  2*s13^2*s23^3 - 2*s23^5) + s12*s23*(48*s13^5 - 187*s13^4*
                   s23 + 16*s13^3*s23^2 + 140*s13^2*s23^3 - 30*s13*s23^4 + 
                  2*s23^5)) + p2q^4*p3q*(3*s12^5*s23^2 - s12^4*(8*s13^3 + 
                  27*s13^2*s23 + 21*s13*s23^2 - 3*s23^3) + s12^3*s13*
                 (4*s13^3 - 6*s13^2*s23 - 33*s13*s23^2 + 7*s23^3) + 
                s12*s23*(40*s13^5 - 168*s13^4*s23 - 9*s13^3*s23^2 + 
                  116*s13^2*s23^3 - 28*s13*s23^4 + 2*s23^5) - s13*s23*
                 (3*s13^5 + s13^4*s23 + 4*s13^3*s23^2 - 8*s13^2*s23^3 - 
                  12*s13*s23^4 + 2*s23^5) + s12^2*(12*s13^5 - 76*s13^4*s23 + 
                  34*s13^3*s23^2 + 3*s13^2*s23^3 - 9*s13*s23^4 + 2*s23^5)) + 
              p2q^2*p3q^3*(-7*s12^6*s23 + s12^5*(12*s13^2 + 48*s13*s23 + 
                  11*s23^2) - s12^4*(12*s13^3 + 121*s13^2*s23 + 187*s13*
                   s23^2 - 14*s23^3) - 2*s12^3*(10*s13^4 + 8*s13^3*s23 - 
                  17*s13^2*s23^2 - 8*s13*s23^3 + s23^4) + s12^2*s13*
                 (4*s13^4 - 97*s13^3*s23 - 10*s13^2*s23^2 + 2*s13*s23^3 + 
                  140*s23^4) + s12*s23*(20*s13^5 - 93*s13^4*s23 + 
                  34*s13^3*s23^2 + 68*s13^2*s23^3 - 30*s13*s23^4 - 2*s23^5) + 
                s13*s23*(-3*s13^5 + 9*s13^4*s23 + 6*s13^3*s23^2 - 
                  12*s13^2*s23^3 - 4*s13*s23^4 + 2*s23^5))) - 
            p1q^4*s23*(-(p3q^4*(s13*(s13 - 2*s23)*s23^2*(s13 + s23)^2 + 
                 s12^5*(s13 + 5*s23) + s12^4*(9*s13^2 + 9*s13*s23 - 
                   10*s23^2) + s12^2*s13*(-3*s13^3 + 7*s13^2*s23 + 
                   6*s13*s23^2 - 22*s23^3) - s12^3*(3*s13^3 + 41*s13^2*s23 + 
                   39*s13*s23^2 + 17*s23^3) + s12*s23*(2*s13^4 + 8*s13^3*
                    s23 + 31*s13^2*s23^2 + 27*s13*s23^3 + 2*s23^4))) + 
              p2q*p3q^3*(s12^5*(5*s13 + 6*s23) - 2*s12^4*(9*s13^2 + 
                  25*s13*s23 - 11*s23^2) + s12^3*(6*s13^3 + 96*s13^2*s23 + 
                  112*s13*s23^2 + 9*s23^3) + s12^2*(2*s13^4 + 44*s13^3*s23 + 
                  55*s13^2*s23^2 + 113*s13*s23^3 - 9*s23^4) + s13*s23*
                 (4*s13^4 - 5*s13^3*s23 - 15*s13^2*s23^2 + 6*s23^4) + 
                s12*(5*s13^5 - 4*s13^4*s23 + 60*s13^3*s23^2 + 11*s13^2*
                   s23^3 - 53*s13*s23^4 - 2*s23^5)) + p2q^4*(s12^3*s13*
                 (3*s13^2 - 7*s13*s23 - 8*s23^2) + s12^4*(3*s13^2 - 
                  2*s13*s23 - s23^2) + s13*s23*(-5*s13^4 + 10*s13^3*s23 + 
                  17*s13^2*s23^2 - 2*s23^4) + s12^2*(-9*s13^4 + 41*s13^3*
                   s23 - 6*s13^2*s23^2 - 31*s13*s23^3 + 3*s23^4) - 
                s12*(s13^5 + 9*s13^4*s23 - 39*s13^3*s23^2 - 22*s13^2*s23^3 + 
                  27*s13*s23^4 - 2*s23^5)) + p2q^2*p3q^2*(s12^5*(11*s13 + 
                  15*s23) + s13*s23*(s13 + s23)^2*(15*s13^2 - 18*s13*s23 + 
                  2*s23^2) + s12^4*(-10*s13^2 - 43*s13*s23 + 12*s23^2) + 
                s12^3*(6*s13^3 + 106*s13^2*s23 + 121*s13*s23^2 - 19*s23^3) + 
                s12^2*(-10*s13^4 + 106*s13^3*s23 + 74*s13^2*s23^2 + 
                  85*s13*s23^3 - 14*s23^4) + s12*(11*s13^5 - 43*s13^4*s23 + 
                  121*s13^3*s23^2 + 85*s13^2*s23^3 - 80*s13*s23^4 + 
                  2*s23^5)) + p2q^3*p3q*(s12^5*(5*s13 + 4*s23) + 
                s12^4*(2*s13^2 - 4*s13*s23 - 5*s23^2) + s12^3*(6*s13^3 + 
                  44*s13^2*s23 + 60*s13*s23^2 - 15*s23^3) + s12^2*s13*
                 (-18*s13^3 + 96*s13^2*s23 + 55*s13*s23^2 + 11*s23^3) + 
                s13*s23*(6*s13^4 + 22*s13^3*s23 + 9*s13^2*s23^2 - 
                  9*s13*s23^3 - 2*s23^4) + s12*(5*s13^5 - 50*s13^4*s23 + 
                  112*s13^3*s23^2 + 113*s13^2*s23^3 - 53*s13*s23^4 + 
                  6*s23^5))) - p1q^2*(p2q + p3q)*(p3q^5*s12^2*(
                s12^4*(-4*s13 + s23) + s12^3*(4*s13^2 + 33*s13*s23 + 
                  7*s23^2) + s13*s23^2*(-3*s13^2 + 5*s13*s23 + 12*s23^2) + 
                s12^2*(8*s13^3 - 7*s13^2*s23 - 31*s13*s23^2 - 6*s23^3) - 
                s12*s23*(3*s13^3 + 7*s13^2*s23 + 37*s13*s23^2 + 12*s23^3)) - 
              p2q*p3q^4*s12*(s12^5*(8*s13 + 6*s23) - s12^4*(24*s13^2 + 
                  75*s13*s23 + 5*s23^2) + 2*s13*s23^2*(5*s13^3 + 6*s13^2*
                   s23 + 6*s13*s23^2 + 3*s23^3) + s12^3*(-12*s13^3 + 
                  57*s13^2*s23 + 79*s13*s23^2 + 5*s23^3) + s12*s23*
                 (15*s13^4 + s13^3*s23 - 18*s13^2*s23^2 - 36*s13*s23^3 - 
                  6*s23^4) + s12^2*(20*s13^4 - 27*s13^3*s23 - 27*s13^2*
                   s23^2 + 55*s13*s23^3 + 10*s23^4)) + p2q^5*s13^2*(
                s12^3*(8*s13^2 - 3*s13*s23 - 3*s23^2) + s13*s23*(s13^3 + 
                  7*s13^2*s23 - 6*s13*s23^2 - 12*s23^3) + s12^2*(4*s13^3 - 
                  7*s13^2*s23 - 7*s13*s23^2 + 5*s23^3) + s12*(-4*s13^4 + 
                  33*s13^3*s23 - 31*s13^2*s23^2 - 37*s13*s23^3 + 12*s23^4)) + 
              p2q^3*p3q^2*(s12^5*(16*s13^2 + 23*s13*s23 + 5*s23^2) - 
                s12^4*(44*s13^3 + 87*s13^2*s23 + 31*s13*s23^2 - 3*s23^3) + 
                s13^2*s23*(-5*s13^4 + 7*s13^3*s23 + 6*s13^2*s23^2 - 
                  2*s13*s23^3 + 4*s23^4) - s12^3*(20*s13^4 - 60*s13^3*s23 + 
                  15*s13*s23^3 + 4*s23^4) + s12^2*(36*s13^5 - 112*s13^4*s23 + 
                  40*s13^3*s23^2 + 19*s13^2*s23^3 + 2*s13*s23^4 - 2*s23^5) - 
                s12*s13*(4*s13^5 - 73*s13^4*s23 + 57*s13^3*s23^2 + 
                  17*s13^2*s23^3 - 38*s13*s23^4 + 2*s23^5)) + 
              p2q^2*p3q^3*(-(s12^6*(4*s13 + 5*s23)) + s12^5*(36*s13^2 + 
                  73*s13*s23 + 7*s23^2) - s12^4*(20*s13^3 + 112*s13^2*s23 + 
                  57*s13*s23^2 - 6*s23^3) + s13^2*s23^2*(5*s13^3 + 
                  3*s13^2*s23 - 4*s13*s23^2 - 2*s23^3) + s12^3*(-44*s13^4 + 
                  60*s13^3*s23 + 40*s13^2*s23^2 - 17*s13*s23^3 - 2*s23^4) + 
                s12*s13*s23*(23*s13^4 - 31*s13^3*s23 - 15*s13^2*s23^2 + 
                  2*s13*s23^3 - 2*s23^4) + s12^2*(16*s13^5 - 87*s13^4*s23 + 
                  19*s13^2*s23^3 + 38*s13*s23^4 + 4*s23^5)) - 
              p2q^4*p3q*s13*(5*s12^4*(4*s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12^3*(-12*s13^3 - 27*s13^2*s23 + s13*s23^2 + 12*s23^3) + 
                s13*s23*(6*s13^4 - 5*s13^3*s23 + 5*s13^2*s23^2 + 
                  10*s13*s23^3 - 6*s23^4) - 3*s12^2*(8*s13^4 - 19*s13^3*s23 + 
                  9*s13^2*s23^2 + 6*s13*s23^3 - 4*s23^4) + s12*(8*s13^5 - 
                  75*s13^4*s23 + 79*s13^3*s23^2 + 55*s13^2*s23^3 - 
                  36*s13*s23^4 + 6*s23^5)))))/(4*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s13*s23^2*(p1q^5*s23^3*(s12 + s23)*
             (s13 + s23) + (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*
        p2 . E0*p2 . E0conj + p1 . E0*
        (((-9*ep*p1q*(s12 + s13 + s23)^2*(2*p1q^5*s12*s23^3*(s13 + s23) - 
              (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-(p3q^2*s12^2*(s12 + s13 - 
                   s23)) + p2q*p3q*s12*(-2*s12^2 + 2*s13^2 + s12*s23 + 
                  s13*s23 - s23^2) - p2q^2*(s13 + s23)*(-2*s12^2 - s12*s13 + 
                  s13*(s13 + s23))) + p1q^4*s23^2*(-(p3q*s12*(5*s12*s13 + 
                   s13^2 + 7*s12*s23 - 2*s13*s23 - 3*s23^2)) + 
                p2q*(-(s12^2*(s13 + s23)) + s13*s23*(s13 + s23) + 
                  s12*(-5*s13^2 + s13*s23 + 5*s23^2))) - p1q^3*s23*(
                -(p3q^2*s12*(-(s13^2*s23) + s23^3 + s12^2*(4*s13 + 9*s23) + 
                   2*s12*(s13^2 - 2*s13*s23 - 5*s23^2))) + p2q^2*
                 (s12^3*(s13 + s23) + s13*s23*(s13^2 - s13*s23 - 2*s23^2) + 
                  s12^2*(-2*s13^2 + 3*s13*s23 + 4*s23^2) + s12*(-5*s13^3 + 
                    9*s13^2*s23 + 8*s13*s23^2 - 3*s23^3)) + p2q*p3q*
                 (-(s12^3*(3*s13 + 4*s23)) + 3*s12^2*s23*(3*s13 + 5*s23) + 
                  s13*s23*(s13^2 - s23^2) - s12*(s13^3 - 12*s13^2*s23 - 
                    6*s13*s23^2 + 5*s23^3))) + p1q*(p3q^4*s12^3*(s12^2 - 
                  s13^2 - 6*s12*s23 - 2*s13*s23 + 3*s23^2) + p2q^4*s13*
                 (s12^3*(s13 + s23) + s12^2*(-3*s13^2 + 3*s13*s23 + 
                    5*s23^2) + s12*s13*(-3*s13^2 + 3*s13*s23 + 5*s23^2) + 
                  s13*(s13^3 + s13^2*s23 - 2*s13*s23^2 - 2*s23^3)) + 
                p2q*p3q^3*s12*(2*s12^4 + s13^2*s23*(s13 + s23) - 
                  s12^3*(5*s13 + 11*s23) + s12^2*(-4*s13^2 + 5*s13*s23 + 
                    9*s23^2) + s12*(3*s13^3 + 5*s13^2*s23 + 3*s13*s23^2 - 
                    2*s23^3)) - p2q^3*p3q*(s12^4*(2*s13 + s23) - 
                  s12^3*(8*s13^2 + 2*s13*s23 + s23^2) - s13^2*(s13^3 + 
                    s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + s12^2*(-3*s13^3 + 
                    2*s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + s12*s13*
                   (6*s13^3 + s13*s23^2 + 5*s23^3)) + p2q^2*p3q^2*
                 (s12^5 - s12^4*(7*s13 + 5*s23) - s13^2*s23*(s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12^3*(4*s13^2 + 10*s13*s23 + 
                    9*s23^2) + s12^2*(9*s13^3 - 2*s13*s23^2 - 3*s23^3) - 
                  s12*s13*(3*s13^3 + 4*s13^2*s23 + 7*s13*s23^2 + 5*s23^3))) + 
              p1q^2*(p3q^3*s12^2*(-(s12^2*(s13 + 5*s23)) + s23*(2*s13^2 + 
                    s13*s23 - 3*s23^2) + s12*(-s13^2 + 2*s13*s23 + 
                    12*s23^2)) + p2q*p3q^2*(-(s13^2*s23^2*(s13 + s23)) - 
                  s12^4*(2*s13 + 5*s23) + s12^3*(s13^2 + 13*s13*s23 + 
                    18*s23^2) + s12^2*(3*s13^3 + 7*s13^2*s23 + s13*s23^2 - 
                    12*s23^3) + s12*s23*(2*s13^3 - 5*s13^2*s23 - 5*s13*
                     s23^2 + s23^3)) + p2q^3*(s12^3*(s13^2 - s23^2) + 
                  s12*s13*(-2*s13^3 + 9*s13^2*s23 + s13*s23^2 - 7*s23^3) - 
                  s13*s23*(s13^3 + 4*s13^2*s23 + 2*s13*s23^2 - s23^3) - 
                  s12^2*(s13^3 - 7*s13^2*s23 - 3*s13*s23^2 + 3*s23^3)) + 
                p2q^2*p3q*(-(s12^4*s13) - 2*s13^3*s23^2 + 2*s13*s23^4 + 
                  s12^3*(3*s13^2 + 6*s13*s23 + 7*s23^2) + s12^2*(2*s13^3 + 
                    3*s13^2*s23 - 9*s23^3) - 2*s12*(s13^4 - 4*s13^3*s23 + 
                    3*s13^2*s23^2 + 5*s13*s23^3 - s23^4)))))/
            (4*(p1q + p2q + p3q)*s12*s13*s23*(-(p2q^4*s13^2*(s12 + s13)*
                (s13 + s23)) + (p3q*s12 - p1q*s23)^2*(p3q^2*s12*(s12 + s13) + 
                p1q^2*s23*(s13 + s23) - p1q*p3q*(s13*(s13 + s23) + 
                  s12*(s13 + 2*s23))) + p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + 
                   s12*(s13 - 2*s23))*(s13 + s23)) + p3q*(s12 + s13)*
                 (-(s13*(s13 + s23)) + s12*(3*s13 + 2*s23))) + 
              p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 3*s13 - s23) - 
                p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + p1q^2*p3q*s23*
                 (s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 2*s13*s23 - 
                    3*s23^2) + s13*(2*s13^2 + s13*s23 - s23^2)) + 
                p1q*p3q^2*s12*(-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + 
                    s13*s23 + s23^2) + s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) + (9*(s12 + s13 + s23)^2*
             (2*p1q^6*(p2q + p3q)*s12*s23^4*(s13 + s23) + p1q^5*s23^3*(
                -(p3q^2*s12*(5*s12*s13 + s13^2 + 7*s12*s23 - 2*s13*s23 - 
                   3*s23^2)) + p2q^2*(-(s13*s23*(s13 + s23)) + s12^2*
                   (3*s13 + s23) + s12*(-9*s13^2 + s13*s23 + 7*s23^2)) + 
                p2q*p3q*(s13*s23*(s13 + s23) - 2*s12^2*(3*s13 + 4*s23) + 
                  s12*(-6*s13^2 + 3*s13*s23 + 8*s23^2))) - p1q^4*s23^2*(
                -(p3q^3*s12*(-(s13^2*s23) + s23^3 + s12^2*(4*s13 + 9*s23) + 
                   2*s12*(s13^2 - 2*s13*s23 - 5*s23^2))) + p2q^2*p3q*
                 (3*s12^3*(2*s13 + s23) + s13*s23*(2*s13^2 + 3*s13*s23 + 
                    s23^2) + s12^2*(-14*s13^2 - 4*s13*s23 + 21*s23^2) + 
                  s12*(-10*s13^3 + 19*s13^2*s23 + 4*s13*s23^2 - 12*s23^3)) + 
                p2q^3*(3*s12^2*s13*(2*s13 + s23) + s12^3*(3*s13 + s23) + 
                  s13*s23*(-3*s13^2 + s13*s23 + 4*s23^2) + s12*(-15*s13^3 + 
                    25*s13^2*s23 + 20*s13*s23^2 - 7*s23^3)) + p2q*p3q^2*
                 (-(s12^3*(5*s13 + 11*s23)) + s13*s23*(s13^2 - s23^2) + 
                  s12^2*(2*s13^2 + 21*s13*s23 + 29*s23^2) + s12*(s13^3 + 
                    19*s13^2*s23 + 12*s13*s23^2 - 4*s23^3))) + 
              2*p2q^2*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*s13*
                 (s13*s23*(s13 + s23) + s12^2*(2*s13 + s23) + 
                  s12*(2*s13^2 - s23^2)) - p3q^2*s12*(s13*(s13 - s23)*s23 + 
                  s12^2*(2*s13 + s23) + s12*(2*s13^2 + s23^2)) + 
                p2q*p3q*(-2*s12^3*s13 - s13*s23^2*(s13 + s23) + s12^2*s23*
                   (2*s13 + s23) + s12*(2*s13^3 - 2*s13^2*s23 + s23^3))) + 
              p1q*(p3q^6*s12^4*(s12 + s13 - s23)*s23 + p2q*p3q^5*s12^3*s23*
                 (2*s12^2 - 4*s12*s13 - 6*s13^2 - 7*s12*s23 - 3*s13*s23 - 
                  s23^2) + p2q^6*s13^2*(s13*s23*(3*s13^2 - 4*s13*s23 - 
                    7*s23^2) + s12^2*(8*s13^2 - 4*s13*s23 - 4*s23^2) + 
                  s12*(8*s13^3 - 17*s13^2*s23 - 9*s13*s23^2 + 6*s23^3)) + 
                p2q^2*p3q^4*s12*(s12^3*(11*s13 - 9*s23)*s23 - 4*s13^2*s23^2*
                   (s13 + s23) - s12^4*(4*s13 + 3*s23) + s12*s23*(6*s13^3 + 
                    7*s13^2*s23 + s13*s23^2 + 2*s23^3) + s12^2*(4*s13^3 + 
                    4*s13^2*s23 + 19*s13*s23^2 + 8*s23^3)) + p2q^3*p3q^3*
                 (-4*s12^5*(s13 + s23) + 4*s13^2*s23^2*(s13 + s23)^2 + 
                  s12^4*(16*s13^2 + 36*s13*s23 - s23^2) + s12*s13*s23*
                   (2*s13^3 + 9*s13^2*s23 + s13*s23^2 + 2*s23^3) - 
                  s12^2*s13*(8*s13^3 - 16*s13^2*s23 + 9*s13*s23^2 + 
                    8*s23^3) + s12^3*(12*s13^3 - 10*s13^2*s23 + 21*s13*
                     s23^2 + 11*s23^3)) + p2q^4*p3q^2*(4*s12^4*(4*s13^2 + 
                    5*s13*s23 + s23^2) - s12^3*(12*s13^3 + 32*s13^2*s23 + 
                    5*s13*s23^2 - 6*s23^3) + s13^2*s23*(-3*s13^3 - 4*s13^2*
                     s23 + 7*s13*s23^2 + 8*s23^3) - s12^2*s13*(24*s13^3 - 
                    30*s13^2*s23 + 13*s13*s23^2 + 13*s23^3) + s12*s13*
                   (4*s13^4 - 17*s13^3*s23 + 23*s13^2*s23^2 + 12*s13*s23^3 - 
                    2*s23^4)) - p2q^5*p3q*s13*(2*s13*s23^2*(5*s13^2 + 
                    2*s13*s23 - 3*s23^2) + 4*s12^3*(5*s13^2 + 3*s13*s23 + 
                    2*s23^2) + s12^2*(8*s13^3 - 16*s13^2*s23 + s13*s23^2 + 
                    8*s23^3) + s12*(-12*s13^4 + 36*s13^3*s23 - 5*s13^2*
                     s23^2 - 17*s13*s23^3 + 4*s23^4))) + p1q^3*s23*(
                p3q^4*s12^2*(-(s12^2*(s13 + 5*s23)) + s23*(2*s13^2 + 
                    s13*s23 - 3*s23^2) + s12*(-s13^2 + 2*s13*s23 + 
                    12*s23^2)) - p2q*p3q^3*(s13^2*s23^2*(s13 + s23) + 
                  s12^4*(s13 + 6*s23) + s12*s23^2*(11*s13^2 + 11*s13*s23 + 
                    s23^2) - s12^3*(4*s13^2 + 25*s13*s23 + 36*s23^2) - 
                  s12^2*(5*s13^3 + 13*s13^2*s23 + 4*s13*s23^2 - 15*s23^3)) + 
                p2q^4*(s12^3*(3*s13^2 - 2*s13*s23 - s23^2) + s13*s23*
                   (-3*s13^3 + 8*s13^2*s23 + 8*s13*s23^2 - 3*s23^3) - 
                  s12^2*(s13^3 - s13^2*s23 + 3*s13*s23^2 + s23^3) + 
                  s12*(-12*s13^4 + 43*s13^3*s23 + 5*s13^2*s23^2 - 25*s13*
                     s23^3 + 2*s23^4)) + p2q^2*p3q^2*(5*s12^4*(s13 + s23) + 
                  s13^2*s23*(4*s13^2 + 5*s13*s23 + s23^2) + s12^3*(-2*s13^2 - 
                    5*s13*s23 + 25*s23^2) + s12^2*(5*s13^3 + 24*s13^2*s23 + 
                    3*s13*s23^2 - 31*s23^3) + s12*(4*s13^4 + 30*s13^3*s23 + 
                    5*s13^2*s23^2 - 3*s13*s23^3 + 3*s23^4)) + p2q^3*p3q*
                 (s12^4*(5*s13 + 4*s23) - 2*s12^3*(2*s13^2 + s13*s23 - 
                    2*s23^2) + s13*s23*(3*s13^3 + 10*s13^2*s23 + 2*s13*
                     s23^2 - 5*s23^3) - s12^2*(s13^3 - 14*s13^2*s23 - 
                    29*s13*s23^2 + 12*s23^3) + s12*(-8*s13^4 + 45*s13^3*s23 - 
                    11*s13^2*s23^2 - 17*s13*s23^3 + 8*s23^4))) + 
              p1q^2*(p3q^5*s12^3*s23*(s12^2 - s13^2 - 6*s12*s23 - 2*s13*s23 + 
                  3*s23^2) + p2q*p3q^4*s12*s23*(s12^4 + s13^2*s23*
                   (s13 + s23) - s12^3*(7*s13 + 17*s23) + s12^2*(-3*s13^2 + 
                    11*s13*s23 + 18*s23^2) + s12*(5*s13^3 + 13*s13^2*s23 + 
                    13*s13*s23^2 + 2*s23^3)) + p2q^5*s13*(s12^3*s23*
                   (3*s13 + s23) + s12^2*(4*s13^3 - 7*s13^2*s23 + 
                    3*s13*s23^2 + 3*s23^3) + s13*s23*(s13^3 - 9*s13^2*s23 - 
                    2*s13*s23^2 + 8*s23^3) + s12*(4*s13^4 - 29*s13^3*s23 + 
                    21*s13^2*s23^2 + 27*s13*s23^3 - 6*s23^4)) - p2q^2*p3q^3*
                 (3*s12^5*s23 - 4*s12^4*(s13^2 + 3*s13*s23 - 2*s23^2) - 
                  s13^2*s23^2*(3*s13^2 + 5*s13*s23 + 2*s23^2) + s12^2*s23^2*
                   (13*s13^2 + 19*s13*s23 + 9*s23^2) - s12^3*(4*s13^3 - 
                    4*s13^2*s23 + s13*s23^2 + 30*s23^3) + s12*s23*(s13^4 + 
                    3*s13^3*s23 + 12*s13^2*s23^2 + 7*s13*s23^3 + 2*s23^4)) + 
                p2q^3*p3q^2*(-3*s12^5*s23 + s12^4*(4*s13^2 + 19*s13*s23 + 
                    2*s23^2) - 2*s12^3*(2*s13^3 + 15*s13^2*s23 + 7*s13*
                     s23^2 - 8*s23^3) + s13*s23*(-3*s13^4 + 10*s13^2*s23^2 + 
                    5*s13*s23^3 - 2*s23^4) + s12*s23*(-11*s13^4 + 28*s13^3*
                     s23 + 8*s13^2*s23^2 + 4*s13*s23^3 + 2*s23^4) - 
                  s12^2*(8*s13^4 + 16*s13^2*s23^2 - 6*s13*s23^3 + 9*s23^4)) + 
                p2q^4*p3q*(3*s12^4*s23^2 - s12^3*(8*s13^3 + 25*s13^2*s23 + 
                    21*s13*s23^2 - 5*s23^3) - s12^2*s13*(4*s13^3 + 2*s13^2*
                     s23 + 35*s13*s23^2 + 7*s23^3) + s13*s23*(-2*s13^4 - 
                    8*s13^3*s23 + 7*s13^2*s23^2 + 9*s13*s23^3 - 4*s23^4) + 
                  s12*(4*s13^5 - 39*s13^4*s23 + 33*s13^3*s23^2 - 23*s13*
                     s23^4 + 2*s23^5)))))/(4*(p2q + p3q)*(p1q + p2q + p3q)*
             s12*s13*s23^2*(-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + 
              (p3q*s12 - p1q*s23)^2*(p3q^2*s12*(s12 + s13) + p1q^2*s23*
                 (s13 + s23) - p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 
                    2*s23))) + p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + 
                   s12*(s13 - 2*s23))*(s13 + s23)) + p3q*(s12 + s13)*
                 (-(s13*(s13 + s23)) + s12*(3*s13 + 2*s23))) + 
              p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 3*s13 - s23) - 
                p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + p1q^2*p3q*s23*
                 (s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 2*s13*s23 - 
                    3*s23^2) + s13*(2*s13^2 + s13*s23 - s23^2)) + 
                p1q*p3q^2*s12*(-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + 
                    s13*s23 + s23^2) + s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))))*p1 . E0conj + 
         ((9*ep*p1q*(s12 + s13 + s23)^2*(p1q^5*s23^2*(-2*s12^2*(s13 + s23) + 
                s13*s23*(2*s13 + s23) + s12*(2*s13^2 - s23^2)) + 
              (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q^2*(2*s12 + s23)*
                 (s12^2 - s12*s13 - s13*s23) + p2q^2*(2*s13 + s23)*
                 (-s13^2 + s12*(s13 + s23)) + p2q*p3q*(s13*s23*(3*s13 + 
                    s23) - s12^2*(4*s13 + 3*s23) + s12*(4*s13^2 - s23^2))) + 
              p1q*(p3q^4*s12*(4*s12^4 + 2*s13*s23^3 - 2*s12^3*(3*s13 + 
                    2*s23) + s12*s13*s23*(2*s13 + 5*s23) + s12^2*(2*s13^2 - 
                    2*s13*s23 - 3*s23^2)) + 2*p2q*p3q^3*(2*s12^5 + 
                  s13^2*s23^3 - 3*s12^4*(3*s13 + s23) - s12*s13*s23*
                   (2*s13^2 + s23^2) + 2*s12^3*(5*s13^2 + s13*s23 + s23^2) + 
                  s12^2*(-3*s13^3 + 5*s13^2*s23 + s13*s23^2 + s23^3)) + 
                2*p2q^3*p3q*(2*s12^3*s13*(3*s13 + 2*s23) + s12*s13*
                   (6*s13^3 - 8*s13^2*s23 - 2*s13*s23^2 + s23^3) - 
                  s12^2*(11*s13^3 + s13^2*s23 - 2*s13*s23^2 + s23^3) - 
                  s13^2*(s13^3 - 3*s13^2*s23 + 3*s13*s23^2 + s23^3)) + 
                p2q^2*p3q^2*(-4*s12^4*(3*s13 + s23) + s13^2*s23*(2*s13^2 - 
                    5*s13*s23 + 2*s23^2) + s12^3*(30*s13^2 + 10*s13*s23 + 
                    3*s23^2) + s12*s13^2*(6*s13^2 - 14*s13*s23 + 7*s23^2) - 
                  s12^2*(24*s13^3 - 10*s13^2*s23 + 3*s13*s23^2 + 2*s23^3)) - 
                p2q^4*s13*(4*s12^2*s13*(s13 + s23) + s13^2*(2*s13^2 - 
                    6*s13*s23 - 3*s23^2) + s12*(-6*s13^3 + 2*s13^2*s23 + 
                    7*s13*s23^2 + 2*s23^3))) - p1q^4*s23*(
                p3q*(-(s13*s23^2*(4*s13 + s23)) + s12*s23^2*(5*s13 + 2*s23) - 
                  2*s12^3*(2*s13 + 3*s23) + s12^2*(4*s13^2 + 6*s13*s23 + 
                    s23^2)) + p2q*(2*s12^3*(s13 + s23) + s13*s23*(4*s13^2 - 
                    3*s13*s23 - 2*s23^2) + s12^2*(-4*s13^2 + 6*s13*s23 + 
                    8*s23^2) + s12*(2*s13^3 - 8*s13^2*s23 - s13*s23^2 + 
                    3*s23^3))) + p1q^3*(-(p3q^2*(s13*s23^3*(-2*s13 + s23) + 
                   2*s12^4*(s13 + 3*s23) + s12*s23^2*(6*s13^2 + 8*s13*s23 + 
                     s23^2) - s12^2*s23*(-6*s13^2 + s13*s23 + 4*s23^2) - 
                   s12^3*(2*s13^2 + 12*s13*s23 + 9*s23^2))) + 
                p2q^2*(2*s12^3*(s13^2 - s23^2) - s12*s23*(12*s13^3 - 
                    9*s13^2*s23 - 8*s13*s23^2 + s23^3) + s13*s23*(2*s13^3 - 
                    11*s13^2*s23 - 2*s13*s23^2 + s23^3) - 2*s12^2*(s13^3 - 
                    7*s13^2*s23 - 3*s13*s23^2 + 3*s23^3)) - 2*p2q*p3q*
                 (s12^4*s13 + 2*s13*s23^2*(s13^2 - 3*s13*s23 - s23^2) + 
                  s12*s23^2*(-12*s13^2 - s13*s23 + 2*s23^2) - 2*s12^3*
                   (s13^2 + s13*s23 + 2*s23^2) + s12^2*(s13^3 - 4*s13^2*s23 + 
                    5*s13*s23^2 + 4*s23^3))) + p1q^2*(p3q^3*(2*s12^5 - 
                  s13*s23^4 - s12*s13*s23^2*(4*s13 + s23) + s12^2*s23^2*
                   (11*s13 + 3*s23) + s12^3*s13*(4*s13 + 9*s23) - 
                  s12^4*(6*s13 + 11*s23)) + p2q*p3q^2*(2*s12^5 - 2*s12^4*
                   (5*s13 + 2*s23) + s13*s23^3*(11*s13 + 2*s23) + 
                  s12^3*(16*s13^2 + 15*s13*s23 + 15*s23^2) - s12*s23*
                   (2*s13^3 - 14*s13^2*s23 + s13*s23^2 + s23^3) + 
                  s12^2*(-8*s13^3 + 5*s13^2*s23 - 2*s13*s23^2 + 2*s23^3)) + 
                p2q^3*(2*s12^3*s13*(s13 + s23) + s13^2*s23*(9*s13^2 - 
                    4*s13*s23 - 3*s23^2) + 2*s12^2*s13*(-3*s13^2 + 
                    3*s13*s23 + 5*s23^2) + s12*(4*s13^4 - 15*s13^3*s23 - 
                    5*s13^2*s23^2 + 5*s13*s23^3 + s23^4)) - p2q^2*p3q*
                 (2*s12^4*(2*s13 + s23) + 2*s12^3*(-7*s13^2 + s13*s23 + 
                    s23^2) - s13*s23*(2*s13^3 - 17*s13^2*s23 + s23^3) + 
                  s12^2*(14*s13^3 - 11*s13^2*s23 + 10*s13*s23^2 + 11*s23^3) + 
                  s12*(-4*s13^4 + 23*s13^3*s23 - 10*s13^2*s23^2 - 
                    3*s13*s23^3 + 2*s23^4)))))/(8*(p1q + p2q + p3q)*s12*s13*
             s23*(p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^
                2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
                p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
              p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                  s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                  s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                   3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                  3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                  2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 
                    2*s13*s23 + s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 
                    2*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(-3*s13^2 + 2*s13*s23 + 2*s23^2))) + 
              p1q^2*(p2q^2*s13*(s13 + s23)*(s12*(s13 - 2*s23) + 3*(s13 - s23)*
                   s23) + p3q^2*s12*(s12 + s23)*(s12*(s13 + 3*s23) - 
                  s23*(2*s13 + 3*s23)) - p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - 
                    s23^2) + 2*s12^2*(s13^2 + s13*s23 + s23^2) + 
                  s12*(2*s13^2*s23 + s23^3))))) - (9*(s12 + s13 + s23)^2*
             (p1q^8*s23^4*(-(s13*s23*(s13 + s23)) + s12^2*(2*s13 + s23) + 
                s12*(-2*s13^2 + s23^2)) - p1q^7*s23^3*(p2q*(s12^3*s13 + 
                  s12^2*(12*s13^2 + 3*s13*s23 - s23^2) + s13*s23*(-3*s13^2 + 
                    2*s13*s23 + 6*s23^2) + s12*(-5*s13^3 + 18*s13^2*s23 + 
                    12*s13*s23^2 - 2*s23^3)) + p3q*(s13*s23^2*(s13 + 2*s23) + 
                  s12^3*(5*s13 + 3*s23) - 2*s12^2*(6*s13^2 + 7*s13*s23 - 
                    s23^2) - s12*(s13^3 + 7*s13^2*s23 + 12*s13*s23^2 + 
                    2*s23^3))) + (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(
                p2q^4*s13*(4*s13 + s23)*(s13*s23*(s13 + s23) + s12^2*
                   (2*s13 + s23) + s12*(2*s13^2 - s23^2)) - p3q^4*s12*s23*
                 (s13*(s13 - s23)*s23 + s12^2*(2*s13 + s23) + 
                  s12*(2*s13^2 + s23^2)) + p2q^2*p3q^2*(8*s12^4*s13 + 
                  s13*s23^2*(s13^2 + 3*s13*s23 + 2*s23^2) - s12^3*(8*s13^2 + 
                    10*s13*s23 + 5*s23^2) + s12*s23*(-6*s13^3 + 11*s13^2*
                     s23 + 4*s13*s23^2 - 2*s23^3) - s12^2*(16*s13^3 - 
                    8*s13^2*s23 + 7*s13*s23^2 + 7*s23^3)) + p2q*p3q^3*
                 (-(s13*s23^3*(s13 + s23)) + 4*s12^4*(2*s13 + s23) + 
                  s12^2*s23*(8*s13^2 - 2*s13*s23 + 3*s23^2) + 2*s12^3*
                   (4*s13^2 + s13*s23 + 3*s23^2) + s12*(2*s13^3*s23 - 
                    2*s13*s23^3 + s23^4)) + p2q^3*p3q*(-2*s12^3*s13*
                   (8*s13 + 3*s23) - s13*s23^2*(6*s13^2 + 7*s13*s23 + 
                    s23^2) + s12^2*(-8*s13^3 + 4*s13^2*s23 + 8*s13*s23^2 + 
                    s23^3) + s12*(8*s13^4 - 14*s13^3*s23 - 6*s13^2*s23^2 + 
                    6*s13*s23^3 + s23^4))) - p1q^6*s23^2*(p3q^2*
                 (-(s12^4*(4*s13 + 3*s23)) + 2*s12^3*(9*s13^2 + 19*s13*s23 - 
                    s23^2) - s12*s23^2*(21*s13^2 + 30*s13*s23 + 2*s23^2) + 
                  s13*s23^2*(2*s13^2 + s13*s23 + 3*s23^2) + s12^2*(2*s13^3 - 
                    11*s13^2*s23 - 3*s13*s23^2 + 5*s23^3)) - 2*p2q*p3q*
                 (s12^4*s13 + s12^3*s13*(7*s13 + s23) - s13*s23^3*(2*s13 + 
                    7*s23) + s12^2*(-7*s13^3 + 10*s13^2*s23 + 29*s13*s23^2 - 
                    3*s23^3) - s12*(s13^4 + 7*s13^3*s23 + 13*s13^2*s23^2 - 
                    12*s13*s23^3 - 2*s23^4)) + p2q^2*(-2*s12^3*(s13^2 - 
                    7*s13*s23 - 2*s23^2) + s13*s23*(3*s13^3 - 12*s13^2*s23 - 
                    11*s13*s23^2 + 10*s23^3) + s12^2*(-18*s13^3 + 15*s13^2*
                     s23 + 31*s13*s23^2 + 11*s23^3) + s12*(4*s13^4 - 
                    48*s13^3*s23 + 9*s13^2*s23^2 + 34*s13*s23^3 + 
                    3*s23^4))) + p1q^5*s23*(-(p3q^3*(s12^5*(s13 + s23) + 
                   s12^2*s23^2*(17*s13^2 + 42*s13*s23 + 2*s23^2) + 
                   s12^4*(-8*s13^2 - 34*s13*s23 + 4*s23^2) + s13*s23^3*
                    (4*s13^2 + 3*s13*s23 + 5*s23^2) - s12*s23^2*(2*s13^3 + 
                     19*s13^2*s23 + 31*s13*s23^2 + 3*s23^3) - s12^3*
                    (s13^3 - 39*s13^2*s23 - 64*s13*s23^2 + 7*s23^3))) + 
                p2q*p3q^2*(-(s12^5*s13) - s12^4*(6*s13^2 - 5*s13*s23 + 
                    s23^2) - s12^3*(15*s13^3 + 44*s13^2*s23 + 98*s13*s23^2 - 
                    26*s23^3) + s13*s23^2*(8*s13^3 + 3*s13^2*s23 + 
                    10*s13*s23^2 - 11*s23^3) + s12^2*(-2*s13^4 - 41*s13^3*
                     s23 + 54*s13^2*s23^2 + 69*s13*s23^3 + s23^4) + 
                  s12*s23*(2*s13^4 - 34*s13^3*s23 + 20*s13^2*s23^2 + 
                    113*s13*s23^3 + 9*s23^4)) + p2q^3*(2*s12^4*s23*
                   (3*s13 + s23) - s12^3*(s13^3 - 28*s13^2*s23 - 2*s13*
                     s23^2 + 2*s23^3) + s12^2*(-8*s13^4 + 29*s13^3*s23 + 
                    73*s13^2*s23^2 + 13*s13*s23^3 - 15*s23^4) + s13*s23*
                   (s13^4 - 14*s13^3*s23 + s13^2*s23^2 + 28*s13*s23^3 - 
                    3*s23^4) + s12*(s13^5 - 42*s13^4*s23 + 68*s13^3*s23^2 + 
                    70*s13^2*s23^3 + 3*s13*s23^4 - 5*s23^5)) + p2q^2*p3q*
                 (2*s12^4*(s13^2 + 15*s13*s23 + 7*s23^2) + s13*s23^2*
                   (7*s13^3 + 16*s13^2*s23 + 27*s13*s23^2 - 17*s23^3) + 
                  s12^3*(15*s13^3 + 27*s13^2*s23 + 14*s13*s23^2 + 33*s23^3) + 
                  2*s12^2*(3*s13^4 - 4*s13^3*s23 - s13^2*s23^2 + 26*s13*
                     s23^3 - 5*s23^4) + s12*(s13^5 + 13*s13^4*s23 + 
                    22*s13^3*s23^2 - 65*s13^2*s23^3 + 13*s13*s23^4 - 
                    3*s23^5))) - p1q*(p2q + p3q)^2*(p3q^5*s12^2*s23*
                 (2*s12^4 + 2*s12^2*s13*(s13 - s23) + s13*s23^2*(-2*s13 + 
                    3*s23) + s12^3*(13*s13 + 4*s23) - s12*(s13^3 + 4*s13^2*
                     s23 + 5*s13*s23^2 + 3*s23^3)) + p2q^5*s13^2*
                 (s12^3*s13*(8*s13 + 5*s23) + s12^2*(-8*s13^3 + 6*s13^2*s23 + 
                    8*s13*s23^2 + 2*s23^3) + s13*s23*(-6*s13^3 + 8*s13^2*
                     s23 + 16*s13*s23^2 + 3*s23^3) + s12*(-16*s13^4 + 
                    27*s13^3*s23 + 22*s13^2*s23^2 - 11*s13*s23^3 - 
                    3*s23^4)) - p2q*p3q^4*s12*(2*s12^5*(8*s13 + 5*s23) + 
                  2*s13*s23^3*(s13^2 + s13*s23 + s23^2) + s12^4*(8*s13^2 - 
                    19*s13*s23 + 10*s23^2) + s12^3*(-8*s13^3 + 40*s13^2*s23 + 
                    2*s13*s23^2 - 6*s23^3) + s12^2*s23*(3*s13^3 + 4*s13^2*
                     s23 + 15*s13*s23^2 - 5*s23^3) + s12*s23*(-2*s13^4 + 
                    2*s13^3*s23 - 6*s13^2*s23^2 + 3*s13*s23^3 - 2*s23^4)) + 
                p2q^2*p3q^3*(-8*s12^6*s13 - s13^2*s23^4*(s13 + 2*s23) + 
                  s12^5*(56*s13^2 + 63*s13*s23 + 10*s23^2) + 2*s12^4*
                   (20*s13^3 - 13*s13^2*s23 + 18*s13*s23^2 + 5*s23^3) + 
                  s12^2*s23*(2*s13^4 + 44*s13^3*s23 + 40*s13^2*s23^2 + 
                    13*s13*s23^3 - 4*s23^4) + s12*s13*s23*(-s13^4 + 
                    8*s13^3*s23 + 9*s13^2*s23^2 + 3*s13*s23^3 + 6*s23^4) - 
                  s12^3*(24*s13^4 - 90*s13^3*s23 - 26*s13^2*s23^2 + 
                    s13*s23^3 + 7*s23^4)) + p2q^3*p3q^2*(s12^5*s13*
                   (24*s13 + 5*s23) - 18*s12^4*s13*(4*s13^2 + 5*s13*s23 + 
                    2*s23^2) + s13^2*s23^2*(-2*s13^3 - 6*s13^2*s23 + 
                    3*s13*s23^2 + 4*s23^3) + s12^3*(-72*s13^4 + 14*s13^3*
                     s23 - 36*s13^2*s23^2 - 33*s13*s23^3 + s23^4) - 
                  s12*s13*s23*(3*s13^4 + 52*s13^3*s23 + 11*s13^2*s23^2 + 
                    s13*s23^3 + 6*s23^4) + s12^2*(24*s13^5 - 118*s13^4*s23 - 
                    22*s13^3*s23^2 - 11*s13*s23^4 + 2*s23^5)) + p2q^4*p3q*s13*
                 (-2*s12^4*s13*(12*s13 + 5*s23) + s12^3*(40*s13^3 + 
                    31*s13^2*s23 + 18*s13*s23^2 + 2*s23^3) + s13*s23*
                   (2*s13^4 + 14*s13^3*s23 - 6*s13^2*s23^2 - 17*s13*s23^3 - 
                    2*s23^4) + 2*s12^2*(28*s13^4 - 18*s13^3*s23 - 6*s13^2*
                     s23^2 + 15*s13*s23^3 + s23^4) + s12*(-8*s13^5 + 
                    61*s13^4*s23 - 14*s13^3*s23^2 - 29*s13^2*s23^3 + 
                    15*s13*s23^4 + 2*s23^5))) - p1q^3*(-(p3q^5*s23*
                  (-2*s12^6 - s13*s23^5 + s12^5*(-26*s13 + 11*s23) + 
                   s12^4*(22*s13^2 + 68*s13*s23 + 4*s23^2) + s12^3*
                    (-2*s13^3 + s13^2*s23 + 16*s13*s23^2 - 3*s23^3) + 
                   s12*s23^2*(5*s13^3 + 4*s13^2*s23 + 13*s13*s23^2 + s23^3) - 
                   s12^2*s23*(4*s13^3 + 17*s13^2*s23 + 33*s13*s23^2 + 
                     8*s23^3))) + p2q*p3q^4*(-2*s12^6*s23 + 2*s12^5*
                   (4*s13^2 + 17*s13*s23 - 6*s23^2) - s13*s23^3*(4*s13^3 + 
                    4*s13^2*s23 + 10*s13*s23^2 - 3*s23^3) + s12^3*s23*
                   (54*s13^3 + 86*s13^2*s23 + 56*s13*s23^2 + 7*s23^3) + 
                  s12^4*(8*s13^3 - 122*s13^2*s23 - 211*s13*s23^2 + 
                    33*s23^3) + s12*s23^2*(14*s13^4 + 45*s13^3*s23 + 
                    54*s13^2*s23^2 - 11*s13*s23^3 - 3*s23^4) + s12^2*s23*
                   (12*s13^4 + 91*s13^3*s23 + 154*s13^2*s23^2 + 185*s13*
                     s23^3 + 16*s23^4)) - p2q^3*p3q^2*(6*s12^6*s23 - 
                  2*s12^5*(4*s13^2 + 25*s13*s23 + 6*s23^2) + s12^4*
                   (24*s13^3 + 112*s13^2*s23 + 103*s13*s23^2 - 23*s23^3) + 
                  s13^2*s23*(4*s13^4 - 9*s13^3*s23 + 38*s13^2*s23^2 - 
                    29*s13*s23^3 - 4*s23^4) + s12^3*(24*s13^4 + 120*s13^3*
                     s23 + 82*s13^2*s23^2 - 21*s13*s23^3 + 37*s23^4) + 
                  s12^2*(-8*s13^5 + 166*s13^4*s23 + 130*s13^3*s23^2 + 
                    91*s13^2*s23^3 - 41*s13*s23^4 - 10*s23^5) + s12*s23*
                   (-22*s13^5 + 210*s13^4*s23 + 47*s13^3*s23^2 - 135*s13^2*
                     s23^3 + 26*s13*s23^4 - 4*s23^5)) + p2q^5*
                 (2*s12^4*s13*s23*(3*s13 + s23) + s12^3*s13*(8*s13^3 - 
                    6*s13^2*s23 + 4*s13*s23^2 + 7*s23^3) + s12^2*s13*
                   (8*s13^4 - 22*s13^3*s23 + 55*s13^2*s23^2 + 41*s13*s23^3 - 
                    12*s23^4) + s13*s23^2*(-s13^4 - 22*s13^3*s23 + 
                    s13^2*s23^2 + 8*s13*s23^3 + s23^4) - s12*s23*(2*s13^5 + 
                    36*s13^4*s23 - 30*s13^3*s23^2 - 65*s13^2*s23^3 + 
                    3*s13*s23^4 + s23^5)) + p2q^2*p3q^3*(-10*s12^6*s23 + 
                  s12^5*(16*s13^2 + 74*s13*s23 + 13*s23^2) + 2*s12^4*s23*
                   (-38*s13^2 - 82*s13*s23 + 33*s23^2) + s13^2*s23^2*
                   (6*s13^3 - 11*s13^2*s23 + 13*s13*s23^2 - 18*s23^3) + 
                  s12^3*(-16*s13^4 + 88*s13^3*s23 + 198*s13^2*s23^2 + 
                    79*s13*s23^3 - 33*s23^4) + s12^2*s23*(-82*s13^4 + 
                    62*s13^3*s23 + 95*s13^2*s23^2 + 145*s13*s23^3 - 
                    4*s23^4) - s12*s23*(10*s13^5 + 83*s13^4*s23 - 47*s13^3*
                     s23^2 - 95*s13^2*s23^3 + 34*s13*s23^4 + 4*s23^5)) + 
                p2q^4*p3q*(6*s12^5*s23^2 - 2*s12^4*(8*s13^3 + 33*s13^2*s23 + 
                    28*s13*s23^2 - 5*s23^3) + s12^3*s23*(-66*s13^3 - 
                    157*s13^2*s23 - 31*s13*s23^2 + 4*s23^3) + s12*s23*
                   (46*s13^5 - 125*s13^4*s23 - 74*s13^3*s23^2 + 47*s13^2*
                     s23^3 - 45*s13*s23^4 + s23^5) - s13*s23*(4*s13^5 - 
                    10*s13^4*s23 + 41*s13^3*s23^2 - 9*s13^2*s23^3 - 
                    8*s13*s23^4 + s23^5) + 2*s12^2*(8*s13^5 - 15*s13^4*s23 - 
                    9*s13^3*s23^2 - 74*s13^2*s23^3 - 36*s13*s23^4 + 
                    7*s23^5))) - p1q^4*s23*(p3q^4*(5*s12^5*(2*s13 - s23) + 
                  2*s13*s23^3*(s13^2 + s13*s23 + 2*s23^2) + s12^3*s23*
                   (25*s13^2 + 26*s13*s23 + 4*s23^2) + s12^4*(-22*s13^2 - 
                    76*s13*s23 + 11*s23^2) - s12*s23^2*(8*s13^3 + 12*s13^2*
                     s23 + 23*s13*s23^2 + 3*s23^3) + s12^2*s23*(-2*s13^3 + 
                    27*s13^2*s23 + 55*s13*s23^2 + 5*s23^3)) + 
                p2q^4*(s12^4*(6*s13^2 - 4*s13*s23 - 2*s23^2) + 2*s12^3*
                   (3*s13^3 - 6*s13^2*s23 - 4*s13*s23^2 - s23^3) + 
                  s12*s13*(-12*s13^4 + 58*s13^3*s23 + 52*s13^2*s23^2 - 
                    11*s13*s23^3 - 31*s23^4) - s13*s23*(5*s13^4 - 9*s13^3*
                     s23 - 30*s13^2*s23^2 + 5*s13*s23^3 + s23^4) + 
                  s12^2*(4*s13^4 + 57*s13^3*s23 - 39*s13^2*s23^2 - 
                    50*s13*s23^3 + 4*s23^4)) + p2q*p3q^3*(2*s12^5*(2*s13 + 
                    s23) + s12^4*(-30*s13^2 - 78*s13*s23 + 38*s23^2) - 
                  s13*s23^2*(12*s13^3 + 10*s13^2*s23 + 21*s13*s23^2 - 
                    5*s23^3) + 2*s12^3*(30*s13^3 + 94*s13^2*s23 + 120*s13*
                     s23^2 - 5*s23^3) + s12*s23*(8*s13^4 + 58*s13^3*s23 + 
                    14*s13^2*s23^2 - 86*s13*s23^3 - 9*s23^4) + s12^2*
                   (14*s13^4 + 112*s13^3*s23 + 120*s13^2*s23^2 + 148*s13*
                     s23^3 + 5*s23^4)) + p2q^2*p3q^2*(20*s12^5*(s13 + s23) + 
                  s12^4*(8*s13^2 - 51*s13*s23 + 29*s23^2) + s12^3*(6*s13^3 + 
                    109*s13^2*s23 + 120*s13*s23^2 - 55*s23^3) + 
                  s12^2*(-28*s13^4 + 103*s13^3*s23 + 74*s13^2*s23^2 + 
                    12*s13*s23^3 - 3*s23^4) + s13*s23*(10*s13^4 - 5*s13^3*
                     s23 + 17*s13^2*s23^2 - 25*s13*s23^3 + 7*s23^4) + 
                  s12*(2*s13^5 - 35*s13^4*s23 + 122*s13^3*s23^2 + 158*s13^2*
                     s23^3 - 80*s13*s23^4 - 3*s23^5)) + p2q^3*p3q*
                 (2*s12^5*(5*s13 + 4*s23) - 2*s12^4*(5*s13^2 + 8*s13*s23 - 
                    s23^2) - 2*s12^3*(24*s13^3 + 12*s13^2*s23 - 31*s13*
                     s23^2 + 10*s23^3) + s13*s23*(10*s13^4 + 6*s13^3*s23 + 
                    28*s13^2*s23^2 - 23*s13*s23^3 + 5*s23^4) + s12^2*
                   (-6*s13^4 + 4*s13^3*s23 - 10*s13^2*s23^2 + 8*s13*s23^3 + 
                    21*s23^4) + s12*(6*s13^5 - 22*s13^4*s23 - 16*s13^3*
                     s23^2 + 78*s13^2*s23^3 - 20*s13*s23^4 + 7*s23^5))) + 
              p1q^2*(p3q^6*s12*s23*(-4*s12^5 - s13*(s13 - 3*s23)*s23^3 + 
                  s12^4*(-28*s13 + 2*s23) + s12^2*s23*(10*s13^2 + 15*s13*
                     s23 + 6*s23^2) + s12^3*(8*s13^2 + 24*s13*s23 + 
                    9*s23^2) - s12*s23*(4*s13^3 + 4*s13^2*s23 + 14*s13*
                     s23^2 + 3*s23^3)) + p2q^2*p3q^4*(4*s12^6*(4*s13 + 
                    5*s23) - 2*s12^5*(24*s13^2 + 79*s13*s23 - 3*s23^2) + 
                  s12^4*(-24*s13^3 + 142*s13^2*s23 + 102*s13*s23^2 - 
                    47*s23^3) + s13^2*s23^2*(2*s13^3 + 12*s13^2*s23 + 
                    7*s13*s23^2 + 11*s23^3) + s12*s13*s23*(4*s13^4 + 
                    20*s13^3*s23 - 11*s13^2*s23^2 - 29*s13*s23^3 - 
                    13*s23^4) - 2*s12^2*s23*(-15*s13^4 + 58*s13^3*s23 + 
                    75*s13^2*s23^2 + 50*s13*s23^3 + s23^4) + s12^3*
                   (40*s13^4 - 174*s13^3*s23 - 170*s13^2*s23^2 + 52*s13*
                     s23^3 + 9*s23^4)) + p2q^6*s13*(2*s12^3*s13*(-8*s13^2 + 
                    3*s13*s23 + 5*s23^2) + s12^2*(-8*s13^4 + 6*s13^3*s23 + 
                    4*s13^2*s23^2 - 6*s13*s23^3 + s23^4) + s13*s23*
                   (2*s13^4 - 16*s13^3*s23 + 3*s13^2*s23^2 + 18*s13*s23^3 + 
                    3*s23^4) + s12*(8*s13^5 - 38*s13^4*s23 + 38*s13^3*s23^2 + 
                    59*s13^2*s23^3 - 10*s13*s23^4 - 3*s23^5)) + p2q^3*p3q^3*
                 (4*s12^6*(2*s13 + 3*s23) - 6*s12^5*(12*s13^2 + 27*s13*s23 + 
                    2*s23^2) + s12^4*(40*s13^3 + 178*s13^2*s23 + 36*s13*
                     s23^2 - 41*s23^3) + s12^3*(88*s13^4 - 120*s13^3*s23 - 
                    96*s13^2*s23^2 + 26*s13*s23^3 + 19*s23^4) - s13*s23*
                   (2*s13^5 + 12*s13^4*s23 - 23*s13^3*s23^2 + 7*s13^2*s23^3 + 
                    2*s13*s23^4 - 2*s23^5) + s12*s23*(-30*s13^5 + 140*s13^4*
                     s23 + 38*s13^3*s23^2 - 25*s13^2*s23^3 + 4*s13*s23^4 - 
                    2*s23^5) - s12^2*(32*s13^5 - 220*s13^4*s23 - 16*s13^3*
                     s23^2 + 38*s13^2*s23^3 + 55*s13*s23^4 + 2*s23^5)) + 
                p2q^4*p3q^2*(-2*s12^5*(16*s13^2 + 25*s13*s23 + 6*s23^2) + 
                  2*s12^4*(44*s13^3 + 87*s13^2*s23 + 31*s13*s23^2 - 
                    9*s23^3) + s13^2*s23*(2*s13^4 - 30*s13^3*s23 + 45*s13^2*
                     s23^2 + 15*s13*s23^3 - 18*s23^4) + s12^3*(40*s13^4 + 
                    118*s13^2*s23^2 + 65*s13*s23^3 + s23^4) + s12^2*
                   (-72*s13^5 + 196*s13^4*s23 + 36*s13^3*s23^2 + 76*s13^2*
                     s23^3 + 49*s13*s23^4 - 7*s23^5) + s12*s13*(8*s13^5 - 
                    138*s13^4*s23 + 170*s13^3*s23^2 + 92*s13^2*s23^3 - 
                    48*s13*s23^4 + 29*s23^5)) + p2q*p3q^5*(s13*(s13 - s23)*
                   s23^5 + 4*s12^6*(2*s13 + s23) - 2*s12^5*(4*s13^2 + 
                    37*s13*s23 - 6*s23^2) + s12^4*(-16*s13^3 + 114*s13^2*
                     s23 + 142*s13*s23^2 - 3*s23^3) + s12^3*s23*(-10*s13^3 + 
                    58*s13^2*s23 + 106*s13*s23^2 + 9*s23^3) - s12^2*s23*
                   (2*s13^4 + 6*s13^3*s23 + 11*s13^2*s23^2 + 31*s13*s23^3 + 
                    5*s23^4) + s12*(-2*s13^4*s23^2 - 10*s13^2*s23^4 + 
                    4*s13*s23^5 + s23^6)) + p2q^5*p3q*(2*s12^4*s13*
                   (20*s13^2 + 16*s13*s23 + 11*s23^2) + 2*s12^3*s13*
                   (-12*s13^3 - 19*s13^2*s23 + 7*s13*s23^2 + 12*s23^3) + 
                  s13*s23*(6*s13^5 - 36*s13^4*s23 + 25*s13^3*s23^2 + 
                    35*s13^2*s23^3 - 7*s13*s23^4 - s23^5) - s12^2*(48*s13^5 - 
                    14*s13^4*s23 + 98*s13^3*s23^2 + 35*s13^2*s23^3 - 
                    34*s13*s23^4 + s23^5) + s12*(16*s13^6 - 142*s13^5*s23 + 
                    78*s13^4*s23^2 + 78*s13^3*s23^3 - 65*s13^2*s23^4 + 
                    8*s13*s23^5 + s23^6)))))/(8*(p2q + p3q)*(p1q + p2q + p3q)*
             s12*s13*s23^2*(p1q^5*s23^3*(s12 + s23)*(s13 + s23) + 
              (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(p3q^2*s12*
                 (s12 + s23) + p2q^2*s13*(s13 + s23) - p2q*p3q*
                 (s23*(s13 + s23) + s12*(2*s13 + s23))) - p1q^4*s23^2*(
                p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*s23) + 
                p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                  s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*(
                p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                   (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + 
                p2q^2*(s13 + s23)*(s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 
                    2*s23)*s23 + s12*(3*s13^2 - s23^2)) + p2q*p3q*
                 (s12^3*(2*s13 + 3*s23) + s12^2*(2*s13^2 + 3*s13*s23 - 
                    s23^2) + s12*(2*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 - 
                    3*s23^3) + s23*(3*s13^3 - s13^2*s23 - 3*s13*s23^2 + 
                    s23^3))) + p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + 
                  s13*(s13 - 4*s23) - 3*s12*s23) + p3q^4*s12^2*(s12 + s23)*
                 (s12^2 - 4*s12*s23 - s13*(s13 + 3*s23)) + p2q*p3q^3*s12*
                 (s12^4 - s12^2*(s13 - s23)^2 - 3*s12^3*(s13 + s23) + 
                  2*s13*s23*(s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + 
                    s13^2*s23 + s13*s23^2 + s23^3)) + p2q^2*p3q^2*
                 (-(s12^4*(3*s13 + s23)) + s12^3*(3*s13^2 + 3*s13*s23 + 
                    s23^2) + s13^2*s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12^2*(3*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + 
                  s12*s13*(-3*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 + 2*s23^3)) + 
                p2q^3*p3q*s13*(s12^3*(3*s13 + 2*s23) + s12^2*(-s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12*(-3*s13^3 + 2*s13^2*s23 + 
                    3*s13*s23^2 + 2*s23^3) + s13*(s13^3 - 3*s13^2*s23 - 
                    s13*s23^2 + 3*s23^3))) + p1q^2*(-(p3q^3*s12*(s12 + s23)*
                  (-(s13*s23*(2*s13 + 3*s23)) + s12^2*(s13 + 4*s23) + 
                   s12*(s13^2 - 6*s23^2))) - p2q^3*s13*(s13 + s23)*
                 (s12^2*(s13 - 2*s23) + 2*s13*(2*s13 - 3*s23)*s23 + 
                  s12*(s13^2 - 3*s23^2)) + p2q*p3q^2*(-(s12^4*(s13 + 
                     3*s23)) + s13*s23^2*(2*s13^2 + s13*s23 - s23^2) + 
                  s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + s12*s23*(2*s13^3 + 
                    2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + s12^2*(2*s13^3 + 
                    2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + p2q^2*p3q*
                 (-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 2*s12^3*(s13^2 + 
                    s13*s23 + s23^2) + s12^2*(s13^3 + 2*s13^2*s23 + 
                    2*s13*s23^2 + s23^3) - s12*(s13^4 - 3*s13^3*s23 - 
                    2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-1/16*(ep*p2q*(s12 + s13 + s23)*(p3q^2*s12*(25*s12^3 - 13*s12^2*
                (s13 - 2*s23) + s13*s23*(-3*s13 + s23) + s12*(-2*s13^2 - 
                 4*s13*s23 + s23^2)) + p2q*p3q*(3*s13^2*s23*(s13 + s23) - 2*
                s12^3*(25*s13 + 12*s23) + s12^2*(26*s13^2 - 4*s13*s23 - 
                 24*s23^2) + s12*s13*(4*s13^2 + 5*s13*s23 + 6*s23^2)) + 
             p1q^2*(-(s12^3*(18*s13 + 17*s23)) + 2*s12^2*(9*s13^2 + 
                 4*s13*s23 - 5*s23^2) + s13*s23*(s13^2 - s13*s23 - 2*s23^2) + 
               s12*s23*(8*s13^2 + 16*s13*s23 + 7*s23^2)) - 
             p2q^2*s13*(-(s12^2*(25*s13 + 24*s23)) + s13*(2*s13^2 + s13*s23 - 
                 s23^2) + s12*(13*s13^2 + 22*s13*s23 + 8*s23^2)) + 
             p1q*(p3q*(17*s12^4 - s12^3*(46*s13 + 15*s23) + s12^2*(10*s13^2 - 
                   25*s13*s23 - 33*s23^2) + s13*s23*(2*s13^2 + s13*s23 - 
                   s23^2) + s12*(s13^3 + s13^2*s23 + 4*s13*s23^2 - s23^3)) - 
               p2q*(s12^3*(17*s13 + 16*s23) + s12^2*(-46*s13^2 - 37*s13*s23 + 
                   8*s23^2) + s12*(10*s13^3 + 7*s13^2*s23 - 13*s13*s23^2 - 
                   8*s23^3) + s13*(s13^3 - 3*s13^2*s23 - 3*s13*s23^2 + 
                   s23^3)))))/(s12*s13*(-(p3q^2*s12*(s12 + s23)) - 
             p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
             p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
             p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
              (2*s13 + s23))) - (p2q*(s12 + s13 + s23)*
           (9*p1q^5*s12*s23^2*(s13 + s23)*(s12^2*(4*s13 + s23) + 
              2*s12*(2*s13^2 + 4*s13*s23 + s23^2) + s23*(3*s13^2 + 
                4*s13*s23 + s23^2)) + 9*(p2q + p3q)^2*s12*s23*
             (s12 + s13 + s23)*(p2q^3*s13^2*(s12 + s13 - s23)*(s13 + s23) + 
              p3q^3*s12^2*(s13^2 + s23^2 + s12*(s13 + s23)) + 
              p2q*p3q^2*s12*(s12^2*s13 - 2*s13^3 - s13^2*s23 - 2*s13*s23^2 - 
                s23^3 - s12*(s13^2 + 4*s13*s23 + s23^2)) + p2q^2*p3q*s13*(
                s13^3 + s13^2*s23 + s13*s23^2 + s23^3 - s12^2*(2*s13 + s23) + 
                s12*(-s13^2 + 3*s13*s23 + 2*s23^2))) - p1q^4*s23*
             (p2q*(18*s12^4*(2*s13^2 + 3*s13*s23 + s23^2) + s23^3*
                 (s13^3 + s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + 
                s12^3*(36*s13^3 + 36*s13^2*s23 + 29*s13*s23^2 + 28*s23^3) + 
                2*s12^2*(36*s13^4 + 90*s13^3*s23 + 52*s13^2*s23^2 + 
                  13*s13*s23^3 + 14*s23^4) + s12*s23*(90*s13^4 + 191*s13^3*
                   s23 + 125*s13^2*s23^2 + 45*s13*s23^3 + 20*s23^4)) + 
              p3q*(9*s12^4*(8*s13^2 + 15*s13*s23 + 4*s23^2) + 
                s23^3*(s13^3 + s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + 
                s12^3*(36*s13^3 + 135*s13^2*s23 + 182*s13*s23^2 + 64*s23^3) + 
                s12*s23*(27*s13^4 + 38*s13^3*s23 + 8*s13^2*s23^2 + 
                  18*s13*s23^3 + 20*s23^4) + s12^2*(36*s13^4 + 63*s13^3*s23 + 
                  50*s13^2*s23^2 + 71*s13*s23^3 + 46*s23^4))) + 
            p1q^3*(p3q^2*(9*s12^5*(4*s13^2 + 14*s13*s23 + 5*s23^2) + 
                s12^3*s23*(72*s13^3 + 61*s13^2*s23 + 2*s13*s23^2 + 
                  45*s23^3) + s12^4*(36*s13^3 + 45*s13^2*s23 + 47*s13*s23^2 + 
                  56*s23^3) + s23^3*(s13^4 + s13^3*s23 + 3*s13^2*s23^2 + 
                  s13*s23^3 - 2*s23^4) - s12*s23^2*(16*s13^4 + s13^3*s23 - 
                  51*s13^2*s23^2 - 22*s13*s23^3 + 8*s23^4) + s12^2*s23*
                 (-27*s13^4 + 43*s13^3*s23 + 131*s13^2*s23^2 + 78*s13*s23^3 + 
                  28*s23^4)) + p2q*p3q*(18*s12^5*s23*(3*s13 + 2*s23) - 
                s12^4*(72*s13^3 + 225*s13^2*s23 + 158*s13*s23^2 - 30*s23^3) + 
                s23^3*(3*s13^4 + s13^3*s23 + 4*s13^2*s23^2 + 2*s13*s23^3 - 
                  4*s23^4) + s12^2*s23*(-171*s13^4 - 148*s13^3*s23 + 
                  244*s13^2*s23^2 + 228*s13*s23^3 + 22*s23^4) + 
                s12^3*(-72*s13^4 - 117*s13^3*s23 + 23*s13^2*s23^2 + 
                  64*s13*s23^3 + 46*s23^4) + s12*s23*(27*s13^5 - 41*s13^4*
                   s23 - 89*s13^3*s23^2 + 48*s13^2*s23^3 + 26*s13*s23^4 - 
                  34*s23^5)) + p2q^2*(2*s13^4*s23^3 + s13^2*s23^5 + 
                s13*s23^6 - 2*s23^7 - s12^4*s23*(54*s13^2 + 70*s13*s23 + 
                  17*s23^2) + s12^3*(36*s13^4 + 99*s13^3*s23 + 133*s13^2*
                   s23^2 + 53*s13*s23^3 - 17*s23^4) + s12*s23*(99*s13^5 + 
                  155*s13^4*s23 + 29*s13^3*s23^2 - 30*s13^2*s23^3 - 
                  41*s13*s23^4 - 35*s23^5) + s12^2*(36*s13^5 + 72*s13^4*s23 + 
                  34*s13^3*s23^2 + 68*s13^2*s23^3 + 33*s13*s23^4 - 
                  33*s23^5))) - p1q*(p3q^4*s12*(18*s12^5*(2*s13 + s23) + 
                s13*s23^3*(s13^2 - s13*s23 + 2*s23^2) + 2*s12^4*(18*s13^2 + 
                  9*s13*s23 + 10*s23^2) + 4*s12^2*s23^2*(13*s13^2 + 
                  20*s13*s23 + 12*s23^2) + s12^3*s23*(27*s13^2 + 25*s13*s23 + 
                  30*s23^2) + s12*s23*(9*s13^4 + 11*s13^3*s23 + 24*s13^2*
                   s23^2 + 47*s13*s23^3 + 20*s23^4)) + p2q^4*s13*(
                18*s12^4*s23*(s13 + s23) + s12^3*s23*(9*s13^2 + 20*s13*s23 + 
                  10*s23^2) + s13*s23^2*(2*s13^3 + 3*s13^2*s23 + 
                  3*s13*s23^2 + 2*s23^3) + 2*s12^2*(18*s13^4 + 54*s13^3*s23 + 
                  89*s13^2*s23^2 + 57*s13*s23^3 + 4*s23^4) + 
                s12*(36*s13^5 + 81*s13^4*s23 + 106*s13^3*s23^2 + 98*s13^2*
                   s23^3 + 20*s13*s23^4 - 16*s23^5)) + p2q^2*p3q^2*(
                -2*s12^5*s23*(54*s13 + 17*s23) + s12^4*(216*s13^3 + 
                  351*s13^2*s23 + 179*s13*s23^2 - 8*s23^3) + s12^2*s23*
                 (189*s13^4 + 233*s13^3*s23 - 20*s13^2*s23^2 - 77*s13*s23^3 - 
                  20*s23^4) + s13*s23^2*(2*s13^4 + s13^3*s23 + s13^2*s23^2 - 
                  2*s13*s23^3 - 4*s23^4) + s12^3*(216*s13^4 + 459*s13^3*s23 + 
                  314*s13^2*s23^2 + 144*s13*s23^3 + 10*s23^4) - 
                s12*s23*(27*s13^5 - 26*s13^4*s23 - 99*s13^3*s23^2 + 
                  23*s13^2*s23^3 + 58*s13*s23^4 + 4*s23^5)) + 
              p2q^3*p3q*(-18*s12^5*s13*s23 + s12^4*s23*(81*s13^2 + 
                  104*s13*s23 + 17*s23^2) + s13*s23^2*(4*s13^4 + 5*s13^3*
                   s23 + 5*s13^2*s23^2 + 2*s13*s23^3 - 2*s23^4) + 
                s12^3*(-144*s13^4 - 261*s13^3*s23 - 163*s13^2*s23^2 + 
                  11*s13*s23^3 + 17*s23^4) - s12^2*(144*s13^5 + 297*s13^4*
                   s23 + 162*s13^3*s23^2 + 49*s13^2*s23^3 + 32*s13*s23^4 - 
                  7*s23^5) + s12*s23*(-81*s13^5 - 71*s13^4*s23 + 70*s13^3*
                   s23^2 + 19*s13^2*s23^3 - 27*s13*s23^4 + 7*s23^5)) + 
              p2q*p3q^3*(18*s12^6*s23 - 2*s12^5*(72*s13^2 + 108*s13*s23 + 
                  7*s23^2) - s12^4*(144*s13^3 + 261*s13^2*s23 + 98*s13*
                   s23^2 - 5*s23^3) - s13*s23^3*(s13^3 + s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12^3*s23*(-135*s13^3 - 
                  99*s13^2*s23 + 79*s13*s23^2 + 41*s23^3) - s12^2*s23*
                 (-27*s13^4 + 64*s13^3*s23 + 121*s13^2*s23^2 + 26*s13*s23^3 + 
                  7*s23^4) - s12*s23*(9*s13^5 + 13*s13^4*s23 + 16*s13^3*
                   s23^2 + 59*s13^2*s23^3 + 45*s13*s23^4 + 11*s23^5))) + 
            p1q^2*(p3q^3*(-18*s12^6*(2*s13 + s23) + s12^5*s23*(81*s13 + 
                  8*s23) + s13*s23^4*(-s13^2 + s13*s23 + 2*s23^2) + 
                6*s12^4*(6*s13^3 + 3*s13^2*s23 + 7*s13*s23^2 + 2*s23^3) + 
                s12^3*s23*(45*s13^3 - 18*s13^2*s23 - 44*s13*s23^2 + 
                  13*s23^3) + s12*s23^2*(-8*s13^4 - 5*s13^3*s23 + 
                  36*s13^2*s23^2 + 37*s13*s23^3 + 13*s23^4) + 2*s12^2*s23*
                 (-9*s13^4 + 6*s13^3*s23 + 23*s13^2*s23^2 + 21*s13*s23^3 + 
                  20*s23^4)) - p2q*p3q^2*(18*s12^6*s23 + 2*s12^4*s23*
                 (90*s13^2 + 115*s13*s23 + 16*s23^2) - s12^5*(108*s13^2 + 
                  189*s13*s23 + 16*s23^2) + s12^2*s23*(216*s13^4 + 
                  255*s13^3*s23 - 25*s13^2*s23^2 - 88*s13*s23^3 - 50*s23^4) + 
                s12*s23^2*(91*s13^4 + 135*s13^3*s23 - 37*s13^2*s23^2 - 
                  57*s13*s23^3 + 3*s23^4) + 3*s12^3*(36*s13^4 + 57*s13^3*
                   s23 + 89*s13^2*s23^2 + 88*s13*s23^3 + 5*s23^4) + 
                s23^2*(s13^5 - s13^4*s23 + 2*s13^3*s23^2 - 2*s13^2*s23^3 - 
                  4*s13*s23^4 + 2*s23^5)) + p2q^2*p3q*(s12^5*s23*(36*s13 + 
                  17*s23) + s12^3*s23*(-99*s13^3 - 129*s13^2*s23 - 
                  63*s13*s23^2 + 16*s23^3) - s12^4*(108*s13^3 + 378*s13^2*
                   s23 + 307*s13*s23^2 + 17*s23^3) + s12*s23*(81*s13^5 + 
                  22*s13^4*s23 - 120*s13^3*s23^2 + 34*s13^2*s23^3 + 
                  57*s13*s23^4 - 23*s23^5) + s23^2*(-2*s13^5 + 4*s13^4*s23 + 
                  3*s13^3*s23^2 + 5*s13^2*s23^3 + 6*s13*s23^4 - 2*s23^5) + 
                s12^2*(108*s13^5 - 36*s13^4*s23 - 285*s13^3*s23^2 + 
                  7*s13^2*s23^3 + 163*s13*s23^4 + 29*s23^5)) + 
              p2q^3*(-(s12^4*s13*s23*(36*s13 + 35*s23)) + s13*s23^2*
                 (-s13^4 + 3*s13^3*s23 + 4*s13^2*s23^2 + 4*s13*s23^3 + 
                  4*s23^4) + s12^2*s23*(18*s13^4 + 54*s13^3*s23 + 163*s13^2*
                   s23^2 + 135*s13*s23^3 + 10*s23^4) + s12^3*(36*s13^4 + 
                  117*s13^3*s23 + 174*s13^2*s23^2 + 112*s13*s23^3 + 
                  17*s23^4) + s12*(-36*s13^6 + 9*s13^5*s23 + 132*s13^4*
                   s23^2 + 163*s13^3*s23^3 + 150*s13^2*s23^4 + 64*s13*s23^5 - 
                  7*s23^6)))))/(16*p1q*(p2q + p3q)*s12*s13*s23^2*
           (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
              p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
              p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*
                 (s13 + s23) + s12*(s13^2 + s23^2))) - 
            p1q^2*(p2q*(s13 + s23)*(s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
              p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + s13*s23 + s23^2))))))*E0 . E0conj + 
       (-1/8*(ep*p2q*(s12 + s13 + s23)^2*(p1q^5*s23^2*(s13*s23*
                (s13 + 2*s23) + s12^2*(18*s13 + 17*s23) + s12*s23*
                (27*s13 + 25*s23)) - (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
              (p3q^2*(18*s12^3 + 27*s12^2*s23 + s12*s23^2 - s13*s23^2) - p2q*
                p3q*(2*s13*s23^2 + 9*s12^2*(4*s13 + s23) + s12*s23*
                  (27*s13 + 25*s23)) + p2q^2*(-(s13*s23^2) + 
                 s12*(18*s13^2 + 9*s13*s23 - 8*s23^2))) + 
             p1q^4*s23*(p3q*(s13*s23^2*(2*s13 + 5*s23) - 4*s12^3*(9*s13 + 
                   13*s23) - s12^2*s23*(18*s13 + 43*s23) + s12*s23*
                  (-2*s13^2 + 50*s13*s23 + 49*s23^2)) + p2q*
                (2*s12^3*(9*s13 + 8*s23) + s13*s23*(-2*s13^2 - 4*s13*s23 + 
                   3*s23^2) + s12^2*(-18*s13^2 + 52*s13*s23 + 66*s23^2) + 
                 s12*s23*(-56*s13^2 + 25*s13*s23 + 74*s23^2))) - 
             p1q^2*(p3q^3*(18*s12^5 - s13*s23^4 - 3*s12^3*s23*(6*s13 + 
                   35*s23) - s12^4*(36*s13 + 79*s23) + s12*s23^2*(2*s13^2 + 
                   8*s13*s23 + s23^2) + s12^2*s23*(-2*s13^2 + 49*s13*s23 + 
                   73*s23^2)) + p2q*p3q^2*(18*s12^5 - 2*s12^4*(36*s13 + 
                   17*s23) + s12*s23^2*(54*s13^2 + 25*s13*s23 - 26*s23^2) + 
                 s13*s23^2*(-2*s13^2 + 2*s13*s23 - 5*s23^2) + s12^3*
                  (72*s13^2 + 19*s13*s23 + 8*s23^2) + s12^2*s23*(80*s13^2 + 
                   97*s13*s23 + 178*s23^2)) + p2q^3*(2*s12^3*s13*(9*s13 + 
                   8*s23) - s13*s23^2*(5*s13^2 - 4*s13*s23 + s23^2) + 
                 s12^2*(-36*s13^3 + 54*s13^2*s23 + 82*s13*s23^2) + 
                 s12*s23*(-115*s13^3 + 24*s13^2*s23 + 123*s13*s23^2 - 
                   8*s23^3)) + p2q^2*p3q*(-4*s12^4*(9*s13 + 4*s23) + 
                 2*s12^3*(45*s13^2 - 10*s13*s23 - 7*s23^2) + s12*s23*
                  (-62*s13^3 + 145*s13^2*s23 + 142*s13*s23^2 - 49*s23^3) + 
                 s13*s23*(2*s13^3 + s13^2*s23 + 16*s13*s23^2 - s23^3) + 
                 s12^2*(-36*s13^3 + 175*s13^2*s23 + 64*s13*s23^2 + 
                   25*s23^3))) + p1q*(p3q^4*s12*(-36*s12^4 + s12^3*
                  (18*s13 - s23) - 2*s13*s23^3 + s12^2*s23*(27*s13 + 
                   77*s23) + s12*s23*(s13^2 + 4*s13*s23 + 2*s23^2)) - 2*p2q*
                p3q^3*(18*s12^5 + s13^2*s23^3 - 7*s12^4*(9*s13 + s23) + 
                 s12^3*(27*s13^2 - 44*s13*s23 - 48*s23^2) + s12*s13*s23*
                  (s13^2 + 5*s13*s23 + 3*s23^2) + s12^2*s23*(27*s13^2 + 
                   22*s13*s23 + 25*s23^2)) + p2q^2*p3q^2*
                (3*s12^4*(36*s13 + 11*s23) + s12*s13*s23*(27*s13^2 - 
                   41*s13*s23 - 54*s23^2) + s13^2*s23*(s13^2 + 6*s13*s23 - 
                   4*s23^2) + s12^3*(-162*s13^2 + 49*s13*s23 + 55*s23^2) + 
                 2*s12^2*(27*s13^3 - 87*s13^2*s23 - 53*s13*s23^2 - 
                   25*s23^3)) + p2q^4*s13*(3*s12^2*s13*(12*s13 + 11*s23) - 
                 s13*s23*(s13^2 - 2*s13*s23 + 2*s23^2) + s12*(-18*s13^3 + 
                   77*s13^2*s23 + 75*s13*s23^2 - 16*s23^3)) - 2*p2q^3*p3q*
                (2*s13^2*s23^2*(-2*s13 + s23) + 3*s12^3*s13*(18*s13 + 
                   11*s23) + s12^2*(-45*s13^3 + 70*s13^2*s23 + 65*s13*s23^2 + 
                   8*s23^3) + s12*s13*(9*s13^3 - 44*s13^2*s23 - 4*s13*s23^2 + 
                   42*s23^3))) + p1q^3*(p3q^2*(s13*s23^3*(s13 + 4*s23) - 
                 5*s12^3*s23*(9*s13 + 5*s23) + s12^4*(18*s13 + 53*s23) + 
                 s12^2*s23*(s13^2 - 88*s13*s23 - 135*s23^2) + s12*s23^2*
                  (-4*s13^2 + 17*s13*s23 + 23*s23^2)) + 2*p2q*p3q*
                (-2*s13*(s13 - 2*s23)*s23^3 + s12^4*(9*s13 + s23) + 
                 s12^2*s23*(-22*s13^2 + 2*s13*s23 - 31*s23^2) - 
                 s12^3*(9*s13^2 + 4*s13*s23 + 32*s23^2) + s12*s23*
                  (s13^3 - 51*s13^2*s23 + 3*s13*s23^2 + 50*s23^3)) + p2q^2*
                (2*s12^3*(-9*s13^2 + s13*s23 + 8*s23^2) + s12^2*s23*
                  (-105*s13^2 - 48*s13*s23 + 49*s23^2) + s13*s23*(s13^3 + 
                   2*s13^2*s23 - 7*s13*s23^2 + 2*s23^3) + s12*s23*(29*s13^3 - 
                   147*s13^2*s23 - 109*s13*s23^2 + 57*s23^3)))))/
           ((p1q + p2q + p3q)*s12*s13*s23*(p1q^4*s23^2*(s12 + s23)*
              (s13 + s23) - (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + 
               p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
                 s12*(2*s13 + s23))) - p1q^3*s23*(p2q*(s13 + s23)*
                (2*s12*s13 - s12*s23 + 3*s13*s23 - s23^2) + p3q*(s12 + s23)*
                (-(s23*(s13 + s23)) + s12*(2*s13 + 3*s23))) + 
             p1q*(-(p3q^3*s12^2*(s12 - s13 - 3*s23)*(s12 + s23)) + p2q^3*
                s13^2*(s13 + s23)*(s12 - s13 + 3*s23) + p2q*p3q^2*s12*
                (s12^2*(3*s13 + s23) - 2*s23*(s13^2 + s13*s23 + s23^2) - 
                 s12*(3*s13^2 + 2*s13*s23 + s23^2)) - p2q^2*p3q*s13*
                (s12^2*(3*s13 + 2*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                 s12*(-3*s13^2 + 2*s13*s23 + 2*s23^2))) + 
             p1q^2*(p2q^2*s13*(s13 + s23)*(s12*(s13 - 2*s23) + 3*(s13 - s23)*
                  s23) + p3q^2*s12*(s12 + s23)*(s12*(s13 + 3*s23) - 
                 s23*(2*s13 + 3*s23)) - p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - 
                   s23^2) + 2*s12^2*(s13^2 + s13*s23 + s23^2) + 
                 s12*(2*s13^2*s23 + s23^3))))) + 
         (p2q*(s12 + s13 + s23)^2*(9*p1q^8*s12*s23^4*(s12 - s13 + s23)*
             (s13 + s23) - 9*(p2q + p3q)^2*s12*(p3q*s12 - p2q*s13)^2*
             (p2q^4*s13*(s12 + s13 - s23)*(4*s13^2 + 3*s13*s23 - s23^2) + 
              p3q^4*s12*s23*(s13^2 + s23^2 + s12*(s13 + s23)) + 
              p2q^3*p3q*(4*s13^4 + s13^3*s23 + 3*s13^2*s23^2 + 5*s13*s23^3 - 
                s23^4 - s12^2*s13*(8*s13 + 3*s23) - s12*(4*s13^3 - 
                  10*s13^2*s23 - 3*s13*s23^2 + s23^3)) + p2q*p3q^3*(
                4*s12^3*(s13 + s23) + s12*s23*(2*s13^2 - 3*s13*s23 + s23^2) + 
                s12^2*(4*s13^2 + 3*s13*s23 + 6*s23^2) - s23*(s13^3 + 
                  s13^2*s23 + s13*s23^2 + s23^3)) + p2q^2*p3q^2*(
                4*s12^3*s13 - s12^2*(4*s13^2 + 13*s13*s23 + 3*s23^2) - 
                s23*(3*s13^3 + 2*s13^2*s23 + s13*s23^2 + 2*s23^3) - 
                s12*(8*s13^3 + 4*s13^2*s23 + 15*s13*s23^2 + 5*s23^3))) + 
            p1q^7*s23^3*(-(p2q*(s13^2*s23^2 + s12^2*(45*s13^2 - 42*s23^2) + 
                 s12*(-27*s13^3 + 63*s13^2*s23 + 36*s13*s23^2 - 50*s23^3))) + 
              p3q*(-(s13^2*s23^2) - 9*s12^3*(2*s13 + 3*s23) + 3*s12^2*
                 (21*s13^2 + 45*s13*s23 + 17*s23^2) + s12*(9*s13^3 - 
                  9*s13^2*s23 + 72*s13*s23^2 + 86*s23^3))) + 
            p1q^6*s23^2*(p3q^2*(s13*(s13 - s23)^2*s23^2 + 9*s12^4*
                 (s13 + 3*s23) - 9*s12^3*(11*s13^2 + 37*s13*s23 + 25*s23^2) + 
                s12^2*(-18*s13^3 + 153*s13^2*s23 + 174*s13*s23^2 - 
                  113*s23^3) + s12*s23*(54*s13^3 + 48*s13^2*s23 + 
                  195*s13*s23^2 + 187*s23^3)) + p2q^2*(s12^3*s23*(36*s13 + 
                  41*s23) + s23^2*(3*s13^3 - 2*s13^2*s23 + 5*s13*s23^2 + 
                  4*s23^3) + s12^2*(63*s13^3 - 144*s13^2*s23 - 41*s13*s23^2 + 
                  159*s23^3) + s12*(-27*s13^4 + 189*s13^3*s23 - 123*s13^2*
                   s23^2 - 165*s13*s23^3 + 154*s23^4)) + p2q*p3q*(
                s12^3*(36*s13^2 - 27*s13*s23 - 130*s23^2) + 2*s23^2*
                 (2*s13^3 - 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s12^2*(-90*s13^3 - 162*s13^2*s23 + 151*s13*s23^2 + 
                  64*s23^3) + s12*(-18*s13^4 + 63*s13^3*s23 - 399*s13^2*
                   s23^2 - 168*s13*s23^3 + 278*s23^4))) - 
            p1q^5*s23*(p3q^3*(9*s12^5*s23 - 2*s13*s23^3*(s13^2 - s13*s23 + 
                  s23^2) - 9*s12^4*(5*s13^2 + 29*s13*s23 + 31*s23^2) - 
                s12*s23^2*(88*s13^3 + 94*s13^2*s23 + 183*s13*s23^2 + 
                  161*s23^3) + s12^3*(-9*s13^3 + 279*s13^2*s23 + 744*s13*
                   s23^2 + 213*s23^3) + s12^2*s23*(108*s13^3 - 15*s13^2*s23 + 
                  105*s13*s23^2 + 460*s23^3)) + p2q*p3q^2*(s12^4*(27*s13^2 + 
                  18*s13*s23 - 116*s23^2) + s12^3*(81*s13^3 + 225*s13^2*s23 + 
                  674*s13*s23^2 + 544*s23^3) + s12*s23*(108*s13^4 - 
                  44*s13^3*s23 + 757*s13^2*s23^2 + 452*s13*s23^3 - 
                  379*s23^4) + 2*s23^2*(s13^4 - 3*s13^3*s23 + 12*s13^2*
                   s23^2 + s13*s23^3 - 2*s23^4) + s12^2*(18*s13^4 + 
                  360*s13^3*s23 + 333*s13^2*s23^2 - 157*s13*s23^3 + 
                  565*s23^4)) + p2q^2*p3q*(6*s12^4*s23*(15*s13 + 23*s23) - 
                s12^3*(54*s13^3 + 207*s13^2*s23 + 38*s13*s23^2 - 421*s23^3) + 
                s23^2*(5*s13^4 - 10*s13^3*s23 + 40*s13^2*s23^2 + 
                  12*s13*s23^3 - 8*s23^4) + s12^2*(-27*s13^4 - 225*s13^3*
                   s23 + 385*s13^2*s23^2 + 123*s13*s23^3 + 110*s23^4) + 
                s12*(-9*s13^5 + 99*s13^4*s23 - 850*s13^3*s23^2 + 520*s13^2*
                   s23^3 + 985*s13*s23^4 - 389*s23^5)) + 
              p2q^3*(2*s12^4*s23*(9*s13 + 10*s23) + 2*s12^3*s23*(27*s13^2 + 
                  25*s13*s23 - 9*s23^2) + s12^2*(27*s13^4 - 288*s13^3*s23 + 
                  226*s13^2*s23^2 + 385*s13*s23^3 - 157*s23^4) + 
                s23^2*(3*s13^4 - 6*s13^3*s23 + 18*s13^2*s23^2 + 8*s13*s23^3 - 
                  4*s23^4) + s12*(-9*s13^5 + 189*s13^4*s23 - 534*s13^3*
                   s23^2 + 29*s13^2*s23^3 + 548*s13*s23^4 - 171*s23^5))) + 
            p1q*(p2q + p3q)*(p3q^6*s12^2*s23*(18*s12^4 - s13^2*s23^2 - 
                2*s12^3*(36*s13 + 17*s23) + s12^2*(-45*s13^2 + 36*s13*s23 - 
                  33*s23^2) + s12*(9*s13^3 + 25*s13^2*s23 + 11*s13*s23^2 + 
                  27*s23^3)) + p2q*p3q^5*s12*(2*s13^3*s23^3 - 72*s12^5*
                 (s13 + s23) - 2*s12^4*(18*s13^2 - 9*s13*s23 + 26*s23^2) + 
                s12^2*s23*(180*s13^3 + 107*s13^2*s23 + 143*s13*s23^2 + 
                  122*s23^3) + s12^3*(36*s13^3 + 252*s13^2*s23 + 481*s13*
                   s23^2 + 128*s23^3) - 2*s12*s23*(9*s13^4 + 6*s13^3*s23 + 
                  23*s13^2*s23^2 + 11*s13*s23^3 + 9*s23^4)) + 
              p2q^6*s13^2*(36*s12^3*s13*(s13 + s23) + s13^2*s23^2*
                 (2*s13 + s23) + s12^2*(-36*s13^3 + 45*s13^2*s23 + 
                  61*s13*s23^2 - 17*s23^3) + s12*(-72*s13^4 + 225*s13^3*s23 + 
                  90*s13^2*s23^2 - 178*s13*s23^3 + 27*s23^4)) - 
              p2q^2*p3q^4*(s13^4*s23^3 + 18*s12^6*(6*s13 + 5*s23) + 
                s12^5*(-216*s13^2 - 540*s13*s23 + 2*s23^2) - 
                s12^4*(216*s13^3 + 54*s13^2*s23 + 523*s13*s23^2 + 
                  140*s23^3) + s12^3*(108*s13^4 + 90*s13^3*s23 + 775*s13^2*
                   s23^2 + 335*s13*s23^3 - 46*s23^4) + s12*s13*s23*
                 (-9*s13^4 + 15*s13^3*s23 - s13^2*s23^2 + 5*s13*s23^3 + 
                  18*s23^4) + s12^2*s23*(225*s13^4 + 136*s13^3*s23 + 
                  329*s13^2*s23^2 + 184*s13*s23^3 + 54*s23^4)) + 
              p2q^3*p3q^3*(-36*s12^6*s13 + 2*s13^4*(s13 - s23)*s23^2 + 
                s12^5*(360*s13^2 + 486*s13*s23 + 88*s23^2) + 
                s12^4*(-144*s13^3 - 828*s13^2*s23 + 143*s13*s23^2 + 
                  124*s23^3) + s12*s13*s23*(90*s13^4 - 13*s13^3*s23 + 
                  39*s13^2*s23^2 + 62*s13*s23^3 - 54*s23^4) + 
                s12^3*(-432*s13^4 + 108*s13^3*s23 - 941*s13^2*s23^2 - 
                  463*s13*s23^3 + 14*s23^4) + s12^2*(108*s13^5 - 288*s13^4*
                   s23 + 465*s13^3*s23^2 - 24*s13^2*s23^3 - 212*s13*s23^4 - 
                  54*s23^5)) + p2q^5*p3q*s13*(2*s13^3*s23^2*(3*s13 + s23) - 
                36*s12^4*s13*(3*s13 + 2*s23) + s12^3*(216*s13^3 + 216*s13^2*
                   s23 + 74*s13*s23^2 - 20*s23^3) + s12^2*(216*s13^4 - 
                  414*s13^3*s23 + 211*s13^2*s23^2 + 322*s13*s23^3 - 
                  18*s23^4) + s12*(-108*s13^5 + 342*s13^4*s23 + 17*s13^3*
                   s23^2 - 205*s13^2*s23^3 + 198*s13*s23^4 - 18*s23^5)) + 
              p2q^4*p3q^2*(6*s13^5*s23^2 + 36*s12^5*s13*(3*s13 + s23) + 
                s12^4*(-432*s13^3 - 657*s13^2*s23 - 223*s13*s23^2 + s23^3) - 
                s12^3*(144*s13^4 - 549*s13^3*s23 + 442*s13^2*s23^2 + 
                  448*s13*s23^3 + 9*s23^4) + s12^2*(360*s13^5 - 540*s13^4*
                   s23 + 451*s13^3*s23^2 + 167*s13^2*s23^3 - 212*s13*s23^4 - 
                  18*s23^5) - s12*s13*(36*s13^5 - 198*s13^4*s23 + 143*s13^3*
                   s23^2 + 131*s13^2*s23^3 - 166*s13*s23^4 + 54*s23^5))) + 
            p1q^4*s23*(p3q^4*(s13*(s13 - s23)^2*s23^3 - 3*s12^5*(21*s13 + 
                  44*s23) + s12^4*(135*s13^2 + 678*s13*s23 + 457*s23^2) + 
                s12*s23^2*(50*s13^3 + 55*s13^2*s23 + 69*s13*s23^2 + 
                  60*s23^3) + s12^3*(54*s13^3 - 170*s13^2*s23 - 555*s13*
                   s23^2 + 240*s23^3) - s12^2*s23*(179*s13^3 + 200*s13^2*
                   s23 + 258*s13*s23^2 + 449*s23^3)) + p2q*p3q^3*(
                5*s12^5*(9*s13 - 2*s23) + 4*s13*s23^3*(4*s13^2 - 5*s13*s23 - 
                  2*s23^2) + s12^4*(162*s13^2 + 577*s13*s23 + 660*s23^2) - 
                s12^3*(135*s13^3 + 427*s13^2*s23 + 942*s13*s23^2 + 
                  10*s23^3) + s12^2*(-36*s13^4 - 292*s13^3*s23 + 30*s13^2*
                   s23^2 + 556*s13*s23^3 - 923*s23^4) + s12*s23*(-106*s13^4 + 
                  240*s13^3*s23 - 220*s13^2*s23^2 - 257*s13*s23^3 + 
                  237*s23^4)) + p2q^4*(2*s12^4*(9*s13^2 + s13*s23 - 
                  10*s23^2) - s12^3*(18*s13^3 + 9*s13^2*s23 + 28*s13*s23^2 + 
                  23*s23^3) + s13*s23*(s13^4 - 6*s13^3*s23 + 24*s13^2*s23^2 - 
                  2*s13*s23^3 - 13*s23^4) + s12^2*(-189*s13^4 + 441*s13^3*
                   s23 + 195*s13^2*s23^2 - 421*s13*s23^3 + 32*s23^4) + 
                s12*(63*s13^5 - 636*s13^4*s23 + 659*s13^3*s23^2 + 611*s13^2*
                   s23^3 - 632*s13*s23^4 + 67*s23^5)) + p2q^3*p3q*(
                2*s12^4*s23*(31*s13 + 6*s23) + s12^5*(54*s13 + 74*s23) + 
                s12^3*(135*s13^3 + 354*s13^2*s23 + 634*s13*s23^2 - 
                  216*s23^3) + s12^2*(-270*s13^4 + 903*s13^3*s23 + 
                  230*s13^2*s23^2 + 162*s13*s23^3 - 93*s23^4) + 
                2*s23*(s13^5 - 4*s13^4*s23 + 34*s13^3*s23^2 - 7*s13^2*s23^3 - 
                  14*s13*s23^4 + 2*s23^5) + s12*(45*s13^5 - 865*s13^4*s23 + 
                  1772*s13^3*s23^2 + 870*s13^2*s23^3 - 1361*s13*s23^4 + 
                  289*s23^5)) + p2q^2*p3q^2*(s12^5*(90*s13 + 187*s23) + 
                s12^4*(-135*s13^2 - 113*s13*s23 + 325*s23^2) + 
                s12^3*(-36*s13^3 + 52*s13^2*s23 + 5*s13*s23^2 - 452*s23^3) + 
                s12^2*(27*s13^4 + 421*s13^3*s23 - 77*s13^2*s23^2 + 
                  803*s13*s23^3 - 779*s23^4) + s23*(s13^5 - 2*s13^4*s23 + 
                  59*s13^3*s23^2 - 30*s13^2*s23^3 - 24*s13*s23^4 + 4*s23^5) + 
                s12*(54*s13^5 - 272*s13^4*s23 + 1321*s13^3*s23^2 - 
                  169*s13^2*s23^3 - 1307*s13*s23^4 + 327*s23^5))) + 
            p1q^3*(p3q^5*s23*(18*s12^6 - s13^2*s23^4 - s12^5*(180*s13 + 
                  253*s23) + s12^4*(108*s13^2 + 645*s13*s23 + 170*s23^2) + 
                s12*s23^2*(7*s13^3 + 11*s13^2*s23 + 9*s13*s23^2 + 9*s23^3) - 
                s12^2*s23*(106*s13^3 + 149*s13^2*s23 + 126*s13*s23^2 + 
                  171*s23^3) + s12^3*(90*s13^3 + 126*s13^2*s23 - 109*s13*
                   s23^2 + 381*s23^3)) + p2q*p3q^4*(-18*s12^6*s23 + 
                2*s12^5*(18*s13^2 + 9*s13*s23 - 97*s23^2) + s13^2*s23^3*
                 (2*s13^2 + 16*s13*s23 + s23^2) + s12^3*s23*(-72*s13^3 - 
                  593*s13^2*s23 - 958*s13*s23^2 + 535*s23^3) + 
                s12^4*(36*s13^3 + 468*s13^2*s23 + 1061*s13*s23^2 + 
                  549*s23^3) + s12*s23^2*(-36*s13^4 + 227*s13^3*s23 + 
                  198*s13^2*s23^2 + 58*s13*s23^3 + 95*s23^4) - s12^2*s23*
                 (108*s13^4 + 282*s13^3*s23 + 235*s13^2*s23^2 - 323*s13*
                   s23^3 + 535*s23^4)) + p2q^5*(2*s12^4*s13*s23*(9*s13 + 
                  10*s23) + s13^2*s23^2*(2*s13^3 - 14*s13^2*s23 + 
                  14*s13*s23^2 + 15*s23^3) + 2*s12^3*s13*(18*s13^3 - 
                  27*s13^2*s23 - 13*s13*s23^2 + 29*s23^3) + s12^2*
                 (36*s13^5 - 252*s13^4*s23 + 85*s13^3*s23^2 + 334*s13^2*
                   s23^3 - 61*s13*s23^4 + s23^5) + s12*s23*(288*s13^5 - 
                  893*s13^4*s23 - 41*s13^3*s23^2 + 859*s13^2*s23^3 - 
                  240*s13*s23^4 + 9*s23^5)) + p2q^4*p3q*(4*s12^5*s23*
                 (9*s13 + 13*s23) - 2*s12^4*(36*s13^3 + 117*s13^2*s23 + 
                  74*s13*s23^2 - 39*s23^3) + s12^3*s23*(36*s13^3 - 
                  477*s13^2*s23 + 72*s13*s23^2 + 16*s23^3) + s13*s23^2*
                 (2*s13^4 - 40*s13^3*s23 + 56*s13^2*s23^2 + 35*s13*s23^3 - 
                  8*s23^4) + s12^2*(72*s13^5 - 936*s13^4*s23 + 477*s13^3*
                   s23^2 - 41*s13^2*s23^3 - 10*s13*s23^4 - 19*s23^5) + 
                s12*s23*(414*s13^5 - 1926*s13^4*s23 + 462*s13^3*s23^2 + 
                  1696*s13^2*s23^3 - 869*s13*s23^4 + 95*s23^5)) - 
              p2q^2*p3q^3*(90*s12^6*s23 + s12^4*s23*(342*s13^2 + 217*s13*
                   s23 - 612*s23^2) - 9*s12^5*(8*s13^2 + 36*s13*s23 + 
                  13*s23^2) + s12^3*(72*s13^4 + 594*s13^3*s23 + 1845*s13^2*
                   s23^2 + 1439*s13*s23^3 - 145*s23^4) + 2*s13*s23^2*
                 (s13^4 + 6*s13^3*s23 - 24*s13^2*s23^2 + s13*s23^3 + 
                  6*s23^4) + s12^2*s23*(396*s13^4 + 227*s13^3*s23 + 
                  1050*s13^2*s23^2 - 700*s13*s23^3 + 732*s23^4) - 
                s12*s23*(18*s13^5 - 554*s13^4*s23 + 407*s13^3*s23^2 + 
                  51*s13^2*s23^3 - 646*s13*s23^4 + 136*s23^5)) - 
              p2q^3*p3q^2*(54*s12^6*s23 - 2*s12^5*(18*s13^2 + 117*s13*s23 + 
                  55*s23^2) + s12^4*(108*s13^3 + 666*s13^2*s23 + 549*s13*
                   s23^2 - 203*s23^3) + 2*s13*s23^2*(s13^4 + 20*s13^3*s23 - 
                  37*s13^2*s23^2 - 8*s13*s23^3 + 10*s23^4) + 
                s12^3*(108*s13^4 - 90*s13^3*s23 + 821*s13^2*s23^2 + 
                  216*s13*s23^3 + 137*s23^4) - s12*s23*(216*s13^5 - 
                  1299*s13^4*s23 + 1266*s13^3*s23^2 + 1349*s13^2*s23^3 - 
                  1036*s13*s23^4 + 172*s23^5) + s12^2*(-36*s13^5 + 
                  684*s13^4*s23 - 1097*s13^3*s23^2 + 295*s13^2*s23^3 - 
                  806*s13*s23^4 + 388*s23^5))) + 
            p1q^2*(p3q^6*s12*s23*(36*s12^5 + 2*s13^2*s23^3 - 5*s12^4*
                 (36*s13 + 31*s23) + s12^3*(-18*s13^2 + 255*s13*s23 - 
                  59*s23^2) - s12*s23*(17*s13^3 + 25*s13^2*s23 + 
                  21*s13*s23^2 + 27*s23^3) + s12^2*(54*s13^3 + 141*s13^2*
                   s23 + 28*s13*s23^2 + 153*s23^3)) - p2q*p3q^5*(
                -2*s13^3*s23^4 + 36*s12^6*(s13 + s23) + s12^5*(-36*s13^2 + 
                  36*s13*s23 + 198*s23^2) + s12^3*s23*(-144*s13^3 + 
                  304*s13^2*s23 + 536*s13*s23^2 - 271*s23^3) - 
                s12^4*(72*s13^3 + 504*s13^2*s23 + 938*s13*s23^2 + 
                  127*s23^3) + s12*s23^2*(20*s13^4 + 3*s13^3*s23 + 
                  3*s13^2*s23^2 + 5*s13*s23^3 - 9*s23^4) + s12^2*s23*
                 (108*s13^4 + 272*s13^3*s23 + 528*s13^2*s23^2 + 249*s13*
                   s23^3 + 217*s23^4)) - p2q^6*s13*(s13^2*s23^2*(-3*s13^2 + 
                  10*s13*s23 + 7*s23^2) + s12^3*(-72*s13^3 + 71*s13*s23^2) + 
                s12^2*(-36*s13^4 + 18*s13^3*s23 + 79*s13^2*s23^2 + 
                  5*s13*s23^3 - 7*s23^4) + s12*(36*s13^5 - 450*s13^4*s23 + 
                  365*s13^3*s23^2 + 497*s13^2*s23^3 - 315*s13*s23^4 + 
                  27*s23^5)) + p2q^2*p3q^4*(-36*s12^6*(2*s13 + 5*s23) + 
                6*s12^5*(36*s13^2 + 120*s13*s23 - 7*s23^2) + s13^2*s23^2*
                 (s13^3 + 21*s13*s23^2 + 8*s23^3) + s12^4*(108*s13^3 + 
                  216*s13^2*s23 + 714*s13*s23^2 + 367*s23^3) - 
                s12^3*(180*s13^4 + 216*s13^3*s23 + 1631*s13^2*s23^2 + 
                  1323*s13*s23^3 - 219*s23^4) - s12^2*s23*(378*s13^4 - 
                  117*s13^3*s23 + 738*s13^2*s23^2 + 79*s13*s23^3 + 
                  326*s23^4) + s12*s23*(54*s13^5 - 87*s13^4*s23 + 202*s13^3*
                   s23^2 + 158*s13^2*s23^3 - 87*s13*s23^4 + 36*s23^5)) + 
              p2q^3*p3q^3*(-36*s12^6*(s13 + 3*s23) + 2*s12^5*(162*s13^2 + 
                  468*s13*s23 + 53*s23^2) - s12^4*(180*s13^3 + 972*s13^2*
                   s23 + 40*s13*s23^2 - 297*s23^3) + 2*s13^2*s23^2*
                 (s13^3 - 11*s13^2*s23 + 16*s13*s23^2 + 10*s23^3) + 
                s12^3*(-396*s13^4 + 180*s13^3*s23 - 1818*s13^2*s23^2 - 
                  1253*s13*s23^3 + 55*s23^4) + s12^2*(144*s13^5 - 792*s13^4*
                   s23 + 1242*s13^3*s23^2 - 537*s13^2*s23^3 + 30*s13*s23^4 - 
                  262*s23^5) + s12*s23*(252*s13^5 - 612*s13^4*s23 + 
                  207*s13^3*s23^2 + 549*s13^2*s23^3 - 326*s13*s23^4 + 
                  54*s23^5)) - p2q^5*p3q*(2*s12^4*s13*(90*s13^2 + 
                  126*s13*s23 + 89*s23^2) + 2*s13^2*s23^2*(-3*s13^3 + 
                  21*s13^2*s23 + 9*s13*s23^2 - 2*s23^3) + s12^3*(-108*s13^4 - 
                  180*s13^3*s23 + 390*s13^2*s23^2 + 327*s13*s23^3 + 
                  2*s23^4) + s12^2*(-216*s13^5 + 828*s13^4*s23 - 318*s13^3*
                   s23^2 + 15*s13^2*s23^3 + 209*s13*s23^4 + 9*s23^5) + 
                s12*(72*s13^6 - 936*s13^5*s23 + 1084*s13^4*s23^2 + 
                  840*s13^3*s23^3 - 918*s13^2*s23^4 + 257*s13*s23^5 - 
                  9*s23^6)) + p2q^4*p3q^2*(3*s12^5*(48*s13^2 + 120*s13*s23 + 
                  35*s23^2) - s12^4*(396*s13^3 + 918*s13^2*s23 + 249*s13*
                   s23^2 - 152*s23^3) + 2*s13^2*s23^2*(2*s13^3 - 27*s13^2*
                   s23 + s13*s23^2 + 8*s23^3) + s12^3*(-180*s13^4 + 
                  666*s13^3*s23 - 951*s13^2*s23^2 - 713*s13*s23^3 + 
                  24*s23^4) + s12^2*(324*s13^5 - 1332*s13^4*s23 + 1267*s13^3*
                   s23^2 - 204*s13^2*s23^3 - 191*s13*s23^4 - 99*s23^5) + 
                s12*(-36*s13^6 + 684*s13^5*s23 - 1264*s13^4*s23^2 - 
                  305*s13^3*s23^3 + 1061*s13^2*s23^4 - 438*s13*s23^5 + 
                  36*s23^6)))))/(8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
           s23^2*(p1q^5*s23^3*(s12 + s23)*(s13 + s23) + (p2q + p3q)*
             (s12 + s13)*(p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + 
              p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
                s12*(2*s13 + s23))) - p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 
                3*s12*s13 + (4*s13 - s23)*s23) + p3q*(s12^2*(3*s13 + 4*s23) + 
                s23*(s13^2 - s23^2) + s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + 
            p1q^3*s23*(p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 
                3*s12^2*(s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + 
              p2q^2*(s13 + s23)*(s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*
                 s23 + s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 
                  3*s23) + s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + 
                s12*(2*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + 
                s23*(3*s13^3 - s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*
        p1 . E0conj*p2 . E0 + ((ep*p1q*p2q*(s12 + s13 + s23)^3*
           (-((p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q*(9*s12*s13 + 8*s12*s23 - 
                 s13*s23) - p3q*(9*s12^2 + s12*s23 + s13*s23))) + 
            p1q^3*s23*(-(p2q*(s12 + s23)*(9*s12*s13 + 8*s12*s23 - s13*s23)) + 
              p3q*(s13 + s23)*(9*s12^2 + s12*s23 + s13*s23)) + 
            p1q^2*(p2q^2*(s13*s23^2*(-2*s13 + s23) + s12^2*(9*s13^2 - 
                  s13*s23 - 8*s23^2) + s12*s23*(17*s13^2 + 8*s13*s23 - 
                  8*s23^2)) + p3q^2*(s13*s23^2*(s13 + s23) - 9*s12^3*
                 (s13 + 2*s23) + s12^2*s23*(8*s13 + 7*s23) + s12*s23*
                 (-s13^2 - s13*s23 + s23^2)) + p2q*p3q*(
                -(s12^3*(9*s13 + s23)) - s13^2*s23*(s13 + 3*s23) + 
                s12*s13*s23*(4*s13 + 3*s23) + s12^2*(9*s13^2 + 13*s13*s23 + 
                  15*s23^2))) + p1q*(p3q^3*s12*(9*s12^3 - 2*s12*s23^2 - 
                s13*s23*(s13 + 2*s23) - s12^2*(9*s13 + 17*s23)) - 
              p2q^2*p3q*(2*s13^2*s23*(-s13 + s23) + 2*s12^3*(9*s13 + 4*s23) - 
                s12^2*s13*(27*s13 + 7*s23) + s12*s13*(9*s13^2 + s13*s23 - 
                  7*s23^2)) + p2q*p3q^2*(9*s12^4 + s13^3*s23 - 2*s12*s13*s23*
                 (s13 + s23) - s12^3*(27*s13 + 16*s23) + s12^2*(18*s13^2 + 
                  17*s13*s23 + 7*s23^2)) + p2q^3*s13*(s13*(s13 - 2*s23)*s23 + 
                s12^2*(9*s13 + 8*s23) + s12*(-9*s13^2 + 9*s13*s23 + 
                  16*s23^2)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) - 
         (p2q*(s12 + s13 + s23)^2*(18*(p2q + p3q)^3*s12*
             (-(p3q*s12) + p2q*s13)^3*(p2q^2*s13*(s12 + s13 - s23)*(s13 + 
                s23) - p3q^2*s12*(s13^2 + s23^2 + s12*(s13 + s23)) + 
              p2q*p3q*(-(s12^2*s13) + s13^3 + s13^2*s23 + s13*s23^2 + s23^3 + 
                s12*s23*(3*s13 + s23))) + 2*p1q^7*s23^4*
             (p2q*s23*(s12^2 + s12*s23 + s13*(s13 + s23)) + 
              p3q*(s13*s23*(s13 + s23) - s12^2*(9*s13 + 8*s23) + 
                s12*(9*s13^2 - 8*s23^2))) - p1q^6*s23^3*
             (p2q^2*(3*s12^3*(9*s13 + 10*s23) + s12*s23*(-6*s13^2 + 
                  33*s13*s23 + 28*s23^2) + s12^2*(-9*s13^2 + 53*s13*s23 + 
                  56*s23^2) + s23*(6*s13^3 + s13^2*s23 - 3*s13*s23^2 + 
                  2*s23^3)) + p3q^2*(-3*s12^3*(15*s13 + 19*s23) + 
                s12^2*(27*s13^2 + 39*s13*s23 - 26*s23^2) + s23*(3*s13^3 + 
                  2*s13^2*s23 + s13*s23^2 + 2*s23^3) + s12*(36*s13^3 + 
                  8*s13^2*s23 + 15*s13*s23^2 + 33*s23^3)) + 
              p2q*p3q*(9*s12^3*s23 + s12^2*(-90*s13^2 - 34*s13*s23 + 
                  48*s23^2) + s23*(9*s13^3 + 3*s13^2*s23 - 2*s13*s23^2 + 
                  4*s23^3) + s12*(54*s13^3 - 88*s13^2*s23 - 78*s13*s23^2 + 
                  43*s23^3))) + p1q^5*s23^2*(p2q*p3q^2*(3*s12^4*(9*s13 + 
                  13*s23) + s12^3*(-81*s13^2 + 11*s13*s23 + 177*s23^2) + 
                s12^2*(-36*s13^3 + 134*s13^2*s23 + 96*s13*s23^2 + 
                  127*s23^3) + s12*(72*s13^4 - 140*s13^3*s23 + 107*s13^2*
                   s23^2 + 237*s13*s23^3 - 17*s23^4) + s23*(7*s13^4 - 
                  4*s13^3*s23 + 4*s13^2*s23^2 + 9*s13*s23^3 - 6*s23^4)) + 
              p2q^2*p3q*(2*s12^4*(36*s13 + 53*s23) + s12^3*(-27*s13^2 + 
                  94*s13*s23 + 158*s23^2) + s12^2*(-153*s13^3 + 170*s13^2*
                   s23 + 287*s13*s23^2 + 4*s23^3) + s12*(54*s13^4 - 
                  313*s13^3*s23 + 24*s13^2*s23^2 + 264*s13*s23^3 - 
                  54*s23^4) + s23*(12*s13^4 - 12*s13^3*s23 + s13^2*s23^2 + 
                  19*s13*s23^3 - 6*s23^4)) + p2q^3*(s12^4*(9*s13 + 10*s23) + 
                s12^3*(45*s13^2 + 26*s13*s23 - 28*s23^2) + s12^2*(-36*s13^3 + 
                  146*s13^2*s23 + 96*s13*s23^2 - 82*s23^3) + s12*s23*
                 (-39*s13^3 + 103*s13^2*s23 + 70*s13*s23^2 - 46*s23^3) + 
                s23*(6*s13^4 - 9*s13^3*s23 - 4*s13^2*s23^2 + 9*s13*s23^3 - 
                  2*s23^4)) + p3q^3*(-3*s12^4*(12*s13 + 25*s23) + 
                s12^3*(-9*s13^2 + 69*s13*s23 + 27*s23^2) + s12^2*(81*s13^3 + 
                  128*s13^2*s23 + 67*s13*s23^2 + 113*s23^3) - 
                s23*(-s13^4 + s13^3*s23 + s13^2*s23^2 + s13*s23^3 + 
                  2*s23^4) + s12*(18*s13^4 + 8*s13^3*s23 + 60*s13^2*s23^2 + 
                  61*s13*s23^3 + 9*s23^4))) - 2*p1q*(p2q + p3q)^2*
             (-(p3q*s12) + p2q*s13)*(p2q^4*s13^2*(9*s12^3*(s13 + s23) + 
                s13*s23^2*(s13 + s23) + s12^2*(-9*s13^2 + 8*s23^2) + 
                s12*(-18*s13^3 + 36*s13^2*s23 + 18*s13*s23^2 - 35*s23^3)) + 
              p3q^4*s12^2*(s13*(s13 - s23)*s23^2 + 9*s12^3*(2*s13 + s23) + 
                s12^2*(9*s13^2 - 54*s13*s23 - 28*s23^2) - s12*(9*s13^3 + 
                  18*s13^2*s23 + 27*s13*s23^2 + 37*s23^3)) + p2q^2*p3q^2*(
                9*s12^5*s13 - s13^2*s23^3*(s13 + s23) + s12^3*s23*
                 (90*s13^2 + 33*s13*s23 - 8*s23^2) - 9*s12^4*(7*s13^2 + 
                  11*s13*s23 + 2*s23^2) + s12*s13*(-9*s13^4 + 18*s13^3*s23 - 
                  6*s13^2*s23^2 - 19*s13*s23^3 + 9*s23^4) + s12^2*
                 (63*s13^4 - 63*s13^3*s23 + 18*s13^2*s23^2 + 10*s13*s23^3 + 
                  10*s23^4)) + p2q*p3q^3*s12*(9*s12^4*(3*s13 + 2*s23) + 
                s13*s23^2*(-s13^2 + 2*s13*s23 + s23^2) - 2*s12^3*(18*s13^2 + 
                  54*s13*s23 + 5*s23^2) + s12^2*s13*(-45*s13^2 + 54*s13*s23 + 
                  68*s23^2) + 2*s12*(9*s13^4 + 34*s13^2*s23^2 + 28*s13*
                   s23^3 + 14*s23^4)) + p2q^3*p3q*s13*(-9*s12^4*(2*s13 + 
                  s23) + s13*s23^2*(s13^2 - s23^2) + s12^3*(45*s13^2 + 
                  81*s13*s23 + 46*s23^2) + s12^2*(36*s13^3 - 27*s13^2*s23 + 
                  67*s13*s23^2 + 43*s23^3) + s12*(-27*s13^4 + 63*s13^3*s23 + 
                  49*s13^2*s23^2 - 11*s13*s23^3 + 26*s23^4))) - 
            p1q^3*(p2q^5*s13*(s12^4*s23*(9*s13 + 10*s23) + s12^3*(18*s13^3 - 
                  9*s13^2*s23 - 12*s13*s23^2 + 10*s23^3) + s13*s23^2*
                 (5*s13^3 - 12*s13^2*s23 - 5*s13*s23^2 + 12*s23^3) + 
                s12^2*(18*s13^4 - 81*s13^3*s23 + 110*s13^2*s23^2 + 
                  151*s13*s23^3 - 70*s23^4) + s12*s23*(63*s13^4 - 205*s13^3*
                   s23 + 60*s13^2*s23^2 + 236*s13*s23^3 - 66*s23^4)) + 
              p3q^5*s12*(9*s12^5*s23 + s12^4*(18*s13^2 + 45*s13*s23 - 
                  49*s23^2) + s12^3*(18*s13^3 - 117*s13^2*s23 - 259*s13*
                   s23^2 - 129*s23^3) + s13*s23^2*(s13^3 + s13^2*s23 + 
                  2*s13*s23^2 + 6*s23^3) + s12^2*s23*(-9*s13^3 + 137*s13^2*
                   s23 + 33*s13*s23^2 + 13*s23^3) + s12*s23*(18*s13^4 + 
                  60*s13^3*s23 + 142*s13^2*s23^2 + 191*s13*s23^3 + 
                  84*s23^4)) + p2q^3*p3q^2*(-27*s12^6*s23 + 9*s12^5*
                 (2*s13^2 + 13*s13*s23 + 9*s23^2) - s12^4*(90*s13^3 + 
                  342*s13^2*s23 + 412*s13*s23^2 - 37*s23^3) + s13*s23^2*
                 (8*s13^4 - 29*s13^3*s23 + 15*s13^2*s23^2 + 38*s13*s23^3 - 
                  14*s23^4) - s12^3*(54*s13^4 + 126*s13^3*s23 + 164*s13^2*
                   s23^2 - 343*s13*s23^3 + 103*s23^4) + s12^2*(54*s13^5 - 
                  639*s13^4*s23 + 310*s13^3*s23^2 + 70*s13^2*s23^3 + 
                  136*s13*s23^4 - 24*s23^5) + s12*s23*(261*s13^5 - 
                  911*s13^4*s23 - 109*s13^3*s23^2 + 714*s13^2*s23^3 - 
                  148*s13*s23^4 + 8*s23^5)) + p2q^4*p3q*(2*s12^5*s23*
                 (9*s13 + 13*s23) - s12^4*(36*s13^3 + 117*s13^2*s23 + 
                  65*s13*s23^2 - 22*s23^3) + s13*s23^2*(12*s13^4 - 
                  29*s13^3*s23 + 3*s13^2*s23^2 + 38*s13*s23^3 - 6*s23^4) + 
                s12^3*(18*s13^4 - 81*s13^3*s23 - 213*s13^2*s23^2 + 
                  136*s13*s23^3 - 2*s23^4) + s12*s23*(243*s13^5 - 788*s13^4*
                   s23 - 122*s13^3*s23^2 + 600*s13^2*s23^3 - 176*s13*s23^4 + 
                  16*s23^5) + s12^2*(54*s13^5 - 333*s13^4*s23 + 158*s13^3*
                   s23^2 + 114*s13^2*s23^3 - 95*s13*s23^4 + 18*s23^5)) - 
              p2q*p3q^4*(27*s12^6*s23 - 3*s12^5*(18*s13^2 + 39*s13*s23 + 
                  s23^2) + s12^4*(-18*s13^3 + 351*s13^2*s23 + 734*s13*s23^2 + 
                  65*s23^3) + s12^2*s23*(126*s13^4 + 24*s13^3*s23 + 
                  3*s13^2*s23^2 - 402*s13*s23^3 - 146*s23^4) + 
                s12^3*(36*s13^4 - 27*s13^3*s23 - 176*s13^2*s23^2 - 
                  175*s13*s23^3 - 75*s23^4) + s13*s23^2*(s13^4 + 5*s13^3*
                   s23 + 2*s13^2*s23^2 + 2*s23^4) + s12*s23*(18*s13^5 + 
                  128*s13^4*s23 + 71*s13^3*s23^2 + 14*s13^2*s23^3 + 
                  32*s13*s23^4 + 24*s23^5)) + p2q^2*p3q^3*(-63*s12^6*s23 + 
                s12^5*(54*s13^2 + 171*s13*s23 + 107*s23^2) - 
                s12^4*(54*s13^3 + 450*s13^2*s23 + 812*s13*s23^2 - 97*s23^3) + 
                s13*s23^3*(-17*s13^3 + 5*s13^2*s23 + 12*s13*s23^2 - 
                  10*s23^3) + s12^3*(-90*s13^4 - 18*s13^3*s23 + 76*s13^2*
                   s23^2 + 413*s13*s23^3 - 3*s23^4) + s12*s23*(63*s13^5 - 
                  457*s13^4*s23 + 19*s13^3*s23^2 + 370*s13^2*s23^3 - 
                  58*s13*s23^4 - 32*s23^5) + s12^2*(18*s13^5 - 531*s13^4*
                   s23 + 178*s13^3*s23^2 + 16*s13^2*s23^3 + 444*s13*s23^4 + 
                  38*s23^5))) - p1q^4*s23*(p2q^4*(s12^4*(9*s13^2 + s13*s23 - 
                  10*s23^2) - s12^3*s23*(31*s13^2 + 43*s13*s23 + 2*s23^2) + 
                s13*s23*(2*s13^4 - 13*s13^3*s23 + 6*s13^2*s23^2 + 
                  13*s13*s23^3 - 8*s23^4) + s12*s23*(-78*s13^4 + 178*s13^3*
                   s23 + 37*s13^2*s23^2 - 169*s13*s23^3 + 16*s23^4) + 
                s12^2*(-45*s13^4 + 158*s13^3*s23 - 34*s13^2*s23^2 - 
                  219*s13*s23^3 + 24*s23^4)) - p3q^4*(s12^5*(9*s13 + 
                  43*s23) + s12^4*(36*s13^2 - 3*s13*s23 - 77*s23^2) + 
                s13*s23^2*(s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) - 
                s12^3*(27*s13^3 + 221*s13^2*s23 + 187*s13*s23^2 + 
                  159*s23^3) + s12^2*(-18*s13^4 + 22*s13^3*s23 + 16*s13^2*
                   s23^2 - 109*s13*s23^3 - 13*s23^4) + s12*s23*(17*s13^4 + 
                  43*s13^3*s23 + 84*s13^2*s23^2 + 70*s13*s23^3 + 26*s23^4)) + 
              p2q^2*p3q^2*(s12^5*(63*s13 + 139*s23) + s12^4*(9*s13^2 - 
                  8*s13*s23 + 94*s23^2) + s12^3*(27*s13^3 + 484*s13^2*s23 + 
                  627*s13*s23^2 - 147*s23^3) + s12^2*(-99*s13^4 + 538*s13^3*
                   s23 + 337*s13^2*s23^2 + 182*s13*s23^3 - 112*s23^4) + 
                s12*(36*s13^5 - 359*s13^4*s23 + 510*s13^3*s23^2 + 443*s13^2*
                   s23^3 - 308*s13*s23^4 - 6*s23^5) + 2*s23*(2*s13^5 - 
                  7*s13^4*s23 + 12*s13^3*s23^2 + 7*s13^2*s23^3 - 
                  12*s13*s23^4 + 2*s23^5)) + p2q*p3q^3*(s12^5*(27*s13 + 
                  59*s23) + s12^4*(-27*s13^2 - 18*s13*s23 + 173*s23^2) + 
                s12^3*(81*s13^3 + 517*s13^2*s23 + 577*s13*s23^2 + 
                  101*s23^3) + s12^2*(9*s13^4 + 283*s13^3*s23 + 301*s13^2*
                   s23^2 + 434*s13*s23^3 - 59*s23^4) + s12*(18*s13^5 - 
                  40*s13^4*s23 + 284*s13^3*s23^2 + 187*s13^2*s23^3 - 
                  116*s13*s23^4 - 44*s23^5) + s23*(s13^5 - 3*s13^4*s23 + 
                  8*s13^3*s23^2 + 2*s13^2*s23^3 - 8*s13*s23^4 + 2*s23^5)) + 
              p2q^3*p3q*(s12^5*(27*s13 + 37*s23) + s12^4*(9*s13^2 + 
                  14*s13*s23 - 48*s23^2) + s12^3*(-27*s13^3 + 157*s13^2*s23 + 
                  248*s13*s23^2 - 127*s23^3) + s12^2*(-135*s13^4 + 
                  391*s13^3*s23 + 202*s13^2*s23^2 - 164*s13*s23^3 + 
                  2*s23^4) + s23*(5*s13^5 - 25*s13^4*s23 + 20*s13^3*s23^2 + 
                  22*s13^2*s23^3 - 26*s13*s23^4 + 2*s23^5) + 
                s12*(18*s13^5 - 414*s13^4*s23 + 487*s13^3*s23^2 + 443*s13^2*
                   s23^3 - 305*s13*s23^4 + 46*s23^5))) - p1q^2*(p2q + p3q)*
             (p3q^5*s12^2*(9*s12^4*(-2*s13 + s23) + s13*s23^2*(s13^2 + 
                  3*s13*s23 - 6*s23^2) + 2*s12^3*(9*s13^2 + 81*s13*s23 + 
                  34*s23^2) + s12^2*(36*s13^3 - 45*s13^2*s23 - 172*s13*
                   s23^2 - 57*s23^3) - s12*s23*(36*s13^3 + 77*s13^2*s23 + 
                  176*s13*s23^2 + 116*s23^3)) + p2q*p3q^4*s12*(-18*s12^5*
                 (2*s13 + 3*s23) + 2*s13*s23^3*(3*s13^2 + s13*s23 + 
                  2*s23^2) + s12^4*(108*s13^2 + 297*s13*s23 + 52*s23^2) + 
                s12^3*(54*s13^3 - 324*s13^2*s23 - 576*s13*s23^2 - 58*s23^3) + 
                s12*s23^2*(181*s13^3 + 171*s13^2*s23 + 156*s13*s23^2 + 
                  60*s23^3) + s12^2*(-90*s13^4 + 135*s13^3*s23 + 57*s13^2*
                   s23^2 - 125*s13*s23^3 - 104*s23^4)) + p2q^5*s13^2*(
                s12^3*(36*s13^2 + 9*s13*s23 - 26*s23^2) + s13*s23^2*
                 (5*s13^2 - 3*s13*s23 - 8*s23^2) + 2*s12^2*(9*s13^3 - 
                  9*s13^2*s23 + 2*s13*s23^2 + 24*s23^3) + s12*(-18*s13^4 + 
                  135*s13^3*s23 - 109*s13^2*s23^2 - 149*s13*s23^3 + 
                  102*s23^4)) + p2q^3*p3q^2*(s12^5*(72*s13^2 + 171*s13*s23 + 
                  44*s23^2) - 2*s12^4*(99*s13^3 + 216*s13^2*s23 + 
                  102*s13*s23^2 - 11*s23^3) + s13^2*s23^2*(s13^3 - 
                  15*s13^2*s23 - 6*s13*s23^2 + 10*s23^3) - s12^3*(90*s13^4 - 
                  144*s13^3*s23 + 157*s13^2*s23^2 + 59*s13*s23^3 + 
                  36*s23^4) + s12^2*(162*s13^5 - 612*s13^4*s23 + 85*s13^3*
                   s23^2 - 21*s13^2*s23^3 - 68*s13*s23^4 - 14*s23^5) - 
                s12*s13*(18*s13^5 - 261*s13^4*s23 + 221*s13^3*s23^2 + 
                  257*s13^2*s23^3 - 146*s13*s23^4 + 28*s23^5)) + 
              p2q^2*p3q^3*(-9*s12^6*(2*s13 + 5*s23) + 2*s12^5*(81*s13^2 + 
                  198*s13*s23 + 32*s23^2) - s12^4*(90*s13^3 + 396*s13^2*s23 + 
                  374*s13*s23^2 - 39*s23^3) - s13^2*s23^2*(s13^3 + 
                  5*s13^2*s23 - 4*s23^3) + s12^3*(-198*s13^4 + 396*s13^3*
                   s23 + 319*s13^2*s23^2 + 148*s13*s23^3 - 24*s23^4) + 
                s12*s13*s23*(36*s13^4 - 105*s13^3*s23 - 32*s13^2*s23^2 + 
                  94*s13*s23^3 + 26*s23^4) + s12^2*(72*s13^5 - 351*s13^4*
                   s23 + 257*s13^3*s23^2 + 240*s13^2*s23^3 + 200*s13*s23^4 + 
                  46*s23^5)) - p2q^4*p3q*s13*(45*s12^4*(2*s13^2 + 3*s13*s23 + 
                  2*s23^2) - 2*s12^3*(27*s13^3 + 54*s13^2*s23 - 76*s13*
                   s23^2 - 51*s23^3) + s13*s23^2*(-7*s13^3 + 13*s13^2*s23 + 
                  14*s13*s23^2 - 6*s23^3) + s12^2*(-108*s13^4 + 189*s13^3*
                   s23 - 156*s13^2*s23^2 - 9*s13*s23^3 + 106*s23^4) + 
                s12*(36*s13^5 - 378*s13^4*s23 + 189*s13^3*s23^2 + 350*s13^2*
                   s23^3 - 156*s13*s23^4 + 50*s23^5)))))/(4*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s13*s23^2*(p1q^5*s23^3*(s12 + s23)*
             (s13 + s23) + (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*
        p2 . E0*p2 . E0conj + p1 . E0*
        ((-1/4*(ep*p2q*(s12 + s13 + s23)^2*(p1q^5*s23^3*(s23*(s13 + s23) + 
                 s12*(18*s13 + 17*s23)) - p1q^4*s23^2*
                (p3q*(15*s12^2*(3*s13 + 4*s23) + s12*(9*s13^2 - 16*s13*s23 - 
                     21*s23^2) + s23*(s13^2 - s23^2)) + p2q*
                  (9*s12^2*(s13 + s23) + s12*(45*s13^2 - 41*s23^2) + 
                   2*s23*(2*s13^2 + s13*s23 - s23^2))) - (p2q + p3q)*
                (p3q*s12 - p2q*s13)^2*(-(p3q^2*s12*(9*s12^2 + 9*s12*s13 - 
                    7*s12*s23 + 2*s13*s23)) + p2q*p3q*(-18*s12^3 + 
                   s13*s23*(s13 + s23) + s12^2*(-9*s13 + 6*s23) + 
                   s12*(9*s13^2 - 2*s13*s23 - 8*s23^2)) + p2q^2*
                  (s13*s23*(s13 + s23) + s12^2*(18*s13 + 17*s23) + 
                   s12*(18*s13^2 + 18*s13*s23 + s23^2))) + p1q*
                (p3q^4*s12^2*(9*s12^3 - 51*s12^2*s23 - s13*s23*(s13 + 
                     5*s23) + s12*(-9*s13^2 - 16*s13*s23 + 20*s23^2)) + 
                 p2q*p3q^3*s12*(18*s12^4 - s12^3*(36*s13 + 95*s23) + 
                   s13*s23*(s13^2 - s13*s23 + 2*s23^2) + s12^2*(-36*s13^2 + 
                     20*s13*s23 + 64*s23^2) + s12*(18*s13^3 - 10*s13^2*s23 - 
                     10*s13*s23^2 - 15*s23^3)) + p2q^2*p3q^2*(9*s12^5 + 
                   4*s13^2*s23^2*(s13 + s23) + 18*s12^3*(s13 + 2*s23)^2 - 
                   s12^4*(54*s13 + 43*s23) + s12^2*(72*s13^3 - 18*s13^2*s23 - 
                     5*s13*s23^2 - 20*s23^3) + s12*s13*(-9*s13^3 + 29*s13^2*
                      s23 + 14*s13*s23^2 - 10*s23^3)) + p2q^3*p3q*
                  (-2*s12^4*(9*s13 + 4*s23) + s13^2*s23*(-3*s13^2 + 
                     4*s13*s23 + 7*s23^2) + s12^3*(54*s13^2 + 17*s13*s23 + 
                     10*s23^2) + s12*s13*(-36*s13^3 + 52*s13^2*s23 + 
                     55*s13*s23^2 - 19*s23^3) + 2*s12^2*(18*s13^3 - 
                     5*s13^2*s23 + 3*s13*s23^2 - 7*s23^3)) + p2q^4*s13*
                  (-3*s13^3*s23 + 3*s13*s23^3 + s12^3*(9*s13 + 8*s23) + 
                   s12^2*(-18*s13^2 + 26*s13*s23 + 42*s23^2) + 
                   s12*(-27*s13^3 + 33*s13^2*s23 + 58*s13*s23^2 + 
                     2*s23^3))) - p1q^3*s23*(p3q^2*(s13*s23^2*(s13 + s23) - 
                   6*s12^3*(6*s13 + 13*s23) + s12*s23*(7*s13^2 - 2*s13*s23 - 
                     4*s23^2) + s12^2*(-18*s13^2 + 35*s13*s23 + 78*s23^2)) + 
                 p2q^2*(s12^3*(9*s13 + 8*s23) + s12^2*(-9*s13^2 + 25*s13*
                      s23 + 34*s23^2) + s12*(-36*s13^3 + 77*s13^2*s23 + 
                     83*s13*s23^2 - 23*s23^3) - s23*(5*s13^3 - 2*s13^2*s23 - 
                     6*s13*s23^2 + s23^3)) - p2q*p3q*(9*s12^3*(3*s13 + 
                     4*s23) + s12^2*(9*s13^2 - 49*s13*s23 - 123*s23^2) + 
                   s23*(3*s13^3 - 3*s13^2*s23 - 5*s13*s23^2 + s23^3) + 
                   s12*(18*s13^3 - 59*s13^2*s23 - 29*s13*s23^2 + 
                     34*s23^3))) + p1q^2*(p3q^3*s12*(2*s13*s23^2*(s13 + 
                     2*s23) - s12^3*(9*s13 + 44*s23) + s12*s23*(17*s13^2 + 
                     5*s13*s23 - 18*s23^2) + s12^2*(-9*s13^2 + 18*s13*s23 + 
                     98*s23^2)) + p2q*p3q^2*(-9*s12^4*(2*s13 + 5*s23) + 
                   5*s12^3*s23*(17*s13 + 30*s23) + s13*s23^2*(3*s13^2 + 
                     2*s13*s23 - s23^2) + s12^2*(18*s13^3 + 23*s13^2*s23 + 
                     11*s13*s23^2 - 87*s23^3) + s12*s23*(19*s13^3 - 
                     4*s13^2*s23 - 3*s13*s23^2 + 6*s23^3)) + p2q^3*
                  (s12^2*s23*(52*s13^2 + 26*s13*s23 - 25*s23^2) + 
                   s12^3*(9*s13^2 - s13*s23 - 8*s23^2) + s13*s23*(-2*s13^3 + 
                     6*s13^2*s23 + 5*s13*s23^2 - 3*s23^3) - s12*(9*s13^4 - 
                     87*s13^3*s23 - 27*s13^2*s23^2 + 63*s13*s23^3 + s23^4)) + 
                 p2q^2*p3q*(-(s12^4*(9*s13 + s23)) + s12^3*(18*s13^2 + 
                     39*s13*s23 + 59*s23^2) + 2*s12^2*(9*s13^3 + 2*s13^2*
                      s23 + 7*s13*s23^2 - 36*s23^3) - 2*s13*s23*(s13^3 - 
                     3*s13^2*s23 - s13*s23^2 + 3*s23^3) + s12*(-9*s13^4 + 
                     79*s13^3*s23 - 15*s13^2*s23^2 - 71*s13*s23^3 + 
                     12*s23^4)))))/((p1q + p2q + p3q)*s12*s13*s23*
              (-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + (p3q*s12 - p1q*s23)^2*
                (p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + s23) - 
                 p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + p2q^3*s13*
                (-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*(s13 + s23)) + 
                 p3q*(s12 + s13)*(-(s13*(s13 + s23)) + s12*(3*s13 + 
                     2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 3*s13 - 
                   s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + 
                 p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 
                     2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + s13*s23 - 
                     s23^2)) + p1q*p3q^2*s12*(-(s12^2*(s13 + 3*s23)) + 
                   2*s13*(s13^2 + s13*s23 + s23^2) + s12*(s13^2 + 2*s13*s23 + 
                     3*s23^2))) + p2q^2*(p1q^2*(3*s13*(s13 - s23) + 
                   s12*(2*s13 - s23))*s23*(s13 + s23) - p3q^2*s12*(s12 + s13)*
                  (s12*(3*s13 + s23) - s13*(3*s13 + 2*s23)) + p1q*p3q*
                  (2*s12^2*(s13^2 + s13*s23 + s23^2) + s13^2*(-s13^2 + 
                     s13*s23 + 2*s23^2) + s12*(s13^3 + 2*s13*s23^2))))) + 
           (p2q*(s12 + s13 + s23)^2*(p1q^6*(p2q + p3q)*s23^4*(
                s23*(s13 + s23) + s12*(18*s13 + 17*s23)) + 18*p2q^2*(p2q + 
                p3q)*s12*(p3q*s12 - p2q*s13)^2*(p2q^2*s13*(s12 + s13 - s23)*
                 (s13 + s23) - p3q^2*s12*(s13^2 + s23^2 + s12*(s13 + s23)) + 
                p2q*p3q*(-(s12^2*s13) + s13^3 + s13^2*s23 + s13*s23^2 + 
                  s23^3 + s12*s23*(3*s13 + s23))) + p1q^5*s23^3*(
                p3q^2*(-(s13^2*s23) + s23^3 - 15*s12^2*(3*s13 + 4*s23) + 
                  s12*(-9*s13^2 + 16*s13*s23 + 21*s23^2)) + p2q^2*
                 (s12^2*(9*s13 + 11*s23) + 2*s23*(-s13^2 + s13*s23 + 
                    2*s23^2) + s12*(-63*s13^2 + 4*s13*s23 + 63*s23^2)) + 
                p2q*p3q*(-(s12^2*(54*s13 + 67*s23)) + s23*(-3*s13^2 + 
                    2*s13*s23 + 5*s23^2) + s12*(-54*s13^2 + 20*s13*s23 + 
                    66*s23^2))) - p1q^4*s23^2*(p3q^3*(s13*s23^2*(s13 + s23) - 
                  6*s12^3*(6*s13 + 13*s23) + s12*s23*(7*s13^2 - 2*s13*s23 - 
                    4*s23^2) + s12^2*(-18*s13^2 + 35*s13*s23 + 78*s23^2)) + 
                p2q^2*p3q*(2*s12^3*(9*s13 + 16*s23) + s12^2*(-72*s13^2 + 
                    20*s13*s23 + 183*s23^2) + s12*(-72*s13^3 + 154*s13^2*
                     s23 + 110*s13*s23^2 - 95*s23^3) + s23*(-2*s13^3 + 
                    13*s13^2*s23 + 9*s13*s23^2 - 6*s23^3)) + 
                p2q^3*(3*s12^2*s13*(3*s13 + 5*s23) + s12^3*(9*s13 + 10*s23) + 
                  s12*(-90*s13^3 + 123*s13^2*s23 + 145*s13*s23^2 - 
                    61*s23^3) - s23*(s13^3 - 8*s13^2*s23 - 6*s13*s23^2 + 
                    3*s23^3)) + p2q*p3q^2*(-(s12^3*(45*s13 + 92*s23)) + 
                  s12*s23*(128*s13^2 + 89*s13*s23 - 20*s23^2) + 
                  s12^2*(9*s13^2 + 166*s13*s23 + 243*s23^2) - 
                  s23*(s13^3 - 6*s13^2*s23 - 4*s13*s23^2 + 3*s23^3))) + 
              p1q*(p3q^6*s12^3*s23*(9*s12^2 + 9*s12*s13 - 7*s12*s23 + 
                  2*s13*s23) + p2q*p3q^5*s12^2*s23*(18*s12^3 - s13*s23*
                   (5*s13 + s23) - s12^2*(27*s13 + 56*s23) - s12*(45*s13^2 + 
                    16*s13*s23 + 10*s23^2)) + p2q^6*s13^2*
                 (-(s13*s23^2*(s13 + s23)) + s12^2*(36*s13^2 - 35*s23^2) + 
                  s12*(36*s13^3 - 72*s13^2*s23 - 54*s13*s23^2 + 53*s23^3)) + 
                p2q^2*p3q^4*s12*(s12^3*(27*s13 - 74*s23)*s23 - 9*s12^4*
                   (2*s13 + 3*s23) + 2*s13*s23^2*(3*s13^2 + s13*s23 - 
                    s23^2) + s12*s23*(63*s13^3 + 70*s13^2*s23 + 49*s13*
                     s23^2 + 16*s23^3) + s12^2*(18*s13^3 + 45*s13^2*s23 + 
                    116*s13*s23^2 + 65*s23^3)) + p2q^4*p3q^2*
                 (-(s13^2*s23^2*(7*s13^2 + 11*s13*s23 + 4*s23^2)) + 
                  s12^4*(72*s13^2 + 144*s13*s23 + 35*s23^2) - s12^3*
                   (54*s13^3 + 189*s13^2*s23 + 44*s13*s23^2 - 49*s23^3) + 
                  s12*s13*(18*s13^4 - 54*s13^3*s23 - 26*s13^2*s23^2 - 
                    5*s13*s23^3 - 42*s23^4) - s12^2*(108*s13^4 - 45*s13^3*
                     s23 + 197*s13^2*s23^2 + 89*s13*s23^3 + 2*s23^4)) - 
                p2q^3*p3q^3*(18*s12^5*(s13 + 2*s23) + s13^2*s23^2*(3*s13^2 + 
                    5*s13*s23 + 2*s23^2) + s12^4*(-72*s13^2 - 207*s13*s23 + 
                    8*s23^2) + s12*s13*s23*(27*s13^3 + 40*s13^2*s23 + 
                    44*s13*s23^2 + 24*s23^3) - s12^3*(54*s13^3 + 9*s13^2*
                     s23 + 108*s13*s23^2 + 88*s23^3) + s12^2*(36*s13^4 - 
                    27*s13^3*s23 + 101*s13^2*s23^2 + 41*s13*s23^3 + 
                    4*s23^4)) - p2q^5*p3q*s13*(s13*s23^2*(5*s13^2 + 
                    7*s13*s23 + 2*s23^2) + 18*s12^3*(5*s13^2 + 6*s13*s23 + 
                    4*s23^2) + s12^2*(36*s13^3 - 81*s13^2*s23 + 110*s13*
                     s23^2 + 70*s23^3) + s12*(-54*s13^4 + 99*s13^3*s23 + 
                    52*s13^2*s23^2 - 58*s13*s23^3 + 38*s23^4))) + 
              p1q^3*s23*(p3q^4*s12*(2*s13*s23^2*(s13 + 2*s23) - 
                  s12^3*(9*s13 + 44*s23) + s12*s23*(17*s13^2 + 5*s13*s23 - 
                    18*s23^2) + s12^2*(-9*s13^2 + 18*s13*s23 + 98*s23^2)) + 
                p2q*p3q^3*(-3*s12^4*(3*s13 + 17*s23) + s13*s23^2*(s13^2 - 
                    2*s13*s23 - 3*s23^2) + s12^3*(27*s13^2 + 199*s13*s23 + 
                    302*s23^2) + s12^2*(36*s13^3 + 82*s13^2*s23 + 32*s13*
                     s23^2 - 111*s23^3) - s12*s23*(-3*s13^3 + 60*s13^2*s23 + 
                    63*s13*s23^2 + 16*s23^3)) + p2q^4*(s12^3*(9*s13^2 + 
                    s13*s23 - 10*s23^2) + s13*s23^2*(6*s13^2 - s13*s23 - 
                    7*s23^2) + s12^2*(-18*s13^3 + 4*s13^2*s23 + 4*s13*s23^2 - 
                    11*s23^3) + s12*(-63*s13^4 + 201*s13^3*s23 + 61*s13^2*
                     s23^2 - 181*s13*s23^3 + 15*s23^4)) + p2q^2*p3q^2*
                 (9*s13^3*s23^2 - 7*s13*s23^4 + 2*s23^5 + 3*s12^4*(9*s13 + 
                    16*s23) + s12^3*(18*s13^2 + 84*s13*s23 + 211*s23^2) + 
                  s12^2*(36*s13^3 + 117*s13^2*s23 + 79*s13*s23^2 - 
                    255*s23^3) + s12*(9*s13^4 + 162*s13^3*s23 - 3*s13^2*
                     s23^2 - 106*s13*s23^3 + 16*s23^4)) + p2q^3*p3q*
                 (s12^4*(27*s13 + 37*s23) + s12^3*(-9*s13^2 + 30*s13*s23 + 
                    33*s23^2) + s12^2*(-18*s13^3 + 74*s13^2*s23 + 218*s13*
                     s23^2 - 101*s23^3) + s23^2*(14*s13^3 + s13^2*s23 - 
                    11*s13*s23^2 + 2*s23^3) + s12*(-54*s13^4 + 234*s13^3*
                     s23 - 6*s13^2*s23^2 - 202*s13*s23^3 + 65*s23^4))) + 
              p1q^2*(p3q^5*s12^2*s23*(9*s12^3 - 51*s12^2*s23 - s13*s23*
                   (s13 + 5*s23) + s12*(-9*s13^2 - 16*s13*s23 + 20*s23^2)) + 
                p2q*p3q^4*s12*s23*(9*s12^4 - 18*s12^3*(3*s13 + 8*s23) + 
                  s13*s23*(3*s13^2 + 3*s13*s23 + 4*s23^2) + s12^2*
                   (-27*s13^2 + 82*s13*s23 + 142*s23^2) + s12*(36*s13^3 + 
                    67*s13^2*s23 + 83*s13*s23^2 + 23*s23^3)) + p2q^5*s13*
                 (s12^3*s23*(9*s13 + 10*s23) + s13*s23^2*(-s13^2 + 
                    4*s13*s23 + 5*s23^2) + 2*s12^2*(9*s13^3 - 18*s13^2*s23 - 
                    11*s13*s23^2 + 14*s23^3) + s12*(18*s13^4 - 135*s13^3*
                     s23 + 75*s13^2*s23^2 + 174*s13*s23^3 - 50*s23^4)) - 
                p2q^2*p3q^3*(27*s12^5*s23 - 2*s12^4*(9*s13^2 + 9*s13*s23 - 
                    32*s23^2) + 2*s13*s23^2*(s13^3 + s13^2*s23 + s13*s23^2 + 
                    s23^3) + s12^2*s23*(-18*s13^3 + 128*s13^2*s23 + 
                    49*s13*s23^2 + 69*s23^3) - 2*s12^3*(9*s13^3 + 32*s13*
                     s23^2 + 124*s23^3) + s12*s23*(27*s13^4 + 42*s13^3*s23 + 
                    103*s13^2*s23^2 + 88*s13*s23^3 + 18*s23^4)) + 
                p2q^3*p3q^2*(-27*s12^5*s23 + s12^4*(18*s13^2 + 90*s13*s23 + 
                    19*s23^2) - s12^3*(18*s13^3 + 90*s13^2*s23 + 55*s13*
                     s23^2 - 130*s23^3) + s13*s23^2*(-5*s13^3 + 2*s13^2*s23 + 
                    5*s13*s23^2 - 2*s23^3) + s12*s23*(-63*s13^4 + 117*s13^3*
                     s23 + 87*s13^2*s23^2 - 49*s13*s23^3 + 16*s23^4) - 
                  s12^2*(36*s13^4 + 150*s13^2*s23^2 - 109*s13*s23^3 + 
                    76*s23^4)) + p2q^4*p3q*(2*s12^4*s23*(9*s13 + 13*s23) - 
                  4*s13^2*s23^2*(s13^2 - 2*s13*s23 - 3*s23^2) - 
                  s12^3*(36*s13^3 + 99*s13^2*s23 + 65*s13*s23^2 - 40*s23^3) - 
                  2*s12^2*(9*s13^4 + 9*s13^3*s23 + 96*s13^2*s23^2 - 
                    38*s13*s23^3 + s23^4) + s12*(18*s13^5 - 171*s13^4*s23 + 
                    111*s13^3*s23^2 + 133*s13^2*s23^3 - 133*s13*s23^4 + 
                    16*s23^5)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
             s13*s23^2*(-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + 
              (p3q*s12 - p1q*s23)^2*(p3q^2*s12*(s12 + s13) + p1q^2*s23*
                 (s13 + s23) - p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 
                    2*s23))) + p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + 
                   s12*(s13 - 2*s23))*(s13 + s23)) + p3q*(s12 + s13)*
                 (-(s13*(s13 + s23)) + s12*(3*s13 + 2*s23))) + 
              p2q*(p3q^3*s12^2*(s12 + s13)*(s12 - 3*s13 - s23) - 
                p1q^3*(s12 + 3*s13 - s23)*s23^2*(s13 + s23) + p1q^2*p3q*s23*
                 (s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + 2*s13*s23 - 
                    3*s23^2) + s13*(2*s13^2 + s13*s23 - s23^2)) + 
                p1q*p3q^2*s12*(-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + 
                    s13*s23 + s23^2) + s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))))*p1 . E0conj + 
         (-1/8*(ep*p2q*(s12 + s13 + s23)^2*(p1q^5*s23^2*(s13^2*s23 + 
                 9*s12*s23*(s13 + s23) + s12^2*(18*s13 + 17*s23)) - 
               (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*(2*s13 + s23)*
                  (9*s12*s13 + 8*s12*s23 - s13*s23) + p3q^2*(2*s12 + s23)*
                  (9*s12^2 + s12*s23 + s13*s23) - p2q*p3q*(2*s13^2*s23 + 
                   9*s12*s23*(s13 + s23) + s12^2*(36*s13 + 25*s23))) + p1q^4*
                s23*(p3q*(s13*(2*s13 - s23)*s23^2 + s12^2*s23*(18*s13 + 
                     5*s23) - 4*s12^3*(9*s13 + 13*s23) + s12*s23*(-2*s13^2 + 
                     16*s13*s23 + 17*s23^2)) + p2q*(2*s12^3*(9*s13 + 8*s23) - 
                   s13*s23*(2*s13^2 - 2*s13*s23 + s23^2) + s12*s23*
                    (-20*s13^2 + 5*s13*s23 + 26*s23^2) + s12^2*(-18*s13^2 + 
                     52*s13*s23 + 66*s23^2))) + p1q*(p3q^4*s12*(-36*s12^4 + 
                   2*s13*s23^3 + s12^2*s23*(5*s13 + 29*s23) + s12^3*
                    (18*s13 + 31*s23) + s12*s23*(s13^2 + 2*s13*s23 + 
                     2*s23^2)) - 2*p2q*p3q^3*(18*s12^5 - s13^2*s23^3 - 
                   s12^4*(63*s13 + 23*s23) + s12*s13*s23*(s13^2 - s13*s23 - 
                     s23^2) + 3*s12^2*s23*(s13^2 + 2*s13*s23 + 3*s23^2) + 
                   s12^3*(27*s13^2 + 24*s13*s23 + 16*s23^2)) + p2q^2*p3q^2*
                  (s13^2*(s13 - 2*s23)^2*s23 + 3*s12^4*(36*s13 + 11*s23) - 
                   3*s12*s13*s23*(s13^2 + 3*s13*s23 + 6*s23^2) - 
                   s12^3*(162*s13^2 + 65*s13*s23 + 25*s23^2) + 2*s12^2*
                    (27*s13^3 + 3*s13^2*s23 + 12*s13*s23^2 + 7*s23^3)) - 
                 2*p2q^3*p3q*(-2*s13^3*(s13 - 2*s23)*s23 + 3*s12^3*s13*
                    (18*s13 + 11*s23) + s12^2*(-45*s13^3 + 4*s13^2*s23 + 
                     17*s13*s23^2 - 8*s23^3) + s12*s13*(9*s13^3 - 4*s13^2*
                      s23 - 6*s13*s23^2 + 10*s23^3)) + p2q^4*s13*
                  (3*s12^2*s13*(12*s13 + 11*s23) + s13*s23*(3*s13^2 - 
                     4*s13*s23 - 2*s23^2) + s12*(-18*s13^3 + 27*s13^2*s23 + 
                     59*s13*s23^2 + 16*s23^3))) + p1q^3*
                (p3q^2*(s13*(s13 - 2*s23)*s23^3 + s12^4*(18*s13 + 53*s23) - 
                   s12^3*s23*(63*s13 + 73*s23) + s12^2*s23*(s13^2 - 
                     14*s13*s23 - 39*s23^2) + s12*s23^2*(-4*s13^2 + 
                     7*s13*s23 + 7*s23^2)) + p2q^2*(s13^2*s23*(s13^2 - 
                     4*s13*s23 + 5*s23^2) + 2*s12^3*(-9*s13^2 + s13*s23 + 
                     8*s23^2) + s12^2*s23*(-105*s13^2 - 48*s13*s23 + 
                     49*s23^2) + s12*s23*(11*s13^3 - 59*s13^2*s23 - 
                     63*s13*s23^2 + 9*s23^3)) + 2*p2q*p3q*(6*s13^2*s23^3 + 
                   s12^4*(9*s13 + s23) - s12^3*(9*s13^2 + 4*s13*s23 + 
                     32*s23^2) + s12^2*s23*(-4*s13^2 + 54*s13*s23 + 
                     33*s23^2) + s12*s23*(s13^3 - 13*s13^2*s23 + 3*s13*
                      s23^2 + 18*s23^3))) + p1q^2*(-(p3q^3*(18*s12^5 + 
                    s12^3*(20*s13 - 9*s23)*s23 + s13*s23^4 - s12^4*(36*s13 + 
                      95*s23) + s12*s23^2*(2*s13^2 - 2*s13*s23 + s23^2) + 
                    s12^2*s23*(-2*s13^2 + 11*s13*s23 + 25*s23^2))) + 
                 p2q*p3q^2*(-18*s12^5 + s12^4*(72*s13 + 34*s23) + s12^2*s23*
                    (-2*s13^2 + 43*s13*s23 - 18*s23^2) + s13*s23^2*(2*s13^2 + 
                     12*s13*s23 + s23^2) + s12*s23^2*(-6*s13^2 + 3*s13*s23 + 
                     10*s23^2) - s12^3*(72*s13^2 + 103*s13*s23 + 
                     120*s23^2)) + p2q^3*(-2*s12^3*s13*(9*s13 + 8*s23) + 
                   2*s12^2*s13*(18*s13^2 - 27*s13*s23 - 41*s23^2) + 
                   s12*s23*(63*s13^3 + 28*s13^2*s23 - 43*s13*s23^2 - 
                     8*s23^3) + s13*s23*(2*s13^3 - 7*s13^2*s23 + 2*s13*
                      s23^2 + s23^3)) + p2q^2*p3q*(4*s12^4*(9*s13 + 4*s23) + 
                   s12^3*(-90*s13^2 + 20*s13*s23 + 14*s23^2) - s13*s23*
                    (2*s13^3 + 15*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
                   s12*s23*(20*s13^3 - 33*s13^2*s23 - 44*s13*s23^2 + 
                     17*s23^3) + s12^2*(36*s13^3 - 55*s13^2*s23 + 68*s13*
                      s23^2 + 87*s23^3)))))/((p1q + p2q + p3q)*s12*s13*s23*
              (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
                (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
                 p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - p1q^3*s23*
                (p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - s23^2) + 
                 p3q*(s12 + s23)*(-(s23*(s13 + s23)) + s12*(2*s13 + 
                     3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 3*s23)*
                   (s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                   3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                   2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 
                     2*s13*s23 + s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 
                     2*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                   s12*(-3*s13^2 + 2*s13*s23 + 2*s23^2))) + p1q^2*
                (p2q^2*s13*(s13 + s23)*(s12*(s13 - 2*s23) + 3*(s13 - s23)*
                    s23) + p3q^2*s12*(s12 + s23)*(s12*(s13 + 3*s23) - 
                   s23*(2*s13 + 3*s23)) - p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - 
                     s23^2) + 2*s12^2*(s13^2 + s13*s23 + s23^2) + 
                   s12*(2*s13^2*s23 + s23^3))))) - 
           (p2q*(s12 + s13 + s23)^2*(9*p1q^8*s12*s23^4*(s12 - s13 + s23)*(
                s13 + s23) + 9*(p2q + p3q)^2*s12*(p3q*s12 - p2q*s13)^2*(
                p2q^4*s13*(s12 + s13 - s23)*(4*s13^2 + 5*s13*s23 + s23^2) - 
                p3q^4*s12*s23*(s13^2 + s23^2 + s12*(s13 + s23)) + 
                p2q*p3q^3*(4*s12^3*(s13 + s23) + s12*s23*(2*s13^2 + 
                    3*s13*s23 + 3*s23^2) + s12^2*(4*s13^2 + s13*s23 + 
                    6*s23^2) + s23*(s13^3 + s13^2*s23 + s13*s23^2 + s23^3)) + 
                p2q^3*p3q*(4*s13^4 + 3*s13^3*s23 + 5*s13^2*s23^2 + 
                  7*s13*s23^3 + s23^4 - s12^2*s13*(8*s13 + 5*s23) + 
                  s12*(-4*s13^3 + 10*s13^2*s23 + 9*s13*s23^2 + s23^3)) + 
                p2q^2*p3q^2*(4*s12^3*s13 - s12^2*(4*s13^2 + 15*s13*s23 + 
                    5*s23^2) - s23*(s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 
                    2*s23^3) - s12*(8*s13^3 + 4*s13^2*s23 + 13*s13*s23^2 + 
                    7*s23^3))) + p1q^7*s23^3*(p2q*(s13*s23^2*(s13 + 2*s23) - 
                  3*s12^2*(15*s13^2 + 12*s13*s23 - 4*s23^2) + 
                  s12*(27*s13^3 - 63*s13^2*s23 - 72*s13*s23^2 + 20*s23^3)) + 
                p3q*(s13*s23^2*(s13 + 2*s23) - 9*s12^3*(2*s13 + 3*s23) + 
                  3*s12^2*(21*s13^2 + 21*s13*s23 - 5*s23^2) + 
                  s12*(9*s13^3 + 27*s13^2*s23 + 36*s13*s23^2 + 20*s23^3))) - 
              p1q^6*s23^2*(-(p3q^2*(-(s13^3*s23^2) + 5*s13*s23^4 + 
                   9*s12^4*(s13 + 3*s23) - 9*s12^3*(11*s13^2 + 17*s13*s23 - 
                     s23^2) + s12^2*(-18*s13^3 + 81*s13^2*s23 + 60*s13*
                      s23^2 - 41*s23^3) + s12*s23*(18*s13^3 + 114*s13^2*s23 + 
                     109*s13*s23^2 + 25*s23^3))) + p2q*p3q*
                 (s12^3*(-36*s13^2 - 81*s13*s23 + 14*s23^2) + 2*s23^2*
                   (2*s13^3 + 3*s13^2*s23 - 2*s13*s23^2 + 2*s23^3) + 
                  s12^2*(90*s13^3 - 126*s13^2*s23 - 263*s13*s23^2 + 
                    54*s23^3) + 3*s12*(6*s13^4 + 15*s13^3*s23 + 17*s13^2*
                     s23^2 + 4*s13*s23^3 - 12*s23^4)) + p2q^2*
                 (s12^3*s23*(36*s13 + 41*s23) + s23^2*(3*s13^3 + 6*s13^2*
                     s23 + s13*s23^2 + 4*s23^3) + s12^2*(-63*s13^3 + 
                    175*s13*s23^2 + 103*s23^3) + s12*(27*s13^4 - 189*s13^3*
                     s23 - 51*s13^2*s23^2 + 211*s13*s23^3 + 34*s23^4))) + 
              p1q^5*s23*(p3q^3*(-9*s12^5*s23 + 9*s12^4*(5*s13^2 + 13*s13*
                     s23 - 3*s23^2) - 2*s13*s23^3*(s13^2 + 2*s13*s23 - 
                    2*s23^2) + 3*s12^3*(3*s13^3 - 81*s13^2*s23 - 112*s13*
                     s23^2 + 13*s23^3) - s12^2*s23*(36*s13^3 + 87*s13^2*s23 + 
                    135*s13*s23^2 + 28*s23^3) + s12*s23^2*(20*s13^3 + 
                    124*s13^2*s23 + 113*s13*s23^2 + 35*s23^3)) + 
                p2q*p3q^2*(s12^4*(-27*s13^2 - 54*s13*s23 + 10*s23^2) - 
                  s12^3*(81*s13^3 + 333*s13^2*s23 + 298*s13*s23^2 - 
                    202*s23^3) + 2*s23^2*(s13^4 - 4*s13^2*s23^2 + 
                    8*s13*s23^3 - 2*s23^4) + s12^2*(-18*s13^4 - 324*s13^3*
                     s23 + 225*s13^2*s23^2 + 573*s13*s23^3 + 13*s23^4) + 
                  s12*s23*(-36*s13^4 - 224*s13^3*s23 + 131*s13^2*s23^2 + 
                    334*s13*s23^3 + 97*s23^4)) + p2q^3*(2*s12^4*s23*
                   (9*s13 + 10*s23) + 2*s12^3*s23*(27*s13^2 + 25*s13*s23 - 
                    9*s23^2) + s12^2*(-27*s13^4 + 36*s13^3*s23 + 352*s13^2*
                     s23^2 + 149*s13*s23^3 - 133*s23^4) + s23^2*(3*s13^4 + 
                    6*s13^3*s23 + 2*s13^2*s23^2 + 10*s13*s23^3 - 4*s23^4) + 
                  s12*(9*s13^5 - 189*s13^4*s23 + 150*s13^3*s23^2 + 449*s13^2*
                     s23^3 + 18*s13*s23^4 - 51*s23^5)) + p2q^2*p3q*
                 (6*s12^4*s23*(15*s13 + 23*s23) + s12^3*(54*s13^3 - 
                    9*s13^2*s23 + 250*s13*s23^2 + 289*s23^3) + s12^2*
                   (27*s13^4 - 243*s13^3*s23 + 25*s13^2*s23^2 + 461*s13*
                     s23^3 - 74*s23^4) + s23^2*(5*s13^4 + 8*s13^3*s23 - 
                    2*s13^2*s23^2 + 22*s13*s23^3 - 8*s23^4) + 
                  s12*(9*s13^5 + 9*s13^4*s23 - 94*s13^3*s23^2 - 48*s13^2*
                     s23^3 - 67*s13*s23^4 - 25*s23^5))) - p1q*(p2q + p3q)^2*(
                p3q^5*s12^2*s23*(18*s12^4 + s13^2*s23^2 + 8*s12^3*(9*s13 + 
                    5*s23) + s12^2*(9*s13^2 + 4*s13*s23 + 3*s23^2) - 
                  s12*(9*s13^3 + 27*s13^2*s23 + 5*s13*s23^2 + 27*s23^3)) + 
                p2q^5*s13^2*(s13^2*s23^3 + 36*s12^3*s13*(s13 + s23) + 
                  s12^2*(-36*s13^3 - 9*s13^2*s23 + 41*s13*s23^2 + 17*s23^3) + 
                  s12*(-72*s13^4 + 99*s13^3*s23 + 86*s13^2*s23^2 - 108*s13*
                     s23^3 - 27*s23^4)) + p2q^2*p3q^3*(-36*s12^6*s13 + 
                  s13^4*s23^3 + 18*s12^5*(14*s13^2 + 27*s13*s23 + 5*s23^2) + 
                  s12^4*(180*s13^3 - 45*s13^2*s23 + 250*s13*s23^2 + 
                    83*s23^3) + s12^3*(-108*s13^4 + 297*s13^3*s23 + 
                    189*s13^2*s23^2 - 15*s13*s23^3 - 67*s23^4) + s12^2*s23*
                   (27*s13^4 + 128*s13^3*s23 + 110*s13^2*s23^2 + 18*s13*
                     s23^3 - 36*s23^4) + s12*s13*s23*(-9*s13^4 + 9*s13^3*
                     s23 + 11*s13^2*s23^2 + 13*s13*s23^3 + 18*s23^4)) + 
                p2q*p3q^4*s12*(-2*s13^3*s23^3 - 18*s12^5*(4*s13 + 5*s23) + 
                  s12^4*(-36*s13^2 + 54*s13*s23 - 86*s23^2) + 3*s12^3*
                   (12*s13^3 - 63*s13^2*s23 - 49*s13*s23^2 + 17*s23^3) + 
                  s12^2*s23*(-27*s13^3 - 70*s13^2*s23 - 46*s13*s23^2 + 
                    41*s23^3) + s12*s23*(18*s13^4 + 18*s13^3*s23 + 27*s13^2*
                     s23^2 + 14*s13*s23^3 + 18*s23^4)) + p2q^3*p3q^2*
                 (3*s13^4*s23^3 + 36*s12^5*s13*(3*s13 + s23) - s12^4*
                   (324*s13^3 + 711*s13^2*s23 + 319*s13*s23^2 + s23^3) - 
                  s12^3*(324*s13^4 + 45*s13^3*s23 + 444*s13^2*s23^2 + 
                    278*s13*s23^3 - 9*s23^4) - s12*s13*s23*(9*s13^4 + 
                    62*s13^3*s23 + 70*s13^2*s23^2 + 59*s13*s23^3 + 
                    36*s23^4) + s12^2*(108*s13^5 - 315*s13^4*s23 - 169*s13^3*
                     s23^2 - 170*s13^2*s23^3 - 86*s13*s23^4 + 18*s23^5)) + 
                p2q^4*p3q*s13*(3*s13^3*s23^3 - 36*s12^4*s13*(3*s13 + 2*s23) + 
                  4*s12^3*(45*s13^3 + 81*s13^2*s23 + 47*s13*s23^2 + 
                    5*s23^3) + s12^2*(252*s13^4 - 81*s13^3*s23 + 194*s13^2*
                     s23^2 + 303*s13*s23^3 + 18*s23^4) + s12*(-36*s13^5 + 
                    135*s13^4*s23 + 87*s13^3*s23^2 + 61*s13^2*s23^3 + 
                    153*s13*s23^4 + 18*s23^5))) - p1q^4*s23*(
                p3q^4*(3*s12^5*(9*s13 - 14*s23) + s13*s23^3*(s13^2 + 
                    4*s13*s23 - s23^2) + s12^4*(-135*s13^2 - 348*s13*s23 + 
                    71*s23^2) - s12*s23^2*(22*s13^3 + 61*s13^2*s23 + 
                    43*s13*s23^2 + 30*s23^3) + s12^3*(-18*s13^3 + 172*s13^2*
                     s23 + 209*s13*s23^2 + 48*s23^3) + s12^2*s23*(37*s13^3 + 
                    194*s13^2*s23 + 252*s13*s23^2 + 65*s23^3)) + 
                p2q*p3q^3*(14*s13*(s13 - s23)*s23^4 + s12^5*(-9*s13 + 
                    26*s23) + s12^4*(-126*s13^2 - 125*s13*s23 + 286*s23^2) + 
                  s12^3*(351*s13^3 + 1211*s13^2*s23 + 1354*s13*s23^2 - 
                    52*s23^3) + s12*s23*(110*s13^4 + 452*s13^3*s23 + 
                    156*s13^2*s23^2 - 175*s13*s23^3 - 103*s23^4) + 
                  s12^2*(108*s13^4 + 824*s13^3*s23 + 860*s13^2*s23^2 + 
                    470*s13*s23^3 + 65*s23^4)) + p2q^4*(2*s12^4*(9*s13^2 + 
                    s13*s23 - 10*s23^2) - s12^3*(18*s13^3 + 9*s13^2*s23 + 
                    28*s13*s23^2 + 23*s23^3) + s13*s23*(s13^4 + 2*s13^3*s23 + 
                    6*s13*s23^3 - 13*s23^4) + s12^2*(-27*s13^4 + 261*s13^3*
                     s23 - 109*s13^2*s23^2 - 377*s13*s23^3 + 26*s23^4) - 
                  s12*(63*s13^5 - 174*s13^4*s23 - 363*s13^3*s23^2 + 
                    133*s13^2*s23^3 + 214*s13*s23^4 + 3*s23^5)) + 
                p2q^2*p3q^2*(s12^5*(90*s13 + 187*s23) + s12^4*(135*s13^2 + 
                    139*s13*s23 + 229*s23^2) + s12^3*(144*s13^3 + 916*s13^2*
                     s23 + 857*s13*s23^2 - 448*s23^3) + s12^2*(-135*s13^4 + 
                    943*s13^3*s23 + 733*s13^2*s23^2 - 249*s13*s23^3 - 
                    27*s23^4) + s23*(s13^5 + 4*s13^4*s23 + s13^3*s23^2 + 
                    28*s13^2*s23^3 - 30*s13*s23^4 + 4*s23^5) - 
                  s12*(18*s13^5 + 146*s13^4*s23 - 793*s13^3*s23^2 - 
                    631*s13^2*s23^3 + 137*s13*s23^4 + 45*s23^5)) + 
                p2q^3*p3q*(2*s12^4*s23*(31*s13 + 6*s23) + s12^5*(54*s13 + 
                    74*s23) + s12^3*(-243*s13^3 + 102*s13^2*s23 + 422*s13*
                     s23^2 - 164*s23^3) + s12^2*(-126*s13^4 + 273*s13^3*s23 + 
                    192*s13^2*s23^2 - 214*s13*s23^3 + 179*s23^4) + 
                  2*s23*(s13^5 + 3*s13^4*s23 + s13^3*s23^2 + 12*s13^2*s23^3 - 
                    15*s13*s23^4 + 2*s23^5) + s12*(-9*s13^5 - 271*s13^4*s23 + 
                    196*s13^3*s23^2 + 128*s13^2*s23^3 - 111*s13*s23^4 + 
                    61*s23^5))) - p1q^3*(-(p3q^5*s23*(-18*s12^6 - 
                   s13^2*s23^4 + s12^5*(-108*s13 + 89*s23) + s12^4*
                    (144*s13^2 + 377*s13*s23 + 62*s23^2) + s12^3*(18*s13^3 + 
                     16*s13^2*s23 + 73*s13*s23^2 - 15*s23^3) + s12*s23^2*
                    (11*s13^3 + 17*s13^2*s23 + 3*s13*s23^2 + 9*s23^3) - 
                   s12^2*s23*(38*s13^3 + 119*s13^2*s23 + 120*s13*s23^2 + 
                     81*s23^3))) + p2q*p3q^4*(-18*s12^6*s23 + s12^5*
                   (36*s13^2 + 54*s13*s23 - 82*s23^2) + s13^2*s23^3*
                   (2*s13^2 + 2*s13*s23 + 13*s23^2) + s12^3*s23*(288*s13^3 + 
                    533*s13^2*s23 + 592*s13*s23^2 + 67*s23^3) + 
                  s12^4*(36*s13^3 - 648*s13^2*s23 - 971*s13*s23^2 + 
                    233*s23^3) + s12*s23^2*(108*s13^4 + 305*s13^3*s23 + 
                    274*s13^2*s23^2 + 112*s13*s23^3 - 31*s23^4) + s12^2*s23*
                   (108*s13^4 + 648*s13^3*s23 + 935*s13^2*s23^2 + 733*s13*
                     s23^3 + 179*s23^4)) + p2q^2*p3q^3*(-90*s12^6*s23 - 
                  2*s13*(s13 - s23)^2*s23^2*(s13^2 + s13*s23 + 6*s23^2) + 
                  s12^5*(72*s13^2 + 216*s13*s23 + 137*s23^2) + s12^4*s23*
                   (-270*s13^2 - 603*s13*s23 + 532*s23^2) + s12^3*
                   (-72*s13^4 + 594*s13^3*s23 + 1109*s13^2*s23^2 + 989*s13*
                     s23^3 - 255*s23^4) + s12^2*s23*(-360*s13^4 + 727*s13^3*
                     s23 + 752*s13^2*s23^2 + 434*s13*s23^3 + 4*s23^4) + 
                  s12*s23*(-90*s13^5 - 332*s13^4*s23 + 327*s13^3*s23^2 + 
                    459*s13^2*s23^3 + 14*s13*s23^4 - 44*s23^5)) - 
                p2q^3*p3q^2*(54*s12^6*s23 - 2*s12^5*(18*s13^2 + 117*s13*s23 + 
                    55*s23^2) + 3*s12^4*(36*s13^3 + 102*s13^2*s23 + 
                    131*s13*s23^2 - 57*s23^3) + 4*s13*s23^2*(s13^4 - 
                    s13^3*s23 + 3*s13^2*s23^2 - 9*s13*s23^3 + 5*s23^4) + 
                  s12^3*(108*s13^4 + 450*s13^3*s23 + 263*s13^2*s23^2 - 
                    494*s13*s23^3 + 313*s23^4) + s12^2*(-36*s13^5 + 
                    864*s13^4*s23 + 93*s13^3*s23^2 + 27*s13^2*s23^3 + 
                    16*s13*s23^4 - 92*s23^5) + s12*s23*(-72*s13^5 + 
                    913*s13^4*s23 + 28*s13^3*s23^2 - 625*s13^2*s23^3 + 
                    76*s13*s23^4 - 28*s23^5)) + p2q^5*(2*s12^4*s13*s23*
                   (9*s13 + 10*s23) + s13^2*s23^3*(2*s13^2 + 2*s13*s23 + 
                    15*s23^2) + 2*s12^3*s13*(18*s13^3 - 27*s13^2*s23 - 
                    13*s13*s23^2 + 29*s23^3) + s12*s23^2*(-195*s13^4 + 
                    211*s13^3*s23 + 343*s13^2*s23^2 - 30*s13*s23^3 - 
                    9*s23^4) + s12^2*(36*s13^5 - 108*s13^4*s23 + 209*s13^3*
                     s23^2 + 264*s13^2*s23^3 - 105*s13*s23^4 - s23^5)) + 
                p2q^4*p3q*(4*s12^5*s23*(9*s13 + 13*s23) - 2*s12^4*(36*s13^3 + 
                    117*s13^2*s23 + 74*s13*s23^2 - 39*s23^3) + 3*s12^3*s23*
                   (-120*s13^3 - 211*s13^2*s23 + 52*s13*s23^2 + 10*s23^3) + 
                  s13*s23^2*(-2*s13^4 + 6*s13^3*s23 + 2*s13^2*s23^2 + 
                    41*s13*s23^3 - 8*s23^4) + s12*s23*(234*s13^5 - 668*s13^4*
                     s23 - 188*s13^3*s23^2 + 332*s13^2*s23^3 - 221*s13*
                     s23^4 + 5*s23^5) + s12^2*(72*s13^5 - 216*s13^4*s23 + 
                    71*s13^3*s23^2 - 275*s13^2*s23^3 - 374*s13*s23^4 + 
                    113*s23^5))) + p1q^2*(p3q^6*s12*s23*(-36*s12^5 + 
                  2*s13^2*s23^3 + s12^4*(-144*s13 + 7*s23) + s12^3*
                   (54*s13^2 + 133*s13*s23 + 85*s23^2) - s12*s23*(19*s13^3 + 
                    31*s13^2*s23 + 9*s13*s23^2 + 27*s23^3) + s12^2*
                   (18*s13^3 + 71*s13^2*s23 + 86*s13*s23^2 + 63*s23^3)) + 
                p2q*p3q^5*(2*s13^3*s23^4 + 36*s12^6*(s13 + s23) - 
                  6*s12^5*(6*s13^2 + 42*s13*s23 - 13*s23^2) + s12^3*s23^2*
                   (424*s13^2 + 412*s13*s23 + 101*s23^2) + s12^4*(-72*s13^3 + 
                    648*s13^2*s23 + 886*s13*s23^2 - 3*s23^3) + s12*s23^2*
                   (-16*s13^4 - 3*s13^3*s23 + s13^2*s23^2 - 13*s13*s23^3 + 
                    9*s23^4) - s12^2*s23*(36*s13^4 + 76*s13^3*s23 + 
                    50*s13^2*s23^2 + 3*s13*s23^3 + 53*s23^4)) + p2q^2*p3q^4*
                 (36*s12^6*(2*s13 + 5*s23) - 6*s12^5*(36*s13^2 + 108*s13*
                     s23 - 5*s23^2) + s12^4*(-108*s13^3 + 612*s13^2*s23 + 
                    738*s13*s23^2 - 367*s23^3) - s13^2*s23^2*(s13^3 + 
                    10*s13^2*s23 + 3*s13*s23^2 + 8*s23^3) + s12*s13*s23*
                   (18*s13^4 - 69*s13^3*s23 - 276*s13^2*s23^2 - 296*s13*
                     s23^3 - 147*s23^4) - s12^2*s23*(18*s13^4 + 969*s13^3*
                     s23 + 988*s13^2*s23^2 + 465*s13*s23^3 + 34*s23^4) + 
                  s12^3*(180*s13^4 - 936*s13^3*s23 - 877*s13^2*s23^2 - 
                    195*s13*s23^3 + 101*s23^4)) + p2q^6*s13*(s13^2*s23^2*
                   (s13^2 + 2*s13*s23 + 7*s23^2) + s12^3*(-72*s13^3 + 
                    71*s13*s23^2) + s12^2*(-36*s13^4 + 18*s13^3*s23 - 
                    25*s13^2*s23^2 - 83*s13*s23^3 + 7*s23^4) + 
                  s12*(36*s13^5 - 162*s13^4*s23 + 157*s13^3*s23^2 + 
                    257*s13^2*s23^3 - 105*s13*s23^4 - 27*s23^5)) + 
                p2q^3*p3q^3*(36*s12^6*(s13 + 3*s23) - 2*s12^5*(162*s13^2 + 
                    450*s13*s23 + 55*s23^2) + s12^4*(180*s13^3 + 612*s13^2*
                     s23 + 284*s13*s23^2 - 313*s23^3) + 2*s13^2*s23^2*
                   (s13^3 - 8*s13^2*s23 - s13*s23^2 - 10*s23^3) + 
                  s12^3*(396*s13^4 - 648*s13^3*s23 - 490*s13^2*s23^2 - 
                    193*s13*s23^3 + 185*s23^4) - s12*s23*(36*s13^5 - 
                    440*s13^4*s23 - 159*s13^3*s23^2 + 233*s13^2*s23^3 + 
                    34*s13*s23^4 + 18*s23^5) - s12^2*(144*s13^5 - 936*s13^4*
                     s23 + 230*s13^3*s23^2 + 273*s13^2*s23^3 + 220*s13*
                     s23^4 + 26*s23^5)) + p2q^4*p3q^2*(-3*s12^5*(48*s13^2 + 
                    120*s13*s23 + 35*s23^2) + s12^4*(396*s13^3 + 846*s13^2*
                     s23 + 333*s13*s23^2 - 142*s23^3) + 4*s13^2*s23^2*
                   (2*s13^3 + 5*s13*s23^2 - 4*s23^3) + s12^3*(180*s13^4 + 
                    126*s13^3*s23 + 795*s13^2*s23^2 + 193*s13*s23^3 + 
                    12*s23^4) + s12^2*(-324*s13^5 + 936*s13^4*s23 + 
                    89*s13^3*s23^2 + 382*s13^2*s23^3 + 311*s13*s23^4 - 
                    63*s23^5) + s12*s13*(36*s13^5 - 504*s13^4*s23 + 
                    496*s13^3*s23^2 + 527*s13^2*s23^3 - 229*s13*s23^4 + 
                    150*s23^5)) + p2q^5*p3q*(2*s12^4*s13*(90*s13^2 + 
                    126*s13*s23 + 89*s23^2) + 2*s13^2*s23^2*(3*s13^3 + 
                    4*s13^2*s23 + 12*s13*s23^2 - 2*s23^3) + s12^3*
                   (-108*s13^4 - 144*s13^3*s23 + 342*s13^2*s23^2 + 189*s13*
                     s23^3 - 2*s23^4) - s12^2*(216*s13^5 - 36*s13^4*s23 + 
                    474*s13^3*s23^2 + 73*s13^2*s23^3 - 283*s13*s23^4 + 
                    9*s23^5) + s12*(72*s13^6 - 612*s13^5*s23 + 196*s13^4*
                     s23^2 + 460*s13^3*s23^3 - 288*s13^2*s23^4 + 59*s13*
                     s23^5 + 9*s23^6)))))/(8*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13*s23^2*(p1q^5*s23^3*(s12 + s23)*(s13 + 
                s23) + (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(
                p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
                p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
              p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                   s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                  s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*(
                p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                   (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + 
                p2q^2*(s13 + s23)*(s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 
                    2*s23)*s23 + s12*(3*s13^2 - s23^2)) + p2q*p3q*
                 (s12^3*(2*s13 + 3*s23) + s12^2*(2*s13^2 + 3*s13*s23 - 
                    s23^2) + s12*(2*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 - 
                    3*s23^3) + s23*(3*s13^3 - s13^2*s23 - 3*s13*s23^2 + 
                    s23^3))) + p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + 
                  s13*(s13 - 4*s23) - 3*s12*s23) + p3q^4*s12^2*(s12 + s23)*
                 (s12^2 - 4*s12*s23 - s13*(s13 + 3*s23)) + p2q*p3q^3*s12*
                 (s12^4 - s12^2*(s13 - s23)^2 - 3*s12^3*(s13 + s23) + 
                  2*s13*s23*(s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + 
                    s13^2*s23 + s13*s23^2 + s23^3)) + p2q^2*p3q^2*
                 (-(s12^4*(3*s13 + s23)) + s12^3*(3*s13^2 + 3*s13*s23 + 
                    s23^2) + s13^2*s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12^2*(3*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + 
                  s12*s13*(-3*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 + 2*s23^3)) + 
                p2q^3*p3q*s13*(s12^3*(3*s13 + 2*s23) + s12^2*(-s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12*(-3*s13^3 + 2*s13^2*s23 + 
                    3*s13*s23^2 + 2*s23^3) + s13*(s13^3 - 3*s13^2*s23 - 
                    s13*s23^2 + 3*s23^3))) + p1q^2*(-(p3q^3*s12*(s12 + s23)*
                  (-(s13*s23*(2*s13 + 3*s23)) + s12^2*(s13 + 4*s23) + 
                   s12*(s13^2 - 6*s23^2))) - p2q^3*s13*(s13 + s23)*
                 (s12^2*(s13 - 2*s23) + 2*s13*(2*s13 - 3*s23)*s23 + 
                  s12*(s13^2 - 3*s23^2)) + p2q*p3q^2*(-(s12^4*(s13 + 
                     3*s23)) + s13*s23^2*(2*s13^2 + s13*s23 - s23^2) + 
                  s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + s12*s23*(2*s13^3 + 
                    2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + s12^2*(2*s13^3 + 
                    2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + p2q^2*p3q*
                 (-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 2*s12^3*(s13^2 + 
                    s13*s23 + s23^2) + s12^2*(s13^3 + 2*s13^2*s23 + 
                    2*s13*s23^2 + s23^3) - s12*(s13^4 - 3*s13^3*s23 - 
                    2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (((s12 + s13 + s23)^2*(-9*p2q*s13 + p1q*s23)*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))*E0 . E0conj)/(8*p1q*s12*s13*s23) + 
       ((ep*p1q*(s12 + s13 + s23)*((p1q + p3q)*(s12 + s13)*s23*
             (-(p3q*s12) + p1q*s23)*(-(p3q*s12) + p1q*(s13 + s23)) + 
            p2q^3*s13*(s13 + s23)*(s13*(9*s13 - 8*s23) + s12*(9*s13 + s23)) - 
            p2q^2*(p1q*(s13 + s23)*(2*s12^2*s23 + s13*(-9*s13^2 + 
                  18*s13*s23 - 8*s23^2) + s12*(-9*s13^2 - 7*s13*s23 + 
                  s23^2)) + p3q*(17*s13^2*s23*(s13 + s23) + s12^2*
                 (18*s13^2 + 11*s13*s23 + s23^2) + s12*s13*(18*s13^2 + 
                  10*s13*s23 + 9*s23^2))) + p2q*(p1q^2*s23*(s13 + s23)*(
                -2*s12^2 + 6*s12*s13 + s13*(-10*s13 + 9*s23)) + 
              p3q^2*s12*(s13*(16*s13 - s23)*s23 + s12^2*(9*s13 + s23) + 
                s12*(9*s13^2 + 8*s13*s23 - s23^2)) + p1q*p3q*(2*s12^3*s23 + 
                s13*s23*(-17*s13^2 - 16*s13*s23 + s23^2) - s12^2*(9*s13^2 + 
                  17*s13*s23 + s23^2) + s12*(-9*s13^3 - 9*s13^2*s23 - 
                  17*s13*s23^2 + s23^3)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) + ((s12 + s13 + s23)*
           (p1q^5*(p2q + p3q)*s23^3*(s13 + s23)*(s12 + s13 + 2*s23) - 
            18*p2q*(p2q + p3q)^2*s13*(p3q*s12 - p2q*s13)^2*(s12 + s23)*
             (-(p3q*s12) + p2q*(s13 + s23)) - p1q^4*s23^2*
             (p2q^2*(s13 + s23)*(2*s12^2 + 10*s13^2 + 29*s13*s23 - 2*s23^2 + 
                2*s12*(15*s13 + s23)) + p3q^2*(s12^2*(s13 + 2*s23) - 
                s23*(s13^2 + 3*s13*s23 + 2*s23^2) + s12*(s13^2 + 3*s13*s23 + 
                  3*s23^2)) + p2q*p3q*(10*s13^3 + 38*s13^2*s23 + 
                24*s13*s23^2 - 4*s23^3 + s12^2*(3*s13 + 4*s23) + 
                s12*(31*s13^2 + 35*s13*s23 + 5*s23^2))) + 
            p1q^3*s23*(p3q^3*s12*s23*(s12^2 - (s13 + 2*s23)^2) + 
              p2q^3*(s13 + s23)*(s12^2*(36*s13 - 2*s23) + s13*(9*s13^2 + 
                  36*s13*s23 - 32*s23^2) + s12*(63*s13^2 + 5*s13*s23 - 
                  3*s23^2)) + p2q^2*p3q*(9*s13^4 + 2*s12^3*s23 + 
                28*s13^3*s23 - 48*s13^2*s23^2 - 65*s13*s23^3 + 2*s23^4 + 
                s12^2*(45*s13^2 + 69*s13*s23 - 3*s23^2) + s12*(54*s13^3 + 
                  37*s13^2*s23 - 5*s13*s23^2 - 8*s23^3)) + p2q*p3q^2*(
                3*s12^3*s23 + s12^2*(45*s13^2 + 71*s13*s23 - s23^2) + 
                s12*(27*s13^3 + 58*s13^2*s23 + 43*s13*s23^2 - 9*s23^3) + 
                s23*(s13^3 - 16*s13^2*s23 - 15*s13*s23^2 + 2*s23^3))) - 
            2*p1q*p2q*s13*(p2q^4*s13*(s13 + s23)*(9*s12*(2*s13 - s23) + 
                2*(9*s13 - 5*s23)*s23) + p3q^4*s12^2*(-9*s12^2 + 
                9*s12*(s13 + 2*s23) + 2*s23*(9*s13 + 13*s23)) + 
              p2q*p3q^3*s12*(-9*s12^3 + 9*s12^2*(5*s13 + 6*s23) - 
                s23*(36*s13^2 + 43*s13*s23 + 17*s23^2) + s12*(-18*s13^2 + 
                  27*s13*s23 + 43*s23^2)) + p2q^2*p3q^2*(9*s12^3*
                 (4*s13 + 5*s23) + s13*s23*(18*s13^2 + 17*s13*s23 - s23^2) + 
                s12^2*(-63*s13^2 - 18*s13*s23 + 8*s23^2) + s12*(9*s13^3 - 
                  72*s13^2*s23 - 86*s13*s23^2 - 34*s23^3)) - 
              p2q^3*p3q*(9*s12^2*(5*s13^2 + 6*s13*s23 + 3*s23^2) + 
                s13*s23*(-27*s13^2 - 7*s13*s23 + 20*s23^2) + 
                s12*(-27*s13^3 + 54*s13^2*s23 + 88*s13*s23^2 + 26*s23^3))) + 
            p1q^2*(p3q^4*s12^2*s23^2*(s12 + s13 + 2*s23) + p2q^4*s13*(s13 + 
                s23)*(36*s12^2*s23 + s23*(-9*s13^2 + 66*s13*s23 - 2*s23^2) + 
                s12*(-18*s13^2 + 81*s13*s23 + 35*s23^2)) + p2q*p3q^3*s12*(
                s12^2*(-18*s13^2 - 63*s13*s23 + 4*s23^2) + s12*s23*
                 (-9*s13^2 - 5*s13*s23 + 5*s23^2) + s23*(18*s13^3 + 
                  50*s13^2*s23 + 49*s13*s23^2 - 2*s23^3)) + p2q^2*p3q^2*(
                -3*s12^3*(6*s13^2 + 21*s13*s23 - s23^2) + s12^2*s13*
                 (36*s13^2 + 81*s13*s23 + 91*s23^2) + 2*s12*s23*(45*s13^3 + 
                  80*s13^2*s23 + 61*s13*s23^2 - 3*s23^3) - 3*s13*s23*
                 (6*s13^3 + 5*s13^2*s23 + 5*s13*s23^2 + 6*s23^3)) + 
              p2q^3*p3q*(-36*s12^3*s13*s23 + s13*s23*(-9*s13^3 + 60*s13^2*
                   s23 + 31*s13*s23^2 - 38*s23^3) + s12^2*(36*s13^3 + 
                  72*s13^2*s23 + 61*s13*s23^2 - 3*s23^3) + s12*(-18*s13^4 + 
                  135*s13^3*s23 + 172*s13^2*s23^2 + 54*s13*s23^3 - 
                  4*s23^4)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
           s23^2*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj*p2 . E0 + 
       ((ep*p1q*(s12 + s13 + s23)*(9*p3q^3*s12^2*s13*(s12 + s13) + 
            9*p2q^3*s13^2*(s12 + s13)*(s13 + s23) + p1q^3*(2*s12 - 7*s13)*
             s23^2*(s13 + s23) + p1q^2*p3q*s23*(7*s13^2*(s13 + s23) - 
              2*s12^2*(s13 + 2*s23) + 7*s12*s13*(2*s13 + 3*s23)) + 
            p1q*p3q^2*s12*(2*s12^2*s23 - s13^2*(9*s13 + 16*s23) - 
              s12*s13*(9*s13 + 23*s23)) + p2q^2*(9*p3q*s13*(s12 + s13)*(
                s13*(s13 + s23) - s12*(2*s13 + s23)) + p1q*(s13 + s23)*(
                s13^2*(9*s13 - 2*s23) - 2*s12^2*s23 + s12*s13*(9*s13 + 
                  5*s23))) + p2q*(9*p3q^2*s12*s13*(s12 + s13)*(s12 - 2*s13 - 
                s23) - p1q^2*s23*(s13 + s23)*(2*s12^2 - 5*s12*s13 + 2*s13^2 - 
                2*s12*s23 + 7*s13*s23) + p1q*p3q*(2*s12^3*s23 + 2*s12*s13*s23*
                 (8*s13 + 7*s23) - s12^2*(9*s13^2 + 16*s13*s23 + 2*s23^2) + 
                s13^2*(9*s13^2 + 16*s13*s23 + 7*s23^2)))))/
          (4*(p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
             2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         ((s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s23^3*(s13 + s23)*
             (2*s12 + 11*s13 + 4*s23) - 18*(p2q + p3q)^2*s13*
             (p3q*s12 - p2q*s13)^2*(p3q*s12 + p2q*(s12 + s23))*
             (-(p3q*s12) + p2q*(s13 + s23)) - p1q^4*s23^2*
             (p2q^2*(s13 + s23)*(2*s12^2 + 49*s12*s13 + 38*s13^2 + 
                29*s13*s23 - 6*s23^2) + p3q^2*(11*s13^3 + 13*s13^2*s23 - 
                2*s23^3 + 2*s12^2*(s13 + 2*s23) + s12*(40*s13^2 + 
                  55*s13*s23 + 8*s23^2)) + p2q*p3q*(31*s13^3 + 44*s13^2*s23 + 
                5*s13*s23^2 - 8*s23^3 + s12^2*(4*s13 + 6*s23) + 
                s12*(71*s13^2 + 86*s13*s23 + 8*s23^2))) + 
            p1q^3*s23*(p2q^3*(s13 + s23)*(27*s13^3 + s12^2*(36*s13 - 2*s23) - 
                2*s13^2*s23 - 62*s13*s23^2 + 2*s23^3 + s12*(81*s13^2 - 
                  33*s13*s23 - 2*s23^2)) + p3q^3*s12*(9*s13^3 + 2*s12^2*s23 - 
                22*s13*s23^2 - 6*s23^3 + s12*(45*s13^2 + 85*s13*s23 + 
                  4*s23^2)) + p2q*p3q^2*(27*s13^4 + 4*s12^3*s23 + 
                32*s13^3*s23 - 19*s13^2*s23^2 - 22*s13*s23^3 + 2*s23^4 + 
                s12^2*(90*s13^2 + 157*s13*s23 + 2*s23^2) + s12*(63*s13^3 + 
                  26*s13^2*s23 - 56*s13*s23^2 - 16*s23^3)) + 
              p2q^2*p3q*(36*s13^4 + 2*s12^3*s23 + 39*s13^3*s23 - 
                65*s13^2*s23^2 - 64*s13*s23^3 + 4*s23^4 + s12^2*(63*s13^2 + 
                  106*s13*s23 - 4*s23^2) + s12*(99*s13^3 + 56*s13^2*s23 - 
                  51*s13*s23^2 - 12*s23^3))) - 2*p1q*(p2q + p3q)*
             (p2q^4*s13^2*(s13 + s23)*(18*s12*(s13 - s23) + (9*s13 - 19*s23)*
                 s23) + p3q^4*s12^3*(-9*s12*s13 + 9*s13^2 + 27*s13*s23 + 
                s23^2) + p2q*p3q^3*s12^2*(-9*s12^2*s13 - 18*s13^3 - 
                18*s13^2*s23 + 6*s13*s23^2 - s23^3 + s12*(45*s13^2 + 
                  54*s13*s23 + s23^2)) + p2q^2*p3q^2*s12*(36*s12^2*s13*
                 (s13 + s23) + s13*(9*s13^3 - 9*s13^2*s23 - 24*s13*s23^2 - 
                  16*s23^3) - s12*(63*s13^3 + 27*s13^2*s23 + 3*s13*s23^2 + 
                  s23^3)) - p2q^3*p3q*s13*(19*s13*s23^2*(s13 + s23) + 
                9*s12^2*(5*s13^2 + 4*s13*s23 + 2*s23^2) + s12*(-27*s13^3 + 
                  36*s13^2*s23 + 60*s13*s23^2 + 16*s23^3))) + 
            p1q^2*(p3q^4*s12^2*(-9*s12*s13*(2*s13 + 7*s23) + 
                s23*(27*s13^2 + 58*s13*s23 + 6*s23^2)) + p2q^4*s13*(s13 + 
                s23)*(36*s12^2*s23 + s23*(27*s13^2 + 74*s13*s23 - 22*s23^2) + 
                s12*(-18*s13^2 + 117*s13*s23 + 16*s23^2)) + p2q*p3q^3*s12*(
                s23^2*(23*s13^2 + 30*s13*s23 - 4*s23^2) - 2*s12^2*
                 (18*s13^2 + 63*s13*s23 - s23^2) + s12*(36*s13^3 + 
                  108*s13^2*s23 + 167*s13*s23^2 + 12*s23^3)) + 
              p2q^2*p3q^2*(s12^3*(-18*s13^2 - 81*s13*s23 + 2*s23^2) + 
                s13*s23*(45*s13^3 + 99*s13^2*s23 + 32*s13*s23^2 - 22*s23^3) + 
                s12^2*(72*s13^3 + 153*s13^2*s23 + 190*s13*s23^2 + 4*s23^3) + 
                s12*(-18*s13^4 + 117*s13^3*s23 + 173*s13^2*s23^2 + 
                  72*s13*s23^3 - 8*s23^4)) + p2q^3*p3q*(-36*s12^3*s13*s23 + 
                2*s13*s23*(27*s13^3 + 82*s13^2*s23 + 33*s13*s23^2 - 
                  22*s23^3) + s12^2*(36*s13^3 + 54*s13^2*s23 + 81*s13*s23^2 - 
                  2*s23^3) + s12*(-36*s13^4 + 162*s13^3*s23 + 211*s13^2*
                   s23^2 + 40*s13*s23^3 - 4*s23^4)))))/(4*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s13*s23^2*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
             2 - 2*p3q*s12*(p2q*s13 + p1q*s23))))*p2 . E0*p2 . E0conj + 
       p1 . E0*((-1/4*(ep*(s12 + s13 + s23)*(p1q^4*s23^3*(s13 + s23) + p1q^3*
                s23*(p2q*(s13 + s23)*(2*s12^2 - 7*s12*s13 + 2*s12*s23 - 
                   9*s13*s23 + 2*s23^2) + p3q*s23*(s23*(s13 + s23) - 
                   s12*(2*s13 + 3*s23))) + (-(p3q*s12) + p2q*s13)*
                (p3q^3*s12^2*s23 + p2q^3*s13*(9*s13^2 + 10*s13*s23 + s23^2) + 
                 p2q*p3q^2*s12*((7*s13 - s23)*s23 + s12*(9*s13 + s23)) - 
                 p2q^2*p3q*(8*s13*s23*(s13 + s23) + s12*(18*s13^2 + 
                     11*s13*s23 + s23^2))) + p1q^2*(p3q^2*s12*s23*
                  (s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) + p2q*p3q*
                  (-2*s12^3*s23 + s12*(7*s13 - 3*s23)*s23^2 + 9*s12^2*s13*
                    (s13 + 2*s23) + s23^2*(-9*s13^2 - 8*s13*s23 + s23^2)) + 
                 p2q^2*(s13 + s23)*(2*s12^2*s23 + s23*(-s13^2 - 11*s13*s23 + 
                     s23^2) + s12*(-9*s13^2 - 9*s13*s23 + 2*s23^2))) - p1q*
                (p3q^3*s12^2*(s12 - s13 - 3*s23)*s23 + p2q^3*s13*(s13 + s23)*
                  (9*s12*s13 - 9*s13^2 + 2*s12*s23 + 2*s23^2) + p2q*p3q^2*s12*
                  (s12^2*(9*s13 + 2*s23) + s23*(-7*s13^2 - 14*s13*s23 + 
                     2*s23^2) - s12*(9*s13^2 + 11*s13*s23 + 2*s23^2)) + 
                 p2q^2*p3q*(s12*s13^2*(18*s13 + 19*s23) - s12^2*(18*s13^2 + 
                     13*s13*s23 + 2*s23^2) + s13*s23*(8*s13^2 + 17*s13*s23 + 
                     9*s23^2)))))/((p1q + p2q + p3q)*s12*s13*s23*
              (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                 p1q*s23))) + ((s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s23^4*(
                s13 + s23) - 18*p2q^2*s13*(-(p3q^4*s12^2*(s12 + s23)^2) + 
                p2q^4*s13^2*(s12 + s23)*(s13 + s23) + p2q*p3q^3*s12*
                 (-s12^3 + 3*s12^2*s13 + s23^2*(2*s13 + s23) + 2*s12*s23*
                   (3*s13 + s23)) + p2q^3*p3q*s13*(2*s13*s23*(s13 + s23) - 
                  s12^2*(3*s13 + 2*s23) + s12*(s13^2 - 2*s13*s23 - 
                    2*s23^2)) + p2q^2*p3q^2*(-(s13*s23^2*(s13 + s23)) + 
                  s12^3*(3*s13 + s23) - 2*s12*s13*s23*(3*s13 + 2*s23) + 
                  s12^2*(-3*s13^2 + s13*s23 + s23^2))) - p1q^4*s23^2*(
                p2q^2*(s13 + s23)*(2*s12^2 + 11*s12*s13 + 4*s12*s23 + 
                  13*s13*s23) - p3q^2*s23*(s23*(s13 + s23) - s12*(2*s13 + 
                    3*s23)) + p2q*p3q*(2*s12^2*(s13 + s23) + s23*(13*s13^2 + 
                    12*s13*s23 - s23^2) + s12*(11*s13^2 + 17*s13*s23 + 
                    7*s23^2))) + p1q^3*s23*(p3q^3*s12*s23*
                 (s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) + 
                p2q^3*(s13 + s23)*(s12^2*(36*s13 - 2*s23) + s12*(45*s13^2 + 
                    43*s13*s23 - 4*s23^2) + s23*(39*s13^2 + 3*s13*s23 - 
                    s23^2)) + p2q*p3q^2*(2*s12^3*s23 - s23^2*(13*s13^2 + 
                    14*s13*s23 + s23^2) + s12^2*(9*s13^2 + 17*s13*s23 + 
                    3*s23^2) - s12*s23*(4*s13^2 + 3*s13*s23 + 12*s23^2)) + 
                p2q^2*p3q*(2*s12^3*s23 + s12^2*(27*s13^2 + 32*s13*s23 - 
                    2*s23^2) + s12*(27*s13^3 + 48*s13^2*s23 + 20*s13*s23^2 - 
                    13*s23^3) + s23*(39*s13^3 + 29*s13^2*s23 - 12*s13*s23^2 - 
                    2*s23^3))) - p1q*(p3q^5*s12^3*s23^2 + 3*p2q*p3q^4*s12^2*
                 s23*(3*s12*s13 + (2*s13 - s23)*s23) + 3*p2q^5*s13^2*
                 (s13 + s23)*(12*s12*s13 + (15*s13 - s23)*s23) + 
                p2q^2*p3q^3*s12*(-18*s12^3*s13 + s12*s23*(45*s13^2 + 
                    50*s13*s23 - 2*s23^2) + s12^2*(18*s13^2 + 9*s13*s23 - 
                    s23^2) + s23^2*(39*s13^2 + 29*s13*s23 + 2*s23^2)) + 
                p2q^3*p3q^2*(36*s12^3*s13*(2*s13 + 3*s23) - 2*s13*s23^2*
                   (23*s13^2 + 31*s13*s23 + 8*s23^2) + s12^2*(-36*s13^3 + 
                    99*s13^2*s23 + 134*s13*s23^2 + s23^3) + s12*s23*
                   (-117*s13^3 - 64*s13^2*s23 + 13*s13*s23^2 + 2*s23^3)) - 
                p2q^4*p3q*s13*(18*s12^2*(5*s13^2 + 8*s13*s23 + 4*s23^2) + 
                  s23*(-63*s13^3 - 14*s13^2*s23 + 83*s13*s23^2 + 34*s23^3) + 
                  s12*(-18*s13^3 + 153*s13^2*s23 + 247*s13*s23^2 + 
                    106*s23^3))) + p1q^2*(p3q^4*s12^2*s23^2*(-s12 + s13 + 
                  3*s23) + p2q*p3q^3*s12*s23*(s12^2*(-9*s13 + 3*s23) + 
                  s23*(7*s13^2 + 16*s13*s23 - 2*s23^2) + s12*(9*s13^2 + 
                    14*s13*s23 + 11*s23^2)) + p2q^4*s13*(s13 + s23)*
                 (36*s12^2*s23 - 9*s12*(2*s13^2 - 5*s13*s23 - 6*s23^2) + 
                  s23*(-27*s13^2 + 42*s13*s23 + 16*s23^2)) + p2q^2*p3q^2*
                 (s12^3*(-18*s13^2 - 45*s13*s23 + 4*s23^2) + s12^2*s23*
                   (-27*s13^2 - 36*s13*s23 + 4*s23^2) + s23^2*(28*s13^3 + 
                    31*s13^2*s23 + s13*s23^2 - 2*s23^3) - 2*s12*s23*
                   (-9*s13^3 + s13^2*s23 - 2*s13*s23^2 + 5*s23^3)) + 
                p2q^3*p3q*(-36*s12^3*s13*s23 + s12*s23*(135*s13^3 + 
                    234*s13^2*s23 + 114*s13*s23^2 - 8*s23^3) + s12^2*
                   (36*s13^3 + 90*s13^2*s23 + 41*s13*s23^2 - 4*s23^3) + 
                  s23*(-27*s13^4 + 61*s13^3*s23 + 125*s13^2*s23^2 + 
                    35*s13*s23^3 - 2*s23^4)))))/(4*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13*s23^2*(p3q^2*s12^2 + (p2q*s13 - 
                p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj + 
         ((ep*p1q*(s12 + s13 + s23)*((p1q + p3q)*(s12 + s13)*s23*(
                -(p3q*s12) + p1q*s23)*(-(p3q*s12) + p1q*(s13 + s23)) + 
              p2q^3*s13*(s13 + s23)*(s13*(9*s13 - 8*s23) + 
                s12*(9*s13 + s23)) - p2q^2*(p1q*(s13 + s23)*(2*s12^2*s23 + 
                  s13*(-9*s13^2 + 18*s13*s23 - 8*s23^2) + s12*(-9*s13^2 - 
                    7*s13*s23 + s23^2)) + p3q*(17*s13^2*s23*(s13 + s23) + 
                  s12^2*(18*s13^2 + 11*s13*s23 + s23^2) + s12*s13*(18*s13^2 + 
                    10*s13*s23 + 9*s23^2))) + p2q*(p1q^2*s23*(s13 + s23)*
                 (-2*s12^2 + 6*s12*s13 + s13*(-10*s13 + 9*s23)) + 
                p3q^2*s12*(s13*(16*s13 - s23)*s23 + s12^2*(9*s13 + s23) + 
                  s12*(9*s13^2 + 8*s13*s23 - s23^2)) + p1q*p3q*(2*s12^3*s23 + 
                  s13*s23*(-17*s13^2 - 16*s13*s23 + s23^2) - s12^2*
                   (9*s13^2 + 17*s13*s23 + s23^2) + s12*(-9*s13^3 - 
                    9*s13^2*s23 - 17*s13*s23^2 + s23^3)))))/
            (4*(p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - 
                p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           ((s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s23^3*(s13 + s23)*(s12 + 
                s13 + 2*s23) - 18*p2q*(p2q + p3q)^2*s13*(p3q*s12 - p2q*s13)^
                2*(s12 + s23)*(-(p3q*s12) + p2q*(s13 + s23)) - 
              p1q^4*s23^2*(p2q^2*(s13 + s23)*(2*s12^2 + 10*s13^2 + 
                  29*s13*s23 - 2*s23^2 + 2*s12*(15*s13 + s23)) + 
                p3q^2*(s12^2*(s13 + 2*s23) - s23*(s13^2 + 3*s13*s23 + 
                    2*s23^2) + s12*(s13^2 + 3*s13*s23 + 3*s23^2)) + 
                p2q*p3q*(10*s13^3 + 38*s13^2*s23 + 24*s13*s23^2 - 4*s23^3 + 
                  s12^2*(3*s13 + 4*s23) + s12*(31*s13^2 + 35*s13*s23 + 
                    5*s23^2))) + p1q^3*s23*(p3q^3*s12*s23*(s12^2 - 
                  (s13 + 2*s23)^2) + p2q^3*(s13 + s23)*(s12^2*(36*s13 - 
                    2*s23) + s13*(9*s13^2 + 36*s13*s23 - 32*s23^2) + 
                  s12*(63*s13^2 + 5*s13*s23 - 3*s23^2)) + p2q^2*p3q*
                 (9*s13^4 + 2*s12^3*s23 + 28*s13^3*s23 - 48*s13^2*s23^2 - 
                  65*s13*s23^3 + 2*s23^4 + s12^2*(45*s13^2 + 69*s13*s23 - 
                    3*s23^2) + s12*(54*s13^3 + 37*s13^2*s23 - 5*s13*s23^2 - 
                    8*s23^3)) + p2q*p3q^2*(3*s12^3*s23 + s12^2*(45*s13^2 + 
                    71*s13*s23 - s23^2) + s12*(27*s13^3 + 58*s13^2*s23 + 
                    43*s13*s23^2 - 9*s23^3) + s23*(s13^3 - 16*s13^2*s23 - 
                    15*s13*s23^2 + 2*s23^3))) - 2*p1q*p2q*s13*(p2q^4*s13*
                 (s13 + s23)*(9*s12*(2*s13 - s23) + 2*(9*s13 - 5*s23)*s23) + 
                p3q^4*s12^2*(-9*s12^2 + 9*s12*(s13 + 2*s23) + 2*s23*
                   (9*s13 + 13*s23)) + p2q*p3q^3*s12*(-9*s12^3 + 9*s12^2*
                   (5*s13 + 6*s23) - s23*(36*s13^2 + 43*s13*s23 + 17*s23^2) + 
                  s12*(-18*s13^2 + 27*s13*s23 + 43*s23^2)) + p2q^2*p3q^2*
                 (9*s12^3*(4*s13 + 5*s23) + s13*s23*(18*s13^2 + 17*s13*s23 - 
                    s23^2) + s12^2*(-63*s13^2 - 18*s13*s23 + 8*s23^2) + 
                  s12*(9*s13^3 - 72*s13^2*s23 - 86*s13*s23^2 - 34*s23^3)) - 
                p2q^3*p3q*(9*s12^2*(5*s13^2 + 6*s13*s23 + 3*s23^2) + 
                  s13*s23*(-27*s13^2 - 7*s13*s23 + 20*s23^2) + 
                  s12*(-27*s13^3 + 54*s13^2*s23 + 88*s13*s23^2 + 
                    26*s23^3))) + p1q^2*(p3q^4*s12^2*s23^2*(s12 + s13 + 
                  2*s23) + p2q^4*s13*(s13 + s23)*(36*s12^2*s23 + 
                  s23*(-9*s13^2 + 66*s13*s23 - 2*s23^2) + s12*(-18*s13^2 + 
                    81*s13*s23 + 35*s23^2)) + p2q*p3q^3*s12*
                 (s12^2*(-18*s13^2 - 63*s13*s23 + 4*s23^2) + s12*s23*
                   (-9*s13^2 - 5*s13*s23 + 5*s23^2) + s23*(18*s13^3 + 
                    50*s13^2*s23 + 49*s13*s23^2 - 2*s23^3)) + p2q^2*p3q^2*
                 (-3*s12^3*(6*s13^2 + 21*s13*s23 - s23^2) + s12^2*s13*
                   (36*s13^2 + 81*s13*s23 + 91*s23^2) + 2*s12*s23*(45*s13^3 + 
                    80*s13^2*s23 + 61*s13*s23^2 - 3*s23^3) - 3*s13*s23*
                   (6*s13^3 + 5*s13^2*s23 + 5*s13*s23^2 + 6*s23^3)) + 
                p2q^3*p3q*(-36*s12^3*s13*s23 + s13*s23*(-9*s13^3 + 60*s13^2*
                     s23 + 31*s13*s23^2 - 38*s23^3) + s12^2*(36*s13^3 + 
                    72*s13^2*s23 + 61*s13*s23^2 - 3*s23^3) + s12*(-18*s13^4 + 
                    135*s13^3*s23 + 172*s13^2*s23^2 + 54*s13*s23^3 - 
                    4*s23^4)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
             s23^2*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(
                p2q*s13 + p1q*s23))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (((ep*p3q*(s12 + s13 + s23)*(p3q^2*s12*(2*s12^3 + 8*s13*s23*(-3*s13 + 
                s23) + s12^2*(13*s13 + s23) - s12*(25*s13^2 - 22*s13*s23 + 
                s23^2)) - p2q^2*s13*(-(s12^2*(2*s13 + 3*s23)) + 
              s12*(-13*s13^2 - 4*s13*s23 + s23^2) + s13*(25*s13^2 + 
                26*s13*s23 + s23^2)) - p2q*p3q*(-24*s13^2*s23*(s13 + s23) + 
              s12^3*(4*s13 + 3*s23) - 2*s12*s13*(25*s13^2 + 2*s13*s23 - 
                3*s23^2) + s12^2*(26*s13^2 + 5*s13*s23 + 3*s23^2)) + 
            p1q^2*(-(s12^3*s23) + s13*s23*(17*s13^2 + 10*s13*s23 - 7*s23^2) + 
              s12^2*(-18*s13^2 - 8*s13*s23 + s23^2) + 2*s12*(9*s13^3 - 
                4*s13^2*s23 - 8*s13*s23^2 + s23^3)) + 
            p1q*(p3q*(s12^4 + s12^3*(10*s13 - 3*s23) + s12^2*(-46*s13^2 + 
                  7*s13*s23 - 3*s23^2) + 8*s13*s23*(2*s13^2 + s13*s23 - 
                  s23^2) + s12*(17*s13^3 - 37*s13^2*s23 - 13*s13*s23^2 + 
                  s23^3)) - p2q*(s12^3*(s13 + 2*s23) + s12^2*(10*s13^2 + 
                  s13*s23 + s23^2) + s13*(17*s13^3 - 15*s13^2*s23 - 
                  33*s13*s23^2 - s23^3) - s12*(46*s13^3 + 25*s13^2*s23 - 
                  4*s13*s23^2 + s23^3)))))/(16*s12*s13*
           (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*
             (s12 + s23) - p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
            p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
             (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) - 
         (p3q*(s12 + s13 + s23)*(9*p1q^5*s13*s23^2*(s12 + s23)*
             (4*s12*(s13 + s23)^2 + s23*(s13 + s23)^2 + s12^2*(4*s13 + 
                3*s23)) + 9*(p2q + p3q)^2*s13*s23*(s12 + s13 + s23)*
             (p3q^3*s12^2*(s12 + s13 - s23)*(s12 + s23) + p2q^3*s13^2*(
                s12^2 + s12*s13 + s23*(s13 + s23)) + p2q*p3q^2*s12*(s12^3 + 
                s12^2*(-s13 + s23) + s23*(-s13^2 + 2*s13*s23 + s23^2) + 
                s12*(-2*s13^2 + 3*s13*s23 + s23^2)) - p2q^2*p3q*s13*(
                2*s12^3 + s12^2*(s13 + s23) + s23^2*(s13 + s23) + 
                s12*(-s13^2 + 4*s13*s23 + 2*s23^2))) - p1q^4*s23*
             (p2q*(9*s12^4*s13*(4*s13 + 3*s23) + s12^3*(36*s13^3 + 
                  63*s13^2*s23 + 38*s13*s23^2 + s23^3) + s12^2*(72*s13^4 + 
                  135*s13^3*s23 + 50*s13^2*s23^2 + 8*s13*s23^3 + s23^4) + 
                2*s23^2*(18*s13^4 + 32*s13^3*s23 + 23*s13^2*s23^2 + 
                  10*s13*s23^3 + s23^4) + s12*s23*(135*s13^4 + 182*s13^3*
                   s23 + 71*s13^2*s23^2 + 18*s13*s23^3 + 2*s23^4)) + 
              p3q*(18*s12^4*s13*(4*s13 + 5*s23) + s12^3*(36*s13^3 + 
                  180*s13^2*s23 + 191*s13*s23^2 + s23^3) + 2*s23^2*
                 (9*s13^4 + 14*s13^3*s23 + 14*s13^2*s23^2 + 10*s13*s23^3 + 
                  s23^4) + s12^2*(36*s13^4 + 36*s13^3*s23 + 104*s13^2*s23^2 + 
                  125*s13*s23^3 + s23^4) + s12*s23*(54*s13^4 + 29*s13^3*s23 + 
                  26*s13^2*s23^2 + 45*s13*s23^3 + 2*s23^4))) + 
            p1q^3*(p3q^2*(9*s12^5*s13*(4*s13 + 11*s23) + s12^3*s13*s23*
                 (99*s13^2 + 34*s13*s23 + 29*s23^2) + s12^4*(36*s13^3 + 
                  72*s13^2*s23 + 155*s13*s23^2 + 2*s23^3) + s12*s23^2*
                 (-70*s13^4 + 53*s13^3*s23 + 33*s13^2*s23^2 - 41*s13*s23^3 + 
                  s23^4) + s12^2*s23*(-54*s13^4 + 133*s13^3*s23 + 
                  68*s13^2*s23^2 - 30*s13*s23^3 + s23^4) - s23^3*(17*s13^4 + 
                  17*s13^3*s23 + 33*s13^2*s23^2 + 35*s13*s23^3 + 2*s23^4)) + 
              p2q*p3q*(27*s12^5*s13*s23 - s12^4*(72*s13^3 + 171*s13^2*s23 + 
                  41*s13*s23^2 - 3*s23^3) + s12^3*(-72*s13^4 - 117*s13^3*
                   s23 - 148*s13^2*s23^2 - 89*s13*s23^3 + s23^4) + 
                s12^2*s23*(-225*s13^4 + 23*s13^3*s23 + 244*s13^2*s23^2 + 
                  48*s13*s23^3 + 4*s23^4) + 2*s23^2*(18*s13^5 + 15*s13^4*
                   s23 + 23*s13^3*s23^2 + 11*s13^2*s23^3 - 17*s13*s23^4 - 
                  2*s23^5) + 2*s12*s23*(27*s13^5 - 79*s13^4*s23 + 
                  32*s13^3*s23^2 + 114*s13^2*s23^3 + 13*s13*s23^4 + s23^5)) + 
              p2q^2*(s12^4*s23*(-27*s13^2 - 16*s13*s23 + s23^2) + 
                s12^3*(36*s13^4 + 72*s13^3*s23 + 43*s13^2*s23^2 - s13*s23^3 + 
                  s23^4) + s23^2*(45*s13^5 + 56*s13^4*s23 + 45*s13^3*s23^2 + 
                  28*s13^2*s23^3 - 8*s13*s23^4 - 2*s23^5) + s12*s23*
                 (126*s13^5 + 47*s13^4*s23 + 2*s13^3*s23^2 + 78*s13^2*s23^3 + 
                  22*s13*s23^4 + s23^5) + s12^2*(36*s13^5 + 45*s13^4*s23 + 
                  61*s13^3*s23^2 + 131*s13^2*s23^3 + 51*s13*s23^4 + 
                  3*s23^5))) - p1q*(p3q^4*s12*(36*s12^5*s13 + 
                s12^4*(36*s13^2 + 81*s13*s23 + 2*s23^2) + s12^3*s23*
                 (108*s13^2 + 106*s13*s23 + 3*s23^2) + 2*s13*s23^2*
                 (9*s13^3 + 5*s13^2*s23 + 4*s13*s23^2 - 8*s23^3) + 
                s12^2*s23*(9*s13^3 + 178*s13^2*s23 + 98*s13*s23^2 + 
                  3*s23^3) + 2*s12*s23*(9*s13^4 + 10*s13^3*s23 + 57*s13^2*
                   s23^2 + 10*s13*s23^3 + s23^4)) + p2q*p3q^3*(
                s12^5*(-144*s13^2 - 81*s13*s23 + 4*s23^2) - s12^4*
                 (144*s13^3 + 297*s13^2*s23 + 71*s13*s23^2 - 5*s23^3) + 
                s12^3*s23*(-261*s13^3 - 162*s13^2*s23 + 70*s13*s23^2 + 
                  5*s23^3) + s13*s23^3*(17*s13^3 + 17*s13^2*s23 + 
                  7*s13*s23^2 + 7*s23^3) + s12^2*s23*(81*s13^4 - 163*s13^3*
                   s23 - 49*s13^2*s23^2 + 19*s13*s23^3 + 2*s23^4) - 
                s12*s23*(18*s13^5 - 104*s13^4*s23 - 11*s13^3*s23^2 + 
                  32*s13^2*s23^3 + 27*s13*s23^4 + 2*s23^5)) + 
              p2q^4*s13*(9*s12^4*s13*s23 + s12^3*s23^2*(11*s13 + s23) + 
                s12^2*(36*s13^4 + 27*s13^3*s23 + 52*s13^2*s23^2 + 
                  24*s13*s23^3 - s23^4) + 2*s13*s23*(9*s13^4 + 10*s13^3*s23 + 
                  15*s13^2*s23^2 + 24*s13*s23^3 + 10*s23^4) + 
                s12*(36*s13^5 + 18*s13^4*s23 + 25*s13^3*s23^2 + 80*s13^2*
                   s23^3 + 47*s13*s23^4 + 2*s23^5)) + p2q^2*p3q^2*(
                s12^5*s23*(-27*s13 + 2*s23) + s12^4*(216*s13^3 + 189*s13^2*
                   s23 + 26*s13*s23^2 + s23^3) + s12^2*s23*(351*s13^4 + 
                  314*s13^3*s23 - 20*s13^2*s23^2 - 23*s13*s23^3 - 2*s23^4) + 
                s12^3*(216*s13^4 + 459*s13^3*s23 + 233*s13^2*s23^2 + 
                  99*s13*s23^3 + s23^4) - 2*s13*s23^2*(17*s13^4 + 
                  4*s13^3*s23 - 5*s13^2*s23^2 + 10*s13*s23^3 + 2*s23^4) - 
                s12*s23*(108*s13^5 - 179*s13^4*s23 - 144*s13^3*s23^2 + 
                  77*s13^2*s23^3 + 58*s13*s23^4 + 4*s23^5)) - 
              p2q^3*p3q*(9*s12^5*s13*s23 + s12^4*s23*(-27*s13^2 + 
                  13*s13*s23 + s23^2) + s12^3*(144*s13^4 + 135*s13^3*s23 + 
                  64*s13^2*s23^2 + 16*s13*s23^3 + s23^4) + s12*s23*
                 (216*s13^5 + 98*s13^4*s23 - 79*s13^3*s23^2 + 26*s13^2*
                   s23^3 + 45*s13*s23^4 + 2*s23^5) + s12^2*(144*s13^5 + 
                  261*s13^4*s23 + 99*s13^3*s23^2 + 121*s13^2*s23^3 + 
                  59*s13*s23^4 + 2*s23^5) + s13*s23*(-18*s13^5 + 14*s13^4*
                   s23 - 5*s13^3*s23^2 - 41*s13^2*s23^3 + 7*s13*s23^4 + 
                  11*s23^5))) + p1q^2*(p3q^3*(-36*s12^6*s13 + 
                s12^5*(9*s13 - s23)*s23 + s13*s23^4*(17*s13^2 + 10*s13*s23 - 
                  7*s23^2) + 3*s12^4*(12*s13^3 + 6*s13^2*s23 + 44*s13*s23^2 + 
                  s23^3) + s12^3*s23*(117*s13^3 + 54*s13^2*s23 + 163*s13*
                   s23^2 + 4*s23^3) + s12*s23^2*(-35*s13^4 + 112*s13^3*s23 + 
                  135*s13^2*s23^2 + 64*s13*s23^3 + 4*s23^4) + s12^2*s23*
                 (-36*s13^4 + 174*s13^3*s23 + 163*s13^2*s23^2 + 150*s13*
                   s23^3 + 4*s23^4)) + p2q*p3q^2*(s12^5*(108*s13^2 + 
                  81*s13*s23 - 2*s23^2) + s12^4*(-36*s13^2*s23 + 
                  22*s13*s23^2 + 4*s23^3) - 3*s12^3*(36*s13^4 + 33*s13^3*
                   s23 + 95*s13^2*s23^2 + 40*s13*s23^3 - s23^4) + 
                s12^2*s23*(-378*s13^4 - 129*s13^3*s23 + 7*s13^2*s23^2 + 
                  34*s13*s23^3 + 5*s23^4) + s23^2*(17*s13^5 - 17*s13^4*s23 + 
                  16*s13^3*s23^2 + 29*s13^2*s23^3 - 23*s13*s23^4 - 2*s23^5) + 
                s12*s23*(36*s13^5 - 307*s13^4*s23 - 63*s13^3*s23^2 + 
                  163*s13^2*s23^3 + 57*s13*s23^4 + 6*s23^5)) - 
              p2q^2*p3q*(s12^5*s23^2 + s12^4*(108*s13^3 + 216*s13^2*s23 + 
                  91*s13*s23^2 - s23^3) + s12^3*s23*(171*s13^3 + 255*s13^2*
                   s23 + 135*s13*s23^2 + 2*s23^3) - s12^2*(108*s13^5 - 
                  180*s13^4*s23 - 267*s13^3*s23^2 + 25*s13^2*s23^3 + 
                  37*s13*s23^4 + 2*s23^5) - s12*s23*(189*s13^5 - 230*s13^4*
                   s23 - 264*s13^3*s23^2 + 88*s13^2*s23^3 + 57*s13*s23^4 + 
                  4*s23^5) + s23*(18*s13^6 - 16*s13^5*s23 + 32*s13^4*s23^2 + 
                  15*s13^3*s23^3 - 50*s13^2*s23^4 + 3*s13*s23^5 + 2*s23^6)) + 
              p2q^3*(-2*s12^4*s13*s23*(9*s13 + 4*s23) + s12^3*(36*s13^4 + 
                  45*s13^3*s23 + 12*s13^2*s23^2 - 5*s13*s23^3 - s23^4) + 
                s12^2*s23*(18*s13^4 - 18*s13^3*s23 + 46*s13^2*s23^2 + 
                  36*s13*s23^3 + s23^4) + s13*s23*(-18*s13^5 + 8*s13^4*s23 + 
                  12*s13^3*s23^2 + 13*s13^2*s23^3 + 40*s13*s23^4 + 
                  13*s23^5) + s12*(-36*s13^6 + 81*s13^5*s23 + 42*s13^4*
                   s23^2 - 44*s13^3*s23^3 + 42*s13^2*s23^4 + 37*s13*s23^5 + 
                  2*s23^6)))))/(16*p1q*(p2q + p3q)*s12*s13*s23^2*
           (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
              p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
              p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*
                 (s13 + s23) + s12*(s13^2 + s23^2))) - 
            p1q^2*(p2q*(s13 + s23)*(s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
              p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + s13*s23 + s23^2))))))*E0 . E0conj + 
       ((ep*p3q*(s12 + s13 + s23)^2*(p1q^5*s23^2*(s12^2*s23 + 
              s13*s23*(17*s13 + 25*s23) + s12*(18*s13^2 + 27*s13*s23 + 
                2*s23^2)) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
             (-(p2q^2*(18*s13^3 + 27*s13^2*s23 - s12*s23^2 + s13*s23^2)) + 
              p3q^2*(-18*s12^2*s13 + 8*s13*s23^2 + s12*s23*(-9*s13 + s23)) + 
              p2q*p3q*(s13*s23*(9*s13 + 25*s23) + s12*(36*s13^2 + 
                  27*s13*s23 + 2*s23^2))) + p1q^4*s23*
             (p3q*(-2*s12^3*s23 + 2*s13*s23^2*(17*s13 + 29*s23) - 
                2*s12^2*(18*s13^2 + 36*s13*s23 + s23^2) + s12*s23*
                 (2*s13^2 - 5*s13*s23 + 5*s23^2)) + p2q*(2*s12^3*s23 + 
                2*s12^2*(9*s13^2 + s13*s23 + 3*s23^2) + s13*s23*(-34*s13^2 - 
                  23*s13*s23 + 51*s23^2) + s12*(-18*s13^3 + 20*s13^2*s23 + 
                  56*s13*s23^2 + 7*s23^3))) + p1q^3*(p3q^2*(s12^4*s23 + 
                s13*s23^3*(17*s13 + 41*s23) + s12^3*(18*s13^2 + 63*s13*s23 - 
                  2*s23^2) + s12*s23^2*(-50*s13^2 - 107*s13*s23 + 4*s23^2) - 
                s12^2*s23*(55*s13^2 + 101*s13*s23 + 9*s23^2)) - 
              2*p2q*p3q*(s12^4*s23 + 2*s13*s23^2*(9*s13^2 + 8*s13*s23 - 
                  25*s23^2) + s12^3*(-9*s13^2 - 4*s13*s23 + 4*s23^2) + 
                s12*s23*(s13^3 - 33*s13^2*s23 - 6*s13*s23^2 - 4*s23^3) + 
                s12^2*(9*s13^3 - 4*s13^2*s23 + 47*s13*s23^2 + 5*s23^3)) + 
              p2q^2*(2*s12^3*s23*(-s13 + s23) + s12^2*(-18*s13^3 + 
                  15*s13^2*s23 - 6*s13*s23^2 + 5*s23^3) + s12*s23*
                 (-83*s13^3 - 60*s13^2*s23 + 19*s13*s23^2 + 6*s23^3) + 
                s13*s23*(17*s13^3 - 47*s13^2*s23 - 119*s13*s23^2 + 
                  25*s23^3))) + p1q*(p3q^4*s12*(-16*s13*s23^3 + 
                s12^3*(-36*s13 + s23) + s12*s23*(17*s13^2 + 59*s13*s23 - 
                  2*s23^2) + s12^2*(18*s13^2 + 45*s13*s23 + 4*s23^2)) - 
              2*p2q*p3q^3*(2*s12^4*(9*s13 - s23) + 8*s13^2*s23^3 - 
                s12^3*(63*s13^2 + 28*s13*s23 + 6*s23^2) + s12*s13*s23*
                 (17*s13^2 + 49*s13*s23 + 42*s23^2) + s12^2*(27*s13^3 + 
                  36*s13^2*s23 + 5*s13*s23^2 + 2*s23^3)) + p2q^4*s13*(
                3*s12^2*s13*s23 + s12*(36*s13^3 + 31*s13^2*s23 + 
                  6*s13*s23^2 - 2*s23^3) + s13*(-18*s13^3 + 19*s13^2*s23 + 
                  79*s13*s23^2 + 2*s23^3)) + p2q^2*p3q^2*(3*s12^4*s23 + 
                s13^2*s23*(17*s13^2 + 39*s13*s23 - 50*s23^2) + 
                s12^3*(108*s13^2 + 23*s13*s23 + 8*s23^2) + s12*s13*
                 (54*s13^3 + 9*s13^2*s23 - 76*s13*s23^2 - 54*s23^3) - 
                s12^2*(162*s13^3 + 96*s13^2*s23 + 47*s13*s23^2 + 4*s23^3)) - 
              2*p2q^3*p3q*(3*s12^3*s13*s23 + s12^2*(54*s13^3 + 29*s13^2*s23 + 
                  7*s13*s23^2 + s23^3) + s12*s13*(-45*s13^3 - 10*s13^2*s23 + 
                  22*s13*s23^2 + 3*s23^3) + s13^2*(9*s13^3 - 9*s13^2*s23 - 
                  41*s13*s23^2 + 25*s23^3))) - 
            p1q^2*(p3q^3*(2*s12^4*(9*s13 - s23) - 8*s13*s23^4 + s12*s23^2*
                 (34*s13^2 + 91*s13*s23 - s23^2) - 3*s12^3*(12*s13^2 + 
                  39*s13*s23 + s23^2) + 2*s12^2*s23*(s13^2 - 11*s13*s23 + 
                  4*s23^2)) + p2q*p3q^2*(2*s12^4*(9*s13 - s23) + 
                s13*s23^2*(2*s13^2 + 25*s13*s23 - 49*s23^2) + 
                s12^3*(-72*s13^2 - 46*s13*s23 + s23^2) + s12*s23*(18*s13^3 + 
                  36*s13^2*s23 + 128*s13*s23^2 - s23^3) + s12^2*(72*s13^3 + 
                  109*s13^2*s23 + 137*s13*s23^2 + 20*s23^3)) + 
              p2q^2*p3q*(-2*s12^4*s23 + s12^3*(-36*s13^2 + 2*s13*s23 - 
                  4*s23^2) + 2*s13*s23*(-10*s13^3 + 13*s13^2*s23 + 
                  82*s13*s23^2 - 13*s23^3) + 2*s12^2*(45*s13^3 + 7*s13^2*
                   s23 + 31*s13*s23^2 + s23^3) + s12*(-36*s13^4 + 
                  71*s13^3*s23 + 53*s13^2*s23^2 + 29*s13*s23^3 - 5*s23^4)) + 
              p2q^3*(2*s12^3*s13*s23 + 2*s12^2*(9*s13^3 + 4*s13*s23^2) + 
                s13*s23*(-63*s13^3 - 67*s13^2*s23 + 77*s13*s23^2 + s23^3) + 
                s12*(-36*s13^4 + 34*s13^3*s23 + 57*s13^2*s23^2 + 
                  12*s13*s23^3 - s23^4)))))/(8*(p1q + p2q + p3q)*s12*s13*s23*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) + 
         (p3q*(s12 + s13 + s23)^2*(-9*p1q^8*s13*s23^4*(s12 + s23)*
             (-s12 + s13 + s23) - 9*(p2q + p3q)^2*s13*(p3q*s12 - p2q*s13)^2*
             (p3q^4*s12*(s12 + s13 - s23)*s23*(s12 + s23) + p2q^4*s13*(
                4*s13 - s23)*(s12^2 + s12*s13 + s23*(s13 + s23)) + 
              p2q*p3q^3*(4*s12^4 + 3*s12^2*(2*s13 - s23)*s23 + 
                s23^3*(s13 + s23) + s12^3*(4*s13 + 3*s23) - s12*s23*
                 (s13^2 - 5*s13*s23 + s23^2)) + p2q^2*p3q^2*(4*s12^4 + 
                s12^3*(-4*s13 + 7*s23) + s23^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                s12*s23*(-7*s13^2 + 15*s13*s23 + 5*s23^2) + s12^2*
                 (-8*s13^2 + 12*s13*s23 + 6*s23^2)) + p2q^3*p3q*(
                s12^3*(-8*s13 + s23) + s12^2*(-4*s13^2 - 6*s13*s23 + s23^2) + 
                s23^2*(-6*s13^2 - 5*s13*s23 + s23^2) + s12*(4*s13^3 - 
                  19*s13^2*s23 - 5*s13*s23^2 + s23^3))) - 
            p1q^7*s23^3*(p3q*(27*s12^3*s13 + 4*s12*s23^2*(-9*s13 + s23) + 
                2*s13*s23^2*(23*s13 + 27*s23) + s12^2*(-45*s13^2 - 
                  63*s13*s23 + 3*s23^2)) + p2q*(9*s12^3*s13 + 3*s12^2*
                 (21*s13^2 + 9*s13*s23 + s23^2) + s13*s23*(-27*s13^2 + 
                  19*s13*s23 + 54*s23^2) + s12*(-18*s13^3 + 99*s13^2*s23 + 
                  72*s13*s23^2 + 4*s23^3))) + p1q^6*s23^2*
             (p3q^2*(27*s12^4*s13 + s13*s23^2*(19*s13^2 - 47*s13*s23 - 
                  98*s23^2) - 9*s12^3*(7*s13^2 + 21*s13*s23 - s23^2) + 
                s12^2*s23*(126*s13^2 + 111*s13*s23 + 4*s23^2) + 
                s12*s23*(18*s13^3 + 147*s13^2*s23 + 231*s13*s23^2 - 
                  11*s23^3)) + p2q*p3q*(18*s12^4*s13 + s12^3*(90*s13^2 + 
                  45*s13*s23 + 14*s23^2) + s12*s23*(27*s13^3 - 219*s13^2*
                   s23 + 12*s13*s23^2 - 10*s23^3) + 4*s23^2*(37*s13^3 + 
                  8*s13^2*s23 - 48*s13*s23^2 + s23^3) + s12^2*(-36*s13^3 - 
                  18*s13^2*s23 + 223*s13*s23^2 + 10*s23^3)) + 
              p2q^2*(s12^3*(18*s13^2 + 18*s13*s23 + 5*s23^2) + 
                s12^2*(99*s13^3 - 99*s13^2*s23 - 32*s13*s23^2 + 6*s23^3) + 
                s12*(-9*s13^4 + 243*s13^3*s23 - 96*s13^2*s23^2 - 165*s13*
                   s23^3 + s23^4) + s23*(-27*s13^4 + 111*s13^3*s23 + 
                  61*s13^2*s23^2 - 121*s13*s23^3 + 4*s23^4))) + 
            p1q^4*s23*(-(p3q^4*(s12^5*(63*s13 - 3*s23) + s12^4*(-99*s13^2 - 
                   480*s13*s23 + 20*s23^2) + s13*s23^3*(-19*s13^2 - 
                   16*s13*s23 + 35*s23^2) + s12^2*s23*(53*s13^3 + 263*s13^2*
                    s23 + 537*s13*s23^2 - 28*s23^3) + s12*s23^2*(58*s13^3 + 
                   17*s13^2*s23 - 294*s13*s23^2 + 3*s23^3) + s12^3*
                  (-18*s13^3 + 125*s13^2*s23 + 303*s13*s23^2 + 12*s23^3))) - 
              p2q*p3q^3*(s12^5*(9*s13 - 8*s23) + s12^4*s23*(-37*s13 + 
                  42*s23) + s12^3*(189*s13^3 + 121*s13^2*s23 + 798*s13*
                   s23^2 + 28*s23^3) + s13*s23^2*(108*s13^3 + 38*s13^2*s23 - 
                  97*s13*s23^2 + 197*s23^3) + s12*s23*(34*s13^4 + 138*s13^3*
                   s23 + 490*s13^2*s23^2 - 751*s13*s23^3 + 24*s23^4) - 
                2*s12^2*(9*s13^4 - 20*s13^3*s23 + 87*s13^2*s23^2 + 
                  8*s13*s23^3 + 29*s23^4)) + p2q^4*(s12^3*s23*(135*s13^2 - 
                  136*s13*s23 - 5*s23^2) + s12^4*(36*s13^2 - 34*s13*s23 - 
                  2*s23^2) + s13*s23*(46*s13^4 - 303*s13^3*s23 + 78*s13^2*
                   s23^2 + 475*s13*s23^3 - 112*s23^4) + s12^2*(-207*s13^4 + 
                  612*s13^3*s23 + 168*s13^2*s23^2 - 223*s13*s23^3 - 
                  4*s23^4) + s12*(45*s13^5 - 672*s13^4*s23 + 929*s13^3*
                   s23^2 + 476*s13^2*s23^3 - 209*s13*s23^4 - 5*s23^5)) + 
              p2q^2*p3q^2*(s12^5*(18*s13 + 7*s23) - s12^4*(225*s13^2 + 
                  446*s13*s23 + 26*s23^2) + s12^3*(90*s13^3 + 655*s13^2*s23 - 
                  301*s13*s23^2 - 11*s23^3) + s12^2*(153*s13^4 + 916*s13^3*
                   s23 + 751*s13^2*s23^2 + 1055*s13*s23^3 + 58*s23^4) + 
                s12*(36*s13^5 + 97*s13^4*s23 + 1249*s13^3*s23^2 - 439*s13^2*
                   s23^3 + 691*s13*s23^4 - 24*s23^5) + s23*(91*s13^5 - 
                  137*s13^4*s23 + 158*s13^3*s23^2 + 555*s13^2*s23^3 - 
                  339*s13*s23^4 + 4*s23^5)) + p2q^3*p3q*(2*s12^5*(18*s13 + 
                  s23) + s12^4*(54*s13^2 + 26*s13*s23 - 6*s23^2) + 
                s12^3*s13*(297*s13^2 + 858*s13*s23 + 328*s23^2) + 
                s12^2*(-216*s13^4 + 1461*s13^3*s23 + 572*s13^2*s23^2 + 
                  594*s13*s23^3 + 24*s23^4) + s12*(9*s13^5 - 613*s13^4*s23 + 
                  2096*s13^3*s23^2 + 312*s13^2*s23^3 + 25*s13*s23^4 - 
                  8*s23^5) + s23*(128*s13^5 - 314*s13^4*s23 + 212*s13^3*
                   s23^2 + 805*s13^2*s23^3 - 325*s13*s23^4 + 4*s23^5))) - 
            p1q^5*s23*(p3q^3*(9*s12^5*s13 - 9*s12^4*(3*s13^2 + 21*s13*s23 - 
                  s23^2) - 12*s12^3*s23*(-18*s13^2 - 38*s13*s23 + s23^2) + 
                s13*s23^3*(-38*s13^2 - 7*s13*s23 + 79*s23^2) + s12^2*s23*
                 (36*s13^3 + 66*s13^2*s23 + 177*s13*s23^2 - 26*s23^3) + 
                s12*s23^2*(2*s13^3 - 193*s13^2*s23 - 408*s13*s23^2 + 
                  10*s23^3)) - p2q^2*p3q*(6*s12^4*(3*s13^2 - 6*s13*s23 - 
                  2*s23^2) + s12^3*(81*s13^3 + 432*s13^2*s23 + 236*s13*
                   s23^2 + 2*s23^3) + s23^2*(-194*s13^4 + 190*s13^3*s23 + 
                  311*s13^2*s23^2 - 345*s13*s23^3 + 8*s23^4) - s12*s23*
                 (36*s13^4 - 652*s13^3*s23 + 349*s13^2*s23^2 + 22*s13*s23^3 + 
                  16*s23^4) + s12^2*(27*s13^4 + 387*s13^3*s23 + 65*s13^2*
                   s23^2 + 543*s13*s23^3 + 16*s23^4)) + p2q*p3q^2*(
                9*s12^5*s13 + s12^4*(27*s13^2 + 9*s13*s23 + 19*s23^2) + 
                s12^3*(54*s13^3 - 81*s13^2*s23 + 224*s13*s23^2 - 14*s23^3) - 
                s12^2*s23*(-153*s13^3 + 45*s13^2*s23 + 472*s13*s23^2 + 
                  38*s23^3) + s23^2*(74*s13^4 - 105*s13^3*s23 - 102*s13^2*
                   s23^2 + 281*s13*s23^3 - 4*s23^4) + s12*s23*(54*s13^4 + 
                  226*s13^3*s23 + 451*s13^2*s23^2 - 457*s13*s23^3 + 
                  26*s23^4)) + p2q^3*(2*s12^4*s23*(18*s13 + s23) + 
                s12^3*s13*(9*s13^2 + 54*s13*s23 + 104*s23^2) + s12*s13*s23*
                 (189*s13^3 - 606*s13^2*s23 + 29*s13*s23^2 + 305*s23^3) + 
                s12^2*(45*s13^4 - 297*s13^3*s23 + 271*s13^2*s23^2 + 
                  214*s13*s23^3 - 4*s23^4) - s23*(9*s13^5 - 129*s13^4*s23 + 
                  159*s13^3*s23^2 + 234*s13^2*s23^3 - 179*s13*s23^4 + 
                  4*s23^5))) + p1q*(p2q + p3q)*(p3q^6*s12^2*s23*(
                s13*(17*s13 - 27*s23)*s23^2 + s12^3*(-81*s13 + 2*s23) + 
                s12*s13*s23*(-29*s13 + 38*s23) - 3*s12^2*(15*s13^2 + 
                  6*s13*s23 - s23^2)) + p2q^6*s13^2*(9*s12^3*s13*
                 (4*s13 - s23) + s13*s23*(-54*s13^3 + 146*s13^2*s23 + 
                  181*s13*s23^2 - 27*s23^3) + s12*s13*(-72*s13^3 + 
                  288*s13^2*s23 + 72*s13*s23^2 - 7*s23^3) + s12^2*
                 (-36*s13^3 + 117*s13^2*s23 - 29*s13*s23^2 + s23^3)) + 
              p2q*p3q^5*s12*(-72*s12^5*s13 + 2*s12*s13*s23^2*(39*s13^2 - 
                  5*s13*s23 - 47*s23^2) + s12^4*(-36*s13^2 + 54*s13*s23 + 
                  2*s23^2) + 2*s13*s23^3*(10*s13^2 + 9*s13*s23 + 9*s23^2) + 
                s12^2*s23*(144*s13^3 + 17*s13^2*s23 + 17*s13*s23^2 - 
                  4*s23^3) + s12^3*(36*s13^3 + 162*s13^2*s23 + 247*s13*
                   s23^2 + 2*s23^3)) + p2q^2*p3q^4*(-108*s12^6*s13 + 
                2*s12^5*(108*s13^2 + 63*s13*s23 - s23^2) + s13^2*s23^3*
                 (-s13^2 + 9*s13*s23 + 18*s23^2) + s12^2*s13*s23*
                 (-135*s13^3 + 458*s13^2*s23 + 229*s13*s23^2 - 22*s23^3) + 
                s12^4*(216*s13^3 - 216*s13^2*s23 + 307*s13*s23^2 - 4*s23^3) + 
                s12*s13*s23^2*(-33*s13^3 + 244*s13^2*s23 + 148*s13*s23^2 + 
                  54*s23^3) + s12^3*(-108*s13^4 + 243*s13^3*s23 - 379*s13^2*
                   s23^2 + 7*s13*s23^3 - 8*s23^4)) + p2q^5*p3q*s13*(
                -18*s12^4*s13*(6*s13 - s23) + s12^3*(216*s13^3 - 252*s13^2*
                   s23 + 20*s13*s23^2 - 2*s23^3) + s12^2*s13*(216*s13^3 - 
                  612*s13^2*s23 - 491*s13*s23^2 + 34*s23^3) + 2*s13*s23*
                 (-18*s13^4 + 102*s13^3*s23 + 10*s13^2*s23^2 - 117*s13*
                   s23^3 + 9*s23^4) + s12*s13*(-108*s13^4 + 666*s13^3*s23 - 
                  757*s13^2*s23^2 - 511*s13*s23^3 + 18*s23^4)) - 
              p2q^3*p3q^3*(36*s12^6*s13 + 2*s12^5*(-180*s13^2 + 9*s13*s23 + 
                  s23^2) + 2*s13^2*s23^2*(8*s13^3 + 46*s13^2*s23 + 
                  27*s13*s23^2 - 27*s23^3) + s12^4*(144*s13^3 + 288*s13^2*
                   s23 + 19*s13*s23^2 + 2*s23^3) + s12^3*(432*s13^4 - 
                  828*s13^3*s23 + 293*s13^2*s23^2 + 103*s13*s23^3 + 
                  4*s23^4) + s12^2*s13*(-108*s13^4 + 684*s13^3*s23 - 
                  1005*s13^2*s23^2 - 408*s13*s23^3 + 14*s23^4) - 
                s12*s13*s23*(18*s13^4 - 571*s13^3*s23 + 219*s13^2*s23^2 + 
                  224*s13*s23^3 + 54*s23^4)) + p2q^4*p3q^2*(9*s12^5*s13*
                 (12*s13 - s23) + s12^4*(-432*s13^3 + 153*s13^2*s23 + 
                  11*s13*s23^2 + s23^3) + s12^3*s13*(-144*s13^3 + 486*s13^2*
                   s23 + 440*s13*s23^2 + 11*s23^3) + 6*s13^2*s23*(3*s13^4 + 
                  19*s13^3*s23 - 18*s13^2*s23^2 - 33*s13*s23^3 + 9*s23^4) + 
                s12^2*s13*(360*s13^4 - 1278*s13^3*s23 + 595*s13^2*s23^2 + 
                  617*s13*s23^3 + 13*s23^4) + s12*s13*(-36*s13^5 + 
                  396*s13^4*s23 - 1079*s13^3*s23^2 - 77*s13^2*s23^3 + 
                  256*s13*s23^4 + 18*s23^5))) + 
            p1q^2*(p3q^6*s12*s23*(s12^4*(-180*s13 + 7*s23) + s13*s23^3*
                 (-7*s13 + 27*s23) + s12*s13*s23*(19*s13^2 + 101*s13*s23 - 
                  111*s23^2) + s12^3*(-18*s13^2 + 147*s13*s23 + 4*s23^2) + 
                s12^2*(18*s13^3 + 87*s13^2*s23 + 199*s13*s23^2 - 9*s23^3)) - 
              p2q^6*s13*(s12^3*s13*(-72*s13^2 + 126*s13*s23 - 19*s23^2) + 
                s13*s23*(18*s13^4 - 291*s13^3*s23 + 55*s13^2*s23^2 + 
                  385*s13*s23^3 - 27*s23^4) + s12*s13*(36*s13^4 - 504*s13^3*
                   s23 + 599*s13^2*s23^2 + 380*s13*s23^3 - 9*s23^4) + 
                s12^2*(-36*s13^4 + 72*s13^3*s23 + 295*s13^2*s23^2 - 
                  31*s13*s23^3 + 2*s23^4)) + p2q*p3q^5*(-36*s12^6*s13 + 
                s13*s23^4*(2*s13^2 + 9*s13*s23 - 9*s23^2) + 18*s12^5*
                 (2*s13^2 + 5*s13*s23 + s23^2) + 2*s12^3*s23*(27*s13^3 + 
                  s13^2*s23 - 79*s13*s23^2 - 13*s23^3) + 2*s12^4*(36*s13^3 + 
                  207*s13^2*s23 + 244*s13*s23^2 + 5*s23^3) + s12*s13*s23^2*
                 (-2*s13^3 + 123*s13^2*s23 - 3*s13*s23^2 + 157*s23^3) + 
                s12^2*s23*(-18*s13^4 + 34*s13^3*s23 + 129*s13^2*s23^2 - 
                  402*s13*s23^3 + 8*s23^4)) - p2q^2*p3q^4*(72*s12^6*s13 - 
                6*s12^5*(36*s13^2 + 99*s13*s23 + 2*s23^2) + 2*s12^4*
                 (-54*s13^3 + 135*s13^2*s23 - 222*s13*s23^2 + s23^3) + 
                s12*s13*s23*(18*s13^4 + 339*s13^3*s23 - 391*s13^2*s23^2 + 
                  157*s13*s23^3 - 282*s23^4) + s12^2*s23*(216*s13^4 - 
                  333*s13^3*s23 - 180*s13^2*s23^2 + 457*s13*s23^3 - 
                  16*s23^4) + s13*s23^2*(17*s13^4 + 108*s13^3*s23 + 
                  96*s13^2*s23^2 - 71*s13*s23^3 + 36*s23^4) + 
                s12^3*(180*s13^4 + 162*s13^3*s23 + 785*s13^2*s23^2 + 
                  909*s13*s23^3 + 42*s23^4)) + p2q^5*p3q*(-4*s12^4*s13*
                 (45*s13^2 - 27*s13*s23 - 5*s23^2) + s12^3*(108*s13^4 + 
                  54*s13^3*s23 + 636*s13^2*s23^2 + 15*s13*s23^3 - 2*s23^4) + 
                s12^2*s13*(216*s13^4 - 1242*s13^3*s23 + 264*s13^2*s23^2 + 
                  876*s13*s23^3 + 7*s23^4) - s13*s23*(54*s13^5 - 438*s13^4*
                   s23 + 357*s13^3*s23^2 + 711*s13^2*s23^3 - 337*s13*s23^4 + 
                  9*s23^5) + s12*s13*(-72*s13^5 + 954*s13^4*s23 - 2434*s13^3*
                   s23^2 - 66*s13^2*s23^3 + 549*s13*s23^4 + 13*s23^5)) - 
              p2q^3*p3q^3*(36*s12^6*s13 + s12^5*(-324*s13^2 - 342*s13*s23 + 
                  2*s23^2) + 2*s12^4*(90*s13^3 + 567*s13^2*s23 + 
                  20*s13*s23^2 + 9*s23^3) + s12^3*(396*s13^4 - 900*s13^3*
                   s23 + 558*s13^2*s23^2 + 785*s13*s23^3 + 44*s23^4) - 
                s12*s13*s23*(198*s13^4 - 1116*s13^3*s23 + 1431*s13^2*s23^2 + 
                  234*s13*s23^3 + 322*s23^4) - s12^2*(144*s13^5 - 684*s13^4*
                   s23 + 2142*s13^3*s23^2 + 975*s13^2*s23^3 - 69*s13*s23^4 + 
                  8*s23^5) + s13*s23*(-18*s13^5 - 110*s13^4*s23 + 175*s13^3*
                   s23^2 + 175*s13^2*s23^3 - 326*s13*s23^4 + 54*s23^5)) + 
              p2q^4*p3q^2*(3*s12^5*(48*s13^2 + 6*s13*s23 - s23^2) - 
                s12^4*(396*s13^3 + 324*s13^2*s23 + 123*s13*s23^2 + 
                  10*s23^3) + s12^3*(-180*s13^4 + 1278*s13^3*s23 + 
                  759*s13^2*s23^2 - 254*s13*s23^3 - 21*s23^4) + s12^2*s13*
                 (324*s13^4 - 1656*s13^3*s23 + 2383*s13^2*s23^2 + 
                  1560*s13*s23^3 + 34*s23^4) - s13*s23*(18*s13^5 - 
                  274*s13^4*s23 + 405*s13^3*s23^2 + 475*s13^2*s23^3 - 
                  538*s13*s23^4 + 36*s23^5) + s12*s13*(-36*s13^5 + 
                  666*s13^4*s23 - 2614*s13^3*s23^2 + 1369*s13^2*s23^3 + 
                  791*s13*s23^4 + 147*s23^5))) + 
            p1q^3*(p3q^5*s23*(s12^5*(-162*s13 + 8*s23) - s13*s23^4*
                 (s13 + 9*s23) + s12^4*(90*s13^2 + 483*s13*s23 - 10*s23^2) + 
                s12*s13*s23^2*(-38*s13^2 - 79*s13*s23 + 108*s23^2) + 
                s12^3*(36*s13^3 + 135*s13^2*s23 + 161*s13*s23^2 - 24*s23^3) + 
                s12^2*s23*(2*s13^3 - 32*s13^2*s23 - 387*s13*s23^2 + 
                  9*s23^3)) + p2q*p3q^4*(s12^5*(36*s13^2 + 72*s13*s23 + 
                  22*s23^2) + 2*s12^4*(18*s13^3 + 135*s13^2*s23 + 
                  175*s13*s23^2 - 9*s23^3) + s12^2*s23^2*(51*s13^3 + 
                  269*s13^2*s23 - 496*s13*s23^2 + 41*s23^3) - s12^3*s23*
                 (198*s13^3 + 161*s13^2*s23 + 706*s13*s23^2 + 50*s23^3) - 
                s13*s23^3*(34*s13^3 + 20*s13^2*s23 - 55*s13*s23^2 + 
                  63*s23^3) + s12*s23^2*(18*s13^4 + 200*s13^3*s23 - 
                  180*s13^2*s23^2 + 517*s13*s23^3 - 4*s23^4)) + 
              p2q^2*p3q^3*(18*s12^5*(4*s13^2 + 17*s13*s23 + s23^2) - 
                s12^4*s23*(594*s13^2 + 523*s13*s23 + 18*s23^2) + 
                s13*s23^2*(52*s13^4 - 129*s13^3*s23 - 69*s13^2*s23^2 + 
                  340*s13*s23^3 - 156*s23^4) + s12*s23^2*(-275*s13^4 + 
                  902*s13^3*s23 - 534*s13^2*s23^2 + 740*s13*s23^3 - 
                  8*s23^4) - s12^3*(72*s13^4 + 342*s13^3*s23 + 477*s13^2*
                   s23^2 + 1484*s13*s23^3 + 44*s23^4) + s12^2*s23*
                 (-18*s13^4 + 493*s13^3*s23 + 435*s13^2*s23^2 + 79*s13*
                   s23^3 + 60*s23^4)) + p2q^5*(2*s12^4*s13*s23*(18*s13 + 
                  s23) + s12^3*s13*(36*s13^3 - 108*s13^2*s23 + 226*s13*
                   s23^2 - 5*s23^3) + s13*s23^2*(155*s13^4 - 428*s13^3*s23 - 
                  355*s13^2*s23^2 + 339*s13*s23^3 - 9*s23^4) + s12*s13*s23*
                 (270*s13^4 - 1163*s13^3*s23 + 175*s13^2*s23^2 + 508*s13*
                   s23^3 + 3*s23^4) + s12^2*(36*s13^5 - 342*s13^4*s23 + 
                  148*s13^3*s23^2 + 433*s13^2*s23^3 - 7*s13*s23^4 + s23^5)) - 
              p2q^4*p3q*(2*s12^5*s23*(18*s13 + s23) + 4*s12^4*(18*s13^3 + 
                  36*s13^2*s23 + 55*s13*s23^2 + 3*s23^3) + s12^3*s23*
                 (-126*s13^3 - 234*s13^2*s23 + 369*s13*s23^2 + 20*s23^3) + 
                s12^2*(-72*s13^5 + 1170*s13^4*s23 - 945*s13^3*s23^2 - 
                  229*s13^2*s23^3 + 226*s13*s23^4 + s23^5) + s12*s23*
                 (-216*s13^5 + 2529*s13^4*s23 - 1308*s13^3*s23^2 - 
                  481*s13^2*s23^3 + 122*s13*s23^4 + 4*s23^5) + s13*s23*
                 (36*s13^5 - 200*s13^4*s23 + 679*s13^3*s23^2 + 385*s13^2*
                   s23^3 - 827*s13*s23^4 + 143*s23^5)) + p2q^3*p3q^2*(
                2*s12^5*(18*s13^2 + 54*s13*s23 + s23^2) - 2*s12^4*
                 (54*s13^3 + 333*s13^2*s23 + 180*s13*s23^2 + 11*s23^3) + 
                s12^3*(-108*s13^4 + 558*s13^3*s23 + 583*s13^2*s23^2 - 
                  369*s13*s23^3 - 38*s23^4) + s12*s23*(18*s13^5 - 1407*s13^4*
                   s23 + 2265*s13^3*s23^2 + 188*s13^2*s23^3 + 530*s13*s23^4 - 
                  8*s23^5) + s12^2*(36*s13^5 - 558*s13^4*s23 + 1997*s13^3*
                   s23^2 + 1082*s13^2*s23^3 + 689*s13*s23^4 + 26*s23^5) - 
                s13*s23*(36*s13^5 - 97*s13^4*s23 + 418*s13^3*s23^2 + 
                  151*s13^2*s23^3 - 808*s13*s23^4 + 200*s23^5)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
           (p1q^5*s23^3*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*
        p1 . E0conj*p2 . E0 + ((ep*p1q*p3q*(s12 + s13 + s23)^3*
           ((p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-8*p3q*s13*s23 + 
              p3q*s12*(-9*s13 + s23) + p2q*(9*s13^2 + s12*s23 + s13*s23)) + 
            p1q^3*s23*(-(p3q*(s13 + s23)*(9*s12*s13 - s12*s23 + 8*s13*s23)) + 
              p2q*(s12^2*s23 + s13*s23*(9*s13 + s23) + s12*(9*s13^2 + 
                  s13*s23 + s23^2))) + p1q*(-(p2q^3*s13*(9*s12*s13^2 - 
                 9*s13^3 + s12^2*s23 + 17*s13^2*s23 + 2*s12*s23^2 + 
                 2*s13*s23^2)) + p3q^3*s12*(s12^2*(-9*s13 + s23) + 
                8*s13*s23*(s13 + 2*s23) + s12*(9*s13^2 + 9*s13*s23 - 
                  2*s23^2)) - p2q*p3q^2*(s12^3*(9*s13 - 2*s23) + 
                8*s13^3*s23 + s12*s13*(18*s13^2 - 7*s13*s23 - 7*s23^2) + 
                s12^2*(-27*s13^2 + s13*s23 + 2*s23^2)) + p2q^2*p3q*(
                2*s12^2*s13*(9*s13 - s23) + s12^3*s23 + s12*s13*(-27*s13^2 + 
                  17*s13*s23 - 2*s23^2) + s13^2*(9*s13^2 - 16*s13*s23 + 
                  7*s23^2))) + p1q^2*(p3q^2*(-8*s13*s23^2*(s13 + s23) + 
                s12^2*(9*s13^2 + 17*s13*s23 - 2*s23^2) + s12*s23*(-s13^2 + 
                  8*s13*s23 + s23^2)) + p2q*p3q*(-(s12^3*s23) - 
                s13^2*(s13 - 15*s23)*s23 + s12^2*(9*s13^2 + 4*s13*s23 - 
                  3*s23^2) + s12*s13*(-9*s13^2 + 13*s13*s23 + 3*s23^2)) + 
              p2q^2*(s12^2*s23*(-s13 + s23) + s13*s23*(-18*s13^2 + 
                  7*s13*s23 + s23^2) + s12*(-9*s13^3 + 8*s13^2*s23 - 
                  s13*s23^2 + s23^3)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
           (p1q^4*s23^2*(s12 + s23)*(s13 + s23) - (p3q*s12 - p2q*s13)^2*
             (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
              p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^3*s23*(p2q*(s13 + s23)*(2*s12*s13 - s12*s23 + 3*s13*s23 - 
                s23^2) + p3q*(s12 + s23)*(-(s23*(s13 + s23)) + 
                s12*(2*s13 + 3*s23))) + p1q*(-(p3q^3*s12^2*(s12 - s13 - 
                 3*s23)*(s12 + s23)) + p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 
                3*s23) + p2q*p3q^2*s12*(s12^2*(3*s13 + s23) - 
                2*s23*(s13^2 + s13*s23 + s23^2) - s12*(3*s13^2 + 2*s13*s23 + 
                  s23^2)) - p2q^2*p3q*s13*(s12^2*(3*s13 + 2*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(-3*s13^2 + 
                  2*s13*s23 + 2*s23^2))) + p1q^2*(p2q^2*s13*(s13 + s23)*(
                s12*(s13 - 2*s23) + 3*(s13 - s23)*s23) + p3q^2*s12*(s12 + 
                s23)*(s12*(s13 + 3*s23) - s23*(2*s13 + 3*s23)) - 
              p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - s23^2) + 2*s12^2*
                 (s13^2 + s13*s23 + s23^2) + s12*(2*s13^2*s23 + s23^3))))) - 
         (p3q*(s12 + s13 + s23)^2*(2*p1q^7*s23^4*(p3q*s23*(s12^2 + s12*s23 + 
                s13*(s13 + s23)) + p2q*(-8*s13*s23*(s13 + s23) + 
                s12^2*(9*s13 + s23) + s12*(-9*s13^2 + s23^2))) + 
            18*(p2q + p3q)^3*s13*(-(p3q*s12) + p2q*s13)^3*
             (-(p3q^2*s12*(s12 + s13 - s23)*(s12 + s23)) + p2q^2*s13*(s12^2 + 
                s12*s13 + s23*(s13 + s23)) - p2q*p3q*(s12^3 + s12^2*s23 + 
                s23^2*(s13 + s23) + s12*(-s13^2 + 3*s13*s23 + s23^2))) - 
            p1q^6*s23^3*(p3q^2*(6*s12^3*s23 + s12^2*(-9*s13^2 - 6*s13*s23 + 
                  s23^2) + s12*(27*s13^3 + 53*s13^2*s23 + 33*s13*s23^2 - 
                  3*s23^3) + 2*s23*(15*s13^3 + 28*s13^2*s23 + 14*s13*s23^2 + 
                  s23^3)) + p2q^2*(3*s12^3*(12*s13 + s23) + s12^2*
                 (27*s13^2 + 8*s13*s23 + 2*s23^2) + s12*(-45*s13^3 + 
                  39*s13^2*s23 + 15*s13*s23^2 + s23^3) + s23*(-57*s13^3 - 
                  26*s13^2*s23 + 33*s13*s23^2 + 2*s23^3)) + 
              p2q*p3q*(9*s12^3*(6*s13 + s23) - 2*s12*s23*(17*s13^2 + 
                  39*s13*s23 + s23^2) + s12^2*(-90*s13^2 - 88*s13*s23 + 
                  3*s23^2) + s23*(9*s13^3 + 48*s13^2*s23 + 43*s13*s23^2 + 
                  4*s23^3))) - 2*p1q*(p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*
             (p3q^4*s12^2*(18*s12^3*s13 + s12^2*(9*s13^2 - 36*s13*s23 - 
                  s23^2) + s13*s23*(-9*s13^2 - 8*s13*s23 + 35*s23^2) - 
                s12*(9*s13^3 + 18*s13*s23^2 + s23^3)) + p2q^4*s13^2*(
                9*s12^3*s13 - s12^2*(9*s13^2 - 18*s13*s23 + s23^2) + 
                s13*s23*(-9*s13^2 + 28*s13*s23 + 37*s23^2) + 
                s12*(-18*s13^3 + 54*s13^2*s23 + 27*s13*s23^2 + s23^3)) + 
              p2q*p3q^3*s12*(27*s12^4*s13 + s12^2*s13*(-45*s13^2 + 
                  27*s13*s23 - 49*s23^2) - s12^3*(36*s13^2 + 63*s13*s23 + 
                  s23^2) + s13*s23*(9*s13^3 - 46*s13^2*s23 - 43*s13*s23^2 - 
                  26*s23^3) + s12*(18*s13^4 - 81*s13^3*s23 - 67*s13^2*s23^2 + 
                  11*s13*s23^3 + s23^4)) - p2q^3*p3q*s13*(18*s12^4*s13 - 
                s12^3*(45*s13^2 + s23^2) + s12^2*(-36*s13^3 + 54*s13^2*s23 + 
                  68*s13*s23^2 + 2*s23^3) + 2*s13*s23*(9*s13^3 - 5*s13^2*
                   s23 + 14*s23^3) + s12*(27*s13^4 - 108*s13^3*s23 + 
                  68*s13^2*s23^2 + 56*s13*s23^3 + s23^4)) + p2q^2*p3q^2*(
                9*s12^5*s13 - 9*s12^4*s13*(7*s13 + 2*s23) + 2*s13^2*s23^2*
                 (9*s13^2 + 4*s13*s23 - 5*s23^2) + s12^3*s23*(63*s13^2 + 
                  6*s13*s23 + s23^2) + s12^2*(63*s13^4 - 90*s13^3*s23 - 
                  18*s13^2*s23^2 + 19*s13*s23^3 + s23^4) - s12*s13*
                 (9*s13^4 - 99*s13^3*s23 + 33*s13^2*s23^2 + 10*s13*s23^3 + 
                  9*s23^4))) + p1q^5*s23^2*(p2q^3*(s12^4*(18*s13 + s23) + 
                s12^3*(81*s13^2 + 8*s13*s23 - s23^2) - s12^2*(9*s13^3 - 
                  128*s13^2*s23 - 60*s13*s23^2 + s23^3) + s23*(-75*s13^4 + 
                  27*s13^3*s23 + 113*s13^2*s23^2 + 9*s13*s23^3 - 2*s23^4) + 
                s12*(-36*s13^4 + 69*s13^3*s23 + 67*s13^2*s23^2 + 
                  61*s13*s23^3 - s23^4)) + p3q^3*(6*s12^4*s23 - 
                3*s12^3*(12*s13^2 + 13*s13*s23 + 3*s23^2) + s12^2*
                 (45*s13^3 + 146*s13^2*s23 + 103*s13*s23^2 - 4*s23^3) - 
                2*s23*(-5*s13^4 + 14*s13^3*s23 + 41*s13^2*s23^2 + 
                  23*s13*s23^3 + s23^4) + s12*(9*s13^4 + 26*s13^3*s23 + 
                  96*s13^2*s23^2 + 70*s13*s23^3 + 9*s23^4)) + 
              p2q^2*p3q*(s12^4*(72*s13 + 7*s23) - 4*s12^3*(9*s13^2 + 
                  35*s13*s23 + s23^2) + s12^2*(-81*s13^3 + 134*s13^2*s23 + 
                  107*s13*s23^2 + 4*s23^3) + s23*(39*s13^4 + 177*s13^3*s23 + 
                  127*s13^2*s23^2 - 17*s13*s23^3 - 6*s23^4) + 
                s12*(27*s13^4 + 11*s13^3*s23 + 96*s13^2*s23^2 + 237*s13*
                   s23^3 + 9*s23^4)) + p2q*p3q^2*(6*s12^4*(9*s13 + 2*s23) - 
                s12^3*(153*s13^2 + 313*s13*s23 + 12*s23^2) + 
                s12^2*(-27*s13^3 + 170*s13^2*s23 + 24*s13*s23^2 + s23^3) + 
                2*s23*(53*s13^4 + 79*s13^3*s23 + 2*s13^2*s23^2 - 
                  27*s13*s23^3 - 3*s23^4) + s12*(72*s13^4 + 94*s13^3*s23 + 
                  287*s13^2*s23^2 + 264*s13*s23^3 + 19*s23^4))) - 
            p1q^4*s23*(p3q^4*(2*s12^5*s23 + 2*s12^3*s23*(79*s13^2 + 
                  89*s13*s23 + 3*s23^2) - s12^4*(45*s13^2 + 78*s13*s23 + 
                  13*s23^2) - 2*s13*s23^2*(5*s13^3 + s13^2*s23 - 
                  12*s13*s23^2 - 8*s23^3) + s12*s23*(s13^4 - 43*s13^3*s23 - 
                  219*s13^2*s23^2 - 169*s13*s23^3 - 8*s23^4) + 
                s12^2*(9*s13^4 - 31*s13^3*s23 - 34*s13^2*s23^2 + 
                  37*s13*s23^3 + 13*s23^4)) + p2q^4*(s12^4*(18*s13^2 - 
                  17*s13*s23 - s23^2) + s12^3*(27*s13^3 - 22*s13^2*s23 - 
                  43*s13*s23^2 - 2*s23^3) + s13*s23*(-43*s13^4 + 77*s13^3*
                   s23 + 159*s13^2*s23^2 + 13*s13*s23^3 - 26*s23^4) - 
                s12^2*(36*s13^4 - 221*s13^3*s23 + 16*s13^2*s23^2 + 
                  84*s13*s23^3 + 3*s23^4) + s12*(-9*s13^5 + 3*s13^4*s23 + 
                  187*s13^3*s23^2 + 109*s13^2*s23^3 - 70*s13*s23^4 - 
                  2*s23^5)) + p2q^3*p3q*(s12^5*(18*s13 + s23) + 
                s12^4*(9*s13^2 - 40*s13*s23 - 3*s23^2) + s12^3*(81*s13^3 + 
                  283*s13^2*s23 + 284*s13*s23^2 + 8*s23^3) + 
                s12^2*(-27*s13^4 + 517*s13^3*s23 + 301*s13^2*s23^2 + 
                  187*s13*s23^3 + 2*s23^4) + s12*(27*s13^5 - 18*s13^4*s23 + 
                  577*s13^3*s23^2 + 434*s13^2*s23^3 - 116*s13*s23^4 - 
                  8*s23^5) + s23*(59*s13^5 + 173*s13^4*s23 + 101*s13^3*
                   s23^2 - 59*s13^2*s23^3 - 44*s13*s23^4 + 2*s23^5)) + 
              p2q*p3q^3*(s12^5*(18*s13 + 5*s23) - s12^4*(135*s13^2 + 
                  414*s13*s23 + 25*s23^2) + s12^3*(-27*s13^3 + 391*s13^2*
                   s23 + 487*s13*s23^2 + 20*s23^3) + s12^2*(9*s13^4 + 
                  157*s13^3*s23 + 202*s13^2*s23^2 + 443*s13*s23^3 + 
                  22*s23^4) + s12*(27*s13^5 + 14*s13^4*s23 + 248*s13^3*
                   s23^2 - 164*s13^2*s23^3 - 305*s13*s23^4 - 26*s23^5) + 
                s23*(37*s13^5 - 48*s13^4*s23 - 127*s13^3*s23^2 + 2*s13^2*
                   s23^3 + 46*s13*s23^4 + 2*s23^5)) + p2q^2*p3q^2*(
                4*s12^5*(9*s13 + s23) - s12^4*(99*s13^2 + 359*s13*s23 + 
                  14*s23^2) + s12^3*(27*s13^3 + 538*s13^2*s23 + 510*s13*
                   s23^2 + 24*s23^3) + s12^2*(9*s13^4 + 484*s13^3*s23 + 
                  337*s13^2*s23^2 + 443*s13*s23^3 + 14*s23^4) + 
                s12*(63*s13^5 - 8*s13^4*s23 + 627*s13^3*s23^2 + 182*s13^2*
                   s23^3 - 308*s13*s23^4 - 24*s23^5) + s23*(139*s13^5 + 
                  94*s13^4*s23 - 147*s13^3*s23^2 - 112*s13^2*s23^3 - 
                  6*s13*s23^4 + 4*s23^5))) - p1q^2*(p2q + p3q)*
             (p3q^5*s12^2*(-18*s12^4*s13 + s12^3*(18*s13^2 + 135*s13*s23 + 
                  5*s23^2) + 2*s13*s23^2*(-13*s13^2 + 24*s13*s23 + 
                  51*s23^2) + s12*s23*(9*s13^3 + 4*s13^2*s23 - 149*s13*
                   s23^2 - 8*s23^3) + s12^2*(36*s13^3 - 18*s13^2*s23 - 
                  109*s13*s23^2 - 3*s23^3)) + p2q^5*s13^2*(s12^3*(36*s13^2 - 
                  36*s13*s23 + s23^2) + s13*s23*(9*s13^3 + 68*s13^2*s23 - 
                  57*s13*s23^2 - 116*s23^3) + s12^2*(18*s13^3 - 45*s13^2*
                   s23 - 77*s13*s23^2 + 3*s23^3) - 2*s12*(9*s13^4 - 
                  81*s13^3*s23 + 86*s13^2*s23^2 + 88*s13*s23^3 + 3*s23^4)) - 
              p2q*p3q^4*s12*(36*s12^5*s13 - s12^4*(108*s13^2 + 378*s13*s23 + 
                  7*s23^2) + s12^3*(-54*s13^3 + 189*s13^2*s23 + 189*s13*
                   s23^2 + 13*s23^3) + 2*s13*s23^2*(45*s13^3 + 51*s13^2*s23 + 
                  53*s13*s23^2 + 25*s23^3) + s12*s23*(135*s13^4 + 152*s13^3*
                   s23 - 9*s13^2*s23^2 - 156*s13*s23^3 - 6*s23^4) + 
                2*s12^2*(45*s13^4 - 54*s13^3*s23 - 78*s13^2*s23^2 + 
                  175*s13*s23^3 + 7*s23^4)) - p2q^2*p3q^3*(18*s12^6*s13 - 
                s12^5*(162*s13^2 + 261*s13*s23 + s23^2) + 2*s13^2*s23^2*
                 (-22*s13^3 - 11*s13^2*s23 + 18*s13*s23^2 + 7*s23^3) + 
                s12^4*(90*s13^3 + 612*s13^2*s23 + 221*s13*s23^2 + 15*s23^3) + 
                s12^3*(198*s13^4 - 144*s13^3*s23 - 85*s13^2*s23^2 + 
                  257*s13*s23^3 + 6*s23^4) + s12*s13*s23*(-171*s13^4 + 
                  204*s13^3*s23 + 59*s13^2*s23^2 + 68*s13*s23^3 + 28*s23^4) + 
                s12^2*(-72*s13^5 + 432*s13^4*s23 + 157*s13^3*s23^2 + 
                  21*s13^2*s23^3 - 146*s13*s23^4 - 10*s23^5)) + 
              p2q^4*p3q*s13*(-90*s12^4*s13^2 + s12^3*(54*s13^3 + 135*s13^2*
                   s23 + 181*s13*s23^2 + 6*s23^3) - 2*s13*s23*(27*s13^4 - 
                  26*s13^3*s23 + 29*s13^2*s23^2 + 52*s13*s23^3 - 30*s23^4) + 
                s12^2*(108*s13^4 - 324*s13^3*s23 + 57*s13^2*s23^2 + 
                  171*s13*s23^3 + 2*s23^4) + s12*(-36*s13^5 + 297*s13^4*s23 - 
                  576*s13^3*s23^2 - 125*s13^2*s23^3 + 156*s13*s23^4 + 
                  4*s23^5)) + p2q^3*p3q^2*(s12^5*(72*s13^2 + 36*s13*s23 - 
                  s23^2) + s12^3*s13*(-90*s13^3 + 396*s13^2*s23 + 
                  257*s13*s23^2 - 32*s23^3) - s12^4*(198*s13^3 + 351*s13^2*
                   s23 + 105*s13*s23^2 + 5*s23^3) + s13^2*s23*(-45*s13^4 + 
                  64*s13^3*s23 + 39*s13^2*s23^2 - 24*s13*s23^3 + 46*s23^4) + 
                s12^2*(162*s13^5 - 396*s13^4*s23 + 319*s13^3*s23^2 + 
                  240*s13^2*s23^3 + 94*s13*s23^4 + 4*s23^5) + 2*s12*s13*
                 (-9*s13^5 + 198*s13^4*s23 - 187*s13^3*s23^2 + 74*s13^2*
                   s23^3 + 100*s13*s23^4 + 13*s23^5))) - 
            p1q^3*(p3q^5*s12*(s12^4*(18*s13^2 + 63*s13*s23 + 5*s23^2) + 
                2*s13*s23^2*(5*s13^3 + 5*s13^2*s23 - 35*s13*s23^2 - 
                  33*s23^3) + s12^3*(18*s13^3 - 81*s13^2*s23 - 205*s13*
                   s23^2 - 12*s23^3) + s12^2*s23*(-9*s13^3 + 110*s13^2*s23 + 
                  60*s13*s23^2 - 5*s23^3) + s12*s23*(9*s13^4 - 12*s13^3*s23 + 
                  151*s13^2*s23^2 + 236*s13*s23^3 + 12*s23^4)) + 
              p2q^5*s13*(s12^4*s23*(18*s13 + s23) + s12^3*(18*s13^3 - 
                  9*s13^2*s23 + 60*s13*s23^2 + s23^3) + s12^2*(18*s13^4 - 
                  117*s13^3*s23 + 137*s13^2*s23^2 + 142*s13*s23^3 + 
                  2*s23^4) + s12*s23*(45*s13^4 - 259*s13^3*s23 + 33*s13^2*
                   s23^2 + 191*s13*s23^3 + 6*s23^4) + s13*s23*(9*s13^4 - 
                  49*s13^3*s23 - 129*s13^2*s23^2 + 13*s13*s23^3 + 
                  84*s23^4)) + p2q*p3q^4*(3*s12^5*(18*s13^2 + 81*s13*s23 + 
                  4*s23^2) + s12^4*(18*s13^3 - 333*s13^2*s23 - 788*s13*
                   s23^2 - 29*s23^3) + s12^3*(-36*s13^4 - 81*s13^3*s23 + 
                  158*s13^2*s23^2 - 122*s13*s23^3 + 3*s23^4) + 2*s13*s23^2*
                 (13*s13^4 + 11*s13^3*s23 - s13^2*s23^2 + 9*s13*s23^3 + 
                  8*s23^4) + s12^2*s23*(-117*s13^4 - 213*s13^3*s23 + 
                  114*s13^2*s23^2 + 600*s13*s23^3 + 38*s23^4) - 
                s12*s23*(-18*s13^5 + 65*s13^4*s23 - 136*s13^3*s23^2 + 
                  95*s13^2*s23^3 + 176*s13*s23^4 + 6*s23^5)) + 
              p2q^3*p3q^2*(9*s12^5*s13*(2*s13 + 7*s23) - s12^4*(90*s13^3 + 
                  531*s13^2*s23 + 457*s13*s23^2 + 17*s23^3) + 
                s12^3*(-54*s13^4 - 18*s13^3*s23 + 178*s13^2*s23^2 + 
                  19*s13*s23^3 + 5*s23^4) + s13*s23*(-63*s13^5 + 107*s13^4*
                   s23 + 97*s13^3*s23^2 - 3*s13^2*s23^3 + 38*s13*s23^4 - 
                  32*s23^5) + s12*s23*(171*s13^5 - 812*s13^4*s23 + 
                  413*s13^3*s23^2 + 444*s13^2*s23^3 - 58*s13*s23^4 - 
                  10*s23^5) + 2*s12^2*(27*s13^5 - 225*s13^4*s23 + 
                  38*s13^3*s23^2 + 8*s13^2*s23^3 + 185*s13*s23^4 + 
                  6*s23^5)) + p2q^2*p3q^3*(s12^5*(54*s13^2 + 261*s13*s23 + 
                  8*s23^2) - s12^4*(54*s13^3 + 639*s13^2*s23 + 911*s13*
                   s23^2 + 29*s23^3) + s12^3*(-90*s13^4 - 126*s13^3*s23 + 
                  310*s13^2*s23^2 - 109*s13*s23^3 + 15*s23^4) + 
                s12*s23*(117*s13^5 - 412*s13^4*s23 + 343*s13^3*s23^2 + 
                  136*s13^2*s23^3 - 148*s13*s23^4 - 14*s23^5) + 
                s13*s23*(-27*s13^5 + 81*s13^4*s23 + 37*s13^3*s23^2 - 
                  103*s13^2*s23^3 - 24*s13*s23^4 + 8*s23^5) + 2*s12^2*
                 (9*s13^5 - 171*s13^4*s23 - 82*s13^3*s23^2 + 35*s13^2*s23^3 + 
                  357*s13*s23^4 + 19*s23^5)) - p2q^4*p3q*(s12^5*s23*
                 (18*s13 + s23) + s12^4*(36*s13^3 + 126*s13^2*s23 + 
                  128*s13*s23^2 + 5*s23^3) + s12^3*(-18*s13^4 - 27*s13^3*
                   s23 + 24*s13^2*s23^2 + 71*s13*s23^3 + 2*s23^4) + 
                s12^2*s13*(-54*s13^4 + 351*s13^3*s23 - 176*s13^2*s23^2 + 
                  3*s13*s23^3 + 14*s23^4) + s12*s23*(-117*s13^5 + 734*s13^4*
                   s23 - 175*s13^3*s23^2 - 402*s13^2*s23^3 + 32*s13*s23^4 + 
                  2*s23^5) + s13*s23*(27*s13^5 - 3*s13^4*s23 + 65*s13^3*
                   s23^2 - 75*s13^2*s23^3 - 146*s13*s23^4 + 24*s23^5)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
           (p1q^5*s23^3*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + 
                s23) - p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
            p1q^4*s23^2*(p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*
                 s23) + p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*
             (p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                 (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + p2q^2*(s13 + s23)*
               (s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 2*s23)*s23 + 
                s12*(3*s13^2 - s23^2)) + p2q*p3q*(s12^3*(2*s13 + 3*s23) + 
                s12^2*(2*s13^2 + 3*s13*s23 - s23^2) + s12*(2*s13^3 + 
                  3*s13^2*s23 + 2*s13*s23^2 - 3*s23^3) + s23*(3*s13^3 - 
                  s13^2*s23 - 3*s13*s23^2 + s23^3))) + 
            p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + s13*(s13 - 4*s23) - 
                3*s12*s23) + p3q^4*s12^2*(s12 + s23)*(s12^2 - 4*s12*s23 - 
                s13*(s13 + 3*s23)) + p2q*p3q^3*s12*(s12^4 - s12^2*
                 (s13 - s23)^2 - 3*s12^3*(s13 + s23) + 2*s13*s23*
                 (s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + s13^2*s23 + 
                  s13*s23^2 + s23^3)) + p2q^2*p3q^2*(-(s12^4*(3*s13 + s23)) + 
                s12^3*(3*s13^2 + 3*s13*s23 + s23^2) + s13^2*s23*(-s13^2 + 
                  s13*s23 + 2*s23^2) + s12^2*(3*s13^3 + 2*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3) + s12*s13*(-3*s13^3 + 3*s13^2*s23 + 
                  2*s13*s23^2 + 2*s23^3)) + p2q^3*p3q*s13*(s12^3*
                 (3*s13 + 2*s23) + s12^2*(-s13^2 + 3*s13*s23 + 2*s23^2) + 
                s12*(-3*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 - 3*s13^2*s23 - s13*s23^2 + 3*s23^3))) + 
            p1q^2*(-(p3q^3*s12*(s12 + s23)*(-(s13*s23*(2*s13 + 3*s23)) + 
                 s12^2*(s13 + 4*s23) + s12*(s13^2 - 6*s23^2))) - 
              p2q^3*s13*(s13 + s23)*(s12^2*(s13 - 2*s23) + 2*s13*
                 (2*s13 - 3*s23)*s23 + s12*(s13^2 - 3*s23^2)) + 
              p2q*p3q^2*(-(s12^4*(s13 + 3*s23)) + s13*s23^2*(2*s13^2 + 
                  s13*s23 - s23^2) + s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + 
                s12*s23*(2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + 
                s12^2*(2*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + 
              p2q^2*p3q*(-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 
                2*s12^3*(s13^2 + s13*s23 + s23^2) + s12^2*(s13^3 + 
                  2*s13^2*s23 + 2*s13*s23^2 + s23^3) - s12*(s13^4 - 
                  3*s13^3*s23 - 2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*
        p2 . E0*p2 . E0conj + p1 . E0*
        (((ep*p3q*(s12 + s13 + s23)^2*(p1q^5*(s12 - s13 - s23)*s23^4 - 
              p1q^4*s23^3*(p2q*(9*s12*s13 + 5*s13^2 - 4*s12*s23 + 7*s13*s23 + 
                  2*s23^2) + p3q*(3*s12^2 - s13^2 + s23^2 - 2*s12*
                   (s13 + 3*s23))) - (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(
                2*p3q^2*s12*(s12 + s13)*s23 - p2q*p3q*(s12^2*(9*s13 - 
                    3*s23) + s13*s23*(s13 + s23) + s12*(9*s13^2 + 7*s13*s23 + 
                    s23^2)) + p2q^2*(s12^2*s23 + s12*(9*s13^2 + 9*s13*s23 - 
                    s23^2) + s13*(9*s13^2 + 17*s13*s23 + 8*s23^2))) - 
              p1q^3*s23*(p3q^2*s23*(-3*s12^3 - s13*s23*(s13 + s23) + 
                  s12^2*(s13 + 12*s23) + s12*(2*s13^2 + 2*s13*s23 - 
                    5*s23^2)) + p2q^2*(s12^3*s23 + s12^2*(9*s13^2 + 
                    2*s13*s23 + 2*s23^2) + s12*(9*s13^3 + 4*s13^2*s23 + 
                    25*s13*s23^2 - 4*s23^3) + s23*(-4*s13^3 + 7*s13^2*s23 + 
                    12*s13*s23^2 + s23^3)) - p2q*p3q*(s12^2*(9*s13^2 + 
                    22*s13*s23 - 12*s23^2) - s23*(-6*s13^3 - 3*s13^2*s23 + 
                    4*s13*s23^2 + s23^3) + s12*(9*s13^3 + 41*s13^2*s23 + 
                    11*s13*s23^2 + 11*s23^3))) + p1q*(p3q^4*s12^2*s23*
                 (-3*s12^2 - 2*s12*s13 + s13^2 + 7*s12*s23 + 5*s13*s23) + 
                p2q*p3q^3*s12*(s12^3*(9*s13 - 4*s23) + s12^2*s23*(-11*s13 + 
                    17*s23) - 2*s13*s23*(5*s13^2 + 4*s13*s23 + s23^2) - 
                  s12*(9*s13^3 + 35*s13^2*s23 + 17*s13*s23^2 + 3*s23^3)) + 
                p2q^4*s13*(s12^3*s23 + s12*s23*(12*s13^2 + 23*s13*s23 - 
                    2*s23^2) + s12^2*(9*s13^2 + s13*s23 + 3*s23^2) + 
                  3*s13*(-3*s13^3 - 2*s13^2*s23 + 6*s13*s23^2 + 5*s23^3)) + 
                p2q^2*p3q^2*(s12^4*(9*s13 - 2*s23) + 9*s12^3*(-2*s13^2 + 
                    s23^2) + s13^2*s23*(9*s13^2 + 23*s13*s23 + 14*s23^2) - 
                  s12^2*(9*s13^3 + 18*s13^2*s23 - 5*s13*s23^2 + 7*s23^3) + 
                  s12*s13*(18*s13^3 + 43*s13^2*s23 + 67*s13*s23^2 + 
                    19*s23^3)) + p2q^3*p3q*(-(s12^4*s23) - s12^3*(18*s13^2 - 
                    s13*s23 + s23^2) + s12^2*(9*s13^3 - 8*s13^2*s23 + 
                    12*s13*s23^2 - 4*s23^3) + 2*s12*s13*(9*s13^3 + 19*s13^2*
                     s23 + 31*s13*s23^2 + 5*s23^3) + s13^2*(-9*s13^3 - 
                    6*s13^2*s23 + 23*s13*s23^2 + 20*s23^3))) + 
              p1q^2*(-(p3q^3*s12*s23*(s12^3 - 10*s12^2*s23 + 2*s13*s23*
                    (s13 + 2*s23) - s12*(s13^2 + 4*s13*s23 - 9*s23^2))) + 
                p2q*p3q^2*(s13*s23^2*(6*s13^2 + 7*s13*s23 + s23^2) + 
                  s12^3*(-9*s13^2 - 22*s13*s23 + 12*s23^2) + s12*s23*
                   (-s13^3 + 31*s13^2*s23 + 12*s13*s23^2 + 3*s23^3) - 
                  s12^2*(9*s13^3 + 32*s13^2*s23 + 2*s13*s23^2 + 21*s23^3)) + 
                p2q^3*(s12^3*(s13 - s23)*s23 + s13*s23*(11*s13^3 + 30*s13^2*
                     s23 + 13*s13*s23^2 - 6*s23^3) + s12^2*(9*s13^3 - 
                    7*s13^2*s23 + s13*s23^2 - 2*s23^3) + s12*(9*s13^4 + 
                    12*s13^3*s23 + 18*s13^2*s23^2 - 18*s13*s23^3 + s23^4)) + 
                p2q^2*p3q*(s12^4*s23 + s12^2*s23*(-13*s13^2 + 22*s13*s23 - 
                    9*s23^2) + s12^3*(-9*s13^2 - 3*s13*s23 + 4*s23^2) + 
                  2*s13*s23*(s13^3 + 6*s13^2*s23 - s13*s23^2 - 6*s23^3) + 
                  s12*(9*s13^4 + 11*s13^3*s23 + 51*s13^2*s23^2 - s13*s23^3 + 
                    6*s23^4)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
             (-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + (p3q*s12 - p1q*s23)^2*(
                p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + s23) - 
                p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*
                  (s13 + s23)) + p3q*(s12 + s13)*(-(s13*(s13 + s23)) + 
                  s12*(3*s13 + 2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*
                 (s12 - 3*s13 - s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*
                 (s13 + s23) + p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + 
                  s12*(2*s13^2 + 2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + 
                    s13*s23 - s23^2)) + p1q*p3q^2*s12*
                 (-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + s13*s23 + s23^2) + 
                  s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))) - (p3q*(s12 + s13 + s23)^2*
             (p1q^6*(p2q + p3q)*(s12 - s13 - s23)*s23^5 - 18*p2q^2*(p2q + 
                p3q)*s13*(p3q*s12 - p2q*s13)^2*(-(p3q^2*s12*(s12 + s13 - s23)*
                  (s12 + s23)) + p2q^2*s13*(s12^2 + s12*s13 + 
                  s23*(s13 + s23)) - p2q*p3q*(s12^3 + s12^2*s23 + 
                  s23^2*(s13 + s23) + s12*(-s13^2 + 3*s13*s23 + s23^2))) - 
              p1q^5*s23^3*(p2q*p3q*s23*(5*s12^2 + 11*s12*s13 + 6*s13^2 - 
                  6*s12*s23 + 11*s13*s23 + 5*s23^2) + p3q^2*s23*(3*s12^2 - 
                  s13^2 + s23^2 - 2*s12*(s13 + 3*s23)) + p2q^2*
                 (2*s12^2*(9*s13 + s23) + s12*s13*(-18*s13 + 13*s23) + 
                  s23*(-11*s13^2 - 7*s13*s23 + 4*s23^2))) + p1q^4*s23^2*(
                p3q^3*s23*(3*s12^3 + s13*s23*(s13 + s23) - s12^2*(s13 + 
                    12*s23) + s12*(-2*s13^2 - 2*s13*s23 + 5*s23^2)) + 
                p2q^3*(s12^3*(18*s13 + s23) + 3*s12^2*s13*(15*s13 + 8*s23) + 
                  s23*(-28*s13^3 + 17*s13^2*s23 + 42*s13*s23^2 - 3*s23^3) + 
                  s12*(-45*s13^3 + 114*s13^2*s23 + 37*s13*s23^2 + 2*s23^3)) + 
                p2q^2*p3q*(s12^3*(36*s13 + 5*s23) - 2*s12^2*(27*s13^2 + 
                    17*s13*s23 + 3*s23^2) + 2*s23*(8*s13^3 + 20*s13^2*s23 + 
                    9*s13*s23^2 - 3*s23^3) + s12*(-18*s13^3 + 37*s13^2*s23 - 
                    70*s13*s23^2 + 13*s23^3)) + p2q*p3q^2*(7*s12^3*s23 + 
                  s12^2*(9*s13^2 + 31*s13*s23 - 18*s23^2) + s23*(8*s13^3 + 
                    6*s13^2*s23 - 5*s13*s23^2 - 3*s23^3) + s12*(9*s13^3 + 
                    47*s13^2*s23 + 17*s13*s23^2 + 16*s23^3))) - 
              p1q^3*s23*(p3q^4*s12*s23*(s12^3 - 10*s12^2*s23 + 2*s13*s23*
                   (s13 + 2*s23) - s12*(s13^2 + 4*s13*s23 - 9*s23^2)) + 
                p2q*p3q^3*(3*s12^4*s23 + s12^3*(9*s13^2 + 28*s13*s23 - 
                    22*s23^2) - s13*s23^2*(8*s13^2 + 11*s13*s23 + 3*s23^2) - 
                  s12*s23*(-3*s13^3 + 33*s13^2*s23 + 18*s13*s23^2 + 
                    7*s23^3) + s12^2*(9*s13^3 + 37*s13^2*s23 - 4*s13*s23^2 + 
                    24*s23^3)) + p2q^3*p3q*(s12^4*(18*s13 + s23) - 
                  3*s12^3*(9*s13^2 + 14*s13*s23 + s23^2) + s12^2*(9*s13^3 + 
                    74*s13^2*s23 + 29*s13*s23^2 + 7*s23^3) + s12*(-18*s13^4 + 
                    189*s13^3*s23 - 105*s13^2*s23^2 + 59*s13*s23^3 - 
                    7*s23^4) + s23*(27*s13^4 + 104*s13^3*s23 + 19*s13^2*
                     s23^2 - 56*s13*s23^3 + 2*s23^4)) + p2q^2*p3q^2*
                 (3*s12^4*(6*s13 + s23) - s12^3*(36*s13^2 + 123*s13*s23 + 
                    14*s23^2) + s12^2*(9*s13^3 + 117*s13^2*s23 - 56*s13*
                     s23^2 + 24*s23^3) + s12*(27*s13^4 + 126*s13^3*s23 + 
                    42*s13^2*s23^2 + 101*s13*s23^3 - 11*s23^4) + 
                  s23*(36*s13^4 + 54*s13^3*s23 + 9*s13^2*s23^2 - 7*s13*
                     s23^3 + 2*s23^4)) + p2q^4*(s12^3*(18*s13^2 - 17*s13*
                     s23 - s23^2) + s13*s23*(-27*s13^3 + 78*s13^2*s23 + 
                    71*s13*s23^2 - 34*s23^3) + s12^2*(9*s13^3 + 13*s13^2*
                     s23 - 41*s13*s23^2 - 2*s23^3) - s12*(45*s13^4 - 
                    192*s13^3*s23 + 20*s13^2*s23^2 + 46*s13*s23^3 + 
                    3*s23^4))) + p1q*(-2*p3q^6*s12^3*(s12 + s13)*s23^2 + 
                p2q*p3q^5*s12^2*s23*(s12^2*(9*s13 - 7*s23) + s13*s23*
                   (5*s13 + s23) + s12*(9*s13^2 + 7*s13*s23 + s23^2)) + 
                p2q^6*s13^2*(-(s12^2*(36*s13^2 - 36*s13*s23 + s23^2)) + 
                  s13*s23*(-27*s13^2 + 37*s13*s23 + 64*s23^2) + 
                  s12*(-36*s13^3 + 81*s13^2*s23 + 27*s13*s23^2 + s23^3)) + 
                p2q^2*p3q^4*s12*(18*s12^4*s13 - s12^3*s23*(72*s13 + 7*s23) + 
                  2*s13*s23^2*(15*s13^2 + 17*s13*s23 + s23^2) + s12*s23*
                   (9*s13^3 + 29*s13^2*s23 + 50*s13*s23^2 + 2*s23^3) + 
                  s12^2*(-18*s13^3 + 9*s13^2*s23 - 35*s13*s23^2 + 7*s23^3)) + 
                p2q^5*p3q*s13*(90*s12^3*s13^2 + s13*s23^2*(95*s13^2 + 
                    43*s13*s23 - 52*s23^2) + s12^2*(36*s13^3 - 63*s13^2*s23 - 
                    115*s13*s23^2 - 2*s23^3) + s12*(-54*s13^4 + 225*s13^3*
                     s23 - 101*s13^2*s23^2 - 85*s13*s23^3 + 2*s23^4)) + 
                p2q^3*p3q^3*(18*s12^5*s13 - s12^4*(72*s13^2 + 117*s13*s23 + 
                    s23^2) - s13^2*s23^2*(33*s13^2 + 67*s13*s23 + 34*s23^2) + 
                  s12^3*(-54*s13^3 + 99*s13^2*s23 - 45*s13*s23^2 + 
                    11*s23^3) - s12*s13*s23*(45*s13^3 + 149*s13^2*s23 + 
                    55*s13*s23^2 + 30*s23^3) + s12^2*(36*s13^4 - 117*s13^3*
                     s23 - 16*s13^2*s23^2 + 41*s13*s23^3 + 4*s23^4)) + 
                p2q^4*p3q^2*(s12^4*(-72*s13^2 - 36*s13*s23 + s23^2) + 
                  s13^2*s23*(27*s13^3 + 43*s13^2*s23 - 52*s13*s23^2 - 
                    68*s23^3) + s12^3*(54*s13^3 + 99*s13^2*s23 + 17*s13*
                     s23^2 + 5*s23^3) + s12^2*(108*s13^4 - 225*s13^3*s23 - 
                    100*s13^2*s23^2 + 26*s13*s23^3 + 2*s23^4) - s12*s13*
                   (18*s13^4 - 99*s13^3*s23 + 253*s13^2*s23^2 + 103*s13*
                     s23^3 + 12*s23^4))) - p1q^2*(p3q^5*s12^2*s23^2*
                 (3*s12^2 + s12*(2*s13 - 7*s23) - s13*(s13 + 5*s23)) + 
                p2q*p3q^4*s12*s23*(-9*s12^3*(s13 - s23) + s12^2*(19*s13 - 
                    20*s23)*s23 + 4*s13*s23*(3*s13^2 + 3*s13*s23 + s23^2) + 
                  s12*(9*s13^3 + 40*s13^2*s23 + 20*s13*s23^2 + 5*s23^3)) + 
                p2q^2*p3q^3*(2*s12^4*(9*s13^2 + 45*s13*s23 + 4*s23^2) + 
                  s12^3*(18*s13^3 - 36*s13^2*s23 - 71*s13*s23^2 - 22*s23^3) + 
                  s13*s23^2*(25*s13^3 + 43*s13^2*s23 + 16*s13*s23^2 - 
                    2*s23^3) + s12^2*s23*(-18*s13^3 + 7*s13^2*s23 - 
                    130*s13*s23^2 + 12*s23^3) + s12*s13*s23*(18*s13^3 + 
                    39*s13^2*s23 - 13*s13*s23^2 + 29*s23^3)) + p2q^5*s13*
                 (s12^3*s23*(18*s13 + s23) + s12^2*(18*s13^3 - 27*s13^2*s23 + 
                    59*s13*s23^2 + s23^3) + s13*s23*(9*s13^3 - 82*s13^2*s23 - 
                    14*s13*s23^2 + 77*s23^3) + s12*(18*s13^4 - 126*s13^3*
                     s23 + 120*s13^2*s23^2 + 75*s13*s23^3 + 4*s23^4)) + 
                p2q^3*p3q^2*(s12^4*(18*s13^2 + 81*s13*s23 + s23^2) - 
                  s12^3*(18*s13^3 + 180*s13^2*s23 + 91*s13*s23^2 + 
                    14*s23^3) + s13*s23*(-27*s13^4 - 5*s13^3*s23 + 92*s13^2*
                     s23^2 + 50*s13*s23^3 - 20*s23^4) + s12*s23*(-36*s13^4 + 
                    171*s13^3*s23 - 39*s13^2*s23^2 + 77*s13*s23^3 - 
                    2*s23^4) + s12^2*(-36*s13^4 + 30*s13^2*s23^2 - 
                    71*s13*s23^3 + 5*s23^4)) - p2q^4*p3q*(s12^4*s23*
                   (18*s13 + s23) + s12^3*(36*s13^3 + 126*s13^2*s23 + 
                    128*s13*s23^2 + 5*s23^3) + s12^2*(18*s13^4 + 93*s13^2*
                     s23^2 + 149*s13*s23^3 + 2*s23^4) + s13*s23*(18*s13^4 + 
                    76*s13^3*s23 - 71*s13^2*s23^2 - 93*s13*s23^3 + 
                    36*s23^4) + s12*(-18*s13^5 + 180*s13^4*s23 - 210*s13^3*
                     s23^2 + 137*s13^2*s23^3 + 70*s13*s23^4 + 2*s23^5)))))/
            (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
             (-(p2q^4*s13^2*(s12 + s13)*(s13 + s23)) + (p3q*s12 - p1q*s23)^2*(
                p3q^2*s12*(s12 + s13) + p1q^2*s23*(s13 + s23) - 
                p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p2q^3*s13*(-(p1q*(s13*(s13 - 3*s23) + s12*(s13 - 2*s23))*
                  (s13 + s23)) + p3q*(s12 + s13)*(-(s13*(s13 + s23)) + 
                  s12*(3*s13 + 2*s23))) + p2q*(p3q^3*s12^2*(s12 + s13)*
                 (s12 - 3*s13 - s23) - p1q^3*(s12 + 3*s13 - s23)*s23^2*
                 (s13 + s23) + p1q^2*p3q*s23*(s12^2*(2*s13 + 3*s23) + 
                  s12*(2*s13^2 + 2*s13*s23 - 3*s23^2) + s13*(2*s13^2 + 
                    s13*s23 - s23^2)) + p1q*p3q^2*s12*
                 (-(s12^2*(s13 + 3*s23)) + 2*s13*(s13^2 + s13*s23 + s23^2) + 
                  s12*(s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p2q^2*(p1q^2*(3*s13*(s13 - s23) + s12*(2*s13 - s23))*s23*
                 (s13 + s23) - p3q^2*s12*(s12 + s13)*(s12*(3*s13 + s23) - 
                  s13*(3*s13 + 2*s23)) + p1q*p3q*(2*s12^2*(s13^2 + s13*s23 + 
                    s23^2) + s13^2*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(s13^3 + 2*s13*s23^2))))))*p1 . E0conj + 
         ((ep*p3q*(s12 + s13 + s23)^2*(p1q^5*s23^2*(s12^2*s23 + 9*s12*s13*
                 (2*s13 + s23) + s13*s23*(17*s13 + 9*s23)) - 
              (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*(2*s13 + s23)*
                 (9*s13^2 + s12*s23 + s13*s23) + p3q^2*(2*s12 + s23)*
                 (9*s12*s13 - s12*s23 + 8*s13*s23) - p2q*p3q*(2*s12^2*s23 + 
                  9*s12*s13*(4*s13 + s23) + s13*s23*(25*s13 + 9*s23))) + 
              p1q^4*s23*(p3q*(-2*s12^3*s23 + 2*s13*s23^2*(17*s13 + 5*s23) - 
                  4*s12^2*(9*s13^2 + 9*s13*s23 - s23^2) + s12*s23*(2*s13^2 - 
                    25*s13*s23 + s23^2)) + p2q*(2*s12^3*s23 + 2*s12^2*
                   (9*s13^2 + s13*s23 + 3*s23^2) + s13*s23*(-34*s13^2 + 
                    25*s13*s23 + 19*s23^2) + s12*(-18*s13^3 + 56*s13^2*s23 + 
                    22*s13*s23^2 + s23^3))) + p1q^3*(p3q^2*(s12^4*s23 + 
                  s13*(17*s13 - 7*s23)*s23^3 + s12^3*(18*s13^2 + 45*s13*s23 - 
                    8*s23^2) + s12*s23^2*(-50*s13^2 - 61*s13*s23 + 2*s23^2) + 
                  s12^2*s23*(-55*s13^2 - 13*s13*s23 + 3*s23^2)) - 
                2*p2q*p3q*(s12^4*s23 + s12*s13*s23*(s13^2 - 85*s13*s23 - 
                    6*s23^2) + 6*s13*s23^2*(3*s13^2 - 8*s13*s23 - 3*s23^2) + 
                  s12^3*(-9*s13^2 - 4*s13*s23 + 4*s23^2) + s12^2*(9*s13^3 - 
                    22*s13^2*s23 + 9*s13*s23^2 - 3*s23^3)) + 
                p2q^2*(2*s12^3*s23*(-s13 + s23) + s12*s13*s23*(-101*s13^2 + 
                    14*s13*s23 + 9*s23^2) + s12^2*(-18*s13^3 + 15*s13^2*s23 - 
                    6*s13*s23^2 + 5*s23^3) + s13*s23*(17*s13^3 - 95*s13^2*
                     s23 - 23*s13*s23^2 + 9*s23^3))) + p1q*(p3q^4*s12*
                 (16*s13*s23^3 + s12^3*(-36*s13 + 5*s23) + s12^2*(18*s13^2 - 
                    5*s13*s23 - 2*s23^2) + s12*s23*(17*s13^2 + 43*s13*s23 - 
                    2*s23^2)) - 2*p2q*p3q^3*(2*s12^4*(9*s13 - 2*s23) - 
                  8*s13^2*s23^3 + 3*s12^2*s13*(9*s13^2 - 10*s13*s23 + 
                    s23^2) + s12^3*(-63*s13^2 + 12*s13*s23 + 2*s23^2) + 
                  s12*s13*s23*(17*s13^2 + s13*s23 + 10*s23^2)) + 
                p2q^4*s13*(3*s12^2*s13*s23 + s12*(36*s13^3 + 9*s13^2*s23 + 
                    4*s13*s23^2 + 2*s23^3) + s13*(-18*s13^3 + 51*s13^2*s23 + 
                    31*s13*s23^2 + 2*s23^3)) + p2q^2*p3q^2*(3*s12^4*s23 + 
                  s12^3*(108*s13^2 - 7*s13*s23 - 2*s23^2) + s13^2*s23*
                   (17*s13^2 - 41*s13*s23 + 14*s23^2) + 3*s12*s13*(18*s13^3 - 
                    35*s13^2*s23 + 18*s13*s23^2 - 6*s23^3) + s12^2*
                   (-162*s13^3 + 84*s13^2*s23 - 15*s13*s23^2 + 4*s23^3)) - 
                2*p2q^3*p3q*(3*s12^3*s13*s23 + s12^2*(54*s13^3 + 5*s13^2*
                     s23 + s13*s23^2 - s23^3) - s12*s13*(45*s13^3 - 
                    58*s13^2*s23 - 6*s13*s23^2 + s23^3) + s13^2*(9*s13^3 - 
                    25*s13^2*s23 + 23*s13*s23^2 + 9*s23^3))) - 
              p1q^2*(p3q^3*(2*s12^4*(9*s13 - 2*s23) + 8*s13*s23^4 + 
                  s12*s23^2*(34*s13^2 + 11*s13*s23 - s23^2) + 2*s12^2*s23*
                   (s13^2 - 37*s13*s23 + s23^2) + s12^3*(-36*s13^2 - 
                    65*s13*s23 + 9*s23^2)) + p2q*p3q^2*(2*s12^4*(9*s13 - 
                    s23) + s13*s23^2*(2*s13^2 - 87*s13*s23 - 17*s23^2) + 
                  s12^3*(-72*s13^2 - 4*s13*s23 + 15*s23^2) + s12^2*s13*
                   (72*s13^2 - 11*s13*s23 + 25*s23^2) + s12*s23*(18*s13^3 - 
                    96*s13^2*s23 + 30*s13*s23^2 + s23^3)) - p2q^2*p3q*
                 (2*s12^4*s23 + s12^3*(36*s13^2 - 2*s13*s23 + 4*s23^2) - 
                  2*s12^2*(45*s13^3 - 32*s13^2*s23 + 7*s13*s23^2 - 6*s23^3) + 
                  2*s13*s23*(10*s13^3 - 69*s13^2*s23 - 2*s13*s23^2 + 
                    5*s23^3) + s12*(36*s13^4 - 155*s13^3*s23 + 87*s13^2*
                     s23^2 - s13*s23^3 + s23^4)) + p2q^3*(2*s12^3*s13*s23 + 
                  2*s12^2*(9*s13^3 + 4*s13*s23^2) + s13*s23*(-79*s13^3 + 
                    29*s13^2*s23 + 29*s13*s23^2 + s23^3) + s12*(-36*s13^4 + 
                    72*s13^3*s23 + 19*s13^2*s23^2 + 2*s13*s23^3 + s23^4)))))/
            (8*(p1q + p2q + p3q)*s12*s13*s23*(p1q^4*s23^2*(s12 + s23)*(s13 + 
                s23) - (p3q*s12 - p2q*s13)^2*(p3q^2*s12*(s12 + s23) + 
                p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
                  s12*(2*s13 + s23))) - p1q^3*s23*(p2q*(s13 + s23)*
                 (2*s12*s13 - s12*s23 + 3*s13*s23 - s23^2) + p3q*(s12 + s23)*
                 (-(s23*(s13 + s23)) + s12*(2*s13 + 3*s23))) + 
              p1q*(-(p3q^3*s12^2*(s12 - s13 - 3*s23)*(s12 + s23)) + 
                p2q^3*s13^2*(s13 + s23)*(s12 - s13 + 3*s23) + p2q*p3q^2*s12*
                 (s12^2*(3*s13 + s23) - 2*s23*(s13^2 + s13*s23 + s23^2) - 
                  s12*(3*s13^2 + 2*s13*s23 + s23^2)) - p2q^2*p3q*s13*
                 (s12^2*(3*s13 + 2*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(-3*s13^2 + 2*s13*s23 + 2*s23^2))) + 
              p1q^2*(p2q^2*s13*(s13 + s23)*(s12*(s13 - 2*s23) + 3*(s13 - s23)*
                   s23) + p3q^2*s12*(s12 + s23)*(s12*(s13 + 3*s23) - 
                  s23*(2*s13 + 3*s23)) - p2q*p3q*(s23^2*(2*s13^2 + s13*s23 - 
                    s23^2) + 2*s12^2*(s13^2 + s13*s23 + s23^2) + 
                  s12*(2*s13^2*s23 + s23^3))))) - (p3q*(s12 + s13 + s23)^2*
             (-9*p1q^8*s13*s23^4*(s12 + s23)*(-s12 + s13 + s23) + 
              9*(p2q + p3q)^2*s13*(p3q*s12 - p2q*s13)^2*(-(p3q^4*s12*
                  (s12 + s13 - s23)*s23*(s12 + s23)) + p2q^4*s13*
                 (4*s13 + s23)*(s12^2 + s12*s13 + s23*(s13 + s23)) + 
                p2q*p3q^3*(4*s12^4 + s12^2*(6*s13 - 5*s23)*s23 - 
                  s23^3*(s13 + s23) + s12^3*(4*s13 + s23) + s12*s23*
                   (s13^2 - s13*s23 - 3*s23^2)) + p2q^2*p3q^2*(4*s12^4 + 
                  s12^3*(-4*s13 + 5*s23) + s23^2*(s13^2 + 3*s13*s23 + 
                    2*s23^2) + s12^2*(-8*s13^2 + 12*s13*s23 + 6*s23^2) + 
                  s12*s23*(-5*s13^2 + 13*s13*s23 + 7*s23^2)) - p2q^3*p3q*
                 (s12^3*(8*s13 + s23) + s12^2*(4*s13^2 + 6*s13*s23 + s23^2) + 
                  s23^2*(6*s13^2 + 7*s13*s23 + s23^2) + s12*(-4*s13^3 + 
                    17*s13^2*s23 + 11*s13*s23^2 + s23^3))) + p1q^7*s23^3*(
                p3q*(-27*s12^3*s13 - 8*s13*s23^2*(s13 + 2*s23) + 3*s12^2*
                   (15*s13^2 + 21*s13*s23 + s23^2) + 2*s12*s23*(18*s13^2 + 
                    36*s13*s23 + s23^2)) + p2q*(-9*s12^3*s13 + s13*s23*
                   (27*s13^2 - 17*s13*s23 - 52*s23^2) + s12^2*(-63*s13^2 + 
                    9*s13*s23 + 3*s23^2) + s12*(18*s13^3 - 99*s13^2*s23 - 
                    36*s13*s23^2 + 2*s23^3))) - p1q^6*s23^2*(p2q*p3q*
                 (-18*s12^4*s13 + s12^2*s13*(36*s13^2 - 54*s13*s23 - 
                    227*s23^2) + 3*s12*s13*s23*(27*s13^2 + 65*s13*s23 - 
                    56*s23^2) + s12^3*(-90*s13^2 + 63*s13*s23 + 14*s23^2) + 
                  2*s23^2*(2*s13^3 + 21*s13^2*s23 + 61*s13*s23^2 + 
                    2*s23^3)) + p3q^2*(-27*s12^4*s13 + s12^2*s23*(-18*s13^2 + 
                    39*s13*s23 - 4*s23^2) + 9*s12^3*(7*s13^2 + 21*s13*s23 + 
                    s23^2) + s13*s23^2*(19*s13^2 + 9*s13*s23 + 22*s23^2) - 
                  s12*s23*(-18*s13^3 + 69*s13^2*s23 + 145*s13*s23^2 + 
                    7*s23^3)) + p2q^2*(s12^3*(-18*s13^2 + 90*s13*s23 + 
                    5*s23^2) + s12^2*(-99*s13^3 + 135*s13^2*s23 + 130*s13*
                     s23^2 + 4*s23^3) + s23*(27*s13^4 - 105*s13^3*s23 - 
                    93*s13^2*s23^2 + 91*s13*s23^3 + 4*s23^4) + 
                  s12*(9*s13^4 - 243*s13^3*s23 + 138*s13^2*s23^2 + 139*s13*
                     s23^3 + 7*s23^4))) - p1q*(p2q + p3q)^2*(p3q^5*s12^2*s23*
                 (s12^3*(45*s13 + 4*s23) + s13*s23^2*(-17*s13 + 27*s23) - 
                  s12*s13*s23*(9*s13 + 32*s23) + s12^2*(9*s13^2 - 14*s13*
                     s23 + 3*s23^2)) - p2q*p3q^4*s12*(72*s12^5*s13 + 
                  s12^4*(36*s13^2 - 117*s13*s23 - 4*s23^2) + s12^2*s23^2*
                   (-2*s13^2 + 109*s13*s23 + 4*s23^2) + 2*s13*s23^3*
                   (10*s13^2 + 9*s13*s23 + 9*s23^2) + s12*s13*s23^2*
                   (36*s13^2 - 9*s13*s23 + 49*s23^2) - 3*s12^3*(12*s13^3 - 
                    57*s13^2*s23 + 35*s13*s23^2 - s23^3)) + p2q^5*s13^2*
                 (9*s12^3*s13*(4*s13 + s23) - s12^2*(36*s13^3 - 63*s13^2*
                     s23 - 23*s13*s23^2 + s23^3) + s12*s13*(-72*s13^3 + 
                    144*s13^2*s23 + 104*s13*s23^2 + 9*s23^3) + s13*s23*
                   (-54*s13^3 + 72*s13^2*s23 + 145*s13*s23^2 + 27*s23^3)) + 
                p2q^2*p3q^3*(-36*s12^6*s13 + 9*s12^5*s13*(28*s13 + 9*s23) + 
                  s13^2*s23^3*(s13^2 - 9*s13*s23 - 18*s23^2) + s12^4*
                   (180*s13^3 - 189*s13^2*s23 + 34*s13*s23^2 - 7*s23^3) + 
                  s12*s13*s23^2*(63*s13^3 + 74*s13^2*s23 + 22*s13*s23^2 + 
                    36*s23^3) + s12^2*s13*s23*(-9*s13^3 + 308*s13^2*s23 + 
                    254*s13*s23^2 + 99*s23^3) + s12^3*(-108*s13^4 + 
                    513*s13^3*s23 + 45*s13^2*s23^2 - 6*s13*s23^3 - 
                    4*s23^4)) + p2q^3*p3q^2*(9*s12^5*s13*(12*s13 + s23) - 
                  s12^4*(324*s13^3 + 99*s13^2*s23 + 13*s13*s23^2 + s23^3) + 
                  s12^3*s13*(-324*s13^3 + 171*s13^2*s23 + 168*s13*s23^2 + 
                    s23^3) + 3*s13^2*s23^2*(-6*s13^3 - 17*s13^2*s23 + 
                    9*s13*s23^2 + 12*s23^3) + s12^2*s13*(108*s13^4 - 
                    747*s13^3*s23 + 11*s13^2*s23^2 + 190*s13*s23^3 - 
                    5*s23^4) - s12*s13*s23*(18*s13^4 + 422*s13^3*s23 + 
                    25*s13^2*s23^2 - 58*s13*s23^3 + 18*s23^4)) - 
                p2q^4*p3q*s13*(18*s12^4*s13*(6*s13 + s23) + s12^3*
                   (-180*s13^3 + 45*s13^2*s23 + 10*s13*s23^2 - 2*s23^3) + 
                  s12^2*s13*(-252*s13^3 + 243*s13^2*s23 + 310*s13*s23^2 + 
                    39*s23^3) + 3*s13*s23*(-6*s13^4 - 42*s13^3*s23 + 
                    17*s13^2*s23^2 + 51*s13*s23^3 + 6*s23^4) + s12*s13*
                   (36*s13^4 - 414*s13^3*s23 + 237*s13^2*s23^2 + 326*s13*
                     s23^3 + 18*s23^4))) + p1q^5*s23*(-(p3q^3*(9*s12^5*s13 - 
                   9*s12^4*(3*s13^2 + 21*s13*s23 + s23^2) + 12*s12^3*s23*
                    (9*s13^2 + 19*s13*s23 + 2*s23^2) + s13*s23^3*(38*s13^2 + 
                     31*s13*s23 + 41*s23^2) - s12*s23^2*(2*s13^3 + 43*s13^2*
                      s23 + 122*s13*s23^2 + 8*s23^3) + s12^2*s23*(-36*s13^3 + 
                     60*s13^2*s23 + 243*s13*s23^2 + 10*s23^3))) + 
                p2q^2*p3q*(6*s12^4*(3*s13^2 + 30*s13*s23 + 2*s23^2) + 
                  s12^3*(81*s13^3 + 252*s13^2*s23 - 56*s13*s23^2 - 8*s23^3) + 
                  s23^2*(68*s13^4 + 152*s13^3*s23 + 241*s13^2*s23^2 - 
                    131*s13*s23^3 - 8*s23^4) + s12*s23*(108*s13^4 + 
                    320*s13^3*s23 - 381*s13^2*s23^2 + 140*s13*s23^3 + 
                    2*s23^4) + s12^2*(27*s13^4 + 171*s13^3*s23 + 43*s13^2*
                     s23^2 + 83*s13*s23^3 + 16*s23^4)) + p2q*p3q^2*
                 (-9*s12^5*s13 + s12^4*(-27*s13^2 + 99*s13*s23 + 19*s23^2) + 
                  s12^2*s23*(-45*s13^3 + 315*s13^2*s23 + 96*s13*s23^2 + 
                    4*s23^3) - s12^3*(54*s13^3 + 63*s13^2*s23 + 532*s13*
                     s23^2 + 32*s23^3) + s23^2*(74*s13^4 + 27*s13^3*s23 + 
                    82*s13^2*s23^2 - 83*s13*s23^3 - 4*s23^4) + s12*s23*
                   (54*s13^4 - 62*s13^3*s23 + 113*s13^2*s23^2 + 595*s13*
                     s23^3 + 16*s23^4)) + p2q^3*(2*s12^4*s23*(18*s13 + s23) + 
                  s12^3*s13*(-9*s13^2 + 198*s13*s23 - 4*s23^2) + s12*s23*
                   (-189*s13^4 + 474*s13^3*s23 + 269*s13^2*s23^2 + 
                    9*s13*s23^3 - 6*s23^4) + s12^2*(-45*s13^4 + 225*s13^3*
                     s23 + 343*s13^2*s23^2 - 4*s13*s23^3 + 2*s23^4) + 
                  s23*(9*s13^5 - 123*s13^4*s23 + 15*s13^3*s23^2 + 254*s13^2*
                     s23^3 - 17*s13*s23^4 - 4*s23^5))) - p1q^4*s23*(
                p3q^4*(3*s12^5*(21*s13 + s23) - s12^4*(63*s13^2 + 330*s13*
                     s23 + 28*s23^2) + s13*s23^3*(19*s13^2 + 22*s13*s23 + 
                    35*s23^2) - s12*s23^2*(58*s13^3 + 61*s13^2*s23 + 
                    124*s13*s23^2 + 3*s23^3) + s12^3*(18*s13^3 + 55*s13^2*
                     s23 - 7*s13*s23^2 + 12*s23^3) + s12^2*s23*(-53*s13^3 + 
                    41*s13^2*s23 + 207*s13*s23^2 + 20*s23^3)) + p2q*p3q^3*
                 (s12^5*(45*s13 + 8*s23) - s12^4*(144*s13^2 + 557*s13*s23 + 
                    56*s23^2) - s13*s23^2*(108*s13^3 + 90*s13^2*s23 + 
                    175*s13*s23^2 - 31*s23^3) + s12^3*(189*s13^3 + 509*s13^2*
                     s23 + 778*s13*s23^2 + 38*s23^3) + 2*s12^2*(9*s13^4 + 
                    106*s13^3*s23 + 106*s13^2*s23^2 + 379*s13*s23^3 + 
                    10*s23^4) - s12*s23*(34*s13^4 - 74*s13^3*s23 + 114*s13^2*
                     s23^2 + 499*s13*s23^3 + 22*s23^4)) + p2q^4*
                 (s12^4*(36*s13^2 - 34*s13*s23 - 2*s23^2) + s12^3*(72*s13^3 - 
                    81*s13^2*s23 - 64*s13*s23^2 - 5*s23^3) + s13*s23*
                   (-44*s13^4 + 83*s13^3*s23 + 270*s13^2*s23^2 - 39*s13*
                     s23^3 - 22*s23^4) + s12^2*(63*s13^4 + 270*s13^3*s23 - 
                    226*s13^2*s23^2 - 107*s13*s23^3 - 10*s23^4) - 
                  s12*(45*s13^5 - 354*s13^4*s23 - 165*s13^3*s23^2 + 
                    34*s13^2*s23^3 + 97*s13*s23^4 + 3*s23^5)) + p2q^3*p3q*
                 (2*s12^5*(18*s13 + s23) - 2*s12^4*(45*s13^2 + 95*s13*s23 + 
                    3*s23^2) + s12^3*(-189*s13^3 - 258*s13^2*s23 + 116*s13*
                     s23^2 + 16*s23^3) + s12^2*(72*s13^4 - 177*s13^3*s23 - 
                    258*s13^2*s23^2 + 218*s13*s23^3 - 10*s23^4) + 
                  s12*(63*s13^5 + 89*s13^4*s23 - 200*s13^3*s23^2 + 398*s13^2*
                     s23^3 - 57*s13*s23^4 - 2*s23^5) + s23*(92*s13^5 + 
                    60*s13^4*s23 + 254*s13^3*s23^2 - 183*s13^2*s23^3 + 
                    15*s13*s23^4 + 4*s23^5)) + p2q^2*p3q^2*
                 (s12^5*(90*s13 + 7*s23) - s12^4*(63*s13^2 + 572*s13*s23 + 
                    32*s23^2) + s12^3*(-90*s13^3 + 133*s13^2*s23 + 227*s13*
                     s23^2 + 47*s23^3) + s12^2*s13*(-117*s13^3 + 52*s13^2*
                     s23 - 59*s13*s23^2 + 255*s23^3) + s12*(36*s13^5 - 
                    155*s13^4*s23 + 397*s13^3*s23^2 + 613*s13^2*s23^3 - 
                    479*s13*s23^4 - 18*s23^5) + s23*(91*s13^5 - 41*s13^4*
                     s23 + 154*s13^3*s23^2 - 197*s13^2*s23^3 + 33*s13*s23^4 + 
                    4*s23^5))) + p1q^3*(-(p3q^5*s23*(2*s12^5*(63*s13 + 
                     5*s23) + s13*s23^4*(s13 + 9*s23) - s12^4*(54*s13^2 + 
                     215*s13*s23 + 26*s23^2) - s12*s13*s23^2*(38*s13^2 + 
                     35*s13*s23 + 102*s23^2) + s12^3*(36*s13^3 + 11*s13^2*
                      s23 - 91*s13*s23^2 - 12*s23^3) + s12^2*s23*(2*s13^3 + 
                     38*s13^2*s23 + 129*s13*s23^2 + 9*s23^3))) - 
                p2q*p3q^4*(s12^5*(36*s13^2 + 252*s13*s23 + 26*s23^2) + 
                  s12^4*(36*s13^3 - 450*s13^2*s23 - 908*s13*s23^2 - 
                    64*s23^3) - s13*s23^3*(34*s13^3 + 34*s13^2*s23 + 
                    77*s13*s23^2 - 27*s23^3) + s12^3*s23*(198*s13^3 + 
                    245*s13^2*s23 - 56*s13*s23^2 + 4*s23^3) + s12^2*s23^2*
                   (207*s13^3 + 503*s13^2*s23 + 868*s13*s23^2 + 35*s23^3) + 
                  s12*s23^2*(18*s13^4 + 116*s13^3*s23 + 184*s13^2*s23^2 - 
                    131*s13*s23^3 - 4*s23^4)) + p2q^2*p3q^3*
                 (-2*s12^5*(36*s13^2 + 225*s13*s23 + 10*s23^2) + s12^4*s23*
                   (414*s13^2 + 909*s13*s23 + 62*s23^2) + s12^3*(72*s13^4 - 
                    198*s13^3*s23 - 713*s13^2*s23^2 + 190*s13*s23^3 - 
                    42*s23^4) + s12^2*s23*(378*s13^4 + 65*s13^3*s23 - 
                    167*s13^2*s23^2 - 803*s13*s23^3 - 40*s23^4) + s12*s23^2*
                   (431*s13^4 - 192*s13^3*s23 - 288*s13^2*s23^2 + 220*s13*
                     s23^3 + 8*s23^4) + s13*s23^2*(-52*s13^4 + 97*s13^3*s23 - 
                    107*s13^2*s23^2 + 140*s13*s23^3 + 12*s23^4)) - 
                p2q^5*(2*s12^4*s13*s23*(18*s13 + s23) + s12^3*s13*(36*s13^3 + 
                    82*s13*s23^2 + 13*s23^3) + s13*s23^2*(-9*s13^4 - 
                    196*s13^3*s23 + 11*s13^2*s23^2 + 87*s13*s23^3 + 
                    9*s23^4) + s12*s13*s23*(-18*s13^4 - 141*s13^3*s23 + 
                    139*s13^2*s23^2 + 262*s13*s23^3 + 15*s23^4) + 
                  s12^2*(36*s13^5 - 90*s13^4*s23 + 290*s13^3*s23^2 + 
                    165*s13^2*s23^3 + 21*s13*s23^4 - s23^5)) + p2q^4*p3q*
                 (2*s12^5*s23*(18*s13 + s23) + 3*s12^3*s23*(78*s13^3 + 
                    232*s13^2*s23 + 149*s13*s23^2 + 2*s23^3) + 4*s12^4*
                   (18*s13^3 + 90*s13^2*s23 + 91*s13*s23^2 + 3*s23^3) + 
                  s12*s23*(-180*s13^5 + 497*s13^4*s23 + 242*s13^3*s23^2 - 
                    71*s13^2*s23^3 + 176*s13*s23^4 + 4*s23^5) + 
                  s12^2*(-72*s13^5 + 54*s13^4*s23 + 181*s13^3*s23^2 + 
                    941*s13^2*s23^3 + 302*s13*s23^4 + 13*s23^5) + 
                  s13*s23*(36*s13^5 - 88*s13^4*s23 + 363*s13^3*s23^2 - 
                    83*s13^2*s23^3 - 113*s13*s23^4 + 17*s23^5)) + 
                p2q^3*p3q^2*(-2*s12^5*(18*s13^2 + 108*s13*s23 + s23^2) + 
                  6*s12^4*(18*s13^3 + 117*s13^2*s23 + 97*s13*s23^2 + 
                    6*s23^3) + s12^3*(108*s13^4 + 630*s13^3*s23 + 371*s13^2*
                     s23^2 + 289*s13*s23^3 - 20*s23^4) + s12^2*(-36*s13^5 + 
                    630*s13^4*s23 + 957*s13^3*s23^2 + 720*s13^2*s23^3 - 
                    281*s13*s23^4 - 2*s23^5) + s12*s23*(-126*s13^5 + 
                    1021*s13^4*s23 + 163*s13^3*s23^2 - 454*s13^2*s23^3 + 
                    130*s13*s23^4 + 8*s23^5) + s13*s23*(36*s13^5 - 77*s13^4*
                     s23 + 338*s13^3*s23^2 - 249*s13^2*s23^3 - 72*s13*s23^4 + 
                    20*s23^5))) + p1q^2*(p3q^6*s12*s23*
                 (-(s12^4*(108*s13 + 11*s23)) + s13*s23^3*(-7*s13 + 27*s23) + 
                  s12^3*(18*s13^2 + 61*s13*s23 + 4*s23^2) - s12*s13*s23*
                   (19*s13^2 + 13*s13*s23 + 99*s23^2) + s12^2*(-18*s13^3 + 
                    17*s13^2*s23 + 41*s13*s23^2 + 9*s23^3)) + p2q*p3q^5*
                 (36*s12^6*s13 + s13*s23^4*(2*s13^2 + 9*s13*s23 - 9*s23^2) - 
                  6*s12^5*(6*s13^2 + 69*s13*s23 + 5*s23^2) + 2*s12^3*s23*
                   (-45*s13^3 + 77*s13^2*s23 + 269*s13*s23^2 + 10*s23^3) + 
                  s12^4*(-72*s13^3 + 378*s13^2*s23 + 400*s13*s23^2 + 
                    24*s23^3) + s12*s13*s23^2*(2*s13^3 + 15*s13^2*s23 - 
                    71*s13*s23^2 + 41*s23^3) + s12^2*s23*(18*s13^4 + 
                    14*s13^3*s23 - 41*s13^2*s23^2 - 228*s13*s23^3 - 
                    8*s23^4)) + p2q^2*p3q^4*(72*s12^6*s13 - 6*s12^5*
                   (36*s13^2 + 129*s13*s23 + 4*s23^2) + s12^4*(-108*s13^3 + 
                    666*s13^2*s23 + 324*s13*s23^2 + 56*s23^3) + s13^2*s23^2*
                   (17*s13^3 + 98*s13^2*s23 + 60*s13*s23^2 + 91*s23^3) + 
                  s12*s13*s23*(18*s13^4 + 255*s13^3*s23 + 129*s13^2*s23^2 + 
                    37*s13*s23^3 + 6*s23^4) - s12^2*s23*(-288*s13^4 + 
                    177*s13^3*s23 + 358*s13^2*s23^2 + 375*s13*s23^3 + 
                    16*s23^4) + s12^3*(180*s13^4 - 630*s13^3*s23 - 571*s13^2*
                     s23^2 + 687*s13*s23^3 + 20*s23^4)) + p2q^6*s13*
                 (s12^3*s13*(-72*s13^2 + 54*s13*s23 + 17*s23^2) + 
                  s12^2*(-36*s13^4 + 36*s13^3*s23 + 83*s13^2*s23^2 + 
                    25*s13*s23^3 - 2*s23^4) + s12*s13*(36*s13^4 - 180*s13^3*
                     s23 + 211*s13^2*s23^2 + 266*s13*s23^3 + 21*s23^4) + 
                  s13*s23*(18*s13^4 - 143*s13^3*s23 + 29*s13^2*s23^2 + 
                    169*s13*s23^3 + 27*s23^4)) + p2q^5*p3q*(4*s12^4*s13*
                   (45*s13^2 + 9*s13*s23 + 4*s23^2) - s12^3*(108*s13^4 + 
                    198*s13^3*s23 + 288*s13^2*s23^2 + 9*s13*s23^3 + 
                    2*s23^4) - s12^2*s13*(216*s13^4 - 90*s13^3*s23 + 
                    384*s13^2*s23^2 + 298*s13*s23^3 + 5*s23^4) + s13*s23*
                   (54*s13^5 - 318*s13^4*s23 + 233*s13^3*s23^2 + 339*s13^2*
                     s23^3 - 67*s13*s23^4 - 9*s23^5) + s12*s13*(72*s13^5 - 
                    666*s13^4*s23 + 610*s13^3*s23^2 + 190*s13^2*s23^3 - 
                    297*s13*s23^4 + 5*s23^5)) + p2q^3*p3q^3*(36*s12^6*s13 - 
                  2*s12^5*(162*s13^2 + 279*s13*s23 + s23^2) + 2*s12^4*
                   (90*s13^3 + 495*s13^2*s23 + 106*s13*s23^2 + 28*s23^3) + 
                  s12^3*(396*s13^4 - 432*s13^3*s23 - 454*s13^2*s23^2 + 
                    419*s13*s23^3 + 14*s23^4) + s12*s13*s23*(-234*s13^4 + 
                    872*s13^3*s23 + 15*s13^2*s23^2 - 44*s13*s23^3 + 
                    38*s23^4) - s13*s23*(18*s13^5 + 106*s13^4*s23 - 
                    191*s13^3*s23^2 + 65*s13^2*s23^3 + 38*s13*s23^4 - 
                    18*s23^5) - s12^2*(144*s13^5 - 1044*s13^4*s23 - 
                    166*s13^3*s23^2 + 165*s13^2*s23^3 + 247*s13*s23^4 + 
                    8*s23^5)) + p2q^4*p3q^2*(-3*s12^5*(48*s13^2 + 30*s13*
                     s23 - s23^2) + s12^4*(396*s13^3 + 720*s13^2*s23 + 
                    279*s13*s23^2 + 20*s23^3) + s13^2*s23*(18*s13^4 - 
                    262*s13^3*s23 + 405*s13^2*s23^2 + 155*s13*s23^3 - 
                    178*s23^4) + s12^3*(180*s13^4 - 126*s13^3*s23 + 
                    93*s13^2*s23^2 + 328*s13*s23^3 + 3*s23^4) + s12^2*s13*
                   (-324*s13^4 + 828*s13^3*s23 + 125*s13^2*s23^2 + 166*s13*
                     s23^3 + 104*s23^4) + s12*s13*(36*s13^5 - 738*s13^4*s23 + 
                    1162*s13^3*s23^2 + 149*s13^2*s23^3 - 247*s13*s23^4 + 
                    87*s23^5)))))/(8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
             s13*s23^2*(p1q^5*s23^3*(s12 + s23)*(s13 + s23) + 
              (p2q + p3q)*(s12 + s13)*(p3q*s12 - p2q*s13)^2*(p3q^2*s12*
                 (s12 + s23) + p2q^2*s13*(s13 + s23) - p2q*p3q*
                 (s23*(s13 + s23) + s12*(2*s13 + s23))) - p1q^4*s23^2*(
                p2q*(s13 + s23)*(s12^2 + 3*s12*s13 + (4*s13 - s23)*s23) + 
                p3q*(s12^2*(3*s13 + 4*s23) + s23*(s13^2 - s23^2) + 
                  s12*(s13^2 + 3*s13*s23 + 3*s23^2))) + p1q^3*s23*(
                p3q^2*(s12 + s23)*(-(s13*s23*(s13 + s23)) + 3*s12^2*
                   (s13 + 2*s23) + 2*s12*(s13^2 - 2*s23^2)) + 
                p2q^2*(s13 + s23)*(s12^2*(2*s13 - s23) + 2*s13*(3*s13 - 
                    2*s23)*s23 + s12*(3*s13^2 - s23^2)) + p2q*p3q*
                 (s12^3*(2*s13 + 3*s23) + s12^2*(2*s13^2 + 3*s13*s23 - 
                    s23^2) + s12*(2*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 - 
                    3*s23^3) + s23*(3*s13^3 - s13^2*s23 - 3*s13*s23^2 + 
                    s23^3))) + p1q*(p2q^4*s13^2*(s13 + s23)*(-s12^2 + 
                  s13*(s13 - 4*s23) - 3*s12*s23) + p3q^4*s12^2*(s12 + s23)*
                 (s12^2 - 4*s12*s23 - s13*(s13 + 3*s23)) + p2q*p3q^3*s12*
                 (s12^4 - s12^2*(s13 - s23)^2 - 3*s12^3*(s13 + s23) + 
                  2*s13*s23*(s13^2 + s13*s23 + s23^2) + 3*s12*(s13^3 + 
                    s13^2*s23 + s13*s23^2 + s23^3)) + p2q^2*p3q^2*
                 (-(s12^4*(3*s13 + s23)) + s12^3*(3*s13^2 + 3*s13*s23 + 
                    s23^2) + s13^2*s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12^2*(3*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 2*s23^3) + 
                  s12*s13*(-3*s13^3 + 3*s13^2*s23 + 2*s13*s23^2 + 2*s23^3)) + 
                p2q^3*p3q*s13*(s12^3*(3*s13 + 2*s23) + s12^2*(-s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12*(-3*s13^3 + 2*s13^2*s23 + 
                    3*s13*s23^2 + 2*s23^3) + s13*(s13^3 - 3*s13^2*s23 - 
                    s13*s23^2 + 3*s23^3))) + p1q^2*(-(p3q^3*s12*(s12 + s23)*
                  (-(s13*s23*(2*s13 + 3*s23)) + s12^2*(s13 + 4*s23) + 
                   s12*(s13^2 - 6*s23^2))) - p2q^3*s13*(s13 + s23)*
                 (s12^2*(s13 - 2*s23) + 2*s13*(2*s13 - 3*s23)*s23 + 
                  s12*(s13^2 - 3*s23^2)) + p2q*p3q^2*(-(s12^4*(s13 + 
                     3*s23)) + s13*s23^2*(2*s13^2 + s13*s23 - s23^2) + 
                  s12^3*(s13^2 + 3*s13*s23 + 3*s23^2) + s12*s23*(2*s13^3 + 
                    2*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) + s12^2*(2*s13^3 + 
                    2*s13^2*s23 + 2*s13*s23^2 + 3*s23^3)) + p2q^2*p3q*
                 (-3*s13*(s13 - s23)^2*s23*(s13 + s23) + 2*s12^3*(s13^2 + 
                    s13*s23 + s23^2) + s12^2*(s13^3 + 2*s13^2*s23 + 
                    2*s13*s23^2 + s23^3) - s12*(s13^4 - 3*s13^3*s23 - 
                    2*s13^2*s23^2 - 3*s13*s23^3 + s23^4))))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (((s12 + s13 + s23)^2*(-9*p3q*s12 + p1q*s23)*(-(p2q*s13) + 
          p1q*(s12 + s23) + p3q*(s12 + s23))*E0 . E0conj)/
        (8*p1q*s12*s13*s23) + 
       ((ep*p1q*(s12 + s13 + s23)*(p2q^3*s13^2*(s12 + s13)*(9*s12 - s23) + 
            p3q^3*s12*(8*s12 - s13)*s23*(s12 + s23) - p1q^3*(8*s12 - s13)*
             s23^2*(s12 + s23) - p2q^2*p3q*s13*(18*s12^3 + s13*(s13 - s23)*
               s23 + s12*(17*s13 - s23)*s23 + s12^2*(18*s13 + 25*s23)) + 
            p2q*p3q^2*(9*s12^4 + s13^2*s23^2 + s12*s13*s23*(2*s13 + 9*s23) + 
              s12^2*s23*(10*s13 + 17*s23) + s12^3*(9*s13 + 26*s23)) + 
            p1q*(p3q^2*(8*s12 - s13)*s23*(2*s12^2 + s12*s23 - s23^2) + 
              p2q^2*s13*(-9*s12^3 + s12*s23*(-23*s13 + 2*s23) + 
                s13*s23*(s13 + 2*s23) - 3*s12^2*(3*s13 + 5*s23)) + 
              p2q*p3q*(9*s12^4 - s13*s23^2*(s13 + s23) + s12^2*s23*
                 (25*s13 + 23*s23) + s12^3*(9*s13 + 33*s23) + s12*s23*
                 (s13^2 + 31*s13*s23 - s23^2))) + 
            p1q^2*(p3q*(8*s12 - s13)*s23*(s12^2 - s12*s23 - 2*s23^2) - 
              p2q*s23*(-7*s12^3 + s13*s23*(2*s13 + s23) - 3*s12^2*
                 (5*s13 + 2*s23) + s12*(s13^2 - 22*s13*s23 + s23^2)))))/
          (4*(p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
             2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         ((s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s23^3*(s12 + s23)*
             (10*s12 + s13 + 2*s23) + 18*p2q*(p2q + p3q)^2*s12*s13*
             (p3q*s12 - p2q*s13)^2*(p2q*s13 - p3q*(s12 + s23)) + 
            p1q^3*s23*(p3q^3*(s12 + s23)*(18*s12^3 + 2*s12^2*(9*s13 - 
                  19*s23) + s23^2*(s13 + 2*s23) - 2*s12*s23*(19*s13 + 
                  15*s23)) + p2q^2*p3q*(27*s12^4 + s12^3*(36*s13 + 31*s23) + 
                s12*s23*(86*s13^2 - 99*s13*s23 - 7*s23^2) + s13*s23*
                 (s13^2 + 3*s13*s23 - 7*s23^2) + s12^2*(45*s13^2 - 
                  32*s13*s23 - 3*s23^2)) + p2q^3*s13*(9*s12^3 + 
                s12*(85*s13 - 18*s23)*s23 + s12^2*(45*s13 + s23) + 
                s23*(s13^2 + 4*s13*s23 - 2*s23^2)) + p2q*p3q^2*(27*s12^4 + 
                s12^3*(45*s13 + 11*s23) + s12^2*(18*s13^2 + 19*s13*s23 - 
                  17*s23^2) + s12*s23*(37*s13^2 - 46*s13*s23 + s23^2) + 
                s23^2*(-s13^2 - 4*s13*s23 + 2*s23^2))) - p1q^4*s23^2*
             (p3q^2*(s12 + s23)*(28*s12^2 + 19*s12*s13 - 2*s23*(s13 + 
                  2*s23)) + p2q*p3q*(21*s12^3 + s12^2*(40*s13 + 6*s23) + 
                s12*(s13^2 + 51*s13*s23 - 19*s23^2) + s23*(2*s13^2 + 
                  3*s13*s23 - 4*s23^2)) + p2q^2*(11*s12^3 + s13*s23*
                 (2*s13 + 5*s23) + s12^2*(39*s13 + 14*s23) + 
                s12*(s13^2 + 52*s13*s23 + 3*s23^2))) - 
            2*p1q*(-9*p3q^5*s12^2*s23*(s12 + s23)*(s12 + s13 + s23) + 
              p2q^5*s13^3*(9*s12^2 - 9*s12*(s13 - 3*s23) + s23^2) + 
              p2q*p3q^4*s12*(18*s12^3*(s13 - s23) + 18*s12^2*(s13 - 2*s23)*
                 s23 + s13*s23^2*(9*s13 + 10*s23) + 2*s12*s23*(9*s13^2 + 
                  5*s13*s23 - 9*s23^2)) + p2q^2*p3q^3*(9*s12^4*(3*s13 - 
                  2*s23) - s13^2*s23^3 + s12^2*s23*(-45*s13^2 + 2*s13*s23 - 
                  18*s23^2) + s12*s13*s23*(-9*s13^2 - 29*s13*s23 + 2*s23^2) - 
                9*s12^3*(5*s13^2 - 3*s13*s23 + 4*s23^2)) + p2q^3*p3q^2*s13*(
                9*s12^4 - 9*s12^3*(7*s13 - 3*s23) + s13*(s13 - 2*s23)*s23^2 + 
                s12*s23*(36*s13^2 - 40*s13*s23 + s23^2) + s12^2*(36*s13^2 - 
                  72*s13*s23 + 19*s23^2)) - p2q^4*p3q*s13^2*(18*s12^3 - 
                9*s12^2*(5*s13 - 4*s23) + s23^2*(-2*s13 + s23) + 
                s12*(9*s13^2 - 63*s13*s23 + 20*s23^2))) + 
            p1q^2*(p3q^4*s12*s23*(s12 + s23)*(36*s12^2 + 36*s12*s13 + 
                8*s12*s23 - 19*s13*s23 - 20*s23^2) - p2q^3*p3q*s13*(
                18*s12^3*(-2*s13 + s23) + s23^2*(2*s13^2 - 7*s13*s23 + 
                  2*s23^2) + 9*s12^2*(2*s13^2 - 13*s13*s23 + 3*s23^2) + 
                s12*s23*(63*s13^2 - 172*s13*s23 + 19*s23^2)) + 
              p2q*p3q^3*(-9*s12^4*(2*s13 - 7*s23) + s13^2*s23^3 + 
                s12^3*s23*(27*s13 + 104*s23) - 2*s12*s23^2*(-10*s13^2 + 
                  7*s13*s23 + 3*s23^2) + s12^2*s23*(-18*s13^2 + 39*s13*s23 + 
                  35*s23^2)) + p2q^4*s13^2*(-9*s12^2*(2*s13 - 3*s23) + 
                s23^2*(-s13 + 4*s23) + s12*(-63*s13*s23 + 57*s23^2)) + 
              p2q^2*p3q^2*(-9*s12^4*(2*s13 - 7*s23) - s13*s23^2*(s13^2 - 
                  4*s13*s23 + 2*s23^2) + 3*s12^3*(12*s13^2 + 9*s13*s23 + 
                  38*s23^2) + s12^2*s23*(72*s13^2 + 13*s13*s23 + 47*s23^2) - 
                s12*s23*(18*s13^3 - 99*s13^2*s23 + 50*s13*s23^2 + 
                  4*s23^3)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
           s23^2*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj*p2 . E0 + 
       ((ep*p1q*(s12 + s13 + s23)*(-(p1q^3*(7*s12 - 2*s13)*s23^2*
              (s12 + s23)) - 9*(p2q + p3q)*s12*(s12 + s13)*(-(p3q*s12) + 
              p2q*s13)*(-(p2q*s13) + p3q*(s12 + s23)) + 
            p1q^2*s23*(-(p3q*(s12 + s23)*(2*s12^2 + 2*s13*(s13 - s23) + 
                 s12*(-5*s13 + 7*s23))) + p2q*(7*s12^3 - 4*s13^2*s23 + 
                7*s12^2*(2*s13 + s23) + s12*s13*(-2*s13 + 21*s23))) + 
            p1q*(p3q^2*(s12 + s23)*(9*s12^3 + s12^2*(9*s13 - 2*s23) + 
                5*s12*s13*s23 - 2*s13^2*s23) - p2q^2*s13*(9*s12^3 + 
                23*s12*s13*s23 - 2*s13^2*s23 + s12^2*(9*s13 + 16*s23)) + 
              p2q*p3q*(9*s12^4 + 16*s12^3*s23 - 2*s12*s13*(8*s13 - 7*s23)*
                 s23 + 2*s13^2*(s13 - s23)*s23 + s12^2*(-9*s13^2 + 
                  16*s13*s23 + 7*s23^2)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) + ((s12 + s13 + s23)*
           (p1q^5*(p2q + p3q)*s23^3*(s12 + s23)*(11*s12 + 2*s13 + 4*s23) - 
            18*(p2q + p3q)^2*s12*(p3q*s12 - p2q*s13)^2*(-(p2q*s13) + 
              p3q*(s12 + s23))*(p2q*s13 + p3q*(s13 + s23)) - 
            p1q^4*s23^2*(p3q^2*(s12 + s23)*(38*s12^2 + 49*s12*s13 + 2*s13^2 + 
                29*s12*s23 - 6*s23^2) + p2q^2*(11*s12^3 + s12^2*(40*s13 + 
                  13*s23) + s12*s13*(2*s13 + 55*s23) - 2*s23*(-2*s13^2 - 
                  4*s13*s23 + s23^2)) + p2q*p3q*(31*s12^3 + s12^2*
                 (71*s13 + 44*s23) + 2*s23*(3*s13^2 + 4*s13*s23 - 4*s23^2) + 
                s12*(4*s13^2 + 86*s13*s23 + 5*s23^2))) - 2*p1q*(p2q + p3q)*
             (p2q^4*s13^3*(9*s12^2 - 9*s12*(s13 - 3*s23) + s23^2) + 
              p3q^4*s12^2*(s12 + s23)*(9*s12*(2*s13 + s23) - 
                s23*(18*s13 + 19*s23)) + p2q^2*p3q^2*s13*(9*s12^4 - 
                s13*s23^3 - 9*s12^3*(7*s13 + s23) + s12*s23*(36*s13^2 - 
                  3*s13*s23 - 16*s23^2) + 3*s12^2*(12*s13^2 - 9*s13*s23 - 
                  8*s23^2)) + p2q^3*p3q*s13^2*(-18*s12^3 + 9*s12^2*
                 (5*s13 - 2*s23) + (s13 - s23)*s23^2 + s12*(-9*s13^2 + 
                  54*s13*s23 + 6*s23^2)) + p2q*p3q^3*s12*(27*s12^3*s13 - 
                2*s13*s23^2*(9*s13 + 8*s23) - s12^2*(45*s13^2 + 36*s13*s23 + 
                  19*s23^2) - s12*s23*(36*s13^2 + 60*s13*s23 + 19*s23^2))) + 
            p1q^3*s23*(p2q^3*s13*(9*s12^3 + 45*s12^2*s13 + s12*(85*s13 - 
                  22*s23)*s23 + 2*s23*(s13^2 + 2*s13*s23 - 3*s23^2)) + 
              p3q^3*(s12 + s23)*(27*s12^3 + s12^2*(81*s13 - 2*s23) + 
                s12*(36*s13^2 - 33*s13*s23 - 62*s23^2) + 2*s23*(-s13^2 - 
                  s13*s23 + s23^2)) + p2q^2*p3q*(27*s12^4 + s12^3*
                 (63*s13 + 32*s23) + s12*s23*(157*s13^2 - 56*s13*s23 - 
                  22*s23^2) + s12^2*(90*s13^2 + 26*s13*s23 - 19*s23^2) + 
                2*s23*(2*s13^3 + s13^2*s23 - 8*s13*s23^2 + s23^3)) + 
              p2q*p3q^2*(36*s12^4 + s12^3*(99*s13 + 39*s23) + 
                s12^2*(63*s13^2 + 56*s13*s23 - 65*s23^2) + s12*s23*
                 (106*s13^2 - 51*s13*s23 - 64*s23^2) + 2*s23*(s13^3 - 
                  2*s13^2*s23 - 6*s13*s23^2 + 2*s23^3))) + 
            p1q^2*(p2q^4*s13^2*(-9*s12^2*(2*s13 - 3*s23) + 6*s23^3 + 
                s12*s23*(-63*s13 + 58*s23)) + p3q^4*s12*(s12 + s23)*(
                -9*s12^2*(2*s13 - 3*s23) + s12*s23*(117*s13 + 74*s23) + 
                2*s23*(18*s13^2 + 8*s13*s23 - 11*s23^2)) + p2q^3*p3q*s13*(
                36*s12^3*s13 + 2*s23^2*(s13^2 + 6*s13*s23 - 2*s23^2) + 
                s12^2*(-36*s13^2 + 108*s13*s23 + 23*s23^2) + s12*s23*
                 (-126*s13^2 + 167*s13*s23 + 30*s23^2)) + p2q*p3q^3*(
                -2*s13*s23^3*(s13 + 2*s23) + s12^4*(-36*s13 + 54*s23) + 
                s12^2*s23*(54*s13^2 + 211*s13*s23 + 66*s23^2) + 
                2*s12^3*(18*s13^2 + 81*s13*s23 + 82*s23^2) + s12*s23*
                 (-36*s13^3 + 81*s13^2*s23 + 40*s13*s23^2 - 44*s23^3)) + 
              p2q^2*p3q^2*(-9*s12^4*(2*s13 - 5*s23) + 2*s13*s23^2*
                 (s13^2 + 2*s13*s23 - 4*s23^2) + 9*s12^3*(8*s13^2 + 
                  13*s13*s23 + 11*s23^2) + s12*s23*(-81*s13^3 + 190*s13^2*
                   s23 + 72*s13*s23^2 - 22*s23^3) + s12^2*(-18*s13^3 + 
                  153*s13^2*s23 + 173*s13*s23^2 + 32*s23^3)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((ep*(s12 + s13 + s23)*(-(p1q^4*s23^2*(9*s12^2 + 10*s12*s23 + 
                 s23^2)) + p1q^3*s23*(2*p3q*(9*s12^3 + s12^2*s23 - 
                  9*s12*s23^2 - s23^3) + p2q*(7*s12^3 + s12*(25*s13 - 3*s23)*
                   s23 + (s13 - s23)*s23^2 + s12^2*(16*s13 + 5*s23))) - 
              (p3q*s12 - p2q*s13)*(p2q^3*s13^2*s23 + p3q^3*s12*(9*s12^2 + 
                  10*s12*s23 + s23^2) + p2q^2*p3q*s13*((s13 - s23)*s23 + 
                  s12*(9*s13 + 7*s23)) - p2q*p3q^2*(s13*s23^2 + 2*s12^2*
                   (9*s13 + 4*s23) + s12*s23*(11*s13 + 8*s23))) + 
              p1q*(2*p3q^3*s12*(-9*s12^3 - s12^2*s23 + 9*s12*s23^2 + s23^3) + 
                p2q^3*s13^2*(9*s12^2 + s12*(9*s13 - 3*s23) - 
                  s23*(s13 + 3*s23)) - 2*p2q^2*p3q*s13*(9*s12^3 - s23^3 + 
                  6*s12*s23*(3*s13 + s23) + 6*s12^2*(3*s13 + 4*s23)) + 
                3*p2q*p3q^2*s12*(3*s12^3 + 3*s23^2*(2*s13 + s23) + 
                  s12*s23*(13*s13 + 17*s23) + s12^2*(15*s13 + 17*s23))) + 
              p1q^2*(-(p3q^2*(9*s12^4 - 26*s12^3*s23 - 30*s12^2*s23^2 + 
                   6*s12*s23^3 + s23^4)) + p2q^2*s13*(-9*s12^3 + 6*s12*s23*
                   (-4*s13 + s23) + s23^2*(s13 + 3*s23) - s12^2*(9*s13 + 
                    14*s23)) + p2q*p3q*(9*s12^4 + (s13 - s23)*s23^3 + 
                  s12*s23^2*(41*s13 + 6*s23) + 2*s12^2*s23*(17*s13 + 
                    24*s23) + 2*s12^3*(9*s13 + 25*s23)))))/
            (4*(p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - 
                p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           ((s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s23^3*(9*s12^2 + 
                10*s12*s23 + s23^2) + 18*p2q^2*s12*(p2q^4*s13^4 + 
                p2q^3*p3q*s13^3*(-3*s12 + s13 - 2*s23) + p2q^2*p3q^2*s13^2*
                 (3*s12^2 - 3*s12*s13 + 5*s12*s23 - s13*s23 + 2*s23^2) + 
                p3q^4*s12*(s12 + s23)*(s23^2 + s12*(-s13 + s23)) - 
                p2q*p3q^3*s13*(s12^3 - 2*s12*(s13 - 2*s23)*s23 + s23^3 + 
                  s12^2*(-3*s13 + 4*s23))) - p1q^4*s23^2*(p2q*p3q*
                 (11*s12^3 + s12^2*(20*s13 - 19*s23) + s12*(33*s13 - 31*s23)*
                   s23 + (5*s13 - s23)*s23^2) + 2*p3q^2*(9*s12^3 + 
                  s12^2*s23 - 9*s12*s23^2 - s23^3) + p2q^2*(11*s12^3 + 
                  s23^2*(5*s13 + s23) + s12*s23*(51*s13 + 5*s23) + 
                  s12^2*(38*s13 + 15*s23))) + p1q^3*s23*(p3q^3*(9*s12^4 - 
                  26*s12^3*s23 - 30*s12^2*s23^2 + 6*s12*s23^3 + s23^4) + 
                p2q^3*s13*(9*s12^3 + 2*s12*(43*s13 - 8*s23)*s23 + 
                  (7*s13 - s23)*s23^2 + s12^2*(45*s13 + 2*s23)) + 
                p2q*p3q^2*(18*s12^4 + 30*s12^2*s23*(s13 + 2*s23) - 
                  s23^3*(9*s13 + 2*s23) + 2*s12^3*(9*s13 + 11*s23) + 
                  3*s12*s23^2*(-7*s13 + 18*s23)) + p2q^2*p3q*(27*s12^4 + 
                  s12^2*s13*(9*s13 - 94*s23) + s12^3*(9*s13 + 30*s23) + 
                  s12*s23*(32*s13^2 - 145*s13*s23 - 6*s23^2) + s23^2*
                   (7*s13^2 - 10*s13*s23 - 3*s23^2))) + p1q^2*(2*p3q^4*s12*
                 s23*(9*s12^3 + s12^2*s23 - 9*s12*s23^2 - s23^3) + 
                p2q*p3q^3*s23*(45*s12^4 - 2*s23^3*(2*s13 + s23) + 
                  3*s12^3*(9*s13 + 35*s23) + s12*s23^2*(46*s13 + 67*s23) + 
                  s12^2*s23*(101*s13 + 129*s23)) - p2q^2*p3q^2*
                 (9*s12^4*(2*s13 - 9*s23) + s12^3*(45*s13 - 157*s23)*s23 + 
                  s12^2*s23*(36*s13^2 + 149*s13*s23 - 93*s23^2) + s12*s23^2*
                   (28*s13^2 + 168*s13*s23 - 15*s23^2) + 2*s23^3*(-4*s13^2 + 
                    3*s13*s23 + s23^2)) - p2q^3*p3q*s13*(-36*s12^3*
                   (s13 - s23) + 5*s12^2*s23*(-27*s13 + 14*s23) + 
                  s23^2*(3*s13^2 - 13*s13*s23 + 2*s23^2) + s12*s23*
                   (9*s13^2 - 191*s13*s23 + 52*s23^2)) + p2q^4*s13^2*
                 (-9*s12^2*(2*s13 - 3*s23) + s23^2*(-3*s13 + 5*s23) + 
                  s12*(-63*s13*s23 + 57*s23^2))) + p1q*(-3*p2q^5*s13^3*
                 (6*s12^2 - 6*s12*(s13 - 3*s23) + s23^2) + p3q^5*s12^2*s23*
                 (9*s12^2 + 10*s12*s23 + s23^2) + p2q*p3q^4*s12*s23*
                 (27*s12^3 + 34*s23^2*(s13 + s23) + 9*s12^2*(s13 + 8*s23) + 
                  s12*s23*(51*s13 + 79*s23)) + p2q^4*p3q*s13^2*(36*s12^3 - 
                  36*s12^2*(2*s13 - 3*s23) + s23^2*(-4*s13 + 5*s23) + 
                  s12*s23*(-99*s13 + 86*s23)) + p2q^3*p3q^2*s13*(-18*s12^4 + 
                  18*s12^3*(5*s13 - 7*s23) + s12^2*(153*s13 - 163*s23)*s23 + 
                  s12*s23*(27*s13^2 + 116*s13*s23 - 65*s23^2) - 
                  s23^2*(s13^2 - 6*s13*s23 + 2*s23^2)) + p2q^2*p3q^3*
                 (-36*s12^4*(s13 - 2*s23) + s13*(s13 - 2*s23)*s23^3 + 
                  s12^3*s23*(-81*s13 + 152*s23) + s12*s23^2*(-60*s13^2 - 
                    85*s13*s23 + 16*s23^2) + s12^2*s23*(-45*s13^2 - 
                    112*s13*s23 + 96*s23^2)))))/(4*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13*s23^2*(p3q^2*s12^2 + (p2q*s13 - 
                p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj + 
         ((ep*p1q*(s12 + s13 + s23)*(p2q^3*s13^2*(s12 + s13)*(9*s12 - s23) + 
              p3q^3*s12*(8*s12 - s13)*s23*(s12 + s23) - p1q^3*(8*s12 - s13)*
               s23^2*(s12 + s23) - p2q^2*p3q*s13*(18*s12^3 + s13*(s13 - s23)*
                 s23 + s12*(17*s13 - s23)*s23 + s12^2*(18*s13 + 25*s23)) + 
              p2q*p3q^2*(9*s12^4 + s13^2*s23^2 + s12*s13*s23*(2*s13 + 
                  9*s23) + s12^2*s23*(10*s13 + 17*s23) + s12^3*(9*s13 + 
                  26*s23)) + p1q*(p3q^2*(8*s12 - s13)*s23*(2*s12^2 + 
                  s12*s23 - s23^2) + p2q^2*s13*(-9*s12^3 + s12*s23*
                   (-23*s13 + 2*s23) + s13*s23*(s13 + 2*s23) - 3*s12^2*
                   (3*s13 + 5*s23)) + p2q*p3q*(9*s12^4 - s13*s23^2*
                   (s13 + s23) + s12^2*s23*(25*s13 + 23*s23) + s12^3*
                   (9*s13 + 33*s23) + s12*s23*(s13^2 + 31*s13*s23 - 
                    s23^2))) + p1q^2*(p3q*(8*s12 - s13)*s23*(s12^2 - 
                  s12*s23 - 2*s23^2) - p2q*s23*(-7*s12^3 + s13*s23*
                   (2*s13 + s23) - 3*s12^2*(5*s13 + 2*s23) + s12*(s13^2 - 
                    22*s13*s23 + s23^2)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) + ((s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s23^3*(
                s12 + s23)*(10*s12 + s13 + 2*s23) + 18*p2q*(p2q + p3q)^2*s12*
               s13*(p3q*s12 - p2q*s13)^2*(p2q*s13 - p3q*(s12 + s23)) + 
              p1q^3*s23*(p3q^3*(s12 + s23)*(18*s12^3 + 2*s12^2*(9*s13 - 
                    19*s23) + s23^2*(s13 + 2*s23) - 2*s12*s23*(19*s13 + 
                    15*s23)) + p2q^2*p3q*(27*s12^4 + s12^3*(36*s13 + 
                    31*s23) + s12*s23*(86*s13^2 - 99*s13*s23 - 7*s23^2) + 
                  s13*s23*(s13^2 + 3*s13*s23 - 7*s23^2) + s12^2*(45*s13^2 - 
                    32*s13*s23 - 3*s23^2)) + p2q^3*s13*(9*s12^3 + 
                  s12*(85*s13 - 18*s23)*s23 + s12^2*(45*s13 + s23) + 
                  s23*(s13^2 + 4*s13*s23 - 2*s23^2)) + p2q*p3q^2*(27*s12^4 + 
                  s12^3*(45*s13 + 11*s23) + s12^2*(18*s13^2 + 19*s13*s23 - 
                    17*s23^2) + s12*s23*(37*s13^2 - 46*s13*s23 + s23^2) + 
                  s23^2*(-s13^2 - 4*s13*s23 + 2*s23^2))) - p1q^4*s23^2*(
                p3q^2*(s12 + s23)*(28*s12^2 + 19*s12*s13 - 2*s23*(s13 + 
                    2*s23)) + p2q*p3q*(21*s12^3 + s12^2*(40*s13 + 6*s23) + 
                  s12*(s13^2 + 51*s13*s23 - 19*s23^2) + s23*(2*s13^2 + 
                    3*s13*s23 - 4*s23^2)) + p2q^2*(11*s12^3 + s13*s23*
                   (2*s13 + 5*s23) + s12^2*(39*s13 + 14*s23) + 
                  s12*(s13^2 + 52*s13*s23 + 3*s23^2))) - 
              2*p1q*(-9*p3q^5*s12^2*s23*(s12 + s23)*(s12 + s13 + s23) + 
                p2q^5*s13^3*(9*s12^2 - 9*s12*(s13 - 3*s23) + s23^2) + 
                p2q*p3q^4*s12*(18*s12^3*(s13 - s23) + 18*s12^2*(s13 - 2*s23)*
                   s23 + s13*s23^2*(9*s13 + 10*s23) + 2*s12*s23*(9*s13^2 + 
                    5*s13*s23 - 9*s23^2)) + p2q^2*p3q^3*(9*s12^4*(3*s13 - 
                    2*s23) - s13^2*s23^3 + s12^2*s23*(-45*s13^2 + 2*s13*s23 - 
                    18*s23^2) + s12*s13*s23*(-9*s13^2 - 29*s13*s23 + 
                    2*s23^2) - 9*s12^3*(5*s13^2 - 3*s13*s23 + 4*s23^2)) + 
                p2q^3*p3q^2*s13*(9*s12^4 - 9*s12^3*(7*s13 - 3*s23) + 
                  s13*(s13 - 2*s23)*s23^2 + s12*s23*(36*s13^2 - 40*s13*s23 + 
                    s23^2) + s12^2*(36*s13^2 - 72*s13*s23 + 19*s23^2)) - 
                p2q^4*p3q*s13^2*(18*s12^3 - 9*s12^2*(5*s13 - 4*s23) + 
                  s23^2*(-2*s13 + s23) + s12*(9*s13^2 - 63*s13*s23 + 
                    20*s23^2))) + p1q^2*(p3q^4*s12*s23*(s12 + s23)*
                 (36*s12^2 + 36*s12*s13 + 8*s12*s23 - 19*s13*s23 - 
                  20*s23^2) - p2q^3*p3q*s13*(18*s12^3*(-2*s13 + s23) + 
                  s23^2*(2*s13^2 - 7*s13*s23 + 2*s23^2) + 9*s12^2*(2*s13^2 - 
                    13*s13*s23 + 3*s23^2) + s12*s23*(63*s13^2 - 172*s13*s23 + 
                    19*s23^2)) + p2q*p3q^3*(-9*s12^4*(2*s13 - 7*s23) + 
                  s13^2*s23^3 + s12^3*s23*(27*s13 + 104*s23) - 2*s12*s23^2*
                   (-10*s13^2 + 7*s13*s23 + 3*s23^2) + s12^2*s23*(-18*s13^2 + 
                    39*s13*s23 + 35*s23^2)) + p2q^4*s13^2*(-9*s12^2*
                   (2*s13 - 3*s23) + s23^2*(-s13 + 4*s23) + 
                  s12*(-63*s13*s23 + 57*s23^2)) + p2q^2*p3q^2*
                 (-9*s12^4*(2*s13 - 7*s23) - s13*s23^2*(s13^2 - 4*s13*s23 + 
                    2*s23^2) + 3*s12^3*(12*s13^2 + 9*s13*s23 + 38*s23^2) + 
                  s12^2*s23*(72*s13^2 + 13*s13*s23 + 47*s23^2) - s12*s23*
                   (18*s13^3 - 99*s13^2*s23 + 50*s13*s23^2 + 4*s23^3)))))/
            (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))))*p2 . E0conj))*Int[DS[k]*DS[k + p1 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-9*(p3q*s12 + p2q*s13)*(s12 + s13 + s23)^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)*E0 . E0conj)/(8*p1q*s12*s13*s23) + 
       ((9*ep*p1q*(s12 + s13 + s23)*((p1q + p3q)*s12*s23*(-(p3q*s12) + 
              p1q*s23)*(-(p3q*(s12 + s13)) + p1q*s23) - p2q^3*s13*(s12 + s13)*
             (s12^2 + s13*(-s13 + s23)) + p2q*(p1q^2*(-2*s12^2 - 4*s12*s13 + 
                s13*(s13 - s23))*s23^2 + p1q*p3q*(s12 + s13)*s23*(s12^2 + 
                4*s12*s13 - s13^2 - 3*s12*s23 + 3*s13*s23) + p3q^2*(s12 + 
                s13)*(s12^3 - s12*s13^2 + 3*s12^2*s23 - 2*s13^2*s23)) + 
            p2q^2*(p3q*(s12 + s13)*(s12^3 - s12*s13^2 + s13^2*(s13 - 3*s23) - 
                s12^2*(s13 - 2*s23)) + p1q*s23*(s12^3 + 5*s12^2*s13 + 
                2*s13^2*(-s13 + s23) + s12*s13*(2*s13 + s23)))))/
          (4*(p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
             2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
         (9*(s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s12*s23^4 + 
            2*p2q*(p2q + p3q)^3*s13*(s12 + s13)*(p3q*s12 - p2q*s13)^2*
             (2*s12 + s23) - p1q^4*s23^3*(p3q^2*s12*(4*s12 + 3*s13 + s23) + 
              p2q*p3q*(4*s12^2 + 9*s12*s13 + s13^2 - s12*s23 + 3*s13*s23) + 
              p2q^2*(2*s12^2 + 8*s12*s13 + s13*(s13 + 3*s23))) + 
            p1q^3*s23^2*(p3q^3*s12*(5*s12^2 + 7*s12*s13 + 2*s13^2 - s13*s23 - 
                2*s23^2) + p2q^3*(s12^3 + 13*s12^2*s13 + 5*s12*s13*
                 (4*s13 + s23) + 2*s13^2*(s13 + 4*s23)) + p2q^2*p3q*(
                6*s12^3 + s12^2*(26*s13 + s23) + s12*s13*(27*s13 + s23) + 
                s13*(3*s13^2 + 9*s13*s23 - 4*s23^2)) + p2q*p3q^2*(8*s12^3 + 
                5*s12*s13*(3*s13 + s23) + s12^2*(24*s13 + s23) + 
                s13*(s13^2 + 3*s13*s23 - 2*s23^2))) + 2*p1q*(p2q + p3q)*
             (-(p3q^4*s12^2*(s12 + s13)*s23*(s12 + s13 + s23)) + 
              p2q^4*s13^2*(s12^2*(2*s13 - 3*s23) + s13*(s13 - 2*s23)*s23 + 
                s12*(2*s13^2 - 4*s13*s23 - s23^2)) + p2q*p3q^3*s12*(
                2*s12^3*(s13 - s23) - s13^2*s23^2 - 2*s12*s13*s23*
                 (s13 + 2*s23) + 2*s12^2*(s13^2 - 3*s13*s23 - s23^2)) - 
              p2q^3*p3q*s13*(-(s13^2*(s13 - 3*s23)*s23) + s12^3*(4*s13 + 
                  3*s23) + s12^2*(2*s13^2 + 9*s13*s23 + 3*s23^2) + 
                s12*s13*(-2*s13^2 + 11*s13*s23 + 3*s23^2)) + p2q^2*p3q^2*(
                2*s12^4*(s13 - s23) + s13^4*s23 - s12*s13^2*s23*(5*s13 + 
                  2*s23) - s12^3*(2*s13^2 + 9*s13*s23 + 2*s23^2) - 
                s12^2*s13*(4*s13^2 + 7*s13*s23 + 7*s23^2))) - 
            p1q^2*s23*(p2q^2*p3q^2*(6*s12^4 + s12^3*(29*s13 - s23) + 
                s12*s13*(17*s13^2 - 11*s13*s23 - 14*s23^2) + 
                s13^2*(s13^2 + 5*s13*s23 - 6*s23^2) + s12^2*(27*s13^2 - 
                  9*s13*s23 - 4*s23^2)) + p3q^4*s12*(2*s12^3 + 
                s12^2*(4*s13 - 3*s23) - 2*s13*s23*(s13 + s23) + 
                s12*(2*s13^2 - 5*s13*s23 - 4*s23^2)) + p2q^3*p3q*(3*s12^4 + 
                s12^2*s13*(29*s13 - 6*s23) + s12^3*(17*s13 + 2*s23) + 
                s12*s13*(29*s13^2 - 14*s13*s23 - 10*s23^2) + 2*s13^2*
                 (s13^2 + 5*s13*s23 - 4*s23^2)) + p2q^4*s13*(5*s12^3 + 
                s12*s13*(17*s13 + s23) + s12^2*(17*s13 + 2*s23) + 
                s13*(s13^2 + 7*s13*s23 - 2*s23^2)) + p2q*p3q^3*(5*s12^4 + 
                s12^3*(21*s13 - 4*s23) - 2*s13^2*s23^2 + s12^2*(17*s13^2 - 
                  4*s13*s23 - 6*s23^2) + s12*(5*s13^3 - 6*s13*s23^2)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))))*p1 . E0conj*p2 . E0 + 
       ((9*ep*p1q*(s12 + s13 + s23)*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
             p1q*s23)^2*(p3q*s12*(s12 - s13) + p2q*s13*(-s12 + s13) + 
            p1q*(s12 + s13)*s23))/(4*(p1q + p2q + p3q)*s12*s13*s23*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (9*(s12 + s13 + s23)*
           (p1q^5*(p2q + p3q)*(s12 + s13)*s23^4 + 2*(p2q + p3q)^3*(s12 + s13)*
             (p3q*s12 - p2q*s13)^2*(p2q*s13*(2*s12 + s23) + p3q*s12*(2*s13 + 
                s23)) - p1q^4*s23^3*(p3q^2*(5*s12^2 + 11*s12*s13 + 2*s13^2 + 
                4*s12*s23) + p2q*p3q*(5*s12^2 + 2*s12*(9*s13 + s23) + 
                s13*(5*s13 + 2*s23)) + p2q^2*(2*s12^2 + 11*s12*s13 + 
                s13*(5*s13 + 4*s23))) - p1q^2*(p2q + p3q)*s23*
             (p3q^3*s12*(3*s12^3 + 5*s13^3 - 2*s13*s23^2 + s12^2*(21*s13 + 
                  4*s23) + s12*(19*s13^2 - 4*s13*s23 - 6*s23^2)) + 
              p2q^2*p3q*(3*s12^4 + s12^3*(17*s13 + 2*s23) + s12*s13*
                 (29*s13^2 - 14*s13*s23 - 14*s23^2) + 2*s13^2*(2*s13^2 + 
                  s13*s23 - 4*s23^2) + s12^2*(27*s13^2 - 6*s13*s23 - 
                  2*s23^2)) + p2q^3*s13*(5*s12^3 + 19*s12^2*s13 + 
                s13*(3*s13^2 + 4*s13*s23 - 6*s23^2) + s12*(21*s13^2 - 
                  4*s13*s23 - 2*s23^2)) + p2q*p3q^2*(4*s12^4 + 
                s12^3*(29*s13 + 2*s23) + s12*s13*(17*s13^2 - 6*s13*s23 - 
                  14*s23^2) + s12^2*(27*s13^2 - 14*s13*s23 - 8*s23^2) + 
                s13^2*(3*s13^2 + 2*s13*s23 - 2*s23^2))) + 
            p1q^3*s23^2*(p2q*p3q^2*(11*s12^3 + s12^2*(51*s13 + 10*s23) + 
                s12*(41*s13^2 + 6*s13*s23 - 4*s23^2) + s13*(7*s13^2 + 
                  4*s13*s23 - 2*s23^2)) + p3q^3*(7*s12^3 + s13^3 + 
                s12^2*(27*s13 + 8*s23) + s12*(15*s13^2 + 4*s13*s23 - 
                  2*s23^2)) + p2q^2*p3q*(7*s12^3 + s12^2*(41*s13 + 4*s23) + 
                s13*(11*s13^2 + 10*s13*s23 - 4*s23^2) + s12*(51*s13^2 + 
                  6*s13*s23 - 2*s23^2)) + p2q^3*(s12^3 + 15*s12^2*s13 + 
                s12*s13*(27*s13 + 4*s23) + s13*(7*s13^2 + 8*s13*s23 - 
                  2*s23^2))) + 2*p1q*(p2q + p3q)^2*
             (p3q^3*s12^2*(2*s12^2*s13 - 2*s13*s23*(2*s13 + s23) + 
                s12*(2*s13^2 - 6*s13*s23 - 3*s23^2)) + p2q^3*s13^2*(
                2*s12^2*(s13 - 2*s23) - 3*s13*s23^2 + 2*s12*(s13^2 - 
                  3*s13*s23 - s23^2)) + p2q*p3q^2*s12*(s12^3*(2*s13 - s23) - 
                s13^2*s23*(3*s13 + 4*s23) - s12^2*(2*s13^2 + 11*s13*s23 + 
                  2*s23^2) - s12*s13*(4*s13^2 + 7*s13*s23 + 5*s23^2)) - 
              p2q^2*p3q*s13*(s13^2*s23*(s13 + 2*s23) + s12^3*(4*s13 + 
                  3*s23) + s12^2*(2*s13^2 + 7*s13*s23 + 4*s23^2) + 
                s12*s13*(-2*s13^2 + 11*s13*s23 + 5*s23^2)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23^2*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((9*ep*(s12 + s13 + s23)*(p1q^4*s12*s23^3 + (p2q + p3q)*(
                s12 + s13)*(-(p3q*s12) + p2q*s13)*(p3q^2*s12^2 - 
                p2q^2*s13^2 + p2q*p3q*(-s12 + s13)*s23) - p1q^3*s23^2*(
                p3q*s12*(3*s12 + s13 - s23) + p2q*(2*s12^2 + 4*s12*s13 + 
                  s13*s23)) + p1q*(-(p3q^3*s12^2*(s12^2 + s12*(s13 - 3*s23) - 
                   2*s13*s23)) - p2q^3*s13*(s12^3 + s12^2*s13 - s13^2*s23) + 
                p2q^2*p3q*s12*(s12^3 + s12*s23*(6*s13 + s23) + s13*s23*
                   (s13 + 3*s23) + s12^2*(s13 + 4*s23)) + p2q*p3q^2*
                 (s13^2*s23^2 + s12*s13*s23*(2*s13 + 3*s23) + s12^3*
                   (s13 + 6*s23) + s12^2*s13*(s13 + 7*s23))) + 
              p1q^2*s23*(p3q^2*s12*(3*s12^2 + 2*s12*s13 - 3*s12*s23 - 
                  s13*s23) + p2q^2*(s12^3 + 5*s12^2*s13 + s13^2*s23 + 
                  s12*s13*(3*s13 + s23)) + p2q*p3q*(2*s12^3 + 5*s12^2*
                   (s13 - s23) + s13*(s13 - s23)*s23 + s12*(3*s13^2 - 
                    2*s13*s23 - s23^2)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) - (9*(s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s12*s23^
                4 - p1q^4*s23^3*(p3q^2*s12*(3*s12 + s13 - s23) + 
                p2q^2*(2*s12^2 + 6*s12*s13 + s13*s23) + p2q*p3q*(3*s12^2 + 
                  5*s12*s13 - 3*s12*s23 + s13*s23)) + 2*p2q^2*(p2q + p3q)*(
                s12 + s13)*(-(p3q*s12) + p2q*s13)*(-2*p2q*p3q*(s12 - s13)*s13*
                 (s12 + s23) + p2q^2*s13^2*(2*s12 + s23) + p3q^2*
                 (-(s13*s23^2) + s12^2*(-2*s13 + s23) + s12*s23*(-2*s13 + 
                    s23))) + p1q^3*s23^2*(p3q^3*s12*(3*s12^2 + 2*s12*s13 - 
                  3*s12*s23 - s13*s23) + p2q^3*(s12^3 + 11*s12^2*s13 + 
                  5*s12*s13*(3*s13 + s23) + s13*s23*(5*s13 + 2*s23)) + 
                p2q^2*p3q*(5*s12^3 + s12^2*(14*s13 - s23) + s13*s23*
                   (6*s13 + s23) + s12*(12*s13^2 - 5*s13*s23 + s23^2)) + 
                p2q*p3q^2*(5*s12^3 + s12^2*(9*s13 - 2*s23) + s13*(s13 - s23)*
                   s23 + s12*(3*s13^2 - s13*s23 + 5*s23^2))) - 
              p1q^2*s23*(p3q^4*s12^2*(s12^2 + s12*(s13 - 3*s23) - 
                  2*s13*s23) + p2q^3*p3q*(3*s12^4 + 2*s12^3*(6*s13 + s23) + 
                  s12*s13*(14*s13^2 - 11*s13*s23 - 5*s23^2) + s13*s23*
                   (11*s13^2 - 2*s13*s23 - 4*s23^2) + s12^2*(15*s13^2 - 
                    4*s13*s23 + s23^2)) + p2q^4*s13*(5*s12^3 + s13*s23*
                   (7*s13 + 2*s23) + s12^2*(15*s13 + 4*s23) + 2*s12*
                   (7*s13^2 + 2*s13*s23 + s23^2)) + p2q*p3q^3*(3*s12^4 + 
                  s12^3*(6*s13 - 3*s23) + s12^2*s13*(3*s13 - s23) - 
                  s13^2*s23^2 - s12*s23*(-2*s13^2 + s13*s23 + 4*s23^2)) + 
                p2q^2*p3q^2*(5*s12^4 + 2*s12^3*(8*s13 - s23) + s13*s23*
                   (4*s13^2 - 3*s13*s23 - 2*s23^2) + s12^2*(11*s13^2 + 
                    5*s13*s23 - s23^2) + s12*(4*s13^3 + 3*s13^2*s23 + 
                    8*s13*s23^2 - 2*s23^3))) + p1q*(-(p3q^5*s12^3*(s12 + s13)*
                  s23) + p2q^5*s13^2*(s12*s13*(4*s13 - 5*s23) + 4*s12^2*
                   (s13 - s23) + s13*(3*s13 - 2*s23)*s23) + p2q^2*p3q^3*
                 (s12^4*(4*s13 - 9*s23) - s13^2*s23^2*(3*s13 + 2*s23) + 
                  s12^3*(4*s13^2 - 13*s13*s23 - 10*s23^2) + s12*s13*s23*
                   (s13^2 - 6*s13*s23 - 10*s23^2) + s12^2*s23*(s13^2 - 
                    19*s13*s23 - 4*s23^2)) - p2q*p3q^4*s12*s23*(4*s12^3 + 
                  s13*s23*(5*s13 + 4*s23) + s12^2*(7*s13 + 5*s23) + 
                  s12*(3*s13^2 + 10*s13*s23 + 4*s23^2)) + p2q^3*p3q^2*
                 (s12^4*(4*s13 - 6*s23) + s13^2*s23*(3*s13^2 - 8*s13*s23 - 
                    4*s23^2) - s12^3*(4*s13^2 + 13*s13*s23 + 7*s23^2) - 
                  s12*s13*s23*(15*s13^2 + 7*s13*s23 + 10*s23^2) - 
                  s12^2*(8*s13^3 + 13*s13^2*s23 + 20*s13*s23^2 + 2*s23^3)) - 
                p2q^4*p3q*s13*(s12^3*(8*s13 + 6*s23) + s13*s23*(-6*s13^2 + 
                    9*s13*s23 + 4*s23^2) + s12^2*(4*s13^2 + 21*s13*s23 + 
                    9*s23^2) + s12*(-4*s13^3 + 21*s13^2*s23 + 8*s13*s23^2 + 
                    4*s23^3)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
             s23^2*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(
                p2q*s13 + p1q*s23))))*p1 . E0conj + 
         ((9*ep*p1q*(s12 + s13 + s23)*((p1q + p3q)*s12*s23*(-(p3q*s12) + 
                p1q*s23)*(-(p3q*(s12 + s13)) + p1q*s23) - p2q^3*s13*(s12 + 
                s13)*(s12^2 + s13*(-s13 + s23)) + p2q*(p1q^2*(-2*s12^2 - 
                  4*s12*s13 + s13*(s13 - s23))*s23^2 + p1q*p3q*(s12 + s13)*
                 s23*(s12^2 + 4*s12*s13 - s13^2 - 3*s12*s23 + 3*s13*s23) + 
                p3q^2*(s12 + s13)*(s12^3 - s12*s13^2 + 3*s12^2*s23 - 
                  2*s13^2*s23)) + p2q^2*(p3q*(s12 + s13)*(s12^3 - s12*s13^2 + 
                  s13^2*(s13 - 3*s23) - s12^2*(s13 - 2*s23)) + p1q*s23*
                 (s12^3 + 5*s12^2*s13 + 2*s13^2*(-s13 + s23) + s12*s13*
                   (2*s13 + s23)))))/(4*(p1q + p2q + p3q)*s12*s13*s23*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) - (9*(s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s12*s23^
                4 + 2*p2q*(p2q + p3q)^3*s13*(s12 + s13)*(p3q*s12 - p2q*s13)^
                2*(2*s12 + s23) - p1q^4*s23^3*(p3q^2*s12*(4*s12 + 3*s13 + 
                  s23) + p2q*p3q*(4*s12^2 + 9*s12*s13 + s13^2 - s12*s23 + 
                  3*s13*s23) + p2q^2*(2*s12^2 + 8*s12*s13 + s13*(s13 + 
                    3*s23))) + p1q^3*s23^2*(p3q^3*s12*(5*s12^2 + 7*s12*s13 + 
                  2*s13^2 - s13*s23 - 2*s23^2) + p2q^3*(s12^3 + 13*s12^2*
                   s13 + 5*s12*s13*(4*s13 + s23) + 2*s13^2*(s13 + 4*s23)) + 
                p2q^2*p3q*(6*s12^3 + s12^2*(26*s13 + s23) + s12*s13*
                   (27*s13 + s23) + s13*(3*s13^2 + 9*s13*s23 - 4*s23^2)) + 
                p2q*p3q^2*(8*s12^3 + 5*s12*s13*(3*s13 + s23) + s12^2*
                   (24*s13 + s23) + s13*(s13^2 + 3*s13*s23 - 2*s23^2))) + 
              2*p1q*(p2q + p3q)*(-(p3q^4*s12^2*(s12 + s13)*s23*(s12 + s13 + 
                   s23)) + p2q^4*s13^2*(s12^2*(2*s13 - 3*s23) + 
                  s13*(s13 - 2*s23)*s23 + s12*(2*s13^2 - 4*s13*s23 - 
                    s23^2)) + p2q*p3q^3*s12*(2*s12^3*(s13 - s23) - 
                  s13^2*s23^2 - 2*s12*s13*s23*(s13 + 2*s23) + 2*s12^2*
                   (s13^2 - 3*s13*s23 - s23^2)) - p2q^3*p3q*s13*
                 (-(s13^2*(s13 - 3*s23)*s23) + s12^3*(4*s13 + 3*s23) + 
                  s12^2*(2*s13^2 + 9*s13*s23 + 3*s23^2) + s12*s13*(-2*s13^2 + 
                    11*s13*s23 + 3*s23^2)) + p2q^2*p3q^2*(2*s12^4*
                   (s13 - s23) + s13^4*s23 - s12*s13^2*s23*(5*s13 + 2*s23) - 
                  s12^3*(2*s13^2 + 9*s13*s23 + 2*s23^2) - s12^2*s13*
                   (4*s13^2 + 7*s13*s23 + 7*s23^2))) - p1q^2*s23*(
                p2q^2*p3q^2*(6*s12^4 + s12^3*(29*s13 - s23) + s12*s13*
                   (17*s13^2 - 11*s13*s23 - 14*s23^2) + s13^2*(s13^2 + 
                    5*s13*s23 - 6*s23^2) + s12^2*(27*s13^2 - 9*s13*s23 - 
                    4*s23^2)) + p3q^4*s12*(2*s12^3 + s12^2*(4*s13 - 3*s23) - 
                  2*s13*s23*(s13 + s23) + s12*(2*s13^2 - 5*s13*s23 - 
                    4*s23^2)) + p2q^3*p3q*(3*s12^4 + s12^2*s13*(29*s13 - 
                    6*s23) + s12^3*(17*s13 + 2*s23) + s12*s13*(29*s13^2 - 
                    14*s13*s23 - 10*s23^2) + 2*s13^2*(s13^2 + 5*s13*s23 - 
                    4*s23^2)) + p2q^4*s13*(5*s12^3 + s12*s13*(17*s13 + s23) + 
                  s12^2*(17*s13 + 2*s23) + s13*(s13^2 + 7*s13*s23 - 
                    2*s23^2)) + p2q*p3q^3*(5*s12^4 + s12^3*(21*s13 - 4*s23) - 
                  2*s13^2*s23^2 + s12^2*(17*s13^2 - 4*s13*s23 - 6*s23^2) + 
                  s12*(5*s13^3 - 6*s13*s23^2)))))/(4*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13*s23^2*(p3q^2*s12^2 + (p2q*s13 - 
                p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-9*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2*
           (s13*s23 + s12*(4*s13 + s23)) - (p2q + p3q)^3*s23*
           (p2q*s13*(4*s12^2 + 4*s12*s13 + 3*s12*s23 + s13*s23) + 
            p3q*s12*(s12*(4*s13 + s23) + s13*(4*s13 + 3*s23))) - 
          p1q^2*s23*(4*p2q*p3q*(2*s12*s13^2 + s13^2*s23 + s12^2*(2*s13 + 
                s23)) + p2q^2*(3*s13^2*s23 + 8*s12*s13*(2*s13 + s23) + 
              s12^2*(8*s13 + s23)) + p3q^2*(s13^2*s23 + 8*s12*s13*(s13 + 
                s23) + s12^2*(16*s13 + 3*s23))) + 
          p1q*(p3q^3*(4*s12^2*s13*s23 + s13*s23^3 + s12^3*(8*s13 + s23) + 
              s12*s23*(-s13^2 + 4*s13*s23 + s23^2)) + p2q*p3q^2*
             (2*s12^3*(4*s13 + s23) - s12^2*s13*(16*s13 + s23) + 
              3*s12*s23*(-2*s13^2 + 4*s13*s23 + s23^2) + s13*s23*(s13^2 + 
                3*s23^2)) + p2q^3*(-(s12^2*s13*s23) + s13*s23*(s13^2 + 
                s23^2) + s12*(8*s13^3 + 4*s13^2*s23 + 4*s13*s23^2 + s23^3)) + 
            p2q^2*p3q*(s12^3*s23 + 2*s13^3*s23 + 3*s13*s23^3 - 
              2*s12^2*s13*(8*s13 + 3*s23) + s12*(8*s13^3 - s13^2*s23 + 
                12*s13*s23^2 + 3*s23^3))))*E0 . E0conj)/
        (16*p1q*(p2q + p3q)*s12*s13*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       ((9*ep*p1q*(p2q + p3q)^2*(s12 - s13)*(s12 + s13 + s23)*
           (p2q*s13*(s12 - s23) - p3q*s12*(s12 + s23) + p1q*s23*(s12 + s23)))/
          (4*(p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
             2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
         (9*(s12 + s13 + s23)*(2*p1q^6*(s12 - s13)*s23^4 - 
            p1q^5*s23^3*(p2q*(s12^2 + 12*s12*s13 - 5*s13^2 - 4*s12*s23 + 
                8*s13*s23) + p3q*(5*s12^2 - s13^2 - 4*s12*(3*s13 + s23))) - 
            (p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*(p3q*(-s12 + s13)*s23^2 + 
              p2q*(8*s12^2*s13 + s13*s23^2 + s12*(8*s13^2 + 8*s13*s23 - 
                  s23^2))) + p1q^4*s23^2*(2*p2q*p3q*(s12 - s13)*(s12^2 + 
                8*s12*s13 + s13^2 - 4*s12*s23 + 5*s23^2) + 
              p2q^2*(2*s12^2*s13 + s13*(-4*s13^2 + 18*s13*s23 - 9*s23^2) + 
                s12*(18*s13^2 - 18*s13*s23 + 5*s23^2)) + p3q^2*(4*s12^3 - 
                s13*s23*(2*s13 + s23) - 2*s12^2*(9*s13 + 4*s23) + 
                s12*(-2*s13^2 + 10*s13*s23 + 5*s23^2))) - p1q*(p2q + p3q)^2*
             (p3q^3*s12*s23*(s12^3 - 2*s12^2*s23 - 2*s13*s23^2 + 
                s12*(7*s13^2 + 6*s13*s23 + 2*s23^2)) + p2q*p3q^2*(
                -2*s13^2*s23^3 + s12^4*(8*s13 + s23) + s12^3*(8*s13^2 - 
                  6*s13*s23 - 2*s23^2) - 2*s12*s13*s23*(3*s13^2 + 6*s13*s23 + 
                  s23^2) + s12^2*s23*(-13*s13^2 - 2*s13*s23 + 4*s23^2)) - 
              p2q^2*p3q*(2*s12^3*s13*(8*s13 + 3*s23) + 2*s12*s13*s23*
                 (9*s13^2 + 15*s13*s23 - s23^2) + s13^2*s23*(s13^2 + 
                  2*s13*s23 + 4*s23^2) + s12^2*(16*s13^3 + 47*s13^2*s23 - 
                  4*s13*s23^2 - 2*s23^3)) + p2q^3*s13*(s12^2*s13*
                 (8*s13 - 27*s23) - s13*s23*(s13^2 - 2*s13*s23 + 2*s23^2) + 
                2*s12*(4*s13^3 - 6*s13^2*s23 - 13*s13*s23^2 + s23^3))) - 
            p1q^2*(p2q + p3q)*s23*(p3q^3*(s13*s23^3 - s12^3*(8*s13 + 7*s23) - 
                s12*s23*(8*s13^2 + 8*s13*s23 + s23^2) + s12^2*(8*s13^2 + 
                  7*s13*s23 + 4*s23^2)) + p2q*p3q^2*(2*s12^4 + 
                s12^3*(6*s13 - 3*s23) + 3*s13*s23^3 + s12^2*(26*s13^2 + 
                  37*s13*s23 + 12*s23^2) + s12*(6*s13^3 + 26*s13^2*s23 + 
                  8*s13*s23^2 - 3*s23^3)) + p2q^3*(14*s12^3*s13 - 
                2*s12^2*s13*(s13 - 16*s23) + s12*(-2*s13^3 + s13^2*s23 + 
                  24*s13*s23^2 - s23^3) + s13*(-2*s13^3 + 11*s13^2*s23 - 
                  4*s13*s23^2 + s23^3)) + p2q^2*p3q*(2*s12^4 + 4*s12^3*s23 + 
                s12^2*(-36*s13^2 + 30*s13*s23 + 8*s23^2) - s12*(16*s13^3 + 
                  5*s13^2*s23 - 24*s13*s23^2 + 3*s23^3) + s13*(2*s13^3 + 
                  3*s13^2*s23 - 4*s13*s23^2 + 3*s23^3))) + 
            p1q^3*s23*(p3q^3*(-s12^4 + 4*s12^3*(2*s13 + s23) - s13*s23^2*
                 (s13 + 2*s23) + s12^2*(s13^2 - 18*s13*s23 - 11*s23^2) + 
                2*s12*s23*(5*s13^2 + 4*s13*s23 + s23^2)) - p2q*p3q^2*(s12^4 + 
                6*s12^3*(s13 - s23) - s13*s23*(4*s13^2 + s13*s23 - 6*s23^2) + 
                s12^2*(15*s13^2 + 18*s13*s23 + 17*s23^2) + 2*s12*
                 (s13^3 + 10*s13^2*s23 - 8*s13*s23^2 - 5*s23^3)) + 
              p2q^3*(2*s12^3*s23 + s12^2*(-s13^2 + 2*s13*s23 + 5*s23^2) + 
                s13*(s13^3 - 12*s13^2*s23 + 19*s13*s23^2 - 2*s23^3) + 
                s12*(-8*s13^3 + 20*s13^2*s23 - 8*s13*s23^2 + 6*s23^3)) + 
              p2q^2*p3q*(2*s12^3*(s13 + 2*s23) + s12^2*(15*s13^2 + 
                  10*s13*s23 - s23^2) + s13*(s13^3 + 21*s13*s23^2 - 
                  6*s23^3) + 2*s12*(3*s13^3 + 3*s13^2*s23 + 7*s23^3)))))/
          (8*p1q*(p1q + p2q + p3q)*s12*s13*s23^2*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*
        p1 . E0conj*p2 . E0 + ((9*ep*p1q*(p2q + p3q)^2*(s12 - s13)*
           (s12 + s13 + s23)*(-(p3q*s12*(s12 + s13)) + p2q*s13*(s12 + s13) + 
            p1q*(s12 - s13)*s23))/(4*(p1q + p2q + p3q)*s12*s13*s23*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (9*(s12 + s13 + s23)*
           (-(p1q^4*(p2q - p3q)*(s12 - s13)*(p3q*(5*s12 + s13 - 2*s23) + p2q*
                (s12 + 5*s13 - 2*s23))*s23^3) + 2*p1q^5*(p2q - p3q)*
             (s12 - s13)*s23^4 - 4*(p2q + p3q)^4*s12*s13*(p3q*s12 - p2q*s13)^
              2*(s12 + s13 + s23) + p1q^3*s23^2*(p2q^3*(s12^3 + 
                4*s13^2*(-s13 + s23) + 2*s12^2*(3*s13 + s23) + 
                s12*(s13^2 + 2*s23^2)) + p3q^3*(-4*s12^3 + 6*s12*s13^2 + 
                s12^2*(s13 + 4*s23) + s13*(s13^2 + 2*s13*s23 + 2*s23^2)) + 
              p2q*p3q^2*(3*s12^3 + s12^2*(-6*s13 + 2*s23) + 4*s13*
                 (s13^2 + s23^2) + s12*(-5*s13^2 + 8*s13*s23 + 2*s23^2)) + 
              p2q^2*p3q*(4*s12^3 - 5*s12^2*s13 + s13*(3*s13^2 + 2*s13*s23 + 
                  2*s23^2) + s12*(-6*s13^2 + 8*s13*s23 + 4*s23^2))) - 
            2*p1q*(p2q + p3q)^2*(p3q^3*s12^2*s13*(2*s12 - 5*s23)*(s12 + s13 + 
                s23) + p2q^3*s12*s13^2*(2*s13 - 5*s23)*(s12 + s13 + s23) - 
              p2q^2*p3q*s13*(s13^2*s23^2 + s12^3*(4*s13 + 3*s23) - 
                2*s12*s13*(s13^2 - 3*s13*s23 - 4*s23^2) + s12^2*(2*s13^2 + 
                  15*s13*s23 + 2*s23^2)) + p2q*p3q^2*s12*(2*s12^3*s13 - 
                s13^2*s23*(3*s13 + 2*s23) - s12^2*(2*s13^2 + 6*s13*s23 + 
                  s23^2) - s12*s13*(4*s13^2 + 15*s13*s23 + 8*s23^2))) - 
            p1q^2*(p2q + p3q)*s23*(p2q^3*s13*(7*s12^3 - s13^2*(s13 - 2*s23) + 
                3*s12^2*(s13 + 4*s23) + s12*(-5*s13^2 + 4*s13*s23 + 
                  8*s23^2)) + p3q^3*s12*(-s12^3 + s12^2*(-5*s13 + 2*s23) + 
                s12*s13*(3*s13 + 4*s23) + s13*(7*s13^2 + 12*s13*s23 + 
                  8*s23^2)) + p2q^2*p3q*(s12^4 + s12^3*(3*s13 + 2*s23) + 
                2*s13^2*(s13^2 + 2*s23^2) + s12^2*(-5*s13^2 + 28*s13*s23 + 
                  4*s23^2) + s12*s13*(-5*s13^2 + 16*s13*s23 + 16*s23^2)) + 
              p2q*p3q^2*(2*s12^4 - 5*s12^3*s13 + s13^2*(s13^2 + 2*s13*s23 + 
                  4*s23^2) + s12^2*(-5*s13^2 + 16*s13*s23 + 4*s23^2) + 
                s12*s13*(3*s13^2 + 28*s13*s23 + 16*s23^2)))))/
          (4*p1q*(p1q + p2q + p3q)*s12*s13*s23^2*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*p2 . E0*
        p2 . E0conj + p1 . E0*(((9*ep*(p2q + p3q)^2*(s12 + s13 + s23)*
             (p1q^3*s12*s23^2*(s12 + s13 + s23) + (p2q + p3q)*(-(p3q*s12) + 
                p2q*s13)*(-(p3q*s12^2*(s12 + s13 + s23)) + p2q*s13*
                 (s12^2 + s12*s13 + s13*s23)) + p1q^2*s23*(
                -(p3q*s12*(2*s12 - s23)*(s12 + s13 + s23)) - 
                p2q*(s12^3 + s12*s13*(3*s13 - s23) + s12^2*s23 - 
                  s13*s23^2)) - p1q*(-(p3q^2*s12^2*(s12 - 2*s23)*(s12 + s13 + 
                   s23)) + p2q^2*s13*(s12^3 - s12^2*s13 + 2*s13*s23^2 + 
                  s12*s13*(-2*s13 + 3*s23)) + p2q*p3q*(-s12^4 + 2*s12^3*s13 + 
                  s13^2*s23^2 + 2*s12*s13*s23*(3*s13 + s23) + s12^2*
                   (3*s13^2 + 4*s13*s23 + s23^2)))))/(4*(p1q + p2q + p3q)*s12*
             s13*s23*(-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) - (9*(s12 + s13 + s23)*(-2*p2q^2*(p2q + p3q)^2*s13*(
                -(p3q*s12) + p2q*s13)*(2*p2q*s12*s13*(s12 + s13 + s23) - 
                p3q*(2*s12^3 + s12*s23^2 - s13*s23^2 + 2*s12^2*(s13 + 
                    s23))) + p1q^4*s23^3*(2*p2q*p3q*(s12 - s13)*(s12 + s23) + 
                p3q^2*s12*(s12 + s13 + s23) + p2q^2*(s12^2 + 2*s13*s23 + 
                  s12*(5*s13 + s23))) - p1q*(p2q + p3q)*(-(p3q^4*s12^3*s23*
                  (s12 + s13 + s23)) + p2q^4*s13^2*(s12^2*(4*s13 - 17*s23) - 
                  3*s13*s23^2 + s12*(4*s13^2 - 13*s13*s23 - 14*s23^2)) - 
                p2q^3*p3q*s13*(8*s12^3*s13 + s12^2*(8*s13^2 + 14*s13*s23 - 
                    11*s23^2) + s12*s23*(8*s13^2 + 9*s13*s23 - 8*s23^2) + 
                  2*s13*s23*(s13^2 - s13*s23 + s23^2)) + p2q*p3q^3*s12*s23*
                 (2*s12^2*(4*s13 + s23) + s13*s23*(7*s13 + 4*s23) + 
                  s12*(8*s13^2 + 11*s13*s23 + 2*s23^2)) + p2q^2*p3q^2*
                 (s13^2*(s13 - 2*s23)*s23^2 + s12^4*(4*s13 + s23) + 
                  s12^2*s23*(-15*s13^2 + 2*s13*s23 + 2*s23^2) + 
                  s12^3*(4*s13^2 - 5*s13*s23 + 3*s23^2) + s12*s13*s23*
                   (-5*s13^2 - 12*s13*s23 + 4*s23^2))) + p1q^3*s23^2*(
                -(p3q^3*s12*(2*s12 - s23)*(s12 + s13 + s23)) + 
                p2q^3*(s12^3 + s12^2*(-4*s13 + 3*s23) + s13*s23*(-4*s13 + 
                    3*s23) + s12*(-13*s13^2 + 3*s13*s23 + 2*s23^2)) + 
                p2q*p3q^2*(-3*s12^3 + s13*(2*s13 - s23)*s23 + s12^2*
                   (4*s13 + s23) + s12*(-s13^2 + 3*s13*s23 + 4*s23^2)) + 
                p2q^2*p3q*(2*s13*s23*(3*s13 + s23) + s12^2*(-14*s13 + 
                    5*s23) + s12*(2*s13^2 - 3*s13*s23 + 5*s23^2))) - 
              p1q^2*s23*(-(p3q^4*s12^2*(s12 - 2*s23)*(s12 + s13 + s23)) + 
                p2q^2*p3q^2*(s12^4 - 3*s12^2*s13*(s13 - 8*s23) + 4*s13^2*
                   (s13 - s23)*s23 + s12^3*(-2*s13 + 5*s23) + s12*s23*
                   (5*s13^2 + 16*s13*s23 - 4*s23^2)) + p2q*p3q^3*(-s12^4 - 
                  s13^2*s23^2 + 4*s12^3*(2*s13 + s23) + 2*s12*s23*(5*s13^2 + 
                    s13*s23 - s23^2) + s12^2*(9*s13^2 + 10*s13*s23 + 
                    3*s23^2)) + p2q^4*s13*(7*s12^3 - 5*s12^2*(s13 - 4*s23) - 
                  2*s13*(s13 - 3*s23)*s23 + s12*(-12*s13^2 + 13*s13*s23 + 
                    12*s23^2)) + p2q^3*p3q*(s12^4 + 2*s12^3*(2*s13 + s23) + 
                  3*s13^2*s23*(2*s13 + s23) - s12^2*(s13^2 - 40*s13*s23 + 
                    s23^2) - 2*s12*(2*s13^3 - 8*s13^2*s23 - 13*s13*s23^2 + 
                    s23^3)))))/(4*p1q*(p1q + p2q + p3q)*s12*s13*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p1 . E0conj + 
         ((9*ep*(p2q + p3q)^2*(s12 - s13)*(s12 + s13 + s23)*
             (-(p3q*s12 - p2q*s13)^2 + p1q^2*s12*s23 + p1q*p3q*s12*(-s12 + 
                s23) + p1q*p2q*s13*(s12 + s23)))/(4*(p1q + p2q + p3q)*s12*s13*
             s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) + (9*(s12 + s13 + s23)*(2*p1q^6*(s12 - s13)*s23^
                4 - p1q^5*s23^3*(p3q*(5*s12^2 - s13*(s13 - 4*s23) - 
                  4*s12*(3*s13 + 2*s23)) + p2q*(s12^2 + 12*s12*s13 + 
                  s13*(-5*s13 + 4*s23))) + (p2q + p3q)^2*(p3q*s12 - p2q*s13)^
                2*(p3q^2*(s12 - s13)*s23^2 + 2*p2q*p3q*(4*s12^2*s13 + 
                  s13*s23^2 + s12*(4*s13^2 + 4*s13*s23 - s23^2)) + 
                p2q^2*(8*s12^2*s13 - s13*s23^2 + s12*(8*s13^2 + 8*s13*s23 + 
                    s23^2))) + p1q^4*s23^2*(2*p2q*p3q*(s12 - s13)*
                 (s12^2 + 8*s12*s13 + s13^2 - 2*s12*s23 - 6*s13*s23 + 
                  s23^2) + p2q^2*(2*s12^2*s13 + s13*(-4*s13^2 + 10*s13*s23 - 
                    7*s23^2) + s12*(18*s13^2 - 18*s13*s23 - s23^2)) + 
                p3q^2*(4*s12^3 + s13*(2*s13 - 3*s23)*s23 - 2*s12^2*
                   (9*s13 + 10*s23) + s12*(-2*s13^2 + 26*s13*s23 + 
                    11*s23^2))) + p1q*(p2q + p3q)*(p3q^4*s12*s23*(-3*s12^3 + 
                  2*s13*s23^2 + 6*s12^2*(2*s13 + s23) + s12*(7*s13^2 + 
                    2*s13*s23 - 2*s23^2)) + 2*p2q*p3q^3*(s13^2*s23^3 + 
                  s12^4*(4*s13 + s23) + s12^3*s13*(4*s13 + s23) + s12^2*s23*
                   (-15*s13^2 - 8*s13*s23 + s23^2) - s12*s13*s23*(3*s13^2 + 
                    2*s13*s23 + 2*s23^2)) + p2q^4*s13*(s12^2*s13*(8*s13 - 
                    27*s23) + s13*s23*(3*s13^2 - 6*s13*s23 + 2*s23^2) + 
                  s12*(8*s13^3 - 24*s13^2*s23 - 22*s13*s23^2 - 2*s23^3)) + 
                p2q^2*p3q^2*(s12^4*(8*s13 + s23) - 2*s12*s13^2*s23*
                   (6*s13 + 13*s23) + s12^3*(-8*s13^2 - 24*s13*s23 + 
                    2*s23^2) - s13^2*s23*(s13^2 + 6*s13*s23 + 2*s23^2) - 
                  2*s12^2*(8*s13^3 + 30*s13^2*s23 + 7*s13*s23^2 - s23^3)) - 
                2*p2q^3*p3q*(s13^2*s23*(s13 + s23)^2 + s12^3*s13*(8*s13 + 
                    3*s23) + s12*s13*(-4*s13^3 + 19*s13^2*s23 + 18*s13*
                     s23^2 - 2*s23^3) + s12^2*(4*s13^3 + 25*s13^2*s23 + 
                    2*s13*s23^2 + s23^3))) - p1q^3*s23*(p3q^3*(s12^4 - 
                  s13*(s13 - 2*s23)*s23^2 - 8*s12^3*(s13 + 2*s23) - 
                  2*s12*s23*(-5*s13^2 + 6*s13*s23 + 3*s23^2) + s12^2*
                   (-s13^2 + 42*s13*s23 + 25*s23^2)) - p2q^2*p3q*
                 (2*s12^3*(s13 - 2*s23) + s12^2*(15*s13^2 + 46*s13*s23 - 
                    7*s23^2) + s12*(6*s13^3 + 22*s13^2*s23 - 4*s13*s23^2 - 
                    6*s23^3) + s13*(s13^3 - 12*s13^2*s23 + 7*s13*s23^2 - 
                    6*s23^3)) + p2q*p3q^2*(s12^4 + 6*s12^3*(s13 - s23) + 
                  s13*s23*(4*s13^2 - 7*s13*s23 + 2*s23^2) + s12^2*(15*s13^2 + 
                    10*s13*s23 + 11*s23^2) + 2*s12*(s13^3 + 18*s13^2*s23 + 
                    6*s13*s23^2 - s23^3)) + p2q^3*(2*s12^3*s23 + 
                  s12^2*(s13^2 + 2*s13*s23 + 5*s23^2) - s13*(s13^3 - 
                    8*s13^2*s23 + 17*s13*s23^2 - 6*s23^3) + 2*s12*(4*s13^3 - 
                    20*s13^2*s23 + 6*s13*s23^2 + s23^3))) + p1q^2*s23*(
                -2*p2q*p3q^3*(s12^4 - 4*s13^2*s23^2 - s12*s13^2*(3*s13 + 
                    s23) - s12^3*(3*s13 + 5*s23) + s12^2*(9*s13^2 + 
                    8*s13*s23 + 4*s23^2)) + 2*p2q^3*p3q*(s12^4 + 
                  s12^3*(7*s13 + 2*s23) + s12^2*s13*(7*s13 + 39*s23) + 
                  s13^2*(2*s13^2 - 3*s13*s23 + 8*s23^2) + s12*s13*
                   (-13*s13^2 + 28*s13*s23 + 24*s23^2)) + p3q^4*(-4*s12^4 - 
                  s13*s23^3 + s12^3*(20*s13 + 17*s23) + s12^2*(8*s13^2 - 
                    21*s13*s23 - 12*s23^2) + s12*(-8*s13^2*s23 + s23^3)) + 
                p2q^4*(14*s12^3*s13 - 2*s12^2*s13*(s13 - 16*s23) + 
                  s13*(2*s13^3 - 13*s13^2*s23 + 12*s13*s23^2 - s23^3) + 
                  s12*(-30*s13^3 + 29*s13^2*s23 + 16*s13*s23^2 + s23^3)) + 
                p2q^2*p3q^2*(4*s12^4 + s12^3*(-14*s13 + 5*s23) + 
                  s12^2*(-10*s13^2 + 59*s13*s23 + 4*s23^2) + s12*(10*s13^3 + 
                    29*s13^2*s23 + 32*s13*s23^2 - 2*s23^3) + s13*(2*s13^3 - 
                    s13^2*s23 + 12*s13*s23^2 + 2*s23^3)))))/
            (8*p1q*(p1q + p2q + p3q)*s12*s13*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p2 . E0conj))*Int[DS[k]*DS[k + p2 + p3]*
        Eik[k - p1]] + 
     (((-9*ep*(p1q + p2q)*s23*(s12 + s13 + s23)*(-(p3q*s12) + p2q*s13 + 
            p1q*(2*s13 + s23)))/(16*s12*(p3q*s12 - (p1q + p2q)*
             (s13 + s23))) - (9*(p1q + p2q)*(s12 + s13 + s23)*
           (p1q^3*s23*(s12 + s13 + s23) + p1q^2*(-(p2q*s13^2) + 
              p2q*s12*(s13 + 2*s23) - p3q*(s12^2 - s12*s13 + s23^2)) + 
            (p2q + p3q)*(-(p3q^2*s12^2) + p2q*p3q*s12*(-s12 + s13) + 
              p2q^2*(2*s23*(s13 + s23) + s12*(s13 + 2*s23))) + 
            p1q*(-(p3q^2*s12*(s12 - 2*s23)) + p2q^2*(-s13^2 + s12*s23) + 
              p2q*p3q*(s13*s23 + 2*s12*(s13 + 2*s23)))))/(16*p1q*(p2q + p3q)*
           s12*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*E0 . E0conj + 
       ((9*ep*(p1q + p2q)*(s12 + s13 + s23)*(p2q^4*s13^2*(2*s13 + s23) - 
            2*p2q^3*s13*(-(p3q*s13^2) + p3q*s12*(3*s13 + s23) + 
              p1q*(-s13^2 + s12*s23 + s13*s23)) + 
            p2q^2*(2*p1q*p3q*(s13^3 + s12^2*s23 + 2*s13*s23^2 - 2*s12*s13*
                 (s13 + s23)) - p1q^2*s23*(5*s13^2 + s23^2 + 
                2*s12*(3*s13 + s23)) + p3q^2*(s12 - s13)*(s13*s23 + 
                s12*(6*s13 + s23))) - (p3q*s12 - p1q*s23)*
             (p3q^3*s12*(2*s12 + s23) + p1q^3*s23*(2*s13 + s23) + 
              p1q^2*p3q*s23*(-s12 + 4*s13 + 2*s23) - p1q*p3q^2*(s23^2 + 
                2*s12*(s13 + 2*s23))) - 2*p2q*(p3q^3*s12*(s12^2 - 3*s12*s13 - 
                s13*s23) + p1q^3*s23*(s13*(s13 - s23) + s12*(2*s13 + s23)) + 
              p1q^2*p3q*s23*(-s12^2 + s13*(s13 - 2*s23) + 2*s12*(2*s13 + 
                  s23)) - p1q*p3q^2*(s13*s23^2 + s12^2*(s13 + 3*s23) - 
                s12*s13*(2*s13 + 3*s23)))))/(8*(p1q + p2q + p3q)*s12*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
         (9*(p1q + p2q)*(p1q^6*s23^2*(s12 + s13 + s23)^2 + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(3*p2q^2*p3q*s12*(s12 + s13 + 
                s23) + 3*p2q*p3q^2*s12*(s12 + s13 + s23) + p3q^3*s12*(s12 + 
                s13 + s23) + p2q^3*(5*s12^2 + 9*s12*(s13 + s23) + 
                4*(s13 + s23)^2)) - p1q^5*s23*(s12 + s13 + s23)*
             (p3q*(2*s12^2 + s23^2 + s12*(2*s13 + s23)) + 
              p2q*(2*s12*(s13 - s23) + s13*(2*s13 + s23))) + 
            p1q^4*(s12 + s13 + s23)*(p3q^2*(s12^3 + s12^2*(s13 - s23) + 
                (s13 - s23)*s23^2 + 2*s12*s23*(s13 + 3*s23)) - 
              2*p2q*p3q*(s12^2*(s13 + 2*s23) + s12*(s13^2 + 4*s13*s23 - 
                  2*s23^2) + s23*(s13^2 + s13*s23 + 3*s23^2)) + 
              p2q^2*(s13^3 + 4*s12^2*s23 - 3*s13^2*s23 - s13*s23^2 - s23^3 + 
                s12*(s13^2 - 4*s13*s23 + 8*s23^2))) - p1q^3*(s12 + s13 + s23)*
             (p3q^3*(-s12^3 - 5*s12*s23^2 + s23^3 + s12^2*(2*s13 + 9*s23)) + 
              p2q^2*p3q*(4*s12^3 - 2*s13^3 + 5*s13^2*s23 - 2*s13*s23^2 + 
                3*s23^3 + 2*s12^2*(4*s13 + 5*s23) + s12*(s13^2 + 18*s13*s23 - 
                  13*s23^2)) + p2q*p3q^2*(-2*s12^3 + 2*s12*(s13 - 9*s23)*
                 s23 + s12^2*(3*s13 + 10*s23) + s23*(4*s13^2 + s13*s23 + 
                  4*s23^2)) - p2q^3*(3*s13^3 - 4*s13^2*s23 + 7*s13*s23^2 + 
                8*s23^3 + 4*s12^2*(s13 + 3*s23) + 2*s12*(3*s13^2 + s13*s23 + 
                  12*s23^2))) - p1q^2*(s12 + s13 + s23)*
             (p3q^4*s12*(-4*s12^2 - 3*s23^2 + s12*(s13 + 7*s23)) + 
              2*p2q^3*p3q*(2*s12^3 - 2*s13^3 + 9*s13^2*s23 + 
                s12*(14*s13 - 3*s23)*s23 + 4*s13*s23^2 - 2*s23^3 + 
                s12^2*(4*s13 + 7*s23)) + p2q^2*p3q^2*(-2*s12^3 + 
                10*s12*(s13 - s23)*s23 + s12^2*(11*s13 + 23*s23) + 
                s13*(s13^2 + 13*s13*s23 + 4*s23^2)) - 2*p2q*p3q^3*(3*s12^3 + 
                s13*s23^2 - 2*s12^2*(2*s13 + 5*s23) + s12*(s13^2 + 
                  2*s13*s23 + 6*s23^2)) - p2q^4*(5*s13^3 - 13*s13^2*s23 - 
                6*s13*s23^2 + 8*s23^3 + 4*s12^2*(s13 + 2*s23) + 
                s12*(6*s13^2 - 10*s13*s23 + 17*s23^2))) + 
            p1q*(3*p3q^5*s12^2*(s12 - s23)*(s12 + s13 + s23) + 
              p2q*p3q^4*s12^2*(8*s12^2 - 7*s13^2 + s12*(s13 - 4*s23) - 
                19*s13*s23 - 12*s23^2) + p2q^5*s13*(7*s13^3 + 2*s12^2*
                 (3*s13 - 7*s23) + s13^2*s23 - 18*s13*s23^2 - 12*s23^3 + 
                s12*(13*s13^2 - 14*s13*s23 - 26*s23^2)) + p2q^2*p3q^3*(
                11*s12^4 + s12^3*(s13 - 2*s23) - s13^2*s23*(s13 + s23) + 
                s12*s13*(5*s13^2 + 12*s13*s23 + 8*s23^2) - s12^2*(5*s13^2 + 
                  15*s13*s23 + 13*s23^2)) + p2q^3*p3q^2*(6*s12^4 - 
                s12^3*(9*s13 + 8*s23) - s12^2*(19*s13^2 + 43*s13*s23 + 
                  22*s23^2) - s13*(s13^3 + 13*s13^2*s23 + 20*s13*s23^2 + 
                  8*s23^3) - s12*(5*s13^3 + 30*s13^2*s23 + 30*s13*s23^2 + 
                  8*s23^3)) - p2q^4*p3q*(6*s12^3*(2*s13 + s23) + 
                s12^2*(15*s13^2 + 46*s13*s23 + 10*s23^2) + s12*(-3*s13^3 + 
                  44*s13^2*s23 + 48*s13*s23^2 + 4*s23^3) + s13*(-6*s13^3 + 
                  7*s13^2*s23 + 29*s13*s23^2 + 16*s23^3)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + 
            (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((9*ep*p1q*(p1q + p2q)*s23*(s12 + s13 + s23)*
           (-((p2q + p3q)^2*s12*(-(p3q*s12) + p2q*s13)) + 
            2*p1q^3*s23*(s13 + s23) - p1q^2*(p2q*(2*s12*s13 + 2*s13^2 + 
                s12*s23 - 2*s23^2) + p3q*(2*s12*s13 + 2*s13^2 + 4*s12*s23 + 
                s13*s23 - s23^2)) - p1q*(-(p3q^2*s12*(2*s12 + s13 - 2*s23)) + 
              p2q*p3q*(-s12^2 + 4*s12*(s13 + s23) + 3*s13*(s13 + s23)) + 
              p2q^2*(2*s13*(s13 + s23) + s12*(3*s13 + s23)))))/
          (4*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))) + (9*(p1q + p2q)*(s12 + s13 + s23)*
           (-2*p2q^2*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 
            2*p1q^5*p2q*s23^2*(s12 + s13 + s23) - 2*p1q*p2q*(p2q + p3q)*
             (p2q^3*s13*(s13 - 2*s23)*(s12 + s13 + s23) + p3q^3*s12^2*(
                2*s12 + 2*s13 + s23) + p2q*p3q^2*s12*(s12^2 - 3*s12*s13 - 
                4*s13^2 - 2*s12*s23 - 5*s13*s23 - 2*s23^2) - 
              p2q^2*p3q*(-2*s13^3 + 2*s13*s23^2 + 2*s12^2*(s13 + s23) + 
                s12*s23*(5*s13 + 2*s23))) - p1q^4*s23*
             (p3q^2*(2*s12 + s23)*(s13 + s23) + p2q^2*(2*s12^2 + 2*s12*s13 + 
                2*s13^2 - 3*s12*s23 - 4*s13*s23 - 6*s23^2) + 
              p2q*p3q*(4*s12^2 - s23*(s13 + s23) + s12*(4*s13 + 5*s23))) - 
            p1q^3*(-(p3q^3*s12*(2*s13^2 + 3*s13*s23 + 2*s23^2 + 
                 2*s12*(s13 + 2*s23))) + p2q*p3q^2*(-2*s12^3 + 2*s13^3 + 
                3*s13^2*s23 + 3*s13*s23^2 + 2*s23^3 - s12^2*(4*s13 + 5*s23) + 
                s12*s23*(s13 + 6*s23)) + p2q^3*(2*s12^2*(s13 + 3*s23) - 
                2*s23*(-3*s13^2 - 2*s13*s23 + s23^2) + s12*(2*s13^2 + 
                  9*s13*s23 + 5*s23^2)) + p2q^2*p3q*(-2*s12^3 + 2*s13^3 + 
                5*s12^2*s23 + 5*s13^2*s23 + 5*s13*s23^2 + 2*s23^3 + 
                s12*(4*s13^2 + 9*s13*s23 + 15*s23^2))) - 
            p1q^2*(p3q^4*s12^2*(2*s12 + 2*s13 + s23) + p2q*p3q^3*s12*(
                2*s12^2 - 4*s12*s13 - 6*s13^2 - 9*s12*s23 - 11*s13*s23 - 
                4*s23^2) + p2q^4*(2*s23^2*(s13 + s23) + 2*s12^2*
                 (s13 + 2*s23) + s12*(2*s13^2 + 3*s13*s23 + 6*s23^2)) + 
              p2q^3*p3q*(-2*s12^3 - 3*s12^2*s23 + s12*(6*s13^2 - 5*s13*s23 + 
                  6*s23^2) + 4*(s13^3 + s23^3)) - p2q^2*p3q^2*(2*s12^3 + 
                s12^2*(8*s13 + 15*s23) + s12*(2*s13^2 + 15*s13*s23 + 
                  2*s23^2) - 2*(2*s13^3 + s13^2*s23 + s23^3)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + 
            (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((-9*ep*p2q*(p1q + p2q)*(s12 + s13 + s23)*
             (p3q^3*s12^2*(s12 + s23) - p3q^2*s12*(3*p1q*s23^2 + 
                p2q*s23*(2*s13 + s23) + p2q*s12*(3*s13 + s23) + 
                p1q*s12*(s13 + 3*s23)) + (p1q + p2q)*(p1q*p2q*s12*s13*s23 - 
                p2q^2*s13^2*(s13 + s23) + p1q^2*s23*(s23*(s13 + s23) + 
                  s12*(2*s13 + s23))) + p3q*(p1q^2*s23*(-s12^2 + 
                  2*s23*(s13 + s23) + s12*(4*s13 + s23)) + p1q*p2q*
                 (-(s12^2*s23) + s23^2*(s13 + s23) + 2*s12*s13*(s13 + 
                    2*s23)) + p2q^2*s13*(s23*(s13 + s23) + s12*(3*s13 + 
                    2*s23)))))/(4*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + 
              (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
              p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
           (9*p2q*(p1q + p2q)*(s12 + s13 + s23)*(p1q^4*s23*(s12 + s13 + s23)*(
                2*p2q*s12 + 3*p2q*s23 + p3q*s23) + 2*p2q*(-(p3q*s12) + 
                p2q*s13)*(-(p2q^2*p3q*s12*(s12 + s23)) - p3q^3*s12*
                 (s12 + s23) - p2q*p3q^2*(s12 - s13 - s23)*(s12 + s23) + 
                p2q^3*s13*(s12 + s13 + s23)) - p1q*(-(p3q^4*s12^2*
                  (s12 + s23)) + p2q*p3q^3*s12*(-3*s12^2 + 3*s12*s13 + 
                  2*s12*s23 + 4*s13*s23 + 5*s23^2) + p2q^4*s13*(-3*s13^2 + 
                  5*s13*s23 + 8*s23*(s12 + s23)) + p2q^3*p3q*(s13^3 + 
                  6*s13^2*s23 + s13*s23^2 - 4*s23^3 + s12*(3*s13^2 + 
                    2*s13*s23 - 4*s23^2)) + p2q^2*p3q^2*(3*s12^2*(s13 + 
                    3*s23) - s23*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 
                  s12*(-3*s13^2 + 7*s23^2))) + p1q^3*(-(p3q^2*s12*
                  (2*s12*s13 + 3*s12*s23 + 4*s13*s23 + 3*s23^2)) + 
                p2q*p3q*(-2*s12^3 - 3*s12^2*s23 + 7*s23^2*(s13 + s23) + 
                  s12*(2*s13^2 + 3*s13*s23 + 6*s23^2)) + p2q^2*
                 (2*s12^2*(s13 + 3*s23) + 5*s12*s23*(s13 + 3*s23) + 
                  s23*(-4*s13^2 + 5*s13*s23 + 9*s23^2))) + 
              p1q^2*(p3q^3*s12*(2*s12^2 + s12*(-s13 + s23) - s23*(2*s13 + 
                    s23)) + p2q*p3q^2*(-2*s12^3 - s12^2*(5*s13 + 12*s23) + 
                  s12*(2*s13^2 - 4*s13*s23 - 7*s23^2) + s23*(2*s13^2 + 
                    5*s13*s23 + 3*s23^2)) + p2q^3*(s13^3 - 11*s13^2*s23 - 
                  6*s13*s23^2 + 6*s23^3 + 2*s12^2*(s13 + 2*s23) + 
                  s12*(-2*s13^2 - 5*s13*s23 + 10*s23^2)) + p2q^2*p3q*
                 (-2*s12^3 - s13^3 + s12^2*(4*s13 - 3*s23) - 5*s13^2*s23 + 
                  7*s13*s23^2 + 11*s23^3 + s12*(2*s13^2 + 7*s13*s23 + 
                    10*s23^2)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
             (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*
          p1 . E0conj + ((9*ep*(p1q + p2q)*s23*((p2q + p3q)^2*(p3q*s12 - 
                 p2q*s13)^2*(s12 + s13 + s23) + p1q^4*s23*(s12 + s13 + s23)*(
                2*s13 + 3*s23) - 2*p1q^3*(s12 + s13 + s23)*(
                p2q*(s13^2 + 2*s13*s23 - s23^2 + s12*(2*s13 + s23)) + 
                p3q*(-(s23*(s13 + 2*s23)) + s12*(s13 + 3*s23))) - 
              p1q^2*(s12 + s13 + s23)*(-2*p2q*p3q*(s12^2 - 4*s12*s13 + 
                  s13^2 - 3*s12*s23 - s13*s23 + s23^2) + p2q^2*(-s13^2 + 
                  6*s13*s23 + s23^2 + 2*s12*(3*s13 + s23)) - 
                p3q^2*(3*s12^2 + s23^2 - 2*s12*(s13 + 4*s23))) - 
              2*p1q*(p2q^3*(s12 - 2*s13)*s13*(s12 + s13 + s23) - 
                p2q^2*p3q*(s12^2 - 4*s12*s13 + 3*s13^2)*(s12 + s13 + s23) - 
                p3q^3*s12*(2*s12 - s23)*(s12 + s13 + s23) + p2q*p3q^2*
                 (-2*s12^3 + 3*s12^2*s13 + s13*s23*(s13 + s23) + 
                  s12*(5*s13^2 + 8*s13*s23 + 2*s23^2)))))/
            (8*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (9*(p1q + p2q)*(p1q^6*s23^2*(s12 + s13 + s23)^
                2 - (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*p3q*s12*
                 (s12 + s13 + s23) + p2q*p3q^2*s12*(s12 + s13 + s23) - 
                p3q^3*s12*(s12 + s13 + s23) + p2q^3*(3*s12^2 + 7*s12*
                   (s13 + s23) + 4*(s13 + s23)^2)) - p1q^5*s23*(s12 + s13 + 
                s23)*(p2q*(2*s13^2 + 2*s12*(s13 - 3*s23) - 3*s13*s23 - 
                  4*s23^2) + p3q*(2*s12^2 + s23^2 + s12*(2*s13 + s23))) + 
              p1q^4*(s12 + s13 + s23)*(p3q^2*(s12^3 + s12^2*(s13 - s23) + 
                  2*s12*s23*(-s13 + s23) - s23^2*(s13 + 3*s23)) - 
                2*p2q*p3q*(s12^2*(s13 + 6*s23) + s23*(-s13^2 - 3*s13*s23 + 
                    s23^2) + s12*(s13^2 + 6*s13*s23 + 2*s23^2)) + 
                p2q^2*(s13^3 - 4*s12^2*s23 - 7*s13^2*s23 + s13*s23^2 + 
                  5*s23^3 + s12*(s13^2 - 12*s13*s23 + 4*s23^2))) - 
              p1q^3*(s12 + s13 + s23)*(p3q^3*(-s12^3 - 7*s12*s23^2 + s23^3 + 
                  s12^2*(-2*s13 + s23)) + p2q^3*(-3*s13^3 + 8*s13^2*s23 + 
                  11*s13*s23^2 + 6*s23^3 + 4*s12^2*(s13 + 3*s23) - 
                  2*s12*(s13^2 - 13*s13*s23 - 8*s23^2)) - p2q*p3q^2*
                 (6*s12^3 + s12^2*(5*s13 - 2*s23) - 2*s12*(s13 - 3*s23)*s23 + 
                  s23*(4*s13^2 + 9*s13*s23 - 2*s23^2)) + p2q^2*p3q*
                 (-4*s12^3 + 2*s13^3 - 3*s13^2*s23 - 14*s13*s23^2 + 3*s23^3 + 
                  2*s12^2*(4*s13 + 7*s23) + s12*(9*s13^2 + 22*s13*s23 + 
                    13*s23^2))) + p1q^2*(s12 + s13 + s23)*(p3q^4*s12*
                 (s12*(s13 - 5*s23) + 3*s23^2) + p2q^4*(3*s13^3 + 
                  9*s13^2*s23 + 2*s13*s23^2 - 8*s23^3 - 4*s12^2*(s13 + 
                    2*s23) + 3*s12*(2*s13^2 - 2*s13*s23 - 5*s23^2)) + 
                2*p2q*p3q^3*(s12^3 - 2*s12^2*s23 + s13*s23^2 - 
                  s12*(s13^2 + 2*s13*s23 - 2*s23^2)) + 2*p2q^3*p3q*
                 (2*s12^3 - 2*s13^3 + 5*s13^2*s23 + 10*s13*s23^2 - 2*s23^3 - 
                  s12^2*(8*s13 + s23) - s12*(4*s13^2 + 2*s13*s23 + 
                    3*s23^2)) + p2q^2*p3q^2*(10*s12^3 + s12^2*(3*s13 + 
                    11*s23) + 2*s12*(2*s13^2 + 5*s13*s23 + 3*s23^2) + 
                  s13*(s13^2 + 9*s13*s23 + 16*s23^2))) + 
              p1q*(p3q^5*s12^2*(s12 - 3*s23)*(s12 + s13 + s23) - 
                p2q*p3q^4*s12^2*(s12 + s13 + s23)*(s13 + 2*s23) - 
                p2q^2*p3q^3*(3*s12^4 + s13^2*s23*(s13 + s23) + s12^3*
                   (9*s13 + 4*s23) + s12^2*(7*s13^2 + 11*s13*s23 + s23^2) + 
                  s12*s13*(s13^2 + 6*s13*s23 + 4*s23^2)) + p2q^5*s13*
                 (-3*s13^3 + 5*s13^2*s23 + 20*s13*s23^2 + 12*s23^3 + 
                  2*s12^2*(s13 + 5*s23) + s12*(-s13^2 + 20*s13*s23 + 
                    22*s23^2)) + p2q^3*p3q^2*(2*s12^4 + 5*s12^3*(s13 + 
                    2*s23) + s12^2*(15*s13^2 + 29*s13*s23 + 16*s23^2) + 
                  s13*(s13^3 + 7*s13^2*s23 + 14*s13*s23^2 + 8*s23^3) + 
                  s12*(13*s13^3 + 36*s13^2*s23 + 34*s13*s23^2 + 8*s23^3)) + 
                p2q^4*p3q*(s12^3*(-4*s13 + 2*s23) + s12^2*(-s13^2 + 
                    14*s13*s23 + 6*s23^2) + s12*(-3*s13^3 + 26*s13^2*s23 + 
                    36*s13*s23^2 + 4*s23^3) + s13*(-6*s13^3 + s13^2*s23 + 
                    23*s13*s23^2 + 16*s23^3)))))/(8*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
               (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*Eik[k - p1]] + 
     (((9*ep*(p1q + p3q)*s23*(s12 + s13 + s23)*(p3q*s12 - p2q*s13 + 
            p1q*(2*s12 + s23)))/(16*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
            p3q*(s12 + s23))) - (9*(p1q + p3q)*(s12 + s13 + s23)*
           (p1q^3*s23*(s12 + s13 + s23) + p1q*(-(p2q^2*s13*(s13 - 2*s23)) + 
              p3q^2*(-s12^2 + s13*s23) + p2q*p3q*(2*s12*s13 + s12*s23 + 
                4*s13*s23)) + p1q^2*(p3q*(-s12^2 + s12*s13 + 2*s13*s23) + 
              p2q*(s12*s13 - s13^2 - s23^2)) - (p2q + p3q)*(p2q^2*s13^2 + 
              p2q*p3q*s13*(-s12 + s13) - p3q^2*(2*s23*(s13 + s23) + 
                s12*(s13 + 2*s23)))))/(16*p1q*(p2q + p3q)*s13*
           (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*E0 . E0conj + 
       ((9*ep*(p1q + p3q)*(s12 + s13 + s23)*(p1q^4*s23^2*(2*s12 + 3*s23) + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-(p3q*(2*s12 + s23)) + 
              p2q*(2*s13 + s23)) + p1q^2*s23*(-2*p2q*p3q*(2*s12^2 + 
                5*s12*s23 + 2*s13*s23) + p3q^2*(s12^2 - 4*s12*s23 + s23^2) + 
              p2q^2*(8*s12*s13 + 3*s13^2 + 2*s13*s23 + s23^2)) - 
            2*p1q*(p3q^3*s12^2*(s12 - s23) + p2q^2*p3q*(-2*s12^2*s13 + 
                s12*(s13 - s23)^2 + s13^2*s23) + p2q*p3q^2*s12*(s12^2 - 
                2*s12*s13 + 2*s23^2) + p2q^3*s13*(s12*s13 + 
                s23*(2*s13 + s23))) - 2*p1q^3*s23*(p3q*(s12^2 + s12*s23 - 
                2*s23^2) + p2q*(2*s12^2 + 3*s13*s23 + s12*(s13 + 3*s23)))))/
          (8*(p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))) + (9*(p1q + p3q)*(p1q^6*s23^2*(s12 + s13 + s23)^2 - 
            p1q^5*s23*(s12 + s13 + s23)*(p3q*(2*s12^2 + 2*s12*s13 - 
                3*s12*s23 - 6*s13*s23 - 4*s23^2) + p2q*(2*s12*s13 + 2*s13^2 + 
                s13*s23 + s23^2)) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*
             (p2q^3*s13*(s12 + s13 + s23) + 3*p2q^2*p3q*s13*(s12 + s13 + 
                s23) + p3q^3*s13*(s12 + s13 + s23) - p2q*p3q^2*(4*s12^2 + 
                5*s12*s13 + s13^2 + 8*s12*s23 + 5*s13*s23 + 4*s23^2)) + 
            p1q^4*(s12 + s13 + s23)*(p3q^2*(s12^3 + s12^2*(s13 - 7*s23) + 
                s12*s23*(-8*s13 + 7*s23) + s23^2*(14*s13 + 11*s23)) + 
              p2q^2*(s13^3 - s13^2*s23 + 2*s13*s23^2 - 3*s23^3 + 
                s12*(s13^2 - 2*s13*s23 - s23^2)) - 2*p2q*p3q*(
                s12^2*(s13 + s23) + s12*s13*(s13 + 8*s23) + 
                s23*(6*s13^2 + 3*s13*s23 + 2*s23^2))) - 
            p1q^3*(s12 + s13 + s23)*(-(p2q^3*(4*s12^2*s13 + s13^3 - 
                 s13^2*s23 + 9*s13*s23^2 - s23^3 + 2*s12*s13*(s13 + 
                   3*s23))) + p3q^3*(-3*s12^3 - 2*s12^2*(s13 - 8*s23) + 
                s12*s23*(16*s13 + s23) - 2*s23^2*(7*s13 + 6*s23)) + 
              p2q^2*p3q*(4*s12^3 - 6*s13^3 + 10*s12^2*s23 - 6*s13*s23^2 + 
                8*s23^3 + s12*(-5*s13^2 + 4*s13*s23 + 7*s23^2)) + 
              p2q*p3q^2*(2*s12^3 + 3*s12^2*(3*s13 + 5*s23) + 
                4*s12*(2*s13^2 + 9*s13*s23 + 2*s23^2) + s23*(20*s13^2 + 
                  17*s13*s23 + 7*s23^2))) - p1q^2*(s12 + s13 + s23)*
             (p2q^4*s13*(5*s12*s13 + 9*s13*s23 - 3*s23^2) + p3q^4*(-5*s12^3 - 
                s23^2*(5*s13 + 4*s23) + 2*s12*s23*(8*s13 + 5*s23) + 
                s12^2*(-2*s13 + 13*s23)) + p2q^2*p3q^2*(9*s12^3 - 6*s13^3 - 
                7*s13^2*s23 - 14*s13*s23^2 + 4*s23^3 + s12^2*(-4*s13 + 
                  17*s23) + s12*(-5*s13^2 - 20*s13*s23 + 4*s23^2)) + 
              2*p2q*p3q^3*(2*s12^3 + s12^2*(6*s13 + 9*s23) + 
                s23*(4*s13^2 + 3*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 
                  9*s13*s23 + 4*s23^2)) - 2*p2q^3*p3q*(7*s12^2*s13 + 
                s12*s23*(13*s13 + s23) + s13*(s13^2 - s13*s23 + 10*s23^2))) + 
            p1q*(3*p2q^5*s13^2*(s13 - s23)*(s12 + s13 + s23) - 
              p2q^4*p3q*s13^2*(s12 + s13 + s23)*(15*s12 + 16*s23) + 
              p3q^5*s12*(3*s12^3 + s12^2*(5*s13 + s23) + 2*s12*(s13^2 - 
                  3*s13*s23 - 3*s23^2) - 2*s23*(3*s13^2 + 5*s13*s23 + 
                  2*s23^2)) - p2q*p3q^4*(6*s12^4 + s12^3*(13*s13 + 15*s23) + 
                2*s12*s13*(2*s13^2 + s13*s23 - 2*s23^2) - 2*s13*s23*
                 (s13^2 + 3*s13*s23 + 2*s23^2) + s12^2*(11*s13^2 + 
                  16*s13*s23 + 9*s23^2)) + p2q^3*p3q^2*(s12^3*(21*s13 - 
                  s23) + s12^2*(15*s13^2 + 48*s13*s23 - s23^2) + 
                s12*s13*(-7*s13^2 + 13*s13*s23 + 36*s23^2) - 
                s13*(s13^3 + 10*s13^2*s23 + s13*s23^2 - 8*s23^3)) + 
              p2q^2*p3q^3*(-9*s12^4 + 3*s12^3*(s13 - 7*s23) + 
                s12^2*(17*s13^2 + 26*s13*s23 - 12*s23^2) + s12*s13*
                 (7*s13^2 + 33*s13*s23 + 34*s23^2) + 2*s13*(s13^3 + 
                  2*s13^2*s23 + 5*s13*s23^2 + 4*s23^3)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((9*ep*p1q*(p1q + p3q)*s23*(s12 + s13 + s23)*
           ((p2q + p3q)^2*s13*(-(p3q*s12) + p2q*s13) + 2*p1q^3*s23*
             (s12 + s23) + p1q*(p2q^2*s13*(s12 + 2*s13 - 2*s23) - 
              p3q^2*(2*s12^2 + 3*s12*s13 + 2*s12*s23 + s13*s23) - 
              p2q*p3q*(3*s12^2 + 4*s12*s13 - s13^2 + 3*s12*s23 + 
                4*s13*s23)) - p1q^2*(p3q*(2*s12^2 + 2*s12*s13 + (s13 - 2*s23)*
                 s23) + p2q*(2*s12^2 + (4*s13 - s23)*s23 + 
                s12*(2*s13 + s23)))))/(4*(p1q + p2q + p3q)*s13*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (9*(p1q + p3q)*(s12 + s13 + s23)*(-2*p3q^2*(p2q + p3q)^2*
             (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 2*p1q^5*p3q*s23^2*
             (s12 + s13 + s23) - p1q^4*s23*(p2q^2*(s12 + s23)*(2*s13 + s23) + 
              p3q^2*(2*s12^2 + 2*s13^2 + 2*s12*(s13 - 2*s23) - 3*s13*s23 - 
                6*s23^2) + p2q*p3q*(4*s12*s13 + 4*s13^2 - s12*s23 + 
                5*s13*s23 - s23^2)) - p1q^2*(p2q^4*s13^2*(2*s12 + 2*s13 + 
                s23) - p2q^3*p3q*s13*(6*s12^2 + 4*s12*s13 - 2*s13^2 + 
                11*s12*s23 + 9*s13*s23 + 4*s23^2) + p2q*p3q^3*(4*s12^3 + 
                6*s12^2*s13 - 2*s13^3 - 5*s12*s13*s23 - 3*s13^2*s23 + 
                6*s13*s23^2 + 4*s23^3) + p2q^2*p3q^2*(4*s12^3 - 2*s13^3 - 
                2*s12^2*(s13 - s23) - 15*s13^2*s23 - 2*s13*s23^2 + 2*s23^3 - 
                s12*s13*(8*s13 + 15*s23)) + p3q^4*(2*s12^2*s13 + 
                2*s23*(2*s13^2 + 3*s13*s23 + s23^2) + s12*(2*s13^2 + 
                  3*s13*s23 + 2*s23^2))) - 2*p1q*p3q*(p2q + p3q)*
             (p3q^3*s12*(s12 - 2*s23)*(s12 + s13 + s23) + p2q^3*s13^2*(
                2*s12 + 2*s13 + s23) + p2q^2*p3q*s13*(-4*s12^2 - 3*s12*s13 + 
                s13^2 - 5*s12*s23 - 2*s13*s23 - 2*s23^2) + p2q*p3q^2*(
                2*s12^3 - 2*s13*s23*(s13 + s23) - s12*(2*s13^2 + 5*s13*s23 + 
                  2*s23^2))) + p1q^3*(p2q^3*s13*(2*s12^2 + 2*s23*
                 (2*s13 + s23) + s12*(2*s13 + 3*s23)) - p2q*p3q^2*(2*s12^3 - 
                2*s13^3 + 5*s13^2*s23 + 15*s13*s23^2 + 2*s23^3 + 
                s12^2*(4*s13 + 5*s23) + s12*s23*(9*s13 + 5*s23)) - 
              p2q^2*p3q*(2*s12^3 - 2*s13^3 + 3*s12^2*s23 - 5*s13^2*s23 + 
                6*s13*s23^2 + 2*s23^3 + s12*(-4*s13^2 + s13*s23 + 3*s23^2)) - 
              p3q^3*(2*s12^2*(s13 + 3*s23) + s23*(6*s13^2 + 5*s13*s23 - 
                  2*s23^2) + s12*(2*s13^2 + 9*s13*s23 + 4*s23^2)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((-9*ep*p2q*(p1q + p3q)*(s12 + s13 + s23)*(p2q^2*s13^2 - 
              3*p1q*p2q*s13*s23 + p3q^2*s12*(s12 + s23) + 2*p1q^2*s23*(s12 + 
                s23) + p1q*p3q*s23*(s12 + s23) - p2q*p3q*s13*(2*s12 + s23)))/
            (4*(p1q + p2q + p3q)*s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
              2*p3q*s12*(p2q*s13 + p1q*s23))) - (9*p2q*(p1q + p3q)*
             (s12 + s13 + s23)*(2*p1q^3*p3q*s23*(s12 + s13 + s23) + 
              2*p2q*p3q*(p3q*s12 - p2q*s13)*(-(p2q*s13) + p3q*(s12 + s23)) + 
              p1q^2*(-(p2q^2*s13*(2*s12 + s23)) + p2q*p3q*(2*s12^2 - 
                  2*s13^2 + 5*s12*s23 - s13*s23 + 3*s23^2) + 
                p3q^2*(2*s12*s13 + 7*s12*s23 + 6*s13*s23 + 7*s23^2)) + 
              p1q*(p2q^3*s13^2 - p2q^2*p3q*s13*(4*s12 + s13 + 5*s23) + 
                p2q*p3q^2*(3*s12^2 + 2*s12*s13 - 2*s13^2 + 5*s12*s23 - 
                  3*s13*s23 + 2*s23^2) + p3q^3*(-s12^2 + 4*s23*(s13 + s23) + 
                  s12*(2*s13 + 3*s23)))))/(4*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
              2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj + 
         ((9*ep*(p1q + p3q)*s23*(-((p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
                (s12 + s13 + s23)) + p1q^4*s23*(2*s12 + s23)*(s12 + s13 + 
                s23) + p1q^2*(s12 + s13 + s23)*(p2q^2*(4*s12*s13 + s13^2 + 
                  4*s13*s23 - s23^2) + p3q^2*(-5*s12^2 + 2*s12*s23 + s23^2) - 
                2*p2q*p3q*(4*s12^2 + 2*s12*s23 + s23*(s13 + s23))) - 
              2*p1q^3*(s12 + s13 + s23)*(p3q*(s12^2 - 2*s12*s23 - s23^2) + 
                p2q*(2*s12^2 + s23*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p1q*(-4*p3q^3*s12^2*(s12 + s13 + s23) - 2*p2q*p3q^2*s12*
                 (3*s12 - 2*s13)*(s12 + s13 + s23) - 2*p2q^3*s13*(s13 - s23)*
                 (s12 + s13 + s23) + 2*p2q^2*p3q*(2*s13*s23*(s13 + s23) + 
                  s12^2*(4*s13 + s23) + s12*(4*s13^2 + 7*s13*s23 + s23^2)))))/
            (8*(p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))) - (9*(p1q + p3q)*
             (p1q^6*s23^2*(s12 + s13 + s23)^2 + (p2q + p3q)*(p3q*s12 - 
                 p2q*s13)^2*(p2q^3*s13*(s12 + s13 + s23) - p2q^2*p3q*s13*
                 (s12 + s13 + s23) + p3q^3*s13*(s12 + s13 + s23) + 
                p2q*p3q^2*(4*s12^2 + 7*s12*s13 + 3*s13^2 + 8*s12*s23 + 
                  7*s13*s23 + 4*s23^2)) - p1q^5*s23*(s12 + s13 + s23)*(
                p2q*(2*s12*s13 + 2*s13^2 + s13*s23 + s23^2) + 
                p3q*(2*s12^2 - 2*s13*s23 + s12*(2*s13 + s23))) + 
              p1q^4*(s12 + s13 + s23)*(p2q^2*(s13^3 - s13^2*s23 + 
                  6*s13*s23^2 - s23^3 + s12*(s13 + s23)^2) + 
                p3q^2*(s12^3 + s12^2*(s13 - 3*s23) - s23^2*(2*s13 + 7*s23) - 
                  s12*s23*(8*s13 + 7*s23)) - 2*p2q*p3q*(s12^2*(s13 - s23) + 
                  s12*(s13^2 + 2*s13*s23 - 2*s23^2) + s23*(2*s13^2 - 
                    3*s13*s23 + 2*s23^2))) + p1q^2*(s12 + s13 + s23)*(
                p2q^4*s13*(5*s12*s13 + 4*s13^2 - 3*s13*s23 + 3*s23^2) + 
                p3q^4*(3*s12^3 + 6*s12*s23^2 - s23^2*(3*s13 + 4*s23) + 
                  s12^2*(10*s13 + 9*s23)) - 2*p2q^3*p3q*(7*s12^2*s13 + 
                  s12*(4*s13^2 + 13*s13*s23 - s23^2) + s13*(-3*s13^2 + 
                    11*s13*s23 + 2*s23^2)) + 2*p2q*p3q^3*(2*s12^3 + 
                  s12^2*(2*s13 + 5*s23) + s23*(-4*s13^2 + 3*s13*s23 + 
                    2*s23^2) + s12*(-8*s13^2 - 7*s13*s23 + 10*s23^2)) + 
                p2q^2*p3q^2*(9*s12^3 + 6*s13^3 + 13*s12^2*s23 - 19*s13^2*
                   s23 + 2*s13*s23^2 + 4*s23^3 + s12*(-13*s13^2 - 20*s13*
                     s23 + 16*s23^2))) + p1q^3*(s12 + s13 + s23)*(
                -(p2q^3*(4*s12^2*s13 - s13^3 + 9*s13^2*s23 - 3*s13*s23^2 + 
                   s23^3 + 2*s12*s13*(s13 + 3*s23))) + p3q^3*(3*s12^3 - 
                  s12*s23*(8*s13 + 3*s23) + s12^2*(6*s13 + 4*s23) - 
                  2*s23^2*(3*s13 + 5*s23)) + p2q*p3q^2*(2*s12^3 - 
                  s12^2*(s13 - 13*s23) - 4*s12*(2*s13^2 + s13*s23 - 
                    6*s23^2) + s23*(-4*s13^2 + 17*s13*s23 + s23^2)) + 
                p2q^2*p3q*(4*s12^3 + 10*s12^2*s23 - 3*s12*(s13^2 - 5*s23^2) + 
                  2*(s13^3 - 6*s13^2*s23 + 9*s13*s23^2 + s23^3))) + 
              p1q*(p2q^5*s13^2*(s13 - 3*s23)*(s12 + s13 + s23) + 
                p2q^4*p3q*s13^2*(7*s12^2 + 15*s12*s13 + 8*s13^2 + 9*s12*s23 + 
                  10*s13*s23 + 2*s23^2) + p3q^5*s12*(s12^3 + s12^2*
                   (7*s13 + 5*s23) + 2*s23*(s13^2 + 3*s13*s23 + 2*s23^2) + 
                  2*s12*(3*s13^2 + 6*s13*s23 + 4*s23^2)) + p2q*p3q^4*
                 (6*s12^4 + s12^3*(13*s13 + 9*s23) - 2*s13*s23*(3*s13^2 + 
                    5*s13*s23 + 2*s23^2) + s12^2*(-5*s13^2 - 2*s13*s23 + 
                    3*s23^2) - 2*s12*s13*(6*s13^2 + 15*s13*s23 + 8*s23^2)) + 
                p2q^2*p3q^3*(9*s12^4 + 5*s12^3*(s13 + 3*s23) + s12^2*
                   (-21*s13^2 - 20*s13*s23 + 6*s23^2) - s12*s13*(11*s13^2 + 
                    47*s13*s23 + 30*s23^2) + 2*s13*(3*s13^3 - s13^2*s23 - 
                    8*s13*s23^2 - 4*s23^3)) - p2q^3*p3q^2*
                 (s12^3*(17*s13 + s23) + s12^2*(27*s13^2 + 42*s13*s23 + 
                    s23^2) + s12*s13*(s13^2 + 39*s13*s23 + 32*s23^2) + 
                  s13*(-9*s13^3 - 4*s13^2*s23 + 13*s13*s23^2 + 8*s23^3)))))/
            (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + 
                s23) + (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k - p1]] + 
     (((ep*(p1q + p3q)*(8*s12 - s13)*(s12 + s13 + s23)*(p3q*s12 - p2q*s13 + 
            p1q*(2*s12 + s23)))/(16*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
            p3q*(s12 + s23))) - ((p1q + p3q)*(s12 + s13 + s23)*
           (9*p1q^3*s12*s23*(s12 + s13 + s23) - (p2q + p3q)*
             (p2q^2*s13^2*(9*s12 + s23) - p2q*p3q*s13*(9*s12^2 - 9*s12*s13 + 
                2*s12*s23 + s23^2) - p3q^2*s12*(9*s12*s13 + 17*s12*s23 + 
                18*s13*s23 + 17*s23^2)) - p1q*(p2q^2*s13*(s13 - 2*s23)*(
                9*s12 + s23) + p3q^2*(9*s12^3 - 10*s12*s13*s23 + s23^3) + 
              p2q*p3q*(-37*s12*s13*s23 + (s13 - s23)^2*s23 - 9*s12^2*
                 (2*s13 + s23))) + p1q^2*(p3q*(-9*s12^3 + 9*s12^2*s13 + 
                20*s12*s13*s23 + (s13 - s23)*s23^2) + p2q*(9*s12^2*s13 + 
                (s13 - s23)*s23^2 + s12*(-9*s13^2 + 2*s13*s23 - 9*s23^2)))))/
          (16*p1q*(p2q + p3q)*s12*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
            p3q*(s12 + s23))))*E0 . E0conj + 
       ((ep*(p1q + p3q)*(s12 + s13 + s23)*(p1q^4*s23^2*(16*s12^2 - 
              2*s12*s13 + 26*s12*s23 - s13*s23 + 2*s23^2) + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q*(-18*s12^2 - 10*s12*s23 + 
                s13*s23) + p2q*(18*s12*s13 + 8*s12*s23 + s13*s23)) - 
            2*p1q^3*s23*(p3q*(8*s12^3 - s12^2*(s13 - 11*s23) + 
                2*s12*(s13 - 7*s23)*s23 + (s13 - s23)*s23^2) + 
              p2q*(16*s12^3 - s13*(s13 - 2*s23)*s23 + s12^2*(6*s13 + 
                  25*s23) + s12*(-s13^2 + 24*s13*s23 + s23^2))) - 
            2*p1q*(p2q*p3q^2*s12*(9*s12^3 + 2*s13^2*s23 - 2*s12*(s13 - 7*s23)*
                 s23 - s12^2*(18*s13 + s23)) + p3q^3*s12^2*(9*s12^2 - 
                10*s12*s23 - s23*(2*s13 + 3*s23)) + p2q^3*s13*(9*s12^2*s13 + 
                s13*s23^2 + s12*s23*(19*s13 + 8*s23)) + p2q^2*p3q*(
                -18*s12^3*s13 + s12*s13*(12*s13 - s23)*s23 + s13^2*s23^2 + 
                s12^2*(9*s13^2 - 18*s13*s23 + 8*s23^2))) + 
            p1q^2*s23*(p3q^2*(14*s12^3 + s12^2*(5*s13 - 32*s23) - s13*s23^2 + 
                2*s12*s23*(-s13 + s23)) - 2*p2q*p3q*(14*s12^3 + 
                s13*s23*(-s13 + s23) + s12*s23*(13*s13 + s23) + 
                s12^2*(-4*s13 + 39*s23)) + p2q^2*(68*s12^2*s13 + 
                s13*(-s13^2 + 2*s13*s23 + s23^2) + s12*(22*s13^2 + 
                  22*s13*s23 + 8*s23^2)))))/(8*(p1q + p2q + p3q)*s12*s13*s23*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         ((p1q + p3q)*(9*p1q^6*s12*s23^2*(s12 + s13 + s23)^2 - 
            p1q^5*s23*(s12 + s13 + s23)*(p3q*(18*s12^3 + s12^2*(18*s13 - 
                  25*s23) + s23^2*(s13 + 3*s23) - 4*s12*s23*(13*s13 + 
                  8*s23)) + p2q*(2*s12^2*(9*s13 + s23) + s23^2*(s13 + 
                  3*s23) + s12*(18*s13^2 + 11*s13*s23 + 13*s23^2))) + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^3*s13*(9*s12 + s23)*(s12 + 
                s13 + s23) + p3q^3*(s12^2*(9*s13 - s23) - s23^2*(s13 + s23) + 
                s12*(9*s13^2 + 8*s13*s23 - 2*s23^2)) + p2q^2*p3q*(
                s12^2*(27*s13 - s23) + s12*(27*s13^2 + 28*s13*s23 - 
                  2*s23^2) + s23*(2*s13^2 + s13*s23 - s23^2)) - 
              p2q*p3q^2*(36*s12^3 + s12^2*(45*s13 + 74*s23) + 
                s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*(9*s13^2 + 
                  46*s13*s23 + 40*s23^2))) + p1q^4*(s12 + s13 + s23)*
             (p3q^2*(9*s12^4 + s12^3*(9*s13 - 61*s23) - s23^3*(2*s13 + 
                  5*s23) + 2*s12*s23^2*(61*s13 + 47*s23) + s12^2*s23*
                 (-70*s13 + 61*s23)) - p2q*p3q*(6*s12^3*(3*s13 + 2*s23) + 
                2*s12^2*(9*s13^2 + 68*s13*s23 - 3*s23^2) + s23^2*(-2*s13^2 - 
                  5*s13*s23 + 7*s23^2) + s12*s23*(106*s13^2 + 50*s13*s23 + 
                  37*s23^2)) + p2q^2*(4*s12^3*s23 + s23^2*(2*s13^2 + 
                  7*s13*s23 - 2*s23^2) + s12^2*(9*s13^2 - 12*s13*s23 - 
                  s23^2) + s12*(9*s13^3 - 7*s13^2*s23 + 26*s13*s23^2 - 
                  23*s23^3))) - p1q^2*(s12 + s13 + s23)*
             (p3q^4*(-45*s12^4 - 2*s12^3*(9*s13 - 55*s23) + s23^4 + 
                5*s12^2*s23*(28*s13 + 17*s23) - s12*s23^2*(45*s13 + 
                  37*s23)) + p2q^4*s13*(45*s12^2*s13 + s12*(85*s13 - 27*s23)*
                 s23 - s23*(s13^2 - 8*s13*s23 + 3*s23^2)) + p2q*p3q^3*(
                36*s12^4 + 3*s23^3*(-s13 + s23) + s12^3*(108*s13 + 143*s23) + 
                s12*s23*(76*s13^2 + 42*s13*s23 + 25*s23^2) + 
                s12^2*(72*s13^2 + 147*s13*s23 + 49*s23^2)) + p2q^2*p3q^2*(
                81*s12^4 + s12^3*(-36*s13 + 141*s23) + s23^2*(s13^2 - 
                  13*s13*s23 + 3*s23^2) + s12^2*(-45*s13^2 - 191*s13*s23 + 
                  18*s23^2) - s12*(54*s13^3 + 48*s13^2*s23 + 144*s13*s23^2 - 
                  25*s23^3)) - p2q^3*p3q*(126*s12^3*s13 + 18*s12^2*s23*
                 (13*s13 + s23) + s23*(s13^3 - 9*s13^2*s23 + 13*s13*s23^2 - 
                  s23^3) + s12*(18*s13^3 - 33*s13^2*s23 + 186*s13*s23^2 + 
                  s23^3))) - p1q^3*(s12 + s13 + s23)*(p3q^3*(-27*s12^4 - 
                6*s12^3*(3*s13 - 23*s23) + s23^3*(s13 + 3*s23) + 
                s12^2*s23*(139*s13 + 8*s23) - 2*s12*s23^2*(62*s13 + 
                  53*s23)) + p2q*p3q^2*(18*s12^4 + 9*s12^3*(9*s13 + 13*s23) + 
                s23^2*(-2*s13^2 - 5*s13*s23 + 7*s23^2) + s12^2*(72*s13^2 + 
                  305*s13*s23 + 51*s23^2) + s12*s23*(180*s13^2 + 143*s13*
                   s23 + 55*s23^2)) + p2q^3*(-36*s12^3*s13 - 18*s12^2*s13*
                 (s13 + 3*s23) + s23*(s13^3 + 5*s13^2*s23 - 7*s13*s23^2 + 
                  s23^3) + s12*(-9*s13^3 + 13*s13^2*s23 - 81*s13*s23^2 + 
                  9*s23^3)) + p2q^2*p3q*(36*s12^4 + 78*s12^3*s23 + 
                s12^2*(-45*s13^2 + 22*s13*s23 + 43*s23^2) + 
                s23*(s13^3 + 3*s13^2*s23 - 13*s13*s23^2 + 5*s23^3) + 
                s12*(-54*s13^3 + 4*s13^2*s23 - 66*s13*s23^2 + 62*s23^3))) + 
            p1q*(3*p2q^5*s13^2*(s13 - s23)*(9*s12 + s23)*(s12 + s13 + s23) + 
              p3q^5*s12*(27*s12^4 + 2*s23^3*(s13 + s23) + s12^3*(45*s13 + 
                  11*s23) + s12^2*(18*s13^2 - 51*s13*s23 - 49*s23^2) - 
                s12*s23*(53*s13^2 + 86*s13*s23 + 31*s23^2)) - 
              p2q^4*p3q*s13*(135*s12^3*s13 + s12*s23*(153*s13^2 + 
                  165*s13*s23 - 4*s23^2) + s12^2*(135*s13^2 + 291*s13*s23 - 
                  2*s23^2) + s23*(-3*s13^3 + 8*s13^2*s23 + 9*s13*s23^2 - 
                  2*s23^3)) + p2q*p3q^4*(-54*s12^5 + 2*s13*s23^3*
                 (s13 + s23) - s12^4*(117*s13 + 131*s23) - s12^3*(99*s13^2 + 
                  135*s13*s23 + 70*s23^2) + 2*s12*s23*(8*s13^3 + 29*s13^2*
                   s23 + 25*s13*s23^2 + 3*s23^3) + s12^2*(-36*s13^3 - 
                  15*s13^2*s23 + 54*s13*s23^2 + 13*s23^3)) + p2q^3*p3q^2*(
                9*s12^4*(21*s13 - s23) + s12^3*(135*s13^2 + 439*s13*s23 - 
                  8*s23^2) + s12^2*(-63*s13^3 + 106*s13^2*s23 + 346*s13*
                   s23^2 + 3*s23^3) + s13*s23*(s13^3 - 8*s13^2*s23 - 
                  3*s13*s23^2 + 6*s23^3) + s12*(-9*s13^4 - 107*s13^3*s23 - 
                  22*s13^2*s23^2 + 94*s13*s23^3 + 2*s23^4)) + 
              p2q^2*p3q^3*(-81*s12^5 + s12^4*(27*s13 - 187*s23) + 
                s12^3*(153*s13^2 + 247*s13*s23 - 101*s23^2) + s13*s23*
                 (s13^3 + 5*s13*s23^2 + 6*s23^3) + s12^2*(63*s13^3 + 
                  300*s13^2*s23 + 340*s13*s23^2 + 11*s23^3) + 
                s12*(18*s13^4 + 29*s13^3*s23 + 99*s13^2*s23^2 + 102*s13*
                   s23^3 + 6*s23^4)))))/(8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*
           s12*s13*s23*(p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p1 . E0conj*p2 . E0 + ((ep*p1q*(p1q + p3q)*(8*s12 - s13)*
           (s12 + s13 + s23)*((p2q + p3q)^2*s13*(-(p3q*s12) + p2q*s13) + 
            2*p1q^3*s23*(s12 + s23) + p1q*(p2q^2*s13*(s12 + 2*s13 - 2*s23) - 
              p3q^2*(2*s12^2 + 3*s12*s13 + 2*s12*s23 + s13*s23) - 
              p2q*p3q*(3*s12^2 + 4*s12*s13 - s13^2 + 3*s12*s23 + 
                4*s13*s23)) - p1q^2*(p3q*(2*s12^2 + 2*s12*s13 + (s13 - 2*s23)*
                 s23) + p2q*(2*s12^2 + (4*s13 - s23)*s23 + 
                s12*(2*s13 + s23)))))/(4*(p1q + p2q + p3q)*s12*s13*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) - 
         ((p1q + p3q)*(s12 + s13 + s23)*(18*p3q^2*(p2q + p3q)^2*s12*
             (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 2*p1q^5*(p2q - 8*p3q)*
             s12*s23^2*(s12 + s13 + s23) + 2*p1q*p3q*(p2q + p3q)*
             (p3q^3*s12^2*(9*s12 - 19*s23)*(s12 + s13 + s23) + 
              p2q^3*s13^2*(18*s12^2 + s13*s23 + 2*s12*(9*s13 + 5*s23)) + 
              p2q*p3q^2*s12*(18*s12^3 - s13*s23*(17*s13 + 16*s23) - 
                2*s12*(9*s13^2 + 22*s13*s23 + 9*s23^2)) - p2q^2*p3q*s13*(
                36*s12^3 + s13*s23^2 + s12^2*(27*s13 + 46*s23) + 
                s12*(-9*s13^2 + 19*s13*s23 + 18*s23^2))) - 
            p1q^4*s23*(p2q^2*(2*s12^3 - s13*s23^2 - 2*s12^2*(7*s13 + 3*s23) + 
                s12*(2*s13^2 - 17*s13*s23 - 8*s23^2)) + p2q*p3q*(4*s12^3 + 
                s12^2*(-28*s13 + 8*s23) + s23*(s13^2 + s13*s23 + 2*s23^2) + 
                s12*(-32*s13^2 - 45*s13*s23 + 6*s23^2)) + p3q^2*(-16*s12^3 + 
                s12^2*(-14*s13 + 32*s23) + s23*(s13^2 + 2*s13*s23 + 
                  2*s23^2) + s12*(-16*s13^2 + 26*s13*s23 + 50*s23^2))) + 
            p1q^3*(-(p2q^3*s13*(18*s12^3 + 2*s13*s23^2 + 2*s12^2*(9*s13 + 
                   14*s23) + s12*s23*(37*s13 + 18*s23))) + 
              p3q^3*(6*s12^3*(3*s13 + 8*s23) + s12*s23*(51*s13^2 + 
                  44*s13*s23 - 12*s23^2) - s23^2*(s13^2 + 2*s13*s23 + 
                  2*s23^2) + 2*s12^2*(9*s13^2 + 36*s13*s23 + 19*s23^2)) + 
              p2q^2*p3q*(18*s12^4 + 22*s12^3*s23 + s13*s23*(s13^2 + 
                  6*s23^2) + s12^2*(-36*s13^2 + s13*s23 + 22*s23^2) + 
                s12*(-18*s13^3 - 47*s13^2*s23 + 55*s13*s23^2 + 18*s23^3)) + 
              p2q*p3q^2*(18*s12^4 + s12^3*(36*s13 + 34*s23) + s12^2*s23*
                 (65*s13 + 42*s23) + s23*(s13^3 + s13^2*s23 + 4*s13*s23^2 - 
                  2*s23^3) + s12*(-18*s13^3 + 41*s13^2*s23 + 135*s13*s23^2 + 
                  24*s23^3))) + p1q^2*(p2q^4*s13^2*(18*s12^2 + s13*s23 + 
                2*s12*(9*s13 + 5*s23)) + p3q^4*s12*(6*s12^2*(3*s13 - s23) + 
                2*s12*(9*s13^2 + 10*s13*s23 + 8*s23^2) + s23*(35*s13^2 + 
                  54*s13*s23 + 22*s23^2)) - p2q^3*p3q*s13*(54*s12^3 - 
                s13*(s13 - 6*s23)*s23 + 4*s12^2*(9*s13 + 25*s23) + 
                s12*(-18*s13^2 + 81*s13*s23 + 38*s23^2)) + p2q^2*p3q^2*(
                36*s12^4 - 2*s12^3*(9*s13 - 7*s23) + s13*(s13 - 2*s23)^2*
                 s23 - 2*s12^2*(36*s13^2 + 69*s13*s23 + 2*s23^2) - 
                s12*(18*s13^3 + 133*s13^2*s23 + 16*s13*s23^2 - 18*s23^3)) + 
              p2q*p3q^3*(36*s12^4 + 2*s12^3*(27*s13 - 5*s23) - 6*s12^2*s23*
                 (9*s13 + s23) + s13*s23*(s13^2 + 2*s13*s23 + 4*s23^2) + 
                s12*(-18*s13^3 - 25*s13^2*s23 + 58*s13*s23^2 + 40*s23^3)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p2 . E0*p2 . E0conj + p1 . E0*
        ((-1/4*(ep*p2q*(p1q + p3q)*(s12 + s13 + s23)*(p1q*p2q*s13*
                (-26*s12 + s13 - 2*s23)*s23 + p2q^2*s13^2*(9*s12 + s23) + p1q*
                p3q*s23*(6*s12^2 - 3*s12*s13 + 6*s12*s23 - s13*s23) + p3q^2*
                s12*(9*s12^2 + 9*s12*s23 - s13*s23) + p2q*p3q*s13*
                (-18*s12^2 - 10*s12*s23 + s13*s23) + p1q^2*s23*(16*s12^2 - 
                 2*s12*s13 + 17*s12*s23 - s13*s23 + s23^2)))/
             ((p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - 
                 p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
           (p2q*(p1q + p3q)*(s12 + s13 + s23)*(-(p1q^3*s23*(s12 + s13 + s23)*
                (p3q*(-16*s12 + s23) + p2q*(2*s12 + s23))) + 
              2*p2q*p3q*(-(p3q*s12) + p2q*s13)*(p2q*s13*(9*s12 + s23) + 
                p3q*(-9*s12^2 - 9*s12*s23 + s13*s23)) + p1q*(p2q^3*s13^2*
                 (9*s12 + s23) + p3q^3*s12*(-9*s12^2 + 18*s12*s13 + 
                  23*s12*s23 + 35*s13*s23 + 32*s23^2) - p2q^2*p3q*s13*
                 (36*s12^2 + 2*s23*(-s13 + s23) + s12*(9*s13 + 46*s23)) + 
                p2q*p3q^2*(27*s12^3 + s13*(s13 - 2*s23)*s23 + s12^2*
                   (18*s13 + 41*s23) + s12*(-18*s13^2 - 29*s13*s23 + 
                    14*s23^2))) + p1q^2*(p2q^2*s13*(-18*s12^2 - 10*s12*s23 + 
                  s13*s23) + p3q^2*(-(s13*s23^2) + 2*s12^2*(9*s13 + 29*s23) + 
                  s12*s23*(51*s13 + 58*s23)) + p2q*p3q*(18*s12^3 + 
                  40*s12^2*s23 + s13*(s13 - s23)*s23 + s12*(-18*s13^2 - 
                    13*s13*s23 + 22*s23^2)))))/(4*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
               2 - 2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj + 
         ((ep*(p1q + p3q)*(8*s12 - s13)*(-((p2q + p3q)^2*(p3q*s12 - p2q*s13)^
                 2*(s12 + s13 + s23)) + p1q^4*s23*(2*s12 + s23)*(s12 + s13 + 
                s23) + p1q^2*(s12 + s13 + s23)*(p2q^2*(4*s12*s13 + s13^2 + 
                  4*s13*s23 - s23^2) + p3q^2*(-5*s12^2 + 2*s12*s23 + s23^2) - 
                2*p2q*p3q*(4*s12^2 + 2*s12*s23 + s23*(s13 + s23))) - 
              2*p1q^3*(s12 + s13 + s23)*(p3q*(s12^2 - 2*s12*s23 - s23^2) + 
                p2q*(2*s12^2 + s23*(s13 + s23) + s12*(s13 + 2*s23))) + 
              p1q*(-4*p3q^3*s12^2*(s12 + s13 + s23) - 2*p2q*p3q^2*s12*
                 (3*s12 - 2*s13)*(s12 + s13 + s23) - 2*p2q^3*s13*(s13 - s23)*
                 (s12 + s13 + s23) + 2*p2q^2*p3q*(2*s13*s23*(s13 + s23) + 
                  s12^2*(4*s13 + s23) + s12*(4*s13^2 + 7*s13*s23 + s23^2)))))/
            (8*(p1q + p2q + p3q)*s12*s13*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))) - ((p1q + p3q)*
             (9*p1q^6*s12*s23^2*(s12 + s13 + s23)^2 - p1q^5*s23*(s12 + s13 + 
                s23)*(p3q*(18*s12^3 + s23^2*(-s13 + s23) - 2*s12*s23*
                   (10*s13 + s23) + s12^2*(18*s13 + 7*s23)) + 
                p2q*(2*s12^2*(9*s13 - s23) + s23^2*(-s13 + s23) + 
                  s12*(18*s13^2 + 7*s13*s23 + 7*s23^2))) + (p2q + p3q)*
               (p3q*s12 - p2q*s13)^2*(p2q^3*s13*(9*s12 + s23)*(s12 + s13 + 
                  s23) + p3q^3*(s12^2*(9*s13 - s23) - s23^2*(s13 + s23) + 
                  s12*(9*s13^2 + 8*s13*s23 - 2*s23^2)) - p2q^2*p3q*
                 (s12^2*(9*s13 + s23) + s23*(2*s13^2 + 3*s13*s23 + s23^2) + 
                  s12*(9*s13^2 + 12*s13*s23 + 2*s23^2)) + p2q*p3q^2*
                 (36*s12^3 + s12^2*(63*s13 + 74*s23) + s23*(s13^2 + 
                    3*s13*s23 + 2*s23^2) + s12*(27*s13^2 + 66*s13*s23 + 
                    40*s23^2))) + p1q^4*(s12 + s13 + s23)*(p3q^2*(9*s12^4 + 
                  s12^3*(9*s13 - 29*s23) + (2*s13 - 3*s23)*s23^3 - 
                  2*s12*s23^2*(7*s13 + 27*s23) - s12^2*s23*(74*s13 + 
                    57*s23)) - p2q*p3q*(6*s12^3*(3*s13 - 2*s23) + 
                  2*s12^2*(9*s13^2 + 22*s13*s23 - 17*s23^2) + s23^2*
                   (2*s13^2 - 7*s13*s23 + 5*s23^2) + s12*s23*(38*s13^2 - 
                    54*s13*s23 + 31*s23^2)) + p2q^2*(-4*s12^3*s23 + 
                  s23^2*(-2*s13^2 + 5*s13*s23 - 2*s23^2) + s12^2*(9*s13^2 + 
                    12*s13*s23 + s23^2) + s12*(9*s13^3 - 11*s13^2*s23 + 
                    50*s13*s23^2 - 13*s23^3))) + p1q^3*(s12 + s13 + s23)*(
                p3q^3*(27*s12^4 + (s13 - 3*s23)*s23^3 - 4*s12*s23^2*
                   (13*s13 + 19*s23) - s12^2*s23*(77*s13 + 24*s23) + 
                  s12^3*(54*s13 + 28*s23)) + p2q*p3q^2*(18*s12^4 + 
                  s12^3*(-9*s13 + 97*s23) + s23^2*(-2*s13^2 + 15*s13*s23 - 
                    3*s23^2) + s12*s23*(-36*s13^2 + 151*s13*s23 + 21*s23^2) + 
                  s12^2*(-72*s13^2 - 51*s13*s23 + 199*s23^2)) + p2q^2*p3q*
                 (36*s12^4 + 78*s12^3*s23 + s12^2*(-27*s13^2 - 10*s13*s23 + 
                    115*s23^2) + s23*(s13^3 - 9*s13^2*s23 + 19*s13*s23^2 - 
                    s23^3) + 2*s12*(9*s13^3 - 53*s13^2*s23 + 79*s13*s23^2 + 
                    8*s23^3)) - p2q^3*(36*s12^3*s13 + 18*s12^2*s13*
                   (s13 + 3*s23) + s23*(-s13^3 + 7*s13^2*s23 - 5*s13*s23^2 + 
                    s23^3) + s12*(-9*s13^3 + 79*s13^2*s23 - 27*s13*s23^2 + 
                    9*s23^3))) + p1q^2*(s12 + s13 + s23)*(p3q^4*(27*s12^4 - 
                  s23^4 - 27*s12*s23^2*(s13 + s23) + 10*s12^3*(9*s13 + 
                    7*s23) + s12^2*s23*(-4*s13 + 49*s23)) + p2q^4*s13*
                 (45*s12^2*s13 + s23*(3*s13^2 - 4*s13*s23 + 3*s23^2) + 
                  s12*(36*s13^2 - 23*s13*s23 + 27*s23^2)) + p2q*p3q^3*
                 (36*s12^4 + s23^3*(11*s13 + s23) + s12^3*(36*s13 + 67*s23) - 
                  3*s12^2*(48*s13^2 + 43*s13*s23 - 51*s23^2) + s12*s23*
                   (-68*s13^2 + 58*s13*s23 + 43*s23^2)) - p2q^3*p3q*
                 (126*s12^3*s13 + 18*s12^2*(4*s13^2 + 13*s13*s23 - s23^2) - 
                  s12*(54*s13^3 - 195*s13^2*s23 - 42*s13*s23^2 + s23^3) + 
                  s23*(-3*s13^3 + 19*s13^2*s23 - s13*s23^2 + s23^3)) + 
                p2q^2*p3q^2*(81*s12^4 + 105*s12^3*s23 + s23^2*(-15*s13^2 + 
                    9*s13*s23 + s23^2) + s12^2*(-117*s13^2 - 179*s13*s23 + 
                    122*s23^2) + s12*(54*s13^3 - 168*s13^2*s23 + 16*s13*
                     s23^2 + 35*s23^3))) + p1q*(p2q^5*s13^2*(s13 - 3*s23)*
                 (9*s12 + s23)*(s12 + s13 + s23) + p3q^5*s12*(9*s12^4 + 
                  2*s23^3*(s13 + s23) + s12^3*(63*s13 + 39*s23) + 
                  s12*s23*(17*s13^2 + 48*s13*s23 + 33*s23^2) + s12^2*
                   (54*s13^2 + 101*s13*s23 + 61*s23^2)) + p2q^4*p3q*s13*
                 (63*s12^3*s13 + s12^2*(135*s13^2 + 85*s13*s23 + 2*s23^2) + 
                  s23*(5*s13^3 + 6*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
                  s12*(72*s13^3 + 99*s13^2*s23 + 25*s13*s23^2 + 4*s23^3)) + 
                p2q*p3q^4*(54*s12^5 + 2*s13*s23^3*(s13 + s23) + 
                  s12^4*(117*s13 + 73*s23) + s12^3*(-45*s13^2 - 19*s13*s23 + 
                    6*s23^2) - 2*s12*s23*(26*s13^3 + 41*s13^2*s23 + 
                    15*s13*s23^2 + s23^3) - 3*s12^2*(36*s13^3 + 87*s13^2*
                     s23 + 48*s13*s23^2 + 5*s23^3)) + p2q^2*p3q^3*
                 (81*s12^5 + s12^4*(45*s13 + 133*s23) - 3*s12^3*(63*s13^2 + 
                    59*s13*s23 - 15*s23^2) - s13*s23*(s13^3 + 10*s13^2*s23 + 
                    11*s13*s23^2 + 2*s23^3) - s12^2*(99*s13^3 + 422*s13^2*
                     s23 + 270*s13*s23^2 + 9*s23^3) + s12*(54*s13^4 - 
                    23*s13^3*s23 - 155*s13^2*s23^2 - 74*s13*s23^3 - 
                    2*s23^4)) - p2q^3*p3q^2*(9*s12^4*(17*s13 + s23) + 
                  s12^3*(243*s13^2 + 381*s13*s23 + 8*s23^2) + s12^2*
                   (9*s13^3 + 356*s13^2*s23 + 292*s13*s23^2 - 3*s23^3) + 
                  s13*s23*(-3*s13^3 + 2*s13^2*s23 + 7*s13*s23^2 + 2*s23^3) + 
                  s12*(-81*s13^4 - 37*s13^3*s23 + 126*s13^2*s23^2 + 
                    74*s13*s23^3 - 2*s23^4)))))/(8*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13*s23*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]] + 
     (((ep*(p1q + p2q)*(s12 + s13)*(s12 + s13 + s23)*(-(p3q*s12) + p2q*s13 + 
            p1q*(2*s13 + s23)))/(16*s12*(p3q*s12 - (p1q + p2q)*
             (s13 + s23))) - ((p1q + p2q)*(s12 + s13 + s23)*
           (-((p3q*s12 - p2q*s13)*(p3q*s12 - p2q*(s13 + s23))) + 
            p1q^2*(-s23^2 + s12*(2*s13 + s23)) + 
            p1q*(-(p3q*s12*(s12 - 2*s23)) + p2q*(s12*s13 - s23^2))))/
          (16*p1q*s12*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*E0 . E0conj + 
       (-1/8*(ep*(p1q + p2q)*(s12 + s13 + s23)*((p2q + p3q)^2*(s12 - s13)*
              (p3q*s12 - p2q*s13)^2 + p1q^4*s23*(2*s12*s13 + 2*s13^2 + 3*s12*
                s23 + 3*s13*s23 + 2*s23^2) - 2*p1q*(p2q + p3q)*
              (-(p3q^2*s12*(s12^2 - s12*s23 + s13*s23)) - p2q*p3q*
                (s12^3 - 2*s12^2*s13 - s12*s13^2 + s13^2*s23) - p2q^2*s13*
                (-s12^2 + s12*s13 + s13*(s13 + 3*s23))) - 
             2*p1q^3*(p3q*(-(s13^2*s23) + s12*(s13 + s23)^2 + s12^2*
                  (s13 + 3*s23)) + p2q*(s13^3 + 2*s13^2*s23 + 2*s13*s23^2 - 
                 s23^3 + s12^2*(2*s13 + s23) + s12*(3*s13^2 + 3*s13*s23 - 
                   s23^2))) - p1q^2*(p3q^2*(-3*s12^3 - s12^2*(s13 - 2*s23) + 
                 s13*s23^2 + s12*(2*s13^2 - s23^2)) + 2*p2q*p3q*(-s12^3 + 
                 3*s12^2*(s13 + s23) + s13*(-s13^2 - 3*s13*s23 + s23^2) + 
                 s12*(3*s13^2 + 2*s13*s23 + s23^2)) + p2q^2*(-s13^3 + 
                 7*s13*s23^2 + 2*s12^2*(3*s13 + s23) + s12*(5*s13^2 + 
                   8*s13*s23 + s23^2)))))/((p1q + p2q + p3q)*s12*
            (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
             p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
             p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
               2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
         ((p1q + p2q)*((p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
             (p3q*s12 - p2q*(s13 + s23)) + p1q^5*s23*(2*s13^3 + 
              s12^2*(2*s13 - s23) + 2*s13^2*s23 - 3*s13*s23^2 - 3*s23^3 + 
              s12*(4*s13^2 + s13*s23 - 4*s23^2)) - p1q^4*(s12 + s13 + s23)*
             (p3q*(2*s12^2*(s13 - s23) + s12*(2*s13^2 - 6*s13*s23 - 
                  9*s23^2) + 2*s23*(-s13^2 - s13*s23 + s23^2)) + 
              p2q*(2*s13^3 - 6*s13^2*s23 - 3*s13*s23^2 + 9*s23^3 + 
                2*s12^2*(2*s13 + s23) + 2*s12*(3*s13^2 + s13*s23 + 
                  3*s23^2))) - p1q^3*(s12 + s13 + s23)*
             (-2*p2q*p3q*(s12^3 + s13^3 - s12^2*(s13 - 3*s23) + 5*s13^2*s23 + 
                5*s13*s23^2 - 2*s23^3 + s12*s23*(7*s13 + 9*s23)) + 
              p3q^2*(s12^3 + s23^3 + s12^2*(6*s13 + 9*s23) + 
                s12*(2*s13^2 - 7*s23^2)) + p2q^2*(6*s13^3 - 5*s13^2*s23 - 
                10*s13*s23^2 + 7*s23^3 + 2*s12^2*(3*s13 + s23) + 
                s12*(13*s13^2 + 4*s13*s23 + 5*s23^2))) + 
            p1q^2*(s12 + s13 + s23)*(-(p2q^3*(2*s12^2*s13 + 10*s12*s13^2 + 
                 5*s13^3 - s13^2*s23 - 9*s13*s23^2 + s23^3)) + 
              p3q^3*s12*(3*s12^2 + 3*s23^2 - 2*s12*(s13 + 4*s23)) - 
              p2q*p3q^2*(s23^2*(-s13 + s23) + 13*s12^2*(s13 + s23) + 
                2*s12*(s13^2 - s13*s23 - 5*s23^2)) + p2q^2*p3q*(2*s12^3 + 
                2*s12^2*(s13 + 2*s23) + s12*(7*s13^2 + 20*s13*s23 + 
                  11*s23^2) + 2*(2*s13^3 + 5*s13^2*s23 + 5*s13*s23^2 - 
                  s23^3))) + p1q*(3*p3q^4*s12^2*(s12 - s23)*(s12 + s13 + 
                s23) + p2q^4*s13*(-3*s12^2*s13 - 2*s13^3 - 3*s13^2*s23 + 
                s13*s23^2 + 2*s23^3 + s12*(-5*s13^2 - 4*s13*s23 + 2*s23^2)) + 
              2*p2q*p3q^3*s12*(2*s12^3 - 2*s12^2*(s13 + s23) + 
                s23*(s13 + s23)^2 - s12*(4*s13^2 + 7*s13*s23 + 3*s23^2)) + 
              2*p2q^3*p3q*(s12^3*s13 + s12^2*(5*s13^2 + 8*s13*s23 + s23^2) + 
                s12*(5*s13^3 + 13*s13^2*s23 + 10*s13*s23^2 + s23^3) + 
                s13*(s13^3 + 3*s13^2*s23 + 4*s13*s23^2 + 2*s23^3)) + 
              p2q^2*p3q^2*(s12^4 - s12^3*(9*s13 + 4*s23) - s12^2*(7*s13^2 + 
                  3*s13*s23 + s23^2) + s13*s23*(s13^2 + 3*s13*s23 + 
                  2*s23^2) + s12*(3*s13^3 + 16*s13^2*s23 + 18*s13*s23^2 + 
                  4*s23^3)))))/(8*p1q*(p1q + p2q + p3q)*s12*
           (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       (-1/4*(ep*p1q*(p1q + p2q)*(s12 + s13)*(s12 + s13 + s23)*
            (-((p2q + p3q)^2*s12*(-(p3q*s12) + p2q*s13)) + 
             2*p1q^3*s23*(s13 + s23) - p1q^2*(p2q*(2*s12*s13 + 2*s13^2 + 
                 s12*s23 - 2*s23^2) + p3q*(2*s12*s13 + 2*s13^2 + 4*s12*s23 + 
                 s13*s23 - s23^2)) - p1q*(-(p3q^2*s12*(2*s12 + s13 - 
                  2*s23)) + p2q*p3q*(-s12^2 + 4*s12*(s13 + s23) + 
                 3*s13*(s13 + s23)) + p2q^2*(2*s13*(s13 + s23) + 
                 s12*(3*s13 + s23)))))/((p1q + p2q + p3q)*s12*
            (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
             p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
             p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
               2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
         ((p1q + p2q)*(s12 + s13 + s23)*(2*p1q^4*s13*s23*(s12 + s13 + s23) + 
            2*p2q*(p3q*s12 - p2q*s13)*(p3q^2*s12*(s12 + s13) - 
              p2q*p3q*s12*s23 + p2q^2*s13*(s12 + s13 + s23)) - 
            p1q*(-(p3q^3*s12^2*(s12 + s13)) + p2q^3*s13*(s12^2 + 7*s12*s13 + 
                6*s13^2 + 2*s13*s23 - 4*s23^2) + p2q*p3q^2*s12*(
                s13*(s13 + 2*s23) + s12*(s13 + 6*s23)) - p2q^2*p3q*(s12^3 - 
                4*s13^2*(s13 + s23) + s12^2*(3*s13 + 2*s23) + 
                s12*(-2*s13^2 + 4*s13*s23 + 4*s23^2))) - 
            p1q^2*(p3q^2*s12*(s13^2 + s12*(s13 + 2*s23)) - p2q*p3q*(s12^3 - 
                s12^2*(s13 - 2*s23) - 5*s13^2*(s13 + s23) + 
                s12*(-7*s13^2 + s13*s23 + 6*s23^2)) + p2q^2*(
                s12^2*(3*s13 + s23) + s12*(9*s13^2 + s13*s23 + 2*s23^2) + 
                2*(3*s13^3 - s13^2*s23 - 3*s13*s23^2 + s23^3))) - 
            p1q^3*(p3q*(2*s12^2*s13 + s12*(4*s13^2 + s13*s23 - s23^2) + 
                s13*(2*s13^2 + 3*s13*s23 + s23^2)) + p2q*(s12^2*(2*s13 + 
                  s23) + s12*(4*s13^2 - s13*s23 + 2*s23^2) + 
                2*(s13^3 - 2*s13^2*s23 - 2*s13*s23^2 + s23^3)))))/
          (4*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*((((p1q + p2q)*(s12 + s13 + s23)*(p1q^5*s23^2*(s12 + s13 + 
                s23) + 2*p2q^2*p3q*s13*(p3q*s12 - p2q*s13)*(p3q*s12 - 
                p2q*(s13 + s23)) + p1q^4*(s12 + s13 + s23)*(3*p2q*s23^2 + 
                p3q*s23*(-2*s12 + s23) + p2q*s12*(2*s13 + s23)) + 
              p1q*p2q*(p3q^3*s12^2*(s12 + 2*s13 + s23) - p2q*p3q^2*s12*
                 (s12^2 + 4*s13^2 + 3*s12*s23 + 7*s13*s23 + 2*s23^2) + 
                p2q^3*s13^2*(s12 - 2*(s13 + s23)) + p2q^2*p3q*s13*
                 (s12*(s13 - 3*s23) + 2*s13*(s13 + s23))) + 
              p1q^2*(p3q^3*s12^2*(s12 + s13 + s23) + p2q*p3q^2*s12*
                 (-2*s13^2 + s12*(s13 - 4*s23) - 5*s13*s23 - 4*s23^2) + 
                p2q^3*s13*(s12^2 + 3*s12*s13 - 3*s13*(s13 + s23)) + 
                p2q^2*p3q*(-s12^3 + s13^3 + s12^2*(s13 - 2*s23) + 
                  2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3 + s12*(s13^2 - 
                    3*s13*s23 + s23^2))) + p1q^3*(p3q^2*s12*(s12 - 2*s23)*
                 (s12 + s13 + s23) + p2q*p3q*(-s12^3 + s12^2*(s13 - 4*s23) - 
                  2*s12*s13*s23 + 3*s23^2*(s13 + s23)) + p2q^2*(-s13^3 - 
                  s13^2*s23 + 2*s13*s23^2 + 2*s23^3 + s12^2*(3*s13 + s23) + 
                  s12*(4*s13^2 + 3*s13*s23 + 3*s23^2)))))/
            (4*p1q*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) - (ep*(p1q + p2q)*(s12 + s13 + s23)*
             (p1q^4*s23^2*(s12 + s13 + s23) + p2q*(p2q + p3q)*s12*(
                -(p3q*s12) + p2q*s13)*(p2q*s13 - p3q*(s12 + s23)) - 
              p1q^3*(p3q*(2*s12 - s23)*s23*(s12 + s13 + s23) + 
                p2q*(s12^2*(2*s13 + s23) + s12*s13*(2*s13 + 5*s23) + 
                  s23*(4*s13^2 + 3*s13*s23 - s23^2))) + p1q*(p3q^3*s12^2*
                 (s12 + s13 + s23) + p2q*p3q^2*s12*(2*s12^2 - s12*s13 - 
                  2*s13^2 - s13*s23 - 2*s23^2) + p2q^3*s13*(-s12^2 + 
                  3*s12*s13 + 3*s13*(s13 + s23)) + p2q^2*p3q*(s12^3 - 
                  5*s12^2*s13 + s13*(s13^2 - 2*s13*s23 - 3*s23^2) - 
                  s12*(3*s13^2 + 5*s13*s23 + s23^2))) - 
              p1q^2*(-(p3q^2*s12*(s12 - 2*s23)*(s12 + s13 + s23)) - 
                p2q*p3q*(s12 + s23)*(s12^2 - 4*s13^2 - 3*s13*s23 + s23^2 - 
                  3*s12*(s13 + s23)) + p2q^2*(s12^2*(3*s13 + s23) + 
                  s12*s23*(5*s13 + s23) + s13*(-3*s13^2 + s13*s23 + 
                    4*s23^2)))))/(4*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + 
              (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
              p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*
          p1 . E0conj + (-1/8*(ep*(p1q + p2q)*(s12 + s13)*((p2q + p3q)^2*
                (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + p1q^4*s23*
                (s12 + s13 + s23)*(2*s13 + 3*s23) - 2*p1q^3*(s12 + s13 + s23)*
                (p2q*(s13^2 + 2*s13*s23 - s23^2 + s12*(2*s13 + s23)) + 
                 p3q*(-(s23*(s13 + 2*s23)) + s12*(s13 + 3*s23))) - p1q^2*
                (s12 + s13 + s23)*(-2*p2q*p3q*(s12^2 - 4*s12*s13 + s13^2 - 
                   3*s12*s23 - s13*s23 + s23^2) + p2q^2*(-s13^2 + 6*s13*s23 + 
                   s23^2 + 2*s12*(3*s13 + s23)) - p3q^2*(3*s12^2 + s23^2 - 
                   2*s12*(s13 + 4*s23))) - 2*p1q*(p2q^3*(s12 - 2*s13)*s13*
                  (s12 + s13 + s23) - p2q^2*p3q*(s12^2 - 4*s12*s13 + 3*s13^2)*
                  (s12 + s13 + s23) - p3q^3*s12*(2*s12 - s23)*(s12 + s13 + 
                   s23) + p2q*p3q^2*(-2*s12^3 + 3*s12^2*s13 + s13*s23*
                    (s13 + s23) + s12*(5*s13^2 + 8*s13*s23 + 2*s23^2)))))/
             ((p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
                (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                 p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                 p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                   s23^2)))) - ((p1q + p2q)*((p2q - p3q)^2*(p3q*s12 - 
                 p2q*s13)^2*(s12 + s13 + s23)*(-(p3q*s12) + 
                p2q*(s13 + s23)) + p1q^5*s23*(2*s13^3 + s12^2*(2*s13 - s23) + 
                4*s13^2*s23 + 3*s13*s23^2 + s23^3 + s12*s13*(4*s13 + 
                  3*s23)) - p1q^4*(s12 + s13 + s23)*(p3q*(2*s12^2*
                   (s13 - s23) - 2*s23*(s13^2 + s13*s23 + s23^2) + 
                  s12*(2*s13^2 - 2*s13*s23 + 3*s23^2)) + p2q*(2*s13^3 - 
                  2*s13^2*s23 + s13*s23^2 + s23^3 + 2*s12^2*(2*s13 + s23) + 
                  2*s12*(3*s13^2 + s13*s23 + 3*s23^2))) - p1q^3*(s12 + s13 + 
                s23)*(-2*p2q*p3q*(s12^3 - s12^2*(s13 - 3*s23) - 
                  s12*(2*s13^2 - 3*s13*s23 + s23^2) + s13*(s13^2 + 
                    5*s13*s23 + s23^2)) + p3q^2*(s12^3 + s12^2*(4*s13 - 
                    3*s23) - s23^3 + s12*(2*s13^2 + 5*s23^2)) + 
                p2q^2*(4*s13^3 - s13^2*s23 + 2*s13*s23^2 + s23^3 + 
                  2*s12^2*(3*s13 + s23) + s12*(13*s13^2 + 4*s13*s23 + 
                    5*s23^2))) + p1q^2*(s12 + s13 + s23)*(-(p3q^3*s12*
                  (s12^2 + 2*s12*(s13 - 2*s23) + 3*s23^2)) - 
                p2q^3*(2*s12^2*s13 + 10*s12*s13^2 + s13^3 - s13^2*s23 + 
                  s13*s23^2 - s23^3) + p2q*p3q^2*(-(s12^2*(s13 - 3*s23)) + 
                  s23^2*(-s13 + s23) + 2*s12*(-s13^2 + s13*s23 + s23^2)) + 
                p2q^2*p3q*(2*s12^3 + 2*s12^2*(s13 + 2*s23) + s12*(-5*s13^2 + 
                    4*s13*s23 - 3*s23^2) + 2*(2*s13^3 + 7*s13^2*s23 + 
                    s13*s23^2 - s23^3))) - p1q*(p3q^4*s12^2*(s12 - 3*s23)*
                 (s12 + s13 + s23) + 2*p2q*p3q^3*s12*s23*(2*s12^2 + 
                  3*s12*(s13 + s23) + (s13 + s23)^2) + p2q^4*s13*
                 (3*s12^2*s13 - 2*s13^3 - 3*s13^2*s23 + s13*s23^2 + 2*s23^3 + 
                  s12*(s13^2 + 2*s13*s23 + 2*s23^2)) - 2*p2q^3*p3q*
                 (s12^3*s13 - s12^2*(s13 - s23)^2 - s12*(s13^3 - 3*s13^2*
                     s23 - 2*s13*s23^2 + s23^3) + s13*(s13^3 + 5*s13^2*s23 + 
                    6*s13*s23^2 + 2*s23^3)) - p2q^2*p3q^2*(s12^4 + 
                  3*s12^3*(s13 + 2*s23) - s13*s23*(s13^2 + 3*s13*s23 + 
                    2*s23^2) + s12^2*(s13^2 + 11*s13*s23 + 9*s23^2) + 
                  s12*(-s13^3 + 2*s13^2*s23 + 6*s13*s23^2 + 4*s23^3)))))/
            (8*p1q*(p1q + p2q + p3q)*s12*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((-9*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2*(2*s13 + s23) - 
          (p2q + p3q)^3*s23*(2*p3q*s13*(s13 + s23) + p3q*s12*(2*s13 + s23) + 
            p2q*s13*(2*s12 + 2*s13 + s23)) - p1q^2*s23*
           (p3q^2*(8*s12*s13 + 4*s13^2 + 3*s12*s23 + 3*s13*s23) + 
            4*p2q*p3q*(s13^2 + s12*(s13 + s23)) + p2q^2*(s12*(4*s13 + s23) + 
              s13*(8*s13 + 5*s23))) - p1q*(p2q + p3q)*
           (-(p3q^2*(s12*s13*s23 + s23^2*(2*s13 + s23) + s12^2*(4*s13 + 
                 s23))) - p2q^2*(4*s13^3 + 3*s13^2*s23 + s23^3 + 
              s13*s23*(-s12 + 2*s23)) + p2q*p3q*(-(s12^2*s23) + 
              4*s12*s13*(2*s13 + s23) + s23*(s13^2 - 4*s13*s23 - 2*s23^2))))*
         E0 . E0conj)/(16*p1q*(p2q + p3q)*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       ((9*ep*p1q*(p2q + p3q)^2*(s12 + s13 + s23)*(p2q*s13*(s12 - s23) - 
            p3q*s12*(s12 + s23) + p1q*s23*(s12 + s23)))/(4*(p1q + p2q + p3q)*
           s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (9*(s12 + s13 + s23)*
           (-(p1q^5*(p3q*(5*s12 - 3*s13 - 4*s23) + p2q*(s12 + 9*s13 - 4*s23))*
              s23^3) + 2*p1q^6*s23^4 - (p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*
             (-(p3q*s23^2) + p2q*(4*s12*s13 + 4*s13^2 + 4*s13*s23 - s23^2)) + 
            p1q^4*s23^2*(p2q^2*(2*s12*s13 + 12*s13^2 - 14*s13*s23 + 
                5*s23^2) + 2*p2q*p3q*(s12^2 - 3*s13^2 + 4*s12*(s13 - s23) - 
                4*s13*s23 + 5*s23^2) + p3q^2*(4*s12^2 - 6*s12*s13 - 
                8*s12*s23 + 6*s13*s23 + 5*s23^2)) - p1q^2*(p2q + p3q)*s23*
             (p2q^3*(6*s12^2*s13 - 2*s13^3 - 4*s12*s13*(s13 - 4*s23) - 
                3*s13^2*s23 + 16*s13*s23^2 - s23^3) - p3q^3*(
                s23*(2*s13 + s23)^2 + s12^2*(4*s13 + 7*s23) - 
                4*s12*(s13^2 + s13*s23 + s23^2)) + p2q*p3q^2*(2*s12^3 + 
                4*s13^3 + s12^2*(8*s13 - 3*s23) + 16*s13^2*s23 + 
                12*s13*s23^2 - 3*s23^3 + 2*s12*(9*s13^2 + 13*s13*s23 + 
                  6*s23^2)) + p2q^2*p3q*(2*s12^3 - 14*s13^3 + 5*s13^2*s23 + 
                24*s13*s23^2 - 3*s23^3 + 2*s12^2*(s13 + 2*s23) + 
                s12*(-22*s13^2 + 26*s13*s23 + 8*s23^2))) - 
            p1q^3*s23*(p2q^3*(5*s13^3 - 2*s12^2*s23 - 12*s13^2*s23 + 
                11*s13*s23^2 - 6*s23^3 + s12*(s13^2 - 5*s23^2)) - 
              p2q^2*p3q*(3*s13^3 - 4*s13^2*s23 - 21*s13*s23^2 + 14*s23^3 + 
                2*s12^2*(s13 + 2*s23) + s12*(9*s13^2 + 2*s13*s23 - s23^2)) + 
              p3q^3*(s12^3 - s12^2*(3*s13 + 4*s23) + s12*s23*(10*s13 + 
                  11*s23) - s23*(4*s13^2 + 5*s13*s23 + 2*s23^2)) + 
              p2q*p3q^2*(s12^3 + 3*s12^2*(s13 - 2*s23) + s23*(12*s13^2 + 
                  5*s13*s23 - 10*s23^2) + s12*(6*s13^2 + 8*s13*s23 + 
                  17*s23^2))) - p1q*(p2q + p3q)^2*(p3q^3*s12*s23*(s12^2 + 
                s12*s13 + 4*s13^2 - 2*s12*s23 + 4*s13*s23 + 2*s23^2) + 
              p2q^3*s13*(4*s13^3 + s12*s13*(4*s13 - 15*s23) - 7*s13^2*s23 - 
                14*s13*s23^2 + 2*s23^3) - p2q^2*p3q*(2*s12^2*s13*
                 (4*s13 + s23) + s13*s23*(11*s13^2 + 10*s13*s23 - 4*s23^2) + 
                s12*(8*s13^3 + 25*s13^2*s23 - 8*s13*s23^2 - 2*s23^3)) + 
              p2q*p3q^2*(s12^3*(4*s13 + s23) + s12^2*(4*s13^2 - s13*s23 - 
                  2*s23^2) + 2*s13*s23*(-2*s13^2 - 2*s13*s23 + s23^2) + 
                s12*(-6*s13^2*s23 + 4*s13*s23^2 + 4*s23^3)))))/
          (8*p1q*(p1q + p2q + p3q)*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))))*p1 . E0conj*p2 . E0 + 
       ((9*ep*p1q*(p2q + p3q)^2*(s12 + s13 + s23)*(-(p3q*s12*(s12 + s13)) + 
            p2q*s13*(s12 + s13) + p1q*(s12 - s13)*s23))/(4*(p1q + p2q + p3q)*
           s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (9*(s12 + s13 + s23)*
           (-(p1q^4*(p2q - p3q)*(p3q*(5*s12 + s13 - 2*s23) + p2q*
                (s12 + 5*s13 - 2*s23))*s23^3) + 2*p1q^5*(p2q - p3q)*s23^4 - 
            2*(p2q + p3q)^4*s13*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 
            p1q^3*s23^2*(-(p3q^3*(s12 + s13)*(4*s12 - 3*s13 - 4*s23)) + 
              p2q^2*p3q*(4*s12^2 - 3*s12*s13 - 7*s13^2 + 4*s23^2) + 
              p2q*p3q^2*(3*s12^2 - 2*s13^2 + 8*s13*s23 + 2*s23^2 + 
                s12*(s13 + 2*s23)) + p2q^3*(s12^2 + 2*(s13 - s23)^2 + 
                s12*(3*s13 + 2*s23))) - 2*p1q*(p2q + p3q)^2*
             (p2q^3*s13^2*(s13 - 3*s23)*(s12 + s13 + s23) + p3q^3*s12*s13*(
                s12 - 2*s23)*(s12 + s13 + s23) - p2q^2*p3q*s13*(
                s12^2*(2*s13 + s23) + s12*s13*(s13 + 8*s23) + 
                s13*(-s13^2 + 4*s13*s23 + 4*s23^2)) + p2q*p3q^2*(s12^3*s13 - 
                2*s13^2*s23*(s13 + s23) - s12^2*(s13 + s23)^2 - 
                s12*s13*(2*s13^2 + 7*s13*s23 + 4*s23^2))) - 
            p1q^2*(p2q + p3q)*s23*(3*p2q^3*s13*(s12^2 - s13^2 + 2*s12*s23 + 
                2*s23^2) + p3q^3*(-s12^3 - 2*s12^2*(s13 - s23) + 
                s12*s13*(3*s13 + 4*s23) + 2*s13*(2*s13^2 + 3*s13*s23 + 
                  s23^2)) + p2q^2*p3q*(s12^3 + 2*s12^2*(s13 + s23) + 
                s12*(-7*s13^2 + 18*s13*s23 + 4*s23^2) + 2*s13*(-4*s13^2 + 
                  4*s13*s23 + 5*s23^2)) + p2q*p3q^2*(2*s12^3 + 3*s12^2*s13 + 
                2*s12*(s13^2 + 4*s13*s23 + 2*s23^2) + s13*(s13^2 + 
                  10*s13*s23 + 6*s23^2)))))/(4*p1q*(p1q + p2q + p3q)*s23^2*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*p2 . E0*
        p2 . E0conj + p1 . E0*(((9*ep*(p2q + p3q)^2*(s12 + s13 + s23)*
             (p1q^3*s23^2*(s12 + s13 + s23) + (p2q + p3q)*(-(p3q*s12) + 
                p2q*s13)*(p2q*s13*(s12 + s13) - p3q*s12*(s12 + s13 + s23)) + 
              p1q*(p2q*p3q*(s12 + s13)*(s12 - 2*s13 - s23)*(s12 + s23) + 
                p3q^2*s12*(s12 - 2*s23)*(s12 + s13 + s23) - p2q^2*s13*
                 (s12^2 + s13*(-s13 + s23))) - p1q^2*s23*(p3q*(2*s12 - s23)*
                 (s12 + s13 + s23) + p2q*(s12^2 + s12*(s13 + s23) + 
                  s13*(2*s13 + s23)))))/(4*(p1q + p2q + p3q)*s23*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) + (9*(s12 + s13 + s23)*(-(p1q^4*s23^3*
                (2*p2q*p3q*(s12 + s23) + p3q^2*(s12 + s13 + s23) + 
                 p2q^2*(s12 + 3*s13 + s23))) + p1q^3*s23^2*(p3q^3*
                 (2*s12 - s23)*(s12 + s13 + s23) + p2q^2*p3q*(10*s12*s13 + 
                  2*s13^2 - 5*s12*s23 + s13*s23 - 5*s23^2) + p2q*p3q^2*
                 (3*s12^2 + 2*s13^2 + s12*(s13 - s23) + s13*s23 - 4*s23^2) - 
                p2q^3*(s12^2 - 3*s12*s13 - 8*s13^2 + 3*s12*s23 + s13*s23 + 
                  2*s23^2)) + 2*p2q^2*(p2q + p3q)^2*s13*(-(p3q*s12) + 
                p2q*s13)*(p2q*s13*(s12 + s13 + s23) - p3q*(s12^2 + s23^2 + 
                  s12*(s13 + s23))) + p1q^2*s23*(-(p3q^4*s12*(s12 - 2*s23)*
                  (s12 + s13 + s23)) + p2q^4*s13*(3*s12^2 - 4*s12*s13 - 
                  7*s13^2 + 10*s12*s23 + 7*s13*s23 + 6*s23^2) - p2q*p3q^3*
                 (s12 + s23)*(s12^2 - 6*s13^2 - 5*s13*s23 + 2*s23^2 - 
                  5*s12*(s13 + s23)) + p2q^2*p3q^2*(s12^3 - s13^3 + 
                  24*s12*s13*s23 + 7*s13^2*s23 + 12*s13*s23^2 - 4*s23^3 + 
                  s12^2*(2*s13 + 5*s23)) + p2q^3*p3q*(s12^3 - 4*s13^3 + 
                  8*s13^2*s23 + 13*s13*s23^2 - 2*s23^3 + s12^2*(3*s13 + 
                    2*s23) - s12*(2*s13^2 - 26*s13*s23 + s23^2))) + 
              p1q*(p2q + p3q)*(-(p3q^4*s12^2*s23*(s12 + s13 + s23)) + 
                p2q^4*s13^2*(2*s12*s13 + 2*s13^2 - 9*s12*s23 - 7*s13*s23 - 
                  6*s23^2) - p2q^3*p3q*s13*(4*s12^2*s13 + 4*s12*s13^2 + 
                  8*s12*s13*s23 + 4*s13^2*s23 - 7*s12*s23^2 + 6*s13*s23^2 - 
                  4*s23^3) + p2q*p3q^3*s23*(4*s13*s23*(s13 + s23) + 
                  2*s12^2*(3*s13 + s23) + s12*(6*s13^2 + 9*s13*s23 + 
                    2*s23^2)) + p2q^2*p3q^2*(s12^3*(2*s13 + s23) + 
                  s12*s23*(-9*s13^2 + 8*s13*s23 + 2*s23^2) + s12^2*
                   (2*s13^2 - s13*s23 + 3*s23^2) + s13*s23*(-5*s13^2 - 
                    4*s13*s23 + 4*s23^2)))))/(4*p1q*(p1q + p2q + p3q)*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p1 . E0conj + 
         ((9*ep*(p2q + p3q)^2*(s12 + s13 + s23)*(-(p3q*s12 - p2q*s13)^2 + 
              p1q^2*s12*s23 + p1q*p3q*s12*(-s12 + s23) + p1q*p2q*s13*(s12 + 
                s23)))/(4*(p1q + p2q + p3q)*s23*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           (9*(s12 + s13 + s23)*(-(p1q^5*(p2q*(s12 + 9*s13) + 
                 p3q*(5*s12 - 3*s13 - 8*s23))*s23^3) + 2*p1q^6*s23^4 + 
              p1q^4*s23^2*(p2q^2*(2*s12*s13 + 12*s13^2 - 10*s13*s23 - 
                  s23^2) + 2*p2q*p3q*(s12^2 + 4*s12*s13 - 3*s13^2 - 
                  2*s12*s23 - 10*s13*s23 + s23^2) + p3q^2*(4*s12^2 - 
                  6*s12*s13 - 20*s12*s23 + 6*s13*s23 + 11*s23^2)) + 
              (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(p3q^2*s23^2 + 
                2*p2q*p3q*(2*s12*s13 + 2*s13^2 + 2*s13*s23 - s23^2) + 
                p2q^2*(4*s12*s13 + (2*s13 + s23)^2)) - p1q^3*s23*(
                p3q^3*(s12^3 - s12^2*(3*s13 + 16*s23) + s12*s23*(14*s13 + 
                    25*s23) + s23*(4*s13^2 + s13*s23 - 6*s23^2)) + 
                p2q^3*(5*s13^3 + 2*s12^2*s23 - 24*s13^2*s23 + 5*s13*s23^2 + 
                  2*s23^3 + s12*(s13^2 + 5*s23^2)) + p2q^2*p3q*(-3*s13^3 - 
                  2*s12^2*(s13 - 2*s23) - 24*s13^2*s23 + 11*s13*s23^2 + 
                  6*s23^3 + s12*(-9*s13^2 - 30*s13*s23 + 7*s23^2)) + 
                p2q*p3q^2*(s12^3 + 3*s12^2*(s13 - 2*s23) + s23*(12*s13^2 + 
                    23*s13*s23 - 2*s23^2) + s12*(6*s13^2 + 11*s23^2))) + 
              p1q^2*s23*(p2q^4*(6*s12^2*s13 - 18*s13^3 - 4*s12*s13*
                   (s13 - 4*s23) + 17*s13^2*s23 + 8*s13*s23^2 + s23^3) + 
                p2q^2*p3q^2*(4*s12^3 + 2*s13^3 + 29*s13^2*s23 + 12*s13*
                   s23^2 - 2*s23^3 + 4*s12*s23*(13*s13 + s23) + 
                  s12^2*(2*s13 + 5*s23)) + p3q^4*(-4*s12^3 + s12^2*
                   (8*s13 + 17*s23) + 4*s12*(s13^2 - s13*s23 - 3*s23^2) + 
                  s23*(-4*s13^2 - 4*s13*s23 + s23^2)) - 2*p2q*p3q^3*
                 (s12^3 - s12^2*(4*s13 + 5*s23) - 2*s13*(s13^2 + s13*s23 - 
                    2*s23^2) + s12*(s13^2 + s13*s23 + 4*s23^2)) + 
                2*p2q^3*p3q*(s12^3 + 2*s12^2*(2*s13 + s23) + s12*s13*
                   (s13 + 25*s23) + s13*(-10*s13^2 + 15*s13*s23 + 
                    12*s23^2))) + p1q*(p2q + p3q)*(p3q^4*s12*s23*(-3*s12^2 + 
                  5*s12*s13 + 4*s13^2 + 6*s12*s23 + 4*s13*s23 - 2*s23^2) + 
                p2q^4*s13*(4*s13^3 + s12*s13*(4*s13 - 15*s23) - 15*s13^2*
                   s23 - 10*s13*s23^2 - 2*s23^3) + 2*p2q*p3q^3*
                 (s12^3*(2*s13 + s23) + 2*s12^2*s13*(s13 + 2*s23) + 
                  s12*s23*(-5*s13^2 - 4*s13*s23 + s23^2) - s13*s23*
                   (2*s13^2 + 2*s13*s23 + s23^2)) - 2*p2q^3*p3q*
                 (s12^2*s13*(4*s13 + s23) + s12*(2*s13^3 + 12*s13^2*s23 + 
                    s23^3) - s13*(2*s13^3 - 9*s13^2*s23 - 10*s13*s23^2 + 
                    s23^3)) + p2q^2*p3q^2*(s12^3*(4*s13 + s23) + 
                  s12^2*(-4*s13^2 - 11*s13*s23 + 2*s23^2) + s13*s23*
                   (-11*s13^2 - 6*s13*s23 + 2*s23^2) + s12*(-8*s13^3 - 
                    35*s13^2*s23 + 4*s13*s23^2 + 2*s23^3)))))/
            (8*p1q*(p1q + p2q + p3q)*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k - p2]] + 
     (((ep*(p1q + p2q)*(s12 - 8*s13)*(s12 + s13 + s23)*(-(p3q*s12) + 
            p2q*s13 + p1q*(2*s13 + s23)))/(16*s12*s13*(p3q*s12 - 
            (p1q + p2q)*(s13 + s23))) - ((p1q + p2q)*(s12 + s13 + s23)*
           (9*p1q^3*s13*s23*(s12 + s13 + s23) + (p2q + p3q)*
             (-(p3q^2*s12^2*(9*s13 + s23)) + p2q*p3q*s12*(-9*s12*s13 + 
                9*s13^2 + 2*s13*s23 + s23^2) + p2q^2*s13*(17*s23*
                 (s13 + s23) + 9*s12*(s13 + 2*s23))) + 
            p1q^2*(p3q*(-9*s12^2*s13 - s23^2*(9*s13 + s23) + 
                s12*(9*s13^2 + 2*s13*s23 + s23^2)) + p2q*(-9*s13^3 - s23^3 + 
                s12*(9*s13^2 + 20*s13*s23 + s23^2))) - 
            p1q*(p3q^2*s12*(s12 - 2*s23)*(9*s13 + s23) + p2q^2*(9*s13^3 - 
                10*s12*s13*s23 + s23^3) + p2q*p3q*(s12^2*s23 - 9*s13^2*s23 + 
                s23^3 - s12*(18*s13^2 + 37*s13*s23 + 2*s23^2)))))/
          (16*p1q*(p2q + p3q)*s12*s13*s23*(-(p3q*s12) + (p1q + p2q)*
             (s13 + s23))))*E0 . E0conj + 
       (-1/8*(ep*(p1q + p2q)*(s12 + s13 + s23)*(p2q^4*s13^2*(-18*s13^2 + s12*
                s23 - 10*s13*s23) - 2*p2q^3*s13*(p1q*(9*s13^3 + s12^2*s23 - 
                 10*s13^2*s23 - s13*s23*(10*s12 + 3*s23)) + p3q*(s12^2*s23 + 
                 s13^2*(9*s13 + s23) - s12*s13*(27*s13 + 11*s23))) + 
             p2q^2*(p3q^2*(s12 - s13)*(s12^2*s23 - 8*s13^2*s23 - 
                 s12*s13*(54*s13 + 13*s23)) + 2*p1q*p3q*(s12^3*s23 - 
                 12*s12^2*s13*s23 + 18*s12*s13^2*(s13 + s23) + 
                 s13^2*(-9*s13^2 + s13*s23 - 14*s23^2)) + p1q^2*s23*
                (-2*s12^2*(3*s13 + s23) + s12*(49*s13^2 + 10*s13*s23 - 
                   s23^2) + 2*s13*(23*s13^2 + s23^2))) + 
             2*p2q*(p3q^3*s12*(-8*s13^2*s23 + s12^2*(9*s13 + s23) - 
                 s12*s13*(27*s13 + 2*s23)) + p1q^2*p3q*s23*(s12^3 - 
                 3*s12^2*(4*s13 + s23) + s13*(10*s13^2 - 15*s13*s23 - 
                   s23^2) + s12*(33*s13^2 + 16*s13*s23 - s23^2)) + p1q^3*s23*
                (8*s13^3 - 11*s13^2*s23 - 2*s13*s23^2 + s23^3 - 
                 s12^2*(2*s13 + s23) + s12*(15*s13^2 + 6*s13*s23 + s23^2)) + 
               p1q*p3q^2*(2*s12^3*s23 - 8*s13^2*s23^2 + s12*s13*(18*s13^2 + 
                   26*s13*s23 + s23^2) - s12^2*(9*s13^2 + 29*s13*s23 + 
                   s23^2))) + (p3q*s12 - p1q*s23)*(p1q^3*s23*(-2*s12*s13 + 
                 16*s13^2 - 3*s12*s23 + 6*s13*s23 - 2*s23^2) + p3q^3*s12*
                (8*s13*s23 + s12*(18*s13 + s23)) + p1q^2*p3q*s23*
                (3*s12^2 - 8*s12*s13 + 2*s13*(17*s13 + 9*s23)) + p1q*p3q^2*
                (2*s12^2*s23 - 8*s13*s23^2 - s12*(18*s13^2 + 36*s13*s23 + 
                   s23^2)))))/((p1q + p2q + p3q)*s12*s13*s23*
            (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
             p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
             p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
               2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
         ((p1q + p2q)*(9*p1q^6*s13*s23^2*(s12 + s13 + s23)^2 + 
            (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p3q^3*s12*(s12 + s13 + s23)*(
                9*s13 + s23) + p2q^2*p3q*(-2*s23*(s13 + s23)^2 + 
                s12^2*(27*s13 + s23) + s12*(27*s13^2 + 26*s13*s23 - s23^2)) + 
              p2q^3*(45*s12^2*s13 + (36*s13 - s23)*(s13 + s23)^2 + 
                s12*(81*s13^2 + 80*s13*s23 - s23^2)) + p2q*p3q^2*(
                -(s23*(s13 + s23)^2) + s12^2*(27*s13 + 2*s23) + 
                s12*(27*s13^2 + 28*s13*s23 + s23^2))) - 
            p1q^5*s23*(s12 + s13 + s23)*(p2q*(18*s13^3 + 7*s13^2*s23 + 
                3*s23^3 + s12*(18*s13^2 - 20*s13*s23 + s23^2)) + 
              p3q*(18*s12^2*s13 + s12*(18*s13^2 + 7*s13*s23 + s23^2) + 
                s23*(-2*s13^2 + 9*s13*s23 + 3*s23^2))) - 
            p1q^3*(s12 + s13 + s23)*(p3q^3*(s12^3*(-9*s13 + s23) + 
                s23^3*(9*s13 + s23) + s12*s23*(2*s13^2 - 45*s13*s23 - 
                  7*s23^2) + 3*s12^2*(6*s13^2 + 29*s13*s23 + 3*s23^2)) + 
              p2q^2*p3q*(-18*s13^4 + s12^3*(36*s13 - 2*s23) + 49*s13^3*s23 - 
                33*s13^2*s23^2 + 7*s13*s23^3 + 11*s23^4 + s12^2*(72*s13^2 + 
                  98*s13*s23 - 4*s23^2) + s12*(9*s13^3 + 175*s13^2*s23 - 
                  127*s13*s23^2 - 13*s23^3)) - p2q^3*(27*s13^4 - 
                42*s13^3*s23 + 68*s13^2*s23^2 + 82*s13*s23^3 - 7*s23^4 + 
                2*s12^2*(18*s13^2 + 51*s13*s23 - s23^2) + s12*(54*s13^3 + 
                  5*s13^2*s23 + 212*s13*s23^2 - 5*s23^3)) + p2q*p3q^2*(
                -(s12^3*(18*s13 + s23)) + s12*s23*(20*s13^2 - 176*s13*s23 - 
                  25*s23^2) + s12^2*(27*s13^2 + 98*s13*s23 + 3*s23^2) + 
                s23*(34*s13^3 - s13^2*s23 + 26*s13*s23^2 + 5*s23^3))) + 
            p1q^4*(s12 + s13 + s23)*(p3q^2*(9*s12^3*s13 + s23^2*(11*s13^2 - 
                  7*s13*s23 - 2*s23^2) + s12^2*(9*s13^2 - 11*s13*s23 + 
                  2*s23^2) + s12*s23*(16*s13^2 + 60*s13*s23 + 9*s23^2)) + 
              p2q^2*(9*s13^4 - 29*s13^3*s23 + 2*s12^2*(16*s13 - s23)*s23 - 
                3*s13^2*s23^2 - 6*s13*s23^3 - 9*s23^4 + s12*(9*s13^3 - 
                  42*s13^2*s23 + 70*s13*s23^2 - 6*s23^3)) - 
              p2q*p3q*(6*s12^2*s13*(3*s13 + 7*s23) + s12*(18*s13^3 + 
                  80*s13^2*s23 - 40*s13*s23^2 - 3*s23^3) + s23*(20*s13^3 + 
                  10*s13^2*s23 + 49*s13*s23^2 + 11*s23^3))) + 
            p1q^2*(s12 + s13 + s23)*(p3q^4*s12*(3*s23^2*(9*s13 + s23) + 
                3*s12^2*(12*s13 + s23) - s12*(9*s13^2 + 65*s13*s23 + 
                  8*s23^2)) + p2q^3*p3q*(36*s13^4 - 163*s13^3*s23 - 
                61*s13^2*s23^2 + 55*s13*s23^3 - 3*s23^4 + s12^3*(-36*s13 + 
                  2*s23) - 2*s12^2*(36*s13^2 + 63*s13*s23 - 2*s23^2) + 
                s12*s23*(-255*s13^2 + 74*s13*s23 + 11*s23^2)) + 
              p2q^2*p3q^2*(-9*s13^4 - 113*s13^3*s23 - 26*s13^2*s23^2 + 
                11*s13*s23^3 - 3*s23^4 + 2*s12^3*(9*s13 + s23) - 
                s12^2*(99*s13^2 + 218*s13*s23 + 9*s23^2) + s12*s23*
                 (-85*s13^2 + 112*s13*s23 + 21*s23^2)) + p2q^4*(45*s13^4 - 
                122*s13^3*s23 - 53*s13^2*s23^2 + 81*s13*s23^3 - s23^4 + 
                2*s12^2*s13*(18*s13 + 35*s23) + s12*s13*(54*s13^2 - 
                  100*s13*s23 + 153*s23^2)) + p2q*p3q^3*(3*s12^3*(18*s13 + 
                  s23) + s23^2*(18*s13^2 + s13*s23 - s23^2) - 3*s12^2*
                 (24*s13^2 + 65*s13*s23 + 7*s23^2) + s12*(18*s13^3 + 
                  34*s13^2*s23 + 110*s13*s23^2 + 13*s23^3))) + 
            p1q*(3*p3q^5*s12^2*(s12 - s23)*(s12 + s13 + s23)*(9*s13 + s23) + 
              p2q^5*s13*(63*s13^4 + 3*s12^2*s13*(18*s13 - 43*s23) + 
                7*s13^3*s23 - 165*s13^2*s23^2 - 107*s13*s23^3 + 2*s23^4 + 
                s12*(117*s13^3 - 131*s13^2*s23 - 238*s13*s23^2 + 2*s23^3)) + 
              p2q*p3q^4*s12*(2*s23^2*(s13 + s23)^2 + s12^3*(72*s13 + 7*s23) + 
                s12^2*(9*s13^2 - 37*s13*s23 - 4*s23^2) - s12*(63*s13^3 + 
                  179*s13^2*s23 + 125*s13*s23^2 + 9*s23^3)) + 
              p2q^3*p3q^2*(s12^4*(54*s13 + s23) - s12^3*(81*s13^2 + 
                  79*s13*s23 + 4*s23^2) + s12^2*(-171*s13^3 - 384*s13^2*s23 - 
                  185*s13*s23^2 + s23^3) - s12*(45*s13^4 + 257*s13^3*s23 + 
                  228*s13^2*s23^2 + 34*s13*s23^3 - 6*s23^4) - 
                s13*(9*s13^4 + 115*s13^3*s23 + 173*s13^2*s23^2 + 
                  61*s13*s23^3 - 6*s23^4)) - p2q^4*p3q*(4*s12^3*s13*
                 (27*s13 + 13*s23) + s12^2*(135*s13^3 + 407*s13^2*s23 + 
                  74*s13*s23^2 - 2*s23^3) + s12*(-27*s13^4 + 391*s13^3*s23 + 
                  410*s13^2*s23^2 + 14*s13*s23^3 - 2*s23^4) + 
                3*s13*(-18*s13^4 + 21*s13^3*s23 + 86*s13^2*s23^2 + 
                  45*s13*s23^3 - 2*s23^4)) + p2q^2*p3q^3*(s12^4*(99*s13 + 
                  5*s23) + s12^3*(9*s13^2 - 31*s13*s23 - 8*s23^2) + 
                s13*s23*(-9*s13^3 - 8*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) - 
                s12^2*(45*s13^3 + 150*s13^2*s23 + 134*s13*s23^2 + 7*s23^3) + 
                s12*(45*s13^4 + 111*s13^3*s23 + 90*s13^2*s23^2 + 
                  22*s13*s23^3 + 6*s23^4)))))/(8*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s12*s13*s23*(-(p3q^3*s12^3) + 
            (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       (-1/4*(ep*p1q*(p1q + p2q)*(s12 - 8*s13)*(s12 + s13 + s23)*
            (-((p2q + p3q)^2*s12*(-(p3q*s12) + p2q*s13)) + 
             2*p1q^3*s23*(s13 + s23) - p1q^2*(p2q*(2*s12*s13 + 2*s13^2 + 
                 s12*s23 - 2*s23^2) + p3q*(2*s12*s13 + 2*s13^2 + 4*s12*s23 + 
                 s13*s23 - s23^2)) - p1q*(-(p3q^2*s12*(2*s12 + s13 - 
                  2*s23)) + p2q*p3q*(-s12^2 + 4*s12*(s13 + s23) + 
                 3*s13*(s13 + s23)) + p2q^2*(2*s13*(s13 + s23) + 
                 s12*(3*s13 + s23)))))/((p1q + p2q + p3q)*s12*s13*
            (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
             p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
             p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
               2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         ((p1q + p2q)*(s12 + s13 + s23)*(-18*p2q^2*(p2q + p3q)^2*s13*
             (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 2*p1q^5*(8*p2q - p3q)*
             s13*s23^2*(s12 + s13 + s23) - 2*p1q*p2q*(p2q + p3q)*
             (p2q^3*s13^2*(9*s13 - 19*s23)*(s12 + s13 + s23) + 
              p3q^3*s12^2*(s12*(18*s13 + s23) + 2*s13*(9*s13 + 5*s23)) - 
              p2q^2*p3q*s13*(4*s12*s23*(11*s13 + 4*s23) + s12^2*(18*s13 + 
                  17*s23) + 18*s13*(-s13^2 + s23^2)) + p2q*p3q^2*s12*(
                9*s12^2*s13 - s12*(27*s13^2 + 19*s13*s23 + s23^2) - 
                2*s13*(18*s13^2 + 23*s13*s23 + 9*s23^2))) + 
            p1q^4*s23*(p3q^2*(2*s12^2*s13 + 2*s13*(s13^2 - 3*s13*s23 - 
                  4*s23^2) - s12*(14*s13^2 + 17*s13*s23 + s23^2)) + 
              p2q*p3q*(s12^2*(-32*s13 + s23) + s12*(-28*s13^2 - 45*s13*s23 + 
                  s23^2) + 2*(2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + s23^3)) + 
              p2q^2*(s12^2*(-16*s13 + s23) + 2*s12*(-7*s13^2 + 13*s13*s23 + 
                  s23^2) + 2*(-8*s13^3 + 16*s13^2*s23 + 25*s13*s23^2 + 
                  s23^3))) - p1q^3*(-(p3q^3*s12*(s12*(18*s13^2 + 37*s13*s23 + 
                   2*s23^2) + 2*s13*(9*s13^2 + 14*s13*s23 + 9*s23^2))) + 
              p2q^3*(s12^2*(18*s13^2 + 51*s13*s23 - s23^2) + 
                2*s12*(9*s13^3 + 36*s13^2*s23 + 22*s13*s23^2 - s23^3) - 
                2*s23*(-24*s13^3 - 19*s13^2*s23 + 6*s13*s23^2 + s23^3)) + 
              p2q^2*p3q*(18*s13^4 + 34*s13^3*s23 + 42*s13^2*s23^2 + 
                24*s13*s23^3 - 2*s23^4 + s12^3*(-18*s13 + s23) + 
                s12^2*s23*(41*s13 + s23) + s12*(36*s13^3 + 65*s13^2*s23 + 
                  135*s13*s23^2 + 4*s23^3)) + p2q*p3q^2*(s12^3*(-18*s13 + 
                  s23) - s12^2*s13*(36*s13 + 47*s23) + s12*s23*(s13^2 + 
                  55*s13*s23 + 6*s23^2) + 2*s13*(9*s13^3 + 11*s13^2*s23 + 
                  11*s13*s23^2 + 9*s23^3))) - 
            p1q^2*(p3q^4*s12^2*(s12*(18*s13 + s23) + 2*s13*(9*s13 + 5*s23)) + 
              p2q*p3q^3*s12*(s12^2*(18*s13 + s23) - 3*s12*(12*s13^2 + 
                  27*s13*s23 + 2*s23^2) - 2*s13*(27*s13^2 + 50*s13*s23 + 
                  19*s23^2)) + p2q^4*s13*(s12^2*(18*s13 + 35*s23) + 
                2*s23*(-3*s13^2 + 8*s13*s23 + 11*s23^2) + 2*s12*(9*s13^2 + 
                  10*s13*s23 + 27*s23^2)) - p2q^2*p3q^2*(s12^3*(18*s13 - 
                  s23) + s12^2*(72*s13^2 + 133*s13*s23 + 4*s23^2) + 
                2*s12*(9*s13^3 + 69*s13^2*s23 + 8*s13*s23^2 - 2*s23^3) - 
                2*s13*(18*s13^3 + 7*s13^2*s23 - 2*s13*s23^2 + 9*s23^3)) + 
              p2q^3*p3q*(s12^3*(-18*s13 + s23) + s12^2*s23*(-25*s13 + 
                  2*s23) + s12*(54*s13^3 - 54*s13^2*s23 + 58*s13*s23^2 + 
                  4*s23^3) + 2*s13*(18*s13^3 - 5*s13^2*s23 - 3*s13*s23^2 + 
                  20*s23^3)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*
           s23*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
              2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*((-1/4*(ep*(p1q + p2q)*(s12 + s13 + s23)*(p1q*(p1q + p3q)*s23*
                (s12 + s13 + s23)*(p3q*s12 - p1q*s23)^2 + p2q^4*s13^2*
                (-9*s13^2 + s12*s23 - 9*s13*s23) + p2q^3*s13*
                (-(p1q*(9*s13^3 + s12^2*s23 + 6*s13^2*s23 - 3*s13*s23*
                     (4*s12 + s23))) + p3q*(-2*s12^2*s23 + 9*s13*s23*
                    (s13 + s23) + s12*(27*s13^2 + 19*s13*s23 - s23^2))) + p2q*
                (p3q^3*s12^2*(s12 + s23)*(9*s13 + s23) + p1q^3*s23*
                  (-(s12^2*(2*s13 + s23)) + 4*s12*s13*(4*s13 + s23) + 
                   s23*(5*s13^2 + 6*s13*s23 + s23^2)) + p1q*p3q^2*s12*
                  (2*s12^2*s23 - s12*s13*(9*s13 + 28*s23) - 2*s23*(s13^2 + 
                     14*s13*s23 + s23^2)) + p1q^2*p3q*s23*(s12^3 - 
                   2*s12^2*(6*s13 + s23) + s12*(32*s13^2 + 3*s13*s23 - 
                     2*s23^2) + s23*(14*s13^2 + 15*s13*s23 + s23^2))) + p2q^2*
                (p3q^2*s12*(s12^2*s23 - 2*s13*s23*(9*s13 + 5*s23) + 
                   s12*(-27*s13^2 - 11*s13*s23 + s23^2)) + p1q^2*s23*
                  (-(s12^2*(3*s13 + s23)) + s12*(27*s13^2 + 4*s13*s23 - 
                     s23^2) + s13*(3*s13^2 + 8*s13*s23 + 5*s23^2)) + 
                 p1q*p3q*(s12^3*s23 - 14*s12^2*s13*s23 + s13*s23*(s13^2 + 
                     7*s13*s23 + 6*s23^2) + s12*(18*s13^3 + 33*s13^2*s23 - 
                     5*s13*s23^2 - s23^3)))))/((p1q + p2q + p3q)*s12*s13*s23*
              (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                 2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
               p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                   3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
           ((p1q + p2q)*(s12 + s13 + s23)*(p1q^5*(p2q + p3q)*s23^3*(s12 + 
                s13 + s23) - p1q^4*s23*(s12 + s13 + s23)*(p3q^2*(2*s12 - s23)*
                 s23 + p2q^2*(16*s12*s13 - s12*s23 + 27*s13*s23 - 3*s23^2) + 
                p2q*p3q*((9*s13 - 4*s23)*s23 + s12*(-2*s13 + s23))) - 
              2*p2q^2*s13*(p3q*s12 - p2q*s13)*(-9*p2q^3*s13*(s12 + s13 + 
                  s23) + p3q^3*s12*(9*s12 + 8*s23) + p2q*p3q^2*(s12 - s13 - 
                  s23)*(9*s12 + 8*s23) + p2q^2*p3q*(9*s12^2 + 9*s12*s23 + 
                  s23*(s13 + s23))) - p1q^3*(-(p3q^3*s12*(s12 - 2*s23)*s23*
                  (s12 + s13 + s23)) - p2q*p3q^2*(3*s23^3*(s13 + s23) + 
                  s12^2*(18*s13^2 + 29*s13*s23 - 5*s23^2) + s12*s23*
                   (36*s13^2 + 23*s13*s23 - 2*s23^2)) + p2q^2*p3q*
                 (s12^3*(-18*s13 + s23) + s12^2*s23*(-31*s13 + 3*s23) + 
                  s23*(s13^3 + 64*s13^2*s23 + 58*s13*s23^2 - 5*s23^3) + 
                  s12*(18*s13^3 + 23*s13^2*s23 + 53*s13*s23^2 - 3*s23^3)) + 
                p2q^3*(s12*s23*(41*s13^2 + 132*s13*s23 - 3*s23^2) + 
                  s12^2*(18*s13^2 + 51*s13*s23 - s23^2) + s23*(-35*s13^3 + 
                    46*s13^2*s23 + 79*s13*s23^2 - 2*s23^3))) + 
              p1q*p2q*(p2q*p3q^3*s12*(-27*s12^2*s13 + 27*s12*s13^2 + 
                  20*s12*s13*s23 + 32*s13^2*s23 - 2*s12*s23^2 + 38*s13*
                   s23^2 - 2*s23^3) + p3q^4*s12^2*(s12*(-9*s13 + s23) + 
                  s23*(-7*s13 + s23)) + p2q^4*s13^2*(-27*s13^2 + 43*s13*s23 + 
                  s23*(73*s12 + 70*s23)) + p2q^3*p3q*s13*(s12*(27*s13^2 + 
                    20*s13*s23 - 39*s23^2) + 9*(s13^3 + 6*s13^2*s23 + 
                    s13*s23^2 - 4*s23^3)) - p2q^2*p3q^2*(s12^3*s23 - 
                  3*s12^2*(9*s13^2 + 27*s13*s23 - s23^2) + s13*s23*
                   (25*s13^2 + 43*s13*s23 + 18*s23^2) + s12*(27*s13^3 + 
                    3*s13^2*s23 - 53*s13*s23^2 + 2*s23^3))) + 
              p1q^2*(p3q^4*s12^2*s23*(s12 + s13 + s23) + p2q^4*s13*
                 (-9*s13^3 + 96*s13^2*s23 + 51*s13*s23^2 - 54*s23^3 - 
                  s12^2*(18*s13 + 35*s23) + 6*s12*(3*s13^2 + 8*s13*s23 - 
                    15*s23^2)) + p2q*p3q^3*s12*(s12^2*(-18*s13 + s23) + 
                  s12*(9*s13^2 - 7*s13*s23 - 3*s23^2) + 4*s23*(4*s13^2 + 
                    s13*s23 - s23^2)) + p2q^3*p3q*(9*s13^4 + s12^3*
                   (18*s13 - s23) + 43*s13^3*s23 - 64*s13^2*s23^2 - 
                  96*s13*s23^3 + 2*s23^4 + s12^2*(-36*s13^2 + 29*s13*s23 - 
                    2*s23^2) + s12*(-18*s13^3 - 59*s13^2*s23 - 93*s13*s23^2 + 
                    s23^3)) + p2q^2*p3q^2*(s12^3*(18*s13 - s23) + 
                  s12^2*(45*s13^2 + 110*s13*s23 - 6*s23^2) + s12*(-18*s13^3 + 
                    35*s13^2*s23 + 55*s13*s23^2 - 3*s23^3) + s23*(-17*s13^3 - 
                    43*s13^2*s23 - 24*s13*s23^2 + 2*s23^3)))))/
            (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
             (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*
          p1 . E0conj + (-1/8*(ep*(p1q + p2q)*(s12 - 8*s13)*((p2q + p3q)^2*
                (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + p1q^4*s23*
                (s12 + s13 + s23)*(2*s13 + 3*s23) - 2*p1q^3*(s12 + s13 + s23)*
                (p2q*(s13^2 + 2*s13*s23 - s23^2 + s12*(2*s13 + s23)) + 
                 p3q*(-(s23*(s13 + 2*s23)) + s12*(s13 + 3*s23))) - p1q^2*
                (s12 + s13 + s23)*(-2*p2q*p3q*(s12^2 - 4*s12*s13 + s13^2 - 
                   3*s12*s23 - s13*s23 + s23^2) + p2q^2*(-s13^2 + 6*s13*s23 + 
                   s23^2 + 2*s12*(3*s13 + s23)) - p3q^2*(3*s12^2 + s23^2 - 
                   2*s12*(s13 + 4*s23))) - 2*p1q*(p2q^3*(s12 - 2*s13)*s13*
                  (s12 + s13 + s23) - p2q^2*p3q*(s12^2 - 4*s12*s13 + 3*s13^2)*
                  (s12 + s13 + s23) - p3q^3*s12*(2*s12 - s23)*(s12 + s13 + 
                   s23) + p2q*p3q^2*(-2*s12^3 + 3*s12^2*s13 + s13*s23*
                    (s13 + s23) + s12*(5*s13^2 + 8*s13*s23 + 2*s23^2)))))/
             ((p1q + p2q + p3q)*s12*s13*(-(p3q^3*s12^3) + (p1q + p2q)*
                (s13 + s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*
                (p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - p3q*s12*
                (p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
                 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
           ((p1q + p2q)*(9*p1q^6*s13*s23^2*(s12 + s13 + s23)^2 - 
              p1q^5*s23*(s12 + s13 + s23)*(p2q*(18*s13^3 - 25*s13^2*s23 - 
                  34*s13*s23^2 + s23^3 + s12*(18*s13^2 - 52*s13*s23 - 
                    s23^2)) + p3q*(18*s12^2*s13 + s12*(18*s13^2 + 11*s13*
                     s23 - s23^2) + s23*(2*s13^2 + 11*s13*s23 + s23^2))) - 
              (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(-(p3q^3*s12*(s12 + s13 + 
                   s23)*(9*s13 + s23)) + p2q^2*p3q*(s12^2*(9*s13 - s23) - 
                  2*s23*(s13 + s23)^2 + s12*(9*s13^2 + 6*s13*s23 - 
                    3*s23^2)) + p2q*p3q^2*(s23*(s13 + s23)^2 + s12^2*
                   (9*s13 + 2*s23) + 3*s12*(3*s13^2 + 4*s13*s23 + s23^2)) + 
                p2q^3*(27*s12^2*s13 + (s13 + s23)^2*(36*s13 + s23) + 
                  s12*(63*s13^2 + 64*s13*s23 + s23^2))) - p1q^3*(s12 + s13 + 
                s23)*(p3q^3*(-(s12^3*(9*s13 + s23)) + s23^3*(9*s13 + s23) + 
                  s12^2*(-18*s13^2 + 5*s13*s23 + 3*s23^2) - s12*s23*
                   (2*s13^2 + 63*s13*s23 + 5*s23^2)) + p2q^2*p3q*(18*s13^4 - 
                  29*s13^3*s23 - 115*s13^2*s23^2 + 27*s13*s23^3 - s23^4 + 
                  s12^3*(-36*s13 + 2*s23) + 2*s12^2*(36*s13^2 + 59*s13*s23 + 
                    2*s23^2) + s12*(81*s13^3 + 181*s13^2*s23 + 119*s13*
                     s23^2 - 7*s23^3)) + p2q^3*(-27*s13^4 + 68*s13^3*s23 + 
                  100*s13^2*s23^2 + 52*s13*s23^3 - s23^4 + 2*s12^2*
                   (18*s13^2 + 51*s13*s23 - s23^2) + s12*(-18*s13^3 + 
                    221*s13^2*s23 + 140*s13*s23^2 - 5*s23^3)) + p2q*p3q^2*
                 (s12^3*(-54*s13 + s23) + s12*s23*(12*s13^2 - 48*s13*s23 - 
                    7*s23^2) + s12^2*(-45*s13^2 + 12*s13*s23 + 9*s23^2) + 
                  s23*(-34*s13^3 - 71*s13^2*s23 + 20*s13*s23^2 + s23^3))) + 
              p1q^2*(s12 + s13 + s23)*(p3q^4*s12*(s12^2*s23 + 3*s23^2*
                   (9*s13 + s23) + s12*(9*s13^2 - 43*s13*s23 - 4*s23^2)) - 
                p2q^4*(-27*s13^4 - 82*s13^3*s23 - 17*s13^2*s23^2 + 
                  71*s13*s23^3 + s23^4 + 2*s12^2*s13*(18*s13 + 35*s23) + 
                  s12*s13*(-54*s13^2 + 44*s13*s23 + 135*s23^2)) + 
                p2q^3*p3q*(-36*s13^4 + s12^3*(36*s13 - 2*s23) + 87*s13^3*
                   s23 + 165*s13^2*s23^2 - 37*s13*s23^3 + s23^4 - 
                  2*s12^2*(72*s13^2 + 9*s13*s23 + 2*s23^2) - s12*(72*s13^3 + 
                    21*s13^2*s23 + 58*s13*s23^2 - 3*s23^3)) + p2q*p3q^3*
                 (s12^3*(18*s13 + s23) - s12^2*s23*(33*s13 + 7*s23) + 
                  s23^2*(18*s13^2 + s13*s23 - s23^2) + s12*(-18*s13^3 - 
                    34*s13^2*s23 + 34*s13*s23^2 + s23^3)) + p2q^2*p3q^2*
                 (9*s13^4 + s12^3*(90*s13 - 2*s23) + 77*s13^3*s23 + 
                  130*s13^2*s23^2 - s13*s23^3 + s23^4 + s12^2*(27*s13^2 + 
                    98*s13*s23 - 7*s23^2) + s12*(36*s13^3 + 97*s13^2*s23 + 
                    48*s13*s23^2 + s23^3))) + p1q^4*(s12 + s13 + s23)*(
                p3q^2*(9*s12^3*s13 + s12^2*(9*s13^2 - 7*s13*s23 - 2*s23^2) - 
                  s23^2*(11*s13^2 + 29*s13*s23 + 2*s23^2) + s12*s23*
                   (-16*s13^2 + 16*s13*s23 + 3*s23^2)) - p2q*p3q*
                 (6*s12^2*s13*(3*s13 + 17*s23) + s12*(18*s13^3 + 100*s13^2*
                     s23 + 36*s13*s23^2 - 9*s23^3) + s23*(-20*s13^3 - 
                    50*s13^2*s23 + 19*s13*s23^2 + s23^3)) + p2q^2*
                 (9*s13^4 - 61*s13^3*s23 + 7*s13^2*s23^2 + 46*s13*s23^3 + 
                  s23^4 + 2*s12^2*s23*(-16*s13 + s23) + s12*(9*s13^3 - 
                    102*s13^2*s23 + 38*s13*s23^2 + 6*s23^3))) + 
              p1q*(p3q^5*s12^2*(s12 - 3*s23)*(s12 + s13 + s23)*(9*s13 + 
                  s23) + p2q*p3q^4*s12*(s12^3*s23 + 2*s23^2*(s13 + s23)^2 + 
                  s12^2*(-9*s13^2 - 17*s13*s23 + 2*s23^2) - 3*s12*(3*s13^3 + 
                    9*s13^2*s23 + 5*s13*s23^2 - s23^3)) + p2q^5*s13*
                 (-27*s13^4 + 43*s13^3*s23 + 177*s13^2*s23^2 + 109*s13*
                   s23^3 + 2*s23^4 + 3*s12^2*s13*(6*s13 + 31*s23) + 
                  s12*(-9*s13^3 + 181*s13^2*s23 + 200*s13*s23^2 + 2*s23^3)) + 
                p2q^3*p3q^2*(s12^4*(18*s13 - s23) + s12^3*(45*s13^2 + 
                    85*s13*s23 - 6*s23^2) + s12^2*(135*s13^3 + 262*s13^2*
                     s23 + 129*s13*s23^2 - 7*s23^3) + s12*(117*s13^4 + 
                    327*s13^3*s23 + 298*s13^2*s23^2 + 62*s13*s23^3 - 
                    2*s23^4) + s13*(9*s13^4 + 61*s13^3*s23 + 117*s13^2*
                     s23^2 + 63*s13*s23^3 - 2*s23^4)) - p2q^2*p3q^3*
                 (s12^4*(27*s13 + s23) + s12^3*(81*s13^2 + 39*s13*s23 + 
                    2*s23^2) + s13*s23*(9*s13^3 + 8*s13^2*s23 - 3*s13*s23^2 - 
                    2*s23^3) + s12^2*(63*s13^3 + 100*s13^2*s23 + 14*s13*
                     s23^2 + 3*s23^3) + s12*(9*s13^4 + 53*s13^3*s23 + 
                    36*s13^2*s23^2 + 2*s13*s23^3 + 2*s23^4)) + p2q^4*p3q*
                 (-4*s12^3*s13*(9*s13 - 4*s23) + s12^2*(-9*s13^3 + 131*s13^2*
                     s23 + 50*s13*s23^2 + 2*s23^3) + s13*(-54*s13^4 + 
                    5*s13^3*s23 + 194*s13^2*s23^2 + 133*s13*s23^3 - 
                    2*s23^4) + s12*(-27*s13^4 + 237*s13^3*s23 + 320*s13^2*
                     s23^2 + 34*s13*s23^3 + 2*s23^4)))))/(8*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s13*s23*(-(p3q^3*s12^3) + (p1q + p2q)*(
                s13 + s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(
                p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - p3q*s12*(
                p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
                2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((-1/16*(ep*(p1q + p3q)*(s12 + s13)*(s12 + s13 + s23)*
            (p3q*s12 - p2q*s13 + p1q*(2*s12 + s23)))/
           (s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
         ((p1q + p3q)*(s12 + s13 + s23)*(-(p2q^2*s13^2) - 
            p1q*p2q*s13*(s13 - 2*s23) - p3q^2*s12*(s12 + s23) + 
            p1q^2*(2*s12*s13 + (s13 - s23)*s23) + 
            p3q*(p2q*s13*(2*s12 + s23) + p1q*(s12*s13 - s23^2))))/
          (16*p1q*s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
        E0 . E0conj + (-1/8*(ep*(p1q + p3q)*(s12 + s13 + s23)*
            ((p2q + p3q)^2*(s12 - s13)*(p3q*s12 - p2q*s13)^2 + 
             p1q^4*s23*(2*s12^2 + (s13 - 2*s23)*s23 + s12*(2*s13 + s23)) + 
             2*p1q*(p2q + p3q)*(-(p3q^2*s12^2*(s12 + 2*s13 + 3*s23)) + p2q*
                p3q*s12*(2*s13^2 - s12*s23) + p2q^2*s13*(s12*(s13 - s23) + 
                 s13*s23)) - 2*p1q^3*(p3q*(s12^3 + s12^2*(s13 - 2*s23) + 
                 s23^2*(-s13 + s23) - 2*s12*s23*(s13 + 2*s23)) + p2q*
                (2*s12^3 + s13*(s13 - 2*s23)*s23 + s12^2*(3*s13 + 2*s23) + 
                 s12*(s13^2 + 3*s13*s23 - s23^2))) + 
             p1q^2*(-2*p2q*p3q*(4*s12^3 + s13*(s13 - s23)*s23 + 
                 s12*(5*s13 - s23)*s23 + s12^2*(4*s13 + 6*s23)) + p3q^2*
                (-5*s12^3 + s13*s23^2 - s12^2*(5*s13 + 4*s23) + s12*s23*
                  (2*s13 + 7*s23)) + p2q^2*(4*s12^2*s13 + s13*(s13^2 - 
                   2*s13*s23 - s23^2) + s12*(5*s13^2 - 4*s13*s23 + s23^2)))))/
           ((p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
             (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
             p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                 s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                 s12*s23 + s23^2)))) - 
         ((p1q + p3q)*((p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
             (-(p2q*s13) + p3q*(s12 + s23)) + p1q^5*s23*(2*s12^3 + 
              s12^2*(4*s13 + 6*s23) + s23*(s13^2 + 4*s13*s23 + 3*s23^2) + 
              s12*(2*s13^2 + 7*s13*s23 + 7*s23^2)) + p1q^3*(s12 + s13 + s23)*
             (p2q^2*(4*s12*s13^2 + s13^3 + 5*s13^2*s23 - 7*s13*s23^2 + 
                s23^3) + p3q^2*(-6*s12^3 + 2*s12*s23*(s13 + s23) - 
                s12^2*(5*s13 + s23) + s23^2*(s13 + 3*s23)) - 
              2*p2q*p3q*(6*s12^3 + s12*s23*(6*s13 + 5*s23) + 
                s12^2*(7*s13 + 10*s23) + s23*(s13^2 + 3*s13*s23 - 
                  2*s23^2))) - p1q^4*(s12 + s13 + s23)*
             (p3q*(2*s12^3 + 2*s12^2*(s13 - s23) - s23^2*(2*s13 + 5*s23) - 
                s12*s23*(4*s13 + 5*s23)) + p2q*(4*s12^3 + s12^2*(6*s13 + 
                  8*s23) + s23*(2*s13^2 + 7*s13*s23 - 2*s23^2) + 
                2*s12*(s13^2 + 4*s13*s23 + 2*s23^2))) - 
            p1q^2*(s12 + s13 + s23)*(p2q^3*s13*(-4*s12*s13 + s13^2 - 
                8*s13*s23 + 3*s23^2) + p3q^3*(7*s12^3 + s12*s23^2 - s23^3 + 
                s12^2*(4*s13 + 5*s23)) - p2q^2*p3q*(s12*(11*s13^2 - 
                  6*s13*s23 - s23^2) + s23*(s13^2 - 10*s13*s23 + s23^2)) + 
              p2q*p3q^2*(12*s12^3 + (3*s13 - 2*s23)*s23^2 + s12^2*
                 (11*s13 + 18*s23) + s12*(-4*s13^2 + 12*s13*s23 + 
                  10*s23^2))) - p1q*(3*p2q^4*s13^2*(s13 - s23)*(s12 + s13 + 
                s23) - 2*p2q^3*p3q*s13*(s12^2*(6*s13 - s23) + 
                s12*(6*s13^2 + 9*s13*s23 - 2*s23^2) + s23*(4*s13^2 + 
                  3*s13*s23 - s23^2)) + p3q^4*s12*(2*s12^3 + 2*s23^2*
                 (s13 + s23) + s12^2*(3*s13 + 5*s23) + s12*(s13^2 + 
                  4*s13*s23 + 5*s23^2)) + 2*p2q*p3q^3*(s12^4 + 3*s12^3*
                 (s13 + s23) + s13*s23^2*(s13 + s23) + s12^2*(s13^2 + 
                  7*s13*s23 + 4*s23^2) + s12*(-s13^3 + 2*s13^2*s23 + 
                  6*s13*s23^2 + 2*s23^3)) + p2q^2*p3q^2*(s12^3*(7*s13 + 
                  s23) + s12^2*(s13^2 + 20*s13*s23 + 3*s23^2) + 
                s12*(-5*s13^3 + 5*s13^2*s23 + 18*s13*s23^2 + 2*s23^3) + 
                s13*(s13^3 + 3*s13*s23^2 + 4*s23^3)))))/
          (8*p1q*(p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))))*p1 . E0conj*p2 . E0 + 
       (-1/4*(ep*p1q*(p1q + p3q)*(s12 + s13)*(s12 + s13 + s23)*
            ((p2q + p3q)^2*s13*(-(p3q*s12) + p2q*s13) + 2*p1q^3*s23*
              (s12 + s23) + p1q*(p2q^2*s13*(s12 + 2*s13 - 2*s23) - p3q^2*
                (2*s12^2 + 3*s12*s13 + 2*s12*s23 + s13*s23) - p2q*p3q*
                (3*s12^2 + 4*s12*s13 - s13^2 + 3*s12*s23 + 4*s13*s23)) - 
             p1q^2*(p3q*(2*s12^2 + 2*s12*s13 + (s13 - 2*s23)*s23) + p2q*
                (2*s12^2 + (4*s13 - s23)*s23 + s12*(2*s13 + s23)))))/
           ((p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
             (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
             p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                 s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                 s12*s23 + s23^2)))) - ((p1q + p3q)*(s12 + s13 + s23)*
           (2*p1q^4*s12*s23*(s12 + s13 + s23) - 2*p3q*(p3q*s12 - p2q*s13)*
             (p2q^2*s13*(s12 + s13) - p2q*p3q*s13*s23 + p3q^2*s12*(s12 + 
                s13 + s23)) - p1q^3*(p2q*(2*s12^3 - s13*s23^2 + 
                s12^2*(4*s13 + 3*s23) + s12*(2*s13^2 + s13*s23 + s23^2)) + 
              p3q*(2*s12^3 + 4*s12^2*(s13 - s23) + s12*(2*s13^2 - s13*s23 - 
                  4*s23^2) + s23*(s13^2 + 2*s13*s23 + 2*s23^2))) + 
            p1q*(p2q^3*s13^2*(s12 + s13) - p3q^3*s12*(6*s12^2 + 7*s12*s13 + 
                s13^2 + 2*s12*s23 - 4*s23^2) - p2q^2*p3q*s13*(s12^2 + 
                6*s13*s23 + s12*(s13 + 2*s23)) + p2q*p3q^2*(-4*s12^3 - 
                2*s12^2*(s13 + 2*s23) + s12*s13*(3*s13 + 4*s23) + 
                s13*(s13^2 + 2*s13*s23 + 4*s23^2))) - 
            p1q^2*(p2q^2*s13*(s12^2 + s12*s13 + 2*s13*s23) + p3q^2*(6*s12^3 + 
                s12^2*(9*s13 - 2*s23) + s12*(3*s13^2 + s13*s23 - 6*s23^2) + 
                s23*(s13^2 + 2*s13*s23 + 2*s23^2)) + p2q*p3q*(5*s12^3 + 
                s12*s13*(s13 - s23) + s12^2*(7*s13 + 5*s23) - 
                s13*(s13^2 + 2*s13*s23 + 6*s23^2)))))/(4*(p1q + p2q + p3q)*
           s13*(p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p2 . E0*p2 . E0conj + p1 . E0*
        (((p2q*(p1q + p3q)*(s12 + s13 + s23)*(2*p2q*p3q*s13*(p3q*s12 - 
                p2q*s13) + p1q^3*(2*s12 + s23)*(s12 + s13 + s23) + 
              p1q*(-(p2q^2*s13^2) + p2q*p3q*s13*(s12 - s13 + 2*s23) + 
                p3q^2*s12*(4*s12 + s13 + 4*s23)) + p1q^2*(p2q*(s12 - s13)*
                 s13 + p3q*(5*s12^2 + 3*s12*s13 + 5*s12*s23 + s13*s23))))/
            (4*p1q*(p1q + p2q + p3q)*s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
               2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           (ep*p2q*(p1q + p3q)*(s12 + s13 + s23)*(-((p2q + p3q)*s13*
                (-(p3q*s12) + p2q*s13)) + p1q^2*(2*s12^2 + (s13 - s23)*s23 + 
                s12*(2*s13 + s23)) + p1q*(-(p2q*s13*(s12 + s13 - 2*s23)) + 
                p3q*(3*s12^2 + s13*s23 + 3*s12*(s13 + s23)))))/
            (4*(p1q + p2q + p3q)*s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
              2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj + 
         (-1/8*(ep*(p1q + p3q)*(s12 + s13)*(-((p2q + p3q)^2*
                 (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)) + p1q^4*s23*
                (2*s12 + s23)*(s12 + s13 + s23) + p1q^2*(s12 + s13 + s23)*
                (p2q^2*(4*s12*s13 + s13^2 + 4*s13*s23 - s23^2) + 
                 p3q^2*(-5*s12^2 + 2*s12*s23 + s23^2) - 2*p2q*p3q*(4*s12^2 + 
                   2*s12*s23 + s23*(s13 + s23))) - 2*p1q^3*(s12 + s13 + s23)*
                (p3q*(s12^2 - 2*s12*s23 - s23^2) + p2q*(2*s12^2 + 
                   s23*(s13 + s23) + s12*(s13 + 2*s23))) + p1q*
                (-4*p3q^3*s12^2*(s12 + s13 + s23) - 2*p2q*p3q^2*s12*
                  (3*s12 - 2*s13)*(s12 + s13 + s23) - 2*p2q^3*s13*(s13 - s23)*
                  (s12 + s13 + s23) + 2*p2q^2*p3q*(2*s13*s23*(s13 + s23) + 
                   s12^2*(4*s13 + s23) + s12*(4*s13^2 + 7*s13*s23 + 
                     s23^2)))))/((p1q + p2q + p3q)*s13*(p1q^3*s23^2*
                (s12 + s23) + (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + 
                 p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + 
                 p3q*(2*s12^2 + s12*s23 - s23^2)) + p1q*(p2q^2*s13^2*
                  (s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 2*s23^2) - 
                 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) - 
           ((p1q + p3q)*(-((p2q - p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + 
                 s23)*(-(p2q*s13) + p3q*(s12 + s23))) + p1q^5*s23*(2*s12^3 + 
                4*s12^2*(s13 + s23) + s23*(s13^2 - s23^2) + 
                s12*(2*s13^2 + 5*s13*s23 + s23^2)) - p1q^3*(s12 + s13 + s23)*(
                p2q^2*(-2*s12*s13^2 - s13^3 + 7*s13^2*s23 - 5*s13*s23^2 + 
                  s23^3) + 2*p2q*p3q*(6*s12^3 + s13*(s13 - 7*s23)*s23 + 
                  s12*s23*(2*s13 + s23) + 5*s12^2*(s13 + 2*s23)) + 
                p3q^2*(8*s12^3 + s12^2*(5*s13 - 3*s23) + s23^2*(-s13 + 
                    3*s23) - 2*s12*s23*(s13 + 7*s23))) - p1q^2*(s12 + s13 + 
                s23)*(-(p2q^3*s13*(4*s12*s13 + 3*s13^2 - 4*s13*s23 + 
                   3*s23^2)) + p3q^3*(11*s12^3 - 9*s12*s23^2 + s23^3 + 
                  s12^2*(4*s13 + 5*s23)) + p2q^2*p3q*(s12*(s13^2 + 
                    6*s13*s23 - s23^2) + s23*(15*s13^2 + 2*s13*s23 + 
                    s23^2)) + p2q*p3q^2*(12*s12^3 - s12^2*(s13 - 22*s23) - 
                  s23^2*(11*s13 + 2*s23) + s12*(-4*s13^2 - 4*s13*s23 + 
                    2*s23^2))) - p1q^4*(s12 + s13 + s23)*(p3q*(2*s12^3 + 
                  2*s12^2*(s13 - 3*s23) + s23^2*(-2*s13 + 3*s23) - 
                  s12*s23*(4*s13 + 9*s23)) + p2q*(4*s12^3 + s12^2*(6*s13 + 
                    8*s23) + s23*(2*s13^2 - 5*s13*s23 + 2*s23^2) + 
                  2*s12*(s13^2 + 2*s13*s23 + 2*s23^2))) + 
              p1q*(p2q^4*s13^2*(s13 - 3*s23)*(s12 + s13 + s23) + 
                2*p2q^3*p3q*s13*(2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + 
                  s23^3 + s12^2*(2*s13 + s23) + s12*(4*s13^2 + 5*s13*s23 + 
                    2*s23^2)) - p3q^4*s12*(6*s12^3 - 2*s23^2*(s13 + s23) + 
                  s12^2*(7*s13 + 11*s23) + s12*(s13^2 + 6*s13*s23 + 
                    3*s23^2)) + 2*p2q*p3q^3*(-s12^4 + s12^3*(3*s13 - 5*s23) + 
                  s13*s23^2*(s13 + s23) + s12^2*(5*s13^2 + 3*s13*s23 - 
                    6*s23^2) + s12*(s13^3 + 4*s13^2*s23 + 2*s13*s23^2 - 
                    2*s23^3)) - p2q^2*p3q^2*(s12^3*(3*s13 - s23) + 
                  s12^2*(9*s13^2 + 6*s13*s23 - 3*s23^2) + s12*(7*s13^3 + 
                    19*s13^2*s23 + 6*s13*s23^2 - 2*s23^3) + s13*(s13^3 + 
                    10*s13^2*s23 + 13*s13*s23^2 + 4*s23^3)))))/
            (8*p1q*(p1q + p2q + p3q)*s13*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((-9*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2*(2*s12 + s23) - 
          p1q^2*s23*(4*p2q*p3q*(s12^2 + s12*s13 + s13*s23) + 
            p3q^2*(8*s12^2 + 4*s12*s13 + 5*s12*s23 + s13*s23) + 
            p2q^2*(4*s12^2 + 8*s12*s13 + 3*s12*s23 + 3*s13*s23)) - 
          (p2q + p3q)^3*s23*(p3q*s12*(2*s12 + 2*s13 + s23) + 
            p2q*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23))) + 
          p1q*(p2q + p3q)*(p2q^2*(4*s12*s13^2 + s12*s13*s23 + s13^2*s23 + 
              2*s12*s23^2 + s23^3) + p3q^2*(4*s12^3 + 3*s12^2*s23 + s23^3 + 
              s12*s23*(-s13 + 2*s23)) + p2q*p3q*(4*s12*s23*(-s13 + s23) - 
              s12^2*(8*s13 + s23) + s23*(s13^2 + 2*s23^2))))*E0 . E0conj)/
        (16*p1q*(p2q + p3q)*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) + ((-9*ep*p1q*(p2q + p3q)^2*(s12 + s13 + s23)*
           (p2q*s13*(s12 - s23) - p3q*s12*(s12 + s23) + p1q*s23*(s12 + s23)))/
          (4*(p1q + p2q + p3q)*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23))) + (9*(s12 + s13 + s23)*
           (2*p1q^6*s23^4 + p1q^5*s23^3*(-(p3q*(9*s12 + s13)) + 
              p2q*(3*s12 - 5*s13 + 8*s23)) + (p2q + p3q)^3*
             (p3q*s12 - p2q*s13)^2*(p3q*s23^2 + p2q*(4*s12^2 + s23^2 + 
                4*s12*(s13 + s23))) - p1q^4*s23^2*(p2q^2*(6*s12*s13 - 
                4*s13^2 - 4*s12*s23 + 18*s13*s23 - 9*s23^2) + 
              2*p2q*p3q*(3*s12^2 - 4*s12*s13 - s13^2 + 8*s12*s23 - 5*s23^2) - 
              p3q^2*(12*s12^2 + 2*s12*(s13 - 2*s23) + s23*(2*s13 + s23))) + 
            p1q^2*(p2q + p3q)*s23*(p3q^3*(-4*s12^3 + s23^3 - 4*s12*s23*
                 (s13 + s23) + s12^2*(4*s13 + 3*s23)) + p2q^2*p3q*(-2*s12^3 + 
                2*s13^3 + 3*s13^2*s23 - 4*s13*s23^2 + 3*s23^3 + 
                s12^2*(-14*s13 + 4*s23) - 2*s12*s13*(s13 + 5*s23)) + 
              p2q^3*(8*s12^3 - 2*s13^3 + 11*s13^2*s23 - 4*s13*s23^2 + s23^3 + 
                4*s12*s23*(s13 + 2*s23) + 2*s12^2*(s13 + 8*s23)) + 
              p2q*p3q^2*(-2*s12^3 + 3*s23^3 + s12^2*(8*s13 + 11*s23) + 
                2*s12*(s13^2 + 5*s13*s23 - 2*s23^2))) + p1q*(p2q + p3q)^2*
             (-(p3q^3*s12*s23*(s12^2 - 3*s12*s13 - 2*s12*s23 + 2*s23^2)) + 
              p2q^3*s13*(4*s12^2*(s13 - 3*s23) + s12*(4*s13^2 - 5*s13*s23 - 
                  12*s23^2) - s23*(s13^2 - 2*s13*s23 + 2*s23^2)) + 
              p2q*p3q^2*(4*s12^4 + s12^3*(4*s13 - 5*s23) - 2*s13*s23^3 - 
                s12^2*s23*(7*s13 + 6*s23) - 2*s12*s23*(s13^2 + 4*s13*s23 + 
                  2*s23^2)) - p2q^2*p3q*(4*s12^3*(2*s13 + s23) + 
                s12*s23*(7*s13^2 + 20*s13*s23 + 2*s23^2) + s13*s23*
                 (s13^2 + 2*s13*s23 + 4*s23^2) + s12^2*(8*s13^2 + 
                  22*s13*s23 + 4*s23^2))) - p1q^3*s23*
             (p3q^3*(5*s12^3 + s12^2*(s13 - 8*s23) + 3*s12*s23*(2*s13 + 
                  s23) - s23^2*(s13 + 2*s23)) + p2q^3*(s13^3 + 2*s12^2*s23 - 
                12*s13^2*s23 + 19*s13*s23^2 - 2*s23^3 + s12*(-3*s13^2 + 
                  8*s13*s23 + 3*s23^2)) - p2q*p3q^2*(3*s12^3 + 
                s12^2*(9*s13 + 10*s23) + s12*(2*s13^2 + 8*s13*s23 - 
                  21*s23^2) + s23*(-4*s13^2 - s13*s23 + 6*s23^2)) + 
              p2q^2*p3q*(s13^3 + 21*s13*s23^2 - 6*s23^3 + s12^2*(6*s13 + 
                  8*s23) + s12*(3*s13^2 + 10*s13*s23 + 21*s23^2)))))/
          (8*p1q*(p1q + p2q + p3q)*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))))*p1 . E0conj*p2 . E0 + 
       ((-9*ep*p1q*(p2q + p3q)^2*(s12 + s13 + s23)*(-(p3q*s12*(s12 + s13)) + 
            p2q*s13*(s12 + s13) + p1q*(s12 - s13)*s23))/(4*(p1q + p2q + p3q)*
           s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) + (9*(s12 + s13 + s23)*
           (-(p1q^4*(p2q - p3q)*(p3q*(5*s12 + s13 - 2*s23) + p2q*
                (s12 + 5*s13 - 2*s23))*s23^3) + 2*p1q^5*(p2q - p3q)*s23^4 + 
            2*(p2q + p3q)^4*s12*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) - 
            p1q^3*s23^2*(p2q^3*(s12 + s13)*(3*s12 - 4*s13 + 4*s23) + 
              p3q^3*(2*s12^2 + 3*s12*s13 + s13^2 - 4*s12*s23 + 2*s13*s23 + 
                2*s23^2) + p2q^2*p3q*(-2*s12^2 + 3*s13^2 + 2*s13*s23 + 
                2*s23^2 + s12*(s13 + 8*s23)) + p2q*p3q^2*(-7*s12^2 - 
                3*s12*s13 + 4*(s13^2 + s23^2))) + 2*p1q*(p2q + p3q)^2*
             (p3q^3*s12^2*(s12 - 3*s23)*(s12 + s13 + s23) + p2q^3*s12*s13*(
                s13 - 2*s23)*(s12 + s13 + s23) + p2q*p3q^2*s12*(s12^3 - 
                s13^2*s23 - s12^2*(s13 + 4*s23) - 2*s12*(s13^2 + 4*s13*s23 + 
                  2*s23^2)) - p2q^2*p3q*(s13^2*s23^2 + 2*s12^3*(s13 + s23) + 
                s12^2*(s13^2 + 7*s13*s23 + 2*s23^2) + s12*s13*(-s13^2 + 
                  2*s13*s23 + 4*s23^2))) + p1q^2*(p2q + p3q)*s23*
             (3*p3q^3*s12*(-s12^2 + s13^2 + 2*s13*s23 + 2*s23^2) + 
              p2q^3*(4*s12^3 - s13^2*(s13 - 2*s23) + 3*s12^2*(s13 + 2*s23) + 
                s12*(-2*s13^2 + 4*s13*s23 + 2*s23^2)) + p2q*p3q^2*(-8*s12^3 + 
                s12^2*(-7*s13 + 8*s23) + s13*(s13^2 + 2*s13*s23 + 4*s23^2) + 
                2*s12*(s13^2 + 9*s13*s23 + 5*s23^2)) + p2q^2*p3q*(s12^3 + 
                2*s12^2*(s13 + 5*s23) + 2*s13*(s13^2 + 2*s23^2) + 
                s12*(3*s13^2 + 8*s13*s23 + 6*s23^2)))))/
          (4*p1q*(p1q + p2q + p3q)*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((9*ep*p2q*(p2q + p3q)^2*(s12 + s13 + s23)*
             ((p2q + p3q)*s13*(-(p3q*s12) + p2q*s13)*s23 + p1q*p2q*s13*(
                s12^2 + s12*(s13 - 2*s23) - 2*s23^2) + p1q^2*s23*(s12^2 - 
                s12*s13 + 2*s12*s23 + s23^2) - p1q*p3q*(s12^3 + s13*s23^2 + 
                s12*s23*(4*s13 + s23) + s12^2*(s13 + 2*s23))))/
            (4*(p1q + p2q + p3q)*s23*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))) + (9*p2q*(s12 + s13 + s23)*
             (-2*p1q^4*(p2q - p3q)*s23^3*(s12 + s23) + 2*p2q*(p2q + p3q)^2*(
                -(p3q*s12) + p2q*s13)*(p2q*s12*s13*(s12 + s13 + s23) - 
                p3q*(s12 + s23)*(s12^2 + s12*s13 - s13*s23)) - 
              p1q^3*s23^2*(-(p2q^2*(s12^2 + 5*s12*s13 - 2*s12*s23 + 
                   4*s13*s23 - 3*s23^2)) + 2*p2q*p3q*(-2*s12^2 + 2*s12*s13 - 
                  s12*s23 + 3*s13*s23 + s23^2) + p3q^2*(5*s12^2 + 
                  (2*s13 - s23)*s23 + s12*(s13 + 4*s23))) + p1q*(p2q + p3q)*(
                p3q^3*s12*s23*(2*s12^2 + 3*s13*s23 + 2*s12*(s13 + s23)) + 
                p2q*p3q^2*(2*s12^4 + 2*s12^3*(s13 - 2*s23) - 8*s12*s13*
                   s23^2 + s13*(s13 - 2*s23)*s23^2 - 6*s12^2*s23*(s13 + 
                    s23)) + p2q^3*s13*(2*s12^2*(s13 - 4*s23) - 3*s13*s23^2 + 
                  2*s12*(s13^2 - 3*s13*s23 - 4*s23^2)) - p2q^2*p3q*
                 (4*s12^3*s13 + s12*s23*(4*s13^2 + 3*s13*s23 - 4*s23^2) + 
                  s12^2*(4*s13^2 + 6*s13*s23 - 4*s23^2) + 2*s13*s23*
                   (s13^2 - s13*s23 + s23^2))) + p1q^2*s23*(p3q^3*
                 (3*s12^3 + 3*s12^2*s13 + s12*(4*s13 - 3*s23)*s23 - 
                  s13*s23^2) + p2q^2*p3q*(s12^3 + 3*s13*s23*(2*s13 + s23) + 
                  s12*s23*(8*s13 + 13*s23) + s12^2*(s13 + 14*s23)) + 
                p2q*p3q^2*(-4*s12^3 - 3*s12^2*s13 + 4*s13*(s13 - s23)*s23 + 
                  s12*(s13^2 - 2*s13*s23 + 4*s23^2)) + p2q^3*(4*s12^3 - 
                  s12^2*(s13 - 10*s23) - 2*s13*(s13 - 3*s23)*s23 + 
                  s12*(-5*s13^2 + 6*s13*s23 + 6*s23^2)))))/
            (4*p1q*(p1q + p2q + p3q)*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))))*p1 . E0conj + 
         ((-9*ep*(p2q + p3q)^2*(s12 + s13 + s23)*(-(p3q*s12 - p2q*s13)^2 + 
              p1q^2*s12*s23 + p1q*p3q*s12*(-s12 + s23) + p1q*p2q*s13*(s12 + 
                s23)))/(4*(p1q + p2q + p3q)*s23*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
           (9*(s12 + s13 + s23)*(2*p1q^6*s23^4 + p1q^5*s23^3*(
                -(p3q*(9*s12 + s13 - 4*s23)) + p2q*(3*s12 - 5*s13 + 4*s23)) - 
              p1q^4*s23^2*(p2q^2*(6*s12*s13 - 4*s13^2 - 8*s12*s23 + 
                  10*s13*s23 - 7*s23^2) + p3q^2*(-12*s12^2 - 2*s12*s13 + 
                  20*s12*s23 + 2*s13*s23 - 3*s23^2) + 2*p2q*p3q*(3*s12^2 - 
                  4*s12*s13 - s13^2 + 6*s12*s23 + 6*s13*s23 - s23^2)) - 
              (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(-(p3q^2*s23^2) + 
                2*p2q*p3q*(2*s12^2 + s23^2 + 2*s12*(s13 + s23)) + 
                p2q^2*(4*s12^2 - s23^2 + 4*s12*(s13 + s23))) + 
              p1q^3*s23*(-(p3q^3*(5*s12^3 + s12^2*(s13 - 28*s23) + 
                   (s13 - 2*s23)*s23^2 + s12*s23*(-6*s13 + 13*s23))) + 
                p2q*p3q^2*(3*s12^3 + s12^2*(9*s13 + 10*s23) + 
                  s12*(2*s13^2 + 24*s13*s23 - 11*s23^2) + s23*(4*s13^2 - 
                    7*s13*s23 + 2*s23^2)) + p2q^3*(-s13^3 + 2*s12^2*s23 + 
                  8*s13^2*s23 - 17*s13*s23^2 + 6*s23^3 + s12*(3*s13^2 - 
                    16*s13*s23 + 7*s23^2)) - p2q^2*p3q*(s13^3 - 12*s13^2*
                   s23 + 7*s13*s23^2 - 6*s23^3 + 2*s12^2*(3*s13 + 8*s23) + 
                  s12*(3*s13^2 - 2*s13*s23 + 7*s23^2))) - p1q^2*s23*(
                p3q^4*(12*s12^3 + s12^2*(4*s13 - 17*s23) - s23^3 + 
                  4*s12*s23*(-s13 + s23)) - 2*p2q*p3q^3*(s12^3 - 
                  4*s13*s23^2 + s12^2*(8*s13 + 7*s23) - s12*(s13^2 - 
                    s13*s23 + 4*s23^2)) + p2q^2*p3q^2*(-16*s12^3 + 2*s13^3 - 
                  s13^2*s23 + 12*s13*s23^2 + 2*s23^3 + s12^2*(-10*s13 + 
                    7*s23) + 4*s12*(2*s13^2 + 5*s23^2)) + p2q^4*(8*s12^3 + 
                  2*s13^3 - 13*s13^2*s23 + 12*s13*s23^2 - s23^3 + 
                  2*s12^2*(s13 + 8*s23) + s12*(-12*s13^2 + 12*s13*s23 + 
                    8*s23^2)) + 2*p2q^3*p3q*(3*s12^3 + 2*s12^2*(3*s13 + 
                    7*s23) + s13*(2*s13^2 - 3*s13*s23 + 8*s23^2) + 
                  s12*(-3*s13^2 + 13*s13*s23 + 12*s23^2))) - p1q*(p2q + p3q)*(
                p3q^4*s12*s23*(7*s12^2 + 3*s12*s13 - 2*s12*s23 + 2*s23^2) + 
                2*p2q*p3q^3*(2*s12^4 + s12^3*(2*s13 - 3*s23) + s13*s23^3 - 
                  2*s12^2*s23*(5*s13 + 2*s23) - s12*s23*(s13^2 + s23^2)) + 
                p2q^4*s13*(4*s12^2*(s13 - 3*s23) + s12*(4*s13^2 - 9*s13*s23 - 
                    12*s23^2) + s23*(3*s13^2 - 6*s13*s23 + 2*s23^2)) + 
                p2q^2*p3q^2*(4*s12^4 - s12^3*(4*s13 + 13*s23) - s13*s23*
                   (s13^2 + 6*s13*s23 + 2*s23^2) - s12*s23*(s13^2 + 
                    20*s13*s23 + 2*s23^2) - s12^2*(8*s13^2 + 25*s13*s23 + 
                    18*s23^2)) - 2*p2q^3*p3q*(s13*s23*(s13 + s23)^2 + 
                  2*s12^3*(2*s13 + s23) + s12^2*(2*s13^2 + 13*s13*s23 + 
                    2*s23^2) - s12*(2*s13^3 - 10*s13^2*s23 - 8*s13*s23^2 + 
                    s23^3)))))/(8*p1q*(p1q + p2q + p3q)*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p2 . E0conj))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        Eik[k - p3]] + 
     (((-9*ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23)))/(8*s12*(p3q*s12 - 
            (p1q + p2q)*(s13 + s23))) + (9*(s12 + s13 + s23)*
           (-2*p2q^3*s13*(s12 + s23) + p3q*(2*p3q^2*s12^2 - 3*p1q*p3q*s12*
               s23 + p1q^2*s23^2) - p2q*(p1q*p3q*(s12 + s13 - 2*s23)*s23 - 
              p1q^2*s23^2 + 2*p3q^2*s12*(s13 + s23)) + 
            p2q^2*(p1q*s23*(2*s12 - s13 + 2*s23) + 2*p3q*(s12^2 + s12*s23 - 
                s13*s23))))/(8*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23) + 
         (9*ep*(s12 + s13 + s23)*(p2q*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
             (s12 + s13 + s23) + p1q^5*s23^2*(s12 + s13 + s23) + 
            p1q^4*s23*(p2q*(-2*s13^2 + 2*s13*s23 + 3*s23^2 + 
                s12*(-2*s13 + s23)) + p3q*(-2*s12^2 - 2*s12*(s13 + s23) + 
                s23*(3*s13 + 2*s23))) + p1q*(p2q + p3q)*
             (p3q^3*s12^2*(-s12 + s13) + p2q^3*s13*(3*s13^2 + 
                s12*(s13 - 2*s23) - 2*s23^2) + p2q*p3q^2*s12*(s12^2 + 
                5*s12*s13 - 2*(s13^2 + s13*s23 + s23^2)) - p2q^2*p3q*(
                2*s12^2*(s13 + s23) + s13*(-s13^2 + 2*s13*s23 + 2*s23^2) + 
                s12*(7*s13^2 + 8*s13*s23 + 2*s23^2))) + 
            p1q^2*(p2q^3*(3*s13^3 + s12*(s13 - s23)^2 - 5*s13^2*s23 - 
                4*s13*s23^2 + s23^3) + 2*p3q^3*s12*(-(s13*s23) + 
                s12*(s13 + 2*s23)) + p2q*p3q^2*(s12^3 + 3*s12^2*(s13 + s23) - 
                4*s12*(s13 + s23)^2 + s23*(-2*s13^2 + s13*s23 + s23^2)) - 
              p2q^2*p3q*(-2*s13^3 + 8*s13^2*s23 + 3*s13*s23^2 - 2*s23^3 + 
                2*s12^2*(s13 + s23) + s12*(6*s13^2 + 10*s13*s23 + 
                  3*s23^2))) + p1q^3*(p2q^2*(s13^3 + s12*(s13 - s23)^2 - 
                6*s13^2*s23 - s13*s23^2 + 3*s23^3) + p3q^2*(s12^3 + 
                s13*s23^2 + s12^2*(s13 + s23) - 5*s12*s23*(s13 + s23)) - 
              p2q*p3q*(2*s12^2*(s13 + s23) + s23*(5*s13^2 - 2*s13*s23 - 
                  3*s23^2) + s12*(2*s13^2 + 9*s13*s23 + 6*s23^2)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + 
            (p1q + p2q)*(s13 + s23))))*E0 . E0conj + 
       ((9*(p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) + p1q^3*(p2q + p3q)*
             s23^2*(s12 + s13 + s23)*(p3q*(-4*s12 + s23) + p2q*(-2*s13 + 
                s23)) - 2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*
             (-(p3q^3*s12^2*(s12 + s13 + s23)) + p2q^3*s13*(s12 + s23)*(s12 + 
                s13 + s23) + p2q*p3q^2*s12*(s13 + s23)*(s12 + s13 + s23) - 
              p2q^2*p3q*(s12^3 + s12*s23^2 - s13*s23*(s13 + s23) + 
                s12^2*(s13 + 2*s23))) - p1q^2*s23*(s12 + s13 + s23)*
             (p3q^3*s12*(-5*s12 + 4*s23) - p2q^2*p3q*(2*s12^2 + 4*s12*s13 + 
                s13^2 - 2*s12*s23 - 2*s13*s23) - p2q*p3q^2*(7*s12^2 + 
                2*s12*(s13 - 2*s23) + 2*s23^2) + p2q^3*(4*s12^2 - s13^2 + 
                2*s13*s23 + 2*s23^2 + 2*s12*(s13 + 3*s23))) + 
            p1q*(-(p3q^4*s12^2*(2*s12 - 5*s23)*(s12 + s13 + s23)) - 
              4*p2q*p3q^3*s12*(s12^3 + s12^2*s13 + s23*(s13 + s23)^2) - 
              4*p2q^3*p3q*(s12 + s23)*(s12^3 + s12*s23^2 - s13*s23*
                 (s13 + s23) + s12^2*(s13 + 2*s23)) + p2q^2*p3q^2*(-2*s12^4 - 
                s13^2*s23*(s13 + s23) + s12^3*(2*s13 + s23) + 
                s12^2*(6*s13^2 + 11*s13*s23 + 3*s23^2) + s12*s13*(2*s13^2 + 
                  5*s13*s23 + 4*s23^2)) + p2q^4*s13*(4*s12^3 + 6*s12^2*
                 (s13 + 2*s23) + s23*(s13^2 + 5*s13*s23 + 4*s23^2) + 
                s12*(2*s13^2 + 11*s13*s23 + 12*s23^2)))))/
          (4*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         (9*ep^2*(s12 + s13 + s23)*(p1q^5*s23^4 + (p2q + p3q)*
             (-(p3q*s12) + p2q*s13)^3*(-(p3q*(2*s12 + s23)) + 
              p2q*(2*s13 + s23)) + p1q^4*s23^2*(2*p2q*s12*s13 + 
              p2q*s23*(-3*s13 + 2*s23) - p3q*(2*s12*s13 + 5*s12*s23 + 
                2*s13*s23)) - p1q*(-(p3q*s12) + p2q*s13)*
             (p2q^3*s13*(-2*s13^2 + 4*s13*s23 + s23^2 + 2*s12*(s13 + 
                  2*s23)) + p3q^3*s12*(2*s12^2 - 2*s12*(s13 + 3*s23) - 
                s23*(2*s13 + 3*s23)) + p2q*p3q^2*(2*s12^3 + s13*(2*s13 - s23)*
                 s23 - 2*s12^2*(3*s13 + 4*s23) + 2*s12*(2*s13^2 + s13*s23 - 
                  s23^2)) - p2q^2*p3q*(2*s13*(s13 - s23)^2 + 4*s12^2*
                 (s13 + s23) + s12*(-6*s13^2 - 4*s13*s23 + s23^2))) + 
            p1q^3*s23*(p2q^2*s23*(6*s12*s13 + 5*s13^2 - 4*s13*s23 + s23^2) + 
              p3q^2*(2*s12*(s13 - s23)*s23 - s23^2*(2*s13 + s23) + 
                s12^2*(4*s13 + 9*s23)) + 2*p2q*p3q*(s12^2*s23 + 
                s23*(s13^2 - 4*s13*s23 - s23^2) - s12*(2*s13^2 + s13*s23 + 
                  4*s23^2))) + p1q^2*(p3q^3*s12*(2*s12*s23*(s13 + 3*s23) + 
                s23^2*(4*s13 + 3*s23) - s12^2*(2*s13 + 7*s23)) - 
              p2q^3*s13*(2*s12*(s13^2 + 2*s13*s23 - 2*s23^2) + 
                s23*(5*s13^2 - 4*s13*s23 + s23^2)) + p2q*p3q^2*(4*s12*s23^2*
                 (2*s13 + s23) + s13*s23^2*(4*s13 + s23) - 2*s12^3*
                 (s13 + 2*s23) + s12^2*(4*s13^2 + 13*s13*s23 + 12*s23^2)) + 
              p2q^2*p3q*(-2*s13^2*(s13 - 5*s23)*s23 + 4*s12^2*(s13 + s23)^2 + 
                s12*(-2*s13^3 - s13^2*s23 + 8*s13*s23^2 + s23^3)))))/
          (4*(p1q + p2q + p3q)*s12*s23*(-(p3q^3*s12^3) + (p1q + p2q)*
             (s13 + s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*
             (p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) + 
         (9*ep*(p1q^7*s23^4*(s12 + s13 + s23)^2 - p1q^6*s23^3*
             (s12 + s13 + s23)*(p2q*(3*s12*s13 + 3*s13^2 - 2*s12*s23 - 
                2*s13*s23 - 4*s23^2) + p3q*(3*s12^2 + 3*s12*s13 + 2*s12*s23 - 
                4*s13*s23 - 3*s23^2)) - p2q*(p2q + p3q)*
             (-(p3q*s12) + p2q*s13)^3*(s12 + s13 + s23)*
             (2*p2q*p3q*(2*s12^2 + s12*(-2*s13 + s23) - s23*(s13 + s23)) + 
              p3q^2*(4*s12^2 + 5*s12*s23 + s23*(s13 + s23)) + 
              p2q^2*(s12*(-4*s13 + s23) + s23*(s13 + s23))) + 
            p1q^5*s23^2*(s12 + s13 + s23)*(p3q^2*(3*s12^3 + 3*s12^2*s13 + 
                2*s13*s23^2 - s12*s23*(13*s13 + 12*s23)) + 
              p2q*p3q*(2*s12^2*(s13 - 2*s23) - s13*s23*(11*s13 + 4*s23) + 
                s12*(2*s13^2 - 23*s13*s23 - 17*s23^2)) + p2q^2*(3*s13^3 + 
                4*s12^2*s23 - 11*s13^2*s23 - 5*s13*s23^2 + 4*s23^3 + 
                s12*(3*s13^2 - 10*s13*s23 + 4*s23^2))) - 
            p1q^4*s23*(s12 + s13 + s23)*(p3q^3*(s12^4 + s12^3*(s13 - 2*s23) + 
                3*s12*s23^2*(3*s13 + s23) + s23^3*(s13 + 2*s23) - 
                2*s12^2*s23*(7*s13 + 9*s23)) - p2q*p3q^2*(s12^3*
                 (s13 + 2*s23) + s12*s23*(12*s13^2 - 20*s13*s23 - 15*s23^2) - 
                3*s23^2*(s13^2 + 2*s23^2) + s12^2*(s13^2 + 22*s13*s23 + 
                  23*s23^2)) + p2q^3*(s13^4 - 12*s13^3*s23 - 12*s12^2*s23^2 + 
                6*s13^2*s23^2 + 3*s13*s23^3 - 6*s23^4 + s12*(s13^3 - 
                  20*s13^2*s23 + 4*s13*s23^2 - 16*s23^3)) + p2q^2*p3q*(
                8*s12^3*s23 + s12^2*(-s13^2 + 2*s13*s23 + 10*s23^2) - 
                s12*(s13^3 + 28*s13^2*s23 - 29*s13*s23^2 - 24*s23^3) + 
                2*s23*(-5*s13^3 + 2*s13^2*s23 + s13*s23^2 + 3*s23^3))) + 
            p1q^3*s23*(s12 + s13 + s23)*(p3q^4*s12*(-s12^3 + 3*s12*s23*
                 (4*s13 + 3*s23) + s23^2*(s13 + 6*s23) - s12^2*(5*s13 + 
                  12*s23)) + p2q*p3q^3*(s12^3*(3*s13 - 7*s23) + 
                s23^2*(s13^2 + s13*s23 - 3*s23^2) + s12*s23*(14*s13^2 + 
                  3*s13*s23 + 12*s23^2) + s12^2*(15*s13^2 + 54*s13*s23 + 
                  40*s23^2)) - p2q^4*(4*s13^4 - 11*s13^3*s23 + 8*s13^2*
                 s23^2 + 8*s13*s23^3 - 5*s23^4 + 4*s12^2*(s13^2 + 2*s13*s23 - 
                  2*s23^2) + s12*(16*s13^3 - 16*s13^2*s23 + 16*s13*s23^2 - 
                  13*s23^3)) + p2q^2*p3q^2*(4*s12^4 + 4*s12^3*(2*s13 + 
                  3*s23) + s12^2*(17*s13^2 + 39*s13*s23 + 29*s23^2) - 
                s23*(2*s13^3 + 8*s13^2*s23 + 9*s23^3) - s12*(7*s13^3 - 
                  24*s13^2*s23 + 23*s13*s23^2 + 11*s23^3)) - 
              p2q^3*p3q*(3*s13^4 + 8*s12^3*s23 - 6*s13^3*s23 + 5*s13^2*
                 s23^2 - 3*s13*s23^3 + 5*s23^4 + s12^2*(-8*s13^2 + 
                  4*s13*s23 + 14*s23^2) + s12*(15*s13^3 - 45*s13^2*s23 + 
                  17*s13*s23^2 + 16*s23^3))) + p1q*(-(p3q*s12) + p2q*s13)*
             (-(p3q^5*s12^2*s23*(3*s12^2 + 2*s12*s13 - s13^2 + 5*s12*s23 + 
                 s13*s23 + 2*s23^2)) + p2q*p3q^4*s12*(-4*s12^4 - 
                6*s12^3*s23 + 4*s12^2*(s13^2 + 5*s13*s23 + 2*s23^2) + 
                s23^2*(7*s13^2 + 12*s13*s23 + 5*s23^2) + s12*s23*(18*s13^2 + 
                  35*s13*s23 + 15*s23^2)) + p2q^5*s13*(s12^2*(8*s13^2 - 
                  10*s13*s23 + 7*s23^2) + s23*(-2*s13^3 + 4*s13^2*s23 + 
                  13*s13*s23^2 + 7*s23^3) + s12*(8*s13^3 - 4*s13^2*s23 + 
                  3*s13*s23^2 + 14*s23^3)) + p2q^2*p3q^3*(-4*s12^5 + 
                s12^4*(16*s13 + 13*s23) + 4*s12^3*(3*s13^2 + 20*s13*s23 + 
                  12*s23^2) - s13*s23*(s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 
                  s23^3) + s12*s23*(-20*s13^3 - 18*s13^2*s23 + 8*s13*s23^2 + 
                  7*s23^3) + s12^2*(-8*s13^3 + 16*s13^2*s23 + 76*s13*s23^2 + 
                  38*s23^3)) + p2q^3*p3q^2*(16*s12^4*(s13 + s23) + 
                s12^3*(-12*s13^2 + 52*s13*s23 + 36*s23^2) + s13*s23*
                 (4*s13^3 + 8*s13^2*s23 + s13*s23^2 - 3*s23^3) + 
                s12^2*(-24*s13^3 - 52*s13^2*s23 + 26*s13*s23^2 + 23*s23^3) + 
                s12*(4*s13^4 - 36*s13^3*s23 - 54*s13^2*s23^2 - 14*s13*s23^3 + 
                  3*s23^4)) - p2q^4*p3q*(s12^3*(20*s13^2 + 6*s13*s23 + 
                  3*s23^2) - s13*s23*(3*s13^3 + 10*s13^2*s23 + 8*s13*s23^2 + 
                  s23^3) + s12^2*(8*s13^3 + 61*s13^2*s23 + 19*s13*s23^2 + 
                  6*s23^3) + s12*(-12*s13^4 + 20*s13^3*s23 + 38*s13^2*s23^2 + 
                  12*s13*s23^3 + 3*s23^4))) - p1q^2*(s12 + s13 + s23)*
             (p3q^5*s12^2*s23*(-3*s12^2 + 5*s12*s13 + 9*s12*s23 - s13*s23 + 
                6*s23^2) + p2q*p3q^4*s12*(s12^3*(4*s13 + 7*s23) + 
                s12^2*s23*(26*s13 + 31*s23) + s12*s23*(-13*s13^2 - 
                  18*s13*s23 + s23^2) - s23^2*(6*s13^2 + 7*s13*s23 + 
                  7*s23^2)) + p2q^3*p3q^2*(4*s12^4*s23 - 2*s12^3*(6*s13^2 + 
                  6*s13*s23 + 5*s23^2) + s12^2*(12*s13^3 - 59*s13^2*s23 - 
                  61*s13*s23^2 - 27*s23^3) - s12*s23*(-34*s13^3 + 
                  29*s13^2*s23 + 28*s13*s23^2 + 9*s23^3) - s13*s23*
                 (3*s13^3 + 4*s13^2*s23 + s13*s23^2 + 11*s23^3)) + 
              p2q^2*p3q^3*(s12^3*s13*(-12*s13 + 5*s23) + 2*s12^4*
                 (2*s13 + 5*s23) - s13*s23^2*(s13^2 + 3*s13*s23 + 5*s23^2) - 
                s12^2*s23*(58*s13^2 + 78*s13*s23 + 41*s23^2) - s12*s23*
                 (-11*s13^3 + 19*s13^2*s23 + 24*s13*s23^2 + 17*s23^3)) + 
              p2q^5*s13*(4*s12^2*s23*(s13 + 2*s23) + s23*(4*s13^3 - 
                  9*s13^2*s23 + 3*s13*s23^2 + 11*s23^3) + s12*(-4*s13^3 + 
                  24*s13^2*s23 - 6*s13*s23^2 + 19*s23^3)) - p2q^4*p3q*(
                8*s12^3*s23*(s13 + s23) - s13*s23*(s13^3 - 4*s13^2*s23 + 
                  5*s13*s23^2 - 3*s23^3) + s12^2*(-12*s13^3 + 22*s13^2*s23 + 
                  24*s13*s23^2 + 15*s23^3) + s12*(4*s13^4 - 43*s13^3*s23 + 
                  26*s13^2*s23^2 + 16*s13*s23^3 + 7*s23^4)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*(-(p3q^3*s12^3) + 
            (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((9*p1q*(s12 + s13 + s23)*(2*p2q^4*s13*(s12 + s13)*(s12 + s23) - 
            p3q*(p3q*(s12 + s13) - p1q*s23)*(2*p3q^2*s12^2 - 
              3*p1q*p3q*s12*s23 + p1q^2*s23^2) + 
            p2q*(-2*p3q^3*s12*(s12 + s13)*(s12 - s13 - s23) + p1q^3*s23^3 + 
              p1q^2*p3q*s23^2*(-3*s12 - 3*s13 + 2*s23) + p1q*p3q^2*s23*(
                4*s12^2 + 3*s12*s13 + s13^2 - 4*s12*s23 - 2*s13*s23)) + 
            p2q^3*(p1q*s23*(-2*s12^2 - 3*s12*s13 + s13^2 - 2*s12*s23 - 
                4*s13*s23) - 2*p3q*(s12 + s13)*(s12^2 - s12*s13 + s12*s23 - 
                2*s13*s23)) + p2q^2*(p1q*p3q*(s12^2 + 2*s13*(s13 - 3*s23) + 
                s12*(s13 - 2*s23))*s23 + p1q^2*s23^2*(s12 - 2*s13 + 2*s23) - 
              2*p3q^2*(s12 + s13)*(s12^2 - s12*s13 - s13*s23))))/
          (2*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         (9*ep^2*p1q*(s12 + s13 + s23)*(-(p2q^4*s13^2*(s13*(s13 + s23) + s12*
                (s13 + 2*s23))) + p3q*(p3q*s12 - p1q*s23)*
             (p3q^2*s12^2*(s12 + s13 - s23) + p1q^2*(s12 - s13 - s23)*s23*(
                s13 + s23) - p1q*p3q*s12*(s12*s13 + s13^2 + 2*s12*s23 - 
                s13*s23 - 2*s23^2)) - p2q^3*s13*(p3q*s12*s13*(-2*s13 + s23) + 
              p3q*s13^2*(s13 + s23) - p3q*s12^2*(3*s13 + 4*s23) + 
              p1q*s13*(s13^2 - s13*s23 - 2*s23^2) + p1q*s12*(s13^2 + 
                2*s13*s23 - 2*s23^2)) + p2q^2*(p1q^2*s13*s23*(2*s13^2 + 
                s13*s23 + (3*s12 - s23)*s23) + p1q*p3q*(-s13^4 + 
                s12*s13^2*(s13 - 5*s23) + s13^2*s23^2 + 2*s12^2*(s13 + s23)^
                  2) + p3q^2*s12*(5*s12*s13*s23 + s13^2*(3*s13 + s23) - 
                s12^2*(3*s13 + 2*s23))) + p2q*(-(p1q^3*s13*s23^2*
                (-s12 + s13 + s23)) + p3q^3*s12^2*(s12^2 + s13*(-3*s13 + 
                  s23) - s12*(2*s13 + 3*s23)) - p1q^2*p3q*s23*(-(s12^2*s23) + 
                s13*s23*(s13 + s23) + s12*(4*s13^2 + 4*s13*s23 + 3*s23^2)) + 
              p1q*p3q^2*s12*(2*s13^3 - s12^2*(s13 + 2*s23) + 
                s12*(s13^2 + 7*s13*s23 + 6*s23^2)))))/(2*(p1q + p2q + p3q)*
           s12*s23*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))) + (9*ep*(2*(p2q + p3q)^3*s12*(p3q*s12 - p2q*s13)^4*
             (s12 + s13 + s23) + p1q^6*s23^4*(s12 + s13 + s23)*
             (3*p3q*(s13 + s23) + p2q*(-2*s12 + s13 + s23)) + 
            p1q^5*s23^3*(s12 + s13 + s23)*(p2q^2*(2*s12^2 + 2*s12*s13 - 
                3*s13^2 - 5*s12*s23 - 4*s13*s23 - s23^2) - p3q^2*(5*s12*s13 + 
                2*s13^2 + 8*s12*s23 + s13*s23 - s23^2) + p2q*p3q*(6*s12^2 - 
                3*s12*s13 - 9*s13^2 - 5*s12*s23 - 5*s13*s23 + 4*s23^2)) + 
            p1q^4*s23^2*(s12 + s13 + s23)*(p3q^3*s12*(-(s12*s13) + s13^2 + 
                4*s12*s23 + s13*s23 - 3*s23^2) + p2q*p3q^2*(-6*s12^3 + 
                5*s13^3 + 3*s13^2*s23 + 2*s23^3 + s12^2*(-4*s13 + 3*s23) + 
                s12*(5*s13^2 + 3*s13*s23 - 8*s23^2)) + p2q^2*p3q*(-4*s12^3 + 
                10*s13^3 + s13^2*s23 - 7*s13*s23^2 + 2*s23^3 + 
                s12^2*(-5*s13 + 7*s23) + s12*(7*s13^2 + 3*s13*s23 - 
                  2*s23^2)) + p2q^3*(6*s12^2*s23 + (3*s13 - 2*s23)*
                 (s13 + s23)^2 + s12*(5*s13^2 + 13*s13*s23 + s23^2))) + 
            2*p1q*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
             (p3q^3*s12^2*(s12 - s13 - 3*s23) + 2*p2q^3*s12*s13*(s13 - s23) + 
              p2q*p3q^2*s12*(s12^2 - 4*s12*s13 + s13^2 - 6*s12*s23 - 
                2*s13*s23 - s23^2) - p2q^2*p3q*(s13*s23*(s13 + s23) + 
                s12^2*(3*s13 + 4*s23) + s12*(-3*s13^2 + 6*s13*s23 + 
                  2*s23^2))) - p1q^3*s23*(s12 + s13 + s23)*
             (-(p3q^4*s12^2*(5*s12*s13 + s13^2 + 6*s12*s23 - s13*s23 + 
                 s23^2)) + p2q*p3q^3*s12*(-2*s12^3 - 2*s13^3 + 2*s13^2*s23 + 
                7*s13*s23^2 + 6*s23^3 - s12^2*(10*s13 + 9*s23) + 
                s12*(-2*s13^2 + s13*s23 + 2*s23^2)) + p2q^4*(2*s12^2*
                 (s13^2 + 2*s13*s23 - 2*s23^2) + s12*(7*s13^3 + s13^2*s23 - 
                  7*s13*s23^2 - 4*s23^3) + s13*(s13^3 - 5*s13*s23^2 - 
                  4*s23^3)) + p2q^3*p3q*(4*s12^3*s23 + 5*s12^2*s23*
                 (2*s13 + s23) + s13*(4*s13^3 - 7*s13^2*s23 - 9*s13*s23^2 + 
                  2*s23^3) + s12*(12*s13^3 - s13^2*s23 + 11*s13*s23^2 + 
                  4*s23^3)) + p2q^2*p3q^2*(-2*s12^4 - s12^3*(5*s13 + 3*s23) + 
                s12^2*(-3*s13^2 + 2*s13*s23 + 4*s23^2) + s13*(3*s13^3 - 
                  3*s13^2*s23 - 4*s13*s23^2 + 2*s23^3) + s12*(3*s13^3 + 
                  4*s13^2*s23 + 17*s13*s23^2 + 10*s23^3))) + 
            p1q^2*(-(p3q^5*s12^3*(s12^2*(2*s13 + 7*s23) + 2*s12*(s13^2 + 
                   3*s13*s23 + s23^2) - s23*(3*s13^2 + 8*s13*s23 + 
                   5*s23^2))) + p2q*p3q^4*s12^2*(-4*s12^3*(s13 + 3*s23) + 
                s12^2*(2*s13^2 + s13*s23 + 6*s23^2) + s23*(-3*s13^3 + 
                  4*s13^2*s23 + 13*s13*s23^2 + 6*s23^3) + s12*(6*s13^3 + 
                  20*s13^2*s23 + 42*s13*s23^2 + 24*s23^3)) + 
              p2q^4*p3q*(4*s12^4*s23*(s13 + s23) - 2*s13^2*(3*s13 - s23)*s23*
                 (s13 + s23)^2 + s12*s13^2*(4*s13^3 - 27*s13^2*s23 - 
                  26*s13*s23^2 + 5*s23^3) + s12^3*(-6*s13^3 + 11*s13^2*s23 + 
                  20*s13*s23^2 + 8*s23^3) - 2*s12^2*(s13^4 + 12*s13^3*s23 - 
                  11*s13^2*s23^2 - 8*s13*s23^3 - 2*s23^4)) - 
              p2q^5*s13*(2*s12^3*s23*(s13 + 2*s23) + s13*s23*(s13 + s23)^2*
                 (s13 + 2*s23) + s12^2*(-2*s13^3 + 13*s13^2*s23 + 
                  12*s13*s23^2 + 8*s23^3) + s12*(-2*s13^4 + 10*s13^3*s23 + 
                  20*s13^2*s23^2 + 12*s13*s23^3 + 4*s23^4)) + 
              p2q^3*p3q^2*(-2*s12^5*s23 - s13^2*(5*s13 - 2*s23)*s23*
                 (s13 + s23)^2 + s12^4*(6*s13^2 + 9*s13*s23 + 8*s23^2) + 
                2*s12*s13^2*(s13^3 - 6*s13^2*s23 - s13*s23^2 + 6*s23^3) + 
                s12^3*(-6*s13^3 + 34*s13^2*s23 + 48*s13*s23^2 + 20*s23^3) + 
                s12^2*(-10*s13^4 - 4*s13^3*s23 + 54*s13^2*s23^2 + 
                  37*s13*s23^3 + 10*s23^4)) + p2q^2*p3q^3*s12*(
                -(s12^4*(2*s13 + 7*s23)) + 2*s12^3*(5*s13^2 + 6*s13*s23 + 
                  7*s23^2) + s13^2*s23*(5*s13^2 + 12*s13*s23 + 7*s23^2) + 
                s12^2*(6*s13^3 + 38*s13^2*s23 + 66*s13*s23^2 + 35*s23^3) + 
                s12*(-6*s13^4 + 4*s13^3*s23 + 36*s13^2*s23^2 + 38*s13*s23^3 + 
                  14*s23^4)))))/(2*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
           s23^2*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((-9*p2q*(s12 + s13 + s23)*(p1q^3*(p2q + p3q)*s23^2*(s12 + 
                s23) + p1q^2*(p2q + p3q)*s23*(p3q*(-3*s12^2 - 2*s12*s23 + 
                  s23^2) + p2q*(2*s12^2 - s12*s13 + 4*s12*s23 - 2*s13*s23 + 
                  2*s23^2)) + 2*(p3q^4*s12^2*(s12 + s23) + p2q^4*s13^2*
                 (s12 + s23) - p2q^3*p3q*s13*(2*s12^2 + 3*s12*s23 + 
                  s23*(-s13 + s23)) - p2q*p3q^3*s12*(s23*(s13 + s23) + 
                  s12*(2*s13 + s23)) + p2q^2*p3q^2*(s12^3 + 2*s12^2*s23 - 
                  s13*s23^2 + s12*(s13^2 + s23^2))) - p1q*(p3q^3*s12*
                 (-2*s12^2 + s12*s23 + 3*s23^2) + p2q*p3q^2*(s12*s23^2 + 
                  (s13 - 2*s23)*s23^2 + s12^2*(2*s13 + 3*s23)) + 
                p2q^3*s13*(2*s12^2 + 6*s12*s23 + s23*(-s13 + 4*s23)) - 
                p2q^2*p3q*(2*s12^3 + 6*s12^2*s23 - 2*s12*(s13 - 3*s23)*s23 + 
                  s23*(s13^2 - 5*s13*s23 + 2*s23^2)))))/(2*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
              2*p3q*s12*(p2q*s13 + p1q*s23))) + (9*ep^2*p2q*(s12 + s13 + s23)*
             (p1q^4*s12*s13*s23^2 + p1q^3*s23^2*(p2q*s13*(3*s12 + s13 + 
                  s23) + p3q*s12*(s12 + 3*s13 + s23)) + (p3q*s12 - p2q*s13)^
                2*(p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
                p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) + 
              p1q*(p3q*s12 - p2q*s13)^2*(p3q*(s12^2 - s12*(s13 + s23) - 
                  2*s23*(s13 + s23)) - p2q*(-s13^2 + s13*s23 + 2*s23^2 + 
                  s12*(s13 + 2*s23))) + p1q^2*(-(p3q^2*s12*
                  (s12*s23*(2*s13 + s23) - s23^2*(2*s13 + s23) + 
                   s12^2*(s13 + 2*s23))) - p2q^2*s13*(s12*(s13^2 + 
                    2*s13*s23 - 2*s23^2) + s23*(2*s13^2 + s13*s23 - s23^2)) + 
                p2q*p3q*(2*s12^2*(s13 + s23)^2 + s23^2*(2*s13^2 + 3*s13*s23 + 
                    s23^2) + s12*s23*(4*s13^2 + 10*s13*s23 + 3*s23^2)))))/
            (2*(p1q + p2q + p3q)*s12*s23*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (9*ep*p2q*(s12 + s13 + s23)*
             (-(p1q^5*s23^3*(-2*p2q*s12^2 + p2q*s12*(2*s13 - s23) + 
                 p2q*s23*(s13 + s23) + 3*p3q*s23*(s13 + s23) + p3q*s12*
                  (4*s13 + 3*s23))) + 2*p2q*(p3q*s12 - p2q*s13)^2*(
                p2q^3*s12*s13^2 + p3q^3*s12*(s12 + s23)^2 + p2q^2*p3q*s13*
                 (s12 + s23)*(-2*s12 + s13 + s23) + p2q*p3q^2*(s12 + s23)*
                 (s12^2 - 2*s12*s13 - s23*(s13 + s23))) + p1q^4*s23^2*(
                p3q^2*(-3*s23^2*(s13 + s23) + s12*s23*(-s13 + 4*s23) + 
                  s12^2*(5*s13 + 7*s23)) + p2q*p3q*(-4*s12^3 + s12^2*
                   (3*s13 + s23) + s23*(9*s13^2 + 5*s13*s23 - 4*s23^2) + 
                  s12*(9*s13^2 + s23^2)) + p2q^2*(6*s12^2*s23 + 
                  s23*(3*s13^2 + 4*s13*s23 + s23^2) + s12*(7*s13^2 + 
                    s13*s23 + 7*s23^2))) + p1q*(p3q^5*s12^3*s23*(s12 + s23) + 
                p2q*p3q^4*s12^2*(2*s12^3 - 3*s23^2*(3*s13 + s23) - 
                  2*s12*s23*(6*s13 + s23) + s12^2*(-2*s13 + 3*s23)) + 
                p2q^5*s13^2*(2*s12*(2*s13^2 - 2*s13*s23 + s23^2) + 
                  s23*(s13^2 + 3*s13*s23 + 2*s23^2)) - p2q^2*p3q^3*s12*
                 (-5*s13*s23^2*(3*s13 + 2*s23) + 2*s12^3*(5*s13 + 4*s23) + 
                  s12*s23*(-26*s13^2 + 6*s13*s23 + 11*s23^2) + s12^2*
                   (-6*s13^2 + 26*s13*s23 + 19*s23^2)) + p2q^3*p3q^2*
                 (-7*s13^2*s23^2*(s13 + s23) + 2*s12^3*(3*s13 + s23)^2 + 
                  2*s12*s23*(-10*s13^3 + 5*s13^2*s23 + 11*s13*s23^2 + 
                    2*s23^3) + s12^2*(-6*s13^3 + 44*s13^2*s23 + 33*s13*
                     s23^2 + 6*s23^3)) - p2q^4*p3q*s13*(2*s12^2*(7*s13^2 + 
                    2*s23^2) + s23*(-5*s13^3 + 2*s13^2*s23 + 11*s13*s23^2 + 
                    4*s23^3) + s12*(-2*s13^3 + 22*s13^2*s23 + 17*s13*s23^2 + 
                    8*s23^3))) + p1q^3*s23*(p3q^3*s12*(s12*s23*(5*s13 + 
                    2*s23) - s12^2*(s13 + 5*s23) + s23^2*(3*s13 + 7*s23)) + 
                p2q*p3q^2*(2*s12^4 + s12^3*(s13 - 3*s23) + s23^2*(7*s13^2 + 
                    5*s13*s23 - 2*s23^2) + s12^2*(6*s13^2 + 13*s13*s23 + 
                    5*s23^2) + s12*s23*(12*s13^2 + 3*s13*s23 + 8*s23^2)) + 
                p2q^3*(-((3*s13 - 2*s23)*s23*(s13 + s23)^2) - 2*s12^2*
                   (s13^2 + 2*s13*s23 - 2*s23^2) + s12*(-7*s13^3 + 5*s13^2*
                     s23 - 5*s13*s23^2 + 6*s23^3)) + p2q^2*p3q*
                 (-4*s12^3*s23 + s12^2*(6*s13^2 + 14*s13*s23 + 7*s23^2) + 
                  s23*(-9*s13^3 + 5*s13^2*s23 + 16*s13*s23^2 + 2*s23^3) + 
                  s12*(-5*s13^3 + 27*s13^2*s23 + 21*s13*s23^2 + 13*s23^3))) + 
              p1q^2*(p3q^4*s12^2*s23*(s12^2 - 5*s23^2 - s12*(s13 + 4*s23)) - 
                p2q*p3q^3*s12*(-4*s13^2*s23^2 - 3*s23^4 + s12^3*(2*s13 + 
                    s23) + 2*s12^2*s23*(7*s13 + 5*s23) + s12*s23*(-5*s13^2 + 
                    4*s13*s23 + 6*s23^2)) - p2q^4*s13*(-(s13^3*s23) + 
                  5*s13*s23^3 + 4*s23^4 + 2*s12^2*s23*(s13 + 2*s23) + 
                  s12*(-2*s13^3 + 11*s13^2*s23 + 8*s23^3)) + p2q^2*p3q^2*
                 (-2*s12^4*s23 + s12^3*(6*s13^2 - s13*s23 - 8*s23^2) + 
                  s12^2*s23*(34*s13^2 + 28*s13*s23 + 3*s23^2) + 
                  s23^2*(-4*s13^3 + 5*s13^2*s23 + 11*s13*s23^2 + 2*s23^3) + 
                  s12*s23*(-7*s13^3 + 36*s13^2*s23 + 34*s13*s23^2 + 
                    11*s23^3)) + p2q^3*p3q*(4*s12^3*s23*(s13 + s23) + 
                  2*s12*s23*(-11*s13^3 + 7*s13^2*s23 + 13*s13*s23^2 + 
                    8*s23^3) + s12^2*(-6*s13^3 + 13*s13^2*s23 + 24*s13*
                     s23^2 + 16*s23^3) + s23*(3*s13^4 - 12*s13^3*s23 - 
                    12*s13^2*s23^2 + 7*s13*s23^3 + 4*s23^4)))))/
            (2*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*(-(p3q^3*s12^3) + 
              (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
              p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*
          p1 . E0conj + ((9*(p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) + 
              p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*(p3q*(-4*s12 + s23) + 
                p2q*(-2*s13 + s23)) - 2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(
                -(p3q^3*s12^2*(s12 + s13 + s23)) + p2q^3*s13*(s12 + s23)*
                 (s12 + s13 + s23) + p2q*p3q^2*s12*(s13 + s23)*(s12 + s13 + 
                  s23) - p2q^2*p3q*(s12^3 + s12*s23^2 - s13*s23*(s13 + s23) + 
                  s12^2*(s13 + 2*s23))) - p1q^2*s23*(s12 + s13 + s23)*(
                p3q^3*s12*(-5*s12 + 4*s23) - p2q^2*p3q*(2*s12^2 + 4*s12*s13 + 
                  s13^2 - 2*s12*s23 - 2*s13*s23) - p2q*p3q^2*(7*s12^2 + 
                  2*s12*(s13 - 2*s23) + 2*s23^2) + p2q^3*(4*s12^2 - s13^2 + 
                  2*s13*s23 + 2*s23^2 + 2*s12*(s13 + 3*s23))) + 
              p1q*(-(p3q^4*s12^2*(2*s12 - 5*s23)*(s12 + s13 + s23)) - 
                4*p2q*p3q^3*s12*(s12^3 + s12^2*s13 + s23*(s13 + s23)^2) - 
                4*p2q^3*p3q*(s12 + s23)*(s12^3 + s12*s23^2 - s13*s23*
                   (s13 + s23) + s12^2*(s13 + 2*s23)) + p2q^2*p3q^2*
                 (-2*s12^4 - s13^2*s23*(s13 + s23) + s12^3*(2*s13 + s23) + 
                  s12^2*(6*s13^2 + 11*s13*s23 + 3*s23^2) + s12*s13*
                   (2*s13^2 + 5*s13*s23 + 4*s23^2)) + p2q^4*s13*(4*s12^3 + 
                  6*s12^2*(s13 + 2*s23) + s23*(s13^2 + 5*s13*s23 + 4*s23^2) + 
                  s12*(2*s13^2 + 11*s13*s23 + 12*s23^2)))))/
            (4*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
           (9*ep^2*(s12 + s13 + s23)*(-((p2q + p3q)^2*(-(p3q*s12) + p2q*s13)^
                 3*s23) + p1q^5*s23^4 - p1q^4*s23^2*(p3q*(3*s12 + 2*s13)*
                 s23 + p2q*(2*s12*s13 - 2*s13^2 + s13*s23 - 2*s23^2)) + 
              p1q^3*s23*(-(p3q^2*s23*(-3*s12^2 - 4*s12*s13 + s23*(2*s13 + 
                     s23))) + p2q^2*(-4*s13^3 + s13^2*s23 + s23^3 - 
                  2*s13*s23*(3*s12 + 2*s23)) + 2*p2q*p3q*(-(s12^2*s23) + 
                  2*s12*(s13^2 - s23^2) + s23*(4*s13^2 + s13*s23 + s23^2))) + 
              p1q*(-(p3q*s12) + p2q*s13)*(p3q^3*s12*s23*(2*s13 + 3*s23) + 
                p2q*p3q^2*(2*s12^3 + 2*s12^2*s13 + s13*s23*(-2*s13 + s23) + 
                  2*s12*s23*(3*s13 + s23)) + p2q^3*s13*(2*s13^2 + 3*s23^2 + 
                  2*s12*(s13 + 2*s23)) - p2q^2*p3q*(2*s13*(3*s13 - s23)*s23 + 
                  4*s12^2*(s13 + s23) + s12*(4*s13^2 + 3*s23^2))) + 
              p1q^2*(-(p3q^3*s12*s23*(s12^2 + 2*s12*s13 - s23*(4*s13 + 
                     3*s23))) + p2q^3*s13*(2*s13^3 - 3*s13^2*s23 + 
                  2*s13*s23^2 - 3*s23^3 + 2*s12*(s13^2 + 2*s13*s23 - 
                    2*s23^2)) + p2q*p3q^2*(s13*s23^2*(4*s13 + s23) + 
                  2*s12^3*(s13 + 2*s23) - 2*s12*s23*(-4*s13^2 - 2*s13*s23 + 
                    s23^2) + s12^2*(2*s13^2 + 3*s13*s23 + 2*s23^2)) - 
                p2q^2*p3q*(4*s12^2*(s13 + s23)^2 + 2*s13*s23*(3*s13^2 - 
                    2*s13*s23 + s23^2) + s12*(4*s13^3 - s13^2*s23 + 
                    12*s13*s23^2 + 5*s23^3)))))/(4*(p1q + p2q + p3q)*s12*s23*
             (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
           (9*ep*(p1q^7*s23^4*(s12 + s13 + s23)^2 - p1q^6*s23^3*(s12 + s13 + 
                s23)*(p2q*(3*s13^2 + 3*s12*(s13 - 2*s23) - 2*s23^2) + 
                p3q*(3*s12^2 + 3*s12*s13 + 2*s12*s23 + 2*s13*s23 + 
                  3*s23^2)) + p2q*(p2q + p3q)^2*(-(p3q*s12) + p2q*s13)^3*(
                s12 + s13 + s23)*(p3q*(4*s12^2 + 3*s12*s23 - 
                  s23*(s13 + s23)) - p2q*(s23*(s13 + s23) + s12*(4*s13 + 
                    s23))) + p1q^5*s23^2*(s12 + s13 + s23)*(p3q^2*
                 (3*s12^3 + 3*s12^2*s13 - 2*s23^2*(2*s13 + 3*s23) + 
                  s12*s23*(s13 + 8*s23)) + p2q*p3q*(2*s12^2*(s13 - 8*s23) + 
                  s23*(7*s13^2 + 12*s13*s23 - 2*s23^2) + s12*(2*s13^2 - 
                    s13*s23 + 7*s23^2)) + p2q^2*(3*s13^3 - 4*s12^2*s23 - 
                  5*s13^2*s23 + 5*s13*s23^2 + 8*s23^3 + s12*(3*s13^2 - 
                    10*s13*s23 + 12*s23^2))) - p1q^4*s23*(s12 + s13 + s23)*(
                -(p2q*p3q^2*(s12*s23^2*(-8*s13 + 11*s23) + s12^3*(s13 + 
                     14*s23) + s12^2*(s13^2 + 4*s13*s23 - 21*s23^2) + 
                   s23^2*(7*s13^2 + 8*s13*s23 - 8*s23^2))) + 
                p3q^3*(s12^4 + s12^3*(s13 - 2*s23) + s23^3*(s13 + 2*s23) - 
                  s12*s23^2*(5*s13 + 17*s23) + s12^2*(-4*s13*s23 + 
                    6*s23^2)) + p2q^3*(s13^4 - 6*s13^3*s23 + 12*s12^2*s23^2 + 
                  20*s13^2*s23^2 + 9*s13*s23^3 - 8*s23^4 + s12*s13*
                   (s13^2 + 4*s13*s23 + 32*s23^2)) - p2q^2*p3q*(8*s12^3*s23 + 
                  s12^2*(s13^2 + 2*s13*s23 - 26*s23^2) + s12*(s13^3 - 
                    12*s13^2*s23 - 19*s13*s23^2 + 2*s23^3) + 2*s23*
                   (-4*s13^3 - 6*s13^2*s23 + 10*s13*s23^2 + 3*s23^3))) - 
              p1q^3*s23*(s12 + s13 + s23)*(p3q^4*s12*(s12^3 + 3*s12^2*s13 - 
                  s23^2*(s13 + 6*s23) + s12*s23*(-2*s13 + 15*s23)) + 
                p2q*p3q^3*(4*s12^4 + s12^3*(7*s13 - 9*s23) + s23^2*
                   (-s13^2 - s13*s23 + 3*s23^2) - 3*s12*s23*(2*s13^2 + 
                    s13*s23 + 6*s23^2) + s12^2*(-s13^2 + 6*s13*s23 + 
                    18*s23^2)) - p2q^4*(-2*s13^4 + 17*s13^3*s23 - 
                  10*s13^2*s23^2 - 18*s13*s23^3 + s23^4 + 4*s12^2*(s13^2 + 
                    2*s13*s23 - 2*s23^2) + s12*(12*s13^3 + 8*s13^2*s23 - 
                    20*s13*s23^2 - 7*s23^3)) + p2q^2*p3q^2*(4*s12^4 + 
                  4*s12^3*(s13 - 3*s23) + s23^2*(-8*s13^2 - 22*s13*s23 + 
                    s23^2) + 3*s12^2*(3*s13^2 + 5*s13*s23 + 7*s23^2) + 
                  s12*(s13^3 + 4*s13^2*s23 - s13*s23^2 - s23^3)) + 
                p2q^3*p3q*(-3*s13^4 - 8*s12^3*s23 - 2*s13^3*s23 + 
                  27*s13^2*s23^2 - 3*s13*s23^3 - 7*s23^4 + 2*s12^2*
                   (2*s13^2 + 6*s13*s23 + 9*s23^2) + s12*(-19*s13^3 + 
                    35*s13^2*s23 + 37*s13*s23^2 + 10*s23^3))) + 
              p1q*(p3q*s12 - p2q*s13)*(p3q^5*s12^2*s23*(s12^2 - s13^2 + 
                  3*s12*s23 + s13*s23 + 2*s23^2) + p2q*p3q^4*s12*(-4*s12^4 + 
                  2*s12^3*s23 + s12*s23*(4*s13^2 + 5*s13*s23 + 3*s23^2) - 
                  s23^2*(7*s13^2 + 12*s13*s23 + 5*s23^2) + 2*s12^2*
                   (2*s13^2 + 7*s13*s23 + 7*s23^2)) + p2q^5*s13*
                 (s12^2*(8*s13^2 - 6*s13*s23 - 3*s23^2) + s12*(8*s13^3 + 
                    6*s13^2*s23 - 9*s13*s23^2 - 6*s23^3) + s23*(4*s13^3 + 
                    4*s13^2*s23 - 3*s13*s23^2 - 3*s23^3)) + p2q^2*p3q^3*
                 (-4*s12^5 + s12^4*(16*s13 + 13*s23) + 2*s12^3*(6*s13^2 + 
                    29*s13*s23 + 17*s23^2) + s13*s23*(s13^3 + 2*s13^2*s23 + 
                    2*s13*s23^2 + s23^3) - s12*s23*(10*s13^3 + 24*s13^2*s23 + 
                    20*s13*s23^2 + 7*s23^3) + s12^2*(-8*s13^3 + 2*s13^2*s23 + 
                    24*s13*s23^2 + 10*s23^3)) + p2q^3*p3q^2*
                 (16*s12^4*(s13 + s23) + s12^3*(-12*s13^2 + 50*s13*s23 + 
                    34*s23^2) + 3*s13*s23*(2*s13^3 + 4*s13^2*s23 + 
                    3*s13*s23^2 + s23^3) + s12^2*(-24*s13^3 - 42*s13^2*s23 + 
                    30*s13*s23^2 + 19*s23^3) + s12*(4*s13^4 - 22*s13^3*s23 - 
                    32*s13^2*s23^2 - 2*s13*s23^3 + s23^4)) - p2q^4*p3q*
                 (s12^3*(20*s13^2 + 10*s13*s23 + s23^2) + s12^2*(8*s13^3 + 
                    69*s13^2*s23 + 29*s13*s23^2 + 2*s23^3) + s13*s23*
                   (-5*s13^3 - 2*s13^2*s23 + 8*s13*s23^2 + 5*s23^3) + 
                  s12*(-12*s13^4 + 22*s13^3*s23 + 60*s13^2*s23^2 + 
                    24*s13*s23^3 + s23^4))) + p1q^2*(s12 + s13 + s23)*(
                p3q^5*s12^2*s23*(s12^2 - 3*s12*(s13 - s23) + (s13 - 6*s23)*
                   s23) + p2q*p3q^4*s12*(s12^2*s23*(-2*s13 + 7*s23) + 
                  s12^3*(4*s13 + 7*s23) + s12*s23*(3*s13^2 - 14*s13*s23 - 
                    15*s23^2) + s23^2*(6*s13^2 + 7*s13*s23 + 7*s23^2)) + 
                p2q^2*p3q^3*(s12^4*(4*s13 + 6*s23) + s12^3*(-12*s13^2 - 
                    3*s13*s23 + 2*s23^2) + s13*s23^2*(s13^2 + 3*s13*s23 + 
                    5*s23^2) - s12^2*s23*(14*s13^2 + 36*s13*s23 + 19*s23^2) + 
                  s12*s23*(3*s13^3 + 15*s13^2*s23 + 12*s13*s23^2 + 
                    5*s23^3)) + p2q^5*s13*(4*s12^2*s23*(s13 + 2*s23) + 
                  s23*(-4*s13^3 + 15*s13^2*s23 + 11*s13*s23^2 - 3*s23^3) + 
                  s12*(-4*s13^3 + 20*s13^2*s23 + 18*s13*s23^2 + 5*s23^3)) + 
                p2q^3*p3q^2*(4*s12^4*s23 - 2*s12^3*(6*s13^2 + 4*s13*s23 - 
                    3*s23^2) + s12^2*(12*s13^3 - 51*s13^2*s23 - 49*s13*
                     s23^2 - 15*s23^3) - s13*s23*(3*s13^3 + 4*s13^2*s23 + 
                    5*s13*s23^2 - 7*s23^3) - s12*s23*(-14*s13^3 + 33*s13^2*
                     s23 + 20*s13*s23^2 + 11*s23^3)) - p2q^4*p3q*
                 (8*s12^3*s23*(s13 + s23) - s13*s23*(s13^3 + 14*s13^2*s23 - 
                    9*s13*s23^2 - 9*s23^3) + s12^2*(-12*s13^3 + 18*s13^2*
                     s23 + 48*s13*s23^2 + 25*s23^3) + s12*(4*s13^4 - 
                    51*s13^3*s23 + 32*s13^2*s23^2 + 52*s13*s23^3 + 
                    17*s23^4)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*
             s23^2*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - 
                 p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + 
     ((-1/8*((s12 + s13 + s23)*(2*(p3q^2*s12^2 + p2q^2*s13^2) + 
             p1q*(p3q*s12 + p2q*s13)*(s12 + s13 - 2*s23) - p1q^2*(s12 + s13)*
              s23))/((p1q + p2q + p3q)*s12*s13) - 
         (ep^2*(s12 + s13)*(s12 + s13 + s23)*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23)))/
          (8*s12*s13*(p3q*s12 - (p1q + p2q)*(s13 + s23))) + 
         (ep*(s12 + s13 + s23)*((p2q + p3q)*(s12 - s13)*(p3q*s12 - p2q*s13)^
              2 + p1q^3*s23*(s13^2 + s12*(s13 + 2*s23)) - 
            p1q^2*(p2q*s13^2*(s13 - 2*s23) + p3q*s13*s23^2 + p3q*s12^2*(s13 + 
                4*s23) + p2q*s12*(s13^2 + 2*s13*s23 - 2*s23^2) + 
              p3q*s12*(s13^2 - s23^2)) + p1q*(p2q^2*s13*(-2*s13^2 - 
                3*s12*s23 + s13*s23) + 2*p3q^2*s12*(s12^2 - s12*s23 + 
                s13*s23) - p2q*p3q*(-2*s13^2*s23 + s12*s13*(-2*s13 + s23) + 
                s12^2*(2*s13 + 3*s23)))))/(8*(p1q + p2q + p3q)*s12*s13*
           (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*E0 . E0conj + 
       ((-2*(p2q + p3q)*(-(p3q^3*s12^3) + p2q*p3q^2*s12^2*s13 - 
             p2q^2*p3q*s12*s13^2 + p2q^3*s13^3)*(s12 + s13 + s23) + 
           p1q^4*(s12 + s13)*s23^2*(s12 + s13 + s23) + 
           p1q*(p2q^2*p3q*(s12 - s13)*s13^2*(s12 + s13 + s23) + 
             p2q*p3q^2*s12^2*(5*s12 + 3*s13)*(s12 + s13 + s23) + 
             p3q^3*s12^2*(3*s12^2 + 4*s12*s13 + s13^2 - s12*s23 - 3*s13*s23 - 
               4*s23^2) + p2q^3*s13^2*(3*s12^2 + 4*s12*s13 + s13^2 + 7*s12*
                s23 + 5*s13*s23 + 4*s23^2)) - p1q^3*s23*(s12 + s13 + s23)*
            (p3q*(2*s12^2 + 2*s12*s13 - 3*s12*s23 - s13*s23) + 
             p2q*(2*s12^2 + s13*(2*s13 - s23) + s12*(4*s13 + s23))) + 
           p1q^2*(s12 + s13 + s23)*(p2q^2*s13*(2*s12^2 + 3*s12*s13 + s13^2 - 
               2*s12*s23 - 2*s13*s23 - 2*s23^2) + p3q^2*s12*(s12^2 + s12*
                (s13 - 6*s23) + 2*s23*(-s13 + s23)) + 2*p2q*p3q*
              (s12^3 + 2*s12^2*(s13 - s23) + s13*s23^2 + s12*(s13^2 - 
                 2*s13*s23 - s23^2))))/(4*(p1q + p2q + p3q)*s12*s13*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) + (ep^2*(s12 + s13 + s23)*
           ((p2q + p3q)^2*(s12 - s13)*(-(p3q*s12) + p2q*s13)^3 - 
            p1q^5*(s12 - s13)*s23^3 + p1q*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*
             (-(p3q^2*s12*(s12 - s13)*(2*s13 + 3*s23)) + p2q^2*s13*(
                -2*s12^2 + 2*s12*s13 - s12*s23 + 5*s13*s23) + 
              p2q*p3q*(2*s12^3 + s12^2*(-2*s13 + s23) + s13^2*(-2*s13 + 
                  s23) + 2*s12*s13*(s13 + s23))) + p1q^4*s23*
             (p3q*(3*s12^2 - s12*s13 - 2*s13^2)*s23 + 
              p2q*(-(s13*(s13 - 4*s23)*s23) + 2*s12^2*(2*s13 + s23) + 
                s12*s13*(4*s13 + 7*s23))) + p1q^2*(p2q^3*s13*(-6*s12^2*s13 + 
                s13*(s13^2 + 4*s13*s23 - 7*s23^2) - s12*(3*s13^2 + 
                  8*s13*s23 + s23^2)) + p2q*p3q^2*(2*s12^4 + s13^2*s23*
                 (4*s13 + s23) + s12^3*(7*s13 + 4*s23) + s12*s13*s23*
                 (8*s13 + 5*s23) + s12^2*(-s13^2 + 4*s13*s23 + 2*s23^2)) + 
              p3q^3*s12*(s12^3 + s12^2*s13 + s13*s23*(4*s13 + 3*s23) - 
                s12*(2*s13^2 + 4*s13*s23 + 3*s23^2)) + p2q^2*p3q*(
                4*s12^3*s13 + 2*s13^2*(s13^2 + 6*s13*s23 - s23^2) + 
                s12^2*(-5*s13^2 + 4*s13*s23 + s23^2) + s12*(-s13^3 + 
                  s13*s23^2))) - p1q^3*(p3q^2*s23*(3*s12^3 + s12^2*s13 + 
                s13*s23*(2*s13 + s23) - s12*(4*s13^2 + 2*s13*s23 + s23^2)) + 
              p2q^2*(s13*s23*(s13^2 + 8*s13*s23 - 3*s23^2) + 
                s12^2*(4*s13^2 - 4*s13*s23 - 2*s23^2) + s12*(4*s13^3 + 
                  3*s13^2*s23 - 6*s13*s23^2 - s23^3)) + 2*p2q*p3q*(
                2*s12^3*(s13 + s23) + s13*s23^2*(5*s13 + s23) + 
                s12^2*(6*s13^2 + 7*s13*s23 + s23^2) + s12*(4*s13^3 + 
                  7*s13^2*s23 + 6*s13*s23^2 + s23^3)))))/(4*(p1q + p2q + p3q)*
           s12*s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))) - (ep*(s12 + s13 + s23)*
           (-(p1q^5*s23^2*(s13^2 + s12*(s13 + 4*s23))) + (p2q + p3q)*
             (-(p3q*s12) + p2q*s13)*(-(p3q^3*s12^2*(s12 - 3*s13)) + 
              p2q^3*(3*s12 - s13)*s13^2 - p2q*p3q^2*s12*(s12^2 - 5*s12*s13 + 
                6*s13^2 + 4*s13*s23) + p2q^2*p3q*s13*(-2*s12^2 - 3*s12*s13 + 
                3*s13^2 - 8*s12*s23 + 4*s13*s23)) + p1q^4*s23*
             (-(p2q*(2*s12^2*s13 - 2*s13^3 + 3*s13^2*s23 + 4*s13*s23^2 + 
                 4*s23^3 + s12*s23*(-s13 + 12*s23))) + 
              p3q*(s13*s23*(s13 + 3*s23) + 2*s12^2*(s13 + 6*s23) + 
                s12*(2*s13^2 + s13*s23 - 5*s23^2))) + 
            p1q*(-(p2q^4*s13^2*(-2*s12^2 - 7*s12*s13 + 3*s13^2 + 6*s12*s23 + 
                 2*s13*s23 + 4*s23^2)) + p3q^4*s12^2*(5*s12^2 - 
                s12*(s13 + 3*s23) + s13*(2*s13 + 9*s23)) + p2q*p3q^3*s12*(
                3*s12^3 + s12*s13*(9*s13 + 11*s23) - s12^2*(16*s13 + 
                  11*s23) - 2*s13*(2*s13^2 + 3*s13*s23 + 4*s23^2)) + 
              p2q^2*p3q^2*(2*s12^4 - 15*s12^3*s13 + s13^2*(2*s13^2 - 
                  3*s13*s23 - 8*s23^2) + s12^2*(6*s13^2 + 4*s13*s23 + 
                  4*s23^2) - s12*s13*(7*s13^2 + 15*s13*s23 + 8*s23^2)) - 
              p2q^3*p3q*s13*(4*s12^3 - s12^2*(5*s13 + 6*s23) + 
                s12*(-8*s13^2 + 7*s13*s23 - 8*s23^2) + s13*(s13^2 + 
                  9*s13*s23 + 16*s23^2))) + p1q^2*
             (-(p2q*p3q^2*(9*s12^3*(s13 + 2*s23) + 3*s12*s13*s23*(2*s13 + 
                   5*s23) + s12^2*(-3*s13^2 + 4*s13*s23 - 12*s23^2) + 
                 s13*s23*(4*s13^2 + 3*s13*s23 - 4*s23^2))) + 
              p3q^3*s12*(4*s12^3 + s12^2*(s13 - 15*s23) - s13*s23*
                 (4*s13 + 9*s23) + s12*(s13^2 + 5*s13*s23 + 3*s23^2)) + 
              p2q^3*s13*(-3*s13^3 + s12^2*(4*s13 - 2*s23) + 2*s13^2*s23 + 
                3*s13*s23^2 + 8*s23^3 + s12*(5*s13^2 - 8*s13*s23 + 
                  11*s23^2)) + p2q^2*p3q*(-2*s12^3*(2*s13 + s23) + 
                s12^2*(16*s13^2 + 2*s13*s23 + 7*s23^2) + s12*s13*(15*s13^2 + 
                  13*s13*s23 + 21*s23^2) - s13*(s13^3 + 7*s13^2*s23 + 
                  6*s13*s23^2 - 12*s23^3))) + 
            p1q^3*(-(p3q^2*(-(s13*s23^2*(2*s13 + 3*s23)) + s12^3*
                  (s13 + 12*s23) + s12^2*(s13^2 + 2*s13*s23 - 15*s23^2) + 
                 s12*s23*(2*s13^2 + 7*s13*s23 + s23^2))) + p2q^2*(-s13^4 + 
                2*s12^2*s13*(s13 - 2*s23) + 6*s13^3*s23 + 5*s13^2*s23^2 + 
                4*s13*s23^3 - 4*s23^4 + s12*(s13^3 - 2*s13^2*s23 + 
                  13*s13*s23^2 - 8*s23^3)) + p2q*p3q*(2*s12^3*s13 + 
                s13*s23^2*(5*s13 + 13*s23) + s12^2*(8*s13^2 + 8*s13*s23 + 
                  27*s23^2) + s12*(6*s13^3 + 16*s13^2*s23 + 24*s13*s23^2 + 
                  s23^3)))))/(4*(p1q + p2q + p3q)*s12*s13*(-(p3q^3*s12^3) + 
            (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^2 + 
            p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p1 . E0conj*p2 . E0 + 
       ((p1q*(s12 + s13 + s23)*(2*(p2q + p3q)*(s12 + s13)*(p3q^2*s12^2 + 
              p2q^2*s13^2) + p1q*(p3q^2*s12*(s12^2 + 2*s12*(s13 - 2*s23) + 
                s13*(s13 - 2*s23)) + p2q^2*s13*(s12^2 + s13*(s13 - 4*s23) + 
                2*s12*(s13 - s23)) + p2q*p3q*(s12 + s13)^2*(s12 + s13 - 
                2*s23)) + p1q^3*(s12 + s13)*s23^2 - p1q^2*s23*
             (p2q*(s12^2 + 3*s12*s13 + 2*s13*(s13 - s23)) + p3q*(2*s12^2 + 
                3*s12*s13 + s13^2 - 2*s12*s23))))/(2*(p1q + p2q + p3q)*s12*
           s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (ep^2*p1q*(s12 + s13)*(s12 + s13 + s23)*
           ((p2q + p3q)^2*s12*(p3q*s12 - p2q*s13)^2 + p1q^4*s23^2*
             (s13 + s23) + p1q*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*
             (p2q*s13*(3*s12 + s13 + s23) + p3q*s12*(s12 + 3*(s13 + s23))) - 
            p1q^3*s23*(p3q*(2*s12*s13 + 2*s13^2 + 3*s12*s23 + 3*s13*s23 + 
                s23^2) + p2q*(2*s13^2 + s13*s23 - s23^2 + s12*(2*s13 + 
                  s23))) + p1q^2*(2*p2q*p3q*(s12^2 + 3*s12*s13 + s13^2)*(
                s13 + s23) + p3q^2*s12*(2*s13^2 + 6*s13*s23 + 3*s23^2 + 
                s12*(s13 + 3*s23)) + p2q^2*(s13*(s13^2 - s13*s23 - 2*s23^2) + 
                s12*(2*s13^2 - 2*s13*s23 - s23^2)))))/(2*(p1q + p2q + p3q)*
           s12*s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*
             (p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
              p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
              p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                s23^2)))) - (ep*(s12 + s13 + s23)*(2*p2q*(p2q + p3q)^2*s12*
             s13*(p3q*s12 - p2q*s13)^2 + 2*p1q^5*s23^3*(-s12 + s13 + s23) + 
            p1q*(p2q + p3q)*s12*(-(p3q*s12) + p2q*s13)*
             (-(p3q^2*s12*(s12 + s13)) + p2q^2*s13*(s12 + 5*s13 - 4*s23) + 
              p2q*p3q*(-s12^2 + 4*s12*s13 + s13*(9*s13 + 4*s23))) + 
            p1q^2*(p3q^3*s12^2*(s12 + s13)*(2*s12 - 5*s23) + 
              p2q^2*p3q*(-(s12^3*(2*s13 + s23)) + 2*s13^2*(s13^2 + 
                  3*s13*s23 + 2*s23^2) + 2*s12*s13*(8*s13^2 + s13*s23 + 
                  4*s23^2) + s12^2*(8*s13^2 + 3*s13*s23 + 4*s23^2)) + 
              p2q^3*s13*(s12^2*(2*s13 - s23) + 2*s13*s23*(s13 + s23) + 
                s12*(4*s13^2 - 7*s13*s23 + 6*s23^2)) + p2q*p3q^2*s12*(
                -2*s12^2*(3*s13 + 5*s23) + s12*(-2*s13^2 - 5*s13*s23 + 
                  2*s23^2) + s13*(6*s13^2 + 5*s13*s23 + 6*s23^2))) - 
            p1q^4*s23*(p2q*(s12^2*s13 + 2*s23*(2*s13^2 + s13*s23 - s23^2) + 
                s12*(s13^2 - 2*s13*s23 + 6*s23^2)) + p3q*(-6*s12^2*s23 + 
                s13*(s13^2 + 4*s13*s23 + 3*s23^2) + s12*(s13^2 + 2*s13*s23 + 
                  7*s23^2))) + p1q^3*(p3q^2*s12*(-6*s12^2*s23 + 
                s13*(s13^2 + 4*s13*s23 + 7*s23^2) + s12*(s13^2 - 2*s13*s23 + 
                  9*s23^2)) + p2q^2*(s12^2*s13*(s13 - 2*s23) + 2*s13*s23*
                 (s13^2 - s13*s23 - 2*s23^2) + s12*(s13^3 - 4*s13^2*s23 + 
                  8*s13*s23^2 - 4*s23^3)) + p2q*p3q*(s12^3*s13 + 
                s12^2*(5*s13^2 + 4*s13*s23 + 14*s23^2) + s13*(s13^3 + 
                  2*s13^2*s23 - 3*s13*s23^2 - 4*s23^3) + s12*(5*s13^3 + 
                  2*s13^2*s23 + 11*s13*s23^2 - 4*s23^3)))))/
          (2*(p1q + p2q + p3q)*s12*s13*(-(p3q^3*s12^3) + (p1q + p2q)*
             (s13 + s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*
             (p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
            p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 3*s23) + 
              2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((p2q*(s12 + s13 + s23)*(-(p1q^3*(s12 + s13)*s23*
                (s12 + s23)) + 2*(p3q^2*s12^2 + p2q^2*s13^2)*(-(p2q*s13) + 
                p3q*(s12 + s23)) + p1q*(p2q*p3q*s13*(s12 + s13 - 2*s23)*s23 + 
                p3q^2*s12*(3*s12 + s13 - 2*s23)*(s12 + s23) + p2q^2*s13^2*
                 (s12 - s13 + 4*s23)) + p1q^2*(p3q*(s12 + s23)*(s12^2 + 
                  s12*(s13 - 3*s23) - s13*s23) + p2q*s13*(s12^2 + s12*s13 + 
                  2*(s13 - s23)*s23))))/(2*(p1q + p2q + p3q)*s12*s13*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) + (ep^2*(-(p1q^5*s12*s23^3*(s12 + s13 + s23)) + 
              (p2q + p3q)*s12*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*(
                p3q^2*s12 + p2q^2*s13 - p2q*p3q*(s12 + s13 + 2*s23)) + 
              p1q^4*s23*(s12 + s13 + s23)*(p3q*s12*(3*s12 - 2*s23)*s23 + 
                p2q*(s13*s23*(s13 + s23) + s12^2*(2*s13 + s23) + 
                  s12*(2*s13^2 + 5*s13*s23 - s23^2))) - p1q^3*(s12 + s13 + 
                s23)*(p3q^2*s12*s23*(3*s12^2 - 6*s12*s23 + s23^2) + 
                p2q^2*(s12*s13*(2*s13^2 + 3*s13*s23 - 6*s23^2) + 
                  s12^2*(2*s13^2 - 2*s13*s23 - s23^2) + s13*s23*(2*s13^2 + 
                    s13*s23 - s23^2)) + p2q*p3q*(2*s12^3*(s13 + s23) - 
                  s13*s23^2*(s13 + s23) + s12^2*(2*s13^2 + 2*s13*s23 - 
                    3*s23^2) + s12*s23*(-2*s13^2 - 4*s13*s23 + 3*s23^2))) + 
              p1q^2*(s12 + s13 + s23)*(p3q^3*s12^2*(s12^2 - 6*s12*s23 + 
                  3*s23^2) + p2q*p3q^2*s12*(s12^3 - 3*s12^2*(s13 + s23) - 
                  s23^2*(s13 + 2*s23) - s12*(3*s13^2 + s13*s23 - 6*s23^2)) - 
                p2q^3*s13*(3*s12^2*s13 + s12*(s13^2 + 7*s13*s23 - s23^2) + 
                  s13*(-s13^2 + s13*s23 + 2*s23^2)) + p2q^2*p3q*
                 (2*s12^3*s13 + 2*s13*s23^2*(s13 + s23) + s12^2*(3*s13^2 + 
                    10*s13*s23 + 3*s23^2) + 2*s12*s13*(s13^2 + 4*s13*s23 + 
                    6*s23^2))) + p1q*(p3q^4*s12^3*(2*s12 - 3*s23)*
                 (s12 + s13 + s23) + p2q^4*s13^2*(-s12^3 + s12^2*(s13 - 
                    3*s23) + s13*(s13 + s23)^2 + s12*(3*s13^2 + s13*s23 - 
                    2*s23^2)) + p2q*p3q^3*s12^2*(s12^3 - (s13 - 4*s23)*
                   (s13 + s23)^2 - s12^2*(3*s13 + 2*s23) + s12*(-5*s13^2 - 
                    4*s13*s23 + s23^2)) - p2q^3*p3q*s13*(-2*s12^4 + 
                  s12^3*(s13 - 6*s23) + s13*(s13 + s23)^2*(s13 + 2*s23) + 
                  s12^2*(5*s13^2 + 4*s13*s23 - 6*s23^2) + s12*(3*s13^3 + 
                    10*s13^2*s23 + 5*s13*s23^2 - 2*s23^3)) + p2q^2*p3q^2*s12*
                 (-s12^4 - s12^3*(s13 + 3*s23) + s12^2*s13*(3*s13 + 5*s23) + 
                  s13*(2*s13^3 + 5*s13^2*s23 + 5*s13*s23^2 + 2*s23^3) + 
                  s12*(5*s13^3 + 13*s13^2*s23 + 11*s13*s23^2 + 2*s23^3)))))/
            (2*(p1q + p2q + p3q)*s12*s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))) + (ep*(s12 + s13 + s23)*(-(p3q^5*s12^4) - 
              p2q^5*s12*s13^3 + p1q^5*s12*s23^3 + p2q*p3q^4*s12^3*(3*s13 + 
                2*s23) - p2q^2*p3q^3*s12^2*(s12^2 - 4*s12*s13 + 5*s13^2 + 
                2*s12*s23 + 2*s23^2) + p2q^3*p3q^2*s12*s13*(s12^2 + 5*s13^2 + 
                2*s13*s23 - 4*s23^2 - 4*s12*(2*s13 + s23)) + p2q^4*p3q*s13^2*(
                s12^2 - 2*(s13 + s23)^2 + s12*(4*s13 + 6*s23)) - 
              p1q*(p3q^4*s12^3*(2*s12 - 3*s23) + p2q^4*s13^2*(s12^2 + 
                  s12*(3*s13 - s23) - 2*s23*(s13 + s23)) + p2q*p3q^3*s12^2*
                 (s13^2 + 4*s13*s23 + 2*s23^2 - 3*s12*(s13 + 2*s23)) + 
                p2q^3*p3q*s13*(-2*s12^3 + 2*s12^2*s13 + s13^3 - s13*s23^2 + 
                  s12*(-7*s13^2 - 10*s13*s23 + s23^2)) + p2q^2*p3q^2*s12*
                 (s12^3 + s12^2*(-5*s13 + s23) + s13*(-2*s13^2 - s13*s23 + 
                    s23^2) + s12*(8*s13^2 + 2*s13*s23 + 3*s23^2))) + 
              p1q^4*s23*(p3q*s12*s23*(-3*s12 + 2*s23) + p2q*(s12^2*s13 + 
                  2*s23^2*(s13 + s23) + s12*(s13^2 + s13*s23 + 4*s23^2))) + 
              p1q^3*(p3q^2*s12*s23*(3*s12^2 - 6*s12*s23 + s23^2) + 
                p2q*p3q*(-(s12^3*s13) + 2*s23^3*(s13 + s23) + 2*s12*s23*
                   (s13^2 + s23^2) - s12^2*(s13^2 + 8*s23^2)) - 
                p2q^2*(s12^2*s13*(s13 - 2*s23) + 2*s23^2*(2*s13^2 + s13*s23 - 
                    s23^2) + s12*(s13^3 - s13^2*s23 + 2*s13*s23^2 - 
                    3*s23^3))) + p1q^2*(-(p3q^3*s12^2*(s12^2 - 6*s12*s23 + 
                   3*s23^2)) + p2q^3*s13*(s12^2*(-2*s13 + s23) + 
                  s12*(-3*s13^2 + s13*s23 - 3*s23^2) + 2*s23*(s13^2 - 
                    s13*s23 - 2*s23^2)) - p2q*p3q^2*s12*(s12^2*(s13 - 
                    4*s23) + s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12*(2*s13^2 + 5*s13*s23 + 10*s23^2)) + p2q^2*p3q*
                 (s12^3*(2*s13 + s23) - s12^2*(3*s13^2 - 5*s13*s23 + s23^2) + 
                  s23*(s13^3 + s13*s23^2 + 2*s23^3) + s12*(2*s13^3 + 
                    7*s13^2*s23 + 4*s13*s23^2 + 3*s23^3)))))/
            (2*(p1q + p2q + p3q)*s12*s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p1 . E0conj + 
         ((-2*(p2q + p3q)*(-(p3q^3*s12^3) + p2q*p3q^2*s12^2*s13 - p2q^2*p3q*
                s12*s13^2 + p2q^3*s13^3)*(s12 + s13 + s23) + 
             p1q^4*(s12 + s13)*s23^2*(s12 + s13 + s23) + 
             p1q*(p2q^2*p3q*(s12 - s13)*s13^2*(s12 + s13 + s23) + p2q*p3q^2*
                s12^2*(5*s12 + 3*s13)*(s12 + s13 + s23) + p3q^3*s12^2*
                (3*s12^2 + 4*s12*s13 + s13^2 - s12*s23 - 3*s13*s23 - 
                 4*s23^2) + p2q^3*s13^2*(3*s12^2 + 4*s12*s13 + s13^2 + 
                 7*s12*s23 + 5*s13*s23 + 4*s23^2)) - p1q^3*s23*
              (s12 + s13 + s23)*(p3q*(2*s12^2 + 2*s12*s13 - 3*s12*s23 - 
                 s13*s23) + p2q*(2*s12^2 + s13*(2*s13 - s23) + 
                 s12*(4*s13 + s23))) + p1q^2*(s12 + s13 + s23)*
              (p2q^2*s13*(2*s12^2 + 3*s12*s13 + s13^2 - 2*s12*s23 - 
                 2*s13*s23 - 2*s23^2) + p3q^2*s12*(s12^2 + s12*(s13 - 
                   6*s23) + 2*s23*(-s13 + s23)) + 2*p2q*p3q*(s12^3 + 
                 2*s12^2*(s13 - s23) + s13*s23^2 + s12*(s13^2 - 2*s13*s23 - 
                   s23^2))))/(4*(p1q + p2q + p3q)*s12*s13*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
           (ep^2*(s12 + s13)*(s12 + s13 + s23)*(-((p2q + p3q)^2*
                (-(p3q*s12) + p2q*s13)^3) + p1q^5*s23^2*(2*s13 + 3*s23) + 
              p1q*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(p2q^2*s13*(2*s12 - 
                  2*s13 + 3*s23) + p3q^2*s12*(2*s12 + 2*s13 + 3*s23) + 
                p2q*p3q*(-2*s12^2 - 3*s12*s23 + s13*(-2*s13 + s23))) - 
              p1q^4*s23*(p3q*(4*s12*s13 + 9*s12*s23 - 2*s23^2) + 
                p2q*(4*s13^2 + 5*s13*s23 - 4*s23^2 + 2*s12*(2*s13 + s23))) + 
              p1q^3*(p3q^2*(-6*s12*s23^2 - s23^2*(2*s13 + s23) + 
                  s12^2*(2*s13 + 9*s23)) + p2q^2*(2*s13^3 + s13^2*s23 - 
                  10*s13*s23^2 + s23^3 + s12*(4*s13^2 - 4*s13*s23 - 
                    2*s23^2)) + 2*p2q*p3q*(2*s12^2*(s13 + s23) + 
                  s12*(2*s13^2 + s13*s23 - 4*s23^2) + 2*s23*(s13^2 + 
                    s23^2))) + p1q^2*(p2q^3*s13*(6*s12*s13 + s13^2 + 
                  8*s13*s23 - 3*s23^2) + p3q^3*s12*(-3*s12^2 + 6*s12*s23 + 
                  s23*(4*s13 + 3*s23)) + p2q*p3q^2*(-2*s12^3 + s13*s23*
                   (4*s13 + s23) + s12^2*(3*s13 + 4*s23) + s12*(4*s13^2 - 
                    6*s23^2)) - p2q^2*p3q*(4*s12^2*s13 + 2*s13*(2*s13^2 - 
                    s13*s23 + 3*s23^2) + s12*(s13^2 + 12*s13*s23 + 
                    5*s23^2)))))/(4*(p1q + p2q + p3q)*s12*s13*
             (-(p3q^3*s12^3) + (p1q + p2q)*(s13 + s23)*(p2q*s13 - p1q*s23)^
                2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + p1q*(s13 + 3*s23)) - 
              p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + p1q^2*s23*(2*s13 + 
                  3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + s23^2)))) - 
           (ep*(s12 + s13 + s23)*(p1q^5*s23^2*(s12*(s13 - 2*s23) + 
                (s13 + 2*s23)^2) + (p2q + p3q)*(-(p3q*s12) + p2q*s13)*(
                p2q^3*s13^2*(3*s12 + s13) - p3q^3*s12^2*(s12 + 3*s13) - 
                p2q^2*p3q*s13*(2*s12 + s13)*(s12 + 3*s13 + 4*s23) + 
                p2q*p3q^2*s12*(-s12^2 + 7*s12*s13 + 6*s13^2 + 4*s13*s23)) + 
              p1q*(p3q^4*s12^2*(3*s12^2 + 5*s12*s13 - 2*s13^2 - 7*s12*s23 - 
                  9*s13*s23) + p2q^4*s13^2*(2*s12^2 + 9*s12*s13 + 3*s13^2 - 
                  4*s12*s23 - 2*s13*s23) - p2q^3*p3q*s13*(4*s12^3 + 
                  s12^2*(s13 - 2*s23) + s12*s13*(4*s13 + 17*s23) + 
                  s13*(7*s13^2 + 11*s13*s23 - 4*s23^2)) + p2q*p3q^3*s12*
                 (s12^3 - s12^2*(12*s13 + 13*s23) + s12*(-9*s13^2 + s13*s23 + 
                    4*s23^2) + 2*s13*(2*s13^2 + 3*s13*s23 + 4*s23^2)) + 
                p2q^2*p3q^2*(2*s12^4 + s12*s13^2*(11*s13 + s23) + 
                  s12^3*(-9*s13 + 2*s23) + 2*s12^2*(5*s13^2 + 8*s13*s23 + 
                    4*s23^2) + s13^2*(-2*s13^2 + 3*s13*s23 + 8*s23^2))) - 
              p1q^4*s23*(p2q*(2*s12^2*s13 + 2*s13^3 + 5*s13^2*s23 + 
                  4*s13*s23^2 - 4*s23^3 + s12*(4*s13^2 - s13*s23 + 
                    8*s23^2)) + p3q*(2*s12^2*(s13 - 3*s23) + s23*(s13^2 - 
                    s13*s23 - 4*s23^2) + s12*(2*s13^2 + 5*s13*s23 + 
                    15*s23^2))) + p1q^3*(p3q^2*(s12^3*(s13 - 6*s23) - 
                  s13*s23^2*(2*s13 + 3*s23) + s12*s23*(2*s13^2 + 3*s13*s23 - 
                    13*s23^2) + s12^2*(s13^2 - 2*s13*s23 + 21*s23^2)) + 
                p2q^2*(2*s12^2*s13*(s13 - 2*s23) + s13*(s13^3 - 2*s13^2*s23 - 
                    s13*s23^2 - 8*s23^3) + s12*(3*s13^3 - 8*s13^2*s23 + 
                    7*s13*s23^2 - 6*s23^3)) + p2q*p3q*(2*s12^3*s13 + 
                  s12^2*(4*s13^2 + 17*s23^2) + s12*(2*s13^3 - 8*s13^2*s23 + 
                    4*s13*s23^2 - 17*s23^3) + s23*(4*s13^3 + 3*s13^2*s23 - 
                    5*s13*s23^2 + 4*s23^3))) + p1q^2*(p3q^3*s12*(2*s12^3 + 
                  s12^2*(3*s13 - 13*s23) + s13*s23*(4*s13 + 9*s23) - 
                  s12*(s13^2 + 9*s13*s23 - 15*s23^2)) + p2q^3*s13*
                 (s12^2*(4*s13 - 2*s23) + s13*(3*s13^2 - 2*s13*s23 + 
                    5*s23^2) + s12*(9*s13^2 - 8*s13*s23 + 7*s23^2)) + 
                p2q*p3q^2*(-(s12^3*(s13 + 10*s23)) + s13*s23*(4*s13^2 + 
                    3*s13*s23 - 4*s23^2) + s12^2*(5*s13^2 + 12*s13*s23 + 
                    24*s23^2) + s12*(4*s13^3 - 2*s13^2*s23 + 9*s13*s23^2 - 
                    8*s23^3)) - p2q^2*p3q*(2*s12^3*(2*s13 + s23) - 
                  3*s12^2*(2*s13^2 - 2*s13*s23 + s23^2) + s13*(3*s13^3 - 
                    3*s13^2*s23 - 14*s13*s23^2 + 4*s23^3) + s12*(-5*s13^3 + 
                    17*s13^2*s23 + s13*s23^2 + 8*s23^3)))))/
            (4*(p1q + p2q + p3q)*s12*s13*(-(p3q^3*s12^3) + (p1q + p2q)*(s13 + 
                s23)*(p2q*s13 - p1q*s23)^2 + p3q^2*s12^2*(p2q*(3*s13 + s23) + 
                p1q*(s13 + 3*s23)) - p3q*s12*(p2q^2*s13*(3*s13 + 2*s23) + 
                p1q^2*s23*(2*s13 + 3*s23) + 2*p1q*p2q*(s13^2 + s13*s23 + 
                  s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + 
     (((-9*ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23)))/(8*s13*(p2q*s13 - 
            p1q*(s12 + s23) - p3q*(s12 + s23))) - 
         (9*(s12 + s13 + s23)*(-2*p2q^3*s13^2 + p2q^2*s13*(3*p1q*s23 + 
              2*p3q*(s12 + s23)) + p3q*(p3q*s12 - p1q*s23)*
             (p1q*s23 + 2*p3q*(s13 + s23)) + p2q*(p1q*p3q*(s12 + s13 - 2*s23)*
               s23 - p1q^2*s23^2 - 2*p3q^2*(s13^2 - s12*s23 + s13*s23))))/
          (8*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) + 
         (9*ep*(s12 + s13 + s23)*(p3q*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
             (s12 + s13 + s23) + p1q^5*s23^2*(s12 + s13 + s23) - 
            p1q^4*s23*(p2q*(2*s12*s13 + 2*s13^2 - 3*s12*s23 + 2*s13*s23 - 
                2*s23^2) + p3q*(2*s12^2 + 2*s12*(s13 - s23) - 
                s23*(s13 + 3*s23))) + p1q^3*(p3q^2*(s12^3 + s12^2*
                 (s13 - 6*s23) - s12*s23*(2*s13 + s23) + s23^2*(s13 + 
                  3*s23)) - p2q*p3q*(s12^2*(2*s13 + 5*s23) + 
                s23*(2*s13^2 + 6*s13*s23 - 3*s23^2) + s12*(2*s13^2 + 
                  9*s13*s23 - 2*s23^2)) + p2q^2*(s13*(s13^2 + s13*s23 - 
                  5*s23^2) + s12*(s13^2 - 5*s13*s23 + s23^2))) + 
            p1q*(p2q + p3q)*(p2q^3*(s12 - s13)*s13^2 + p2q^2*p3q*s13*(
                -2*s12^2 + 5*s12*s13 + s13^2 - 2*s12*s23 - 2*s23^2) + 
              p3q^3*s12*(3*s12^2 + s12*s13 - 2*s23*(s13 + s23)) + 
              p2q*p3q^2*(s12^3 - 2*s13*s23*(s13 + s23) - s12^2*(7*s13 + 
                  2*s23) - 2*s12*(s13^2 + 4*s13*s23 + s23^2))) + 
            p1q^2*(2*p2q^3*s13*(s12*(s13 - s23) + 2*s13*s23) + 
              p3q^3*(3*s12^3 + s12^2*(s13 - 5*s23) + s23^2*(s13 + s23) - 
                2*s12*s23*(s13 + 2*s23)) + p2q^2*p3q*(s13^3 + 3*s13^2*s23 - 
                4*s13*s23^2 + s23^3 - 2*s12^2*(2*s13 + s23) + 
                s12*(3*s13^2 - 8*s13*s23 + s23^2)) + p2q*p3q^2*(2*s12^3 - 
                2*s12^2*(3*s13 + 4*s23) + s23*(-2*s13^2 - 3*s13*s23 + 
                  2*s23^2) - s12*(2*s13^2 + 10*s13*s23 + 3*s23^2)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + 
            p1q*(s12 + s23) + p3q*(s12 + s23))))*E0 . E0conj + 
       ((-9*ep^2*(s12 + s13 + s23)*(p1q^5*s23^4 + (p2q + p3q)*
             (-(p3q*s12) + p2q*s13)^3*(-(p3q*(2*s12 + s23)) + 
              p2q*(2*s13 + s23)) + p1q^3*s23*(p2q^2*s23*(8*s12*s13 + 
                3*s13^2 - 2*s12*s23 + 4*s13*s23 - s23^2) + p3q^2*(-4*s12^3 + 
                3*s12^2*s23 - 2*s12*s23^2 + s23^3) + 2*p2q*p3q*(
                3*s12*(s13 - s23)*s23 + 2*s12^2*(s13 + s23) - 
                s23^2*(s13 + s23))) - p1q^4*s23^2*(p3q*(-2*s12^2 + s12*s23 - 
                2*s23^2) + p2q*(2*s12^2 + 6*s12*s23 + s23*(3*s13 + 2*s23))) - 
            p1q*(-(p3q*s12) + p2q*s13)*(p3q^3*s12*(4*s12^2 - 2*s12*s23 - 
                s23^2) + p2q*p3q^2*(4*s12^3 + 2*s12*s23^2 + s13*s23^2 - 
                2*s12^2*(4*s13 + s23)) + p2q^3*s13*(2*s12*(2*s13 + s23) + 
                s23*(4*s13 + 3*s23)) + p2q^2*p3q*(2*s13*s23*(s13 + s23) - 
                2*s12^2*(4*s13 + s23) + s12*(4*s13^2 - 2*s13*s23 + s23^2))) + 
            p1q^2*(p3q^3*s12*(2*s12^3 - 7*s12^2*s23 - s23^3) + 
              p2q^3*s13*(2*s12^2*s13 - s13^2*s23 + 3*s23^3 + 2*s12*s23*
                 (s13 + 2*s23)) + p2q*p3q^2*(2*s12^4 + 8*s12*s13*s23^2 + 
                s13*s23^3 - 2*s12^3*(2*s13 + s23) + s12^2*s23*(9*s13 + 
                  8*s23)) + p2q^2*p3q*(-4*s12^3*s13 + 4*s13*s23^3 + 
                s12*s23*(-s13^2 + 8*s13*s23 + s23^2) + 2*s12^2*(s13^2 + 
                  2*s23^2)))))/(4*(p1q + p2q + p3q)*s13*s23*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (9*(p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) - p1q^3*(p2q + p3q)*
             s23^2*(s12 + s13 + s23)*(p3q*(2*s12 - 2*s13 - 3*s23) + 
              p2q*(2*s12 + 4*s13 + s23)) + p1q^2*s23*(s12 + s13 + s23)*
             (p2q^3*s13*(6*s12 + 5*s13 + 4*s23) + p2q^2*p3q*(2*s12^2 + 
                s13^2 + 4*s12*(s13 - s23) - 4*s13*s23 - 2*s23^2) + 
              p3q^3*(s12^2 + 2*s23*(s13 + s23) - 2*s12*(2*s13 + 3*s23)) + 
              p2q*p3q^2*(3*s12^2 - 2*s13*s23 - 2*s12*(s13 + 5*s23))) + 
            2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(p2q^3*s13^2*(s12 + s13 + 
                s23) - p2q^2*p3q*s13*(s12 + s23)*(s12 + s13 + s23) - 
              p3q^3*s12*(s13 + s23)*(s12 + s13 + s23) + p2q*p3q^2*(
                -(s12^2*s23) + s13*(s13 + s23)^2 + s12*(s13^2 - s23^2))) + 
            p1q*(4*p2q^3*p3q*s13*(s12 + s23)^2*(s12 + s13 + s23) - 
              p2q^4*s13^2*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 9*s12*s23 + 
                7*s13*s23 + 5*s23^2) + p3q^4*s12*(-4*s23*(s13 + s23)^2 + 
                s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + s13*s23 - s23^2)) + 
              4*p2q*p3q^3*(s13*s23*(s13 + s23)^2 + s12^3*(s13 + 2*s23) + 
                s12*s23*(s13^2 - s23^2) + s12^2*(s13^2 + 3*s13*s23 + 
                  s23^2)) + p2q^2*p3q^2*(s12^3*(2*s13 + 5*s23) - 
                s12*s13^2*(6*s13 + 7*s23) - s13^2*(2*s13^2 + 5*s13*s23 + 
                  3*s23^2) + s12^2*(-2*s13^2 + 7*s13*s23 + 5*s23^2)))))/
          (4*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
         (9*ep*(p1q^7*s23^4*(s12 + s13 + s23)^2 - p1q^6*s23^3*
             (s12 + s13 + s23)*(p2q*(3*s12*s13 + 3*s13^2 + 2*s12*s23 + 
                2*s13*s23 + 3*s23^2) + p3q*(3*s12^2 + 3*s12*s13 - 
                2*s23*(3*s13 + s23))) - (p2q + p3q)*(-(p3q*s12) + p2q*s13)^3*
             (4*p2q^3*s13^2*(s12 + s13 + s23) - p3q^3*s23*(s12 + s13 + s23)^
                2 - p2q^2*p3q*(-4*s13^3 + s13^2*s23 + 6*s13*s23^2 + s23^3 + 
                s12^2*(4*s13 + s23) + 2*s12*s23*(5*s13 + s23)) - 
              2*p2q*p3q^2*(s12^2*(2*s13 - s23) + s23*(s13^2 - s23^2) + 
                2*s12*(s13^2 + s13*s23 - s23^2))) + p1q^5*s23^2*
             (s12 + s13 + s23)*(p3q^2*(3*s12^3 + s12^2*(3*s13 - 5*s23) + 
                s12*s23*(-14*s13 + 3*s23) + 2*s23^2*(7*s13 + 3*s23)) + 
              p2q^2*(3*s13^3 + 4*s12^2*s23 + 4*s13*s23^2 - 2*s23^3 + 
                s12*(3*s13^2 - 3*s13*s23 + 4*s23^2)) + p2q*p3q*(
                s12^2*(2*s13 + 7*s23) + s12*(2*s13^2 - 17*s13*s23 + 
                  6*s23^2) - s23*(16*s13^2 + 7*s13*s23 + 8*s23^2))) + 
            p1q^3*s23*(s12 + s13 + s23)*(p3q^4*(-2*s12^4 + 18*s12^2*
                 (s13 - s23)*s23 + 5*s23^3*(s13 + s23) - 2*s12*s23^2*
                 (15*s13 + 8*s23) + s12^3*(-2*s13 + 11*s23)) + 
              p2q^4*s13*(-2*s12^2*s13 - s13^3 - 24*s13^2*s23 + 7*s13*s23^2 + 
                6*s23^3 + s12*(-15*s13^2 + 14*s13*s23 + s23^2)) + 
              p2q*p3q^3*(5*s12^4 + s12^3*(9*s13 - 8*s23) + s12^2*(8*s13^2 + 
                  43*s13*s23 - 23*s23^2) - s23^2*(4*s13^2 + 8*s13*s23 + 
                  5*s23^2) + s12*s23*(16*s13^2 + 5*s13*s23 + 7*s23^2)) + 
              p2q^3*p3q*(-4*s12^3*s13 - 4*s13^4 - 25*s13^3*s23 + 
                44*s13^2*s23^2 + 24*s13*s23^3 - 3*s23^4 + s12^2*(11*s13^2 + 
                  18*s13*s23 + s23^2) + s12*(-17*s13^3 + 56*s13^2*s23 + 
                  17*s13*s23^2 + s23^3)) + p2q^2*p3q^2*(6*s12^4 - 
                s12^3*(s13 + 8*s23) + s12^2*(11*s13^2 + 32*s13*s23 - 
                  16*s23^2) + s23*(6*s13^3 + 37*s13^2*s23 + 9*s13*s23^2 - 
                  9*s23^3) + s12*(-2*s13^3 + 43*s13^2*s23 + 11*s13*s23^2 + 
                  4*s23^3))) - p1q^4*s23*(s12 + s13 + s23)*
             (p3q^3*(s12^4 + s12^3*(s13 - 6*s23) - 2*s12^2*(5*s13 - 7*s23)*
                 s23 + s12*s23^2*(30*s13 + s23) - 2*s23^3*(7*s13 + 5*s23)) + 
              p2q*p3q^2*(-(s12^3*(s13 - 10*s23)) + s12*s23*(-8*s13^2 + 
                  35*s13*s23 - 12*s23^2) - s12^2*(s13^2 + 14*s13*s23 - 
                  6*s23^2) + 2*s23^2*(12*s13^2 + 10*s13*s23 + 5*s23^2)) + 
              p2q^3*(s13^4 + 2*s12^2*s13*s23 - 2*s13^3*s23 - 10*s13^2*s23^2 - 
                3*s13*s23^3 + 2*s23^4 + s12*(s13^3 - 16*s13^2*s23 + 
                  11*s13*s23^2 + s23^3)) + p2q^2*p3q*(10*s12^3*s23 - 
                s12*s13*(s13^2 + 30*s13*s23 - 26*s23^2) - s12^2*(s13^2 + 
                  2*s13*s23 - 9*s23^2) + s23*(-14*s13^3 - 17*s13^2*s23 - 
                  s13*s23^2 + 10*s23^3))) + p1q^2*(s12 + s13 + s23)*
             (p3q^5*s12*s23*(-2*s12^3 - 11*s23^2*(s13 + s23) + s12*s23*
                 (18*s13 + s23) + s12^2*(-2*s13 + 15*s23)) + 
              p2q*p3q^4*(7*s13*s23^3*(s13 + s23) + s12*s23^3*(16*s13 + 
                  3*s23) + s12^4*(-4*s13 + 11*s23) + s12^3*s23*(7*s13 + 
                  12*s23) + s12^2*s23*(8*s13^2 + 20*s13*s23 - 9*s23^2)) + 
              p2q^5*s13^2*(s23*(17*s13^2 - 19*s13*s23 - 6*s23^2) + 
                s12*(4*s13^2 - 11*s13*s23 + s23^2)) + p2q^4*p3q*s13*(
                s12^2*(-12*s13^2 + 19*s13*s23 + 6*s23^2) + s23*(17*s13^3 - 
                  67*s13^2*s23 - 13*s13*s23^2 + 7*s23^3) + s12*(4*s13^3 - 
                  60*s13^2*s23 + 4*s13*s23^2 + 7*s23^3)) + p2q^2*p3q^3*(
                s12^4*(-4*s13 + 13*s23) + s12^2*s23*(25*s13^2 + 9*s13*s23 - 
                  3*s23^2) + 2*s12^3*(6*s13^2 - 8*s13*s23 + 5*s23^2) + 
                s13*s23^2*(-10*s13^2 + 7*s13*s23 + 9*s23^2) + s12*s23*
                 (-10*s13^3 + 7*s13^2*s23 + 28*s13*s23^2 + 11*s23^3)) + 
              p2q^3*p3q^2*(s12^3*(12*s13^2 - 21*s13*s23 + s23^2) + 
                s12^2*(-12*s13^3 + 48*s13^2*s23 + 5*s13*s23^2 + 3*s23^3) + 
                s12*s23*(-47*s13^3 + 30*s13^2*s23 + 24*s13*s23^2 + 5*s23^3) + 
                s13*s23*(4*s13^3 - 42*s13^2*s23 + 13*s13*s23^2 + 
                  17*s23^3))) + p1q*(-(p3q*s12) + p2q*s13)*
             (p2q^5*s13^2*(-4*s13^3 + s12^2*(4*s13 - s23) + 11*s13^2*s23 + 
                17*s13*s23^2 + 2*s23^3 + s12*s23*(18*s13 + s23)) + 
              p3q^5*s12*s23*(2*s12^3 + 4*s12^2*(s13 - s23) - 
                7*s23*(s13 + s23)^2 + s12*(2*s13^2 - 11*s13*s23 - 
                  13*s23^2)) + p2q*p3q^4*(s12^4*(8*s13 - 7*s23) + 
                3*s13*s23^2*(s13 + s23)^2 + s12^2*s23*(s13^2 - 6*s13*s23 - 
                  12*s23^2) + 2*s12^3*(4*s13^2 + 2*s13*s23 - 9*s23^2) - 
                s12*s23*(2*s13^3 - 3*s13^2*s23 - 4*s13*s23^2 + s23^3)) + 
              p2q^2*p3q^3*(4*s12^4*(3*s13 - 2*s23) - 3*s13*s23^2*(4*s13^2 + 
                  5*s13*s23 + s23^2) - 4*s12^3*(2*s13^2 - 5*s13*s23 + 
                  4*s23^2) + s12*s23*(-28*s13^3 - 34*s13^2*s23 + 
                  6*s13*s23^2 + 3*s23^3) - s12^2*(20*s13^3 + 32*s13^2*s23 - 
                  14*s13*s23^2 + 5*s23^3)) - p2q^4*p3q*s13*(8*s12^3*s13 + 
                4*s13^4 - 34*s13^3*s23 - 32*s13^2*s23^2 + 11*s13*s23^3 + 
                5*s23^4 + s12^2*(-12*s13^2 + 30*s13*s23 + 7*s23^2) + 
                s12*(-16*s13^3 - 36*s13^2*s23 + 35*s13*s23^2 + 12*s23^3)) + 
              p2q^3*p3q^2*(s12^4*(4*s13 + s23) + s12^3*(-24*s13^2 + 
                  20*s13*s23 + 2*s23^2) + s13*s23*(23*s13^3 + 4*s13^2*s23 - 
                  26*s13*s23^2 - 7*s23^3) - 2*s12^2*(6*s13^3 + 30*s13^2*s23 - 
                  7*s13*s23^2 - s23^3) + s12*(16*s13^4 - 8*s13^3*s23 - 
                  68*s13^2*s23^2 - 8*s13*s23^3 + s23^4)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23^2*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p1 . E0conj*p2 . E0 + 
       ((9*p1q*(s12 + s13 + s23)*(-2*p2q^4*s13^2*(s12 + s13) + 
            p2q^3*s13*(p1q*(3*s12 + 5*s13)*s23 + 2*p3q*(s12 + s13)*(s12 - 
                s13 + s23)) + p3q*(p3q*s12 - p1q*s23)*(p3q*(s12 + s13) - 
              p1q*s23)*(p1q*s23 + 2*p3q*(s13 + s23)) + 
            p2q^2*(p1q*p3q*(s12^2 + s12*(3*s13 - 2*s23) + 4*s13*(s13 - s23))*
               s23 - p1q^2*(s12 + 4*s13)*s23^2 + 2*p3q^2*(s12 + s13)*(
                -s13^2 + s12*(s13 + s23))) + p2q*(p1q*p3q^2*(2*s12^2 + 
                s12*(s13 - 6*s23) + s13*(s13 - 2*s23))*s23 + p1q^3*s23^3 + 
              p1q^2*p3q*s23^2*(-3*s12 - 3*s13 + 2*s23) + 2*p3q^3*(s12 + s13)*(
                -(s13*(s13 + s23)) + s12*(s13 + 2*s23)))))/
          (2*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
         (9*ep^2*p1q*(s12 + s13 + s23)*(-(p1q^3*s23^2*(s12 - s13 + s23)*
              (-(p3q*s12) + p2q*(s12 + s23))) - (p2q + p3q)*
             (p3q*s12 - p2q*s13)^2*(p2q*s13*(s12 + s13 - s23) - 
              p3q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))) + 
            p1q^2*s23*(-(p3q^2*s12*(2*s12^2 + s12*s23 + (3*s13 - s23)*s23)) + 
              p2q*p3q*(-(s13*(s13 - 3*s23)*s23) + s12^2*(4*s13 + s23) + 
                s12*s23*(4*s13 + s23)) + p2q^2*s13*(3*s23*(-s13 + s23) + 
                s12*(-2*s13 + 3*s23))) + p1q*(p2q^2*p3q*s13*(-2*s12^3 - 
                s12^2*s13 + s12*s13*(s13 - 7*s23) + 2*s13*(s13 - 3*s23)*
                 s23) + p2q^3*s13^2*(s12^2 + s12*s13 + 3*(s13 - s23)*s23) + 
              p3q^3*s12*(s12^3 + s12^2*(s13 - s23) + 2*s12*(s13 - s23)*s23 - 
                2*s13*s23^2) + p2q*p3q^2*(s12^4 - s12^3*s13 - 4*s12*s13^2*
                 s23 - 2*s13^2*s23^2 - s12^2*(2*s13^2 - 5*s13*s23 + 
                  s23^2)))))/(2*(p1q + p2q + p3q)*s13*s23*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
         (9*ep*(2*(p2q + p3q)^3*s13*(p3q*s12 - p2q*s13)^4*(s12 + s13 + s23) + 
            p1q^6*s23^4*(s12 + s13 + s23)*(3*p2q*(s12 + s23) + 
              p3q*(s12 - 2*s13 + s23)) - p1q^5*s23^3*(s12 + s13 + s23)*
             (p2q*p3q*(9*s12^2 + 3*s12*s13 - 6*s13^2 + 5*s12*s23 + 
                5*s13*s23 - 4*s23^2) + p3q^2*(3*s12^2 - 2*s12*s13 - 2*s13^2 + 
                4*s12*s23 + 5*s13*s23 + s23^2) + p2q^2*(2*s12^2 + 
                (8*s13 - s23)*s23 + s12*(5*s13 + s23))) + 
            p1q^4*s23^2*(s12 + s13 + s23)*(p2q^3*s13*(s12^2 + (4*s13 - 3*s23)*
                 s23 + s12*(-s13 + s23)) + p2q^2*p3q*(5*s12^3 - 6*s13^3 + 
                3*s13^2*s23 - 8*s13*s23^2 + 2*s23^3 + s12*s13*(-4*s13 + 
                  3*s23) + s12^2*(5*s13 + 3*s23)) + p2q*p3q^2*(10*s12^3 - 
                4*s13^3 + 7*s13^2*s23 - 2*s13*s23^2 + 2*s23^3 + 
                s12^2*(7*s13 + s23) + s12*(-5*s13^2 + 3*s13*s23 - 7*s23^2)) + 
              p3q^3*(3*s12^3 + s12*(13*s13 - s23)*s23 + s12^2*(5*s13 + 
                  4*s23) + s23*(6*s13^2 + s13*s23 - 2*s23^2))) - 
            2*p1q*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
             (2*p3q^3*s12*s13*(-s12 + s23) + p2q^3*s13^2*(s12 - s13 + 
                3*s23) + p2q^2*p3q*s13*(-s12^2 - s13^2 + 6*s13*s23 + s23^2 + 
                2*s12*(2*s13 + s23)) + p2q*p3q^2*(s12^2*(-3*s13 + s23) + 
                2*s13*s23*(2*s13 + s23) + s12*(3*s13^2 + 6*s13*s23 + 
                  s23^2))) - p1q^3*s23*(s12 + s13 + s23)*
             (-(p2q^4*s13^2*(s12^2 + 5*s12*s13 - s12*s23 + 6*s13*s23 + 
                 s23^2)) + p3q^4*(s12^4 + 7*s12^3*s13 - 4*s13*s23^2*
                 (s13 + s23) + s12^2*(2*s13^2 + s13*s23 - 5*s23^2) + 
                s12*s23*(4*s13^2 - 7*s13*s23 - 4*s23^2)) + p2q*p3q^3*(
                4*s12^4 + s12^3*(12*s13 - 7*s23) - s12^2*s23*(s13 + 9*s23) + 
                s12*s23*(10*s13^2 + 11*s13*s23 + 2*s23^2) + s13*s23*
                 (4*s13^2 + 5*s13*s23 + 4*s23^2)) + p2q^3*p3q*s13*(-2*s12^3 - 
                2*s13^3 - 2*s12^2*(s13 - s23) - 9*s13^2*s23 + 2*s13*s23^2 + 
                6*s23^3 + s12*(-10*s13^2 + s13*s23 + 7*s23^2)) + 
              p2q^2*p3q^2*(3*s12^4 + 3*s12^3*(s13 - s23) + s12^2*(-3*s13^2 + 
                  4*s13*s23 - 4*s23^2) + s12*(-5*s13^3 + 2*s13^2*s23 + 
                  17*s13*s23^2 + 2*s23^3) + s13*(-2*s13^3 - 3*s13^2*s23 + 
                  4*s13*s23^2 + 10*s23^3))) + 
            p1q^2*(-(p2q^5*s13^3*(s12^2*(2*s13 - 3*s23) + s23*(7*s13^2 + 
                   2*s13*s23 - 5*s23^2) + 2*s12*(s13^2 + 3*s13*s23 - 
                   4*s23^2))) + p3q^5*s12*(s12^4*(2*s13 - s23) - 
                4*s13*s23^2*(s13 + s23)^2 + 2*s12^3*(s13^2 - 5*s13*s23 - 
                  2*s23^2) - s12^2*s23*(13*s13^2 + 20*s13*s23 + 5*s23^2) - 
                2*s12*s23*(s13^3 + 6*s13^2*s23 + 6*s13*s23^2 + s23^3)) + 
              p2q*p3q^4*(s12^5*(4*s13 - 6*s23) + 4*s13^2*s23^2*(s13 + s23)^
                  2 + 4*s12*s13^2*s23*(s13^2 + 5*s13*s23 + 4*s23^2) - 
                s12^4*(2*s13^2 + 27*s13*s23 + 10*s23^2) - 2*s12^3*
                 (3*s13^3 + 12*s13^2*s23 + 13*s13*s23^2 + s23^3) + 
                s12^2*s23*(11*s13^3 + 22*s13^2*s23 + 5*s13*s23^2 + 
                  2*s23^3)) + p2q^4*p3q*s13^2*(s12^3*(6*s13 - 3*s23) + 
                2*s12^2*(s13^2 + 10*s13*s23 + 2*s23^2) + 6*s23*(-2*s13^3 + 
                  s13^2*s23 + 4*s13*s23^2 + s23^3) + s12*(-4*s13^3 + 
                  s13^2*s23 + 42*s13*s23^2 + 13*s23^3)) + p2q^3*p3q^2*s13*(
                s12^4*(-6*s13 + 5*s23) + 2*s12^3*(3*s13^2 + 2*s13*s23 + 
                  6*s23^2) + 7*s13*s23*(-s13^3 + 2*s13^2*s23 + 5*s13*s23^2 + 
                  2*s23^3) + s12^2*(10*s13^3 + 38*s13^2*s23 + 36*s13*s23^2 + 
                  7*s23^3) + 2*s12*s13*(-s13^3 + 6*s13^2*s23 + 33*s13*s23^2 + 
                  19*s23^3)) + p2q^2*p3q^3*(s12^5*(2*s13 - 5*s23) - 
                2*s12^4*(5*s13^2 + 6*s13*s23 + 4*s23^2) + s12*s13^2*s23*
                 (9*s13^2 + 48*s13*s23 + 37*s23^2) - s12^3*(6*s13^3 + 
                  4*s13^2*s23 + 2*s13*s23^2 + s23^3) + 2*s13^2*s23*
                 (-s13^3 + 4*s13^2*s23 + 10*s13*s23^2 + 5*s23^3) + 
                2*s12^2*(3*s13^4 + 17*s13^3*s23 + 27*s13^2*s23^2 + 
                  6*s13*s23^3 + s23^4)))))/(2*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s13*s23^2*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((9*ep^2*p2q*(s12 + s13 + s23)*(-(p1q*(p3q*s12 - p2q*s13)^2*
                (s12 + s23)) + p1q^3*s23^2*(s12 + s23) - (p3q*s12 - p2q*s13)^
                2*(-(p2q*s13) + p3q*(s12 + s23)) + p1q^2*s23^2*(-(p2q*s13) + 
                p3q*(s12 + s23))))/(2*(p1q + p2q + p3q)*s13*s23*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) + (9*p2q*(s12 + s13 + s23)*
             (-(p1q^3*(p2q + p3q)*s23^2*(s12 + s23)) + p1q^2*(p2q + p3q)*s23*(
                p3q*(s12 - 2*s13 - 3*s23)*(s12 + s23) + p2q*s13*(3*s12 + 
                  4*s23)) + p1q*(-(p2q^3*s13^2*(2*s12 + 5*s23)) + 
                p3q^3*(s12 + s23)*(-2*s23*(s13 + s23) + s12*(2*s13 + 
                    3*s23)) + p2q^2*p3q*s13*(2*s12^2 + 6*s12*s23 + 
                  s23*(-s13 + 7*s23)) + p2q*p3q^2*(3*s12^2*s23 + 
                  (s13 - 2*s23)*s23^2 + s12*(-2*s13^2 - 2*s13*s23 + 
                    s23^2))) + 2*(p2q^4*s13^3 - 2*p2q^3*p3q*s13^2*
                 (s12 + s23) + p3q^4*s12*(s12 + s23)*(s13 + s23) + 
                p2q^2*p3q^2*s13*(s12^2 + s13^2 + s12*s23 + s13*s23 + s23^2) + 
                p2q*p3q^3*(s12^2*s23 - s13*s23*(s13 + s23) + s12*(-2*s13^2 - 
                    2*s13*s23 + s23^2)))))/(2*(p2q + p3q)*(p1q + p2q + p3q)*
             s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(
                p2q*s13 + p1q*s23))) - (9*ep*p2q*(s12 + s13 + s23)*
             (2*p1q^4*s23^3*(-2*p3q*s13 + p2q*(s12 - s13 + s23)) + 
              2*p2q*(p3q*s12 - p2q*s13)^2*(p2q^2*s13^2 - p2q*p3q*s13*
                 (s12 - s13 + s23) + p3q^2*(s23^2 + s12*(-s13 + s23))) - 
              p1q^3*s23^2*(p2q^2*s13*(s12 - 6*s13 + 5*s23) + p2q*p3q*
                 (5*s12^2 - s12*s13 - 8*s13^2 + 5*s12*s23 + 7*s13*s23) + 
                p3q^2*(s12^2 + 4*s23*(2*s13 + s23) + s12*(-4*s13 + 5*s23))) + 
              p1q*(p3q*s12 - p2q*s13)*(p2q^3*s13^2*(-2*s13 + 5*s23) + 
                p2q^2*p3q*s13*(4*s12*s13 - 2*s12*s23 + 11*s13*s23 - s23^2) + 
                p3q^3*s23*(s12^2 + 5*s12*s23 + 4*s23*(s13 + s23)) + 
                p2q*p3q^2*(-5*s13*s23^2 + s12*s23*(-4*s13 + 5*s23) + 
                  s12^2*(-2*s13 + 5*s23))) + p1q^2*s23*(-(p2q^3*s13^2*
                  (s12 + 6*s13 - 6*s23)) + p2q^2*p3q*s13*(-2*s12^2 + 
                  5*s12*s13 - 4*s13^2 + 4*s12*s23 + 16*s13*s23 + s23^2) + 
                p3q^3*(s12^3 + 4*s12^2*s23 + s12*(8*s13 - s23)*s23 - 
                  4*s23^2*(s13 + s23)) + p2q*p3q^2*(3*s12^3 - 2*s12^2*s23 + 
                  s12*(4*s13^2 + 4*s13*s23 - 7*s23^2) - s23*(-8*s13^2 + 
                    s13*s23 + 2*s23^2)))))/(2*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s13*s23^2*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^
               2 - 2*p3q*s12*(p2q*s13 + p1q*s23))))*p1 . E0conj + 
         ((-9*ep^2*(s12 + s13 + s23)*(-((p2q + p3q)^2*(-(p3q*s12) + p2q*s13)^
                 3*s23) - p1q^5*s23^4 + p1q^4*s23^2*(p3q*(3*s12 - 2*s23)*
                 s23 + p2q*(-2*s12^2 + 2*s12*(s13 - s23) + (5*s13 - 2*s23)*
                   s23)) + p1q^2*(p3q^3*s12*s23*(s12^2 - 6*s12*s23 + 
                  3*s23^2) + p2q*p3q^2*(2*s12^4 + 3*s12^2*(3*s13 - 2*s23)*
                   s23 + 5*s13*s23^3 + 2*s12*s23^2*(6*s13 + s23) + 
                  2*s12^3*(s13 + 3*s23)) + p2q^3*s13*(2*s12^2*s13 + 
                  s23*(7*s13^2 - 6*s13*s23 - 3*s23^2) + 2*s12*(s13^2 + 
                    s13*s23 - 2*s23^2)) - p2q^2*p3q*(4*s12^3*s13 + 
                  2*s13*(7*s13 - s23)*s23^2 + 4*s12^2*(s13 + s23)^2 + 
                  s12*s23*(17*s13^2 + 4*s13*s23 + s23^2))) + 
              p1q^3*s23*(-(p3q^2*s23*(3*s12^2 - 6*s12*s23 + s23^2)) + 
                2*p2q*p3q*(s12^2*(2*s13 - 3*s23) + 4*s12*s13*s23 + 
                  (5*s13 - s23)*s23^2) + p2q^2*(2*s12*(-2*s13^2 + s13*s23 + 
                    s23^2) + s23*(-9*s13^2 + 6*s13*s23 + s23^2))) + 
              p1q*(p3q*s12 - p2q*s13)*(p3q^3*s12*(2*s12 - 3*s23)*s23 + 
                p2q^3*s13*(2*s13^2 + 2*s12*(s13 - s23) - 2*s13*s23 - 
                  3*s23^2) + p2q*p3q^2*(2*s12^3 + 2*s12*(2*s13 - s23)*s23 + 
                  3*s13*s23^2 + 2*s12^2*(s13 + 4*s23)) - p2q^2*p3q*
                 (s12^2*(4*s13 - 2*s23) + 2*s13*s23*(3*s13 + s23) + 
                  s12*(4*s13^2 + 6*s13*s23 + s23^2)))))/(4*(p1q + p2q + p3q)*
             s13*s23*(p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*(
                -(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*(p2q*s13*
                 (2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
              p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                  2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) + 
           (9*(p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) - p1q^3*(p2q + p3q)*
               s23^2*(s12 + s13 + s23)*(p3q*(2*s12 - 2*s13 - 3*s23) + 
                p2q*(2*s12 + 4*s13 + s23)) + p1q^2*s23*(s12 + s13 + s23)*(
                p2q^3*s13*(6*s12 + 5*s13 + 4*s23) + p2q^2*p3q*(2*s12^2 + 
                  s13^2 + 4*s12*(s13 - s23) - 4*s13*s23 - 2*s23^2) + 
                p3q^3*(s12^2 + 2*s23*(s13 + s23) - 2*s12*(2*s13 + 3*s23)) + 
                p2q*p3q^2*(3*s12^2 - 2*s13*s23 - 2*s12*(s13 + 5*s23))) + 
              2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(p2q^3*s13^2*(s12 + s13 + 
                  s23) - p2q^2*p3q*s13*(s12 + s23)*(s12 + s13 + s23) - 
                p3q^3*s12*(s13 + s23)*(s12 + s13 + s23) + p2q*p3q^2*
                 (-(s12^2*s23) + s13*(s13 + s23)^2 + s12*(s13^2 - s23^2))) + 
              p1q*(4*p2q^3*p3q*s13*(s12 + s23)^2*(s12 + s13 + s23) - 
                p2q^4*s13^2*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 9*s12*s23 + 
                  7*s13*s23 + 5*s23^2) + p3q^4*s12*(-4*s23*(s13 + s23)^2 + 
                  s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + s13*s23 - s23^2)) + 
                4*p2q*p3q^3*(s13*s23*(s13 + s23)^2 + s12^3*(s13 + 2*s23) + 
                  s12*s23*(s13^2 - s23^2) + s12^2*(s13^2 + 3*s13*s23 + 
                    s23^2)) + p2q^2*p3q^2*(s12^3*(2*s13 + 5*s23) - 
                  s12*s13^2*(6*s13 + 7*s23) - s13^2*(2*s13^2 + 5*s13*s23 + 
                    3*s23^2) + s12^2*(-2*s13^2 + 7*s13*s23 + 5*s23^2)))))/
            (4*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           (9*ep*(p1q^7*s23^4*(s12 + s13 + s23)^2 + (p2q + p3q)^2*
               (-(p3q*s12) + p2q*s13)^3*(s12 + s13 + s23)*(4*p2q^2*s13^2 + 
                p3q^2*s23*(s12 + s13 + s23) + p2q*p3q*(s12*(-4*s13 + s23) + 
                  s23*(-3*s13 + s23))) - p1q^6*s23^3*(s12 + s13 + s23)*(
                p2q*(3*s12*s13 + 3*s13^2 - 4*s12*s23 + 2*s13*s23 - 3*s23^2) + 
                p3q*(3*s12^2 + s12*(3*s13 - 2*s23) - 2*s23*(s13 + 2*s23))) + 
              p1q^5*s23^2*(s12 + s13 + s23)*(p3q^2*(3*s12^3 + s12^2*
                   (3*s13 - 11*s23) - 3*s12*s23*(2*s13 + s23) + 2*s23^2*
                   (s13 + 3*s23)) + p2q*p3q*(s12^2*(2*s13 - 11*s23) + 
                  s12*(2*s13^2 - 7*s13*s23 + 2*s23^2) + s23*(-4*s13^2 - 
                    3*s13*s23 + 6*s23^2)) - p2q^2*(-3*s13^3 + 4*s12^2*s23 + 
                  8*s13*s23^2 + 4*s23^3 + s12*(-3*s13^2 + 9*s13*s23 + 
                    6*s23^2))) - p1q^3*s23*(s12 + s13 + s23)*(
                p3q^4*(4*s12^4 + s12^3*(2*s13 - 17*s23) - 6*s12^2*s13*s23 - 
                  s23^3*(s13 + s23) + 2*s12*s23^2*(3*s13 + 5*s23)) + 
                p2q^4*s13*(-2*s12^2*s13 + s13^3 - 12*s13^2*s23 + 
                  13*s13*s23^2 - 6*s23^3 - s12*(7*s13^2 + s23^2)) + 
                p2q*p3q^3*(5*s12^4 + s12^3*(5*s13 - 16*s23) + s23^2*
                   (28*s13^2 + 18*s13*s23 - 7*s23^2) + s12*s23*(32*s13^2 + 
                    59*s13*s23 + s23^2) + s12^2*(4*s13^2 + 33*s13*s23 + 
                    9*s23^2)) - p2q^3*p3q*(4*s12^3*s13 + s12^2*(5*s13^2 + 
                    2*s13*s23 + s23^2) + s23*(27*s13^3 - 22*s13^2*s23 + 
                    6*s13*s23^2 - 3*s23^3) + s12*(13*s13^3 - 8*s13^2*s23 - 
                    11*s13*s23^2 + s23^3)) + p2q^2*p3q^2*(6*s12^4 + 
                  s12^3*(7*s13 - 6*s23) + s12^2*(3*s13^2 + 12*s13*s23 - 
                    16*s23^2) + s12*(-6*s13^3 + 19*s13^2*s23 + 33*s13*s23^2 - 
                    18*s23^3) + s23*(-18*s13^3 + 29*s13^2*s23 + 19*s13*
                     s23^2 + s23^3))) + p1q^2*(s12 + s13 + s23)*(
                p3q^5*s12*s23*(-6*s12^3 - 3*s23^2*(s13 + s23) + s12*s23*
                   (6*s13 + 7*s23) + s12^2*(-2*s13 + 9*s23)) + p2q^5*s13^2*
                 (s23*(-13*s13^2 + 13*s13*s23 - 6*s23^2) + s12*(-4*s13^2 + 
                    3*s13*s23 + s23^2)) + p2q*p3q^4*(s12^4*(4*s13 - 11*s23) - 
                  17*s13*s23^3*(s13 + s23) + s12^3*s23*(s13 + 6*s23) - 
                  s12^2*s23*(4*s13^2 + 26*s13*s23 + 5*s23^2) - s12*s23^2*
                   (24*s13^2 + 52*s13*s23 + 9*s23^2)) + p2q^3*p3q^2*
                 (s12^3*(-12*s13^2 + 13*s13*s23 + s23^2) + s12^2*(12*s13^3 - 
                    4*s13^2*s23 + 29*s13*s23^2 + 3*s23^3) + s13*s23*
                   (-8*s13^3 + 44*s13^2*s23 + 9*s13*s23^2 + 5*s23^3) + 
                  s12*s23*(39*s13^3 + 12*s13^2*s23 + 12*s13*s23^2 + 
                    5*s23^3)) + p2q^2*p3q^3*(s12^4*(4*s13 - 13*s23) + 
                  s13*s23^2*(26*s13^2 + 5*s13*s23 - 11*s23^2) - s12^2*s23*
                   (17*s13^2 + 13*s13*s23 + s23^2) - 2*s12^3*(6*s13^2 + 
                    2*s13*s23 + 5*s23^2) + s12*s23*(14*s13^3 + 5*s13^2*s23 - 
                    20*s13*s23^2 + 7*s23^3)) + p2q^4*p3q*s13*
                 (3*s12^2*(4*s13^2 - s13*s23 + 2*s23^2) + s12*(-4*s13^3 + 
                    32*s13^2*s23 + 7*s23^3) + s23*(-17*s13^3 + 43*s13^2*s23 - 
                    3*s13*s23^2 + 7*s23^3))) - p1q^4*s23*(s12 + s13 + s23)*(
                p3q^3*(s12^4 + s12^3*(s13 - 12*s23) - 6*s12^2*(s13 - 2*s23)*
                   s23 - 2*s23^3*(s13 + 2*s23) + s12*s23^2*(6*s13 + 
                    11*s23)) - p2q*p3q^2*(s12^3*(s13 + 12*s23) + 
                  s12^2*(s13^2 + 2*s13*s23 - 10*s23^2) - 2*s23^2*(6*s13^2 + 
                    s13*s23 - 5*s23^2) + s12*s23*(-8*s13^2 - 13*s13*s23 + 
                    6*s23^2)) + p2q^3*(s13^4 - 2*s12^2*s13*s23 - 2*s13^3*
                   s23 - 2*s13^2*s23^2 - 11*s13*s23^3 + 2*s23^4 + 
                  s12*(s13^3 - 2*s13^2*s23 - 7*s13*s23^2 + s23^3)) - 
                p2q^2*p3q*(10*s12^3*s23 + s12^2*(s13^2 + 10*s13*s23 + 
                    13*s23^2) - s23*(-2*s13^3 + 15*s13^2*s23 + 5*s13*s23^2 + 
                    4*s23^3) + s12*(s13^3 - 4*s13^2*s23 - 2*s13*s23^2 + 
                    8*s23^3))) - p1q*(-(p3q*s12) + p2q*s13)*(p2q^5*s13^2*
                 (-4*s13^3 + 7*s13^2*s23 + s12*(16*s13 - s23)*s23 + 
                  9*s13*s23^2 - 2*s23^3 + s12^2*(4*s13 + s23)) + 
                p3q^5*s12*s23*(-4*s12^3 + 3*s23*(s13 + s23)^2 - 2*s12^2*
                   (3*s13 + 2*s23) + s12*(-2*s13^2 + s13*s23 + 3*s23^2)) + 
                p2q*p3q^4*(s12^4*(8*s13 - 9*s23) + s13*s23^2*(s13 + s23)^2 + 
                  2*s12^3*(4*s13^2 + 3*s13*s23 - 5*s23^2) + s12^2*s23*
                   (9*s13^2 + 16*s13*s23 + 4*s23^2) + s12*s23*(2*s13^3 + 
                    13*s13^2*s23 + 16*s13*s23^2 + 5*s23^3)) + p2q^4*p3q*s13*
                 (-8*s12^3*s13 - 4*s13^4 + 26*s13^3*s23 + 26*s13^2*s23^2 + 
                  s13*s23^3 + 5*s23^4 + s12^2*(12*s13^2 - 16*s13*s23 + 
                    7*s23^2) + s12*(16*s13^3 + 42*s13^2*s23 - 5*s13*s23^2 + 
                    12*s23^3)) + p2q^2*p3q^3*(2*s12^4*(6*s13 - 5*s23) + 
                  s12^3*(-8*s13^2 + 6*s13*s23 - 20*s23^2) - s13*s23^2*
                   (10*s13^2 + 11*s13*s23 + s23^2) - s12*s23*(26*s13^3 + 
                    38*s13^2*s23 + 6*s13*s23^2 + 3*s23^3) - s12^2*(20*s13^3 + 
                    42*s13^2*s23 + 8*s13*s23^2 + 13*s23^3)) + p2q^3*p3q^2*
                 (s12^4*(4*s13 - s23) - 2*s12^3*(12*s13^2 - 5*s13*s23 + 
                    s23^2) - 2*s12^2*(6*s13^3 + 23*s13^2*s23 - 10*s13*s23^2 + 
                    s23^3) + s13*s23*(23*s13^3 + 18*s13^2*s23 + 2*s13*s23^2 + 
                    7*s23^3) + s12*(16*s13^4 + 14*s13^3*s23 - 16*s13^2*
                     s23^2 + 20*s13*s23^3 - s23^4)))))/(4*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s13*s23^2*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + 
     ((-1/8*((s12 + s13 + s23)*(2*(p3q^2*s12^2 + p2q^2*s13^2) + 
             p1q*(p3q*s12 + p2q*s13)*(s12 + s13 - 2*s23) - p1q^2*(s12 + s13)*
              s23))/((p1q + p2q + p3q)*s12*s13) + 
         (ep^2*(s12 + s13)*(s12 + s13 + s23)*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23)))/
          (8*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
         (ep*(s12 + s13 + s23)*((p2q + p3q)*(s12 - s13)*(p3q*s12 - p2q*s13)^
              2 - p1q^3*s23*(s12^2 + s12*s13 + 2*s13*s23) + 
            p1q*(-2*p2q^2*s13*(s13^2 + s12*s23 - s13*s23) + p3q^2*s12*(
                2*s12^2 - s12*s23 + 3*s13*s23) + p2q*p3q*(3*s13^2*s23 - 
                2*s12^2*(s13 + s23) + s12*s13*(2*s13 + s23))) + 
            p1q^2*(p3q*(s12^3 + s12^2*(s13 - 2*s23) + 2*s12*s13*s23 - 
                2*s13*s23^2) + p2q*(s12^2*s13 + s13*(4*s13 - s23)*s23 + 
                s12*(s13^2 + s23^2)))))/(8*(p1q + p2q + p3q)*s12*s13*
           (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*E0 . E0conj + 
       ((-2*(p2q + p3q)*(-(p3q^3*s12^3) + p2q*p3q^2*s12^2*s13 - 
             p2q^2*p3q*s12*s13^2 + p2q^3*s13^3)*(s12 + s13 + s23) + 
           p1q^4*(s12 + s13)*s23^2*(s12 + s13 + s23) + 
           p1q*(p2q^2*p3q*(s12 - s13)*s13^2*(s12 + s13 + s23) + 
             p2q*p3q^2*s12^2*(5*s12 + 3*s13)*(s12 + s13 + s23) + 
             p3q^3*s12^2*(3*s12^2 + 4*s12*s13 + s13^2 - s12*s23 - 3*s13*s23 - 
               4*s23^2) + p2q^3*s13^2*(3*s12^2 + 4*s12*s13 + s13^2 + 7*s12*
                s23 + 5*s13*s23 + 4*s23^2)) - p1q^3*s23*(s12 + s13 + s23)*
            (p3q*(2*s12^2 + 2*s12*s13 - 3*s12*s23 - s13*s23) + 
             p2q*(2*s12^2 + s13*(2*s13 - s23) + s12*(4*s13 + s23))) + 
           p1q^2*(s12 + s13 + s23)*(p2q^2*s13*(2*s12^2 + 3*s12*s13 + s13^2 - 
               2*s12*s23 - 2*s13*s23 - 2*s23^2) + p3q^2*s12*(s12^2 + s12*
                (s13 - 6*s23) + 2*s23*(-s13 + s23)) + 2*p2q*p3q*
              (s12^3 + 2*s12^2*(s13 - s23) + s13*s23^2 + s12*(s13^2 - 
                 2*s13*s23 - s23^2))))/(4*(p1q + p2q + p3q)*s12*s13*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - 
         (ep^2*((p2q + p3q)^2*(s12 - s13)*(-(p3q*s12) + p2q*s13)^3*
             (s12 + s13 + s23) + p1q^5*s23^2*(2*s12^3 + s13*s23*(s13 + s23) + 
              s12^2*(4*s13 + 5*s23) + s12*(2*s13^2 + 6*s13*s23 + 3*s23^2)) - 
            p1q*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
             (p2q^2*s13*(2*s12^2 - 4*s12*s13 - 2*s13^2 + 3*s12*s23 - 
                3*s13*s23) + p3q^2*s12*(4*s12*s13 + 5*s12*s23 - s13*s23) + 
              p2q*p3q*(-2*s12^3 - 2*s12*s13*(s13 - s23) + s13^2*s23 + 
                s12^2*(4*s13 + s23))) - p1q^4*s23*(s12 + s13 + s23)*
             (p3q*(4*s12^3 - 2*s13*s23^2 - 3*s12*s23*(s13 + 2*s23) + 
                s12^2*(4*s13 + 3*s23)) + p2q*(4*s12^3 + 8*s12^2*(s13 + s23) + 
                s13*s23*(3*s13 + 2*s23) + s12*(4*s13^2 + 13*s13*s23 + 
                  2*s23^2))) + p1q^2*(s12 + s13 + s23)*
             (p3q^3*s12*(3*s12^3 - s13*s23^2 + s12^2*(5*s13 + 6*s23) - 
                s12*s23*(6*s13 + 7*s23)) + p2q*p3q^2*(4*s12^4 + s13^2*s23^2 + 
                s12*s13*s23*(8*s13 + s23) + s12^3*(11*s13 + 14*s23) + 
                s12^2*(s13^2 + 6*s13*s23 - 2*s23^2)) - p2q^3*s13*(
                s12^2*(8*s13 - 4*s23) + s12*(7*s13^2 + 10*s13*s23 - 
                  3*s23^2) + s13*(s13^2 + 6*s13*s23 + 3*s23^2)) + 
              p2q^2*p3q*(2*s13^2*s23*(-s13 + s23) + 4*s12^3*(s13 + s23) + 
                s12^2*(-7*s13^2 + 12*s13*s23 + s23^2) + s12*s13*(-5*s13^2 + 
                  2*s13*s23 + 5*s23^2))) + p1q^3*(s12 + s13 + s23)*
             (p3q^2*(2*s12^4 + s12^3*(2*s13 - 3*s23) + 3*s12*s23^3 + 
                s13*s23^3 - 3*s12^2*s23*(3*s13 + 4*s23)) + 2*p2q*p3q*(
                2*s12^4 - s13*s23^2*(s13 + s23) + 2*s12^3*(2*s13 + s23) + 
                s12^2*(2*s13^2 + s13*s23 - 5*s23^2) + s12*s23*(s13^2 - 
                  6*s13*s23 - s23^2)) + p2q^2*(4*s12^3*s13 + 2*s12^2*
                 (3*s13^2 + 8*s13*s23 - s23^2) + s13*s23*(3*s13^2 + 
                  6*s13*s23 + s23^2) + s12*(2*s13^3 + 17*s13^2*s23 + 
                  8*s13*s23^2 - s23^3)))))/(4*(p1q + p2q + p3q)*s12*s13*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))) - 
         (ep*(s12 + s13 + s23)*(p1q^5*s23^2*(s12^2 + 4*s23^2 + 
              s12*(s13 + 4*s23)) + (p2q + p3q)*(-(p3q*s12) + p2q*s13)*
             (p2q^3*(3*s12 - s13)*s13^2 - p3q^3*s12^2*(s12 + s13) + 
              p2q*p3q^2*s12*(s12 - 2*s13)*(3*s12 - s13 + 4*s23) - 
              p2q^2*p3q*s13*(6*s12^2 - 9*s12*s13 + s13^2 + 4*s12*s23)) - 
            p1q^4*s23*(p3q*(2*s12^3 - 3*s12*s13*s23 - 8*s23^3 + 
                s12^2*(2*s13 + 5*s23)) + p2q*(2*s12^3 + 9*s13*s23^2 + 
                s12^2*(4*s13 + 9*s23) + s12*(2*s13^2 + 5*s13*s23 + 
                  9*s23^2))) + p1q*(p3q^4*s12^2*(3*s12^2 + 3*s12*s13 + 
                2*s12*s23 - 2*s13*s23 + 4*s23^2) + p2q^4*s13^2*(-2*s12^2 + 
                3*s12*(s13 - 3*s23) + 3*s13*(-s13 + s23)) + p2q^3*p3q*s13*(
                4*s12^3 + s12^2*(-29*s13 + 6*s23) + s13^2*(s13 + 11*s23) + 
                s12*(8*s13^2 - 19*s13*s23 + 8*s23^2)) + p2q^2*p3q^2*(
                -2*s12^4 - 4*s13^2*s23^2 + s12^3*(25*s13 + 3*s23) + 
                s12*s13*(s13^2 - 4*s13*s23 + 8*s23^2) + s12^2*(-28*s13^2 + 
                  23*s13*s23 + 8*s23^2)) + p2q*p3q^3*s12*(s12^3 + 
                2*s13*(s13 - 4*s23)*s23 + s12^2*(20*s13 + 9*s23) + 
                s12*(-5*s13^2 + 7*s13*s23 + 16*s23^2))) + 
            p1q^3*(p3q^2*(s12^4 + s12^3*(s13 - 2*s23) + 3*s12*(s13 - 4*s23)*
                 s23^2 + 4*s23^4 - 3*s12^2*s23*(2*s13 + 3*s23)) + 
              p2q*p3q*(2*s12^4 + s13*(s13 - 9*s23)*s23^2 + 4*s12^3*
                 (s13 + s23) - s12*s23^2*(2*s13 + 21*s23) + s12^2*
                 (2*s13^2 - 12*s13*s23 - 11*s23^2)) + p2q^2*(2*s12^3*s13 + 
                s13*s23^2*(3*s13 + s23) + s12^2*(3*s13^2 + 10*s13*s23 - 
                  2*s23^2) + s12*(s13^3 - 2*s13^2*s23 + 21*s13*s23^2 - 
                  3*s23^3))) + p1q^2*(p3q^3*s12*(3*s12^3 + (s13 - 8*s23)*
                 s23^2 + s12*s23*(-6*s13 + s23) + s12^2*(3*s13 + 2*s23)) + 
              p2q*p3q^2*(5*s12^4 + s13^2*s23^2 + s12^2*s23*(-9*s13 + 
                  14*s23) + s12^3*(17*s13 + 19*s23) + s12*s23*(4*s13^2 - 
                  5*s13*s23 - 12*s23^2)) + p2q^3*s13*(-(s12^2*(s13 - 
                   4*s23)) + s13*(5*s13 - 3*s23)*s23 + 3*s12*(s13^2 - 
                  5*s13*s23 + 3*s23^2)) + p2q^2*p3q*(4*s12^3*(3*s13 + s23) - 
                2*s13^2*s23*(s13 + 4*s23) + s12^2*(-7*s13^2 + 16*s13*s23 + 
                  3*s23^2) - s12*(3*s13^3 + 6*s13^2*s23 - 27*s13*s23^2 + 
                  4*s23^3)))))/(4*(p1q + p2q + p3q)*s12*s13*
           (p1q^3*s23^2*(s12 + s23) + (p3q*s12 - p2q*s13)^2*
             (-(p2q*s13) + p3q*(s12 + s23)) - p1q^2*s23*
             (p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - s23^2)) + 
            p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - s12*s23 - 
                2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + s23^2)))))*
        p1 . E0conj*p2 . E0 + 
       ((p1q*(s12 + s13 + s23)*(2*(p2q + p3q)*(s12 + s13)*(p3q^2*s12^2 + 
              p2q^2*s13^2) + p1q*(p3q^2*s12*(s12^2 + 2*s12*(s13 - 2*s23) + 
                s13*(s13 - 2*s23)) + p2q^2*s13*(s12^2 + s13*(s13 - 4*s23) + 
                2*s12*(s13 - s23)) + p2q*p3q*(s12 + s13)^2*(s12 + s13 - 
                2*s23)) + p1q^3*(s12 + s13)*s23^2 - p1q^2*s23*
             (p2q*(s12^2 + 3*s12*s13 + 2*s13*(s13 - s23)) + p3q*(2*s12^2 + 
                3*s12*s13 + s13^2 - 2*s12*s23))))/(2*(p1q + p2q + p3q)*s12*
           s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) - (ep^2*p1q*(s12 + s13)*(s12 + s13 + s23)*
           ((p2q + p3q)^2*s13*(p3q*s12 - p2q*s13)^2 + p1q^4*s23^2*
             (s12 + s23) - p1q*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*
             (p3q*s12*(s12 + 3*s13 + s23) + p2q*s13*(3*s12 + s13 + 3*s23)) - 
            p1q^3*s23*(p2q*(2*s12^2 + 2*s12*s13 + 3*s12*s23 + 3*s13*s23 + 
                s23^2) + p3q*(2*s12^2 + (s13 - s23)*s23 + s12*(2*s13 + 
                  s23))) + p1q^2*(2*p2q*p3q*(s12^2 + 3*s12*s13 + s13^2)*(
                s12 + s23) + p3q^2*(s12^3 + s12^2*(2*s13 - s23) - s13*s23^2 - 
                2*s12*s23*(s13 + s23)) + p2q^2*s13*(2*s12^2 + 
                3*s23*(s13 + s23) + s12*(s13 + 6*s23)))))/
          (2*(p1q + p2q + p3q)*s12*s13*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))) - (ep*(s12 + s13 + s23)*(2*p3q*(p2q + p3q)^2*s12*
             s13*(p3q*s12 - p2q*s13)^2 + 2*p1q^5*s23^3*(s12 - s13 + s23) + 
            p1q*(p2q + p3q)*s13*(-(p3q*s12) + p2q*s13)*
             (p2q^2*s13*(s12 + s13) - p3q^2*s12*(5*s12 + s13 - 4*s23) + 
              p2q*p3q*(-9*s12^2 + s13^2 - 4*s12*(s13 + s23))) - 
            p1q^4*s23*(p2q*(s12^3 + s12*s23*(2*s13 + 3*s23) + 
                s12^2*(s13 + 4*s23) + s13*s23*(-6*s13 + 7*s23)) + 
              p3q*(2*(3*s13 - s23)*s23^2 + s12^2*(s13 + 4*s23) + 
                s12*(s13^2 - 2*s13*s23 + 2*s23^2))) + 
            p1q^2*(p2q^3*s13^2*(s12 + s13)*(2*s13 - 5*s23) + 
              p3q^3*s12*(-(s13*(s13 - 6*s23)*s23) + 2*s12^2*(2*s13 + s23) + 
                s12*(2*s13^2 - 7*s13*s23 + 2*s23^2)) + p2q^2*p3q*s13*(
                6*s12^3 + 2*s13*s23*(-5*s13 + s23) + s12^2*(-2*s13 + 5*s23) + 
                s12*(-6*s13^2 - 5*s13*s23 + 6*s23^2)) + p2q*p3q^2*(2*s12^4 - 
                s13^2*(s13 - 4*s23)*s23 + 2*s12^3*(8*s13 + 3*s23) + 
                2*s12^2*(4*s13^2 + s13*s23 + 2*s23^2) + s12*s13*(-2*s13^2 + 
                  3*s13*s23 + 8*s23^2))) + p1q^3*(p2q^2*s13*(s12^3 + 
                3*s13*s23*(-2*s13 + 3*s23) + s12^2*(s13 + 4*s23) + 
                s12*s23*(-2*s13 + 7*s23)) + p3q^2*(-4*s13*s23^3 + 
                s12^3*(s13 + 2*s23) + s12^2*(s13^2 - 4*s13*s23 - 2*s23^2) - 
                2*s12*s23*(s13^2 - 4*s13*s23 + 2*s23^2)) + p2q*p3q*(s12^4 + 
                2*s13*(7*s13 - 2*s23)*s23^2 + s12^3*(5*s13 + 2*s23) + 
                s12^2*(5*s13^2 + 2*s13*s23 - 3*s23^2) + s12*(s13^3 + 
                  4*s13^2*s23 + 11*s13*s23^2 - 4*s23^3)))))/
          (2*(p1q + p2q + p3q)*s12*s13*(p1q^3*s23^2*(s12 + s23) + 
            (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
            p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*(s12^2 - 
                s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + s12*s23 + 
                s23^2)))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((p2q*(s12 + s13 + s23)*(-(p1q^3*(s12 + s13)*s23*
                (s12 + s23)) + 2*(p3q^2*s12^2 + p2q^2*s13^2)*(-(p2q*s13) + 
                p3q*(s12 + s23)) + p1q*(p2q*p3q*s13*(s12 + s13 - 2*s23)*s23 + 
                p3q^2*s12*(3*s12 + s13 - 2*s23)*(s12 + s23) + p2q^2*s13^2*
                 (s12 - s13 + 4*s23)) + p1q^2*(p3q*(s12 + s23)*(s12^2 + 
                  s12*(s13 - 3*s23) - s13*s23) + p2q*s13*(s12^2 + s12*s13 + 
                  2*(s13 - s23)*s23))))/(2*(p1q + p2q + p3q)*s12*s13*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) - (ep^2*p2q*(s12 + s13 + s23)*
             ((p2q + p3q)*s13*(p3q*s12 - p2q*s13)^2 - p1q^3*s12*s23*(s12 + 
                s13 + s23) + p1q*(-(p2q^2*s13^2*(s12 + 2*s23)) + 
                p3q^2*s12*(s12^2 + 2*s12*s13 + s12*s23 - s13*s23) - 
                p2q*p3q*s13*(2*s12*s13 + s12*s23 + s13*s23)) + 
              p1q^2*(p3q*s12*(s12^2 + s12*s13 - s23*(2*s13 + s23)) + 
                p2q*s13*(s12^2 + s23^2 + s12*(s13 + 2*s23)))))/
            ((p1q + p2q + p3q)*s12*s13*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
              2*p3q*s12*(p2q*s13 + p1q*s23))) - (ep*p2q*(s12 + s13 + s23)*
             (2*p3q*(2*p2q*p3q*s12*s13*(s12 - s13 + s23) + p2q^2*s13^2*
                 (-3*s12 + s13 + s23) + p3q^2*s12^2*(s12 + s13 + s23)) - 
              p1q^3*s23*(s12^2 + s23*(-s13 + 2*s23) + s12*(s13 + 3*s23)) + 
              p1q*(p2q^2*s13^2*(s12 + s13 - 2*s23) + p2q*p3q*s13*(4*s12^2 - 
                  3*s13*s23 + s12*(-4*s13 + s23)) + 3*p3q^2*s12*(s12^2 - 
                  s13*s23 + s12*(s13 + s23))) + p1q^2*(p2q*s13*(s12^2 - 
                  2*(s13 - 2*s23)*s23 + s12*(s13 + 2*s23)) + 
                p3q*(s12^3 + s12^2*s13 + (s13 - 2*s23)*s23^2 - s12*s23*
                   (4*s13 + 3*s23)))))/(2*(p1q + p2q + p3q)*s12*s13*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))))*p1 . E0conj + 
         ((-2*(p2q + p3q)*(-(p3q^3*s12^3) + p2q*p3q^2*s12^2*s13 - p2q^2*p3q*
                s12*s13^2 + p2q^3*s13^3)*(s12 + s13 + s23) + 
             p1q^4*(s12 + s13)*s23^2*(s12 + s13 + s23) + 
             p1q*(p2q^2*p3q*(s12 - s13)*s13^2*(s12 + s13 + s23) + p2q*p3q^2*
                s12^2*(5*s12 + 3*s13)*(s12 + s13 + s23) + p3q^3*s12^2*
                (3*s12^2 + 4*s12*s13 + s13^2 - s12*s23 - 3*s13*s23 - 
                 4*s23^2) + p2q^3*s13^2*(3*s12^2 + 4*s12*s13 + s13^2 + 
                 7*s12*s23 + 5*s13*s23 + 4*s23^2)) - p1q^3*s23*
              (s12 + s13 + s23)*(p3q*(2*s12^2 + 2*s12*s13 - 3*s12*s23 - 
                 s13*s23) + p2q*(2*s12^2 + s13*(2*s13 - s23) + 
                 s12*(4*s13 + s23))) + p1q^2*(s12 + s13 + s23)*
              (p2q^2*s13*(2*s12^2 + 3*s12*s13 + s13^2 - 2*s12*s23 - 
                 2*s13*s23 - 2*s23^2) + p3q^2*s12*(s12^2 + s12*(s13 - 
                   6*s23) + 2*s23*(-s13 + s23)) + 2*p2q*p3q*(s12^3 + 
                 2*s12^2*(s13 - s23) + s13*s23^2 + s12*(s13^2 - 2*s13*s23 - 
                   s23^2))))/(4*(p1q + p2q + p3q)*s12*s13*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
           (ep^2*(s12 + s13)*(s12 + s13 + s23)*(-((p2q + p3q)^2*
                (-(p3q*s12) + p2q*s13)^3) - p1q^5*s23^3 + p1q*(p2q + p3q)*(
                -(p3q*s12) + p2q*s13)*(p3q^2*s12*(-2*s12 + 3*s23) + 
                p2q^2*s13*(2*s12 + 4*s13 + 3*s23) + p2q*p3q*(-2*s12^2 - 
                  3*s13*s23 + s12*(-2*s13 + s23))) - p1q^4*s23*(
                p3q*s23*(-3*s12 + 2*s23) + p2q*(4*s12^2 + 6*s12*s23 + 
                  s23*(-3*s13 + 4*s23))) + p1q^2*(p2q^3*s13*(-6*s12*s13 + 
                  s13^2 - 4*s12*s23 - 12*s13*s23 - 3*s23^2) + p3q^3*s12*
                 (s12^2 - 6*s12*s23 + 3*s23^2) + p2q*p3q^2*(6*s12^3 + 
                  11*s12^2*s13 + 5*s13*s23^2 + 2*s12*s23*(8*s13 + 3*s23)) - 
                p2q^2*p3q*(4*s12^2*s23 + 2*s13*(5*s13 - 3*s23)*s23 + 
                  s12*(13*s13^2 - 4*s13*s23 + s23^2))) + 
              p1q^3*(-(p3q^2*s23*(3*s12^2 - 6*s12*s23 + s23^2)) + 
                2*p2q*p3q*(2*s12^3 + 4*s12^2*s13 + 5*s12*s13*s23 + 
                  4*s13*s23^2 - 2*s23^3) + p2q^2*(4*s12^2*s13 + 2*s12*s23*
                   (6*s13 + s23) + s23*(-3*s13^2 + 12*s13*s23 + s23^2)))))/
            (4*(p1q + p2q + p3q)*s12*s13*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))) - (ep*(s12 + s13 + s23)*
             (-(p1q^5*s23^2*(s12^2 + s12*s13 + 2*s13*s23)) - (p2q + p3q)*(
                -(p3q*s12) + p2q*s13)*(p3q^3*s12^2*(-s12 + s13) + 
                p2q^3*s13^2*(3*s12 + s13) + p2q^2*p3q*s13*(-6*s12^2 - 
                  11*s12*s13 + s13^2 - 4*s12*s23) + p2q*p3q^2*s12*
                 (3*s12^2 + 11*s12*s13 - 2*s13^2 + 4*s12*s23 + 8*s13*s23)) + 
              p1q^4*s23*(p3q*(2*s12^3 + s12^2*(2*s13 - 3*s23) + 3*s12*s13*
                   s23 - 4*s13*s23^2) + p2q*(-2*s12^3 - 7*s12^2*s23 + 
                  s12*(2*s13^2 + s13*s23 - 7*s23^2) + s23*(6*s13^2 + 
                    s13*s23 - 4*s23^2))) + p1q*(p2q^4*s13^2*(2*s12^2 - 
                  3*s12*s13 - s13^2 + 9*s12*s23 + 7*s13*s23) + p3q^4*s12^2*
                 (-3*s12^2 - 4*s13*s23 + s12*(s13 + 2*s23)) + p2q^2*p3q^2*
                 (2*s12^4 + s12^3*(7*s13 - 3*s23) - 2*s13^2*s23*(s13 + 
                    4*s23) - s12*s13^2*(5*s13 + 16*s23) + s12^2*(-32*s13^2 + 
                    7*s13*s23 - 8*s23^2)) + p2q*p3q^3*s12*(7*s12^3 + 
                  6*s13^2*s23 + s12^2*(32*s13 + 11*s23) + s12*(s13^2 + 
                    17*s13*s23 - 4*s23^2)) - p2q^3*p3q*s13*(4*s12^3 + 
                  s12^2*(11*s13 + 6*s23) + s13*(-3*s13^2 - 13*s13*s23 + 
                    4*s23^2) + s12*(-4*s13^2 + 9*s13*s23 + 8*s23^2))) + 
              p1q^3*(-(p3q^2*(s12^4 + s12^3*(s13 - 6*s23) + 3*s12^2*s23^2 - 
                   9*s12*s13*s23^2 + 2*s13*s23^3)) + p2q*p3q*(2*s12^4 + 
                  8*s12^3*s13 + s23^2*(11*s13^2 + 9*s13*s23 - 4*s23^2) + 
                  3*s12^2*(2*s13^2 + 4*s13*s23 - 3*s23^2) + s12*s23*
                   (8*s13^2 + 18*s13*s23 - 3*s23^2)) + p2q^2*(2*s12^3*s13 + 
                  s12^2*(s13^2 + 6*s13*s23 + 2*s23^2) + s13*s23*(-6*s13^2 - 
                    3*s13*s23 + 13*s23^2) - s12*(s13^3 + 2*s13^2*s23 - 
                    11*s13*s23^2 - 3*s23^3))) + p1q^2*(-(p3q^3*s12*
                  (3*s12^3 + s12^2*(s13 - 6*s23) - 5*s13*s23^2 + s12*s23*
                    (6*s13 + s23))) + p2q^3*s13*(s12^2*(s13 - 4*s23) + 
                  s13*(2*s13^2 + 3*s13*s23 - 15*s23^2) + s12*(s13^2 - 
                    s13*s23 - 9*s23^2)) + p2q*p3q^2*(7*s12^4 + 9*s12^3*
                   (3*s13 + s23) + s13*s23^2*(5*s13 + 8*s23) + s12^2*
                   (10*s13^2 + 21*s13*s23 - 6*s23^2) + s12*s23*(12*s13^2 + 
                    17*s13*s23 + 4*s23^2)) + p2q^2*p3q*(s12^3*(8*s13 - 
                    4*s23) - 2*s13*s23*(5*s13^2 + 10*s13*s23 - 4*s23^2) - 
                  3*s12^2*(3*s13^2 - 4*s13*s23 + s23^2) + s12*(-11*s13^3 - 
                    22*s13^2*s23 + 3*s13*s23^2 + 4*s23^3)))))/
            (4*(p1q + p2q + p3q)*s12*s13*(p1q^3*s23^2*(s12 + s23) + 
              (p3q*s12 - p2q*s13)^2*(-(p2q*s13) + p3q*(s12 + s23)) - 
              p1q^2*s23*(p2q*s13*(2*s12 + 3*s23) + p3q*(2*s12^2 + s12*s23 - 
                  s23^2)) + p1q*(p2q^2*s13^2*(s12 + 3*s23) + p3q^2*s12*
                 (s12^2 - s12*s23 - 2*s23^2) - 2*p2q*p3q*s13*(s12^2 + 
                  s12*s23 + s23^2)))))*p2 . E0conj))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + 
     (((-9*(s12 + s13 + s23)*(-2*p2q^3*s13^2 + p2q^2*s13*(3*p1q*s23 + 
              2*p3q*(s12 + s23)) + p3q*(p3q*s12 - p1q*s23)*
             (p1q*s23 + 2*p3q*(s13 + s23)) + p2q*(p1q*p3q*(s12 + s13 - 2*s23)*
               s23 - p1q^2*s23^2 - 2*p3q^2*(s13^2 - s12*s23 + s13*s23))))/
          (8*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) - 
         (9*ep*(s12 + s13 + s23)*((p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*s23*
             (s12 + s13 + s23) + p1q^4*s23^2*(-4*p2q*s13^2 - 3*p2q*s13*s23 + 
              p2q*(s12 - 2*s23)*s23 + p3q*(s13 - 2*s23)*s23 + 
              p3q*s12*(4*s13 + s23)) + p1q^3*s23*(p2q*p3q*s23*(-2*s12^2 + 
                8*s12*s13 - 6*s13^2 + 9*s12*s23 + 5*s13*s23) + 
              p2q^2*(8*s13^3 + 2*s13^2*s23 + 3*s12*s23^2 + 2*s13*s23*
                 (-s12 + s23)) + p3q^2*(3*s13*s23^2 - 2*s12^2*(4*s13 + s23) + 
                2*s12*s23*(s13 + 3*s23))) + 2*p1q*(p2q + p3q)*
             (-(p2q^3*s13*(2*s13^3 + s13^2*s23 + s13*s23*(-s12 + s23) + 
                 s23^2*(s12 + s23))) + p3q^3*s12*(s12*(s13 - s23)*s23 - 
                s23^2*(s13 + s23) + s12^2*(2*s13 + s23)) + p2q*p3q^2*(
                s12^3*s23 - s13*s23^2*(s13 + s23) - s12*s23*(2*s13^2 + 
                  3*s13*s23 + 2*s23^2) - s12^2*(6*s13^2 + 3*s13*s23 + 
                  2*s23^2)) - p2q^2*p3q*(s12^2*s23*(2*s13 + s23) + 
                s13*s23*(-s13^2 + 2*s13*s23 + 2*s23^2) + s12*(-6*s13^3 - 
                  3*s13^2*s23 + 3*s13*s23^2 + s23^3))) + 
            p1q^2*(p2q^3*(-4*s13^4 + 5*s13^3*s23 + s13*s23^2*(-5*s12 + s23) + 
                s23^3*(s12 + s23) + s13^2*s23*(s12 + 2*s23)) + 
              p3q^3*(s12*s23^2*(-5*s13 + s23) + s23^3*(s13 + s23) + 
                s12^3*(4*s13 + s23) - s12^2*s23*(7*s13 + 6*s23)) + 
              p2q*p3q^2*(s12^3*s23 + s12*s23*(-2*s13^2 - 5*s13*s23 + 
                  3*s23^2) + s23^2*(-5*s13^2 + 3*s13*s23 + 3*s23^2) - 
                s12^2*(12*s13^2 + 13*s13*s23 + 11*s23^2)) + p2q^2*p3q*(
                -(s12^2*s23*(2*s13 + 5*s23)) + 3*s23*(3*s13^3 - s13^2*s23 + 
                  s13*s23^2 + s23^3) + s12*(12*s13^3 + 7*s13^2*s23 - 
                  5*s13*s23^2 + 3*s23^3)))))/(8*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s13*s23^2*(-(p2q*(s12 + s13)) - 
            p3q*(s12 + s13) + p1q*s23)))*E0 . E0conj + 
       ((-9*ep^2*p1q*(s12 + s13 + s23)*(p2q^3*s13^2*(s12 + s13) + 
            (p1q + p3q)*s23*(p3q*s12 - p1q*s23)^2 + p2q*(p3q*s12 - p1q*s23)*
             (p1q*(s12 + s13)*s23 + p3q*s12*(s12 + s13 + 2*s23)) - 
            p2q^2*s13*(p1q*s13*s23 + p3q*(2*s12^2 + s13*s23 + 
                2*s12*(s13 + s23)))))/(2*(p1q + p2q + p3q)*s13*s23*
           (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
             (p2q*s13 + p1q*s23))) + 
         (9*(p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) - p1q^3*(p2q + p3q)*
             s23^2*(s12 + s13 + s23)*(p3q*(2*s12 - 2*s13 - 3*s23) + 
              p2q*(2*s12 + 4*s13 + s23)) + p1q^2*s23*(s12 + s13 + s23)*
             (p2q^3*s13*(6*s12 + 5*s13 + 4*s23) + p2q^2*p3q*(2*s12^2 + 
                s13^2 + 4*s12*(s13 - s23) - 4*s13*s23 - 2*s23^2) + 
              p3q^3*(s12^2 + 2*s23*(s13 + s23) - 2*s12*(2*s13 + 3*s23)) + 
              p2q*p3q^2*(3*s12^2 - 2*s13*s23 - 2*s12*(s13 + 5*s23))) + 
            2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(p2q^3*s13^2*(s12 + s13 + 
                s23) - p2q^2*p3q*s13*(s12 + s23)*(s12 + s13 + s23) - 
              p3q^3*s12*(s13 + s23)*(s12 + s13 + s23) + p2q*p3q^2*(
                -(s12^2*s23) + s13*(s13 + s23)^2 + s12*(s13^2 - s23^2))) + 
            p1q*(4*p2q^3*p3q*s13*(s12 + s23)^2*(s12 + s13 + s23) - 
              p2q^4*s13^2*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 9*s12*s23 + 
                7*s13*s23 + 5*s23^2) + p3q^4*s12*(-4*s23*(s13 + s23)^2 + 
                s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + s13*s23 - s23^2)) + 
              4*p2q*p3q^3*(s13*s23*(s13 + s23)^2 + s12^3*(s13 + 2*s23) + 
                s12*s23*(s13^2 - s23^2) + s12^2*(s13^2 + 3*s13*s23 + 
                  s23^2)) + p2q^2*p3q^2*(s12^3*(2*s13 + 5*s23) - 
                s12*s13^2*(6*s13 + 7*s23) - s13^2*(2*s13^2 + 5*s13*s23 + 
                  3*s23^2) + s12^2*(-2*s13^2 + 7*s13*s23 + 5*s23^2)))))/
          (4*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) - 
         (9*ep*(p1q^6*(p2q + p3q)*s23^4*(s12^2 + 2*s12*s13 + s13^2 - 
              3*s12*s23 - 3*s13*s23 - 4*s23^2) - p1q^5*s23^3*
             (s12 + s13 + s23)*(p2q^2*(3*s13^2 + 7*s12*(s13 - 2*s23) - 
                17*s13*s23 - 4*s23^2) + p3q^2*(3*s12^2 + 6*s13^2 + 
                5*s12*(s13 - 3*s23) + 4*s23^2) + p2q*p3q*(3*s12^2 + 
                4*s12*s13 + s13^2 - 25*s12*s23 - 21*s13*s23 + 4*s23^2)) + 
            (p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)^2*
             (p2q^2*s13*(4*s13 - s23) - p3q^2*(s12 + 2*s13)*s23 - 
              p2q*p3q*(3*s13*s23 + s12*(4*s13 + s23))) + p1q^4*s23^2*
             (s12 + s13 + s23)*(p2q^3*(3*s13^3 - 4*s12^2*s23 - 31*s13^2*s23 - 
                9*s13*s23^2 + 5*s23^3 + s12*(11*s13^2 - 43*s13*s23 + 
                  6*s23^2)) + p2q^2*p3q*(-s13^3 + s12^2*(10*s13 - 37*s23) - 
                38*s13^2*s23 + 12*s13*s23^2 + 7*s23^3 + s12*(s13^2 - 
                  73*s13*s23 + 9*s23^2)) + p3q^3*(3*s12^3 + 7*s12^2*
                 (s13 - 3*s23) + s23*(-10*s13^2 - 4*s13*s23 + s23^2) + 
                s12*(12*s13^2 - 5*s13*s23 + 15*s23^2)) + p2q*p3q^2*(3*s12^3 + 
                12*s13^3 + s12^2*(s13 - 46*s23) - s13^2*s23 + 13*s13*s23^2 - 
                s23^3 + s12*(2*s13^2 - 43*s13*s23 + 22*s23^2))) + 
            p1q^3*s23*(s12 + s13 + s23)*(-(p3q^4*(s12^4 + s12^3*(3*s13 - 
                   13*s23) + s23^2*(6*s13^2 + 5*s13*s23 - s23^2) + 
                 s12*s23*(-20*s13^2 - 3*s13*s23 + 2*s23^2) + s12^2*
                  (6*s13^2 - 10*s13*s23 + 21*s23^2))) + p2q^3*p3q*(s13^4 + 
                10*s12^3*s23 + 37*s13^3*s23 - 31*s13^2*s23^2 - 31*s13*s23^3 + 
                4*s23^4 + s12^2*(9*s13^2 + 30*s13*s23 - 9*s23^2) + 
                s12*(2*s13^3 + 61*s13^2*s23 - 68*s13*s23^2 - 3*s23^3)) + 
              p2q^4*(-s13^4 + 2*s12^2*s13*s23 + 31*s13^3*s23 - s13^2*s23^2 - 
                18*s13*s23^3 + s23^4 + s12*(-5*s13^3 + 48*s13^2*s23 - 
                  27*s13*s23^2 + s23^3)) + p2q*p3q^3*(-s12^4 + 
                s12^3*(2*s13 + 33*s23) + s12^2*(7*s13^2 + 29*s13*s23 - 
                  41*s23^2) + s12*(12*s13^3 + 28*s13^2*s23 - 4*s13*s23^2 + 
                  3*s23^3) + s23*(12*s13^3 + 9*s13^2*s23 + 7*s13*s23^2 + 
                  4*s23^3)) - p2q^2*p3q^2*(6*s13^4 + s12^3*(3*s13 - 34*s23) - 
                6*s13^3*s23 + 27*s13^2*s23^2 + 9*s13*s23^3 - 6*s23^4 + 
                s12^2*(2*s13^2 - 43*s13*s23 + 33*s23^2) + s12*(5*s13^3 - 
                  s13^2*s23 + 64*s13*s23^2 + 7*s23^3))) + p1q*(p2q + p3q)*
             (-(p3q^5*s12*s23*(3*s12^4 - 4*s13*s23*(s13 + s23)^2 + 
                 s12^3*(8*s13 + s23) + s12^2*(11*s13^2 + 2*s13*s23 - 
                   5*s23^2) + s12*(6*s13^3 + s13^2*s23 - 8*s13*s23^2 - 
                   3*s23^3))) + p2q^5*s13^2*(4*s13^4 - 11*s13^3*s23 - 
                29*s13^2*s23^2 - 11*s13*s23^3 + 3*s23^4 + s12^2*(4*s13^2 - 
                  23*s13*s23 + 3*s23^2) + s12*(8*s13^3 - 34*s13^2*s23 - 
                  34*s13*s23^2 + 6*s23^3)) + p2q*p3q^4*(-4*s12^3*
                 (s13 - 4*s23)*(s13 + s23)^2 + 4*s13^2*s23^2*(s13 + s23)^2 - 
                2*s12^5*(2*s13 + 3*s23) + s12^4*(-8*s13^2 - 9*s13*s23 + 
                  s23^2) + 2*s12*s13*s23*(6*s13^3 + 23*s13^2*s23 + 
                  24*s13*s23^2 + 7*s23^3) + s12^2*s23*(23*s13^3 + 
                  61*s13^2*s23 + 43*s13*s23^2 + 9*s23^3)) + p2q^3*p3q^2*(
                s12^4*(12*s13^2 + 7*s13*s23 + 3*s23^2) + 2*s12^3*(6*s13^3 + 
                  38*s13^2*s23 + 12*s13*s23^2 + 3*s23^3) + s13^2*s23*
                 (-15*s13^3 - 7*s13^2*s23 + 29*s13*s23^2 + 21*s23^3) - 
                2*s12*s13*(6*s13^4 + 12*s13^3*s23 - 40*s13^2*s23^2 - 
                  50*s13*s23^3 - 5*s23^4) + s12^2*(-12*s13^4 + 60*s13^3*s23 + 
                  140*s13^2*s23^2 + 27*s13*s23^3 + 3*s23^4)) + 
              p2q^2*p3q^3*(-3*s13^2*(2*s13 - 5*s23)*s23*(s13 + s23)^2 - 
                s12^5*(4*s13 + 7*s23) + s12^4*(4*s13^2 - 14*s13*s23 - 
                  3*s23^2) + s12^3*(20*s13^3 + 32*s13^2*s23 + 20*s13*s23^2 + 
                  13*s23^3) + s12*s13*s23*(3*s13^3 + 68*s13^2*s23 + 
                  83*s13*s23^2 + 18*s23^3) + s12^2*(12*s13^4 + 48*s13^3*s23 + 
                  96*s13^2*s23^2 + 46*s13*s23^3 + 9*s23^4)) + 
              p2q^4*p3q*s13*(s12^3*(-12*s13^2 + 23*s13*s23 + 2*s23^2) + 
                s12^2*(-20*s13^3 - 22*s13^2*s23 + 61*s13*s23^2 + 4*s23^3) + 
                s12*(-4*s13^4 - 69*s13^3*s23 - 12*s13^2*s23^2 + 51*s13*
                   s23^3 + 2*s23^4) + s13*(4*s13^4 - 24*s13^3*s23 - 
                  43*s13^2*s23^2 - 2*s13*s23^3 + 13*s23^4))) - 
            p1q^2*s23*(p3q^5*(3*s12^5 + 2*s12^4*(4*s13 - 5*s23) + 
                2*s13*s23^2*(s13 + s23)^2 + s12^3*(15*s13^2 - 14*s13*s23 - 
                  13*s23^2) + s12^2*(10*s13^3 - 8*s13^2*s23 - 13*s13*s23^2 + 
                  3*s23^3) + s12*s23*(-12*s13^3 - 17*s13^2*s23 - 
                  2*s13*s23^2 + 3*s23^3)) + p2q^5*s13*(-2*s12^3*s13 + 
                17*s13^4 - 41*s13^2*s23^2 - 21*s13*s23^3 + 3*s23^4 + 
                3*s12^2*(7*s13^2 - 14*s13*s23 + s23^2) + s12*(40*s13^3 - 
                  34*s13^2*s23 - 61*s13*s23^2 + 6*s23^3)) + p2q*p3q^4*(
                8*s12^5 + s12^4*(11*s13 - 24*s23) + s13*s23*(s13 + s23)^2*
                 (4*s13 + 11*s23) + s12^3*(10*s13^2 - 28*s13*s23 - 
                  25*s23^2) + s12^2*(-5*s13^3 + 2*s13^2*s23 + 21*s13*s23^2 + 
                  19*s23^3) - 2*s12*(6*s13^4 + 7*s13^3*s23 - 11*s13^2*s23^2 - 
                  18*s13*s23^3 - 6*s23^4)) - p2q^4*p3q*(4*s12^4*s13 + 
                s12^3*(47*s13^2 + 10*s13*s23 - 3*s23^2) + 2*s12^2*
                 (17*s13^3 + 82*s13^2*s23 - 8*s13*s23^2 - 3*s23^3) + 
                s13*(-24*s13^4 + 30*s13^3*s23 + 101*s13^2*s23^2 + 
                  33*s13*s23^3 - 14*s23^4) + s12*(-33*s13^4 + 160*s13^3*s23 + 
                  143*s13^2*s23^2 - 36*s13*s23^3 - 3*s23^4)) + 
              p2q^2*p3q^3*(11*s12^5 + 22*s12^4*(s13 - s23) + 4*s12^3*
                 (s13^2 - 6*s13*s23 - 7*s23^2) + s12^2*(-28*s13^3 - 
                  28*s13^2*s23 + 39*s13*s23^2 + 23*s23^3) + 
                s12*(-19*s13^4 - 52*s13^3*s23 + 30*s13^2*s23^2 + 
                  78*s13*s23^3 + 18*s23^4) + s13*(2*s13^4 - 10*s13^3*s23 + 
                  s13^2*s23^2 + 37*s13*s23^3 + 24*s23^4)) + p2q^3*p3q^2*(
                6*s12^5 + s12^4*(15*s13 - 4*s23) - s12^3*(36*s13^2 + 
                  4*s13*s23 + 5*s23^2) + s12^2*(-68*s13^3 - 136*s13^2*s23 + 
                  42*s13*s23^2 + 17*s23^3) + s12*(-14*s13^4 - 160*s13^3*s23 - 
                  67*s13^2*s23^2 + 78*s13*s23^3 + 12*s23^4) + 
                s13*(9*s13^4 - 40*s13^3*s23 - 68*s13^2*s23^2 + 7*s13*s23^3 + 
                  26*s23^4)))))/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*
           s23^2*(-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*
        p1 . E0conj*p2 . E0 + ((-9*ep^2*p1q*(s12 + s13 + s23)*
           (p2q^3*s13^2*(s12 + s13) - p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - 
                s13^2) + p1q*s13*s23) + (p3q*(s12 + s13) - p1q*s23)*
             (p3q^2*s12^2 - p1q^2*s23^2) + p2q*(p3q^2*s12*(s12^2 - s12*s13 - 
                2*s13^2) + 2*p1q*p3q*s12*s13*s23 - p1q^2*(s12 + s13)*s23^2)))/
          (2*(p1q + p2q + p3q)*s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23))) + (9*p1q*(s12 + s13 + s23)*
           (-2*p2q^4*s13^2*(s12 + s13) + p2q^3*s13*(p1q*(3*s12 + 5*s13)*s23 + 
              2*p3q*(s12 + s13)*(s12 - s13 + s23)) + p3q*(p3q*s12 - p1q*s23)*
             (p3q*(s12 + s13) - p1q*s23)*(p1q*s23 + 2*p3q*(s13 + s23)) + 
            p2q^2*(p1q*p3q*(s12^2 + s12*(3*s13 - 2*s23) + 4*s13*(s13 - s23))*
               s23 - p1q^2*(s12 + 4*s13)*s23^2 + 2*p3q^2*(s12 + s13)*(
                -s13^2 + s12*(s13 + s23))) + p2q*(p1q*p3q^2*(2*s12^2 + 
                s12*(s13 - 6*s23) + s13*(s13 - 2*s23))*s23 + p1q^3*s23^3 + 
              p1q^2*p3q*s23^2*(-3*s12 - 3*s13 + 2*s23) + 2*p3q^3*(s12 + s13)*(
                -(s13*(s13 + s23)) + s12*(s13 + 2*s23)))))/
          (2*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         (9*ep*(-(p1q^5*(p3q^2*(13*s12 + 8*s13) + p2q^2*(8*s12 + 15*s13) + 
               p2q*p3q*(19*s12 + 21*s13 - 2*s23))*s23^4*(s12 + s13 + s23)) + 
            4*p1q^6*(p2q + p3q)*s23^5*(s12 + s13 + s23) - 2*(p2q + p3q)^4*s13*
             (-(p3q*s12) + p2q*s13)^3*(s12 + s13 + s23)^2 + 
            p1q^4*s23^3*(s12 + s13 + s23)*(p2q^2*p3q*(22*s12^2 + 50*s12*s13 + 
                39*s13^2 - 4*s12*s23 - 10*s13*s23 - 4*s23^2) + 
              p2q*p3q^2*(31*s12^2 + 42*s12*s13 + 18*s13^2 - 4*s12*s23 - 
                10*s13*s23 - 2*s23^2) + p2q^3*(2*s12^2 + 20*s12*s13 + 
                23*s13^2 - 4*s12*s23 - 2*s13*s23 - 2*s23^2) + 
              p3q^3*(15*s12^2 + 20*s12*s13 + 2*s13*(3*s13 + s23))) - 
            2*p1q*(p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
             (p3q^3*s12*s13*(s12 - 3*s23)*(s12 + s13 + s23) + 
              p2q^3*s13^2*(s13^2 + s12*(s13 - 5*s23) - 4*s13*s23 - 4*s23^2) + 
              p2q*p3q^2*(s12^3*(s13 + s23) - s13^2*s23*(s13 + s23) - 
                2*s12*s13*(s13 + s23)^2 + s12^2*(-s13^2 + s13*s23 + s23^2)) - 
              p2q^2*p3q*s13*(2*s12^2*s13 + s12*(s13^2 + 9*s13*s23 + s23^2) + 
                s13*(-s13^2 + 6*s13*s23 + 6*s23^2))) - p1q^2*(p2q + p3q)^2*
             s23*(s12 + s13 + s23)*(p2q^3*s13^2*(s12^2 - 8*s12*s13 - 
                9*s13^2 + 18*s12*s23 + 12*s13*s23 + 12*s23^2) - 
              p3q^3*s12*(s12^3 + s12*s13*(3*s13 + 4*s23) + 2*s13*(2*s13^2 + 
                  5*s13*s23 + 3*s23^2)) + p2q*p3q^2*(-3*s12^4 + 
                s12^3*(-6*s13 + 4*s23) + 2*s13^2*(2*s13^2 + s13*s23 - 
                  s23^2) + 2*s12*s13*(3*s13^2 - s13*s23 + 2*s23^2) + 
                s12^2*(-s13^2 + 6*s13*s23 + 6*s23^2)) + p2q^2*p3q*s13*(
                2*s12^3 + s12^2*(15*s13 + 2*s23) + 2*s12*(5*s13^2 + 
                  11*s13*s23 + 3*s23^2) + s13*(-3*s13^2 + 14*s13*s23 + 
                  12*s23^2))) - p1q^3*s23^2*(p2q^4*s13*(s12^3 + 19*s13^3 + 
                s12^2*(19*s13 - 13*s23) + 11*s13^2*s23 - 16*s13*s23^2 - 
                8*s23^3 + s12*(37*s13^2 - 4*s13*s23 - 22*s23^2)) + 
              p3q^4*(7*s12^4 + 2*s13*(s13 + s23)^2*(2*s13 + s23) + 
                7*s12^3*(3*s13 + s23) + s12^2*s13*(25*s13 + 18*s23) + 
                3*s12*s13*(5*s13^2 + 7*s13*s23 + 2*s23^2)) + p2q^2*p3q^2*(
                21*s12^4 + s12^3*(56*s13 + 13*s23) + s12^2*(58*s13^2 + 
                  s13*s23 - 20*s23^2) + s13*(15*s13^3 - 15*s13^2*s23 - 
                  44*s13*s23^2 - 14*s23^3) + s12*(38*s13^3 - 33*s13^2*s23 - 
                  52*s13*s23^2 - 12*s23^3)) + p2q^3*p3q*(5*s12^4 + 
                s12^3*(16*s13 - s23) + s12^2*(48*s13^2 - 29*s13*s23 - 
                  12*s23^2) + s13*(37*s13^3 + 11*s13^2*s23 - 46*s13*s23^2 - 
                  20*s23^3) + s12*(74*s13^3 - 23*s13^2*s23 - 60*s13*s23^2 - 
                  6*s23^3)) + p2q*p3q^3*(21*s12^4 + s12^3*(54*s13 + 17*s23) + 
                s12^2*(42*s13^2 + 23*s13*s23 - 10*s23^2) - s13^2*
                 (s13^2 + 9*s13*s23 + 8*s23^2) + s12*(8*s13^3 - 5*s13^2*s23 - 
                  12*s13*s23^2 - 6*s23^3)))))/(2*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)*s13*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
            (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
            p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*
               s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 
              2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
               s23^2))))*p2 . E0*p2 . E0conj + 
       p1 . E0*(((9*p2q*(s12 + s13 + s23)*(-(p1q^3*(p2q + p3q)*s23^2*
                (s12 + s23)) + p1q^2*(p2q + p3q)*s23*(p3q*(s12 - 2*s13 - 
                  3*s23)*(s12 + s23) + p2q*s13*(3*s12 + 4*s23)) + 
              p1q*(-(p2q^3*s13^2*(2*s12 + 5*s23)) + p3q^3*(s12 + s23)*
                 (-2*s23*(s13 + s23) + s12*(2*s13 + 3*s23)) + p2q^2*p3q*s13*
                 (2*s12^2 + 6*s12*s23 + s23*(-s13 + 7*s23)) + p2q*p3q^2*
                 (3*s12^2*s23 + (s13 - 2*s23)*s23^2 + s12*(-2*s13^2 - 
                    2*s13*s23 + s23^2))) + 2*(p2q^4*s13^3 - 2*p2q^3*p3q*s13^2*
                 (s12 + s23) + p3q^4*s12*(s12 + s23)*(s13 + s23) + 
                p2q^2*p3q^2*s13*(s12^2 + s13^2 + s12*s23 + s13*s23 + s23^2) + 
                p2q*p3q^3*(s12^2*s23 - s13*s23*(s13 + s23) + s12*(-2*s13^2 - 
                    2*s13*s23 + s23^2)))))/(2*(p2q + p3q)*(p1q + p2q + p3q)*
             s13*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(
                p2q*s13 + p1q*s23))) - (9*ep^2*(s12 + s13 + s23)*
             (p1q^5*s23^4 + p1q^4*s23^3*(-2*p2q*s12 - 3*p3q*s12 - 3*p2q*s13 + 
                2*p3q*s23) + p1q^3*s23^2*(p2q^2*(s12^2 + 3*s12*s13 + 
                  s13*(3*s13 - s23)) + p2q*p3q*(3*s12^2 + 3*s12*s13 - 
                  5*s12*s23 - 4*s13*s23) + p3q^2*(3*s12^2 - 6*s12*s23 + 
                  s23^2)) + (p2q + p3q)*(p3q*s12 - p2q*s13)^2*(p2q^2*s13*
                 (s12 + s13) - p3q^2*s12*s23 - p2q*p3q*(s12^2 + s13*s23 + 
                  s12*(s13 + 2*s23))) + p1q^2*s23*(p2q^3*s13*(-s13^2 + 
                  s12*s23 + 3*s13*s23) - p3q^3*s12*(s12^2 - 6*s12*s23 + 
                  3*s23^2) + p2q^2*p3q*(3*s12^2*s23 + s13*(3*s13 - s23)*s23 + 
                  s12*s13*(s13 + 4*s23)) + p2q*p3q^2*(3*s12*(s13 - s23)*s23 - 
                  s13*s23^2 + s12^2*(s13 + 9*s23))) + p1q*(p3q^4*s12^2*s23*
                 (-2*s12 + 3*s23) - p2q^4*s13^2*(s12^2 + 3*s13*s23 + 
                  s12*(s13 + 2*s23)) - p2q*p3q^3*s12^2*(s12^2 + 
                  s12*(s13 + 3*s23) - 2*s23*(s13 + 3*s23)) + p2q^3*p3q*s13*
                 (2*s12^3 + 2*s13*s23*(-s13 + s23) + s12^2*(s13 + 4*s23) + 
                  s12*(-s13^2 + 3*s13*s23 + 2*s23^2)) + p2q^2*p3q^2*
                 (-s12^4 + s12^3*(s13 - 2*s23) + 2*s12*s13^2*s23 + 
                  s13^2*s23^2 + s12^2*(2*s13^2 + 3*s13*s23 + 2*s23^2)))))/
            (2*(p1q + p2q + p3q)*s13*s23*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))) + 
           (9*ep*(p1q^6*(p2q + p3q)*s23^5*(s12 + s13 + s23) - 
              p1q^5*s23^4*(s12 + s13 + s23)*(p3q^2*(3*s12 - 2*s23) + 
                p2q*p3q*(6*s12 + 3*s13 - s23) + p2q^2*(5*s12 + 5*s13 + 
                  3*s23)) + p1q^4*s23^3*(s12 + s13 + s23)*(p2q^2*p3q*
                 (13*s12^2 + 17*s12*s13 + 5*s13^2 - s12*s23 - 3*s13*s23 - 
                  5*s23^2) + p2q^3*(2*s12^2 + 13*s12*s13 + 11*s13^2 - 
                  s12*s23 + 8*s13*s23 - 2*s23^2) + p3q^3*(3*s12^2 - 
                  6*s12*s23 + s23^2) + p2q*p3q^2*(10*s12^2 + 4*s12*s13 - 
                  2*s13^2 - 6*s12*s23 - 3*s13*s23 + 2*s23^2)) - 
              2*p2q^2*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)^2*(
                p2q^2*s13^2 - p2q*p3q*s13*(s12 - s13 + s23) - 
                p3q^2*(2*s13*s23 + s12*(s13 + s23))) - p1q^3*s23^2*(s12 + 
                s13 + s23)*(p2q^4*s13*(s12^2 + 13*s12*s13 + 13*s13^2 - 
                  7*s12*s23 + 4*s13*s23 - 8*s23^2) + p3q^4*s12*(s12^2 - 
                  6*s12*s23 + 3*s23^2) + p2q^3*p3q*(5*s12^3 + 7*s13^3 + 
                  s12^2*(5*s13 - s23) - 11*s13^2*s23 - 15*s13*s23^2 + 
                  2*s23^3 + s12*(13*s13^2 - 21*s13*s23 - s23^2)) + 
                p2q*p3q^3*(6*s12^3 + 2*s12^2*(2*s13 - 5*s23) + s12*s23*
                   (5*s13 + 4*s23) - 2*s23*(-3*s13^2 - 2*s13*s23 + s23^2)) + 
                p2q^2*p3q^2*(12*s12^3 - 4*s13^3 + s12^2*(6*s13 - 11*s23) - 
                  7*s13^2*s23 - s13*s23^2 + 2*s23^3 - s12*(2*s13^2 + 
                    21*s13*s23 + 6*s23^2))) - p1q^2*s23*(p3q^5*s12^2*
                 (2*s12 - 3*s23)*s23*(s12 + s13 + s23) + p2q^4*p3q*s13*
                 (2*s12^4 + 12*s12^3*s13 - 6*s13^4 + 15*s13^3*s23 + 
                  38*s13^2*s23^2 + 11*s13*s23^3 - 6*s23^4 + s12^2*(12*s13^2 + 
                    49*s13*s23 - 11*s23^2) + s12*(-4*s13^3 + 64*s13^2*s23 + 
                    49*s13*s23^2 - 15*s23^3)) + p2q^5*s13^2*(s12^3 + 
                  s12^2*(-6*s13 + 14*s23) + s12*(-15*s13^2 + 12*s13*s23 + 
                    25*s23^2) - 2*(4*s13^3 + s13^2*s23 - 9*s13*s23^2 - 
                    6*s23^3)) - p2q^2*p3q^3*(4*s12^5 + s12^4*(8*s13 - 
                    9*s23) + 4*s13*s23*(s13 + s23)^3 + s12^3*(4*s13^2 - 
                    6*s13*s23 - 17*s23^2) + s12^2*s23*(7*s13^2 + 16*s13*s23 - 
                    2*s23^2) + s12*s23*(8*s13^3 + 29*s13^2*s23 + 23*s13*
                     s23^2 + 2*s23^3)) + p2q*p3q^4*(-s12^5 + 4*s13*s23^2*
                   (s13 + s23)^2 + s12^4*(-4*s13 + 5*s23) + s12^3*(-5*s13^2 - 
                    2*s13*s23 + 4*s23^2) - s12^2*(2*s13^3 + 11*s13^2*s23 + 
                    2*s13*s23^2 - 2*s23^3) + s12*s23*(-4*s13^3 + 5*s13^2*
                     s23 + 13*s13*s23^2 + 4*s23^3)) + p2q^3*p3q^2*
                 (-3*s12^5 - 2*s12^4*(s13 - s23) + 2*s12^3*(6*s13^2 + 
                    s13*s23 + 4*s23^2) + s12^2*(20*s13^3 + 39*s13^2*s23 - 
                    24*s13*s23^2 + s23^3) + s13*(2*s13^4 + 17*s13^3*s23 + 
                    16*s13^2*s23^2 - 9*s13*s23^3 - 10*s23^4) + 
                  s12*(11*s13^4 + 56*s13^3*s23 + 10*s13^2*s23^2 - 35*s13*
                     s23^3 - 2*s23^4))) - p1q*(p3q^6*s12^3*s23^2*(s12 + s13 + 
                  s23) + p2q^6*s13^3*(2*s13^3 + s12^2*(2*s13 - 9*s23) - 
                  5*s13^2*s23 - 15*s13*s23^2 - 8*s23^3 + s12*(4*s13^2 - 
                    14*s13*s23 - 17*s23^2)) - p2q^5*p3q*s13^2*(-2*s13^4 + 
                  s12^3*(6*s13 - 5*s23) + 14*s13^3*s23 + 25*s13^2*s23^2 + 
                  3*s13*s23^3 - 6*s23^4 + s12^2*(10*s13^2 + 20*s13*s23 - 
                    23*s23^2) + s12*(2*s13^3 + 39*s13^2*s23 + 10*s13*s23^2 - 
                    24*s23^3)) + p2q^2*p3q^4*(4*s13^2*s23^2*(s13 + s23)^2 - 
                  2*s12^5*(s13 + 3*s23) - s12^4*(4*s13^2 + 17*s13*s23 + 
                    7*s23^2) + s12*s13^2*s23*(4*s13^2 + 23*s13*s23 + 
                    19*s23^2) + s12^3*(-2*s13^3 - 8*s13^2*s23 - 12*s13*
                     s23^2 + s23^3) + s12^2*s23*(7*s13^3 + 16*s13^2*s23 + 
                    2*s23^3)) - p2q*p3q^5*s12*s23*(s12^4 + 4*s13*s23*
                   (s13 + s23)^2 + s12^3*(4*s13 + s23) + s12^2*(5*s13^2 + 
                    12*s13*s23 + 2*s23^2) + s12*(2*s13^3 + 15*s13^2*s23 + 
                    15*s13*s23^2 + 2*s23^3)) + p2q^4*p3q^2*s13*
                 (s12^4*(6*s13 + 9*s23) + s12^3*(6*s13^2 + 44*s13*s23 + 
                    17*s23^2) + s12^2*(-6*s13^3 + 26*s13^2*s23 + 86*s13*
                     s23^2 + 8*s23^3) + s13*s23*(-11*s13^3 - 5*s13^2*s23 + 
                    20*s13*s23^2 + 14*s23^3) + s12*s13*(-6*s13^3 - 20*s13^2*
                     s23 + 52*s13*s23^2 + 63*s23^3)) + p2q^3*p3q^3*
                 (-(s12^5*(2*s13 + 5*s23)) + s12^4*(2*s13^2 - 4*s13*s23 - 
                    7*s23^2) + 2*s12^3*s13*(5*s13^2 + 18*s13*s23 + 5*s23^2) + 
                  s12*s13^2*s23*(9*s13^2 + 64*s13*s23 + 54*s23^2) + 
                  s13^2*s23*(-2*s13^3 + 7*s13^2*s23 + 19*s13*s23^2 + 
                    10*s23^3) + s12^2*(6*s13^4 + 46*s13^3*s23 + 82*s13^2*
                     s23^2 + 11*s13*s23^3 + 2*s23^4)))))/(2*p1q*(p2q + p3q)*
             (p1q + p2q + p3q)*s13*s23^2*(-(p2q^3*s13^2*(s12 + s13)) - 
              (p3q*s12 - p1q*s23)^2*(p3q*(s12 + s13) - p1q*s23) + 
              p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - s13^2) + 
                p1q*(2*s12 + 3*s13)*s23) + p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 
                  2*s13^2) + 2*p1q*p3q*(s12^2 + s12*s13 + s13^2)*s23 - 
                p1q^2*(s12 + 3*s13)*s23^2))))*p1 . E0conj + 
         ((-9*ep^2*(s12 + s13 + s23)*(-((p2q + p3q)*(-(p3q*s12) + p2q*s13)^
                 3) - p1q^3*(p2q*(s12 + 2*s13) + p3q*(s12 - s23))*s23^2 + 
              p1q^4*s23^3 - p1q^2*(p3q*s12 + p2q*s13)*s23*(p3q*(s12 + s23) + 
                p2q*(-s13 + s23)) + p1q*(-(p3q*s12) + p2q*s13)*(p3q^2*s12*
                 (-s12 + s23) + p2q^2*s13*(s12 + 2*s23) + p2q*p3q*
                 (-s12^2 + s12*s13 + s13*s23))))/(2*(p1q + p2q + p3q)*s13*s23*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) + (9*(p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) - 
              p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*(p3q*(2*s12 - 2*s13 - 
                  3*s23) + p2q*(2*s12 + 4*s13 + s23)) + p1q^2*s23*(s12 + 
                s13 + s23)*(p2q^3*s13*(6*s12 + 5*s13 + 4*s23) + p2q^2*p3q*
                 (2*s12^2 + s13^2 + 4*s12*(s13 - s23) - 4*s13*s23 - 
                  2*s23^2) + p3q^3*(s12^2 + 2*s23*(s13 + s23) - 
                  2*s12*(2*s13 + 3*s23)) + p2q*p3q^2*(3*s12^2 - 2*s13*s23 - 
                  2*s12*(s13 + 5*s23))) + 2*(p2q + p3q)*(-(p3q*s12) + 
                p2q*s13)*(p2q^3*s13^2*(s12 + s13 + s23) - p2q^2*p3q*s13*
                 (s12 + s23)*(s12 + s13 + s23) - p3q^3*s12*(s13 + s23)*
                 (s12 + s13 + s23) + p2q*p3q^2*(-(s12^2*s23) + 
                  s13*(s13 + s23)^2 + s12*(s13^2 - s23^2))) + 
              p1q*(4*p2q^3*p3q*s13*(s12 + s23)^2*(s12 + s13 + s23) - 
                p2q^4*s13^2*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 9*s12*s23 + 
                  7*s13*s23 + 5*s23^2) + p3q^4*s12*(-4*s23*(s13 + s23)^2 + 
                  s12^2*(2*s13 + 3*s23) + s12*(2*s13^2 + s13*s23 - s23^2)) + 
                4*p2q*p3q^3*(s13*s23*(s13 + s23)^2 + s12^3*(s13 + 2*s23) + 
                  s12*s23*(s13^2 - s23^2) + s12^2*(s13^2 + 3*s13*s23 + 
                    s23^2)) + p2q^2*p3q^2*(s12^3*(2*s13 + 5*s23) - 
                  s12*s13^2*(6*s13 + 7*s23) - s13^2*(2*s13^2 + 5*s13*s23 + 
                    3*s23^2) + s12^2*(-2*s13^2 + 7*s13*s23 + 5*s23^2)))))/
            (4*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(p3q^2*s12^2 + 
              (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
           (9*ep*(p1q^6*(p2q + p3q)*s23^4*(s12^2 + 2*s12*s13 + s13^2 + 
                7*s12*s23 + 7*s13*s23 + 6*s23^2) - p1q^5*s23^3*(s12 + s13 + 
                s23)*(p2q*p3q*(3*s12^2 + 4*s12*s13 + s13^2 + 25*s12*s23 + 
                  21*s13*s23 - 8*s23^2) + p3q^2*(3*s12^2 + 5*s12*s13 + 
                  6*s13^2 + 17*s12*s23 + 10*s13*s23 - 6*s23^2) + 
                p2q^2*(7*s12*s13 + 3*s13^2 + 12*s12*s23 + 23*s13*s23 + 
                  2*s23^2)) - (p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
               (s12 + s13 + s23)^2*(p3q^3*(s12 + 2*s13)*s23 + p2q^3*s13*
                 (4*s13 + s23) + p2q^2*p3q*(4*s13^2 + s12*(-4*s13 + s23)) - 
                p2q*p3q^2*(3*s13*s23 + 2*s12*(2*s13 + s23))) + 
              p1q^4*s23^2*(s12 + s13 + s23)*(p2q*p3q^2*(3*s12^3 + 12*s13^3 + 
                  9*s13^2*s23 - 31*s13*s23^2 + 3*s23^3 + s12^2*(s13 + 
                    36*s23) + s12*(2*s13^2 + 27*s13*s23 - 24*s23^2)) + 
                p2q^2*p3q*(-s13^3 + 36*s13^2*s23 - 22*s13*s23^2 - 5*s23^3 + 
                  s12^2*(10*s13 + 33*s23) + s12*(s13^2 + 53*s13*s23 - 
                    7*s23^2)) + p2q^3*(3*s13^3 + 4*s12^2*s23 + 37*s13^2*s23 + 
                  3*s13*s23^2 - 3*s23^3 + s12*(11*s13^2 + 23*s13*s23 - 
                    4*s23^2)) + p3q^3*(3*s12^3 + s12^2*(7*s13 + 15*s23) + 
                  s12*(12*s13^2 + 21*s13*s23 - 17*s23^2) + s23*(-6*s13^2 - 
                    10*s13*s23 + s23^2))) + p1q*(p2q + p3q)^2*(s12 + s13 + 
                s23)*(p3q^4*s12*s23*(-s12^3 + 4*s13*s23*(s13 + s23) + 
                  s12^2*(s13 + 2*s23) + s12*(-2*s13^2 + 5*s13*s23 + 
                    3*s23^2)) + p2q^4*s13^2*(-4*s13^3 + 15*s13^2*s23 + 
                  18*s13*s23^2 + 3*s23^3 + s12*(-4*s13^2 + 15*s13*s23 + 
                    3*s23^2)) + p2q*p3q^3*(4*s13^2*s23^2*(s13 + s23) + 
                  s12^4*(4*s13 + 7*s23) + 2*s12*s13*s23*(2*s13^2 + s13*s23 - 
                    3*s23^2) + s12^3*(4*s13^2 + 10*s13*s23 + s23^2) - 
                  s12^2*s23*(5*s13^2 + 9*s13*s23 + 6*s23^2)) - p2q^2*p3q^2*
                 (s12*s13^2*s23*(9*s13 + 16*s23) + 3*s12^3*(4*s13^2 + 
                    5*s13*s23 - s23^2) + s13^2*s23*(2*s13^2 + 7*s13*s23 + 
                    5*s23^2) + s12^2*(12*s13^3 + 34*s13^2*s23 + 4*s13*s23^2 - 
                    3*s23^3)) + p2q^3*p3q*s13*(s13*s23*(13*s13^2 + 
                    7*s13*s23 - 2*s23^2) + s12^2*(12*s13^2 - 7*s13*s23 + 
                    2*s23^2) + s12*(12*s13^3 + 10*s13^2*s23 - 15*s13*s23^2 + 
                    2*s23^3))) - p1q^3*s23*(s12 + s13 + s23)*(
                p3q^4*(s12^4 + 3*s12^3*(s13 + s23) + 3*s12^2*(2*s13^2 + 
                    4*s13*s23 - 5*s23^2) + s23^2*(2*s13^2 + s13*s23 - 
                    s23^2) + s12*s23*(-12*s13^2 - 21*s13*s23 + 2*s23^2)) + 
                p2q^2*p3q^2*(6*s13^4 - 8*s13^3*s23 - 53*s13^2*s23^2 + 
                  s13*s23^3 + 2*s23^4 + s12^3*(3*s13 + 32*s23) + 
                  s12^2*(2*s13^2 + 21*s13*s23 - 23*s23^2) + s12*(5*s13^3 + 
                    15*s13^2*s23 - 44*s13*s23^2 - 13*s23^3)) + 
                p2q^4*(s13^4 + 2*s12^2*s13*s23 + 33*s13^3*s23 - 7*s13^2*
                   s23^2 - 14*s13*s23^3 - s23^4 + s12*(5*s13^3 + 14*s13^2*
                     s23 - 15*s13*s23^2 - s23^3)) + p2q*p3q^3*(s12^4 + 
                  s12^3*(-2*s13 + 21*s23) + s12^2*(-7*s13^2 + 21*s13*s23 - 
                    29*s23^2) + s13*s23*(-20*s13^2 - 7*s13*s23 + 21*s23^2) + 
                  s12*(-12*s13^3 - 24*s13^2*s23 - 24*s13*s23^2 + s23^3)) + 
                p2q^3*p3q*(10*s12^3*s23 + s12^2*(-9*s13^2 + 2*s13*s23 - 
                    5*s23^2) - s12*(2*s13^3 - 29*s13^2*s23 + 40*s13*s23^2 + 
                    5*s23^3) - s13*(s13^3 - 41*s13^2*s23 + 39*s13*s23^2 + 
                    25*s23^3))) - p1q^2*s23*(p3q^5*(s12^5 + 4*s12^4*s23 + 
                  2*s13*s23^2*(s13 + s23)^2 + s12^3*(5*s13^2 + 14*s13*s23 + 
                    3*s23^2) + s12*s23*(-4*s13^3 - s13^2*s23 + 6*s13*s23^2 + 
                    3*s23^3) + s12^2*(6*s13^3 + 14*s13^2*s23 + 13*s13*s23^2 + 
                    3*s23^3)) - p2q*p3q^4*(4*s12^5 + s12^4*(15*s13 - 
                    14*s23) + s13*(20*s13 - 3*s23)*s23*(s13 + s23)^2 + 
                  s12^3*(14*s13^2 - 16*s13*s23 - 25*s23^2) + s12^2*
                   (23*s13^3 + 48*s13^2*s23 - s13*s23^2 - 7*s23^3) + 
                  2*s12*s13*(10*s13^3 + 47*s13^2*s23 + 43*s13*s23^2 + 
                    6*s23^3)) + p2q^5*s13*(2*s12^3*s13 - 17*s13^4 + 
                  2*s13^3*s23 + 43*s13^2*s23^2 + 27*s13*s23^3 + 3*s23^4 + 
                  s12^2*(-5*s13^2 + 24*s13*s23 + 3*s23^2) + s12*(-24*s13^3 + 
                    34*s13^2*s23 + 49*s13*s23^2 + 6*s23^3)) + p2q^3*p3q^2*
                 (-6*s12^5 + s12^4*(s13 + 2*s23) + s12^3*(32*s13^2 + 
                    17*s23^2) + s12*s13*(34*s13^3 + 156*s13^2*s23 + 
                    83*s13*s23^2 - 10*s23^3) + s12^2*(56*s13^3 + 80*s13^2*
                     s23 - 10*s13*s23^2 + 9*s23^3) + s13*(3*s13^4 + 
                    58*s13^3*s23 + 72*s13^2*s23^2 + 11*s13*s23^3 - 
                    6*s23^4)) + p2q^2*p3q^3*(-11*s12^5 - 2*s12^4*(9*s13 - 
                    8*s23) + 4*s12^3*s23*(5*s13 + 11*s23) + s12^2*(8*s13^3 - 
                    12*s13^2*s23 + s13*s23^2 + 11*s23^3) + s12*(15*s13^4 - 
                    16*s13^3*s23 - 58*s13^2*s23^2 - 26*s13*s23^3 - 6*s23^4) + 
                  s13*(14*s13^4 + 16*s13^3*s23 - 21*s13^2*s23^2 - 27*s13*
                     s23^3 - 4*s23^4)) + p2q^4*p3q*(4*s12^4*s13 + 
                  s12^3*(15*s13^2 - 2*s13*s23 + 3*s23^2) + 2*s12^2*
                   (7*s13^3 + 39*s13^2*s23 + 2*s13*s23^2 + 3*s23^3) + 
                  s13*(-28*s13^4 + 28*s13^3*s23 + 105*s13^2*s23^2 + 
                    51*s13*s23^3 + 2*s23^4) + s12*(-25*s13^4 + 132*s13^3*
                     s23 + 129*s13^2*s23^2 + 12*s13*s23^3 + 3*s23^4)))))/
            (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p2 . E0conj))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     (((9*(s12 + s13 + s23)*(-2*p2q^3*s13*(s12 + s23) + 
            p3q*(2*p3q^2*s12^2 - 3*p1q*p3q*s12*s23 + p1q^2*s23^2) - 
            p2q*(p1q*p3q*(s12 + s13 - 2*s23)*s23 - p1q^2*s23^2 + 
              2*p3q^2*s12*(s13 + s23)) + p2q^2*(p1q*s23*(2*s12 - s13 + 
                2*s23) + 2*p3q*(s12^2 + s12*s23 - s13*s23))))/
          (8*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23) + 
         (9*ep*(s12 + s13 + s23)*(-((p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*s23*
              (s12 + s13 + s23)) + p1q^4*s23^2*(-(p2q*((s13 - 2*s23)*s23 + 
                 s12*(4*s13 + s23))) + p3q*(4*s12^2 + 3*s12*s23 + 
                s23*(-s13 + 2*s23))) - 2*p1q*(p2q + p3q)*
             (-(p3q^3*s12*(2*s12^3 + s12^2*s23 + s12*s23*(-s13 + s23) + 
                 s23^2*(s13 + s23))) + p2q^3*s13*(s12*(2*s13^2 + s13*s23 - 
                  s23^2) - s23*(-s13^2 + s13*s23 + s23^2)) - 
              p2q^2*p3q*(s12^2*(6*s13^2 + 2*s13*s23 + s23^2) + s12*s23*
                 (3*s13^2 + 3*s13*s23 + s23^2) + s13*s23*(-s13^2 + 
                  2*s13*s23 + 2*s23^2)) + p2q*p3q^2*(s12^2*(3*s13 - 2*s23)*
                 s23 - s13*s23^2*(s13 + s23) + s12^3*(6*s13 + s23) - 
                s12*s23*(2*s13^2 + 3*s13*s23 + 2*s23^2))) - 
            p1q^3*s23*(p2q*p3q*s23*(-6*s12^2 + 8*s12*s13 - 2*s13^2 + 
                5*s12*s23 + 9*s13*s23) + p3q^2*(8*s12^3 + 2*s12^2*s23 + 
                3*s13*s23^2 + 2*s12*s23*(-s13 + s23)) + 
              p2q^2*(-2*s13*(s13 - 3*s23)*s23 + s12*(-8*s13^2 + 2*s13*s23 + 
                  3*s23^2))) + p1q^2*(p3q^3*(4*s12^4 - 5*s12^3*s23 + 
                s12*(5*s13 - s23)*s23^2 - s23^3*(s13 + s23) - s12^2*s23*
                 (s13 + 2*s23)) - p2q*p3q^2*(s12^2*(7*s13 - 3*s23)*s23 + 
                3*s12^3*(4*s13 + 3*s23) + s12*s23*(-2*s13^2 - 5*s13*s23 + 
                  3*s23^2) + s23^2*(-5*s13^2 + 3*s13*s23 + 3*s23^2)) - 
              p2q^3*(s12*(4*s13^3 - 7*s13^2*s23 - 5*s13*s23^2 + s23^3) + 
                s23*(s13^3 - 6*s13^2*s23 + s13*s23^2 + s23^3)) + 
              p2q^2*p3q*(s12*s23*(13*s13^2 + 5*s13*s23 - 3*s23^2) + 
                s12^2*(12*s13^2 + 2*s13*s23 + 5*s23^2) - s23*(s13^3 - 
                  11*s13^2*s23 + 3*s13*s23^2 + 3*s23^3)))))/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*
           (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*E0 . E0conj + 
       ((-9*ep^2*p1q*p2q*(s12 + s13 + s23)*((p2q*s13 - p1q*s23)*
             (p2q*s13*(s12 + s13 - s23) + p1q*s23*(s12 - s13 + s23)) + 
            p3q^2*s12*(s12^2 + 2*s13*s23 + s12*(s13 + s23)) - 
            2*p3q*s13*(-(p1q*s23*(s12 + s23)) + p2q*(s12^2 + s12*s13 + 
                s13*s23))))/(2*(p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         (9*(p1q^4*(p2q + p3q)*s23^3*(s12 + s13 + s23) + p1q^3*(p2q + p3q)*
             s23^2*(s12 + s13 + s23)*(p3q*(-4*s12 + s23) + p2q*(-2*s13 + 
                s23)) - 2*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*
             (-(p3q^3*s12^2*(s12 + s13 + s23)) + p2q^3*s13*(s12 + s23)*(s12 + 
                s13 + s23) + p2q*p3q^2*s12*(s13 + s23)*(s12 + s13 + s23) - 
              p2q^2*p3q*(s12^3 + s12*s23^2 - s13*s23*(s13 + s23) + 
                s12^2*(s13 + 2*s23))) - p1q^2*s23*(s12 + s13 + s23)*
             (p3q^3*s12*(-5*s12 + 4*s23) - p2q^2*p3q*(2*s12^2 + 4*s12*s13 + 
                s13^2 - 2*s12*s23 - 2*s13*s23) - p2q*p3q^2*(7*s12^2 + 
                2*s12*(s13 - 2*s23) + 2*s23^2) + p2q^3*(4*s12^2 - s13^2 + 
                2*s13*s23 + 2*s23^2 + 2*s12*(s13 + 3*s23))) + 
            p1q*(-(p3q^4*s12^2*(2*s12 - 5*s23)*(s12 + s13 + s23)) - 
              4*p2q*p3q^3*s12*(s12^3 + s12^2*s13 + s23*(s13 + s23)^2) - 
              4*p2q^3*p3q*(s12 + s23)*(s12^3 + s12*s23^2 - s13*s23*
                 (s13 + s23) + s12^2*(s13 + 2*s23)) + p2q^2*p3q^2*(-2*s12^4 - 
                s13^2*s23*(s13 + s23) + s12^3*(2*s13 + s23) + 
                s12^2*(6*s13^2 + 11*s13*s23 + 3*s23^2) + s12*s13*(2*s13^2 + 
                  5*s13*s23 + 4*s23^2)) + p2q^4*s13*(4*s12^3 + 6*s12^2*
                 (s13 + 2*s23) + s23*(s13^2 + 5*s13*s23 + 4*s23^2) + 
                s12*(2*s13^2 + 11*s13*s23 + 12*s23^2)))))/
          (4*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         (9*ep*(p1q^6*(p2q + p3q)*s23^4*(s12^2 + 2*s12*s13 + s13^2 + 
              5*s12*s23 + 5*s13*s23 + 4*s23^2) + (p2q + p3q)^3*
             (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)^2*(-(p3q^2*s12*s23) + 
              p2q^2*(4*s12*s13 - 2*s12*s23 - s13*s23) - p2q*p3q*(4*s12^2 + 
                3*s12*s23 + s13*s23)) - p1q^5*s23^3*(s12 + s13 + s23)*
             (p2q*p3q*(s12^2 + 4*s12*s13 + 3*s13^2 + 21*s12*s23 + 
                13*s13*s23) + p2q^2*(6*s12^2 + 5*s12*s13 + 3*s13^2 + 
                16*s12*s23 + 11*s13*s23 + 4*s23^2) + p3q^2*(3*s12^2 + 
                2*(s13 - 2*s23)*s23 + s12*(7*s13 + 13*s23))) + 
            p1q^4*s23^2*(s12 + s13 + s23)*(p2q^3*(3*s13^3 + 9*s13^2*s23 + 
                15*s13*s23^2 + s23^3 + 2*s12^2*(6*s13 + s23) + 7*s12*s13*
                 (s13 + 5*s23)) + p3q^3*(3*s12^3 + s23^2*(-2*s13 + s23) - 
                s12*s23*(3*s13 + 13*s23) + s12^2*(11*s13 + 15*s23)) + 
              p2q^2*p3q*(12*s12^3 + 3*s13^3 + 16*s13^2*s23 + 14*s13*s23^2 - 
                5*s23^3 + s12^2*(2*s13 + 35*s23) + s12*(s13^2 + 41*s13*s23 - 
                  7*s23^2)) + p2q*p3q^2*(-s12^3 + s12^2*(s13 + 40*s23) + 
                s12*(10*s13^2 + 27*s13*s23 - 8*s23^2) + s23*(7*s13^2 + 
                  s13*s23 - s23^2))) - p1q^3*s23*(s12 + s13 + s23)*
             (p3q^4*(s12^4 - s23^3*(s13 + s23) + s12*s23^2*(-s13 + 2*s23) - 
                3*s12^2*s23*(4*s13 + 5*s23) + s12^3*(5*s13 + 7*s23)) + 
              p2q^2*p3q^2*(6*s12^4 + s12^3*(5*s13 + 24*s23) + 
                s12^2*(2*s13^2 + 45*s13*s23 - 33*s23^2) + s12*(3*s13^3 + 
                  27*s13^2*s23 + 12*s13*s23^2 - 19*s23^3) + 
                s23*(8*s13^3 + 17*s13^2*s23 - 17*s13*s23^2 - 6*s23^3)) - 
              p2q^3*p3q*(-s13^4 - 9*s13^3*s23 - 33*s13^2*s23^2 + 
                15*s13*s23^3 + 4*s23^4 + 2*s12^3*(6*s13 + 7*s23) + 
                s12^2*(7*s13^2 + 10*s13*s23 + 25*s23^2) + s12*(2*s13^3 - 
                  37*s13^2*s23 + 8*s13*s23^2 + 7*s23^3)) - p2q*p3q^3*(s12^4 + 
                s12^3*(2*s13 - 37*s23) + s23^2*(3*s13^2 + 9*s13*s23 + 
                  4*s23^2) + s12^2*(9*s13^2 - 13*s13*s23 + 21*s23^2) + 
                s12*(8*s13^2*s23 + 9*s23^3)) + p2q^4*(s13^4 + 8*s12^3*s23 + 
                s13^3*s23 + 21*s13^2*s23^2 + 2*s13*s23^3 - s23^4 + 
                2*s12^2*(3*s13^2 + s13*s23 + 9*s23^2) + s12*(3*s13^3 + 
                  18*s13^2*s23 + 5*s13*s23^2 + 9*s23^3))) + 
            p1q*(p2q + p3q)*(p3q^5*s12^2*s23*(s12^3 + 3*s23*(s13 + s23)^2 + 
                s12^2*(-2*s13 + 3*s23) + s12*(-3*s13^2 + 2*s13*s23 + 
                  5*s23^2)) + p2q*p3q^4*s12*(-4*s12^5 - 8*s12^4*(s13 - s23) + 
                2*s13*s23^2*(s13 + s23)^2 + 2*s12^2*s23*(5*s13^2 + 
                  28*s13*s23 + 19*s23^2) + s12^3*(-4*s13^2 + 15*s13*s23 + 
                  37*s23^2) + s12*s23*(3*s13^3 + 29*s13^2*s23 + 39*s13*
                   s23^2 + 13*s23^3)) + p2q^2*p3q^3*(-4*s12^6 + 3*s13^2*s23^2*
                 (s13 + s23)^2 + s12^5*(4*s13 + 9*s23) + s12^2*s23^2*
                 (44*s13^2 + 72*s13*s23 + 21*s23^2) + s12^4*(20*s13^2 + 
                  36*s13*s23 + 49*s23^2) + s12*s13*s23*(3*s13^3 + 
                  12*s13^2*s23 + 19*s13*s23^2 + 10*s23^3) + s12^3*
                 (12*s13^3 + 24*s13^2*s23 + 92*s13*s23^2 + 57*s23^3)) + 
              p2q^3*p3q^2*(2*s12^5*(6*s13 - s23) + s12^4*(12*s13^2 + 
                  19*s13*s23 + 11*s23^2) - 4*s12^3*(3*s13^3 + 3*s13^2*s23 - 
                  16*s13*s23^2 - 7*s23^3) + 2*s12*s13*s23*(-3*s13^3 + 
                  4*s13^2*s23 + 15*s13*s23^2 + 9*s23^3) + s13^2*s23*
                 (-3*s13^3 + 5*s13^2*s23 + 17*s13*s23^2 + 9*s23^3) - 
                3*s12^2*(4*s13^4 + 12*s13^3*s23 - 8*s13^2*s23^2 - 
                  25*s13*s23^3 - 5*s23^4)) + p2q^5*s13*(2*s12^3*(2*s13^2 - 
                  9*s13*s23 + 2*s23^2) + s13*s23*(-3*s13^3 - s13^2*s23 + 
                  5*s13*s23^2 + 3*s23^3) + s12^2*(8*s13^3 - 27*s13^2*s23 - 
                  25*s13*s23^2 + 8*s23^3) + 2*s12*(2*s13^4 - 6*s13^3*s23 - 
                  11*s13^2*s23^2 - 2*s13*s23^3 + 2*s23^4)) + 
              p2q^4*p3q*(4*s12^4*(-3*s13^2 + 5*s13*s23 + s23^2) + 
                s12^3*(-20*s13^3 - s13^2*s23 + 62*s13*s23^2 + 8*s23^3) + 
                s13^2*s23*(-2*s13^3 + 9*s13^2*s23 + 20*s13*s23^2 + 9*s23^3) + 
                s12^2*(-4*s13^4 - 20*s13^3*s23 + 29*s13^2*s23^2 + 
                  56*s13*s23^3 + 4*s23^4) + s12*s13*(4*s13^4 - s13^3*s23 + 
                  8*s13^2*s23^2 + 23*s13*s23^3 + 14*s23^4))) - 
            p1q^2*s23*(p3q^5*s12*(-s12^4 + 6*s12^3*(s13 + s23) + 
                3*s23^2*(s13 + s23)^2 + s12*s23*(-4*s13^2 - s13*s23 + 
                  3*s23^2) + s12^2*(7*s13^2 + 10*s13*s23 + 7*s23^2)) + 
              p2q*p3q^4*(-18*s12^5 + 3*s13*s23^2*(s13 + s23)^2 + 
                s12^4*(-21*s13 + 4*s23) + s12^3*(-12*s13^2 + 20*s13*s23 + 
                  47*s23^2) + 2*s12*s23*(-s13^3 + 16*s13^2*s23 + 
                  24*s13*s23^2 + 7*s23^3) + s12^2*(-9*s13^3 - 10*s13^2*s23 + 
                  57*s13*s23^2 + 39*s23^3)) + p2q^5*(-8*s12^4*s13 + 
                s12^3*(-4*s13^2 - 40*s13*s23 + 2*s23^2) + s12^2*(9*s13^3 - 
                  42*s13^2*s23 - 49*s13*s23^2 + 4*s23^3) + s12*(6*s13^4 - 
                  22*s13^3*s23 - 33*s13^2*s23^2 - 14*s13*s23^3 + 2*s23^4) + 
                s13*(s13^4 - 12*s13^3*s23 - 13*s13^2*s23^2 + 3*s13*s23^3 + 
                  3*s23^4)) + p2q^4*p3q*(8*s12^5 - 8*s12^4*(s13 - 2*s23) + 
                s12^3*(-23*s13^2 - 58*s13*s23 + 19*s23^2) - 2*s12^2*
                 (8*s13^3 + 30*s13^2*s23 + 21*s13*s23^2 - 11*s23^3) + 
                s12*(-11*s13^4 - 36*s13^3*s23 + 13*s13^2*s23^2 + 
                  20*s13*s23^3 + 11*s23^4) + s13*(-2*s13^4 - 26*s13^3*s23 - 
                  5*s13^2*s23^2 + 31*s13*s23^3 + 12*s23^4)) + 
              p2q^3*p3q^2*(12*s12^5 + 9*s12^4*(3*s13 + 4*s23) + 
                s12^3*(28*s13^2 + 36*s13*s23 + 53*s23^2) + s12^2*(4*s13^3 + 
                  28*s13^2*s23 + 78*s13*s23^2 + 53*s23^3) + 
                s13*(-3*s13^4 - 20*s13^3*s23 + 12*s13^2*s23^2 + 47*s13*
                   s23^3 + 18*s23^4) + s12*(-12*s13^4 - 8*s13^3*s23 + 
                  99*s13^2*s23^2 + 94*s13*s23^3 + 24*s23^4)) + 
              p2q^2*p3q^3*(-13*s12^5 + 22*s12^4*s23 + 4*s12^3*(7*s13^2 + 
                  20*s13*s23 + 21*s23^2) + s13*s23*(-2*s13^3 + 15*s13^2*s23 + 
                  29*s13*s23^2 + 12*s23^3) + s12^2*(20*s13^3 + 64*s13^2*s23 + 
                  153*s13*s23^2 + 75*s23^3) + s12*(5*s13^4 + 20*s13^3*s23 + 
                  106*s13^2*s23^2 + 110*s13*s23^3 + 26*s23^4)))))/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*
        p1 . E0conj*p2 . E0 + ((-9*ep^2*p1q*(s12 + s13 + s23)*
           (p2q^3*s13^2*(s12 + s13) - p2q^2*s13*(p3q*(2*s12^2 + s12*s13 - 
                s13^2) + p1q*s13*s23) + (p3q*(s12 + s13) - p1q*s23)*
             (p3q^2*s12^2 - p1q^2*s23^2) + p2q*(p3q^2*s12*(s12^2 - s12*s13 - 
                2*s13^2) + 2*p1q*p3q*s12*s13*s23 - p1q^2*(s12 + s13)*s23^2)))/
          (2*(p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
            2*p3q*s12*(p2q*s13 + p1q*s23))) + (9*p1q*(s12 + s13 + s23)*
           (2*p2q^4*s13*(s12 + s13)*(s12 + s23) - p3q*(p3q*(s12 + s13) - 
              p1q*s23)*(2*p3q^2*s12^2 - 3*p1q*p3q*s12*s23 + p1q^2*s23^2) + 
            p2q*(-2*p3q^3*s12*(s12 + s13)*(s12 - s13 - s23) + p1q^3*s23^3 + 
              p1q^2*p3q*s23^2*(-3*s12 - 3*s13 + 2*s23) + p1q*p3q^2*s23*(
                4*s12^2 + 3*s12*s13 + s13^2 - 4*s12*s23 - 2*s13*s23)) + 
            p2q^3*(p1q*s23*(-2*s12^2 - 3*s12*s13 + s13^2 - 2*s12*s23 - 
                4*s13*s23) - 2*p3q*(s12 + s13)*(s12^2 - s12*s13 + s12*s23 - 
                2*s13*s23)) + p2q^2*(p1q*p3q*(s12^2 + 2*s13*(s13 - 3*s23) + 
                s12*(s13 - 2*s23))*s23 + p1q^2*s23^2*(s12 - 2*s13 + 2*s23) - 
              2*p3q^2*(s12 + s13)*(s12^2 - s12*s13 - s13*s23))))/
          (2*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + 
            (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23))) + 
         (9*ep*(-(p1q^5*(p3q^2*(15*s12 + 8*s13) + p2q^2*(8*s12 + 13*s13) + 
               p2q*p3q*(21*s12 + 19*s13 - 2*s23))*s23^4*(s12 + s13 + s23)) + 
            4*p1q^6*(p2q + p3q)*s23^5*(s12 + s13 + s23) + 2*(p2q + p3q)^4*s12*
             (-(p3q*s12) + p2q*s13)^3*(s12 + s13 + s23)^2 + 
            p1q^4*s23^3*(s12 + s13 + s23)*(p2q*p3q^2*(39*s12^2 + 50*s12*s13 + 
                22*s13^2 - 10*s12*s23 - 4*s13*s23 - 4*s23^2) + 
              p2q^2*p3q*(18*s12^2 + 42*s12*s13 + 31*s13^2 - 10*s12*s23 - 
                4*s13*s23 - 2*s23^2) + p3q^3*(23*s12^2 + 20*s12*s13 + 
                2*s13^2 - 2*s12*s23 - 4*s13*s23 - 2*s23^2) + p2q^3*(6*s12^2 + 
                15*s13^2 + 2*s12*(10*s13 + s23))) + 2*p1q*(p2q + p3q)^2*
             (-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
             (p2q^3*s12*s13*(s13 - 3*s23)*(s12 + s13 + s23) + 
              p3q^3*s12^2*(s12^2 + s12*(s13 - 4*s23) - s23*(5*s13 + 4*s23)) + 
              p2q^2*p3q*(s13^2*s23*(s13 + s23) - s12^3*(2*s13 + s23) + 
                s12*s13*(s13^2 + s13*s23 - 2*s23^2) - s12^2*(s13^2 + 
                  4*s13*s23 + s23^2)) + p2q*p3q^2*s12*(s12^3 - s13*s23^2 - 
                s12^2*(s13 + 6*s23) - s12*(2*s13^2 + 9*s13*s23 + 6*s23^2))) - 
            p1q^2*(p2q + p3q)^2*s23*(s12 + s13 + s23)*
             (p3q^3*s12^2*(-9*s12^2 - 8*s12*s13 + s13^2 + 12*s12*s23 + 
                18*s13*s23 + 12*s23^2) - p2q^3*s13*(4*s12^3 + s13^3 + 
                2*s12*s23*(2*s13 + 3*s23) + s12^2*(3*s13 + 10*s23)) + 
              p2q*p3q^2*s12*(-3*s12^3 + 2*s12^2*(5*s13 + 7*s23) + 
                2*s13*(s13^2 + s13*s23 + 3*s23^2) + s12*(15*s13^2 + 
                  22*s13*s23 + 12*s23^2)) + p2q^2*p3q*(4*s12^4 + 
                2*s12^3*(3*s13 + s23) - s12^2*(s13^2 + 2*s13*s23 + 2*s23^2) + 
                s13^2*(-3*s13^2 + 4*s13*s23 + 6*s23^2) + s12*(-6*s13^3 + 
                  6*s13^2*s23 + 4*s13*s23^2))) - p1q^3*s23^2*
             (p3q^4*s12*(19*s12^3 + s13^3 - 13*s13^2*s23 - 22*s13*s23^2 - 
                8*s23^3 + s12^2*(37*s13 + 11*s23) + s12*(19*s13^2 - 
                  4*s13*s23 - 16*s23^2)) + p2q^2*p3q^2*(15*s12^4 + 
                s12^3*(38*s13 - 15*s23) + s12^2*(58*s13^2 - 33*s13*s23 - 
                  44*s23^2) + s12*(56*s13^3 + s13^2*s23 - 52*s13*s23^2 - 
                  14*s23^3) + s13*(21*s13^3 + 13*s13^2*s23 - 20*s13*s23^2 - 
                  12*s23^3)) + p2q*p3q^3*(37*s12^4 + s12^3*(74*s13 + 
                  11*s23) + s12^2*(48*s13^2 - 23*s13*s23 - 46*s23^2) + 
                s12*(16*s13^3 - 29*s13^2*s23 - 60*s13*s23^2 - 20*s23^3) + 
                s13*(5*s13^3 - s13^2*s23 - 12*s13*s23^2 - 6*s23^3)) + 
              p2q^4*(4*s12^4 + 7*s13^3*(s13 + s23) + 5*s12^3*(3*s13 + 
                  2*s23) + s12^2*(25*s13^2 + 21*s13*s23 + 8*s23^2) + 
                s12*(21*s13^3 + 18*s13^2*s23 + 6*s13*s23^2 + 2*s23^3)) - 
              p2q^3*p3q*(s12^4 + s12^3*(-8*s13 + 9*s23) + s12^2*(-42*s13^2 + 
                  5*s13*s23 + 8*s23^2) + s12*s13*(-54*s13^2 - 23*s13*s23 + 
                  12*s23^2) + s13*(-21*s13^3 - 17*s13^2*s23 + 10*s13*s23^2 + 
                  6*s23^3)))))/(2*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*
           (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*
             (p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*
             (p3q*(2*s12^2 + s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
            p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*(s12^2 + 
                s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*s23^2))))*p2 . E0*
        p2 . E0conj + p1 . E0*
        (((9*ep^2*p2q*(s12 + s13 + s23)*(-(p1q^3*s23^2*(s12 - s13 + s23)*
                (-(p3q*s12) + p2q*(s12 + s23))) - (p2q + p3q)*(p3q*s12 - 
                 p2q*s13)^2*(p2q*s13*(s12 + s13 - s23) - p3q*(s12^2 + 
                  2*s13*s23 + s12*(s13 + s23))) + p1q^2*s23*(
                -(p3q^2*s12*(2*s12^2 + s12*s23 + (3*s13 - s23)*s23)) + 
                p2q*p3q*(-(s13*(s13 - 3*s23)*s23) + s12^2*(4*s13 + s23) + 
                  s12*s23*(4*s13 + s23)) + p2q^2*s13*(3*s23*(-s13 + s23) + 
                  s12*(-2*s13 + 3*s23))) + p1q*(p2q^2*p3q*s13*(-2*s12^3 - 
                  s12^2*s13 + s12*s13*(s13 - 7*s23) + 2*s13*(s13 - 3*s23)*
                   s23) + p2q^3*s13^2*(s12^2 + s12*s13 + 3*(s13 - s23)*s23) + 
                p3q^3*s12*(s12^3 + s12^2*(s13 - s23) + 2*s12*(s13 - s23)*
                   s23 - 2*s13*s23^2) + p2q*p3q^2*(s12^4 - s12^3*s13 - 
                  4*s12*s13^2*s23 - 2*s13^2*s23^2 - s12^2*(2*s13^2 - 
                    5*s13*s23 + s23^2)))))/(2*(p1q + p2q + p3q)*s12*s23*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))) - (9*p2q*(s12 + s13 + s23)*(p1q^3*(p2q + p3q)*s23^
                2*(s12 + s23) + p1q^2*(p2q + p3q)*s23*(p3q*(-3*s12^2 - 
                  2*s12*s23 + s23^2) + p2q*(2*s12^2 - s12*s13 + 4*s12*s23 - 
                  2*s13*s23 + 2*s23^2)) + 2*(p3q^4*s12^2*(s12 + s23) + 
                p2q^4*s13^2*(s12 + s23) - p2q^3*p3q*s13*(2*s12^2 + 
                  3*s12*s23 + s23*(-s13 + s23)) - p2q*p3q^3*s12*
                 (s23*(s13 + s23) + s12*(2*s13 + s23)) + p2q^2*p3q^2*
                 (s12^3 + 2*s12^2*s23 - s13*s23^2 + s12*(s13^2 + s23^2))) - 
              p1q*(p3q^3*s12*(-2*s12^2 + s12*s23 + 3*s23^2) + p2q*p3q^2*
                 (s12*s23^2 + (s13 - 2*s23)*s23^2 + s12^2*(2*s13 + 3*s23)) + 
                p2q^3*s13*(2*s12^2 + 6*s12*s23 + s23*(-s13 + 4*s23)) - 
                p2q^2*p3q*(2*s12^3 + 6*s12^2*s23 - 2*s12*(s13 - 3*s23)*s23 + 
                  s23*(s13^2 - 5*s13*s23 + 2*s23^2)))))/(2*(p2q + p3q)*
             (p1q + p2q + p3q)*s12*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
              2*p3q*s12*(p2q*s13 + p1q*s23))) - (9*ep*p2q*(s12 + s13 + s23)*
             (3*p1q^5*(p2q + p3q)*s23^4*(s12 + s23) + 2*p2q*(p2q + p3q)*
               (p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*(-(p2q^2*s12*s13) + 
                p3q^2*s12*(s12 + s23) + p2q*p3q*(s12^2 - s12*s13 + 
                  2*s12*s23 + s13*s23)) - p1q^4*(p2q + p3q)*s23^3*(
                p2q*(4*s12^2 + 7*s12*s13 + 5*s12*s23 + 10*s13*s23 + s23^2) + 
                p3q*(7*s12^2 + 3*(s13 - s23)*s23 + 4*s12*(s13 + s23))) + 
              p1q^3*s23^2*(p3q^3*(5*s12^3 + s12^2*(5*s13 - 2*s23) - 
                  3*s13*s23^2 - s12*s23*(s13 + 7*s23)) + p2q^2*p3q*
                 (3*s12^3 + s12^2*(7*s13 - 3*s23) + s12*(12*s13^2 + 
                    13*s13*s23 - 10*s23^2) + s23*(21*s13^2 - 4*s13*s23 - 
                    4*s23^2)) + p2q*p3q^2*(12*s12^3 + s12^2*(13*s13 + 
                    3*s23) + s12*(9*s13^2 + 7*s13*s23 - 11*s23^2) + 
                  s23*(9*s13^2 - 8*s13*s23 - 2*s23^2)) + p2q^3*(4*s12^3 + 
                  3*s13*s23*(4*s13 + s23) + s12^2*(7*s13 + 8*s23) + 
                  s12*(3*s13^2 + 13*s13*s23 + 4*s23^2))) + p1q^2*s23*(
                p3q^4*s12*(-s12^3 - s12^2*(s13 - 4*s23) + 3*s13*s23^2 + 
                  5*s12*s23*(s13 + s23)) - p2q^4*s13*(4*s12^3 + 3*s13*s23*
                   (2*s13 + s23) + s12^2*(s13 + 14*s23) + s12*(-3*s13^2 + 
                    13*s13*s23 + 10*s23^2)) + p2q*p3q^3*(-6*s12^4 + 
                  5*s12^3*s23 + s13*s23^2*(7*s13 + 4*s23) + 3*s12*s23*
                   (4*s13^2 + 5*s13*s23 + 2*s23^2) + s12^2*(6*s13^2 + 
                    13*s13*s23 + 17*s23^2)) + p2q^3*p3q*(4*s12^4 + 
                  2*s12^3*(s13 + 7*s23) - 2*s12^2*(2*s13^2 + s13*s23 - 
                    9*s23^2) + s13*s23*(-15*s13^2 + 4*s13*s23 + 10*s23^2) + 
                  s12*(-2*s13^3 - 11*s13^2*s23 + 11*s13*s23^2 + 8*s23^3)) + 
                p2q^2*p3q^2*(-s12^4 + 7*s12^3*(s13 + s23) + s13*s23*
                   (-9*s13^2 + 10*s13*s23 + 10*s23^2) + s12^2*(3*s13^2 + 
                    4*s13*s23 + 18*s23^2) + s12*(-5*s13^3 + 6*s13^2*s23 + 
                    17*s13*s23^2 + 10*s23^3))) - p1q*(p3q^5*s12^3*s23*
                 (s12 + s13 + s23) + p2q^5*s13^2*(2*s12^2*(s13 - 4*s23) - 
                  s13*s23*(s13 + s23) + s12*(2*s13^2 - 7*s13*s23 - 
                    8*s23^2)) + p2q*p3q^4*s12*(-2*s12^4 - 2*s12^3*
                   (s13 - 2*s23) + 4*s13*s23^2*(-s13 + s23) + s12^2*s23*
                   (s13 + 12*s23) + s12*s23*(-5*s13^2 + 5*s13*s23 + 
                    6*s23^2)) + p2q^2*p3q^3*(-2*s12^5 + 4*s13^2*s23^2*
                   (s13 + s23) + s12^4*(4*s13 + 3*s23) + s12^2*s23*
                   (-s13^2 + 20*s13*s23 + 12*s23^2) + s12*s13*s23*(7*s13^2 + 
                    3*s13*s23 + 16*s23^2) + s12^3*(6*s13^2 + 3*s13*s23 + 
                    17*s23^2)) + p2q^3*p3q^2*(6*s12^4*s13 + s12^3*s23*
                   (11*s13 + 4*s23) + s13^2*s23*(-3*s13^2 + 7*s13*s23 + 
                    10*s23^2) + s12*s13*s23*(3*s13^2 + 12*s13*s23 + 
                    20*s23^2) + s12^2*(-6*s13^3 + 5*s13^2*s23 + 29*s13*
                     s23^2 + 4*s23^3)) + p2q^4*p3q*s13*(s12^3*(-6*s13 + 
                    8*s23) + 4*s13*s23*(-s13^2 + s13*s23 + 2*s23^2) + 
                  s12^2*(-4*s13^2 - 7*s13*s23 + 20*s23^2) + s12*(2*s13^3 - 
                    11*s13^2*s23 + 3*s13*s23^2 + 12*s23^3)))))/
            (2*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p1 . E0conj + 
         ((-9*ep^2*(s12 + s13 + s23)*(-((p2q + p3q)*(-(p3q*s12) + p2q*s13)^
                 3) - p1q^3*s23^2*(-(p3q*s12) + p2q*(s12 + s23)) + 
              p1q*(-(p3q*s12) + p2q*s13)*(-(p3q^2*s12*(s12 - 2*s23)) + 
                p2q^2*s13*(s12 + s23) + p2q*p3q*s12*(-s12 + s13 + s23)) + 
              p1q^2*s23*(p2q^2*s13*s23 + p3q^2*s12*(-2*s12 + s23) + 
                p2q*p3q*(s13*s23 + s12*(2*s13 + s23)))))/(2*(p1q + p2q + p3q)*
             s12*s23*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(
                p2q*s13 + p1q*s23))) + (9*(p1q^4*(p2q + p3q)*s23^3*(s12 + 
                s13 + s23) + p1q^3*(p2q + p3q)*s23^2*(s12 + s13 + s23)*(
                p3q*(-4*s12 + s23) + p2q*(-2*s13 + s23)) - 2*(p2q + p3q)*(
                -(p3q*s12) + p2q*s13)*(-(p3q^3*s12^2*(s12 + s13 + s23)) + 
                p2q^3*s13*(s12 + s23)*(s12 + s13 + s23) + p2q*p3q^2*s12*
                 (s13 + s23)*(s12 + s13 + s23) - p2q^2*p3q*(s12^3 + 
                  s12*s23^2 - s13*s23*(s13 + s23) + s12^2*(s13 + 2*s23))) - 
              p1q^2*s23*(s12 + s13 + s23)*(p3q^3*s12*(-5*s12 + 4*s23) - 
                p2q^2*p3q*(2*s12^2 + 4*s12*s13 + s13^2 - 2*s12*s23 - 
                  2*s13*s23) - p2q*p3q^2*(7*s12^2 + 2*s12*(s13 - 2*s23) + 
                  2*s23^2) + p2q^3*(4*s12^2 - s13^2 + 2*s13*s23 + 2*s23^2 + 
                  2*s12*(s13 + 3*s23))) + p1q*(-(p3q^4*s12^2*(2*s12 - 5*s23)*
                  (s12 + s13 + s23)) - 4*p2q*p3q^3*s12*(s12^3 + s12^2*s13 + 
                  s23*(s13 + s23)^2) - 4*p2q^3*p3q*(s12 + s23)*(s12^3 + 
                  s12*s23^2 - s13*s23*(s13 + s23) + s12^2*(s13 + 2*s23)) + 
                p2q^2*p3q^2*(-2*s12^4 - s13^2*s23*(s13 + s23) + 
                  s12^3*(2*s13 + s23) + s12^2*(6*s13^2 + 11*s13*s23 + 
                    3*s23^2) + s12*s13*(2*s13^2 + 5*s13*s23 + 4*s23^2)) + 
                p2q^4*s13*(4*s12^3 + 6*s12^2*(s13 + 2*s23) + s23*(s13^2 + 
                    5*s13*s23 + 4*s23^2) + s12*(2*s13^2 + 11*s13*s23 + 
                    12*s23^2)))))/(4*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*
             (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + 
                p1q*s23))) - (9*ep*(p1q^6*(p2q + p3q)*s23^4*(s12^2 + 
                2*s12*s13 + s13^2 - s12*s23 - s13*s23 - 2*s23^2) - 
              p1q^5*s23^3*(s12 + s13 + s23)*(p2q^2*(6*s12^2 + 5*s12*s13 + 
                  3*s13^2 - 6*s12*s23 - 9*s13*s23 - 6*s23^2) + p2q*p3q*
                 (s12^2 + 4*s12*s13 + 3*s13^2 - 21*s12*s23 - 13*s13*s23 - 
                  4*s23^2) + p3q^2*(3*s12^2 + 7*s12*(s13 - s23) + 
                  2*s23*(-2*s13 + s23))) - (p2q + p3q)^2*(p3q*s12 - p2q*s13)^
                2*(s12 + s13 + s23)^2*(p3q^3*s12*s23 + p2q*p3q^2*(-4*s12^2 + 
                  s13*s23) - p2q^2*p3q*(4*s12^2 - 4*s12*s13 + 3*s12*s23 + 
                  2*s13*s23) + p2q^3*(s13*s23 + 2*s12*(2*s13 + s23))) + 
              p1q^4*s23^2*(s12 + s13 + s23)*(p3q^3*(3*s12^3 + s12^2*
                   (11*s13 - 9*s23) + s23^2*(4*s13 + s23) + s12*s23*
                   (-17*s13 + 7*s23)) + p2q^3*(3*s13^3 + 6*s12^2*(2*s13 - 
                    3*s23) - 15*s13^2*s23 - 17*s13*s23^2 + s23^3 + 
                  s12*(7*s13^2 - 19*s13*s23 - 14*s23^2)) + p2q^2*p3q*
                 (12*s12^3 + 3*s13^3 + s12^2*(2*s13 - 27*s23) - 26*s13^2*
                   s23 - 16*s13*s23^2 + 7*s23^3 + s12*(s13^2 - 57*s13*s23 - 
                    11*s23^2)) + p2q*p3q^2*(-s12^3 + s12^2*(s13 - 42*s23) + 
                  s12*(10*s13^2 - 47*s13*s23 - 2*s23^2) + s23*(-11*s13^2 + 
                    s13*s23 + 3*s23^2))) - p1q*(p2q + p3q)^2*(s12 + s13 + 
                s23)*(p3q^4*s12^2*s23*(s12^2 + s12*(5*s13 - 2*s23) - 
                  3*s23*(s13 + s23)) + p2q*p3q^3*s12*(-4*s12^4 - 2*s13*s23^2*
                   (s13 + s23) + s12^3*(-4*s13 + 11*s23) + s12^2*s23*
                   (10*s13 + 17*s23) + s12*s23*(-13*s13^2 + 3*s13*s23 + 
                    2*s23^2)) + p2q^4*s13*(s13*s23*(s13^2 - 2*s13*s23 - 
                    3*s23^2) + 2*s12^2*(2*s13^2 - 5*s13*s23 - 2*s23^2) + 
                  s12*(4*s13^3 - 9*s13^2*s23 - 17*s13*s23^2 - 4*s23^3)) + 
                p2q^3*p3q*(-4*s12^3*(3*s13^2 - s13*s23 + s23^2) + 3*s13^2*s23*
                   (-s13^2 + s13*s23 + 2*s23^2) + s12*s13*s23*(-6*s13^2 + 
                    s13*s23 + 6*s23^2) - s12^2*(12*s13^3 + 3*s13^2*s23 - 
                    6*s13*s23^2 + 4*s23^3)) + p2q^2*p3q^2*(s12*s13^2*
                   (11*s13 - 4*s23)*s23 - 3*s13^2*s23^2*(s13 + s23) + 
                  6*s12^4*(2*s13 + s23) + s12^3*(12*s13^2 + s13*s23 + 
                    11*s23^2) + s12^2*(-6*s13^2*s23 + 5*s23^3))) + 
              p1q^3*s23*(s12 + s13 + s23)*(p3q^4*(-s12^4 - 5*s12^3*
                   (s13 - s23) + s12^2*(22*s13 - 9*s23)*s23 + s23^3*
                   (s13 + s23) - s12*s23^2*(13*s13 + 2*s23)) + p2q*p3q^3*
                 (s12^4 - 7*s13*s23^2*(s13 + s23) + s12^3*(2*s13 + 33*s23) + 
                  s12*s23*(20*s13^2 - 28*s13*s23 - 15*s23^2) + s12^2*
                   (9*s13^2 + 45*s13*s23 - 13*s23^2)) + p2q^4*(-s13^4 + 
                  8*s12^3*s23 + 11*s13^3*s23 + 15*s13^2*s23^2 - 2*s13*s23^3 + 
                  s23^4 + s12^2*(-6*s13^2 + 34*s13*s23 + 10*s23^2) + 
                  s12*(-3*s13^3 + 16*s13^2*s23 + 29*s13*s23^2 + 3*s23^3)) + 
                p2q^3*p3q*(6*s12^3*(2*s13 + 3*s23) + s12^2*(7*s13^2 + 
                    42*s13*s23 - 9*s23^2) + s12*(2*s13^3 + 45*s13^2*s23 + 
                    12*s13*s23^2 - 21*s23^3) - s13*(s13^3 - 21*s13^2*s23 - 
                    21*s13*s23^2 + 13*s23^3)) - p2q^2*p3q^2*(6*s12^4 + 
                  s12^3*(5*s13 - 38*s23) + s12^2*(2*s13^2 - 31*s13*s23 + 
                    7*s23^2) + s23*(-10*s13^3 - 7*s13^2*s23 + 11*s13*s23^2 + 
                    2*s23^3) + s12*(3*s13^3 - 49*s13^2*s23 + 8*s13*s23^2 + 
                    29*s23^3))) + p1q^2*s23*(-(p3q^5*s12*(s12^4 + 2*s12^3*
                    (5*s13 - 2*s23) + 3*s23^2*(s13 + s23)^2 + s12^2*
                    (9*s13^2 - 10*s13*s23 - 5*s23^2) + s12*s23*(-14*s13^2 - 
                     11*s13*s23 + 3*s23^2))) + p2q*p3q^4*(-14*s12^5 - 
                  3*s13*s23^2*(s13 + s23)^2 + s12^4*(-29*s13 + 6*s23) + 
                  s12^3*(8*s13^2 + 48*s13*s23 + 43*s23^2) - 2*s12*s23*
                   (-5*s13^3 - 6*s13^2*s23 + s23^3) + s12^2*(23*s13^3 + 
                    76*s13^2*s23 + 71*s13*s23^2 + 21*s23^3)) - 
                p2q^5*(8*s12^4*s13 + 2*s12^3*(10*s13^2 + 12*s13*s23 + 
                    s23^2) + s12^2*(11*s13^3 + 48*s13^2*s23 + 31*s13*s23^2 + 
                    4*s23^3) + 3*s13*(s13^4 + 2*s13^3*s23 + s13^2*s23^2 + 
                    s13*s23^3 + s23^4) + s12*(2*s13^4 + 22*s13^3*s23 + 
                    33*s13^2*s23^2 + 18*s13*s23^3 + 2*s23^4)) + p2q^4*p3q*
                 (8*s12^5 + 8*s12^4*(3*s13 + 4*s23) + s12^3*(5*s13^2 + 
                    50*s13*s23 + 37*s23^2) - 2*s12^2*(6*s13^3 + 7*s13^2*s23 - 
                    11*s13*s23^2 - 5*s23^3) - s13^2*(6*s13^3 + 16*s13^2*s23 + 
                    5*s13*s23^2 - 5*s23^3) - s12*(7*s13^4 + 24*s13^3*s23 + 
                    9*s13^2*s23^2 + 4*s13*s23^3 + 3*s23^4)) + p2q^3*p3q^2*
                 (-4*s12^5 + s12^4*(31*s13 + 30*s23) + s12^2*s23*(68*s13^2 + 
                    106*s13*s23 + 43*s23^2) + s12^3*(48*s13^2 + 104*s13*s23 + 
                    73*s23^2) + s12*(-16*s13^4 - 4*s13^3*s23 + 59*s13^2*
                     s23^2 + 42*s13*s23^3 + 4*s23^4) + s13*(-3*s13^4 - 
                    14*s13^3*s23 - 4*s13^2*s23^2 + 13*s13*s23^3 + 6*s23^4)) + 
                p2q^2*p3q^3*(-25*s12^5 + 4*s12^4*(-5*s13 + s23) + 
                  3*s13^2*s23^2*(s13 + s23) + s12^3*(40*s13^2 + 84*s13*s23 + 
                    80*s23^2) + s12^2*(24*s13^3 + 120*s13^2*s23 + 137*s13*
                     s23^2 + 57*s23^3) + s12*(-11*s13^4 + 24*s13^3*s23 + 
                    74*s13^2*s23^2 + 42*s13*s23^3 + 6*s23^4)))))/
            (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*
             (-(p2q^3*s13^2*(s12 + s13)) - (p3q*s12 - p1q*s23)^2*(
                p3q*(s12 + s13) - p1q*s23) + p2q^2*s13*(p3q*(2*s12^2 + 
                  s12*s13 - s13^2) + p1q*(2*s12 + 3*s13)*s23) + 
              p2q*(p3q^2*s12*(-s12^2 + s12*s13 + 2*s13^2) + 2*p1q*p3q*
                 (s12^2 + s12*s13 + s13^2)*s23 - p1q^2*(s12 + 3*s13)*
                 s23^2))))*p2 . E0conj))*Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep]
 
P1Avg = ((ep^2*(-40*s13^2*(s13 + s23) + s12*s13*(15*s13 + 7*s23) + 
          s12^2*(19*s13 + 20*s23)))/(36*s12*s13*(s13 + s23)) + 
       (ep*(-9*(p2q + p3q)^3*s13^2*(-(p3q*s12) + p2q*s13)*s23*
           (p3q*s12 - p2q*(s13 + s23))*(s12^2 + 6*s12*(s13 + s23) + 
            5*(s13 + s23)^2) + 9*p1q^5*s13*s23^2*(s13 + s23)*
           (5*s13*(s13 + s23)^2 + s12^2*(s13 + 2*s23) + 
            2*s12*(3*s13^2 + 4*s13*s23 + s23^2)) + 
          p1q*(-(p3q^4*s12*(2*s12^4*(9*s13^2 - 10*s23^2) + s12^3*
                (36*s13^3 + 18*s13^2*s23 - 31*s13*s23^2 - 20*s23^3) + s12*s13*
                s23*(72*s13^3 + 351*s13^2*s23 + 398*s13*s23^2 - 9*s23^3) + 
               s12^2*s13*(18*s13^3 - 27*s13^2*s23 + 122*s13*s23^2 + 
                 120*s23^3) + s13^2*s23*(45*s13^3 - 78*s13^2*s23 + 
                 29*s13*s23^2 + 152*s23^3))) + p2q^4*s13*(s13 + s23)*
             (s12^2*(18*s13^3 + 45*s13^2*s23 + 177*s13*s23^2 + 140*s23^3) + 
              2*s12*s13*(18*s13^3 + 99*s13^2*s23 + 224*s13*s23^2 + 
                167*s23^3) + s13*(18*s13^4 + 81*s13^3*s23 - 97*s13^2*s23^2 - 
                125*s13*s23^3 + 35*s23^4)) + p2q*p3q^3*
             (2*s12^4*s13*(9*s13^2 + 18*s13*s23 + 4*s23^2) + 
              s12^5*(-18*s13^2 + 20*s23^2) + s13^2*s23*(s13 + s23)^2*(
                45*s13^2 - 168*s13*s23 + 35*s23^2) + s12*s13^2*s23*(
                -45*s13^3 + 711*s13^2*s23 + 581*s13*s23^2 - 175*s23^3) + 
              s12^3*(90*s13^4 + 225*s13^3*s23 - 317*s13^2*s23^2 - 
                436*s13*s23^3 - 20*s23^4) + s12^2*s13*(54*s13^4 - 
                189*s13^3*s23 - 844*s13^2*s23^2 - 901*s13*s23^3 + 
                156*s23^4)) + p2q^2*p3q^2*(3*s13^2*s23*(s13 + s23)^2*(
                39*s13^2 - 198*s13*s23 + 35*s23^2) + s12^4*(54*s13^3 + 
                54*s13^2*s23 - 23*s13*s23^2 - 20*s23^3) - s12^2*s13*(
                54*s13^4 + 531*s13^3*s23 + 975*s13^2*s23^2 + 507*s13*s23^3 - 
                439*s23^4) + s12^3*(54*s13^4 + 81*s13^3*s23 - 414*s13^2*
                 s23^2 - 444*s13*s23^3 - 20*s23^4) + s12*s13^2*(-54*s13^4 - 
                9*s13^3*s23 + 1264*s13^2*s23^2 + 1555*s13*s23^3 + 
                336*s23^4)) + p2q^3*p3q*s13*(s13*(s13 + s23)^2*(18*s13^3 + 
                135*s13^2*s23 - 586*s13*s23^2 + 105*s23^3) - 
              s12^3*(54*s13^3 + 117*s13^2*s23 + 219*s13*s23^2 + 128*s23^3) + 
              s12^2*(-90*s13^4 - 351*s13^3*s23 - 260*s13^2*s23^2 + 
                313*s13*s23^3 + 432*s23^4) + s12*s13*(-18*s13^4 + 
                225*s13^3*s23 + 1277*s13^2*s23^2 + 1727*s13*s23^3 + 
                693*s23^4))) + p1q^4*s23*(p2q*(s13 + s23)*
             (s12^2*(9*s13^3 + 205*s13^2*s23 + 166*s13*s23^2 - 20*s23^3) + 
              s12*(36*s13^4 + 504*s13^3*s23 + 530*s13^2*s23^2 - 6*s13*s23^3 - 
                20*s23^4) - 3*s13*(15*s13^4 + 47*s13^3*s23 - 27*s13^2*s23^2 - 
                55*s13*s23^3 + 4*s23^4)) + p3q*(-9*s12^3*s13*(s13 + 2*s23)^
                2 - 12*s13*s23*(s13 + s23)^2*(8*s13^2 - 11*s13*s23 + s23^2) - 
              4*s12^2*(9*s13^4 - 13*s13^3*s23 - 50*s13^2*s23^2 - 
                23*s13*s23^3 + 5*s23^4) + s12*(45*s13^5 + 432*s13^4*s23 + 
                773*s13^3*s23^2 + 362*s13^2*s23^3 - 44*s13*s23^4 - 
                20*s23^5))) + p1q^3*s23*(p2q^2*(s13 + s23)*
             (s12^2*(63*s13^3 + 654*s13^2*s23 + 496*s13*s23^2 - 20*s23^3) + 
              4*s12*(54*s13^4 + 368*s13^3*s23 + 366*s13^2*s23^2 + 
                11*s13*s23^3 - 5*s23^4) - s13*(63*s13^4 + 466*s13^3*s23 + 
                35*s13^2*s23^2 - 356*s13*s23^3 + 12*s23^4)) + 
            p3q^2*(-2*s13^2*(167*s13 - 117*s23)*s23*(s13 + s23)^2 + 
              9*s12^4*s13*(s13 + 2*s23) - s12^3*(18*s13^3 + 222*s13^2*s23 + 
                107*s13*s23^2 - 60*s23^3) + s12*s13*(18*s13^4 + 822*s13^3*
                 s23 + 1479*s13^2*s23^2 + 692*s13*s23^3 + 17*s23^4) + 
              s12^2*(-225*s13^4 - 296*s13^3*s23 + 121*s13^2*s23^2 + 
                372*s13*s23^3 + 60*s23^4)) + p2q*p3q*
             (-(s12^3*(72*s13^3 + 303*s13^2*s23 + 143*s13*s23^2 - 
                 60*s23^3)) - 2*s13*(s13 + s23)^2*(9*s13^3 + 346*s13^2*s23 - 
                301*s13*s23^2 + 6*s23^3) + s12^2*(-198*s13^4 + 304*s13^3*
                 s23 + 1172*s13^2*s23^2 + 830*s13*s23^3 + 40*s23^4) + 
              s12*(288*s13^5 + 2591*s13^4*s23 + 4415*s13^3*s23^2 + 
                2173*s13^2*s23^3 + 41*s13*s23^4 - 20*s23^5))) + 
          p1q^2*(p3q^3*(-(s13^2*(141*s13 - 107*s23)*s23^2*(s13 + s23)^2) + 
              3*s12^4*(6*s13^3 + 24*s13^2*s23 - s13*s23^2 - 20*s23^3) + 
              s12^3*(36*s13^4 + 234*s13^3*s23 - 284*s13^2*s23^2 - 
                359*s13*s23^3 - 60*s23^4) + s12*s13*s23*(18*s13^4 + 
                802*s13^3*s23 + 885*s13^2*s23^2 + 92*s13*s23^3 - 9*s23^4) + 
              s12^2*s13*(18*s13^4 - 36*s13^3*s23 - 442*s13^2*s23^2 - 
                601*s13*s23^3 + 115*s23^4)) + p2q^3*s13*(s13 + s23)*
             (s12^2*(18*s13^3 + 90*s13^2*s23 + 635*s13*s23^2 + 488*s23^3) + 
              4*s12*(9*s13^4 + 81*s13^3*s23 + 354*s13^2*s23^2 + 
                335*s13*s23^3 + 17*s23^4) + s13*(18*s13^4 + 18*s13^3*s23 - 
                467*s13^2*s23^2 - 196*s13*s23^3 + 271*s23^4)) + 
            p2q*p3q^2*(-(s13^2*s23*(s13 + s23)^2*(18*s13^2 + 991*s13*s23 - 
                 411*s23^2)) + 3*s12^4*(6*s13^3 + 24*s13^2*s23 - s13*s23^2 - 
                20*s23^3) - s12^3*s23*(-54*s13^3 + 855*s13^2*s23 + 
                672*s13*s23^2 + 20*s23^3) - s12^2*(54*s13^5 + 630*s13^4*s23 + 
                1326*s13^3*s23^2 + 671*s13^2*s23^3 - 687*s13*s23^4 - 
                40*s23^5) + s12*s13*(-36*s13^5 + 18*s13^4*s23 + 2171*s13^3*
                 s23^2 + 3228*s13^2*s23^3 + 1107*s13*s23^4 - 4*s23^5)) + 
            p2q^2*p3q*(s13^2*(s13 + s23)^2*(18*s13^3 - 18*s13^2*s23 - 
                1317*s13*s23^2 + 575*s23^3) - s12^3*(36*s13^4 + 180*s13^3*
                 s23 + 571*s13^2*s23^2 + 313*s13*s23^3 - 40*s23^4) + 
              s12*s13*s23*(360*s13^4 + 3109*s13^3*s23 + 5099*s13^2*s23^2 + 
                2423*s13*s23^3 + 73*s23^4) + s12^2*(-54*s13^5 - 486*s13^4*
                 s23 - 159*s13^3*s23^2 + 1053*s13^2*s23^3 + 1060*s13*s23^4 + 
                40*s23^5)))))/(72*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*
         s13^2*s23^2*(s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (9*p1q^5*s23*(-11*s13^3*(s13 + s23)^2 + s12^2*(63*s13^3 + 
             108*s13^2*s23 + 74*s13*s23^2 + 20*s23^3) + 
           2*s12*(26*s13^4 + 80*s13^3*s23 + 91*s13^2*s23^2 + 47*s13*s23^3 + 
             10*s23^4)) - 9*(p2q + p3q)*(p2q^4*s13^3*
            (s12^2*(11*s13 + 2*s23) + (s13 + s23)^2*(20*s13 + 23*s23) + 
             s12*(31*s13^2 + 56*s13*s23 + 25*s23^2)) - p2q^3*p3q*s12*s13^2*
            (35*s13^3 + 109*s13^2*s23 + 101*s13*s23^2 + 27*s23^3 + 
             s12^2*(17*s13 + 6*s23) + s12*(52*s13^2 + 97*s13*s23 + 33*
                s23^2)) + p3q^4*s12^2*(20*s12^4 + 20*s12^3*(2*s13 + 3*s23) + 
             s12*s13*(49*s13^2 + 47*s13*s23 - 14*s23^2) + 
             s12^2*(40*s13^2 + 46*s13*s23 + 40*s23^2) + 
             s13^2*(29*s13^2 + 70*s13*s23 + 41*s23^2)) + p2q^2*p3q^2*s13*
            (6*s12^4*(2*s13 + s23) + s13^2*(s13 + s23)^2*(20*s13 + 23*s23) + 
             s12^3*(33*s13^2 + 77*s13*s23 + 32*s23^2) + 
             s12*s13*(31*s13^3 + 42*s13^2*s23 - 3*s13*s23^2 - 14*s23^3) + 
             s12^2*(32*s13^3 + 68*s13^2*s23 + 71*s13*s23^2 + 26*s23^3)) - 
           p2q*p3q^3*s12*(s12^4*(26*s13 + 20*s23) + 4*s12^3*(13*s13^2 + 33*
                s13*s23 + 15*s23^2) + s12*s13*(80*s13^3 + 125*s13^2*s23 + 19*
                s13*s23^2 - 14*s23^3) + s12^2*(57*s13^3 + 104*s13^2*s23 + 112*
                s13*s23^2 + 40*s23^3) + s13^2*(49*s13^3 + 151*s13^2*s23 + 143*
                s13*s23^2 + 41*s23^3))) + 
         p1q*(2*p3q^4*s12*(90*s12^5 + s12^4*(27*s13 + 430*s23) + 
             10*s12^3*(36*s13^2 + 95*s13*s23 + 104*s23^2) + 
             s12*s13*(99*s13^3 - 148*s13^2*s23 + 48*s13*s23^2 - 209*s23^3) + 
             s13^2*(90*s13^3 + 511*s13^2*s23 + 590*s13*s23^2 + 329*s23^3) + 
             s12^2*(-234*s13^3 + 984*s13^2*s23 + 1164*s13*s23^2 + 700*
                s23^3)) + p2q^4*s13^2*(18*s13^4 - 1441*s13^3*s23 - 
             3463*s13^2*s23^2 - 2779*s13*s23^3 - 775*s23^4 + 
             s12^2*(324*s13^2 + 283*s13*s23 - 446*s23^2) - 
             s12*(990*s13^3 + 2584*s13^2*s23 + 2967*s13*s23^2 + 1301*
                s23^3)) + p2q^2*p3q^2*(2*s12^4*(513*s13^2 + 249*s13*s23 - 250*
                s23^2) - 2*s12^3*(1062*s13^3 + 183*s13^2*s23 + 971*s13*
                s23^2 + 770*s23^3) + s12^2*(4374*s13^4 + 2155*s13^3*s23 - 
               2828*s13^2*s23^2 - 3340*s13*s23^3 - 1040*s23^4) + 
             s12*s13*(-648*s13^4 + 3530*s13^3*s23 + 3401*s13^2*s23^2 + 39*s13*
                s23^3 - 360*s23^4) - s13^2*(180*s13^4 + 977*s13^3*s23 + 793*
                s13^2*s23^2 + 119*s13*s23^3 + 123*s23^4)) - 
           p2q^3*p3q*s13*(s12^3*(990*s13^2 + 552*s13*s23 + 512*s23^2) + 
             s12^2*(-2250*s13^3 - 2545*s13^2*s23 + 1198*s13*s23^2 + 1164*
                s23^3) + s13*(180*s13^4 + 2035*s13^3*s23 + 3395*s13^2*s23^2 + 
               2149*s13*s23^3 + 609*s23^4) + s12*(2268*s13^4 + 1456*s13^3*
                s23 + 787*s13^2*s23^2 + 1715*s13*s23^3 + 652*s23^4)) - 
           p2q*p3q^3*(20*s12^5*(27*s13 - 25*s23) - 10*s12^4*(81*s13^2 + 157*
                s13*s23 + 140*s23^2) + 2*s12^3*(1422*s13^3 - 555*s13^2*s23 - 
               332*s13*s23^2 + 70*s23^3) + s12*s13*(18*s13^4 - 2164*s13^3*
                s23 - 1969*s13^2*s23^2 - 1111*s13*s23^3 - 292*s23^4) + 
             s13^2*(180*s13^4 + 779*s13^3*s23 + 1059*s13^2*s23^2 + 749*s13*
                s23^3 + 289*s23^4) + s12^2*(-1296*s13^4 + 1843*s13^3*s23 + 
               2268*s13^2*s23^2 + 2594*s13*s23^3 + 1040*s23^4))) - 
         p1q^2*(-(p2q^3*s13*(396*s13^5 - 1154*s13^4*s23 - 2687*s13^3*s23^2 - 
              266*s13^2*s23^3 + 1677*s13*s23^4 + 806*s23^5 + 
              2*s12^2*(576*s13^3 + 758*s13^2*s23 + 20*s13*s23^2 + 
                243*s23^3) + s12*(-2448*s13^4 - 4078*s13^3*s23 - 
                1981*s13^2*s23^2 + 1157*s13*s23^3 + 1292*s23^4))) + 
           p3q^3*(18*s12^5*(37*s13 + 40*s23) + s12^4*(-612*s13^2 + 968*s13*
                s23 + 1680*s23^2) + s13^2*s23*(140*s13^3 + 321*s13^2*s23 + 
               470*s13*s23^2 + 289*s23^3) - s12*s13*s23*(1376*s13^3 + 1163*
                s13^2*s23 + 957*s13*s23^2 + 458*s23^3) + 
             s12^3*(2214*s13^3 + 820*s13^2*s23 + 3500*s13*s23^2 + 3000*
                s23^3) + s12^2*(-504*s13^4 + 3292*s13^3*s23 + 4446*s13^2*
                s23^2 + 4540*s13*s23^3 + 2040*s23^4)) + 
           p2q^2*p3q*(2*s12^3*(1242*s13^3 + 1282*s13^2*s23 + 539*s13*s23^2 - 
               230*s23^3) + s13*s23*(1946*s13^4 + 2223*s13^3*s23 - 296*s13^2*
                s23^2 - 1213*s13*s23^3 - 640*s23^4) - 
             2*s12^2*(2826*s13^4 + 1623*s13^3*s23 - 1636*s13^2*s23^2 + 261*
                s13*s23^3 + 730*s23^4) + s12*(3852*s13^5 + 1104*s13^4*s23 - 
               1187*s13^3*s23^2 - 1363*s13^2*s23^3 - 2780*s13*s23^4 - 1000*
                s23^5)) + p2q*p3q^2*(-2*s12^4*(999*s13^2 + 803*s13*s23 - 210*
                s23^2) + s12^3*(3816*s13^3 + 900*s13^2*s23 + 2922*s13*s23^2 + 
               2000*s23^3) + s13*s23*(338*s13^4 - 143*s13^3*s23 + 106*s13^2*
                s23^2 + 753*s13*s23^3 + 166*s23^4) + s12^2*(-5670*s13^4 + 194*
                s13^3*s23 + 6894*s13^2*s23^2 + 4576*s13*s23^3 + 580*s23^4) + 
             s12*(504*s13^5 - 5682*s13^4*s23 - 5123*s13^3*s23^2 - 1523*s13^2*
                s23^3 - 1946*s13*s23^4 - 1000*s23^5))) - 
         p1q^4*(p2q*(-99*s13^6 + 275*s13^5*s23 + 897*s13^4*s23^2 + 
             1307*s13^3*s23^3 + 1590*s13^2*s23^4 + 1126*s13*s23^5 + 
             320*s23^6 - s12^2*(567*s13^4 + 1458*s13^3*s23 + 972*s13^2*
                s23^2 + 526*s13*s23^3 + 40*s23^4) + s12*(666*s13^5 + 81*s13^4*
                s23 - 1107*s13^3*s23^2 - 634*s13^2*s23^3 + 240*s13*s23^4 + 
               280*s23^5)) + p3q*(9*s12^3*(63*s13^3 + 216*s13^2*s23 + 222*s13*
                s23^2 + 80*s23^3) + s12^2*(-666*s13^4 + 45*s13^3*s23 + 2664*
                s13^2*s23^2 + 2552*s13*s23^3 + 860*s23^4) + 
             2*s23*(88*s13^5 + 201*s13^4*s23 + 505*s13^3*s23^2 + 795*s13^2*
                s23^3 + 563*s13*s23^4 + 160*s23^5) + s12*(99*s13^5 - 1791*
                s13^4*s23 - 2718*s13^3*s23^2 - 580*s13^2*s23^3 + 780*s13*
                s23^4 + 460*s23^5))) + 
         p1q^3*(p3q^2*(54*s12^4*(18*s13^2 + 37*s13*s23 + 20*s23^2) + 
             2*s13*s23^2*(99*s13^3 - 133*s13^2*s23 - 315*s13*s23^2 - 83*
                s23^3) + s12^3*(-1395*s13^3 + 414*s13^2*s23 + 2620*s13*
                s23^2 + 1680*s23^3) + 2*s12*s23*(1659*s13^4 + 2425*s13^3*
                s23 + 2214*s13^2*s23^2 + 1876*s13*s23^3 + 660*s23^4) + 
             s12^2*(1629*s13^4 - 405*s13^3*s23 - 480*s13^2*s23^2 + 2740*s13*
                s23^3 + 1920*s23^4)) + p2q^2*(297*s13^6 - 456*s13^5*s23 - 
             517*s13^4*s23^2 + 1098*s13^3*s23^3 + 862*s13^2*s23^4 - 
             320*s13*s23^5 - 320*s23^6 + 2*s12^2*(648*s13^4 + 1053*s13^3*
                s23 + 243*s13^2*s23^2 + 173*s13*s23^3 - 70*s23^4) + 
             s12*(-2403*s13^5 - 2547*s13^4*s23 + 428*s13^3*s23^2 + 1454*s13^2*
                s23^3 + 206*s13*s23^4 - 460*s23^5)) + 
           p2q*p3q*(-2*s12^3*(1134*s13^3 + 1485*s13^2*s23 + 796*s13*s23^2 - 
               30*s23^3) + s12^2*(3798*s13^4 + 2745*s13^3*s23 - 624*s13^2*
                s23^2 + 1718*s13*s23^3 + 1240*s23^4) + 
             2*s23*(-327*s13^5 + 88*s13^4*s23 + 614*s13^3*s23^2 + 116*s13^2*
                s23^3 - 243*s13*s23^4 - 160*s23^5) + s12*(-1926*s13^5 + 3003*
                s13^4*s23 + 7951*s13^3*s23^2 + 7106*s13^2*s23^3 + 4264*s13*
                s23^4 + 860*s23^5))))/(144*ep*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13^3*s23*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) + 
       (-18*p1q^5*s23^2*(s13 + s23)^2*(-(s13*(s13 + s23)^2*
             (11*s13^2 + 4*s13*s23 + 5*s23^2)) + 
           s12^2*(42*s13^3 + 55*s13^2*s23 + 11*s13*s23^2 + 5*s23^3) + 
           s12*(31*s13^4 + 82*s13^3*s23 + 57*s13^2*s23^2 + 11*s13*s23^3 + 
             5*s23^4)) - 18*(p2q + p3q)*s23*(s13 + s23)*(s12 + s13 + s23)*
          (p2q^4*s13^3*(s13 + s23)*(9*s12*s13 - 25*s13^2 + 2*s12*s23 - 
             49*s13*s23 - 24*s23^2) - p3q^4*s12^2*(5*s12^3*s23 + 
             5*s12^2*s23*(s13 + 2*s23) + s12*s13*(-5*s13^2 + 11*s13*s23 + 9*
                s23^2) + s13^2*(29*s13^2 + 70*s13*s23 + 41*s23^2)) + 
           p2q^3*p3q*s13^2*(-(s13*(s13 + s23)^2*(49*s13 + 55*s23)) + 
             s12^2*(-9*s13^2 + 22*s13*s23 + 15*s23^2) + 
             s12*(78*s13^3 + 191*s13^2*s23 + 144*s13*s23^2 + 31*s23^3)) + 
           p2q*p3q^3*s12*(s12^3*s23*(9*s13 + 5*s23) - 
             s12*s13*(86*s13^3 + 150*s13^2*s23 + 62*s13*s23^2 - 9*s23^3) + 
             s12^2*(s13^3 - 22*s13^2*s23 + 14*s13*s23^2 + 10*s23^3) + 
             s13^2*(49*s13^3 + 151*s13^2*s23 + 143*s13*s23^2 + 41*s23^3)) - 
           p2q^2*p3q^2*s13*(s12^3*s23*(19*s13 + 4*s23) + s13^2*(s13 + s23)^2*
              (20*s13 + 23*s23) + s12^2*(54*s13^3 + 36*s13^2*s23 + 3*s13*
                s23^2 - s23^3) - 2*s12*s13*(65*s13^3 + 184*s13^2*s23 + 160*
                s13*s23^2 + 41*s23^3))) + p1q^4*s23*(s13 + s23)*
          (p2q*(-2*(s13 + s23)^2*(99*s13^5 - 264*s13^4*s23 - 404*s13^3*
                s23^2 - 286*s13^2*s23^3 - 79*s13*s23^4 - 70*s23^5) - 
             s12^2*(756*s13^5 + 4132*s13^4*s23 + 5965*s13^3*s23^2 + 3377*
                s13^2*s23^3 + 668*s13*s23^4 + 40*s23^5) + 
             s12*(954*s13^6 + 1702*s13^5*s23 - 1389*s13^4*s23^2 - 4942*s13^3*
                s23^3 - 3315*s13^2*s23^4 - 410*s13*s23^5 + 100*s23^6)) + 
           p3q*(36*s12^3*(21*s13^4 + 65*s13^3*s23 + 66*s13^2*s23^2 + 24*s13*
                s23^3 + 10*s23^4) + 2*s23*(s13 + s23)^2*(381*s13^4 + 440*
                s13^3*s23 + 259*s13^2*s23^2 + 34*s13*s23^3 + 70*s23^4) + 
             s12^2*(-954*s13^5 - 2836*s13^4*s23 - 1177*s13^3*s23^2 + 871*
                s13^2*s23^3 + 736*s13*s23^4 + 410*s23^5) + 
             s12*(198*s13^6 - 620*s13^5*s23 - 2811*s13^4*s23^2 - 3844*s13^3*
                s23^3 - 2271*s13^2*s23^4 - 230*s13*s23^5 + 190*s23^6))) + 
         p1q^3*s23*(p2q^2*(s13 + s23)*(-(s12^2*(1944*s13^5 + 7765*s13^4*s23 + 
                7459*s13^3*s23^2 + 2476*s13^2*s23^3 + 308*s13*s23^4 - 
                50*s23^5)) + 2*(s13 + s23)^2*(99*s13^5 + 1298*s13^4*s23 + 
               1437*s13^3*s23^2 + 941*s13^2*s23^3 + 65*s13*s23^4 + 70*
                s23^5) + s12*(3978*s13^6 + 11865*s13^5*s23 + 12362*s13^4*
                s23^2 + 3881*s13^3*s23^3 - 772*s13^2*s23^4 + 12*s13*s23^5 + 
               190*s23^6)) + p2q*p3q*(s12*(s13 + s23)^2*(2754*s13^5 + 2435*
                s13^4*s23 + 1135*s13^3*s23^2 - 744*s13^2*s23^3 - 1192*s13*
                s23^4 - 410*s23^5) + s12^3*(2610*s13^5 + 9311*s13^4*s23 + 
               12214*s13^3*s23^2 + 7359*s13^2*s23^3 + 1716*s13*s23^4 + 30*
                s23^5) + 2*(s13 + s23)^3*(117*s13^5 + 1825*s13^4*s23 + 2033*
                s13^3*s23^2 + 1635*s13^2*s23^3 - 16*s13*s23^4 + 70*s23^5) - 
             s12^2*(6318*s13^6 + 24334*s13^5*s23 + 26853*s13^4*s23^2 + 5492*
                s13^3*s23^3 - 3901*s13^2*s23^4 - 36*s13*s23^5 + 520*s23^6)) - 
           p3q^2*(-2*s13*s23*(s13 + s23)^3*(365*s13^3 + 398*s13^2*s23 + 640*
                s13*s23^2 - 81*s23^3) + 54*s12^4*(11*s13^4 + 33*s13^3*s23 + 
               38*s13^2*s23^2 + 26*s13*s23^3 + 10*s23^4) - 
             s12^3*(2556*s13^5 + 7313*s13^4*s23 + 6436*s13^3*s23^2 + 1239*
                s13^2*s23^3 - 1380*s13*s23^4 - 780*s23^5) + 
             2*s12*(s13 + s23)^2*(81*s13^5 + 1529*s13^4*s23 + 1157*s13^3*
                s23^2 + 219*s13^2*s23^3 + 498*s13*s23^4 + 300*s23^5) + 
             s12^2*(2736*s13^6 + 9891*s13^5*s23 + 9055*s13^4*s23^2 - 1077*
                s13^3*s23^3 - 2707*s13^2*s23^4 + 1110*s13*s23^5 + 840*
                s23^6))) + p1q*(p2q^4*s13^2*(s13 + s23)*
            (2*(s13 + s23)^2*(54*s13^4 + 486*s13^3*s23 + 1126*s13^2*s23^2 + 
               637*s13*s23^3 + 179*s23^4) + s12^2*(108*s13^4 - 720*s13^3*
                s23 - 2073*s13^2*s23^2 - 775*s13*s23^3 + 310*s23^4) + 
             s12*(216*s13^5 + 2376*s13^4*s23 + 6691*s13^3*s23^2 + 8050*s13^2*
                s23^3 + 4187*s13*s23^4 + 668*s23^5)) + p2q^3*p3q*s13*
            (2*s13*(s13 + s23)^3*(54*s13^4 + 990*s13^3*s23 + 3091*s13^2*
                s23^2 + 1988*s13*s23^3 + 757*s23^4) + 
             s12^3*(-324*s13^5 + 828*s13^4*s23 + 3521*s13^3*s23^2 + 2404*
                s13^2*s23^3 + 51*s13*s23^4 - 144*s23^5) - s12*(s13 + s23)^2*
              (108*s13^5 - 1980*s13^4*s23 - 3897*s13^3*s23^2 - 2379*s13^2*
                s23^3 + 362*s13*s23^4 + 44*s23^5) - s12^2*(540*s13^6 + 7344*
                s13^5*s23 + 22976*s13^4*s23^2 + 27445*s13^3*s23^3 + 13098*
                s13^2*s23^4 + 2013*s13*s23^5 + 188*s23^6)) - 
           p3q^4*s12*(90*s12^5*s23^2*(s13 + s23) + 4*s13^2*s23*(s13 + s23)^2*
              (90*s13^3 + 573*s13^2*s23 + 572*s13*s23^2 + 329*s23^3) + 
             2*s12^4*(54*s13^4 + 36*s13^3*s23 - 12*s13^2*s23^2 + 201*s13*
                s23^3 + 205*s23^4) - s12*s13*s23*(252*s13^5 + 1325*s13^4*
                s23 + 1871*s13^3*s23^2 + 65*s13^2*s23^3 - 1219*s13*s23^4 - 
               486*s23^5) + 2*s12^3*(108*s13^5 + 468*s13^4*s23 + 439*s13^3*
                s23^2 + 479*s13^2*s23^3 + 910*s13*s23^4 + 500*s23^5) + 
             s12^2*(108*s13^6 - 1656*s13^5*s23 - 6041*s13^4*s23^2 - 4336*
                s13^3*s23^3 + 1545*s13^2*s23^4 + 2444*s13*s23^5 + 680*
                s23^6)) + p2q^2*p3q^2*(2*s13^2*s23*(s13 + s23)^3*
              (720*s13^3 + 2724*s13^2*s23 + 1811*s13*s23^2 + 867*s23^3) - 
             s12*s13*(s13 + s23)^2*(324*s13^5 + 1224*s13^4*s23 + 8355*s13^3*
                s23^2 + 9473*s13^2*s23^3 + 4162*s13*s23^4 - 280*s23^5) + 
             2*s12^4*(162*s13^5 - 72*s13^4*s23 - 907*s13^3*s23^2 - 545*s13^2*
                s23^3 + 163*s13*s23^4 + 115*s23^5) + s12^3*(324*s13^6 + 5976*
                s13^5*s23 + 12527*s13^4*s23^2 + 6944*s13^3*s23^3 + 1425*s13^2*
                s23^4 + 1766*s13*s23^5 + 730*s23^6) - 
             s12^2*(324*s13^7 + 8640*s13^6*s23 + 33746*s13^5*s23^2 + 46797*
                s13^4*s23^3 + 25074*s13^3*s23^4 + 2217*s13^2*s23^5 - 1990*s13*
                s23^6 - 500*s23^7)) + p2q*p3q^3*(2*s13^2*s23*(s13 + s23)^3*
              (180*s13^3 + 723*s13^2*s23 + 460*s13*s23^2 + 289*s23^3) - 
             s12*s13*s23*(s13 + s23)^2*(1692*s13^4 + 10463*s13^3*s23 + 10783*
                s13^2*s23^2 + 4448*s13*s23^3 - 324*s23^4) - 
             2*s12^5*(54*s13^4 + 36*s13^3*s23 - 183*s13^2*s23^2 - 60*s13*
                s23^3 + 115*s23^4) + 4*s12^4*(27*s13^5 - 288*s13^4*s23 - 592*
                s13^3*s23^2 - 287*s13^2*s23^3 - 225*s13*s23^4 - 170*s23^5) + 
             s12^3*(540*s13^6 + 6516*s13^5*s23 + 14579*s13^4*s23^2 + 8984*
                s13^3*s23^3 + 279*s13^2*s23^4 - 372*s13*s23^5 + 50*s23^6) + 
             s12^2*(324*s13^7 - 2088*s13^6*s23 - 13516*s13^5*s23^2 - 21607*
                s13^4*s23^3 - 12826*s13^3*s23^4 - 1131*s13^2*s23^5 + 1692*s13*
                s23^6 + 500*s23^7))) + p1q^2*(p2q^3*s13*(s13 + s23)*
            (2*(s13 + s23)^2*(54*s13^5 + 459*s13^4*s23 + 1818*s13^3*s23^2 + 
               1589*s13^2*s23^3 + 915*s13*s23^4 + 31*s23^5) + 
             s12^2*(108*s13^5 - 1746*s13^4*s23 - 6264*s13^3*s23^2 - 3979*
                s13^2*s23^3 + 23*s13*s23^4 + 72*s23^5) + 
             s12*(216*s13^6 + 5112*s13^5*s23 + 15324*s13^4*s23^2 + 18687*
                s13^3*s23^3 + 10112*s13^2*s23^4 + 1987*s13*s23^5 + 134*
                s23^6)) + p2q*p3q^2*(2*s13*s23*(s13 + s23)^3*(99*s13^4 + 1658*
                s13^3*s23 + 1399*s13^2*s23^2 + 1507*s13*s23^3 - 81*s23^4) + 
             2*s12^4*(54*s13^5 - 459*s13^4*s23 - 1589*s13^3*s23^2 - 1840*
                s13^2*s23^3 - 609*s13*s23^4 + 75*s23^5) + 2*s12^3*s23*
              (3591*s13^5 + 9920*s13^4*s23 + 6538*s13^3*s23^2 + 477*s13^2*
                s23^3 + 488*s13*s23^4 + 460*s23^5) - s12*(s13 + s23)^2*
              (216*s13^6 + 126*s13^5*s23 + 6772*s13^4*s23^2 + 7039*s13^3*
                s23^3 + 3313*s13^2*s23^4 + 548*s13*s23^5 + 460*s23^6) - 
             s12^2*(324*s13^7 + 9828*s13^6*s23 + 34824*s13^5*s23^2 + 42403*
                s13^4*s23^3 + 17558*s13^3*s23^4 - 1183*s13^2*s23^5 - 1968*s13*
                s23^6 - 310*s23^7)) + p2q^2*p3q*(s12*s23*(s13 + s23)^2*
              (4248*s13^5 + 6386*s13^4*s23 + 5055*s13^3*s23^2 + 437*s13^2*
                s23^3 - 900*s13*s23^4 - 460*s23^5) + 2*s13*(s13 + s23)^3*
              (54*s13^5 + 441*s13^4*s23 + 3158*s13^3*s23^2 + 2870*s13^2*
                s23^3 + 2133*s13*s23^4 - 50*s23^5) + 2*s12^3*
              (-108*s13^6 + 1278*s13^5*s23 + 5031*s13^4*s23^2 + 5316*s13^3*
                s23^3 + 2018*s13^2*s23^4 + 92*s13*s23^5 - 95*s23^6) - 
             s12^2*(324*s13^7 + 11574*s13^6*s23 + 40286*s13^5*s23^2 + 46269*
                s13^4*s23^3 + 17026*s13^3*s23^4 + 409*s13^2*s23^5 + 1266*s13*
                s23^6 + 650*s23^7)) + p3q^3*(72*s12^5*s23^2*(4*s13^2 + 9*s13*
                s23 + 5*s23^2) + 2*s13^2*s23^2*(s13 + s23)^3*(228*s13^2 + 145*
                s13*s23 + 289*s23^2) - s12*s13*s23*(s13 + s23)^2*
              (198*s13^4 + 3792*s13^3*s23 + 4087*s13^2*s23^2 + 1807*s13*
                s23^3 - 486*s23^4) + 2*s12^4*(54*s13^5 - 468*s13^4*s23 - 1193*
                s13^3*s23^2 - 679*s13^2*s23^3 + 462*s13*s23^4 + 390*s23^5) + 
             2*s12^3*(108*s13^6 + 2169*s13^5*s23 + 4880*s13^4*s23^2 + 2284*
                s13^3*s23^3 + 70*s13^2*s23^4 + 1215*s13*s23^5 + 690*s23^6) + 
             s12^2*(108*s13^7 - 648*s13^6*s23 - 4690*s13^5*s23^2 - 7835*s13^4*
                s23^3 - 3768*s13^3*s23^4 + 2713*s13^2*s23^5 + 3540*s13*
                s23^6 + 960*s23^7))))/(144*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13^3*s23^2*(s13 + s23)^2*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       ((-9*p1q^5*s23^2*(s13 + s23)^2*(-11*s13*(s13 + s23)^2 + 
            s12^2*(21*s13 + 5*s23) + 5*s12*(2*s13^2 + 3*s13*s23 + s23^2)) - 
          9*(p2q + p3q)*(s12 + s13 + s23)*(16*p2q^4*s13^2*(s13 + s23)^2*
             (s23*(s13 + s23) + s12*(2*s13 + s23)) - p3q^4*s12^3*
             (-32*s13*(s13 + s23)^2 + 5*s12^2*(2*s13 + s23) + 
              5*s12*(2*s13^2 + 5*s13*s23 + 2*s23^2)) + p2q^2*p3q^2*s12*s13*
             (s13 + s23)*(113*s13^3 + 295*s13^2*s23 + 239*s13*s23^2 + 
              57*s23^3 + 17*s12^2*(2*s13 + s23) + s12*(-63*s13^2 - 
                40*s13*s23 + 6*s23^2)) + p2q*p3q^3*s12^2*
             (-(s13*(s13 + s23)^2*(109*s13 + 89*s23)) + s12^2*(14*s13^2 + 
                14*s13*s23 + 5*s23^2) + s12*(42*s13^3 + 82*s13^2*s23 + 
                45*s13*s23^2 + 10*s23^3)) - p2q^3*p3q*s13*(s13 + s23)*
             (3*s13*(s13 + s23)^2*(12*s13 + 13*s23) + 2*s12^2*(35*s13^2 + 
                35*s13*s23 + 8*s23^2) + s12*(-31*s13^3 - 17*s13^2*s23 + 
                30*s13*s23^2 + 16*s23^3))) + p1q^4*s23*(s13 + s23)*
           (p2q*(s13 + s23)*(-5*(s13 + s23)^2*(63*s13^2 - 58*s13*s23 - 
                22*s23^2) + 12*s12^2*(27*s13^2 - 8*s13*s23 - 5*s23^2) + 
              s12*(441*s13^3 + 555*s13^2*s23 + 164*s13*s23^2 + 50*s23^3)) + 
            p3q*(9*s12^3*(47*s13^2 + 83*s13*s23 + 20*s23^2) + 
              s12*(s13 + s23)^2*(216*s13^2 - 291*s13*s23 + 95*s23^2) + 
              (s13 + s23)^3*(27*s13^2 + 47*s13*s23 + 110*s23^2) + 
              3*s12^2*(60*s13^3 + 223*s13^2*s23 + 218*s13*s23^2 + 
                55*s23^3))) + p1q^3*(s13 + s23)*
           (p3q^2*(s23*(s13 + s23)^3*(99*s13^2 + 402*s13*s23 - 20*s23^2) - 
              9*s12^4*(26*s13^2 + 93*s13*s23 + 30*s23^2) + s12^3*(54*s13^3 - 
                332*s13^2*s23 - 811*s13*s23^2 - 290*s23^3) + 
              3*s12*(s13 + s23)^2*(9*s13^3 + 354*s13^2*s23 + 12*s13*s23^2 - 
                160*s23^3) + s12^2*(315*s13^4 + 721*s13^3*s23 + 576*s13^2*
                 s23^2 - 310*s13*s23^3 - 480*s23^4)) + 
            p2q*p3q*((s13 + s23)^3*(117*s13^3 + 250*s13^2*s23 + 
                325*s13*s23^2 + 110*s23^3) + s12^3*(711*s13^3 + 1225*s13^2*
                 s23 + 773*s13*s23^2 + 115*s23^3) - s12*(s13 + s23)^2*(
                243*s13^3 - 1922*s13^2*s23 + 890*s13*s23^2 + 345*s23^3) + 
              s12^2*(351*s13^4 + 656*s13^3*s23 + 343*s13^2*s23^2 - 
                302*s13*s23^3 - 340*s23^4)) + p2q^2*(s13 + s23)*
             (-(s12^2*(333*s13^3 + 11*s13^2*s23 + 33*s13*s23^2 - 5*s23^3)) + 
              (s13 + s23)^2*(360*s13^3 - 578*s13^2*s23 + 67*s13*s23^2 + 
                130*s23^3) + s12*(27*s13^4 + 734*s13^3*s23 + 501*s13^2*
                 s23^2 - 71*s13*s23^3 + 135*s23^4))) + 
          p1q*(p2q^4*s13*(s13 + s23)^2*(2*(s13 + s23)^2*(180*s13^2 + 
                7*s13*s23 + 62*s23^2) + s12^2*(-477*s13^2 + 87*s13*s23 + 
                204*s23^2) + s12*(-117*s13^3 + 416*s13^2*s23 + 781*s13*
                 s23^2 + 248*s23^3)) + p3q^4*s12^2*(-45*s12^4*(2*s13 + s23) + 
              s12^3*(36*s13^2 - 329*s13*s23 - 185*s23^2) + s12^2*(36*s13^3 - 
                467*s13^2*s23 - 1178*s13*s23^2 - 560*s23^3) + 
              (s13 + s23)^2*(333*s13^3 + 848*s13^2*s23 + 1007*s13*s23^2 - 
                20*s23^3) + s12*(243*s13^4 + 1124*s13^3*s23 + 964*s13^2*
                 s23^2 - 357*s13*s23^3 - 440*s23^4)) + p2q^3*p3q*(s13 + s23)*
             (s13*(s13 + s23)^3*(486*s13^2 + 439*s13*s23 + 289*s23^2) + 
              s12^3*(1053*s13^3 + 1324*s13^2*s23 + 395*s13*s23^2 - 
                20*s23^3) - s12*(s13 + s23)^2*(1368*s13^3 - 693*s13^2*s23 + 
                41*s13*s23^2 + 20*s23^3) + s12^2*(-801*s13^4 - 951*s13^3*
                 s23 + 235*s13^2*s23^2 + 345*s13*s23^3 - 40*s23^4)) + 
            p2q*p3q^3*s12*(s12^4*(342*s13^2 - 23*s13*s23 - 95*s23^2) - 
              2*(s13 + s23)^3*(351*s13^3 + 776*s13^2*s23 + 694*s13*s23^2 - 
                10*s23^3) + s12*(s13 + s23)^2*(117*s13^3 - 1107*s13^2*s23 + 
                810*s13*s23^2 + 350*s23^3) - s12^3*(792*s13^3 + 1909*s13^2*
                 s23 + 1587*s13*s23^2 + 400*s23^3) + s12^2*(-315*s13^4 - 
                370*s13^3*s23 + 354*s13^2*s23^2 + 434*s13*s23^3 + 
                25*s23^4)) + p2q^2*p3q^2*(s13 + s23)*(s12^4*(-828*s13^2 - 
                452*s13*s23 + 115*s23^2) + s13*(s13 + s23)^3*(369*s13^2 + 
                425*s13*s23 + 165*s23^2) - 3*s12*s13*(s13 + s23)^2*(
                282*s13^2 + 275*s13*s23 + 559*s23^2) + s12^3*(1674*s13^3 + 
                2215*s13^2*s23 + 1333*s13*s23^2 + 445*s23^3) + 
              s12^2*(1287*s13^4 + 940*s13^3*s23 - 39*s13^2*s23^2 + 
                638*s13*s23^3 + 330*s23^4))) + 
          p1q^2*(p2q^3*(s13 + s23)^2*(5*(s13 + s23)^2*(144*s13^3 - 
                21*s13^2*s23 + 4*s23^3) + s12^2*(-522*s13^3 - 104*s13^2*s23 + 
                78*s13*s23^2 + 20*s23^3) + s12*(198*s13^4 + 1285*s13^3*s23 + 
                925*s13^2*s23^2 - 122*s13*s23^3 + 40*s23^4)) + 
            p2q^2*p3q*(s13 + s23)^2*(s12^3*(1566*s13^2 + 964*s13*s23 - 
                75*s23^2) + s13*(s13 + s23)^2*(279*s13^2 + 455*s13*s23 + 
                567*s23^2) + s12^2*(-81*s13^3 + 647*s13^2*s23 + 
                598*s13*s23^2 - 445*s23^3) - 2*s12*(684*s13^4 - 546*s13^3*
                 s23 - 1008*s13^2*s23^2 + 407*s13*s23^3 + 185*s23^4)) + 
            p2q*p3q^2*(s13 + s23)*(-(s12^4*(1368*s13^2 + 734*s13*s23 + 
                 5*s23^2)) + (s13 + s23)^3*(45*s13^3 + 173*s13^2*s23 + 
                567*s13*s23^2 - 20*s23^3) - s12*(s13 + s23)^2*(207*s13^3 - 
                1137*s13^2*s23 + 1223*s13*s23^2 + 370*s23^3) + 
              s12^3*(63*s13^3 + 719*s13^2*s23 + 1171*s13*s23^2 + 600*s23^3) + 
              s12^2*(1179*s13^4 + 1076*s13^3*s23 + 737*s13^2*s23^2 + 
                1095*s13*s23^3 + 255*s23^4)) + p3q^3*s12*
             (9*s12^4*(36*s13^2 + 61*s13*s23 + 20*s23^2) - s12*(s13 + s23)^2*(
                72*s13^3 + 1736*s13^2*s23 + 193*s13*s23^2 - 720*s23^3) - 
              (s13 + s23)^3*(45*s13^3 + 380*s13^2*s23 + 1121*s13*s23^2 - 
                40*s23^3) + s12^3*(-180*s13^3 + 211*s13^2*s23 + 
                746*s13*s23^2 + 310*s23^3) + s12^2*(-531*s13^4 - 
                1253*s13^3*s23 - 17*s13^2*s23^2 + 1515*s13*s23^3 + 
                810*s23^4))))*den[-1 + ep])/(72*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13^2*s23*(s13 + s23)^2*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]] + 
     ((ep^2*(-40*s12^3 + 5*s12^2*(3*s13 - 8*s23) + 20*s13^2*s23 + 
          s12*s13*(19*s13 + 7*s23)))/(36*s12*s13*(s12 + s23)) + 
       (9*p1q^5*s23*(-11*s12^5 + s12^4*(52*s13 - 22*s23) + 
           20*s13*s23^3*(s13 + s23) + 2*s12*s13*s23^2*(37*s13 + 47*s23) + 
           2*s12^2*s13*s23*(54*s13 + 91*s23) + s12^3*(63*s13^2 + 
             160*s13*s23 - 11*s23^2)) - 9*(p2q + p3q)*
          (p2q^4*s13^2*(29*s12^4 + 7*s12^3*(7*s13 + 10*s23) + 
             2*s12*s13*(20*s13^2 + 23*s13*s23 - 7*s23^2) + 
             20*s13^2*(s13^2 + 3*s13*s23 + 2*s23^2) + 
             s12^2*(40*s13^2 + 47*s13*s23 + 41*s23^2)) + 
           p3q^4*s12^3*(20*s12^3 + s12^2*(31*s13 + 63*s23) + 
             s23*(2*s13^2 + 25*s13*s23 + 23*s23^2) + s12*(11*s13^2 + 56*s13*
                s23 + 66*s23^2)) - p2q*p3q^3*s12^2*s13*(35*s12^3 + 
             s12^2*(52*s13 + 109*s23) + 3*s23*(2*s13^2 + 11*s13*s23 + 9*
                s23^2) + s12*(17*s13^2 + 97*s13*s23 + 101*s23^2)) + 
           p2q^2*p3q^2*s12*(20*s12^5 + s12^4*(31*s13 + 63*s23) + 
             2*s13^2*s23*(3*s13^2 + 16*s13*s23 + 13*s23^2) + 
             s12^3*(32*s13^2 + 42*s13*s23 + 66*s23^2) + 
             s12*s13*(12*s13^3 + 77*s13^2*s23 + 71*s13*s23^2 - 14*s23^3) + 
             s12^2*(33*s13^3 + 68*s13^2*s23 - 3*s13*s23^2 + 23*s23^3)) - 
           p2q^3*p3q*s13*(49*s12^5 + s12^4*(80*s13 + 151*s23) + 
             20*s13^2*s23*(s13^2 + 3*s13*s23 + 2*s23^2) + 
             s12^3*(57*s13^2 + 125*s13*s23 + 143*s23^2) + 
             2*s12*s13*(13*s13^3 + 66*s13^2*s23 + 56*s13*s23^2 - 7*s23^3) + 
             s12^2*(52*s13^3 + 104*s13^2*s23 + 19*s13*s23^2 + 41*s23^3))) + 
         p1q^4*(p3q*(99*s12^6 - s12^5*(666*s13 + 275*s23) + 
             s12^3*s23*(1458*s13^2 + 1107*s13*s23 - 1307*s23^2) + 
             s12^4*(567*s13^2 - 81*s13*s23 - 897*s23^2) + 2*s12^2*s23^2*
              (486*s13^2 + 317*s13*s23 - 795*s23^2) + 40*s23^4*
              (s13^2 - 7*s13*s23 - 8*s23^2) - 2*s12*s23^3*(-263*s13^2 + 120*
                s13*s23 + 563*s23^2)) - p2q*(11*s12^5*(9*s13 + 16*s23) - 
             3*s12^4*(222*s13^2 + 597*s13*s23 - 134*s23^2) + 
             20*s23^3*(36*s13^3 + 43*s13^2*s23 + 23*s13*s23^2 + 16*s23^3) + 
             2*s12*s23^2*(999*s13^3 + 1276*s13^2*s23 + 390*s13*s23^2 + 563*
                s23^3) + 2*s12^2*s23*(972*s13^3 + 1332*s13^2*s23 - 290*s13*
                s23^2 + 795*s23^3) + s12^3*(567*s13^3 + 45*s13^2*s23 - 2718*
                s13*s23^2 + 1010*s23^3))) + 
         p1q^3*(p3q^2*(297*s12^6 - 3*s12^5*(801*s13 + 152*s23) + 
             s12^4*(1296*s13^2 - 2547*s13*s23 - 517*s23^2) + 
             2*s12*s23^3*(173*s13^2 + 103*s13*s23 - 160*s23^2) - 
             20*s23^4*(7*s13^2 + 23*s13*s23 + 16*s23^2) + 2*s12^2*s23^2*
              (243*s13^2 + 727*s13*s23 + 431*s23^2) + 2*s12^3*s23*
              (1053*s13^2 + 214*s13*s23 + 549*s23^2)) + 
           p2q^2*(3*s12^4*(543*s13^2 + 1106*s13*s23 + 66*s23^2) + 
             120*s13*s23^2*(9*s13^3 + 14*s13^2*s23 + 16*s13*s23^2 + 11*
                s23^3) - s12^3*(1395*s13^3 + 405*s13^2*s23 - 4850*s13*s23^2 + 
               266*s23^3) + 6*s12^2*(162*s13^4 + 69*s13^3*s23 - 80*s13^2*
                s23^2 + 738*s13*s23^3 - 105*s23^4) + 2*s12*s23*
              (999*s13^4 + 1310*s13^3*s23 + 1370*s13^2*s23^2 + 1876*s13*
                s23^3 - 83*s23^4)) + p2q*p3q*(-6*s12^5*(321*s13 + 109*s23) + 
             s12^4*(3798*s13^2 + 3003*s13*s23 + 176*s23^2) + 
             20*s23^3*(3*s13^3 + 62*s13^2*s23 + 43*s13*s23^2 - 16*s23^3) - 
             2*s12*s23^2*(796*s13^3 - 859*s13^2*s23 - 2132*s13*s23^2 + 243*
                s23^3) + s12^3*(-2268*s13^3 + 2745*s13^2*s23 + 7951*s13*
                s23^2 + 1228*s23^3) + s12^2*(-2970*s13^3*s23 - 624*s13^2*
                s23^2 + 7106*s13*s23^3 + 232*s23^4))) + 
         p1q*(p3q^4*s12^2*(18*s12^4 - 11*s12^3*(90*s13 + 131*s23) + 
             s12^2*(324*s13^2 - 2584*s13*s23 - 3463*s23^2) + 
             s12*s23*(283*s13^2 - 2967*s13*s23 - 2779*s23^2) - 
             s23^2*(446*s13^2 + 1301*s13*s23 + 775*s23^2)) + 
           2*p2q^4*s13*(90*s12^5 + s12^4*(99*s13 + 511*s23) - 
             2*s12^3*(117*s13^2 + 74*s13*s23 - 295*s23^2) + 
             s12*s13*(27*s13^3 + 950*s13^2*s23 + 1164*s13*s23^2 - 209*
                s23^3) + 10*s13^2*(9*s13^3 + 43*s13^2*s23 + 104*s13*s23^2 + 
               70*s23^3) + s12^2*(360*s13^3 + 984*s13^2*s23 + 48*s13*s23^2 + 
               329*s23^3)) - p2q*p3q^3*s12*(180*s12^5 + 
             s12^4*(2268*s13 + 2035*s23) + 4*s13*s23^2*(128*s13^2 + 291*s13*
                s23 + 163*s23^2) + s12^3*(-2250*s13^2 + 1456*s13*s23 + 3395*
                s23^2) + s12*s23*(552*s13^3 + 1198*s13^2*s23 + 1715*s13*
                s23^2 + 609*s23^3) + s12^2*(990*s13^3 - 2545*s13^2*s23 + 787*
                s13*s23^2 + 2149*s23^3)) - p2q^2*p3q^2*(180*s12^6 + 
             s12^5*(648*s13 + 977*s23) + 20*s13^2*s23^2*(25*s13^2 + 77*s13*
                s23 + 52*s23^2) + s12^4*(-4374*s13^2 - 3530*s13*s23 + 793*
                s23^2) + s12^3*(2124*s13^3 - 2155*s13^2*s23 - 3401*s13*
                s23^2 + 119*s23^3) + 2*s12*s13*s23*(-249*s13^3 + 971*s13^2*
                s23 + 1670*s13*s23^2 + 180*s23^3) + s12^2*(-1026*s13^4 + 366*
                s13^3*s23 + 2828*s13^2*s23^2 - 39*s13*s23^3 + 123*s23^4)) - 
           p2q^3*p3q*(180*s12^6 + s12^5*(18*s13 + 779*s23) + 
             s12^4*(-1296*s13^2 - 2164*s13*s23 + 1059*s23^2) - 
             20*s13^2*s23*(25*s13^3 + 70*s13^2*s23 - 7*s13*s23^2 - 52*
                s23^3) + s12^3*(2844*s13^3 + 1843*s13^2*s23 - 1969*s13*
                s23^2 + 749*s23^3) + 2*s12*s13*(270*s13^4 - 785*s13^3*s23 - 
               332*s13^2*s23^2 + 1297*s13*s23^3 - 146*s23^4) + 
             s12^2*(-810*s13^4 - 1110*s13^3*s23 + 2268*s13^2*s23^2 - 1111*s13*
                s23^3 + 289*s23^4))) + 
         p1q^2*(p3q^3*s12*(396*s12^5 - 2*s12^4*(1224*s13 + 577*s23) + 
             s12^3*(1152*s13^2 - 4078*s13*s23 - 2687*s23^2) + 
             s12^2*s23*(1516*s13^2 - 1981*s13*s23 - 266*s23^2) + 
             2*s23^3*(243*s13^2 + 646*s13*s23 + 403*s23^2) + 
             s12*s23^2*(40*s13^2 + 1157*s13*s23 + 1677*s23^2)) + 
           p2q*p3q^2*(-2*s12^5*(1926*s13 + 973*s23) + 
             3*s12^4*(1884*s13^2 - 368*s13*s23 - 741*s23^2) + 
             20*s13*s23^3*(23*s13^2 + 73*s13*s23 + 50*s23^2) + 
             s12^3*(-2484*s13^3 + 3246*s13^2*s23 + 1187*s13*s23^2 + 296*
                s23^3) + 2*s12*s23^2*(-539*s13^3 + 261*s13^2*s23 + 1390*s13*
                s23^2 + 320*s23^3) + s12^2*s23*(-2564*s13^3 - 3272*s13^2*
                s23 + 1363*s13*s23^2 + 1213*s23^3)) - 
           p2q^3*(140*s12^5*s23 + s12^4*(-504*s13^2 - 1376*s13*s23 + 321*
                s23^2) + 120*s13^2*s23*(6*s13^3 + 14*s13^2*s23 + 25*s13*
                s23^2 + 17*s23^3) + s12^3*(2214*s13^3 + 3292*s13^2*s23 - 1163*
                s13*s23^2 + 470*s23^3) + 2*s12*s13*(333*s13^4 + 484*s13^3*
                s23 + 1750*s13^2*s23^2 + 2270*s13*s23^3 - 229*s23^4) + 
             s12^2*(-612*s13^4 + 820*s13^3*s23 + 4446*s13^2*s23^2 - 957*s13*
                s23^3 + 289*s23^4)) - p2q^2*p3q*(s12^5*(504*s13 + 338*s23) - 
             s12^4*(5670*s13^2 + 5682*s13*s23 + 143*s23^2) + 
             20*s13*s23^2*(21*s13^3 + 100*s13^2*s23 + 29*s13*s23^2 - 50*
                s23^3) + s12^3*(3816*s13^3 + 194*s13^2*s23 - 5123*s13*s23^2 + 
               106*s23^3) + 2*s12*s23*(-803*s13^4 + 1461*s13^3*s23 + 2288*
                s13^2*s23^2 - 973*s13*s23^3 + 83*s23^4) + 
             s12^2*(-1998*s13^4 + 900*s13^3*s23 + 6894*s13^2*s23^2 - 1523*s13*
                s23^3 + 753*s23^4))))/(144*ep*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12^3*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + 
       (ep*(-9*(p2q + p3q)^3*s12^2*(-(p3q*s12) + p2q*s13)*s23*
           (5*s12^2 + 6*s12*s13 + s13^2 + 10*s12*s23 + 6*s13*s23 + 5*s23^2)*
           (-(p2q*s13) + p3q*(s12 + s23)) + 9*p1q^5*s12*s23^2*(s12 + s23)*
           (5*s12^3 + 2*s13*s23*(s13 + s23) + 2*s12^2*(3*s13 + 5*s23) + 
            s12*(s13^2 + 8*s13*s23 + 5*s23^2)) + p1q^4*s23*
           (-(p3q*(s12 + s23)*(45*s12^5 + 20*s13*s23^3*(s13 + s23) + s12^4*
                (-36*s13 + 141*s23) + 2*s12*s23^2*(-83*s13^2 + 3*s13*s23 + 
                 6*s23^2) - 9*s12^3*(s13^2 + 56*s13*s23 + 9*s23^2) - 5*s12^2*
                s23*(41*s13^2 + 106*s13*s23 + 33*s23^2))) + 
            p2q*(s12^5*(45*s13 - 96*s23) - 20*s13*s23^4*(s13 + s23) - 
              12*s12^4*(3*s13^2 - 36*s13*s23 + 5*s23^2) - 4*s12*s23^2*(
                9*s13^3 - 23*s13^2*s23 + 11*s13*s23^2 + 3*s23^3) + 
              2*s12^2*s23*(-18*s13^3 + 100*s13^2*s23 + 181*s13*s23^2 + 
                54*s23^3) + s12^3*(-9*s13^3 + 52*s13^2*s23 + 773*s13*s23^2 + 
                156*s23^3))) + p1q^2*(p3q^3*s12*(s12 + s23)*
             (18*s12^5 + 18*s12^4*(2*s13 + s23) + 4*s13*s23^3*(122*s13 + 
                17*s23) + s12^3*(18*s13^2 + 324*s13*s23 - 467*s23^2) + 
              2*s12^2*s23*(45*s13^2 + 708*s13*s23 - 98*s23^2) + 
              s12*s23^2*(635*s13^2 + 1340*s13*s23 + 271*s23^2)) + 
            p2q*p3q^2*(18*s12^7 + 18*s12^6*s23 + 40*s13^2*s23^4*(s13 + s23) + 
              s12*s13*s23^3*(-313*s13^2 + 1060*s13*s23 + 73*s23^2) - 
              3*s12^5*(18*s13^2 - 120*s13*s23 + 445*s23^2) - 
              s12^3*s23*(180*s13^3 + 159*s13^2*s23 - 5099*s13*s23^2 + 
                167*s23^3) + s12^2*s23^2*(-571*s13^3 + 1053*s13^2*s23 + 
                2423*s13*s23^2 + 575*s23^3) - s12^4*(36*s13^3 + 486*s13^2*
                 s23 - 3109*s13*s23^2 + 2077*s23^3)) + 
            p2q^3*(-60*s13^3*s23^3*(s13 + s23) + 3*s12^5*(6*s13^2 + 
                6*s13*s23 - 47*s23^2) + s12^4*(36*s13^3 - 36*s13^2*s23 + 
                802*s13*s23^2 - 175*s23^3) - s12*s13*s23^2*(3*s13^3 + 
                359*s13^2*s23 - 115*s13*s23^2 + 9*s23^3) + s12^3*(18*s13^4 + 
                234*s13^3*s23 - 442*s13^2*s23^2 + 885*s13*s23^3 + 73*s23^4) + 
              s12^2*s23*(72*s13^4 - 284*s13^3*s23 - 601*s13^2*s23^2 + 
                92*s13*s23^3 + 107*s23^4)) - p2q^2*p3q*
             (18*s12^6*(2*s13 + s23) + 20*s13^2*s23^3*(3*s13^2 + s13*s23 - 
                2*s23^2) + s12^5*(54*s13^2 - 18*s13*s23 + 1027*s23^2) + 
              s12^4*s23*(630*s13^2 - 2171*s13*s23 + 1589*s23^2) + 
              s12*s13*s23^2*(3*s13^3 + 672*s13^2*s23 - 687*s13*s23^2 + 
                4*s23^3) + s12^2*s23*(-72*s13^4 + 855*s13^3*s23 + 
                671*s13^2*s23^2 - 1107*s13*s23^3 - 411*s23^4) + 
              s12^3*(-18*s13^4 - 54*s13^3*s23 + 1326*s13^2*s23^2 - 
                3228*s13*s23^3 + 169*s23^4))) + p1q^3*s23*
           (-(p3q^2*(s12 + s23)*(63*s12^5 + 20*s13*s23^3*(s13 + s23) + s12^4*
                (-216*s13 + 466*s23) + 4*s12*s23^2*(-124*s13^2 - 11*s13*s23 + 
                 3*s23^2) + s12^3*(-63*s13^2 - 1472*s13*s23 + 35*s23^2) - 2*
                s12^2*s23*(327*s13^2 + 732*s13*s23 + 178*s23^2))) + 
            p2q*p3q*(-18*s12^6 + 8*s12^5*(36*s13 - 91*s23) + 
              s12^4*(-198*s13^2 + 2591*s13*s23 - 800*s23^2) + 
              20*s13*s23^3*(3*s13^2 + 2*s13*s23 - s23^2) + s12*s23^2*(
                -143*s13^3 + 830*s13^2*s23 + 41*s13*s23^2 - 12*s23^3) + 
              s12^3*(-72*s13^3 + 304*s13^2*s23 + 4415*s13*s23^2 + 
                500*s23^3) + s12^2*s23*(-303*s13^3 + 1172*s13^2*s23 + 
                2173*s13*s23^2 + 578*s23^3)) + 
            p2q^2*(2*s12^5*(9*s13 - 167*s23) + 60*s13^2*s23^3*(s13 + s23) + 
              s12^4*(-225*s13^2 + 822*s13*s23 - 434*s23^2) + s12*s13*s23*(
                18*s13^3 - 107*s13^2*s23 + 372*s13*s23^2 + 17*s23^3) + 
              s12^3*(-18*s13^3 - 296*s13^2*s23 + 1479*s13*s23^2 + 
                134*s23^3) + s12^2*(9*s13^4 - 222*s13^3*s23 + 121*s13^2*
                 s23^2 + 692*s13*s23^3 + 234*s23^4))) - 
          p1q*(-(p3q^4*s12*(s12 + s23)*(18*s12^5 + 140*s13^2*s23^3 + 9*s12^4*
                (4*s13 + 9*s23) + s12^2*s23*(45*s13^2 + 448*s13*s23 - 
                 125*s23^2) + s12^3*(18*s13^2 + 198*s13*s23 - 97*s23^2) + s12*
                s23^2*(177*s13^2 + 334*s13*s23 + 35*s23^2))) + 
            p2q*p3q^3*s12*(-18*s12^6 + 9*s12^5*(2*s13 - 19*s23) + 
              16*s13^2*(8*s13 - 27*s23)*s23^3 + s12^4*(90*s13^2 - 
                225*s13*s23 + 298*s23^2) - s12*s23^2*(-219*s13^3 + 
                313*s13^2*s23 + 693*s13*s23^2 + 105*s23^3) + 
              s12^2*s23*(117*s13^3 + 260*s13^2*s23 - 1727*s13*s23^2 + 
                376*s23^3) + s12^3*(54*s13^3 + 351*s13^2*s23 - 1277*s13*
                 s23^2 + 932*s23^3)) + p2q^4*s13*(45*s12^5*s23 - 
              20*s13^3*s23^2*(s13 + s23) + 6*s12^4*(3*s13^2 + 12*s13*s23 - 
                13*s23^2) + s12*s13*s23^2*(-31*s13^2 + 120*s13*s23 - 
                9*s23^2) + s12^3*(36*s13^3 - 27*s13^2*s23 + 351*s13*s23^2 + 
                29*s23^3) + 2*s12^2*(9*s13^4 + 9*s13^3*s23 + 61*s13^2*s23^2 + 
                199*s13*s23^3 + 76*s23^4)) + p2q^2*p3q^2*
             (9*s12^6*(6*s13 - 13*s23) + 20*s13^3*s23^3*(s13 + s23) + 
              s12*s13^2*s23^2*(23*s13^2 + 444*s13*s23 - 439*s23^2) + 
              9*s12^5*(6*s13^2 + s13*s23 + 40*s23^2) + s12^4*(-54*s13^3 + 
                531*s13^2*s23 - 1264*s13*s23^2 + 966*s23^3) - 
              3*s12^2*s23*(18*s13^4 - 138*s13^3*s23 - 169*s13^2*s23^2 + 
                112*s13*s23^3 + 35*s23^4) + s12^3*(-54*s13^4 - 81*s13^3*s23 + 
                975*s13^2*s23^2 - 1555*s13*s23^3 + 384*s23^4)) + 
            p2q^3*p3q*(-45*s12^6*s23 + 20*s13^3*s23^2*(-s13^2 + s23^2) - 
              4*s12*s13^2*s23^2*(2*s13^2 - 109*s13*s23 + 39*s23^2) + 
              s12^5*(-54*s13^2 + 45*s13*s23 + 78*s23^2) + s12^4*(-90*s13^3 + 
                189*s13^2*s23 - 711*s13*s23^2 + 256*s23^3) + 
              s12^3*(-18*s13^4 - 225*s13^3*s23 + 844*s13^2*s23^2 - 
                581*s13*s23^3 + 98*s23^4) + s12^2*(18*s13^5 - 36*s13^4*s23 + 
                317*s13^3*s23^2 + 901*s13^2*s23^3 + 175*s13*s23^4 - 
                35*s23^5)))))/(72*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12^2*
         s13*s23^2*(s12 + s23)*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (18*p1q^5*s23^2*(s12 + s23)^2*
          (11*s12^5 - 5*s13*s23^3*(s13 + s23) + s12^4*(-31*s13 + 26*s23) + 
           s12*s23^2*(-11*s13^2 - 11*s13*s23 + 5*s23^2) + 
           s12^2*s23*(-55*s13^2 - 57*s13*s23 + 14*s23^2) + 
           s12^3*(-42*s13^2 - 82*s13*s23 + 24*s23^2)) + 18*(p2q + p3q)*s23*
          (s12 + s23)*(s12 + s13 + s23)*(p3q^4*s12^3*(s12 + s23)*
            (25*s12^2 - 9*s12*s13 + 49*s12*s23 - 2*s13*s23 + 24*s23^2) + 
           p2q^4*s13^2*(29*s12^4 - 5*s12^3*(s13 - 14*s23) + 
             5*s13^2*s23*(s13 + 2*s23) + s12*s13*s23*(5*s13 + 9*s23) + 
             s12^2*s23*(11*s13 + 41*s23)) + p2q^2*p3q^2*s12*
            (20*s12^5 + s13^2*(4*s13 - s23)*s23^2 + s12^4*(-130*s13 + 63*
                s23) + s12*s13*s23*(19*s13^2 + 3*s13*s23 - 82*s23^2) + 
             s12^2*s23*(36*s13^2 - 320*s13*s23 + 23*s23^2) + 
             s12^3*(54*s13^2 - 368*s13*s23 + 66*s23^2)) - 
           p2q^3*p3q*s13*(49*s12^5 + 5*s13^2*s23^2*(s13 + 2*s23) + 
             s12^4*(-86*s13 + 151*s23) + s12*s13*s23*(9*s13^2 + 14*s13*s23 + 
               9*s23^2) + s12^2*s23*(-22*s13^2 - 62*s13*s23 + 41*s23^2) + 
             s12^3*(s13^2 - 150*s13*s23 + 143*s23^2)) + p2q*p3q^3*s12^2*
            (49*s12^4 - s13*s23^2*(15*s13 + 31*s23) + 
             s12^3*(-78*s13 + 153*s23) + s12*s23*(-22*s13^2 - 144*s13*s23 + 
               55*s23^2) + s12^2*(9*s13^2 - 191*s13*s23 + 159*s23^2))) - 
         p1q^4*s23*(s12 + s23)*(p3q*(198*s12^7 - 6*s12^6*(159*s13 + 22*s23) + 
             s12^4*s23*(4132*s13^2 + 1389*s13*s23 - 2716*s23^2) + 
             s12^3*s23^2*(5965*s13^2 + 4942*s13*s23 - 2110*s23^2) + 
             s12^2*s23^3*(3377*s13^2 + 3315*s13*s23 - 1028*s23^2) + 
             2*s12^5*(378*s13^2 - 851*s13*s23 - 833*s23^2) + 
             2*s12*s23^4*(334*s13^2 + 205*s13*s23 - 219*s23^2) - 
             20*s23^5*(-2*s13^2 + 5*s13*s23 + 7*s23^2)) - 
           p2q*(6*s12^6*(33*s13 + 127*s23) + s12^5*(-954*s13^2 - 620*s13*
                s23 + 2404*s23^2) + 10*s23^4*(36*s13^3 + 41*s13^2*s23 + 19*
                s13*s23^2 + 14*s23^3) + 2*s12*s23^3*(432*s13^3 + 368*s13^2*
                s23 - 115*s13*s23^2 + 174*s23^3) + s12^2*s23^2*
              (2376*s13^3 + 871*s13^2*s23 - 2271*s13*s23^2 + 794*s23^3) + 
             s12^3*s23*(2340*s13^3 - 1177*s13^2*s23 - 3844*s13*s23^2 + 1984*
                s23^3) + s12^4*(756*s13^3 - 2836*s13^2*s23 - 2811*s13*s23^2 + 
               3040*s23^3))) + p1q^3*s23*(p3q^2*(s12 + s23)*
            (198*s12^7 + 34*s12^6*(117*s13 + 88*s23) + 10*s23^5*
              (5*s13^2 + 19*s13*s23 + 14*s23^2) + 2*s12*s23^4*
              (-154*s13^2 + 6*s13*s23 + 205*s23^2) + 2*s12^2*s23^3*
              (-1238*s13^2 - 386*s13*s23 + 1141*s23^2) + s12^3*s23^2*
              (-7459*s13^2 + 3881*s13*s23 + 6768*s23^2) + 
             s12^5*(-1944*s13^2 + 11865*s13*s23 + 8264*s23^2) + 
             s12^4*s23*(-7765*s13^2 + 12362*s13*s23 + 10226*s23^2)) + 
           p2q*p3q*(234*s12^8 + 34*s12^7*(81*s13 + 128*s23) + 
             s12^6*(-6318*s13^2 + 7943*s13*s23 + 15718*s23^2) + 
             10*s23^5*(3*s13^3 - 52*s13^2*s23 - 41*s13*s23^2 + 14*s23^3) + 
             4*s12*s23^4*(429*s13^3 + 9*s13^2*s23 - 503*s13*s23^2 + 97*
                s23^3) + s12^2*s23^3*(7359*s13^3 + 3901*s13^2*s23 - 3538*s13*
                s23^2 + 3594*s23^3) + s12^3*s23^2*(12214*s13^3 - 5492*s13^2*
                s23 - 1545*s13*s23^2 + 13920*s23^3) + s12^4*s23*
              (9311*s13^3 - 26853*s13^2*s23 + 3961*s13*s23^2 + 25626*s23^3) + 
             s12^5*(2610*s13^3 - 24334*s13^2*s23 + 8759*s13*s23^2 + 26652*
                s23^3)) - p2q^2*(2*s12^7*(81*s13 - 365*s23) + 
             s12^6*(2736*s13^2 + 3382*s13*s23 - 2986*s23^2) + 
             s12^5*(-2556*s13^3 + 9891*s13^2*s23 + 8592*s13*s23^2 - 5858*
                s23^3) + 60*s13*s23^4*(9*s13^3 + 13*s13^2*s23 + 14*s13*
                s23^2 + 10*s23^3) + s12^4*(594*s13^4 - 7313*s13^3*s23 + 9055*
                s13^2*s23^2 + 8124*s13*s23^3 - 6796*s23^4) + 
             s12^3*s23*(1782*s13^4 - 6436*s13^3*s23 - 1077*s13^2*s23^2 + 4186*
                s13*s23^3 - 4150*s23^4) + s12^2*s23^2*(2052*s13^4 - 1239*
                s13^3*s23 - 2707*s13^2*s23^2 + 3030*s13*s23^3 - 794*s23^4) + 
             6*s12*s23^3*(234*s13^4 + 230*s13^3*s23 + 185*s13^2*s23^2 + 366*
                s13*s23^3 + 27*s23^4))) + 
         p1q^2*(p3q^3*s12*(s12 + s23)*(108*s12^7 + 54*s12^6*(4*s13 + 21*
                s23) + 2*s23^5*(36*s13^2 + 67*s13*s23 + 31*s23^2) + 
             36*s12^5*(3*s13^2 + 142*s13*s23 + 155*s23^2) + 
             s12*s23^4*(23*s13^2 + 1987*s13*s23 + 1954*s23^2) + 
             2*s12^4*s23*(-873*s13^2 + 7662*s13*s23 + 5684*s23^2) + 
             s12^2*s23^3*(-3979*s13^2 + 10112*s13*s23 + 6900*s23^2) + 
             s12^3*s23^2*(-6264*s13^2 + 18687*s13*s23 + 11822*s23^2)) + 
           p2q*p3q^2*(108*s12^9 + 1206*s12^8*s23 - 10*s13*s23^6*
              (19*s13^2 + 65*s13*s23 + 46*s23^2) + s12^7*(-324*s13^2 + 4248*
                s13*s23 + 9286*s23^2) - 2*s12^6*(108*s13^3 + 5787*s13^2*s23 - 
               7441*s13*s23^2 - 13721*s23^3) - 2*s12*s23^5*(-92*s13^3 + 633*
                s13^2*s23 + 910*s13*s23^2 + 50*s23^3) + s12^2*s23^4*
              (4036*s13^3 - 409*s13^2*s23 - 1823*s13*s23^2 + 3966*s23^3) + 
             s12^3*s23^3*(10632*s13^3 - 17026*s13^2*s23 + 5029*s13*s23^2 + 
               18238*s23^3) + s12^4*s23^2*(10062*s13^3 - 46269*s13^2*s23 + 
               16933*s13*s23^2 + 36234*s23^3) + s12^5*s23*(2556*s13^3 - 40286*
                s13^2*s23 + 22075*s13*s23^2 + 41316*s23^3)) + 
           p2q^2*p3q*(s12^8*(-216*s13 + 198*s23) + 4*s12^6*s23*
              (-2457*s13^2 - 1810*s13*s23 + 3335*s23^2) + 
             s12^7*(-324*s13^2 - 558*s13*s23 + 3910*s23^2) + 
             10*s13*s23^5*(15*s13^3 + 92*s13^2*s23 + 31*s13*s23^2 - 46*
                s23^3) - 2*s12*s23^4*(609*s13^4 - 488*s13^3*s23 - 984*s13^2*
                s23^2 + 734*s13*s23^3 + 81*s23^4) + s12^2*s23^3*
              (-3680*s13^4 + 954*s13^3*s23 + 1183*s13^2*s23^2 - 4869*s13*
                s23^3 + 2528*s23^4) + s12^3*s23^2*(-3178*s13^4 + 13076*s13^3*
                s23 - 17558*s13^2*s23^2 - 14213*s13*s23^3 + 11354*s23^4) + 
             s12^4*s23*(-918*s13^4 + 19840*s13^3*s23 - 42403*s13^2*s23^2 - 
               24163*s13*s23^3 + 20590*s23^4) + s12^5*(108*s13^4 + 7182*s13^3*
                s23 - 34824*s13^2*s23^2 - 20709*s13*s23^3 + 21554*s23^4)) + 
           p2q^3*(6*s12^7*(18*s13^2 - 33*s13*s23 + 76*s23^2) + 
             60*s13^2*s23^4*(6*s13^3 + 13*s13^2*s23 + 23*s13*s23^2 + 16*
                s23^3) + 2*s12^6*(108*s13^3 - 324*s13^2*s23 - 2094*s13*
                s23^2 + 829*s23^3) + 6*s12*s13*s23^3*(108*s13^4 + 154*s13^3*
                s23 + 405*s13^2*s23^2 + 590*s13*s23^3 + 81*s23^4) + 
             s12^3*s23^2*(-2386*s13^4 + 4568*s13^3*s23 - 3768*s13^2*s23^2 - 
               7215*s13*s23^3 + 2024*s23^4) + s12^5*(108*s13^4 + 4338*s13^3*
                s23 - 4690*s13^2*s23^2 - 11869*s13*s23^3 + 2816*s23^4) + 
             s12^4*s23*(-936*s13^4 + 9760*s13^3*s23 - 7835*s13^2*s23^2 - 
               13773*s13*s23^3 + 3060*s23^4) + s12^2*s23^2*(288*s13^5 - 1358*
                s13^4*s23 + 140*s13^3*s23^2 + 2713*s13^2*s23^3 - 835*s13*
                s23^4 + 578*s23^5))) + p1q*(p3q^4*s12^2*(s12 + s23)*
            (108*s12^6 + 108*s12^5*(2*s13 + 11*s23) + 
             2*s23^4*(155*s13^2 + 334*s13*s23 + 179*s23^2) + 
             4*s12^4*(27*s13^2 + 594*s13*s23 + 1076*s23^2) + 
             s12*s23^3*(-775*s13^2 + 4187*s13*s23 + 1990*s23^2) + 
             s12^2*s23^2*(-2073*s13^2 + 8050*s13*s23 + 5158*s23^2) + 
             s12^3*s23*(-720*s13^2 + 6691*s13*s23 + 6750*s23^2)) + 
           p2q*p3q^3*s12*(108*s12^8 - 36*s12^7*(3*s13 - 64*s23) - 
             4*s13*s23^5*(36*s13^2 + 47*s13*s23 + 11*s23^2) + 
             s12^6*(-540*s13^2 + 1764*s13*s23 + 12446*s23^2) + 
             s12*s23^4*(51*s13^3 - 2013*s13^2*s23 - 450*s13*s23^2 + 1514*
                s23^3) + s12^2*s23^3*(2404*s13^3 - 13098*s13^2*s23 + 1611*s13*
                s23^2 + 8518*s23^3) + s12^3*s23^2*(3521*s13^3 - 27445*s13^2*
                s23 + 8293*s13*s23^2 + 22652*s23^3) + 
             s12^5*(-324*s13^3 - 7344*s13^2*s23 + 7749*s13*s23^2 + 28570*
                s23^3) + s12^4*s23*(828*s13^3 - 22976*s13^2*s23 + 12153*s13*
                s23^2 + 33968*s23^3)) - p2q^4*s13*(360*s12^7*s23 + 
             12*s12^6*(9*s13^2 - 21*s13*s23 + 251*s23^2) + 10*s13^2*s23^3*
              (9*s13^3 + 41*s13^2*s23 + 100*s13*s23^2 + 68*s23^3) + 
             s12^5*(216*s13^3 - 1656*s13^2*s23 - 1325*s13*s23^2 + 7232*
                s23^3) + 2*s12*s13*s23^2*(45*s13^4 + 201*s13^3*s23 + 910*
                s13^2*s23^2 + 1222*s13*s23^3 + 243*s23^4) + 
             s12^2*s23^2*(-24*s13^4 + 958*s13^3*s23 + 1545*s13^2*s23^2 + 1219*
                s13*s23^3 + 1316*s23^4) + s12^3*s23*(72*s13^4 + 878*s13^3*
                s23 - 4336*s13^2*s23^2 - 65*s13*s23^3 + 4920*s23^4) + 
             s12^4*(108*s13^4 + 936*s13^3*s23 - 6041*s13^2*s23^2 - 1871*s13*
                s23^3 + 8184*s23^4)) + p2q^2*p3q^2*
            (-36*s12^8*(9*s13 - 40*s23) - 12*s12^7*(27*s13^2 + 156*s13*s23 - 
               814*s23^2) + 10*s13^2*s23^5*(23*s13^2 + 73*s13*s23 + 50*
                s23^2) + 2*s12*s13*s23^4*(163*s13^3 + 883*s13^2*s23 + 995*s13*
                s23^2 + 140*s23^3) + s12^6*(324*s13^3 - 8640*s13^2*s23 - 
               11127*s13*s23^2 + 24286*s23^3) + s12^2*s23^3*(-1090*s13^4 + 
               1425*s13^3*s23 - 2217*s13^2*s23^2 - 3602*s13*s23^3 + 1734*
                s23^4) + s12^3*s23^2*(-1814*s13^4 + 6944*s13^3*s23 - 25074*
                s13^2*s23^2 - 17517*s13*s23^3 + 8824*s23^4) + 
             s12^4*s23*(-144*s13^4 + 12527*s13^3*s23 - 46797*s13^2*s23^2 - 
               31463*s13*s23^3 + 21516*s23^4) + s12^5*(324*s13^4 + 5976*s13^3*
                s23 - 33746*s13^2*s23^2 - 27407*s13*s23^3 + 30384*s23^4)) + 
           p2q^3*p3q*(360*s12^8*s23 + 6*s12^7*(54*s13^2 - 282*s13*s23 + 421*
                s23^2) + 10*s13^2*s23^4*(-23*s13^3 - 68*s13^2*s23 + 5*s13*
                s23^2 + 50*s23^3) + s12^6*(540*s13^3 - 2088*s13^2*s23 - 13847*
                s13*s23^2 + 6338*s23^3) + 12*s12*s13*s23^3*(10*s13^4 - 75*
                s13^3*s23 - 31*s13^2*s23^2 + 141*s13*s23^3 + 27*s23^4) + 
             s12^5*(108*s13^4 + 6516*s13^3*s23 - 13516*s13^2*s23^2 - 33401*
                s13*s23^3 + 8036*s23^4) - s12^4*(108*s13^5 + 1152*s13^4*s23 - 
               14579*s13^3*s23^2 + 21607*s13^2*s23^3 + 36477*s13*s23^4 - 5940*
                s23^5) + s12^2*s23^2*(366*s13^5 - 1148*s13^4*s23 + 279*s13^3*
                s23^2 - 1131*s13^2*s23^3 - 3800*s13*s23^4 + 578*s23^5) + 
             s12^3*s23*(-72*s13^5 - 2368*s13^4*s23 + 8984*s13^3*s23^2 - 12826*
                s13^2*s23^3 - 19355*s13*s23^4 + 2654*s23^5))))/
        (144*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12^3*s13*s23^2*
         (s12 + s23)^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((9*p1q^5*s23^2*(s12 + s23)^2*(11*s12^3 - 5*s13*s23*(s13 + s23) + 
            s12^2*(-10*s13 + 22*s23) + s12*(-21*s13^2 - 15*s13*s23 + 
              11*s23^2)) - 9*(p2q + p3q)*(s12 + s13 + s23)*
           (16*p3q^4*s12^2*(s12 + s23)^2*(s23*(s13 + s23) + s12*(2*s13 + 
                s23)) + p2q^3*p3q*s13^2*(-109*s12^4 + s12^3*(42*s13 - 
                307*s23) + 5*s13*s23^2*(s13 + 2*s23) + s12^2*(14*s13^2 + 
                82*s13*s23 - 287*s23^2) + s12*s23*(14*s13^2 + 45*s13*s23 - 
                89*s23^2)) - p2q^4*s13^3*(-32*s12^3 + 2*s12^2*(5*s13 - 
                32*s23) + 5*s13*s23*(s13 + 2*s23) + s12*(10*s13^2 + 
                25*s13*s23 - 32*s23^2)) - p2q*p3q^3*s12*(s12 + s23)*
             (36*s12^4 + 16*s13*s23^2*(s13 + s23) + s12^3*(-31*s13 + 
                111*s23) + s12*s23*(70*s13^2 + 30*s13*s23 + 39*s23^2) + 
              s12^2*(70*s13^2 - 17*s13*s23 + 114*s23^2)) + 
            p2q^2*p3q^2*s12*s13*(s12 + s23)*(113*s12^3 + s12^2*(-63*s13 + 
                295*s23) + s23*(17*s13^2 + 6*s13*s23 + 57*s23^2) + 
              s12*(34*s13^2 - 40*s13*s23 + 239*s23^2))) + 
          p1q^4*s23*(s12 + s23)*(-(p3q*(s12 + s23)*(315*s12^4 + s12^3*
                (-441*s13 + 340*s23) - 10*s23^2*(-6*s13^2 + 5*s13*s23 + 
                 11*s23^2) - 3*s12^2*(108*s13^2 + 185*s13*s23 + 125*s23^2) - 
               2*s12*s23*(-48*s13^2 + 82*s13*s23 + 255*s23^2))) + 
            p2q*(27*s12^5 + 8*s12^4*(27*s13 + 16*s23) + s12^3*(180*s13^2 + 
                141*s13*s23 + 332*s23^2) + 5*s23^2*(36*s13^3 + 33*s13^2*s23 + 
                19*s13*s23^2 + 22*s23^3) + s12*s23*(747*s13^3 + 654*s13^2*
                 s23 - 101*s13*s23^2 + 377*s23^3) + s12^2*(423*s13^3 + 
                669*s13^2*s23 - 271*s13*s23^2 + 498*s23^3))) + 
          p1q^3*(s12 + s23)*(p3q^2*(s12 + s23)*(360*s12^5 + s12^4*(27*s13 + 
                142*s23) + s12^3*(-333*s13^2 + 734*s13*s23 - 729*s23^2) + 
              s12^2*s23*(-11*s13^2 + 501*s13*s23 - 314*s23^2) + 
              5*s23^3*(s13^2 + 27*s13*s23 + 26*s23^2) + s12*s23^2*(
                -33*s13^2 - 71*s13*s23 + 327*s23^2)) + 
            p2q*p3q*(117*s12^6 + s12^5*(-243*s13 + 601*s23) + 
              s12^4*(351*s13^2 + 1436*s13*s23 + 1426*s23^2) + 
              5*s23^3*(23*s13^3 - 68*s13^2*s23 - 69*s13*s23^2 + 22*s23^3) + 
              s12*s23^2*(773*s13^3 - 302*s13^2*s23 - 1580*s13*s23^2 + 
                655*s23^3) + s12^2*s23*(1225*s13^3 + 343*s13^2*s23 - 
                203*s13*s23^2 + 1555*s23^3) + s12^3*(711*s13^3 + 
                656*s13^2*s23 + 2711*s13*s23^2 + 1952*s23^3)) + 
            p2q^2*(9*s12^5*(3*s13 + 11*s23) + 3*s12^4*(105*s13^2 + 
                372*s13*s23 + 233*s23^2) + s12^3*(54*s13^3 + 721*s13^2*s23 + 
                2187*s13*s23^2 + 1483*s23^3) - s12*s23*(837*s13^4 + 
                811*s13^3*s23 + 310*s13^2*s23^2 + 924*s13*s23^3 - 
                342*s23^4) - 10*s23^2*(27*s13^4 + 29*s13^3*s23 + 
                48*s13^2*s23^2 + 48*s13*s23^3 + 2*s23^4) + 
              s12^2*(-234*s13^4 - 332*s13^3*s23 + 576*s13^2*s23^2 + 
                654*s13*s23^3 + 1245*s23^4))) + 
          p1q^2*(p3q^3*(s12 + s23)^2*(720*s12^5 + 20*s23^3*(s13 + s23)^2 + 
              3*s12^4*(66*s13 + 445*s23) + s12^2*s23*(-104*s13^2 + 
                925*s13*s23 - 85*s23^2) + 2*s12*s23^2*(39*s13^2 - 
                61*s13*s23 + 20*s23^2) + s12^3*(-522*s13^2 + 1285*s13*s23 + 
                510*s23^2)) + p2q*p3q^2*(s12 + s23)^2*(279*s12^5 + 
              s12^4*(-1368*s13 + 1013*s23) - 5*s13*s23^2*(15*s13^2 + 
                89*s13*s23 + 74*s23^2) + s12^3*(-81*s13^2 + 1092*s13*s23 + 
                1756*s23^2) + s12*s23*(964*s13^3 + 598*s13^2*s23 - 
                814*s13*s23^2 + 567*s23^3) + s12^2*(1566*s13^3 + 
                647*s13^2*s23 + 2016*s13*s23^2 + 1589*s23^3)) + 
            p2q^2*p3q*(s12 + s23)*(45*s12^6 + s12^5*(-207*s13 + 308*s23) + 
              3*s12^4*(393*s13^2 + 241*s13*s23 + 407*s23^2) + 
              s12^3*(63*s13^3 + 1076*s13^2*s23 + 844*s13*s23^2 + 
                2245*s23^3) - 5*s23^2*(s13^4 - 120*s13^3*s23 - 51*s13^2*
                 s23^2 + 74*s13*s23^3 + 4*s23^4) + s12*s23*(-734*s13^4 + 
                1171*s13^3*s23 + 1095*s13^2*s23^2 - 1963*s13*s23^3 + 
                507*s23^4) + s12^2*(-1368*s13^4 + 719*s13^3*s23 + 
                737*s13^2*s23^2 - 1679*s13*s23^3 + 1814*s23^4)) - 
            p2q^3*s13*(45*s12^6 + s12^5*(72*s13 + 515*s23) + 
              s12^4*(531*s13^2 + 1880*s13*s23 + 2396*s23^2) + 
              s12^3*(180*s13^3 + 1253*s13^2*s23 + 3737*s13*s23^2 + 
                4508*s23^3) - s12*s23*(549*s13^4 + 746*s13^3*s23 + 
                1515*s13^2*s23^2 + 1247*s13*s23^3 - 1001*s23^4) - 
              10*s23^2*(18*s13^4 + 31*s13^3*s23 + 81*s13^2*s23^2 + 
                72*s13*s23^3 + 4*s23^4) + s12^2*(-324*s13^4 - 211*s13^3*s23 + 
                17*s13^2*s23^2 + 1402*s13*s23^3 + 3623*s23^4))) + 
          p1q*(p3q^4*s12*(s12 + s23)^2*(360*s12^4 + s12^3*(-117*s13 + 
                734*s23) + 4*s23^2*(51*s13^2 + 62*s13*s23 + 31*s23^2) + 
              s12*s23*(87*s13^2 + 781*s13*s23 + 262*s23^2) + 
              s12^2*(-477*s13^2 + 416*s13*s23 + 512*s23^2)) + 
            p2q*p3q^3*(s12 + s23)*(486*s12^6 - 20*s13*s23^3*(s13 + s23)^2 + 
              s12^5*(-1368*s13 + 1897*s23) + s12^4*(-801*s13^2 - 
                2043*s13*s23 + 3064*s23^2) + s12*s23^2*(395*s13^3 + 
                345*s13^2*s23 - 81*s13*s23^2 + 289*s23^3) + s12^2*s23*(
                1324*s13^3 + 235*s13^2*s23 + 591*s13*s23^2 + 1306*s23^3) + 
              s12^3*(1053*s13^3 - 951*s13^2*s23 - 23*s13*s23^2 + 
                2670*s23^3)) + p2q^4*s13^2*(333*s12^5 + s12^4*(243*s13 + 
                1514*s23) + 4*s12^3*(9*s13^2 + 281*s13*s23 + 759*s23^2) + 
              s12^2*(36*s13^3 - 467*s13^2*s23 + 964*s13*s23^2 + 2842*s23^3) - 
              s12*(90*s13^4 + 329*s13^3*s23 + 1178*s13^2*s23^2 + 
                357*s13*s23^3 - 967*s23^4) - 5*s23*(9*s13^4 + 37*s13^3*s23 + 
                112*s13^2*s23^2 + 88*s13*s23^3 + 4*s23^4)) + 
            p2q^2*p3q^2*(s12 + s23)*(369*s12^6 + s12^5*(-846*s13 + 
                1532*s23) + 5*s13^2*s23^2*(23*s13^2 + 89*s13*s23 + 
                66*s23^2) + 3*s12^4*(429*s13^2 - 839*s13*s23 + 849*s23^2) + 
              s12^3*(1674*s13^3 + 940*s13^2*s23 - 4173*s13*s23^2 + 
                2139*s23^3) + s12*s23*(-452*s13^4 + 1333*s13^3*s23 + 
                638*s13^2*s23^2 - 1677*s13*s23^3 + 165*s23^4) + 
              s12^2*(-828*s13^4 + 2215*s13^3*s23 - 39*s13^2*s23^2 - 
                4179*s13*s23^3 + 920*s23^4)) - p2q^3*p3q*s13*
             (702*s12^6 + s12^5*(-117*s13 + 3658*s23) + s12^4*(315*s13^2 + 
                873*s13*s23 + 8150*s23^2) + s12^3*(792*s13^3 + 370*s13^2*
                 s23 + 1287*s13*s23^2 + 9502*s23^3) - 5*s23^2*(-19*s13^4 - 
                80*s13^3*s23 + 5*s13^2*s23^2 + 70*s13*s23^3 + 4*s23^4) + 
              s12*s23*(23*s13^4 + 1587*s13^3*s23 - 434*s13^2*s23^2 - 
                1510*s13*s23^3 + 1328*s23^4) + s12^2*(-342*s13^4 + 
                1909*s13^3*s23 - 354*s13^2*s23^2 - 863*s13*s23^3 + 
                5656*s23^4))))*den[-1 + ep])/(72*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12^2*s13*s23*(s12 + s23)^2*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     ((ep^2*(1 + (5*s12)/s13 + (5*s13)/s12))/9 + 
       (ep*(9*p1q^4*(p2q + p3q)*s12*s13*(s12 + s13)*s23*
           (3*s13*s23*(s13 + s23) + s12^2*(8*s13 + 3*s23) + 
            s12*(8*s13^2 + 14*s13*s23 + 3*s23^2)) + 9*(p2q + p3q)^4*s12*s13*
           s23*(s12 + s13 + s23)*(p2q*s13*(7*s12^2 + 8*s12*s13 + s13^2 + 
              6*s12*s23 + 2*s13*s23) + p3q*s12*(s12^2 + 2*s12*(4*s13 + s23) + 
              s13*(7*s13 + 6*s23))) + 2*p1q^2*
           (p3q^3*s12*(s13^2*s23^2*(169*s13^2 + 11*s13*s23 - 18*s23^2) - 
              2*s12^4*(36*s13^2 + 9*s13*s23 - 10*s23^2) + s12^2*s13*s23*(
                162*s13^2 + 955*s13*s23 + 33*s23^2) + 3*s12*s13*s23*(
                42*s13^3 + 317*s13^2*s23 + 2*s13*s23^2 - 6*s23^3) + 
              s12^3*(-72*s13^3 + 18*s13^2*s23 + 193*s13*s23^2 + 20*s23^3)) + 
            p2q*p3q^2*(20*s13^4*s23^2*(s13 + s23) - 4*s12^5*(18*s13^2 + 
                9*s13*s23 - 10*s23^2) + s12^2*s13*s23*(414*s13^3 + 
                2929*s13^2*s23 + 18*s13*s23^2 - 54*s23^3) + s12*s13^2*s23*(
                -18*s13^3 + 531*s13^2*s23 + 55*s13*s23^2 - 54*s23^3) + 
              s12^4*(72*s13^3 + 306*s13^2*s23 + 555*s13*s23^2 + 40*s23^3) + 
              s12^3*s13*(144*s13^3 + 774*s13^2*s23 + 2933*s13*s23^2 + 
                77*s23^3)) + p2q^2*p3q*(40*s13^4*s23^2*(s13 + s23) + 
              2*s12^5*s23*(-9*s13 + 10*s23) + s12*s13^2*s23*(-36*s13^3 + 
                555*s13^2*s23 + 77*s13*s23^2 - 54*s23^3) + s12^4*(144*s13^3 + 
                414*s13^2*s23 + 531*s13*s23^2 + 20*s23^3) + s12^3*s13*(
                72*s13^3 + 774*s13^2*s23 + 2929*s13*s23^2 + 55*s23^3) + 
              s12^2*s13*(-72*s13^4 + 306*s13^3*s23 + 2933*s13^2*s23^2 + 
                18*s13*s23^3 - 54*s23^4)) + p2q^3*s13*
             (20*s13^3*s23^2*(s13 + s23) + s12^4*s23*(126*s13 + 169*s23) + 
              s12*s13*s23*(-18*s13^3 + 193*s13^2*s23 + 33*s13*s23^2 - 
                18*s23^3) + s12^3*(-72*s13^3 + 162*s13^2*s23 + 951*s13*
                 s23^2 + 11*s23^3) + s12^2*(-72*s13^4 + 18*s13^3*s23 + 
                955*s13^2*s23^2 + 6*s13*s23^3 - 18*s23^4))) + 
          p1q*(p2q + p3q)^2*(p3q^2*s12*(-20*s12^5*s23 + s13^2*s23^2*(
                131*s13^2 - 27*s13*s23 - 18*s23^2) + s12^2*s13*s23*(
                190*s13^2 + 955*s13*s23 + 9*s23^2) - 2*s12^4*(36*s13^2 + 
                31*s13*s23 + 10*s23^2) + s12^3*s13*(-72*s13^2 + 6*s13*s23 + 
                125*s23^2) + s12*s13*s23*(142*s13^3 + 941*s13^2*s23 + 
                18*s13*s23^2 - 18*s23^3)) + 2*p2q*p3q*s12*s13*
             (11*s12^4*s23 + 8*s12^3*(9*s13^2 + 28*s13*s23 + 20*s23^2) + 
              s13*s23*(11*s13^3 + 160*s13^2*s23 - 9*s13*s23^2 - 18*s23^3) + 
              2*s12*s23*(112*s13^3 + 515*s13^2*s23 + 9*s13*s23^2 - 9*s23^3) + 
              s12^2*(72*s13^3 + 426*s13^2*s23 + 1030*s13*s23^2 - 9*s23^3)) + 
            p2q^2*s13*(-20*s13^4*s23*(s13 + s23) + s12^4*s23*(142*s13 + 
                131*s23) + s12^3*(-72*s13^3 + 190*s13^2*s23 + 941*s13*s23^2 - 
                27*s23^3) + s12*s13*s23*(-62*s13^3 + 125*s13^2*s23 + 
                9*s13*s23^2 - 18*s23^3) + s12^2*(-72*s13^4 + 6*s13^3*s23 + 
                955*s13^2*s23^2 + 18*s13*s23^3 - 18*s23^4))) - 
          p1q^3*(p3q^2*(20*s13^3*s23^3*(s13 + s23) + 9*s12^5*s13*(8*s13 + 
                3*s23) + 4*s12*s13^2*s23^2*(-44*s13^2 + 11*s13*s23 + 
                15*s23^2) + s12^4*(72*s13^3 - 45*s13^2*s23 - 149*s13*s23^2 + 
                20*s23^3) + s12^3*s23*(-243*s13^3 - 934*s13^2*s23 + 
                44*s13*s23^2 + 20*s23^3) + s12^2*s13*s23*(-171*s13^3 - 
                961*s13^2*s23 + 120*s13*s23^2 + 60*s23^3)) + 
            p2q*p3q*(27*s12^5*s13*s23 + 40*s13^3*s23^3*(s13 + s23) - 
              s12^4*(144*s13^3 + 360*s13^2*s23 + 325*s13*s23^2 - 40*s23^3) + 
              s12*s13^2*s23*(27*s13^3 - 325*s13^2*s23 + 88*s13*s23^2 + 
                120*s23^3) + s12^2*s13*s23*(-360*s13^3 - 1967*s13^2*s23 + 
                240*s13*s23^2 + 120*s23^3) + s12^3*(-144*s13^4 - 
                774*s13^3*s23 - 1967*s13^2*s23^2 + 88*s13*s23^3 + 
                40*s23^4)) + p2q^2*(20*s13^3*s23^3*(s13 + s23) + 
              s12^4*s23*(-171*s13^2 - 176*s13*s23 + 20*s23^2) + 
              s12*s13^2*s23*(27*s13^3 - 149*s13^2*s23 + 44*s13*s23^2 + 
                60*s23^3) + s12^3*(72*s13^4 - 243*s13^3*s23 - 961*s13^2*
                 s23^2 + 44*s13*s23^3 + 20*s23^4) + s12^2*s13*(72*s13^4 - 
                45*s13^3*s23 - 934*s13^2*s23^2 + 120*s13*s23^3 + 
                60*s23^4)))))/(72*p1q*(p2q + p3q)^2*(p1q + p2q + p3q)^2*s12^2*
         s13^2*(s12 + s13)*s23^2) + (-9*p1q^5*(p2q + p3q)*s23^2*
          (10*s13^4*s23^3*(s13 + s23) + s12^2*s13^3*s23*(147*s13^2 + 
             151*s13*s23 - 28*s23^2) + 2*s12*s13^3*s23^2*(11*s13^2 + 
             11*s13*s23 - 5*s23^2) + s12^5*(152*s13^3 + 147*s13^2*s23 + 
             22*s13*s23^2 + 10*s23^3) + s12^3*s13*(152*s13^4 + 
             305*s13^3*s23 - 30*s13^2*s23^2 - 28*s13*s23^3 - 10*s23^4) + 
           s12^4*(304*s13^4 + 305*s13^3*s23 + 151*s13^2*s23^2 + 
             22*s13*s23^3 + 10*s23^4)) + 9*(p2q + p3q)^3*(s12 + s13)*s23*
          (p2q^2*p3q*s12*s13^2*(31*s12^5 + s12^4*(187*s13 + 111*s23) + 
             s12^2*s13*(237*s13^2 + 275*s13*s23 - 102*s23^2) + 
             2*s13^3*(-4*s13^2 - 3*s13*s23 + s23^2) + 
             s12^3*(341*s13^2 + 134*s13*s23 + 80*s23^2) + 2*s12*s13^2*
              (22*s13^2 + 123*s13*s23 + 96*s23^2)) + p2q^3*s13^3*
            (47*s12^5 + s12^4*(117*s13 + 25*s23) + s12^3*(93*s13^2 + 148*s13*
                s23 - 22*s23^2) + 10*s13^3*(s13^2 + 3*s13*s23 + 2*s23^2) + 
             2*s12*s13^2*(10*s13^2 + 24*s13*s23 + 9*s23^2) + 
             s12^2*s13*(33*s13^2 + 141*s13*s23 + 100*s23^2)) + 
           p3q^3*s12^3*(10*s12^5 + 10*s12^4*(2*s13 + 3*s23) + 
             s13^3*(47*s13^2 + 25*s13*s23 - 22*s23^2) + 3*s12^2*s13*
              (31*s13^2 + 47*s13*s23 + 6*s23^2) + s12^3*(33*s13^2 + 48*s13*
                s23 + 20*s23^2) + s12*s13^2*(117*s13^2 + 148*s13*s23 + 100*
                s23^2)) + p2q*p3q^2*s12^2*s13*(-8*s12^5 + 
             s12^4*(44*s13 - 6*s23) + s12*s13^2*(187*s13^2 + 134*s13*s23 - 
               102*s23^2) + s12^3*(237*s13^2 + 246*s13*s23 + 2*s23^2) + 
             s13^3*(31*s13^2 + 111*s13*s23 + 80*s23^2) + 
             s12^2*s13*(341*s13^2 + 275*s13*s23 + 192*s23^2))) + 
         p1q*(p2q + p3q)^2*(p2q*p3q^2*s12*(10*s12^7*(35*s13 - 23*s23)*s23 + 
             4*s13^5*s23^2*(36*s13^2 + 47*s13*s23 + 11*s23^2) + 
             s12^2*s13^3*s23*(3888*s13^3 - 9747*s13^2*s23 - 2241*s13*s23^2 - 
               1700*s23^3) + s12^5*s23*(5724*s13^3 + 1641*s13^2*s23 - 1640*
                s13*s23^2 - 500*s23^3) - 2*s12^6*(684*s13^3 + 114*s13^2*s23 + 
               111*s13*s23^2 + 365*s23^3) - 2*s12*s13^4*s23*(674*s13^3 + 71*
                s13^2*s23 + 668*s13*s23^2 + 1221*s23^3) + s12^3*s13^2*
              (2736*s13^4 + 7386*s13^3*s23 - 15153*s13^2*s23^2 - 1876*s13*
                s23^3 - 3832*s23^4) + s12^4*s13*(4104*s13^4 + 8452*s13^3*
                s23 - 4059*s13^2*s23^2 - 2069*s13*s23^3 - 798*s23^4)) - 
           p2q^3*s13^2*(s12^6*s23*(-2528*s13 + 319*s23) - 2*s12^2*s13^2*s23*
              (344*s13^3 + 552*s13^2*s23 - 813*s13*s23^2 - 901*s23^3) + 
             10*s13^4*s23*(9*s13^3 + 41*s13^2*s23 + 100*s13*s23^2 + 68*
                s23^3) + 2*s12*s13^3*s23*(-4*s13^3 + 435*s13^2*s23 + 1157*s13*
                s23^2 + 493*s23^3) + s12^5*(1368*s13^3 - 4396*s13^2*s23 + 
               3743*s13*s23^2 + 839*s23^3) + s12^4*(2736*s13^4 - 5498*s13^3*
                s23 + 2971*s13^2*s23^2 + 1066*s13*s23^3 + 520*s23^4) + 
             s12^3*s13*(1368*s13^4 - 4220*s13^3*s23 - 2017*s13^2*s23^2 + 539*
                s13*s23^3 + 576*s23^4)) - p3q^3*s12^2*(90*s12^7*s23 + 
             s12^6*(-8*s13*s23 + 410*s23^2) + s13^4*s23^2*(319*s13^2 + 839*
                s13*s23 + 520*s23^2) + 2*s12^5*(684*s13^3 - 344*s13^2*s23 + 
               435*s13*s23^2 + 500*s23^3) + s12*s13^3*s23*(-2528*s13^3 + 3743*
                s13^2*s23 + 1066*s13*s23^2 + 576*s23^3) + s12^2*s13^2*s23*
              (-4396*s13^3 + 2971*s13^2*s23 + 539*s13*s23^2 + 1802*s23^3) + 
             2*s12^4*(1368*s13^4 - 2110*s13^3*s23 - 552*s13^2*s23^2 + 1157*
                s13*s23^3 + 340*s23^4) + s12^3*s13*(1368*s13^4 - 5498*s13^3*
                s23 - 2017*s13^2*s23^2 + 1626*s13*s23^3 + 986*s23^4)) - 
           p2q^2*p3q*s13*(4*s12^7*(337*s13 - 36*s23)*s23 + 10*s13^5*s23^2*
              (23*s13^2 + 73*s13*s23 + 50*s23^2) - 2*s12^6*(1368*s13^3 + 1944*
                s13^2*s23 - 71*s13*s23^2 + 94*s23^3) + 2*s12*s13^4*s23*
              (-175*s13^3 + 111*s13^2*s23 + 820*s13*s23^2 + 399*s23^3) + 
             s12^4*s13*s23*(-8452*s13^3 + 15153*s13^2*s23 + 2241*s13*s23^2 + 
               2442*s23^3) + s12^2*s13^3*s23*(228*s13^3 - 1641*s13^2*s23 + 
               2069*s13*s23^2 + 3832*s23^3) + s12^5*(-4104*s13^4 - 7386*s13^3*
                s23 + 9747*s13^2*s23^2 + 1336*s13*s23^3 - 44*s23^4) + 
             s12^3*s13^2*(1368*s13^4 - 5724*s13^3*s23 + 4059*s13^2*s23^2 + 
               1876*s13*s23^3 + 1700*s23^4))) + 
         p1q^2*(p2q^4*s13*(2*s12^6*s23*(2259*s13^2 + 394*s13*s23 - 36*
                s23^2) + 60*s13^4*s23^2*(6*s13^3 + 13*s13^2*s23 + 23*s13*
                s23^2 + 16*s23^3) - s12^2*s13^2*s23*(1386*s13^4 + 3208*s13^3*
                s23 + 2987*s13^2*s23^2 + 965*s13*s23^3 - 740*s23^4) - 
             s12^5*(2736*s13^4 - 6246*s13^3*s23 + 7450*s13^2*s23^2 + 781*s13*
                s23^3 + 134*s23^4) + 2*s12*s13^3*s23*(99*s13^4 + 47*s13^3*
                s23 + 390*s13^2*s23^2 + 1365*s13*s23^3 + 473*s23^4) - 
             s12^3*s13*(2736*s13^5 - 1692*s13^4*s23 + 11620*s13^3*s23^2 + 
               4305*s13^2*s23^3 + 2092*s13*s23^4 - 296*s23^5) - 
             s12^4*(5472*s13^5 - 5004*s13^4*s23 + 11732*s13^3*s23^2 - 565*
                s13^2*s23^3 + 1263*s13*s23^4 + 62*s23^5)) - 
           2*p2q^3*p3q*(s12^7*s23*(954*s13^2 + 390*s13*s23 - 95*s23^2) - 
             5*s13^5*s23^2*(63*s13^3 + 166*s13^2*s23 + 341*s13*s23^2 + 238*
                s23^3) + s12^2*s13^3*s23*(2340*s13^4 + 4133*s13^3*s23 + 4490*
                s13^2*s23^2 + 2258*s13*s23^3 - 1332*s23^4) + 
             s12^6*(-2736*s13^4 - 8820*s13^3*s23 + 47*s13^2*s23^2 + 227*s13*
                s23^3 - 325*s23^4) - 2*s12*s13^4*s23*(99*s13^4 - 211*s13^3*
                s23 + 272*s13^2*s23^2 + 1679*s13*s23^3 + 602*s23^4) + 
             2*s12^3*s13^2*(1368*s13^5 - 2997*s13^4*s23 + 9895*s13^3*s23^2 + 
               2726*s13^2*s23^3 + 1966*s13*s23^4 - 444*s23^5) + 
             s12^4*s13*(2736*s13^5 - 14832*s13^4*s23 + 22007*s13^3*s23^2 + 
               609*s13^2*s23^3 + 2556*s13*s23^4 - 196*s23^5) - 
             s12^5*(2736*s13^5 + 16074*s13^4*s23 - 15638*s13^3*s23^2 - 2275*
                s13^2*s23^3 + 494*s13*s23^4 + 230*s23^5)) + 
           2*p2q^2*p3q^2*(9*s12^8*s23*(11*s13 + 15*s23) - 
             s12^7*(1368*s13^3 + 2601*s13^2*s23 + 859*s13*s23^2 - 535*
                s23^3) + 5*s13^5*s23^2*(27*s13^3 + 107*s13^2*s23 + 268*s13*
                s23^2 + 188*s23^3) - s12^2*s13^3*s23*(2601*s13^4 + 2970*s13^3*
                s23 + 4881*s13^2*s23^2 + 3700*s13*s23^3 - 1702*s23^4) + 
             s12*s13^4*s23*(99*s13^4 - 859*s13^3*s23 - 37*s13^2*s23^2 + 2554*
                s13*s23^3 + 958*s23^4) + s12^6*(2736*s13^4 + 11709*s13^3*
                s23 - 2970*s13^2*s23^2 - 37*s13*s23^3 + 1340*s23^4) - 
             s12^3*s13^2*(1368*s13^5 - 11709*s13^4*s23 + 25893*s13^3*s23^2 + 
               4191*s13^2*s23^3 + 5772*s13*s23^4 - 1702*s23^5) + 
             s12^5*(8208*s13^5 + 25281*s13^4*s23 - 25893*s13^3*s23^2 - 4881*
                s13^2*s23^3 + 2554*s13*s23^4 + 940*s23^5) + 
             s12^4*s13*(2736*s13^5 + 25281*s13^4*s23 - 32282*s13^3*s23^2 - 
               4191*s13^2*s23^3 - 3700*s13*s23^4 + 958*s23^5)) + 
           p3q^4*s12*(18*s12^7*s23*(11*s13 + 20*s23) - 2*s13^4*s23^3*
              (36*s13^2 + 67*s13*s23 + 31*s23^2) + s12*s13^3*s23^2*
              (788*s13^3 - 781*s13^2*s23 - 1263*s13*s23^2 + 296*s23^3) + 
             s12^6*(-2736*s13^3 - 1386*s13^2*s23 + 94*s13*s23^2 + 780*
                s23^3) - 4*s12^5*(1368*s13^4 - 423*s13^3*s23 + 802*s13^2*
                s23^2 - 195*s13*s23^3 - 345*s23^4) + s12^2*s13^2*s23*
              (4518*s13^4 - 7450*s13^3*s23 + 565*s13^2*s23^2 - 2092*s13*
                s23^3 + 740*s23^4) + s12^3*s13*s23*(6246*s13^4 - 11732*s13^3*
                s23 - 4305*s13^2*s23^2 - 965*s13*s23^3 + 946*s23^4) + 
             s12^4*(-2736*s13^5 + 5004*s13^4*s23 - 11620*s13^3*s23^2 - 2987*
                s13^2*s23^3 + 2730*s13*s23^4 + 960*s23^5)) + 
           2*p2q*p3q^3*(9*s12^8*s23*(22*s13 + 35*s23) + 5*s13^5*s23^3*
              (19*s13^2 + 65*s13*s23 + 46*s23^2) - 2*s12^7*(1368*s13^3 + 1170*
                s13^2*s23 + 211*s13*s23^2 - 415*s23^3) + s12*s13^4*s23^2*
              (-390*s13^3 - 227*s13^2*s23 + 494*s13*s23^2 + 196*s23^3) - 
             s12^2*s13^3*s23*(954*s13^4 + 47*s13^3*s23 + 2275*s13^2*s23^2 + 
               2556*s13*s23^3 - 888*s23^4) + s12^3*s13^2*s23*
              (8820*s13^4 - 15638*s13^3*s23 - 609*s13^2*s23^2 - 3932*s13*
                s23^3 + 1332*s23^4) + s12^6*(-2736*s13^4 + 5994*s13^3*s23 - 
               4133*s13^2*s23^2 + 544*s13*s23^3 + 1705*s23^4) + 
             2*s12^5*(1368*s13^5 + 7416*s13^4*s23 - 9895*s13^3*s23^2 - 2245*
                s13^2*s23^3 + 1679*s13*s23^4 + 595*s23^5) + 
             s12^4*s13*(2736*s13^5 + 16074*s13^4*s23 - 22007*s13^3*s23^2 - 
               5452*s13^2*s23^3 - 2258*s13*s23^4 + 1204*s23^5))) + 
         p1q^3*(p3q^3*(-10*s13^4*s23^4*(5*s13^2 + 19*s13*s23 + 14*s23^2) + 
             2*s12*s13^3*s23^3*(215*s13^3 + 167*s13^2*s23 - 132*s13*s23^2 - 
               39*s23^3) - 9*s12^7*(152*s13^3 + 129*s13^2*s23 + 66*s13*
                s23^2 + 60*s23^3) + 2*s12^2*s13^3*s23^2*(954*s13^3 + 1029*
                s13^2*s23 + 513*s13*s23^2 + 637*s23^3) + 
             s12^6*(-2736*s13^4 + 3726*s13^3*s23 + 1899*s13^2*s23^2 - 410*s13*
                s23^3 - 780*s23^4) + s12^5*(-1368*s13^5 + 10800*s13^4*s23 + 
               2053*s13^3*s23^2 + 5332*s13^2*s23^3 + 60*s13*s23^4 - 840*
                s23^5) + s12^4*s23*(9810*s13^5 + 8813*s13^4*s23 + 11764*s13^3*
                s23^2 + 1722*s13^2*s23^3 - 1326*s13*s23^4 - 600*s23^5) + 
             s12^3*s13*s23*(3897*s13^5 + 793*s13^4*s23 + 13374*s13^3*s23^2 + 
               3264*s13^2*s23^3 + 890*s13*s23^4 - 302*s23^5)) + 
           p2q*p3q^2*(s12^6*s23*(8757*s13^3 + 6030*s13^2*s23 + 312*s13*
                s23^2 - 1340*s23^3) - 18*s12^7*(76*s13^3 + 129*s13^2*s23 + 55*
                s13*s23^2 + 45*s23^3) - 10*s13^4*s23^3*(27*s13^3 + 61*s13^2*
                s23 + 122*s13*s23^2 + 88*s23^3) - 2*s12*s13^3*s23^2*
              (198*s13^4 - 576*s13^3*s23 - 481*s13^2*s23^2 + 927*s13*s23^3 + 
               229*s23^4) + s12^2*s13^3*s23*(-1161*s13^4 + 6039*s13^3*s23 + 
               9934*s13^2*s23^2 + 3900*s13*s23^3 + 3438*s23^4) + 
             s12^5*(4104*s13^5 + 23634*s13^4*s23 - 4299*s13^3*s23^2 + 13208*
                s13^2*s23^3 + 688*s13*s23^4 - 1870*s23^5) + 
             s12^3*s13*s23*(8928*s13^5 - 5559*s13^4*s23 + 33598*s13^3*s23^2 + 
               10116*s13^2*s23^3 + 3054*s13*s23^4 - 682*s23^5) + 
             s12^4*(2736*s13^6 + 22644*s13^5*s23 + 7791*s13^4*s23^2 + 31988*
                s13^3*s23^3 + 4596*s13^2*s23^4 - 2916*s13*s23^5 - 1340*
                s23^6)) + p2q^2*p3q*(-9*s12^7*s23*(129*s13^2 + 44*s13*s23 + 
               30*s23^2) - 10*s13^4*s23^3*(81*s13^3 + 134*s13^2*s23 + 187*s13*
                s23^2 + 134*s23^3) + s12^6*(2736*s13^4 + 8928*s13^3*s23 + 
               6039*s13^2*s23^2 + 1152*s13*s23^3 - 610*s23^4) - 
             2*s12*s13^3*s23^2*(495*s13^4 - 156*s13^3*s23 - 344*s13^2*s23^2 + 
               1458*s13*s23^3 + 341*s23^4) + 2*s12^2*s13^3*s23*
              (-1161*s13^4 + 3015*s13^3*s23 + 6604*s13^2*s23^2 + 2298*s13*
                s23^3 + 1527*s23^4) + s12^5*(4104*s13^5 + 22644*s13^4*s23 - 
               5559*s13^3*s23^2 + 9934*s13^2*s23^3 + 962*s13*s23^4 - 1220*
                s23^5) + s12^4*s23*(23634*s13^5 + 7791*s13^4*s23 + 33598*
                s13^3*s23^2 + 3900*s13^2*s23^3 - 1854*s13*s23^4 - 880*
                s23^5) + s12^3*s13*(-1368*s13^6 + 8757*s13^5*s23 - 4299*s13^4*
                s23^2 + 31988*s13^3*s23^3 + 10116*s13^2*s23^4 + 3438*s13*
                s23^5 - 458*s23^6)) + p2q^3*(s12^6*s23*(3897*s13^3 + 1908*
                s13^2*s23 + 430*s13*s23^2 - 50*s23^3) - 60*s13^4*s23^3*
              (9*s13^3 + 13*s13^2*s23 + 14*s13*s23^2 + 10*s23^3) - 
             2*s12*s13^3*s23^2*(297*s13^4 + 205*s13^3*s23 - 30*s13^2*s23^2 + 
               663*s13*s23^3 + 151*s23^4) + s12^2*s13^3*s23*(-1161*s13^4 + 
               1899*s13^3*s23 + 5332*s13^2*s23^2 + 1722*s13*s23^3 + 890*
                s23^4) + s12^5*(-1368*s13^5 + 9810*s13^4*s23 + 793*s13^3*
                s23^2 + 2058*s13^2*s23^3 + 334*s13*s23^4 - 190*s23^5) + 
             s12^4*(-2736*s13^6 + 10800*s13^5*s23 + 8813*s13^4*s23^2 + 13374*
                s13^3*s23^3 + 1026*s13^2*s23^4 - 264*s13*s23^5 - 140*s23^6) + 
             s12^3*s13*(-1368*s13^6 + 3726*s13^5*s23 + 2053*s13^4*s23^2 + 
               11764*s13^3*s23^3 + 3264*s13^2*s23^4 + 1274*s13*s23^5 - 78*
                s23^6))) + p1q^4*s23*
          (p2q^2*(2*s12^2*s13^3*s23*(1242*s13^3 + 423*s13^2*s23 - 1532*s13*
                s23^2 - 158*s23^3) + 9*s12^6*(152*s13^3 + 129*s13^2*s23 + 22*
                s13*s23^2 + 10*s23^3) + 10*s13^3*s23^3*(36*s13^3 + 41*s13^2*
                s23 + 19*s13*s23^2 + 14*s23^3) + 2*s12*s13^3*s23^2*
              (297*s13^3 + 253*s13^2*s23 - 165*s13*s23^2 + 104*s23^3) + 
             s12^5*(5400*s13^4 + 657*s13^3*s23 - 837*s13^2*s23^2 - 142*s13*
                s23^3 + 140*s23^4) + s12^4*(6768*s13^5 + 4275*s13^4*s23 - 370*
                s13^3*s23^2 - 3118*s13^2*s23^3 - 312*s13*s23^4 + 190*s23^5) + 
             s12^3*(2736*s13^6 + 2079*s13^5*s23 - 1675*s13^4*s23^2 - 3160*
                s13^3*s23^3 - 424*s13^2*s23^4 + 208*s13*s23^5 + 140*s23^6)) + 
           p3q^2*(s12^2*s13^3*s23*(1161*s13^3 - 837*s13^2*s23 - 3118*s13*
                s23^2 - 424*s23^3) + 10*s13^3*s23^3*(9*s13^3 + 14*s13^2*s23 + 
               19*s13*s23^2 + 14*s23^3) + 18*s12^6*(152*s13^3 + 138*s13^2*
                s23 + 33*s13*s23^2 + 20*s23^3) + 2*s12*s13^3*s23^2*
              (99*s13^3 - 71*s13^2*s23 - 156*s13*s23^2 + 104*s23^3) + 
             s12^5*(6768*s13^4 + 2079*s13^3*s23 + 846*s13^2*s23^2 + 506*s13*
                s23^3 + 410*s23^4) + s12^4*(5400*s13^5 + 4275*s13^4*s23 - 
               1675*s13^3*s23^2 - 3064*s13^2*s23^3 - 330*s13*s23^4 + 190*
                s23^5) + s12^3*(1368*s13^6 + 657*s13^5*s23 - 370*s13^4*
                s23^2 - 3160*s13^3*s23^3 - 316*s13^2*s23^4 + 208*s13*s23^5 + 
               140*s23^6)) + p2q*p3q*(s12^2*s13^3*s23*(3645*s13^3 + 9*s13^2*
                s23 - 6182*s13*s23^2 - 740*s23^3) + 10*s13^3*s23^3*
              (45*s13^3 + 55*s13^2*s23 + 38*s13*s23^2 + 28*s23^3) + 
             9*s12^6*(160*s13^3 + 405*s13^2*s23 + 88*s13*s23^2 + 50*s23^3) + 
             2*s12*s13^3*s23^2*(396*s13^3 + 182*s13^2*s23 - 321*s13*s23^2 + 
               208*s23^3) + s12^5*(4176*s13^4 - 2592*s13^3*s23 + 9*s13^2*
                s23^2 + 364*s13*s23^3 + 550*s23^4) + s12^4*(4176*s13^5 - 2106*
                s13^4*s23 - 4709*s13^3*s23^2 - 6182*s13^2*s23^3 - 642*s13*
                s23^4 + 380*s23^5) + s12^3*(1440*s13^6 - 2592*s13^5*s23 - 
               4709*s13^4*s23^2 - 6320*s13^3*s23^3 - 740*s13^2*s23^4 + 416*
                s13*s23^5 + 280*s23^6))))/(144*p1q*(p2q + p3q)^2*
         (p1q + p2q + p3q)^2*s12^3*s13^3*(s12 + s13)*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (-18*p1q^5*(p2q + p3q)*s23^2*(10*s13^3*s23^3*(s13 + s23) + 
           s12*s13^3*s23^2*(27*s13 + 37*s23) + s12^2*s13^3*s23*
            (46*s13 + 73*s23) + s12^4*(116*s13^3 + 46*s13^2*s23 + 
             27*s13*s23^2 + 10*s23^3) + s12^3*(116*s13^4 + 208*s13^3*s23 + 
             73*s13^2*s23^2 + 37*s13*s23^3 + 10*s23^4)) + 
         9*(p2q + p3q)^3*s23*(p2q^2*p3q*s12*s13^2*(26*s12^5 + 
             s12^4*(194*s13 + 101*s23) - 2*s12*s13^2*(9*s13^2 + 25*s13*s23 + 
               6*s23^2) - 2*s13^3*(3*s13^2 + 16*s13*s23 + 13*s23^2) + 
             s12^3*(304*s13^2 + 350*s13*s23 + 75*s23^2) + 
             s12^2*s13*(124*s13^2 + 231*s13*s23 + 107*s23^2)) + 
           p3q^3*s12^3*(20*s12^5 + 60*s12^4*(s13 + s23) + 
             2*s12^3*(50*s13^2 + 53*s13*s23 + 20*s23^2) + 
             s12^2*s13*(256*s13^2 + 161*s13*s23 + 26*s23^2) + 
             s12*s13^2*(352*s13^2 + 378*s13*s23 + 75*s23^2) + 
             s13^3*(156*s13^2 + 263*s13*s23 + 107*s23^2)) + 
           p2q*p3q^2*s12^2*s13*(-6*s12^5 - 2*s12^4*(9*s13 + 16*s23) + 
             2*s12^3*(62*s13^2 - 25*s13*s23 - 13*s23^2) + 
             s12^2*s13*(304*s13^2 + 231*s13*s23 - 12*s23^2) + 
             s13^3*(26*s13^2 + 101*s13*s23 + 75*s23^2) + 
             s12*s13^2*(194*s13^2 + 350*s13*s23 + 107*s23^2)) + 
           p2q^3*s13^3*(156*s12^5 + s12^4*(352*s13 + 263*s23) + 
             20*s13^3*(s13^2 + 3*s13*s23 + 2*s23^2) + 2*s12*s13^2*
              (30*s13^2 + 53*s13*s23 + 13*s23^2) + s12^2*s13*(100*s13^2 + 161*
                s13*s23 + 75*s23^2) + s12^3*(256*s13^2 + 378*s13*s23 + 107*
                s23^2))) + p1q*(p2q + p3q)^2*
          (p2q*p3q^2*s12*(20*s12^6*(27*s13 - 25*s23)*s23 - 4*s13^4*s23^2*
              (128*s13^2 + 291*s13*s23 + 163*s23^2) + s12^2*s13^2*s23*
              (6660*s13^3 + 3148*s13^2*s23 - 4528*s13*s23^2 - 1361*s23^3) - 
             2*s12^5*(1044*s13^3 - 81*s13^2*s23 + 862*s13*s23^2 + 770*
                s23^3) - s12*s13^3*s23*(540*s13^3 + 2054*s13^2*s23 + 4015*s13*
                s23^2 + 2121*s23^3) + s12^3*s13*(4176*s13^4 + 13554*s13^3*
                s23 + 2342*s13^2*s23^2 - 3873*s13*s23^3 - 1166*s23^4) + 
             2*s12^4*(1044*s13^4 + 2016*s13^3*s23 - 1624*s13^2*s23^2 - 1985*
                s13*s23^3 - 520*s23^4)) - p3q^3*s12^2*(180*s12^6*s23 + 
             2*s12^5*s23*(27*s13 + 430*s23) + s13^3*s23^2*(626*s13^2 + 1913*
                s13*s23 + 1207*s23^2) - 3*s12*s13^2*s23*(1452*s13^3 + 490*
                s13^2*s23 - 1478*s13*s23^2 - 545*s23^3) + 
             4*s12^4*(522*s13^3 + 189*s13^2*s23 + 510*s13*s23^2 + 520*
                s23^3) + s12^2*s13*s23*(-5760*s13^3 + 470*s13^2*s23 + 3391*
                s13*s23^2 + 622*s23^3) + 2*s12^3*(1044*s13^4 + 63*s13^3*s23 + 
               1711*s13^2*s23^2 + 1754*s13*s23^3 + 700*s23^4)) - 
           p2q^3*s13^2*(s12^5*(-4356*s13*s23 + 626*s23^2) + 
             20*s13^3*s23*(9*s13^3 + 43*s13^2*s23 + 104*s13*s23^2 + 70*
                s23^3) + 2*s12*s13^2*s23*(27*s13^3 + 1020*s13^2*s23 + 1754*
                s13*s23^2 + 311*s23^3) + s12^2*s13*s23*(756*s13^3 + 3422*
                s13^2*s23 + 3391*s13*s23^2 + 1635*s23^3) + 
             s12^4*(2088*s13^3 - 5760*s13^2*s23 - 1470*s13*s23^2 + 1913*
                s23^3) + s12^3*(2088*s13^4 + 126*s13^3*s23 + 470*s13^2*
                s23^2 + 4434*s13*s23^3 + 1207*s23^4)) - p2q^2*p3q*s13*
            (4*s12^6*s23*(135*s13 + 128*s23) + 20*s13^4*s23^2*
              (25*s13^2 + 77*s13*s23 + 52*s23^2) + 2*s12*s13^3*s23*
              (-270*s13^3 + 862*s13^2*s23 + 1985*s13*s23^2 + 583*s23^3) + 
             s12^5*(-4176*s13^3 - 6660*s13^2*s23 + 2054*s13*s23^2 + 1164*
                s23^3) + s12^2*s13^2*s23*(-162*s13^3 + 3248*s13^2*s23 + 3873*
                s13*s23^2 + 1361*s23^3) + s12^4*(-2088*s13^4 - 13554*s13^3*
                s23 - 3148*s13^2*s23^2 + 4015*s13*s23^3 + 652*s23^4) + 
             s12^3*s13*(2088*s13^4 - 4032*s13^3*s23 - 2342*s13^2*s23^2 + 4528*
                s13*s23^3 + 2121*s23^4))) + p1q^4*s23*
          (p3q^2*(20*s13^2*s23^3*(9*s13^3 + 16*s13^2*s23 + 23*s13*s23^2 + 16*
                s23^3) + 9*s12^5*(464*s13^3 + 175*s13^2*s23 + 162*s13*s23^2 + 
               80*s23^3) + 2*s12*s13^2*s23^2*(243*s13^3 + 423*s13^2*s23 + 403*
                s13*s23^2 + 403*s23^3) + s12^4*(4824*s13^4 + 2889*s13^3*s23 + 
               1701*s13^2*s23^2 + 2052*s13*s23^3 + 860*s23^4) + 
             s12^2*s23*(747*s13^5 + 1557*s13^4*s23 + 1224*s13^3*s23^2 + 1612*
                s13^2*s23^3 + 806*s13*s23^4 + 320*s23^5) + 
             s12^3*(2088*s13^5 - 27*s13^4*s23 - 3042*s13^3*s23^2 - 738*s13^2*
                s23^3 + 500*s13*s23^4 + 460*s23^5)) + 
           2*p2q*p3q*(10*s13^2*s23^3*(45*s13^3 + 59*s13^2*s23 + 46*s13*
                s23^2 + 32*s23^3) + 9*s12^5*(196*s13^3 + 129*s13^2*s23 + 108*
                s13*s23^2 + 50*s23^3) + s12*s13^2*s23^2*(972*s13^3 + 1449*
                s13^2*s23 + 653*s13*s23^2 + 806*s23^3) + 
             s12^4*(2088*s13^4 - 1305*s13^3*s23 + 1629*s13^2*s23^2 + 1449*s13*
                s23^3 + 590*s23^4) + s12^2*s23*(1161*s13^5 + 1629*s13^4*s23 + 
               243*s13^3*s23^2 + 1612*s13^2*s23^3 + 806*s13*s23^4 + 320*
                s23^5) + s12^3*(1764*s13^5 - 1305*s13^4*s23 - 4410*s13^3*
                s23^2 + 243*s13^2*s23^3 + 653*s13*s23^4 + 460*s23^5)) + 
           p2q^2*(20*s13^2*s23^3*(36*s13^3 + 43*s13^2*s23 + 23*s13*s23^2 + 16*
                s23^3) + 9*s12^5*(232*s13^3 + 83*s13^2*s23 + 54*s13*s23^2 + 
               20*s23^3) + 2*s12*s13^2*s23^2*(729*s13^3 + 1026*s13^2*s23 + 
               250*s13*s23^2 + 403*s23^3) + s12^4*(4824*s13^4 - 27*s13^3*
                s23 + 1557*s13^2*s23^2 + 846*s13*s23^3 + 320*s23^4) + 
             s12^2*s23*(1575*s13^5 + 1701*s13^4*s23 - 738*s13^3*s23^2 + 1612*
                s13^2*s23^3 + 806*s13*s23^4 + 320*s23^5) + 
             s12^3*(4176*s13^5 + 2889*s13^4*s23 - 3042*s13^3*s23^2 + 1224*
                s13^2*s23^3 + 806*s13*s23^4 + 460*s23^5))) + 
         2*p1q^2*(p3q^4*s12*(9*s12^6*s23*(27*s13 + 40*s23) + 
             s13^3*s23^3*(243*s13^2 + 646*s13*s23 + 403*s23^2) + 
             s12*s13^2*s23^3*(887*s13^2 + 2050*s13*s23 + 883*s23^2) - 
             3*s12^5*(696*s13^3 + 87*s13^2*s23 - 138*s13*s23^2 - 280*s23^3) + 
             s12^2*s13*s23*(3375*s13^4 + 2052*s13^3*s23 + 1232*s13^2*s23^2 + 
               1943*s13*s23^3 + 271*s23^4) + 4*s12^4*(-522*s13^4 + 189*s13^3*
                s23 + 198*s13^2*s23^2 + 370*s13*s23^3 + 375*s23^4) + 
             s12^3*s23*(4563*s13^4 + 3510*s13^3*s23 + 3343*s13^2*s23^2 + 2480*
                s13*s23^3 + 1020*s23^4)) + p2q^4*s13*
            (27*s12^5*(125*s13^2*s23 + 9*s23^3) + 60*s13^3*s23^2*
              (6*s13^3 + 14*s13^2*s23 + 25*s13*s23^2 + 17*s23^3) + 
             s12*s13^2*s23*(243*s13^4 + 414*s13^3*s23 + 1480*s13^2*s23^2 + 
               2480*s13*s23^3 + 271*s23^4) + s12^4*(-2088*s13^4 + 4563*s13^3*
                s23 + 2052*s13^2*s23^2 + 887*s13*s23^3 + 646*s23^4) + 
             s12^2*s13*s23*(-261*s13^4 + 792*s13^3*s23 + 3343*s13^2*s23^2 + 
               1943*s13*s23^3 + 883*s23^4) + s12^3*(-2088*s13^5 + 756*s13^4*
                s23 + 3510*s13^3*s23^2 + 1232*s13^2*s23^3 + 2050*s13*s23^4 + 
               403*s23^5)) + p2q^3*p3q*(2*s12^6*s23*(-243*s13^2 - 135*s13*
                s23 + 115*s23^2) + 10*s13^4*s23^2*(63*s13^3 + 182*s13^2*s23 + 
               373*s13*s23^2 + 254*s23^3) + s12^4*s23*(18054*s13^4 + 7317*
                s13^3*s23 + 4605*s13^2*s23^2 + 4223*s13*s23^3 + 500*s23^4) + 
             s12^5*(4176*s13^4 + 10800*s13^3*s23 - 162*s13^2*s23^2 + 1731*s13*
                s23^3 + 730*s23^4) + s12*s13^3*s23*(486*s13^4 + 351*s13^3*
                s23 + 4088*s13^2*s23^2 + 7891*s13*s23^3 + 1688*s23^4) + 
             s12^2*s13^2*s23*(-1008*s13^4 + 819*s13^3*s23 + 9031*s13^2*
                s23^2 + 6698*s13*s23^3 + 2240*s23^4) + s12^3*s13*
              (-4176*s13^5 + 5562*s13^4*s23 + 9747*s13^3*s23^2 + 4935*s13^2*
                s23^3 + 6912*s13*s23^4 + 1952*s23^5)) + 
           p2q*p3q^3*(18*s12^7*s23*(27*s13 + 35*s23) + 10*s13^4*s23^3*
              (23*s13^2 + 73*s13*s23 + 50*s23^2) + s12^6*(-4176*s13^3 - 1008*
                s13^2*s23 + 351*s13*s23^2 + 1820*s23^3) + s12*s13^3*s23^2*
              (-270*s13^3 + 1731*s13^2*s23 + 4223*s13*s23^2 + 1952*s23^3) + 
             s12^5*s23*(5562*s13^3 + 819*s13^2*s23 + 4088*s13*s23^2 + 3730*
                s23^3) + s12^3*s13*s23*(10800*s13^4 + 7317*s13^3*s23 + 4935*
                s13^2*s23^2 + 6698*s13*s23^3 + 1688*s23^4) + 
             s12^2*s13^2*s23*(-486*s13^4 - 162*s13^3*s23 + 4605*s13^2*s23^2 + 
               6912*s13*s23^3 + 2240*s23^4) + s12^4*(4176*s13^5 + 18054*s13^4*
                s23 + 9747*s13^3*s23^2 + 9031*s13^2*s23^3 + 7891*s13*s23^4 + 
               2540*s23^5)) + p2q^2*p3q^2*(27*s12^7*s23*(9*s13 + 10*s23) - 
             s12^6*(2088*s13^3 + 1233*s13^2*s23 + 333*s13*s23^2 - 1210*
                s23^3) + 10*s13^4*s23^2*(27*s13^3 + 121*s13^2*s23 + 296*s13*
                s23^2 + 202*s23^3) + s12^2*s13^2*s23*(-1233*s13^4 - 135*s13^3*
                s23 + 9406*s13^2*s23^2 + 9617*s13*s23^3 + 2714*s23^4) + 
             s12^5*(6264*s13^4 + 12231*s13^3*s23 - 135*s13^2*s23^2 + 4096*s13*
                s23^3 + 2960*s23^4) + s12*s13^3*s23*(243*s13^4 - 333*s13^3*
                s23 + 4096*s13^2*s23^2 + 8988*s13*s23^3 + 2966*s23^4) + 
             2*s12^4*(3132*s13^5 + 13491*s13^4*s23 + 5751*s13^3*s23^2 + 4703*
                s13^2*s23^3 + 4494*s13*s23^4 + 1010*s23^5) + 
             s12^3*s13*(-2088*s13^5 + 12231*s13^4*s23 + 11502*s13^3*s23^2 + 
               7406*s13^2*s23^3 + 9617*s13*s23^4 + 2966*s23^5))) - 
         p1q^3*(p3q^3*(20*s13^3*s23^4*(7*s13^2 + 23*s13*s23 + 16*s23^2) + 
             2*s12*s13^2*s23^4*(626*s13^2 + 1279*s13*s23 + 563*s23^2) + 
             2*s12^2*s13*s23^3*(441*s13^3 + 1612*s13^2*s23 + 1375*s13*s23^2 + 
               77*s23^3) + 9*s12^6*(232*s13^3 + 83*s13^2*s23 + 162*s13*
                s23^2 + 120*s23^3) + 3*s12^5*(696*s13^4 - 1731*s13^3*s23 - 45*
                s13^2*s23^2 + 720*s13*s23^3 + 560*s23^4) + 
             s12^4*s23*(-8631*s13^4 - 5742*s13^3*s23 + 90*s13^2*s23^2 + 1960*
                s13*s23^3 + 1920*s23^4) + s12^3*s23*(-4923*s13^5 - 297*s13^4*
                s23 + 5832*s13^3*s23^2 + 5776*s13^2*s23^3 + 3212*s13*s23^4 + 
               1320*s23^5)) + p2q*p3q^2*(18*s12^6*(116*s13^3 + 83*s13^2*s23 + 
               135*s13*s23^2 + 90*s23^3) + 20*s13^3*s23^3*(27*s13^3 + 71*
                s13^2*s23 + 142*s13*s23^2 + 98*s23^3) + 6*s12*s13^2*s23^2*
              (162*s13^4 + 201*s13^3*s23 + 756*s13^2*s23^2 + 1388*s13*s23^3 + 
               401*s23^4) + s12^5*(-2088*s13^4 - 14013*s13^3*s23 - 72*s13^2*
                s23^2 + 3366*s13*s23^3 + 2960*s23^4) + s12^2*s13*s23*
              (747*s13^5 + 63*s13^4*s23 + 1566*s13^3*s23^2 + 11180*s13^2*
                s23^3 + 8250*s13*s23^4 + 1434*s23^5) + s12^3*s23*
              (-13743*s13^5 - 2808*s13^4*s23 + 14868*s13^3*s23^2 + 13732*
                s13^2*s23^3 + 8982*s13*s23^4 + 2960*s23^5) + 
             s12^4*(-4176*s13^5 - 23301*s13^4*s23 - 8253*s13^3*s23^2 + 774*
                s13^2*s23^3 + 5244*s13*s23^4 + 4300*s23^5)) + 
           p2q^3*(120*s13^3*s23^3*(9*s13^3 + 14*s13^2*s23 + 16*s13*s23^2 + 11*
                s23^3) + 2*s12*s13^2*s23^2*(729*s13^4 + 1080*s13^3*s23 + 980*
                s13^2*s23^2 + 1606*s13*s23^3 + 77*s23^4) + 
             s12^5*(-4923*s13^3*s23 + 140*s23^4) + s12^4*(2088*s13^5 - 8631*
                s13^4*s23 - 297*s13^3*s23^2 + 882*s13^2*s23^3 + 1252*s13*
                s23^4 + 460*s23^5) + s12^2*s13*s23*(747*s13^5 - 135*s13^4*
                s23 + 90*s13^3*s23^2 + 5776*s13^2*s23^3 + 2750*s13*s23^4 + 
               1126*s23^5) + s12^3*(2088*s13^6 - 5193*s13^5*s23 - 5742*s13^4*
                s23^2 + 5832*s13^3*s23^3 + 3224*s13^2*s23^4 + 2558*s13*
                s23^5 + 320*s23^6)) + p2q^2*p3q*
            (9*s12^6*s23*(83*s13^2 + 108*s13*s23 + 60*s23^2) + 
             20*s13^3*s23^3*(81*s13^3 + 148*s13^2*s23 + 215*s13*s23^2 + 148*
                s23^3) + 6*s12*s13^2*s23^2*(405*s13^4 + 561*s13^3*s23 + 874*
                s13^2*s23^2 + 1497*s13*s23^3 + 239*s23^4) + 
             s12^5*(-4176*s13^4 - 13743*s13^3*s23 + 63*s13^2*s23^2 + 1206*s13*
                s23^3 + 1420*s23^4) + 2*s12^2*s13*s23*(747*s13^5 - 36*s13^4*
                s23 + 387*s13^3*s23^2 + 6866*s13^2*s23^3 + 4125*s13*s23^4 + 
               1203*s23^5) + s12^4*(-2088*s13^5 - 23301*s13^4*s23 - 2808*
                s13^3*s23^2 + 1566*s13^2*s23^3 + 4536*s13*s23^4 + 2840*
                s23^5) + s12^3*(2088*s13^6 - 14013*s13^5*s23 - 8253*s13^4*
                s23^2 + 14868*s13^3*s23^3 + 11180*s13^2*s23^4 + 8328*s13*
                s23^5 + 1960*s23^6))))/(144*ep*p1q*(p2q + p3q)^2*
         (p1q + p2q + p3q)^2*s12^3*s13^3*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       ((-9*p1q^5*s23^3*(5*s12^5*s23 + 5*s13^4*s23*(s13 + s23) + 
            5*s12*s13^3*s23*(5*s13 + 4*s23) + s12^4*(36*s13^2 + 25*s13*s23 + 
              5*s23^2) + 2*s12^3*s13*(36*s13^2 + 79*s13*s23 + 10*s23^2) + 
            2*s12^2*s13^2*(18*s13^2 + 79*s13*s23 + 51*s23^2)) + 
          9*(p2q + p3q)^2*(s12 + s13)*(p2q^3*s13^2*(16*s12^6 + 
              s12^5*(53*s13 + 32*s23) + 5*s13^4*(s13^2 + 3*s13*s23 + 
                2*s23^2) + 2*s12^3*s13*(45*s13^2 + 66*s13*s23 + 4*s23^2) + 
              s12*s13^3*(9*s13^2 + 28*s13*s23 + 14*s23^2) + s12^4*(93*s13^2 + 
                61*s13*s23 + 16*s23^2) + 2*s12^2*s13^2*(19*s13^2 + 
                58*s13*s23 + 34*s23^2)) + p3q^3*s12^2*(5*s12^6 + 
              16*s13^4*(s13 + s23)^2 + 3*s12^5*(3*s13 + 5*s23) + 
              2*s12^4*(19*s13^2 + 14*s13*s23 + 5*s23^2) + 2*s12^3*s13*(
                45*s13^2 + 58*s13*s23 + 7*s23^2) + s12*s13^3*(53*s13^2 + 
                61*s13*s23 + 8*s23^2) + s12^2*s13^2*(93*s13^2 + 132*s13*s23 + 
                68*s23^2)) - p2q^2*p3q*s12*s13*(16*s12^6 + s12^5*(237*s13 + 
                32*s23) + s13^4*(25*s13^2 + 34*s13*s23 + 9*s23^2) + 
              s12^4*(885*s13^2 + 450*s13*s23 + 16*s23^2) + s12*s13^3*(
                237*s13^2 + 366*s13*s23 + 145*s23^2) + s12^3*s13*(
                1310*s13^2 + 1426*s13*s23 + 213*s23^2) + s12^2*s13^2*(
                858*s13^2 + 1340*s13*s23 + 549*s23^2)) - p2q*p3q^2*s12*s13*
             (25*s12^6 + 16*s13^4*(s13 + s23)^2 + s12^5*(237*s13 + 34*s23) + 
              s12^4*(858*s13^2 + 366*s13*s23 + 9*s23^2) + 5*s12^3*s13*(
                262*s13^2 + 268*s13*s23 + 29*s23^2) + 3*s12*s13^3*(79*s13^2 + 
                150*s13*s23 + 71*s23^2) + s12^2*s13^2*(885*s13^2 + 
                1426*s13*s23 + 549*s23^2))) - p1q*(p2q + p3q)*
           (p2q*p3q^2*(-40*s12^9 - 20*s13^6*s23*(s13 + s23)^2 + 
              s12^8*(-461*s13 + 135*s23) + s12^7*(3212*s13^2 + 451*s13*s23 + 
                445*s23^2) + s12^3*s13^3*(22190*s13^3 + 24171*s13^2*s23 - 
                9840*s13*s23^2 - 2273*s23^3) + s12^2*s13^4*(5146*s13^3 + 
                5882*s13^2*s23 - 3509*s13*s23^2 - 1053*s23^3) + 
              s12*s13^5*(305*s13^3 - 16*s13^2*s23 - 609*s13*s23^2 - 
                48*s23^3) + 2*s12^6*(10292*s13^3 + 4072*s13^2*s23 + 
                923*s13*s23^2 + 135*s23^3) + s12^5*s13*(42701*s13^3 + 
                27914*s13^2*s23 + 2728*s13*s23^2 + 1119*s23^3) + 
              s12^4*s13^2*(43099*s13^3 + 38379*s13^2*s23 - 5573*s13*s23^2 + 
                1545*s23^3)) + p2q^2*p3q*(5*s12^8*(61*s13 - 4*s23) + 
              2*s12^7*(2573*s13^2 - 8*s13*s23 - 20*s23^2) + s12^3*s13^3*(
                20584*s13^3 + 27914*s13^2*s23 - 5573*s13*s23^2 - 
                2273*s23^3) + s12^4*s13^2*(42701*s13^3 + 38379*s13^2*s23 - 
                9840*s13*s23^2 - 1053*s23^3) + s12^5*s13*(43099*s13^3 + 
                24171*s13^2*s23 - 3509*s13*s23^2 - 48*s23^3) + 
              s12^6*(22190*s13^3 + 5882*s13^2*s23 - 609*s13*s23^2 - 
                20*s23^3) + 5*s13^6*(-8*s13^3 + 27*s13^2*s23 + 89*s13*s23^2 + 
                54*s23^3) + s12*s13^5*(-461*s13^3 + 451*s13^2*s23 + 
                1846*s13*s23^2 + 1119*s23^3) + s12^2*s13^4*(3212*s13^3 + 
                8144*s13^2*s23 + 2728*s13*s23^2 + 1545*s23^3)) + 
            p2q^3*s13*(s12^7*(59*s13 + 204*s23) + s12^6*(926*s13^2 + 
                2419*s13*s23 + 248*s23^2) + 5*s13^5*(s13^3 + 49*s13^2*s23 + 
                124*s13*s23^2 + 76*s23^3) + s12^5*(2454*s13^3 + 9352*s13^2*
                 s23 + 1845*s13*s23^2 + 124*s23^3) + s12^4*s13*(1741*s13^3 + 
                16247*s13^2*s23 + 5565*s13*s23^2 + 815*s23^3) + 
              s12*s13^4*(-640*s13^3 + 1076*s13^2*s23 + 3216*s13*s23^2 + 
                1435*s23^3) + s12^3*s13^2*(-1121*s13^3 + 13680*s13^2*s23 + 
                10183*s13*s23^2 + 2419*s23^3) + s12^2*s13^3*(-1920*s13^3 + 
                5401*s13^2*s23 + 8811*s13*s23^2 + 3431*s23^3)) + 
            p3q^3*s12*(5*s12^8 + s12^7*(-640*s13 + 245*s23) + 
              4*s13^5*s23*(51*s13^2 + 62*s13*s23 + 31*s23^2) + 
              s12^6*(-1920*s13^2 + 1076*s13*s23 + 620*s23^2) + 
              s12^5*(-1121*s13^3 + 5401*s13^2*s23 + 3216*s13*s23^2 + 
                380*s23^3) + s12*s13^4*(59*s13^3 + 2419*s13^2*s23 + 
                1845*s13*s23^2 + 815*s23^3) + s12^4*s13*(1741*s13^3 + 
                13680*s13^2*s23 + 8811*s13*s23^2 + 1435*s23^3) + 
              s12^2*s13^3*(926*s13^3 + 9352*s13^2*s23 + 5565*s13*s23^2 + 
                2419*s23^3) + s12^3*s13^2*(2454*s13^3 + 16247*s13^2*s23 + 
                10183*s13*s23^2 + 3431*s23^3))) + p1q^4*s23^2*
           (p3q*(s12^6*(31*s13 + 120*s23) + s12^5*(911*s13^2 - 247*s13*s23 + 
                185*s23^2) + 5*s13^3*s23*(-3*s13^3 + 10*s13^2*s23 + 
                31*s13*s23^2 + 18*s23^3) + s12^4*(1534*s13^3 - 529*s13^2*
                 s23 + 608*s13*s23^2 + 155*s23^3) + s12^3*(1066*s13^4 - 
                2646*s13^3*s23 + 2532*s13^2*s23^2 + 1685*s13*s23^3 + 
                90*s23^4) + s12*s13^2*(-41*s13^4 - 571*s13^3*s23 + 
                491*s13^2*s23^2 + 1685*s13*s23^3 + 734*s23^4) + 
              s12^2*s13*(371*s13^4 - 1744*s13^3*s23 + 1902*s13^2*s23^2 + 
                3060*s13*s23^3 + 734*s23^4)) + 
            p2q*(-(s12^6*(41*s13 + 15*s23)) + s12^5*(371*s13^2 - 
                571*s13*s23 + 50*s23^2) + 5*s13^3*s23*(24*s13^3 + 
                37*s13^2*s23 + 31*s13*s23^2 + 18*s23^3) + s12^4*(1066*s13^3 - 
                1744*s13^2*s23 + 491*s13*s23^2 + 155*s23^3) + 
              s12^3*(1534*s13^4 - 2646*s13^3*s23 + 1902*s13^2*s23^2 + 
                1685*s13*s23^3 + 90*s23^4) + s12*s13^2*(31*s13^4 - 
                247*s13^3*s23 + 608*s13^2*s23^2 + 1685*s13*s23^3 + 
                734*s23^4) + s12^2*s13*(911*s13^4 - 529*s13^3*s23 + 
                2532*s13^2*s23^2 + 3060*s13*s23^3 + 734*s23^4))) - 
          p1q^3*s23*(p3q^2*(s12^7*(-59*s13 + 110*s23) - 6*s12^6*(98*s13^2 + 
                352*s13*s23 - 65*s23^2) + 5*s13^4*s23*(-12*s13^3 - 
                3*s13^2*s23 + 23*s13*s23^2 + 14*s23^3) + s12^5*(-2127*s13^3 - 
                10258*s13^2*s23 + 1237*s13*s23^2 + 660*s23^3) + 
              s12^4*(-2512*s13^4 - 20148*s13^3*s23 + 5742*s13^2*s23^2 + 
                5711*s13*s23^3 + 380*s23^4) + s12*s13^3*(-41*s13^4 - 
                896*s13^3*s23 + 628*s13^2*s23^2 + 2413*s13*s23^3 + 
                1205*s23^4) + s12^3*s13*(-741*s13^4 - 17676*s13^3*s23 + 
                9181*s13^2*s23^2 + 13223*s13*s23^3 + 2451*s23^4) + 
              s12^2*s13^2*(132*s13^4 - 6400*s13^3*s23 + 3633*s13^2*s23^2 + 
                9822*s13*s23^3 + 3854*s23^4)) + 
            p2q^2*(-(s12^7*(41*s13 + 60*s23)) + s12^6*(132*s13^2 - 
                896*s13*s23 - 15*s23^2) + 10*s13^4*s23*(11*s13^3 + 
                39*s13^2*s23 + 66*s13*s23^2 + 38*s23^3) + s12^5*(-741*s13^3 - 
                6400*s13^2*s23 + 628*s13*s23^2 + 115*s23^3) + 
              s12^4*(-2512*s13^4 - 17676*s13^3*s23 + 3633*s13^2*s23^2 + 
                2413*s13*s23^3 + 70*s23^4) + s12^3*s13*(-2127*s13^4 - 
                20148*s13^3*s23 + 9181*s13^2*s23^2 + 9822*s13*s23^3 + 
                1205*s23^4) + s12*s13^3*(-59*s13^4 - 2112*s13^3*s23 + 
                1237*s13^2*s23^2 + 5711*s13*s23^3 + 2451*s23^4) + 
              s12^2*s13^2*(-588*s13^4 - 10258*s13^3*s23 + 5742*s13^2*s23^2 + 
                13223*s13*s23^3 + 3854*s23^4)) + p2q*p3q*
             (-5*s12^7*(92*s13 + 17*s23) + s12^6*(-3372*s13^2 - 
                3683*s13*s23 + 240*s23^2) + 5*s13^4*s23*(-17*s13^3 + 
                48*s13^2*s23 + 155*s13*s23^2 + 90*s23^3) + 
              s12^5*(-11292*s13^3 - 21815*s13^2*s23 + 1685*s13*s23^2 + 
                775*s23^3) + s12^4*(-16760*s13^4 - 50865*s13^3*s23 + 
                6954*s13^2*s23^2 + 8124*s13*s23^3 + 450*s23^4) + 
              s12*s13^3*(-460*s13^4 - 3683*s13^3*s23 + 1685*s13^2*s23^2 + 
                8124*s13*s23^3 + 3656*s23^4) + s12^3*s13*(-11292*s13^4 - 
                50865*s13^3*s23 + 13610*s13^2*s23^2 + 23045*s13*s23^3 + 
                3656*s23^4) + s12^2*s13^2*(-3372*s13^4 - 21815*s13^3*s23 + 
                6954*s13^2*s23^2 + 23045*s13*s23^3 + 7708*s23^4))) + 
          p1q^2*(p3q^3*(-20*s13^5*s23^2*(s13 + s23)^2 + s12^8*(-90*s13 + 
                40*s23) - 3*s12^7*(459*s13^2 + 760*s13*s23 - 150*s23^2) + 
              s12*s13^4*s23*(5*s13^3 + 541*s13^2*s23 + 781*s13*s23^2 + 
                485*s23^3) + s12^6*(-4887*s13^3 - 10753*s13^2*s23 + 
                1759*s13*s23^2 + 990*s23^3) + s12^5*(-7254*s13^4 - 
                20865*s13^3*s23 + 8660*s13^2*s23^2 + 6855*s13*s23^3 + 
                580*s23^4) + s12^4*s13*(-4860*s13^4 - 21148*s13^3*s23 + 
                18745*s13^2*s23^2 + 17556*s13*s23^3 + 2936*s23^4) + 
              s12^2*s13^3*(45*s13^4 - 2347*s13^3*s23 + 4748*s13^2*s23^2 + 
                6878*s13*s23^3 + 3314*s23^4) + s12^3*s13^2*(-1161*s13^4 - 
                11068*s13^3*s23 + 15581*s13^2*s23^2 + 17100*s13*s23^3 + 
                5813*s23^4)) + p2q^3*(5*s12^7*(9*s13^2 + s13*s23 - 4*s23^2) - 
              s12^6*(1161*s13^3 + 2347*s13^2*s23 - 541*s13*s23^2 + 
                40*s23^3) + 10*s13^5*s23*(4*s13^3 + 45*s13^2*s23 + 
                99*s13*s23^2 + 58*s23^3) + s12^5*(-4860*s13^4 - 11068*s13^3*
                 s23 + 4748*s13^2*s23^2 + 781*s13*s23^3 - 20*s23^4) + 
              s12^4*s13*(-7254*s13^4 - 21148*s13^3*s23 + 15581*s13^2*s23^2 + 
                6878*s13*s23^3 + 485*s23^4) + s12*s13^4*(-90*s13^4 - 
                2280*s13^3*s23 + 1759*s13^2*s23^2 + 6855*s13*s23^3 + 
                2936*s23^4) + s12^3*s13^2*(-4887*s13^4 - 20865*s13^3*s23 + 
                18745*s13^2*s23^2 + 17100*s13*s23^3 + 3314*s23^4) + 
              s12^2*s13^3*(-1377*s13^4 - 10753*s13^3*s23 + 8660*s13^2*s23^2 + 
                17556*s13*s23^3 + 5813*s23^4)) + p2q^2*p3q*
             (-(s12^8*(369*s13 + 100*s23)) + s12^7*(-3996*s13^2 - 
                1968*s13*s23 + 55*s23^2) + 5*s13^5*s23*(-21*s13^3 + 
                96*s13^2*s23 + 283*s13*s23^2 + 166*s23^3) + 
              s12^6*(-16848*s13^3 - 14066*s13^2*s23 + 1471*s13*s23^2 + 
                385*s23^3) + s12^5*(-34299*s13^4 - 42255*s13^3*s23 + 
                15745*s13^2*s23^2 + 4999*s13*s23^3 + 230*s23^4) + 
              s12^4*s13*(-36693*s13^4 - 63515*s13^3*s23 + 47219*s13^2*s23^2 + 
                24309*s13*s23^3 + 2674*s23^4) + s12*s13^4*(-459*s13^4 - 
                4253*s13^3*s23 + 2734*s13^2*s23^2 + 11073*s13*s23^3 + 
                5125*s23^4) + s12^3*s13^2*(-20574*s13^4 - 51332*s13^3*s23 + 
                50698*s13^2*s23^2 + 43080*s13*s23^3 + 10295*s23^4) + 
              s12^2*s13^3*(-5418*s13^4 - 22022*s13^3*s23 + 20062*s13^2*
                 s23^2 + 34987*s13*s23^3 + 12794*s23^4)) + 
            p2q*p3q^2*(-3*s12^8*(153*s13 + 35*s23) + s12^7*(-5418*s13^2 - 
                4253*s13*s23 + 480*s23^2) + 5*s13^5*s23*(-20*s13^3 + 
                11*s13^2*s23 + 77*s13*s23^2 + 46*s23^3) + 
              s12^6*(-20574*s13^3 - 22022*s13^2*s23 + 2734*s13*s23^2 + 
                1415*s23^3) + s12^5*(-36693*s13^4 - 51332*s13^3*s23 + 
                20062*s13^2*s23^2 + 11073*s13*s23^3 + 830*s23^4) + 
              s12*s13^4*(-369*s13^4 - 1968*s13^3*s23 + 1471*s13^2*s23^2 + 
                4999*s13*s23^3 + 2674*s23^4) + s12^4*s13*(-34299*s13^4 - 
                63515*s13^3*s23 + 50698*s13^2*s23^2 + 34987*s13*s23^3 + 
                5125*s23^4) + s12^2*s13^3*(-3996*s13^4 - 14066*s13^3*s23 + 
                15745*s13^2*s23^2 + 24309*s13*s23^3 + 10295*s23^4) + 
              s12^3*s13^2*(-16848*s13^4 - 42255*s13^3*s23 + 47219*s13^2*
                 s23^2 + 43080*s13*s23^3 + 12794*s23^4))))*den[-1 + ep])/
        (72*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12^2*s13^2*(s12 + s13)^3*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (9*(p1q^4*(p2q + p3q)*s23*(s13^4*s23*(s13 + s23) + 
            s12^5*(8*s13 + s23) + s12^4*(32*s13^2 + 13*s13*s23 + s23^2) + 
            2*s12^3*s13*(24*s13^2 + 17*s13*s23 + 2*s23^2) + 
            2*s12^2*s13*(16*s13^3 + 17*s13^2*s23 + 3*s13*s23^2 - 16*s23^3) + 
            s12*s13*(8*s13^4 + 13*s13^3*s23 + 4*s13^2*s23^2 - 32*s13*s23^3 - 
              32*s23^4)) + (p2q + p3q)^2*s23*
           (p2q^3*s13*(7*s12^5 + s12^4*(25*s13 + 13*s23) + s13^3*(s13^2 + 
                3*s13*s23 + 2*s23^2) + s12^3*(26*s13^2 + 46*s13*s23 + 
                6*s23^2) + 2*s12^2*s13*(3*s13^2 + 8*s13*s23 + 11*s23^2) - 
              s12*s13^2*(s13^2 + 14*s13*s23 + 14*s23^2)) + 
            p3q^3*s12*(s12^5 - s12^4*(s13 - 3*s23) + 2*s12^2*s13*(13*s13^2 + 
                8*s13*s23 - 7*s23^2) + 2*s12^3*(3*s13^2 - 7*s13*s23 + 
                s23^2) + s13^3*(7*s13^2 + 13*s13*s23 + 6*s23^2) + 
              s12*s13^2*(25*s13^2 + 46*s13*s23 + 22*s23^2)) + 
            p2q*p3q^2*(6*s12^6 + s12^5*(65*s13 + 18*s23) + s13^4*(s13^2 + 
                3*s13*s23 + 2*s23^2) + 3*s12^4*(79*s13^2 + 35*s13*s23 + 
                4*s23^2) + 2*s12^3*s13*(179*s13^2 + 183*s13*s23 + 17*s23^2) + 
              s12*s13^3*(57*s13^2 + 96*s13*s23 + 38*s23^2) + 2*s12^2*s13^2*(
                118*s13^2 + 186*s13*s23 + 77*s23^2)) + p2q^2*p3q*
             (s12^6 + 3*s12^5*(19*s13 + s23) + 2*s12^4*(118*s13^2 + 
                48*s13*s23 + s23^2) + 6*s13^4*(s13^2 + 3*s13*s23 + 2*s23^2) + 
              2*s12^3*s13*(179*s13^2 + 186*s13*s23 + 19*s23^2) + 
              s12*s13^3*(65*s13^2 + 105*s13*s23 + 34*s23^2) + 
              s12^2*s13^2*(237*s13^2 + 366*s13*s23 + 154*s23^2))) + 
          p1q*(p3q^4*(s12^6*(-8*s13 + 4*s23) - s13^3*s23^2*(s13^2 + 
                3*s13*s23 + 2*s23^2) + s12^5*(-24*s13^2 + 36*s13*s23 + 
                13*s23^2) + s12*s13^2*s23*(16*s13^3 + 27*s13^2*s23 + 
                34*s13*s23^2 + 6*s23^3) + s12^4*(-24*s13^3 + 92*s13^2*s23 + 
                81*s13*s23^2 + 19*s23^3) + 2*s12^2*s13*s23*(32*s13^3 + 
                68*s13^2*s23 + 48*s13*s23^2 + 25*s23^3) + 2*s12^3*(-4*s13^4 + 
                54*s13^3*s23 + 88*s13^2*s23^2 + 55*s13*s23^3 + 5*s23^4)) + 
            4*p2q^2*p3q^2*(-2*s12^6*s13 + 2*s13^3*s23^2*(3*s13^2 + 
                2*s13*s23 - s23^2) + s12^5*(2*s13^2 + 57*s13*s23 + 6*s23^2) + 
              2*s12^4*(8*s13^3 + 108*s13^2*s23 + 41*s13*s23^2 + 2*s23^3) + 
              2*s12^3*(8*s13^4 + 159*s13^3*s23 + 126*s13^2*s23^2 + 
                30*s13*s23^3 - s23^4) + 2*s12^2*s13*(s13^4 + 108*s13^3*s23 + 
                126*s13^2*s23^2 + 32*s13*s23^3 + 9*s23^4) + s12*s13^2*(
                -2*s13^4 + 57*s13^3*s23 + 82*s13^2*s23^2 + 60*s13*s23^3 + 
                18*s23^4)) + 2*p2q*p3q^3*(s12^6*(-8*s13 + 2*s23) + 
              3*s13^3*s23^2*(s13^2 - s13*s23 - 2*s23^2) + s12^5*(-16*s13^2 + 
                76*s13*s23 + 15*s23^2) + s12^4*s23*(264*s13^2 + 133*s13*s23 + 
                19*s23^2) + s12*s13^2*s23*(64*s13^3 + 85*s13^2*s23 + 
                58*s13*s23^2 + 10*s23^3) + 2*s12^3*(8*s13^4 + 186*s13^3*s23 + 
                174*s13^2*s23^2 + 67*s13*s23^3 + 3*s23^4) + 2*s12^2*s13*(
                4*s13^4 + 123*s13^3*s23 + 156*s13^2*s23^2 + 56*s13*s23^3 + 
                27*s23^4)) + p2q^4*(s12^5*(16*s13 - s23)*s23 + 
              s12^4*(-8*s13^3 + 64*s13^2*s23 + 27*s13*s23^2 - 3*s23^3) + 
              s13^3*s23*(4*s13^3 + 13*s13^2*s23 + 19*s13*s23^2 + 10*s23^3) - 
              2*s12^3*(12*s13^4 - 54*s13^3*s23 - 68*s13^2*s23^2 - 
                17*s13*s23^3 + s23^4) + 2*s12^2*s13*(-12*s13^4 + 
                46*s13^3*s23 + 88*s13^2*s23^2 + 48*s13*s23^3 + 3*s23^4) + 
              s12*s13^2*(-8*s13^4 + 36*s13^3*s23 + 81*s13^2*s23^2 + 
                110*s13*s23^3 + 50*s23^4)) + 2*p2q^3*p3q*
             (s12^5*(8*s13^2 + 64*s13*s23 + 3*s23^2) + 2*s12^3*s23*(
                186*s13^3 + 156*s13^2*s23 + 29*s13*s23^2 - 3*s23^3) + 
              s12^4*(16*s13^3 + 246*s13^2*s23 + 85*s13*s23^2 - 3*s23^3) + 
              s13^3*s23*(2*s13^3 + 15*s13^2*s23 + 19*s13*s23^2 + 6*s23^3) + 
              2*s12^2*s13*(-8*s13^4 + 132*s13^3*s23 + 174*s13^2*s23^2 + 
                56*s13*s23^3 + 5*s23^4) + s12*s13^2*(-8*s13^4 + 
                76*s13^3*s23 + 133*s13^2*s23^2 + 134*s13*s23^3 + 
                54*s23^4))) + 2*p1q^2*(-(p3q^3*(s12^6*(8*s13 - 2*s23) + s12^5*
                (24*s13^2 - 12*s13*s23 - s23^2) + s13^2*s23^3*(7*s13^2 + 
                 9*s13*s23 + 2*s23^2) + 2*s12^4*(12*s13^3 - 18*s13^2*s23 + 
                 13*s13*s23^2 + 6*s23^3) + s12^2*s23*(-42*s13^4 + 
                 6*s13^3*s23 + 117*s13^2*s23^2 + 87*s13*s23^3 + 14*s23^4) + 
               s12^3*(8*s13^4 - 56*s13^3*s23 + 28*s13^2*s23^2 + 
                 77*s13*s23^3 + 25*s23^4) + s12*s13*s23*(-12*s13^4 + 
                 5*s13^3*s23 + 27*s13^2*s23^2 + 55*s13*s23^3 + 32*s23^4))) + 
            p2q*p3q^2*(s12^6*(-8*s13 + 2*s23) + s12^5*(-8*s13^2 + 
                72*s13*s23 + 2*s23^2) + s12^4*(24*s13^3 + 276*s13^2*s23 - 
                s13*s23^2 - 29*s23^3) + s13^2*s23^2*(s13^3 - 24*s13^2*s23 - 
                43*s13*s23^2 - 18*s23^3) + s12*s13*s23*(72*s13^4 + 
                20*s13^3*s23 - 107*s13^2*s23^2 - 197*s13*s23^3 - 96*s23^4) + 
              s12^3*(40*s13^4 + 416*s13^3*s23 + 106*s13^2*s23^2 - 
                157*s13*s23^3 - 59*s23^4) + s12^2*(16*s13^5 + 282*s13^4*s23 + 
                128*s13^3*s23^2 - 307*s13^2*s23^3 - 229*s13*s23^4 - 
                30*s23^5)) + p2q^3*(12*s12^5*s13*s23 - s12^4*(8*s13^3 - 
                42*s13^2*s23 + 5*s13*s23^2 + 7*s23^3) + s13^2*s23*(2*s13^4 + 
                s13^3*s23 - 12*s13^2*s23^2 - 25*s13*s23^3 - 14*s23^4) - 
              s12^3*(24*s13^4 - 56*s13^3*s23 + 6*s13^2*s23^2 + 27*s13*s23^3 + 
                9*s23^4) - s12^2*(24*s13^5 - 36*s13^4*s23 + 28*s13^3*s23^2 + 
                117*s13^2*s23^3 + 55*s13*s23^4 + 2*s23^5) - 
              s12*s13*(8*s13^5 - 12*s13^4*s23 + 26*s13^3*s23^2 + 
                77*s13^2*s23^3 + 87*s13*s23^4 + 32*s23^5)) + 
            p2q^2*p3q*(s12^5*(16*s13^2 + 72*s13*s23 + s23^2) + 
              s12^4*(40*s13^3 + 282*s13^2*s23 + 20*s13*s23^2 - 24*s23^3) + 
              s12^3*(24*s13^4 + 416*s13^3*s23 + 128*s13^2*s23^2 - 
                107*s13*s23^3 - 43*s23^4) + s13^2*s23*(2*s13^4 + 
                2*s13^3*s23 - 29*s13^2*s23^2 - 59*s13*s23^3 - 30*s23^4) - 
              s12^2*(8*s13^5 - 276*s13^4*s23 - 106*s13^3*s23^2 + 
                307*s13^2*s23^3 + 197*s13*s23^4 + 18*s23^5) - 
              s12*s13*(8*s13^5 - 72*s13^4*s23 + s13^3*s23^2 + 157*s13^2*
                 s23^3 + 229*s13*s23^4 + 96*s23^5))) + 
          p1q^3*(p3q^2*(-(s12^6*(8*s13 + s23)) + s12^5*(-24*s13^2 + 
                5*s13*s23 - 5*s23^2) - 2*s12^4*(12*s13^3 - 19*s13^2*s23 + 
                6*s13*s23^2 + 3*s23^3) + 2*s13*s23^3*(-s13^3 + 5*s13^2*s23 + 
                14*s13*s23^2 + 8*s23^3) + s12^3*(-8*s13^4 + 74*s13^3*s23 - 
                6*s13^2*s23^2 + 60*s13*s23^3 + 10*s23^4) + s12^2*s23*(
                59*s13^4 + 4*s13^3*s23 + 40*s13^2*s23^2 + 102*s13*s23^3 + 
                28*s23^4) + s12*s23*(17*s13^5 + 3*s13^4*s23 + 36*s13^3*
                 s23^2 + 70*s13^2*s23^3 + 56*s13*s23^4 + 16*s23^5)) + 
            p2q*p3q*(-(s12^6*s23) + s12^5*(16*s13^2 + 38*s13*s23 - 5*s23^2) + 
              s12^4*(48*s13^3 + 161*s13^2*s23 - s13*s23^2 - 8*s23^3) + 
              s12^3*(48*s13^4 + 244*s13^3*s23 + 22*s13^2*s23^2 + 
                96*s13*s23^3 + 20*s23^4) - s13*s23*(s13^5 + 5*s13^4*s23 + 
                8*s13^3*s23^2 - 20*s13^2*s23^3 - 56*s13*s23^4 - 32*s23^5) + 
              s12*s23*(38*s13^5 - s13^4*s23 + 96*s13^3*s23^2 + 172*s13^2*
                 s23^3 + 112*s13*s23^4 + 32*s23^5) + s12^2*(16*s13^5 + 
                161*s13^4*s23 + 22*s13^3*s23^2 + 80*s13^2*s23^3 + 
                172*s13*s23^4 + 56*s23^5)) + p2q^2*(17*s12^5*s13*s23 + 
              s12^4*(-8*s13^3 + 59*s13^2*s23 + 3*s13*s23^2 - 2*s23^3) + 
              s12^3*(-24*s13^4 + 74*s13^3*s23 + 4*s13^2*s23^2 + 
                36*s13*s23^3 + 10*s23^4) - s13*s23*(s13^5 + 5*s13^4*s23 + 
                6*s13^3*s23^2 - 10*s13^2*s23^3 - 28*s13*s23^4 - 16*s23^5) + 
              s12^2*(-24*s13^5 + 38*s13^4*s23 - 6*s13^3*s23^2 + 
                40*s13^2*s23^3 + 70*s13*s23^4 + 28*s23^5) + s12*(-8*s13^6 + 
                5*s13^5*s23 - 12*s13^4*s23^2 + 60*s13^3*s23^3 + 102*s13^2*
                 s23^4 + 56*s13*s23^5 + 16*s23^6))))*den[-3 + 2*ep])/
        (16*p1q*(p2q + p3q)^2*(p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*
         s23^2) + nl*((-3*(s12 + s13 + s23)*(p1q^4*(p2q + p3q)*s23*
             (s13^2*s23 + s12^2*(8*s13 + s23) + 2*s12*s13*(4*s13 + 3*s23)) + 
            (p2q + p3q)^4*s23*(p2q*s13*(7*s12^2 + 8*s12*s13 + s13^2 + 
                6*s12*s23 + 2*s13*s23) + p3q*s12*(s12^2 + 2*s12*(4*s13 + 
                  s23) + s13*(7*s13 + 6*s23))) + 4*p1q^2*
             (p3q^3*(-4*s12^3*s13 - s13*s23^3 + s12^2*s23*(4*s13 + s23) + 
                s12*s23*(6*s13^2 + s13*s23 - s23^2)) + p2q*p3q^2*(
                -4*s12^3*s13 + s13*(s13 - 3*s23)*s23^2 + s12*s23*(20*s13^2 + 
                  3*s13*s23 - 3*s23^2) + 2*s12^2*(4*s13^2 + 9*s13*s23 + 
                  s23^2)) + p2q^2*p3q*(s13*(2*s13 - 3*s23)*s23^2 + 
                s12^2*(8*s13^2 + 20*s13*s23 + s23^2) + s12*(-4*s13^3 + 
                  18*s13^2*s23 + 3*s13*s23^2 - 3*s23^3)) + 
              p2q^3*(6*s12^2*s13*s23 + s13*(s13 - s23)*s23^2 + 
                s12*(-4*s13^3 + 4*s13^2*s23 + s13*s23^2 - s23^3))) + 
            p1q*(p2q + p3q)^2*(p3q^2*(-8*s12^3*s13 + 3*s12^2*s23*
                 (4*s13 + s23) - s13*s23^2*(s13 + 2*s23) - 2*s12*s23*
                 (-8*s13^2 - 3*s13*s23 + s23^2)) + 2*p2q*p3q*(
                s13*(s13 - 2*s23)*s23^2 - 2*s12*s23*(-9*s13^2 - 3*s13*s23 + 
                  s23^2) + s12^2*(8*s13^2 + 18*s13*s23 + s23^2)) + 
              p2q^2*(s12^2*(16*s13 - s23)*s23 + s13*(3*s13 - 2*s23)*s23^2 - 
                2*s12*(4*s13^3 - 6*s13^2*s23 - 3*s13*s23^2 + s23^3))) - 
            p1q^3*(p2q^2*(-17*s12^2*s13*s23 + 4*s12*(s13 - s23)^2*
                 (2*s13 + s23) + s13*s23*(s13^2 + 4*s23^2)) + 
              p3q^2*(-12*s12^2*s13*s23 + 4*s13*s23^3 + s12^3*(8*s13 + s23) + 
                s12*(-17*s13^2*s23 + 4*s23^3)) + p2q*p3q*(s12^3*s23 - 
                s12^2*s13*(16*s13 + 37*s23) + s13*s23*(s13^2 + 8*s23^2) + 
                s12*(-37*s13^2*s23 + 8*s23^3)))))/(8*p1q*(p2q + p3q)^2*
           (p1q + p2q + p3q)^2*s12*s13*(s12 + s13)*s23^2) - 
         (3*(16*p1q^4*s12*s13*s23^3*(s12 + s13 + s23) + 2*(p2q + p3q)^2*s12*
             s13*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
             (-(p3q*(3*s12^2 + 4*s12*s13 + s13^2 + 6*s12*s23 - 2*s13*s23)) + 
              p2q*(s12^2 + s12*(4*s13 - 2*s23) + 3*s13*(s13 + 2*s23))) + 
            p1q*(-(p3q^3*s12*(s12^4*(2*s13 + s23) + s13^2*s23*(3*s13^2 + 
                   17*s13*s23 + 6*s23^2) + s12^3*(2*s13^2 + 8*s13*s23 + 
                   7*s23^2) + s12^2*(-2*s13^3 + 28*s13^2*s23 + 47*s13*s23^2 + 
                   6*s23^3) + s12*s13*(-2*s13^3 + 24*s13^2*s23 + 41*s13*
                    s23^2 + 28*s23^3))) - p2q^3*s13*(s12^4*(-2*s13 + 3*s23) + 
                s13^2*s23*(s13^2 + 7*s13*s23 + 6*s23^2) + s12^3*(-2*s13^2 + 
                  24*s13*s23 + 17*s23^2) + s12^2*(2*s13^3 + 28*s13^2*s23 + 
                  41*s13*s23^2 + 6*s23^3) + s12*s13*(2*s13^3 + 8*s13^2*s23 + 
                  47*s13*s23^2 + 28*s23^3)) - p2q*p3q^2*(4*s12^5*
                 (s13 + s23) + s13^3*s23*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 
                s12^4*(2*s13^2 + 5*s13*s23 + 12*s23^2) + s12^3*(-6*s13^3 + 
                  28*s13^2*s23 + 79*s13*s23^2 + 8*s23^3) + s12*s13^2*
                 (2*s13^3 + 49*s13*s23^2 + 28*s23^3) + s12^2*s13*(-2*s13^3 + 
                  24*s13^2*s23 + 63*s13*s23^2 + 50*s23^3)) - 
              p2q^2*p3q*(s12^5*(2*s13 + 3*s23) + 4*s13^3*s23*(s13^2 + 
                  3*s13*s23 + 2*s23^2) + s12^4*(-2*s13^2 + 5*s23^2) + 
                s12^3*(-6*s13^3 + 24*s13^2*s23 + 49*s13*s23^2 + 2*s23^3) + 
                s12^2*s13*(2*s13^3 + 28*s13^2*s23 + 63*s13*s23^2 + 
                  28*s23^3) + s12*s13^2*(4*s13^3 + 5*s13^2*s23 + 
                  79*s13*s23^2 + 50*s23^3))) - p1q^3*s23*
             (p3q*(s12^4*(4*s13 + 3*s23) + 3*s12^3*(4*s13^2 + 20*s13*s23 + 
                  3*s23^2) + s13*s23*(3*s13^3 + 9*s13^2*s23 + 14*s13*s23^2 + 
                  8*s23^3) + s12^2*(12*s13^3 + 66*s13^2*s23 + 63*s13*s23^2 + 
                  14*s23^3) + s12*(4*s13^4 + 44*s13^3*s23 + 47*s13^2*s23^2 + 
                  28*s13*s23^3 + 8*s23^4)) + p2q*(s12^4*(4*s13 + 3*s23) + 
                s12^3*(12*s13^2 + 44*s13*s23 + 9*s23^2) + s13*s23*
                 (3*s13^3 + 9*s13^2*s23 + 14*s13*s23^2 + 8*s23^3) + 
                s12^2*(12*s13^3 + 66*s13^2*s23 + 47*s13*s23^2 + 14*s23^3) + 
                s12*(4*s13^4 + 60*s13^3*s23 + 63*s13^2*s23^2 + 28*s13*s23^3 + 
                  8*s23^4))) + p1q^2*(p3q^2*(s12^5*(4*s13 + 3*s23) + 
                s13^2*s23^2*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 2*s12^4*
                 (6*s13^2 + 24*s13*s23 + 5*s23^2) + s12^3*(12*s13^3 + 
                  66*s13^2*s23 + 61*s13*s23^2 + 21*s23^3) + s12*s13*s23*
                 (11*s13^3 + 7*s13^2*s23 + 43*s13*s23^2 + 32*s23^3) + 
                s12^2*(4*s13^4 + 32*s13^3*s23 + 87*s13^2*s23^2 + 
                  75*s13*s23^3 + 14*s23^4)) + p2q^2*(s12^4*(4*s13^2 + 
                  11*s13*s23 + 3*s23^2) + s12^3*(12*s13^3 + 32*s13^2*s23 + 
                  7*s13*s23^2 + 5*s23^3) + s13^2*s23*(3*s13^3 + 10*s13^2*
                   s23 + 21*s13*s23^2 + 14*s23^3) + s12^2*(12*s13^4 + 
                  66*s13^3*s23 + 87*s13^2*s23^2 + 43*s13*s23^3 + 2*s23^4) + 
                s12*s13*(4*s13^4 + 48*s13^3*s23 + 61*s13^2*s23^2 + 
                  75*s13*s23^3 + 32*s23^4)) + p2q*p3q*(s12^5*(-4*s13 + 
                  3*s23) + s12^4*(-16*s13^2 + 43*s13*s23 + 13*s23^2) + 
                s13^2*s23*(3*s13^3 + 13*s13^2*s23 + 26*s13*s23^2 + 
                  16*s23^3) + s12^3*(-24*s13^3 + 50*s13^2*s23 + 60*s13*
                   s23^2 + 26*s23^3) + 2*s12^2*(-8*s13^4 + 25*s13^3*s23 + 
                  79*s13^2*s23^2 + 59*s13*s23^3 + 8*s23^4) + s12*s13*
                 (-4*s13^4 + 43*s13^3*s23 + 60*s13^2*s23^2 + 118*s13*s23^3 + 
                  64*s23^4))))*den[-1 + ep])/(8*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*s23) - 
         (3*(4*p1q^4*s12*s13*s23^2*(s12^2 + 2*s12*s13 + s13^2 + 3*s12*s23 + 
              3*s13*s23 + 2*s23^2) + 2*(p2q + p3q)^2*s12*s13*
             (-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
             (p3q*(-2*s12^2 - 2*s12*s13 - 3*s12*s23 + s13*s23) + 
              p2q*(2*s12*s13 + 2*s13^2 - s12*s23 + 3*s13*s23)) - 
            p1q*(p2q + p3q)*s23*(p3q^2*s12*(s12^4 + 2*s12^3*(5*s13 + 2*s23) + 
                s13^2*(3*s13^2 + 8*s13*s23 + 3*s23^2) + s12^2*(20*s13^2 + 
                  28*s13*s23 + 3*s23^2) + 2*s12*s13*(7*s13^2 + 12*s13*s23 + 
                  7*s23^2)) + p2q^2*s13*(3*s12^4 + 2*s12^3*(7*s13 + 4*s23) + 
                s13^2*(s13^2 + 4*s13*s23 + 3*s23^2) + s12^2*(20*s13^2 + 
                  24*s13*s23 + 3*s23^2) + 2*s12*s13*(5*s13^2 + 14*s13*s23 + 
                  7*s23^2)) + p2q*p3q*(s12^5 + s13^3*(s13 + s23)^2 + 
                s12^4*(5*s13 + 2*s23) + s12^3*(10*s13^2 + 20*s13*s23 + 
                  s23^2) + s12*s13^2*(5*s13^2 + 20*s13*s23 + 11*s23^2) + 
                s12^2*s13*(10*s13^2 + 20*s13*s23 + 11*s23^2))) - 
            p1q^3*s23*(p3q*(s12^4*(8*s13 + s23) + 2*s12^3*(6*s13^2 + 
                  13*s13*s23 + 2*s23^2) + s13*s23*(s13^3 + 4*s13^2*s23 + 
                  7*s13*s23^2 + 4*s23^3) + s12^2*(8*s13^3 + 22*s13^2*s23 + 
                  24*s13*s23^2 + 7*s23^3) + 2*s12*(2*s13^4 + 7*s13^3*s23 + 
                  8*s13^2*s23^2 + 7*s13*s23^3 + 2*s23^4)) + 
              p2q*(s12^4*(4*s13 + s23) + 2*s12^3*(4*s13^2 + 7*s13*s23 + 
                  2*s23^2) + s13*s23*(s13^3 + 4*s13^2*s23 + 7*s13*s23^2 + 
                  4*s23^3) + s12^2*(12*s13^3 + 22*s13^2*s23 + 16*s13*s23^2 + 
                  7*s23^3) + 2*s12*(4*s13^4 + 13*s13^3*s23 + 12*s13^2*s23^2 + 
                  7*s13*s23^3 + 2*s23^4))) + p1q^2*
             (p3q^2*(s13^2*s23^2*(s13 + s23)^2 + s12^5*(4*s13 + s23) + 
                s12^4*(8*s13^2 + 16*s13*s23 + 5*s23^2) + s12^2*s23*
                 (8*s13^3 + 44*s13^2*s23 + 42*s13*s23^2 + 7*s23^3) + 
                s12^3*(4*s13^3 + 24*s13^2*s23 + 30*s13*s23^2 + 11*s23^3) + 
                s12*s13*s23*(-s13^3 + 4*s13^2*s23 + 25*s13*s23^2 + 
                  16*s23^3)) + p2q^2*(s12^4*s23*(-s13 + s23) + 2*s12^3*
                 (2*s13^3 + 4*s13^2*s23 + 2*s13*s23^2 + s23^3) + 
                s13^2*s23*(s13^3 + 5*s13^2*s23 + 11*s13*s23^2 + 7*s23^3) + 
                s12^2*(8*s13^4 + 24*s13^3*s23 + 44*s13^2*s23^2 + 
                  25*s13*s23^3 + s23^4) + 2*s12*s13*(2*s13^4 + 8*s13^3*s23 + 
                  15*s13^2*s23^2 + 21*s13*s23^3 + 8*s23^4)) + 
              p2q*p3q*(s12^5*s23 + s12^4*(-8*s13^2 + 7*s13*s23 + 6*s23^2) + 
                s13^2*s23*(s13^3 + 6*s13^2*s23 + 13*s13*s23^2 + 8*s23^3) + 
                s12^3*(-16*s13^3 + 8*s13^2*s23 + 30*s13*s23^2 + 13*s23^3) + 
                s12*s13*s23*(7*s13^3 + 30*s13^2*s23 + 67*s13*s23^2 + 
                  32*s23^3) + s12^2*(-8*s13^4 + 8*s13^3*s23 + 80*s13^2*
                   s23^2 + 67*s13*s23^3 + 8*s23^4))))*den[-1 + ep]^2)/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*s23) - 
         (3*(p1q^4*(p2q + p3q)*s23*(s13^4*s23*(s13 + s23) + s12^5*(8*s13 + 
                s23) + s12^4*(32*s13^2 + 13*s13*s23 + s23^2) + 
              2*s12^3*s13*(24*s13^2 + 17*s13*s23 + 2*s23^2) + 
              2*s12^2*s13*(16*s13^3 + 17*s13^2*s23 + 3*s13*s23^2 - 
                16*s23^3) + s12*s13*(8*s13^4 + 13*s13^3*s23 + 4*s13^2*s23^2 - 
                32*s13*s23^3 - 32*s23^4)) + (p2q + p3q)^2*s23*
             (p2q^3*s13*(7*s12^5 + s12^4*(25*s13 + 13*s23) + 
                s13^3*(s13^2 + 3*s13*s23 + 2*s23^2) + s12^3*(26*s13^2 + 
                  46*s13*s23 + 6*s23^2) + 2*s12^2*s13*(3*s13^2 + 8*s13*s23 + 
                  11*s23^2) - s12*s13^2*(s13^2 + 14*s13*s23 + 14*s23^2)) + 
              p3q^3*s12*(s12^5 - s12^4*(s13 - 3*s23) + 2*s12^2*s13*
                 (13*s13^2 + 8*s13*s23 - 7*s23^2) + 2*s12^3*(3*s13^2 - 
                  7*s13*s23 + s23^2) + s13^3*(7*s13^2 + 13*s13*s23 + 
                  6*s23^2) + s12*s13^2*(25*s13^2 + 46*s13*s23 + 22*s23^2)) + 
              p2q*p3q^2*(6*s12^6 + s12^5*(65*s13 + 18*s23) + 
                s13^4*(s13^2 + 3*s13*s23 + 2*s23^2) + 3*s12^4*(79*s13^2 + 
                  35*s13*s23 + 4*s23^2) + 2*s12^3*s13*(179*s13^2 + 
                  183*s13*s23 + 17*s23^2) + s12*s13^3*(57*s13^2 + 
                  96*s13*s23 + 38*s23^2) + 2*s12^2*s13^2*(118*s13^2 + 
                  186*s13*s23 + 77*s23^2)) + p2q^2*p3q*(s12^6 + 
                3*s12^5*(19*s13 + s23) + 2*s12^4*(118*s13^2 + 48*s13*s23 + 
                  s23^2) + 6*s13^4*(s13^2 + 3*s13*s23 + 2*s23^2) + 
                2*s12^3*s13*(179*s13^2 + 186*s13*s23 + 19*s23^2) + 
                s12*s13^3*(65*s13^2 + 105*s13*s23 + 34*s23^2) + s12^2*s13^2*
                 (237*s13^2 + 366*s13*s23 + 154*s23^2))) + 
            p1q*(p3q^4*(s12^6*(-8*s13 + 4*s23) - s13^3*s23^2*(s13^2 + 
                  3*s13*s23 + 2*s23^2) + s12^5*(-24*s13^2 + 36*s13*s23 + 
                  13*s23^2) + s12*s13^2*s23*(16*s13^3 + 27*s13^2*s23 + 
                  34*s13*s23^2 + 6*s23^3) + s12^4*(-24*s13^3 + 92*s13^2*s23 + 
                  81*s13*s23^2 + 19*s23^3) + 2*s12^2*s13*s23*(32*s13^3 + 
                  68*s13^2*s23 + 48*s13*s23^2 + 25*s23^3) + 2*s12^3*
                 (-4*s13^4 + 54*s13^3*s23 + 88*s13^2*s23^2 + 55*s13*s23^3 + 
                  5*s23^4)) + 4*p2q^2*p3q^2*(-2*s12^6*s13 + 2*s13^3*s23^2*
                 (3*s13^2 + 2*s13*s23 - s23^2) + s12^5*(2*s13^2 + 
                  57*s13*s23 + 6*s23^2) + 2*s12^4*(8*s13^3 + 108*s13^2*s23 + 
                  41*s13*s23^2 + 2*s23^3) + 2*s12^3*(8*s13^4 + 159*s13^3*
                   s23 + 126*s13^2*s23^2 + 30*s13*s23^3 - s23^4) + 
                2*s12^2*s13*(s13^4 + 108*s13^3*s23 + 126*s13^2*s23^2 + 
                  32*s13*s23^3 + 9*s23^4) + s12*s13^2*(-2*s13^4 + 
                  57*s13^3*s23 + 82*s13^2*s23^2 + 60*s13*s23^3 + 18*s23^4)) + 
              2*p2q*p3q^3*(s12^6*(-8*s13 + 2*s23) + 3*s13^3*s23^2*
                 (s13^2 - s13*s23 - 2*s23^2) + s12^5*(-16*s13^2 + 
                  76*s13*s23 + 15*s23^2) + s12^4*s23*(264*s13^2 + 
                  133*s13*s23 + 19*s23^2) + s12*s13^2*s23*(64*s13^3 + 
                  85*s13^2*s23 + 58*s13*s23^2 + 10*s23^3) + 2*s12^3*
                 (8*s13^4 + 186*s13^3*s23 + 174*s13^2*s23^2 + 67*s13*s23^3 + 
                  3*s23^4) + 2*s12^2*s13*(4*s13^4 + 123*s13^3*s23 + 
                  156*s13^2*s23^2 + 56*s13*s23^3 + 27*s23^4)) + 
              p2q^4*(s12^5*(16*s13 - s23)*s23 + s12^4*(-8*s13^3 + 
                  64*s13^2*s23 + 27*s13*s23^2 - 3*s23^3) + s13^3*s23*
                 (4*s13^3 + 13*s13^2*s23 + 19*s13*s23^2 + 10*s23^3) - 
                2*s12^3*(12*s13^4 - 54*s13^3*s23 - 68*s13^2*s23^2 - 
                  17*s13*s23^3 + s23^4) + 2*s12^2*s13*(-12*s13^4 + 
                  46*s13^3*s23 + 88*s13^2*s23^2 + 48*s13*s23^3 + 3*s23^4) + 
                s12*s13^2*(-8*s13^4 + 36*s13^3*s23 + 81*s13^2*s23^2 + 
                  110*s13*s23^3 + 50*s23^4)) + 2*p2q^3*p3q*(s12^5*
                 (8*s13^2 + 64*s13*s23 + 3*s23^2) + 2*s12^3*s23*(186*s13^3 + 
                  156*s13^2*s23 + 29*s13*s23^2 - 3*s23^3) + s12^4*
                 (16*s13^3 + 246*s13^2*s23 + 85*s13*s23^2 - 3*s23^3) + 
                s13^3*s23*(2*s13^3 + 15*s13^2*s23 + 19*s13*s23^2 + 6*s23^3) + 
                2*s12^2*s13*(-8*s13^4 + 132*s13^3*s23 + 174*s13^2*s23^2 + 
                  56*s13*s23^3 + 5*s23^4) + s12*s13^2*(-8*s13^4 + 
                  76*s13^3*s23 + 133*s13^2*s23^2 + 134*s13*s23^3 + 
                  54*s23^4))) + 2*p1q^2*(-(p3q^3*(s12^6*(8*s13 - 2*s23) + 
                 s12^5*(24*s13^2 - 12*s13*s23 - s23^2) + s13^2*s23^3*
                  (7*s13^2 + 9*s13*s23 + 2*s23^2) + 2*s12^4*(12*s13^3 - 
                   18*s13^2*s23 + 13*s13*s23^2 + 6*s23^3) + s12^2*s23*
                  (-42*s13^4 + 6*s13^3*s23 + 117*s13^2*s23^2 + 87*s13*s23^3 + 
                   14*s23^4) + s12^3*(8*s13^4 - 56*s13^3*s23 + 28*s13^2*
                    s23^2 + 77*s13*s23^3 + 25*s23^4) + s12*s13*s23*
                  (-12*s13^4 + 5*s13^3*s23 + 27*s13^2*s23^2 + 55*s13*s23^3 + 
                   32*s23^4))) + p2q*p3q^2*(s12^6*(-8*s13 + 2*s23) + 
                s12^5*(-8*s13^2 + 72*s13*s23 + 2*s23^2) + s12^4*(24*s13^3 + 
                  276*s13^2*s23 - s13*s23^2 - 29*s23^3) + s13^2*s23^2*
                 (s13^3 - 24*s13^2*s23 - 43*s13*s23^2 - 18*s23^3) + 
                s12*s13*s23*(72*s13^4 + 20*s13^3*s23 - 107*s13^2*s23^2 - 
                  197*s13*s23^3 - 96*s23^4) + s12^3*(40*s13^4 + 416*s13^3*
                   s23 + 106*s13^2*s23^2 - 157*s13*s23^3 - 59*s23^4) + 
                s12^2*(16*s13^5 + 282*s13^4*s23 + 128*s13^3*s23^2 - 
                  307*s13^2*s23^3 - 229*s13*s23^4 - 30*s23^5)) + 
              p2q^3*(12*s12^5*s13*s23 - s12^4*(8*s13^3 - 42*s13^2*s23 + 
                  5*s13*s23^2 + 7*s23^3) + s13^2*s23*(2*s13^4 + s13^3*s23 - 
                  12*s13^2*s23^2 - 25*s13*s23^3 - 14*s23^4) - 
                s12^3*(24*s13^4 - 56*s13^3*s23 + 6*s13^2*s23^2 + 
                  27*s13*s23^3 + 9*s23^4) - s12^2*(24*s13^5 - 36*s13^4*s23 + 
                  28*s13^3*s23^2 + 117*s13^2*s23^3 + 55*s13*s23^4 + 
                  2*s23^5) - s12*s13*(8*s13^5 - 12*s13^4*s23 + 26*s13^3*
                   s23^2 + 77*s13^2*s23^3 + 87*s13*s23^4 + 32*s23^5)) + 
              p2q^2*p3q*(s12^5*(16*s13^2 + 72*s13*s23 + s23^2) + 
                s12^4*(40*s13^3 + 282*s13^2*s23 + 20*s13*s23^2 - 24*s23^3) + 
                s12^3*(24*s13^4 + 416*s13^3*s23 + 128*s13^2*s23^2 - 
                  107*s13*s23^3 - 43*s23^4) + s13^2*s23*(2*s13^4 + 
                  2*s13^3*s23 - 29*s13^2*s23^2 - 59*s13*s23^3 - 30*s23^4) - 
                s12^2*(8*s13^5 - 276*s13^4*s23 - 106*s13^3*s23^2 + 
                  307*s13^2*s23^3 + 197*s13*s23^4 + 18*s23^5) - 
                s12*s13*(8*s13^5 - 72*s13^4*s23 + s13^3*s23^2 + 157*s13^2*
                   s23^3 + 229*s13*s23^4 + 96*s23^5))) + 
            p1q^3*(p3q^2*(-(s12^6*(8*s13 + s23)) + s12^5*(-24*s13^2 + 
                  5*s13*s23 - 5*s23^2) - 2*s12^4*(12*s13^3 - 19*s13^2*s23 + 
                  6*s13*s23^2 + 3*s23^3) + 2*s13*s23^3*(-s13^3 + 5*s13^2*
                   s23 + 14*s13*s23^2 + 8*s23^3) + s12^3*(-8*s13^4 + 
                  74*s13^3*s23 - 6*s13^2*s23^2 + 60*s13*s23^3 + 10*s23^4) + 
                s12^2*s23*(59*s13^4 + 4*s13^3*s23 + 40*s13^2*s23^2 + 
                  102*s13*s23^3 + 28*s23^4) + s12*s23*(17*s13^5 + 
                  3*s13^4*s23 + 36*s13^3*s23^2 + 70*s13^2*s23^3 + 
                  56*s13*s23^4 + 16*s23^5)) + p2q*p3q*(-(s12^6*s23) + 
                s12^5*(16*s13^2 + 38*s13*s23 - 5*s23^2) + s12^4*(48*s13^3 + 
                  161*s13^2*s23 - s13*s23^2 - 8*s23^3) + s12^3*(48*s13^4 + 
                  244*s13^3*s23 + 22*s13^2*s23^2 + 96*s13*s23^3 + 20*s23^4) - 
                s13*s23*(s13^5 + 5*s13^4*s23 + 8*s13^3*s23^2 - 20*s13^2*
                   s23^3 - 56*s13*s23^4 - 32*s23^5) + s12*s23*(38*s13^5 - 
                  s13^4*s23 + 96*s13^3*s23^2 + 172*s13^2*s23^3 + 112*s13*
                   s23^4 + 32*s23^5) + s12^2*(16*s13^5 + 161*s13^4*s23 + 
                  22*s13^3*s23^2 + 80*s13^2*s23^3 + 172*s13*s23^4 + 
                  56*s23^5)) + p2q^2*(17*s12^5*s13*s23 + s12^4*(-8*s13^3 + 
                  59*s13^2*s23 + 3*s13*s23^2 - 2*s23^3) + s12^3*(-24*s13^4 + 
                  74*s13^3*s23 + 4*s13^2*s23^2 + 36*s13*s23^3 + 10*s23^4) - 
                s13*s23*(s13^5 + 5*s13^4*s23 + 6*s13^3*s23^2 - 10*s13^2*
                   s23^3 - 28*s13*s23^4 - 16*s23^5) + s12^2*(-24*s13^5 + 
                  38*s13^4*s23 - 6*s13^3*s23^2 + 40*s13^2*s23^3 + 
                  70*s13*s23^4 + 28*s23^5) + s12*(-8*s13^6 + 5*s13^5*s23 - 
                  12*s13^4*s23^2 + 60*s13^3*s23^3 + 102*s13^2*s23^4 + 
                  56*s13*s23^5 + 16*s23^6))))*den[-3 + 2*ep])/
          (8*p1q*(p2q + p3q)^2*(p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*
           s23^2)))*Int[DS[k]*DS[k + p2 + p3]] + 
     (-1/36*(ep^2*(28*s13^2*s23*(s13 + s23) + s12^3*(27*s13 + 28*s23) + 
           s12*s13*(27*s13^2 + 37*s13*s23 + 2*s23^2) + 
           s12^2*(18*s13^2 + 37*s13*s23 + 28*s23^2)))/(s12*s13*(s12 + s23)*
          (s13 + s23)) - (ep*(9*p1q^6*s12*s13*(s12 + s13)*s23^3*(s12 + s23)*
           (s13 + s23)*(s12^3 + s12*(s13 + s23)^2 + s13*(s13 + s23)^2 + 
            s12^2*(s13 + 2*s23)) + 9*(p2q + p3q)^3*s12*(s12 - s13)*s13*
           (p3q*s12 - p2q*s13)*s23*(s12 + s13 + s23)^2*(s12*(2*s13 + s23) + 
            s23*(s13 + 2*s23))*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q^5*s23^2*
           (p3q*(s12 + s23)*(20*s13^3*s23^2*(s13 + s23)^3 + 9*s12^6*s13*(
                s13 + 2*s23) + 4*s12*s13^2*s23*(s13 + s23)^2*(41*s13^2 - 
                18*s13*s23 + 13*s23^2) + 4*s12^5*(38*s13^3 + 88*s13^2*s23 + 
                55*s13*s23^2 + 5*s23^3) + s12^4*(-670*s13^4 - 1308*s13^3*
                 s23 - 519*s13^2*s23^2 + 150*s13*s23^3 + 40*s23^4) - 
              2*s12^3*(335*s13^5 + 1128*s13^4*s23 + 1266*s13^3*s23^2 + 
                483*s13^2*s23^3 - 10*s23^5) + s12^2*s13*(143*s13^5 - 
                522*s13^4*s23 - 1629*s13^3*s23^2 - 1012*s13^2*s23^3 + 
                4*s13*s23^4 + 52*s23^5)) + p2q*(s13 + s23)*
             (20*s13^3*s23^3*(s13 + s23)^2 + s12^6*(143*s13^2 + 164*s13*s23 + 
                20*s23^2) + s12^5*(-670*s13^3 - 522*s13^2*s23 + 
                256*s13*s23^2 + 60*s23^3) + 2*s12*s13^2*s23*(9*s13^4 + 
                110*s13^3*s23 + 75*s13^2*s23^2 + 26*s23^4) + 
              s12^4*(-670*s13^4 - 2256*s13^3*s23 - 1629*s13^2*s23^2 + 
                72*s13*s23^3 + 60*s23^4) + 4*s12^3*(38*s13^5 - 327*s13^4*
                 s23 - 633*s13^3*s23^2 - 253*s13^2*s23^3 + 8*s13*s23^4 + 
                5*s23^5) + s12^2*s13*(9*s13^5 + 352*s13^4*s23 - 519*s13^3*
                 s23^2 - 966*s13^2*s23^3 + 4*s13*s23^4 + 52*s23^5))) + 
          p1q^4*s23*(p3q^2*(s12 + s23)*(9*s12^7*s13*s23 - 20*s13^3*s23^3*
               (s13 + s23)^3 - 2*s12*s13^2*s23^2*(s13 + s23)^2*(213*s13^2 - 
                213*s13*s23 + 40*s23^2) + s12^6*(-54*s13^3 + 54*s13^2*s23 + 
                196*s13*s23^2 + 60*s23^3) - s12^5*(54*s13^4 + 1286*s13^3*
                 s23 + 2004*s13^2*s23^2 + 481*s13*s23^3 - 100*s23^4) + 
              2*s12^2*s13*s23*(-152*s13^5 + 1199*s13^4*s23 + 2978*s13^3*
                 s23^2 + 1839*s13^2*s23^3 + 172*s13*s23^4 - 40*s23^5) + 
              2*s12^4*(27*s13^5 + 787*s13^4*s23 + 1079*s13^3*s23^2 + 
                102*s13^2*s23^3 - 221*s13*s23^4 + 10*s23^5) + 
              s12^3*(54*s13^6 + 2601*s13^5*s23 + 7002*s13^4*s23^2 + 
                6999*s13^3*s23^3 + 2910*s13^2*s23^4 + 146*s13*s23^5 - 
                20*s23^6)) + p2q^2*(s13 + s23)*(20*s13^3*(3*s13 - s23)*s23^
                3*(s13 + s23)^2 + s12^6*(54*s13^3 - 304*s13^2*s23 - 
                426*s13*s23^2 - 20*s23^3) + s12^5*(54*s13^4 + 2601*s13^3*
                 s23 + 2398*s13^2*s23^2 - 426*s13*s23^3 - 60*s23^4) + 
              s12*s13^2*s23*(9*s13^5 + 196*s13^4*s23 - 481*s13^3*s23^2 - 
                442*s13^2*s23^3 + 146*s13*s23^4 - 80*s23^5) + 
              s12^4*(-54*s13^5 + 1574*s13^4*s23 + 7002*s13^3*s23^2 + 
                5956*s13^2*s23^3 + 346*s13*s23^4 - 60*s23^5) + 
              2*s12^2*s13*s23*(27*s13^5 - 1002*s13^4*s23 + 102*s13^3*s23^2 + 
                1455*s13^2*s23^3 + 172*s13*s23^4 - 40*s23^5) + 
              s12^3*(-54*s13^6 - 1286*s13^5*s23 + 2158*s13^4*s23^2 + 
                6999*s13^3*s23^3 + 3678*s13^2*s23^4 + 266*s13*s23^5 - 
                20*s23^6)) + p2q*p3q*(20*s13^3*(3*s13 - 2*s23)*s23^3*
               (s13 + s23)^3 + s12*s13^2*s23^2*(s13 + s23)^2*(187*s13^3 - 
                1096*s13^2*s23 + 641*s13*s23^2 - 160*s23^3) + 
              s12^7*(-54*s13^3 + 45*s13^2*s23 + 187*s13*s23^2 + 60*s23^3) + 
              s12^6*s23*(-1581*s13^3 - 2662*s13^2*s23 - 722*s13*s23^2 + 
                140*s23^3) + s12^4*s23*(4184*s13^5 + 17260*s13^4*s23 + 
                22349*s13^3*s23^2 + 9578*s13^2*s23^3 + 26*s13*s23^4 - 
                60*s23^5) + s12^5*(108*s13^5 + 4184*s13^4*s23 + 5961*s13^3*
                 s23^2 + 289*s13^2*s23^3 - 1364*s13*s23^4 + 60*s23^5) + 
              s12^2*s13*s23*(45*s13^6 - 2662*s13^5*s23 + 289*s13^4*s23^2 + 
                9578*s13^3*s23^3 + 7288*s13^2*s23^4 + 546*s13*s23^5 - 
                160*s23^6) + s12^3*(-54*s13^7 - 1581*s13^6*s23 + 
                5961*s13^5*s23^2 + 22349*s13^4*s23^3 + 21588*s13^3*s23^4 + 
                7288*s13^2*s23^5 + 321*s13*s23^6 - 40*s23^7))) + 
          p1q^3*(2*p3q^3*s12*(s12 + s23)*(-(s13^2*s23^3*(s13 + s23)^2*
                (208*s13^2 - 251*s13*s23 + 21*s23^2)) + 3*s12^6*(3*s13^3 + 
                12*s13^2*s23 + s13*s23^2 - 10*s23^3) + s12^5*(27*s13^4 + 
                36*s13^3*s23 + 252*s13^2*s23^2 + 283*s13*s23^3 - 30*s23^4) + 
              s12*s13*s23^2*(-148*s13^5 + 1473*s13^4*s23 + 3086*s13^3*s23^2 + 
                1720*s13^2*s23^3 + 234*s13*s23^4 - 21*s23^5) + 
              s12^4*(27*s13^5 + 9*s13^4*s23 - 1234*s13^3*s23^2 - 
                1754*s13^2*s23^3 - 210*s13*s23^4 + 30*s23^5) + 
              s12^2*s13*s23*(45*s13^5 + 1533*s13^4*s23 + 2885*s13^3*s23^2 + 
                2095*s13^2*s23^3 + 1057*s13*s23^4 + 55*s23^5) + 
              s12^3*(9*s13^6 + 54*s13^5*s23 + 198*s13^4*s23^2 - 809*s13^3*
                 s23^3 - 1336*s13^2*s23^4 - 414*s13*s23^5 + 30*s23^6)) + 
            2*p2q^3*s13*(s13 + s23)*(-30*s13^3*(s13 - s23)*s23^3*(s13 + s23)^
                2 + s12^6*(9*s13^3 + 45*s13^2*s23 - 148*s13*s23^2 - 
                208*s23^3) + 3*s12^5*(9*s13^4 + 18*s13^3*s23 + 511*s13^2*
                 s23^2 + 491*s13*s23^3 - 55*s23^4) + s12*s13*s23^2*(3*s13^5 + 
                283*s13^4*s23 - 210*s13^3*s23^2 - 414*s13^2*s23^3 + 
                55*s13*s23^4 - 21*s23^5) + s12^4*(27*s13^5 + 9*s13^4*s23 + 
                198*s13^3*s23^2 + 2885*s13^2*s23^3 + 3086*s13*s23^4 + 
                273*s23^5) + s12^2*s23*(36*s13^6 + 252*s13^5*s23 - 
                1754*s13^4*s23^2 - 1336*s13^3*s23^3 + 1057*s13^2*s23^4 + 
                234*s13*s23^5 - 21*s23^6) + s12^3*(9*s13^6 + 36*s13^5*s23 - 
                1234*s13^4*s23^2 - 809*s13^3*s23^3 + 2095*s13^2*s23^4 + 
                1720*s13*s23^5 + 209*s23^6)) + p2q*p3q^2*
             (20*s13^3*(2*s13 - s23)*s23^4*(s13 + s23)^3 + s12*s13^2*s23^
                3*(s13 + s23)^2*(297*s13^3 - 2280*s13^2*s23 + 1001*s13*
                 s23^2 - 178*s23^3) + 3*s12^8*(6*s13^3 + 24*s13^2*s23 - 
                s13*s23^2 - 20*s23^3) + s12^7*(18*s13^4 - 90*s13^3*s23 + 
                588*s13^2*s23^2 + 833*s13*s23^3 - 80*s23^4) - 
              s12^6*(54*s13^5 + 180*s13^4*s23 + 5807*s13^3*s23^2 + 
                8206*s13^2*s23^3 + 1178*s13*s23^4 - 100*s23^5) + 
              s12^2*s13*s23^2*(39*s13^6 - 5824*s13^5*s23 - 2092*s13^4*s23^2 + 
                12720*s13^3*s23^3 + 9975*s13^2*s23^4 + 848*s13*s23^5 - 
                178*s23^6) + s12^5*(-90*s13^6 + 18*s13^5*s23 + 4290*s13^4*
                 s23^2 - 1427*s13^3*s23^3 - 10996*s13^2*s23^4 - 
                4216*s13*s23^5 + 180*s23^6) + s12^3*s23*(-180*s13^7 - 
                3590*s13^6*s23 + 8743*s13^5*s23^2 + 30378*s13^4*s23^3 + 
                25392*s13^3*s23^4 + 8690*s13^2*s23^5 + 295*s13*s23^6 - 
                20*s23^7) + s12^4*(-36*s13^7 - 144*s13^6*s23 + 7059*s13^5*
                 s23^2 + 22212*s13^4*s23^3 + 20954*s13^3*s23^4 + 
                5390*s13^2*s23^5 - 1729*s13*s23^6 + 40*s23^7)) + 
            p2q^2*p3q*(-20*s13^3*s23^3*(s13 + s23)^3*(3*s13^2 - 5*s13*s23 + 
                s23^2) + s12^7*(-36*s13^4 - 180*s13^3*s23 + 39*s13^2*s23^2 + 
                297*s13*s23^3 + 40*s23^4) - s12*s13^2*s23^2*(s13 + s23)^2*(
                3*s13^4 - 839*s13^3*s23 + 2853*s13^2*s23^2 - 651*s13*s23^3 + 
                178*s23^4) - 2*s12^6*(45*s13^5 + 72*s13^4*s23 + 1795*s13^3*
                 s23^2 + 2912*s13^2*s23^3 + 843*s13*s23^4 - 50*s23^5) + 
              s12^5*(-54*s13^6 + 18*s13^5*s23 + 7059*s13^4*s23^2 + 
                8743*s13^3*s23^3 - 2092*s13^2*s23^4 - 3262*s13*s23^5 + 
                60*s23^6) + 2*s12^2*s13*s23*(36*s13^7 + 294*s13^6*s23 - 
                4103*s13^5*s23^2 - 5498*s13^4*s23^3 + 2695*s13^3*s23^4 + 
                4345*s13^2*s23^5 + 424*s13*s23^6 - 89*s23^7) + 
              2*s12^4*(9*s13^7 - 90*s13^6*s23 + 2145*s13^5*s23^2 + 
                11106*s13^4*s23^3 + 15189*s13^3*s23^4 + 6360*s13^2*s23^5 - 
                228*s13*s23^6 - 10*s23^7) + s12^3*(18*s13^8 - 90*s13^7*s23 - 
                5807*s13^6*s23^2 - 1427*s13^5*s23^3 + 20954*s13^4*s23^4 + 
                25392*s13^3*s23^5 + 9975*s13^2*s23^6 + 645*s13*s23^7 - 
                20*s23^8))) - p1q*(p3q^5*s12^2*(s12 + s23)*
             (2*s12^6*(9*s13^2 - 10*s23^2) + s12^5*(54*s13^3 - 68*s13*s23^2 - 
                40*s23^3) + 2*s12^3*s13*(9*s13^4 + 63*s13^3*s23 + 
                208*s13^2*s23^2 + 41*s13*s23^3 - 230*s23^4) + 
              s12^2*s13*s23*(36*s13^4 + 416*s13^3*s23 + 1140*s13^2*s23^2 + 
                657*s13*s23^3 - 46*s23^4) + s12^4*(54*s13^4 + 72*s13^3*s23 - 
                381*s13^2*s23^2 - 478*s13*s23^3 - 20*s23^4) - 
              s13^2*s23^2*(9*s13^4 + 352*s13^3*s23 + 249*s13^2*s23^2 - 
                62*s13*s23^3 + 32*s23^4) + 2*s12*s13*s23*(-9*s13^5 - 
                171*s13^4*s23 + 80*s13^3*s23^2 + 406*s13^2*s23^3 + 
                62*s13*s23^4 + 2*s23^5)) - p2q^5*s13^2*(s13 + s23)*
             (20*s13^4*s23^2*(s13 + s23)^2 + 9*s12^6*s23*(2*s13 + s23) + 
              s12^5*(-18*s13^3 - 36*s13^2*s23 + 342*s13*s23^2 + 352*s23^3) - 
              s12^4*(54*s13^4 + 126*s13^3*s23 + 416*s13^2*s23^2 + 
                160*s13*s23^3 - 249*s23^4) + 2*s12*s13*s23^2*(34*s13^4 + 
                239*s13^3*s23 + 230*s13^2*s23^2 + 23*s13*s23^3 - 2*s23^4) - 
              2*s12^3*(27*s13^5 + 36*s13^4*s23 + 208*s13^3*s23^2 + 
                570*s13^2*s23^3 + 406*s13*s23^4 + 31*s23^5) - 
              s12^2*(18*s13^6 - 381*s13^4*s23^2 + 82*s13^3*s23^3 + 
                657*s13^2*s23^4 + 124*s13*s23^5 - 32*s23^6)) + 
            p2q*p3q^4*s12*(2*s12^8*(9*s13^2 - 10*s23^2) + s13^2*s23^3*
               (s13 + s23)^2*(9*s13^3 + 334*s13^2*s23 + 23*s13*s23^2 + 
                14*s23^3) - s12^7*(18*s13^3 + 72*s13^2*s23 + 43*s13*s23^2 + 
                40*s23^3) - s12^6*s13*(162*s13^3 + 90*s13^2*s23 + 
                992*s13*s23^2 + 1119*s23^3) + s12^5*(-198*s13^5 - 
                252*s13^4*s23 + 1840*s13^3*s23^2 + 873*s13^2*s23^3 - 
                1822*s13*s23^4 + 40*s23^5) + s12^3*s13*s23*(-216*s13^5 - 
                2191*s13^4*s23 - 1684*s13^3*s23^2 + 3281*s13^2*s23^3 + 
                2643*s13*s23^4 + 443*s23^5) + s12*s13*s23^2*(36*s13^6 + 
                1031*s13^5*s23 + 125*s13^4*s23^2 - 1025*s13^3*s23^3 - 
                235*s13^2*s23^4 - 66*s13*s23^5 + 14*s23^6) + 
              s12^4*(-72*s13^6 - 486*s13^5*s23 + 138*s13^4*s23^2 + 
                4517*s13^3*s23^3 + 4328*s13^2*s23^4 - 388*s13*s23^5 + 
                20*s23^6) + s12^2*s13*s23*(36*s13^6 + 516*s13^5*s23 - 
                2687*s13^4*s23^2 - 3312*s13^3*s23^3 + 590*s13^2*s23^4 + 
                10*s13*s23^5 + 99*s23^6)) + p2q^2*p3q^3*s12*
             (-4*s12^7*(18*s13^3 + 27*s13^2*s23 - 4*s13*s23^2 - 5*s23^3) - 
              s13^2*s23^2*(s13 + s23)^2*(9*s13^4 + 339*s13^3*s23 - 
                1013*s13^2*s23^2 - 109*s13*s23^3 - 42*s23^4) + 
              s12^6*(-108*s13^4 + 18*s13^3*s23 - 853*s13^2*s23^2 - 
                939*s13*s23^3 + 60*s23^4) + 2*s12^5*(54*s13^5 + 
                63*s13^4*s23 + 1687*s13^3*s23^2 + 1611*s13^2*s23^3 - 
                455*s13*s23^4 + 30*s23^5) + s12^4*(252*s13^6 + 72*s13^5*s23 - 
                1459*s13^4*s23^2 + 3039*s13^3*s23^3 + 6716*s13^2*s23^4 + 
                1214*s13*s23^5 + 20*s23^6) + s12^2*s13*s23*(270*s13^6 + 
                2565*s13^5*s23 - 1915*s13^4*s23^2 - 7316*s13^3*s23^3 - 
                2760*s13^2*s23^4 - 641*s13*s23^5 + 237*s23^6) + 
              4*s12^3*s13*(27*s13^6 + 90*s13^5*s23 - 735*s13^4*s23^2 - 
                1896*s13^3*s23^3 - 691*s13^2*s23^4 + 547*s13*s23^5 + 
                341*s23^6) - 2*s12*s13*s23*(9*s13^7 + 103*s13^6*s23 - 
                1545*s13^5*s23^2 - 1802*s13^4*s23^3 + 225*s13^3*s23^4 + 
                428*s13^2*s23^5 + 19*s13*s23^6 - 21*s23^7)) + 
            p2q^3*p3q^2*s13*(20*s13^4*s23^3*(s13 + s23)^3 - 9*s12^8*s23*(
                2*s13 + s23) + s12^7*(108*s13^3 + 270*s13^2*s23 - 
                206*s13*s23^2 - 357*s23^3) + s12*s13*s23^2*(s13 + s23)^2*(
                16*s13^4 - 971*s13^3*s23 + 1016*s13^2*s23^2 + 153*s13*s23^3 + 
                42*s23^4) + s12^6*(252*s13^4 + 360*s13^3*s23 + 2565*s13^2*
                 s23^2 + 3090*s13*s23^3 + 326*s23^4) + s12^5*(108*s13^5 + 
                72*s13^4*s23 - 2940*s13^3*s23^2 - 1915*s13^2*s23^3 + 
                3604*s13*s23^4 + 1796*s23^5) - s12^4*(108*s13^6 - 
                126*s13^5*s23 + 1459*s13^4*s23^2 + 7584*s13^3*s23^3 + 
                7316*s13^2*s23^4 + 450*s13*s23^5 - 1273*s23^6) + 
              s12^2*s23*(-108*s13^7 - 853*s13^6*s23 + 3222*s13^5*s23^2 + 
                6716*s13^4*s23^3 + 2188*s13^3*s23^4 - 641*s13^2*s23^5 - 
                38*s13*s23^6 + 42*s23^7) + s12^3*(-72*s13^7 + 18*s13^6*s23 + 
                3374*s13^5*s23^2 + 3039*s13^4*s23^3 - 2764*s13^3*s23^4 - 
                2760*s13^2*s23^5 - 856*s13*s23^6 + 193*s23^7)) + 
            p2q^4*p3q*s13*(-20*s13^4*(s13 - s23)*s23^2*(s13 + s23)^3 + 
              9*s12^7*s23*(2*s13 + s23)^2 - s12*s13*s23^2*(s13 + s23)^2*(
                43*s13^4 + 1033*s13^3*s23 - 287*s13^2*s23^2 - 71*s13*s23^3 - 
                14*s23^4) + s12^6*(-72*s13^4 - 216*s13^3*s23 + 516*s13^2*
                 s23^2 + 1031*s13*s23^3 + 352*s23^4) - s12^5*(198*s13^5 + 
                486*s13^4*s23 + 2191*s13^3*s23^2 + 2687*s13^2*s23^3 - 
                125*s13*s23^4 - 700*s23^5) - s12^4*(162*s13^6 + 252*s13^5*
                 s23 - 138*s13^4*s23^2 + 1684*s13^3*s23^3 + 3312*s13^2*
                 s23^4 + 1025*s13*s23^5 - 394*s23^6) + s12^3*(-18*s13^7 - 
                90*s13^6*s23 + 1840*s13^5*s23^2 + 4517*s13^4*s23^3 + 
                3281*s13^3*s23^4 + 590*s13^2*s23^5 - 235*s13*s23^6 + 
                51*s23^7) + s12^2*(18*s13^8 - 72*s13^7*s23 - 992*s13^6*
                 s23^2 + 873*s13^5*s23^3 + 4328*s13^4*s23^4 + 2643*s13^3*
                 s23^5 + 10*s13^2*s23^6 - 66*s13*s23^7 + 14*s23^8))) + 
          p1q^2*(-(p3q^4*s12*(s12 + s23)*(2*s12^7*(9*s13^2 - 10*s23^2) + 
               s13^2*s23^3*(s13 + s23)^2*(163*s13^2 - 139*s13*s23 + 
                 14*s23^2) - 2*s12^5*s23*(18*s13^3 + 384*s13^2*s23 + 
                 397*s13*s23^2 - 50*s23^3) + s12^6*(36*s13^3 - 54*s13^2*s23 - 
                 56*s13*s23^2 + 20*s23^3) - s12^2*s13*s23*(54*s13^5 + 
                 1486*s13^4*s23 + 882*s13^3*s23^2 - 1098*s13^2*s23^3 + 
                 19*s13*s23^4 - 49*s23^5) + 2*s12*s13*s23^2*(63*s13^5 - 
                 702*s13^4*s23 - 1020*s13^3*s23^2 - 329*s13^2*s23^3 - 
                 67*s13*s23^4 + 7*s23^5) + s12^4*(-36*s13^5 + 36*s13^4*s23 + 
                 1750*s13^3*s23^2 + 2001*s13^2*s23^3 - 247*s13*s23^4 + 
                 60*s23^5) + 2*s12^3*s13*(-9*s13^5 - 18*s13^4*s23 + 
                 435*s13^3*s23^2 + 1786*s13^2*s23^3 + 1525*s13*s23^4 + 
                 263*s23^5))) + p2q^4*s13*(s13 + s23)*
             (20*s13^4*(s13 - 3*s23)*s23^2*(s13 + s23)^2 + s12^6*(18*s13^3 + 
                54*s13^2*s23 - 126*s13*s23^2 - 163*s23^3) + s12^5*(36*s13^4 + 
                36*s13^3*s23 + 1486*s13^2*s23^2 + 1404*s13*s23^3 - 
                187*s23^4) + s12^4*s23*(-36*s13^4 - 870*s13^3*s23 + 
                882*s13^2*s23^2 + 2040*s13*s23^3 + 101*s23^4) + 
              s12*s13*s23^2*(56*s13^5 + 794*s13^4*s23 + 247*s13^3*s23^2 - 
                526*s13^2*s23^3 - 49*s13*s23^4 - 14*s23^5) + 
              s12^3*(-36*s13^6 + 36*s13^5*s23 - 1750*s13^4*s23^2 - 
                3572*s13^3*s23^3 - 1098*s13^2*s23^4 + 658*s13*s23^5 + 
                111*s23^6) + s12^2*(-18*s13^7 + 54*s13^6*s23 + 768*s13^5*
                 s23^2 - 2001*s13^4*s23^3 - 3050*s13^3*s23^4 + 19*s13^2*
                 s23^5 + 134*s13*s23^6 - 14*s23^7)) + p2q*p3q^3*s12*
             (s12^8*(-18*s13^2 + 20*s23^2) + s13^2*s23^3*(s13 + s23)^2*(
                175*s13^3 - 1550*s13^2*s23 + 427*s13*s23^2 - 84*s23^3) + 
              s12^7*(18*s13^3 + 90*s13^2*s23 + 33*s13*s23^2 - 20*s23^3) + 
              s12^6*(108*s13^4 - 54*s13^3*s23 + 1426*s13^2*s23^2 + 
                1739*s13*s23^3 - 140*s23^4) + s12^5*(36*s13^5 - 108*s13^4*
                 s23 - 6143*s13^3*s23^2 - 6564*s13^2*s23^3 + 1184*s13*s23^4 - 
                100*s23^5) + s12^2*s13*s23*(-126*s13^6 - 2254*s13^5*s23 + 
                7859*s13^4*s23^2 + 16662*s13^3*s23^3 + 7640*s13^2*s23^4 + 
                2658*s13*s23^5 - 139*s23^6) + s12*s13*s23^2*(75*s13^6 - 
                3864*s13^5*s23 - 1102*s13^4*s23^2 + 6560*s13^3*s23^3 + 
                4139*s13^2*s23^4 + 332*s13*s23^5 - 84*s23^6) + 
              s12^4*(-90*s13^6 + 180*s13^5*s23 + 808*s13^4*s23^2 - 
                9861*s13^3*s23^3 - 14670*s13^2*s23^4 - 2688*s13*s23^5 + 
                40*s23^6) + s12^3*(-54*s13^7 + 18*s13^6*s23 + 6035*s13^5*
                 s23^2 + 10648*s13^4*s23^3 + 570*s13^3*s23^4 - 4546*s13^2*
                 s23^5 - 2221*s13*s23^6 + 40*s23^7)) + p2q^2*p3q^2*
             (-20*s13^4*(s13 - 2*s23)*s23^3*(s13 + s23)^3 + s12^8*(54*s13^3 + 
                54*s13^2*s23 - 23*s13*s23^2 - 20*s23^3) + s12^7*(54*s13^4 - 
                180*s13^3*s23 + 679*s13^2*s23^2 + 1064*s13*s23^3 - 
                20*s23^4) - s12*s13^2*s23^2*(s13 + s23)^2*(23*s13^4 - 
                1110*s13^3*s23 + 3091*s13^2*s23^2 - 352*s13*s23^3 + 
                140*s23^4) - s12^6*(108*s13^5 + 126*s13^4*s23 + 6611*s13^3*
                 s23^2 + 8906*s13^2*s23^3 + 894*s13*s23^4 - 60*s23^5) + 
              s12^5*(-108*s13^6 + 216*s13^5*s23 + 6227*s13^4*s23^2 + 
                430*s13^3*s23^3 - 11938*s13^2*s23^4 - 4720*s13*s23^5 + 
                100*s23^6) + s12^2*s13*s23*(54*s13^7 + 679*s13^6*s23 - 
                8906*s13^5*s23^2 - 11938*s13^4*s23^3 + 2904*s13^3*s23^4 + 
                5875*s13^2*s23^5 + 424*s13*s23^6 - 140*s23^7) + 
              s12^4*(54*s13^7 - 126*s13^6*s23 + 6227*s13^5*s23^2 + 
                21272*s13^4*s23^3 + 18980*s13^3*s23^4 + 2904*s13^2*s23^5 - 
                2527*s13*s23^6 + 40*s23^7) + s12^3*s13*(54*s13^7 - 
                180*s13^6*s23 - 6611*s13^5*s23^2 + 430*s13^4*s23^3 + 
                18980*s13^3*s23^4 + 16160*s13^2*s23^5 + 5875*s13*s23^6 + 
                72*s23^7)) + p2q^3*p3q*s13*(20*s13^3*s23^2*(s13 + s23)^3*(
                s13^2 - 4*s13*s23 + 2*s23^2) + s12^7*(-54*s13^3 - 
                126*s13^2*s23 + 75*s13*s23^2 + 175*s23^3) + s12*s13*s23^
                2*(s13 + s23)^2*(33*s13^4 + 1673*s13^3*s23 - 2195*s13^2*
                 s23^2 + 29*s13*s23^3 - 84*s23^4) - 2*s12^6*(45*s13^4 - 
                9*s13^3*s23 + 1127*s13^2*s23^2 + 1932*s13*s23^3 + 
                600*s23^4) + s12^5*(36*s13^5 + 180*s13^4*s23 + 6035*s13^3*
                 s23^2 + 7859*s13^2*s23^3 - 1102*s13*s23^4 - 2498*s23^5) + 
              2*s12^4*(54*s13^6 - 54*s13^5*s23 + 404*s13^4*s23^2 + 
                5324*s13^3*s23^3 + 8331*s13^2*s23^4 + 3280*s13*s23^5 - 
                390*s23^6) + s12^3*(18*s13^7 - 54*s13^6*s23 - 6143*s13^5*
                 s23^2 - 9861*s13^4*s23^3 + 570*s13^3*s23^4 + 7640*s13^2*
                 s23^5 + 4139*s13*s23^6 + 259*s23^7) - 2*s12^2*(9*s13^8 - 
                45*s13^7*s23 - 713*s13^6*s23^2 + 3282*s13^5*s23^3 + 
                7335*s13^4*s23^4 + 2273*s13^3*s23^5 - 1329*s13^2*s23^6 - 
                166*s13*s23^7 + 42*s23^8)))))/(72*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12^2*s13^2*(s12 + s13)*s23^2*(s12 + s23)*
         (s13 + s23)*(-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*
           (s12 + s23) - p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (-9*p1q^7*s23^2*(10*s13^3*s23^4*(s13 + s23)^2 + s12*s13^3*s23^3*
            (37*s13^2 + 84*s13*s23 + 47*s23^2) + s12^2*s13^3*s23^2*
            (35*s13^2 + 107*s13*s23 + 72*s23^2) + 
           s12^5*(-72*s13^4 - 55*s13^3*s23 + 35*s13^2*s23^2 + 37*s13*s23^3 + 
             10*s23^4) + s12^3*s23*(-55*s13^5 - 58*s13^4*s23 + 
             32*s13^3*s23^2 + 72*s13^2*s23^3 + 47*s13*s23^4 + 10*s23^5) + 
           s12^4*(-72*s13^5 - 182*s13^4*s23 - 58*s13^3*s23^2 + 
             107*s13^2*s23^3 + 84*s13*s23^4 + 20*s23^5)) + 
         9*(p2q + p3q)^2*s23*(p2q^5*s13^4*(-10*s13^3*(s13 + s23)^2*
              (s13 + 2*s23) + 9*s12^5*(4*s13 + 3*s23) + 
             9*s12^4*(10*s13^2 + 13*s13*s23 + 4*s23^2) + 
             s12^3*(62*s13^3 + 150*s13^2*s23 + 97*s13*s23^2 + 9*s23^3) - 
             s12*s13^2*(30*s13^3 + 83*s13^2*s23 + 66*s13*s23^2 + 13*s23^3) + 
             s12^2*s13*(-12*s13^3 + 17*s13^2*s23 + 63*s13*s23^2 + 34*
                s23^3)) + p3q^5*s12^4*(-10*s12^6 - 10*s12^5*(3*s13 + 4*s23) + 
             9*s13^3*s23*(3*s13^2 + 4*s13*s23 + s23^2) - 
             s12^4*(12*s13^2 + 83*s13*s23 + 50*s23^2) + 
             s12^3*(62*s13^3 + 17*s13^2*s23 - 66*s13*s23^2 - 20*s23^3) + 
             s12^2*s13*(90*s13^3 + 150*s13^2*s23 + 63*s13*s23^2 - 13*s23^3) + 
             s12*s13^2*(36*s13^3 + 117*s13^2*s23 + 97*s13*s23^2 + 34*
                s23^3)) + p2q^4*p3q*s13^3*(10*s13^3*s23*(s13 + s23)^2*
              (s13 + 2*s23) - s12^6*(47*s13 + 2*s23) + 
             s12^5*(-87*s13^2 - 46*s13*s23 + 5*s23^2) + s12*s13^2*
              (s13 + s23)^2*(23*s13^2 + 73*s13*s23 + 13*s23^2) - 
             2*s12^4*(5*s13^3 + 56*s13^2*s23 + 30*s13*s23^2 + s23^3) + 
             s12^2*s13*(69*s13^4 + 182*s13^3*s23 + 93*s13^2*s23^2 - 44*s13*
                s23^3 - 34*s23^4) + s12^3*(76*s13^4 + 5*s13^3*s23 - 168*s13^2*
                s23^2 - 113*s13*s23^3 - 9*s23^4)) + p2q^2*p3q^3*s12^2*s13*
            (s12^6*(9*s13 - 13*s23) + s12^5*(45*s13^2 - 20*s13*s23 - 49*
                s23^2) - 2*s13^3*s23*(11*s13^3 + 34*s13^2*s23 + 40*s13*
                s23^2 + 17*s23^3) - s12^4*(2*s13^3 - 28*s13^2*s23 + 56*s13*
                s23^2 + 49*s23^3) - s12^2*s13*(87*s13^4 + 165*s13^3*s23 + 70*
                s13^2*s23^2 + 15*s13*s23^3 + 6*s23^4) - s12*s13^2*
              (11*s13^4 + 130*s13^3*s23 + 221*s13^2*s23^2 + 121*s13*s23^3 + 9*
                s23^4) - s12^3*(114*s13^4 + 22*s13^3*s23 - 4*s13^2*s23^2 + 23*
                s13*s23^3 + 13*s23^4)) + p2q*p3q^4*s12^3*
            (s12^6*(23*s13 + 10*s23) + s12^5*(69*s13^2 + 119*s13*s23 + 40*
                s23^2) - s13^3*s23*(2*s13^3 - 5*s13^2*s23 + 2*s13*s23^2 + 9*
                s23^3) + 2*s12^4*(38*s13^3 + 91*s13^2*s23 + 91*s13*s23^2 + 25*
                s23^3) - s12^2*s13*(87*s13^4 + 112*s13^3*s23 + 168*s13^2*
                s23^2 + 44*s13*s23^3 - 13*s23^4) + s12^3*(-10*s13^4 + 5*s13^3*
                s23 + 93*s13^2*s23^2 + 99*s13*s23^3 + 20*s23^4) - 
             s12*s13^2*(47*s13^4 + 46*s13^3*s23 + 60*s13^2*s23^2 + 113*s13*
                s23^3 + 34*s23^4)) - p2q^3*p3q^2*s12*s13^2*
            (11*s12^6*(s13 + 2*s23) + s12^5*(87*s13^2 + 130*s13*s23 + 68*
                s23^2) + s13^3*s23*(13*s13^3 + 49*s13^2*s23 + 49*s13*s23^2 + 
               13*s23^3) + s12^4*(114*s13^3 + 165*s13^2*s23 + 221*s13*s23^2 + 
               80*s23^3) + s12*s13^2*(-9*s13^4 + 20*s13^3*s23 + 56*s13^2*
                s23^2 + 23*s13*s23^3 + 6*s23^4) + s12^2*s13*(-45*s13^4 - 28*
                s13^3*s23 - 4*s13^2*s23^2 + 15*s13*s23^3 + 9*s23^4) + 
             s12^3*(2*s13^4 + 22*s13^3*s23 + 70*s13^2*s23^2 + 121*s13*s23^3 + 
               34*s23^4))) + p1q^6*s23*(p2q*(10*s13^2*s23^4*(s13 + s23)^2*
              (45*s13^2 - 2*s13*s23 + 16*s23^2) - 9*s12^6*(72*s13^4 + 64*
                s13^3*s23 - 26*s13^2*s23^2 - 37*s13*s23^3 - 10*s23^4) + 
             s12*s13^2*s23^3*(1332*s13^4 + 2788*s13^3*s23 + 1513*s13^2*
                s23^2 + 620*s13*s23^3 + 563*s23^4) + s12^5*(-648*s13^5 + 711*
                s13^4*s23 + 1492*s13^3*s23^2 + 961*s13^2*s23^3 + 583*s13*
                s23^4 + 160*s23^5) + s12^2*s23^2*(864*s13^6 + 2923*s13^5*
                s23 + 1747*s13^4*s23^2 + 821*s13^3*s23^3 + 1536*s13^2*s23^4 + 
               563*s13*s23^5 + 160*s23^6) + s12^4*(-1296*s13^6 - 1080*s13^5*
                s23 + 3141*s13^4*s23^2 + 3288*s13^3*s23^3 + 1198*s13^2*
                s23^4 + 550*s13*s23^5 + 210*s23^6) + s12^3*s23*
              (-1719*s13^6 + 7*s13^5*s23 + 2649*s13^4*s23^2 + 2126*s13^3*
                s23^3 + 1694*s13^2*s23^4 + 863*s13*s23^5 + 300*s23^6)) + 
           p3q*(10*s13^2*s23^4*(s13 + s23)^2*(9*s13^2 - 2*s13*s23 + 16*
                s23^2) - 9*s12^6*(144*s13^4 + 191*s13^3*s23 - 96*s13^2*
                s23^2 - 148*s13*s23^3 - 50*s23^4) + s12*s13^2*s23^3*
              (333*s13^4 + 583*s13^3*s23 + 550*s13^2*s23^2 + 863*s13*s23^3 + 
               563*s23^4) + s12^5*(-648*s13^5 - 1080*s13^4*s23 + 7*s13^3*
                s23^2 + 2923*s13^2*s23^3 + 2788*s13*s23^4 + 880*s23^5) + 
             s12^2*s23^2*(234*s13^6 + 961*s13^5*s23 + 1198*s13^4*s23^2 + 1694*
                s13^3*s23^3 + 1536*s13^2*s23^4 + 563*s13*s23^5 + 160*s23^6) + 
             s12^3*s23*(-576*s13^6 + 1492*s13^5*s23 + 3288*s13^4*s23^2 + 2126*
                s13^3*s23^3 + 821*s13^2*s23^4 + 620*s13*s23^5 + 300*s23^6) + 
             s12^4*(-648*s13^6 + 711*s13^5*s23 + 3141*s13^4*s23^2 + 2649*
                s13^3*s23^3 + 1747*s13^2*s23^4 + 1513*s13*s23^5 + 570*
                s23^6))) - p1q*(p3q^6*s12^3*(s12^6*(153*s13 - 250*s23)*s23 + 
             s13^3*s23^2*(324*s13^3 + 301*s13^2*s23 - 102*s13*s23^2 - 487*
                s23^3) + 3*s12^5*(216*s13^3 + 75*s13^2*s23 - 310*s13*s23^2 - 
               460*s23^3) + s12^4*(648*s13^4 - 2389*s13^2*s23^2 - 3377*s13*
                s23^3 - 2010*s23^4) + s12*s13^2*s23*(405*s13^4 + 553*s13^3*
                s23 + 1044*s13^2*s23^2 - 118*s13*s23^3 + 208*s23^4) - 
             s12^2*s13*s23*(153*s13^4 - 1155*s13^3*s23 + 810*s13^2*s23^2 + 
               1376*s13*s23^3 + 428*s23^4) - s12^3*s23*(-18*s13^4 + 1755*
                s13^3*s23 + 4198*s13^2*s23^2 + 2722*s13*s23^3 + 880*s23^4)) + 
           p2q^6*s13^3*(81*s12^6*s23*(5*s13 + 4*s23) - 10*s13^3*s23^2*
              (s13 + s23)^2*(25*s13 + 88*s23) + s12^5*s23*(-153*s13^2 + 553*
                s13*s23 + 301*s23^2) + s12*s13^2*s23*(153*s13^4 - 930*s13^3*
                s23 - 3377*s13^2*s23^2 - 2722*s13*s23^3 - 428*s23^4) + 
             3*s12^4*(216*s13^4 + 6*s13^3*s23 + 385*s13^2*s23^2 + 348*s13*
                s23^3 - 34*s23^4) + s12^2*s13*s23*(225*s13^4 - 2389*s13^3*
                s23 - 4198*s13^2*s23^2 - 1376*s13*s23^3 + 208*s23^4) + 
             s12^3*(648*s13^5 - 1755*s13^3*s23^2 - 810*s13^2*s23^3 - 118*s13*
                s23^4 - 487*s23^5)) + p2q*p3q^5*s12^2*(90*s12^8*s23 + 
             2*s12^7*(333*s13 - 115*s23)*s23 + 2*s12^6*(648*s13^3 - 18*s13^2*
                s23 - 556*s13*s23^2 - 1075*s23^3) + s13^3*s23^2*
              (225*s13^4 + 847*s13^3*s23 + 1181*s13^2*s23^2 + 1127*s13*
                s23^3 + 568*s23^4) - s12^5*(1296*s13^4 + 3474*s13^3*s23 + 
               5702*s13^2*s23^2 + 4287*s13*s23^3 + 2550*s23^4) - 
             s12^4*(2592*s13^5 + 3456*s13^4*s23 + 2473*s13^3*s23^2 + 5336*
                s13^2*s23^3 + 1183*s13*s23^4 + 20*s23^5) + 2*s12*s13^2*s23*
              (-90*s13^5 + 1047*s13^4*s23 + 1421*s13^3*s23^2 + 1697*s13^2*
                s23^3 + 441*s13*s23^4 + 49*s23^5) + s12^2*s13*s23*
              (2106*s13^5 + 1088*s13^4*s23 + 6577*s13^3*s23^2 + 5028*s13^2*
                s23^3 + 2060*s13*s23^4 + 311*s23^5) + s12^3*s23*
              (-2196*s13^5 + 5454*s13^4*s23 + 5595*s13^3*s23^2 + 1752*s13^2*
                s23^3 + 1637*s13*s23^4 + 700*s23^5)) + p2q^5*p3q*s13^2*
            (-45*s12^7*(4*s13 - 5*s23)*s23 + s12^6*s23*(2106*s13^2 + 2094*s13*
                s23 + 847*s23^2) + 10*s13^3*s23*(s13 + s23)^2*
              (9*s13^3 - 41*s13^2*s23 - 142*s13*s23^2 + 70*s23^3) + 
             s12^5*(-2592*s13^4 - 2196*s13^3*s23 + 1088*s13^2*s23^2 + 2842*
                s13*s23^3 + 1181*s23^4) + 2*s12^2*s13*s23*(-18*s13^5 - 2851*
                s13^4*s23 - 2668*s13^3*s23^2 + 876*s13^2*s23^3 + 1030*s13*
                s23^4 + 49*s23^5) + s12*s13^2*s23*(666*s13^5 - 1112*s13^4*
                s23 - 4287*s13^3*s23^2 - 1183*s13^2*s23^3 + 1637*s13*s23^4 + 
               311*s23^5) + s12^4*(-1296*s13^5 - 3456*s13^4*s23 + 5454*s13^3*
                s23^2 + 6577*s13^2*s23^3 + 3394*s13*s23^4 + 1127*s23^5) + 
             s12^3*(1296*s13^6 - 3474*s13^5*s23 - 2473*s13^4*s23^2 + 5595*
                s13^3*s23^3 + 5028*s13^2*s23^4 + 882*s13*s23^5 + 568*
                s23^6)) + p2q^4*p3q^2*s13*(-9*s12^8*(22*s13 - 3*s23)*s23 + 
             s12^7*s23*(-909*s13^2 + 599*s13*s23 + 177*s23^2) + 
             10*s13^4*s23*(s13 + s23)^2*(9*s13^3 - 25*s13^2*s23 - 47*s13*
                s23^2 + 122*s23^3) + s12*s13^3*s23*(s13 + s23)^2*
              (396*s13^3 - 1747*s13^2*s23 + 2456*s13*s23^2 + 894*s23^3) + 
             s12^6*(3888*s13^4 + 7479*s13^3*s23 + 5895*s13^2*s23^2 + 2543*s13*
                s23^3 + 329*s23^4) + s12^5*(-1296*s13^5 + 2448*s13^4*s23 + 
               822*s13^3*s23^2 + 3768*s13^2*s23^3 + 2475*s13*s23^4 + 505*
                s23^5) + s12^2*s13^2*s23*(-1593*s13^5 - 4808*s13^4*s23 + 4031*
                s13^3*s23^2 + 11147*s13^2*s23^3 + 5994*s13*s23^4 + 743*
                s23^5) + 2*s12^4*(-2268*s13^6 - 621*s13^5*s23 + 5404*s13^4*
                s23^2 + 2984*s13^3*s23^3 + 2112*s13^2*s23^4 + 954*s13*s23^5 + 
               163*s23^6) + s12^3*s13*(648*s13^6 - 7119*s13^5*s23 + 6526*
                s13^4*s23^2 + 19375*s13^3*s23^3 + 12112*s13^2*s23^4 + 2774*
                s13*s23^5 + 909*s23^6)) + p2q^3*p3q^3*
            (-9*s12^9*s23*(13*s13 + 10*s23) - 10*s13^5*s23^2*(s13 + s23)^2*
              (9*s13^2 - 7*s13*s23 - 52*s23^2) - 2*s12^8*s23*(765*s13^2 + 373*
                s13*s23 + 55*s23^2) + s12^7*(-2592*s13^4 - 4374*s13^3*s23 - 
               1121*s13^2*s23^2 + 445*s13*s23^3 + 570*s23^4) + 
             s12*s13^4*s23*(-117*s13^5 - 746*s13^4*s23 + 445*s13^3*s23^2 + 
               2849*s13^2*s23^3 + 2684*s13*s23^4 + 909*s23^5) + 
             s12^3*s13^2*s23*(-4374*s13^5 + 11369*s13^4*s23 + 14197*s13^3*
                s23^2 + 7694*s13^2*s23^3 + 2810*s13*s23^4 + 986*s23^5) + 
             s12^2*s13^3*s23*(-1530*s13^5 - 1121*s13^4*s23 + 6865*s13^3*
                s23^2 + 9313*s13^2*s23^3 + 4923*s13*s23^4 + 986*s23^5) + 
             s12^6*(5184*s13^5 + 8010*s13^4*s23 + 11369*s13^3*s23^2 + 6865*
                s13^2*s23^3 + 2849*s13*s23^4 + 1110*s23^5) + 
             s12^5*(5184*s13^6 + 8982*s13^5*s23 + 6796*s13^4*s23^2 + 14197*
                s13^3*s23^3 + 9313*s13^2*s23^4 + 2684*s13*s23^5 + 520*
                s23^6) + s12^4*s13*(-2592*s13^6 + 8010*s13^5*s23 + 6796*s13^4*
                s23^2 + 870*s13^3*s23^3 + 7694*s13^2*s23^4 + 4923*s13*s23^5 + 
               909*s23^6)) + p2q^2*p3q^4*s12*(90*s12^9*s23 + 
             2*s12^8*(198*s13 - 35*s23)*s23 + s12^7*(648*s13^3 - 1593*s13^2*
                s23 - 955*s13*s23^2 - 880*s23^3) - s12^6*(4536*s13^4 + 7119*
                s13^3*s23 + 4808*s13^2*s23^2 + 642*s13*s23^3 - 30*s23^4) + 
             s13^4*s23^2*(27*s13^4 + 177*s13^3*s23 + 329*s13^2*s23^2 + 505*
                s13*s23^3 + 326*s23^4) + s12^2*s13^2*s23*(-909*s13^5 + 5895*
                s13^4*s23 + 3768*s13^3*s23^2 + 4224*s13^2*s23^3 + 2774*s13*
                s23^4 + 743*s23^5) + s12^3*s13*s23*(7479*s13^5 + 822*s13^4*
                s23 + 5968*s13^3*s23^2 + 12112*s13^2*s23^3 + 5994*s13*s23^4 + 
               894*s23^5) + s12*s13^3*s23*(-198*s13^5 + 599*s13^4*s23 + 2543*
                s13^3*s23^2 + 2475*s13^2*s23^3 + 1908*s13*s23^4 + 909*
                s23^5) + s12^5*(-1296*s13^5 - 1242*s13^4*s23 + 6526*s13^3*
                s23^2 + 4031*s13^2*s23^3 + 4059*s13*s23^4 + 1970*s23^5) + 
             s12^4*(3888*s13^6 + 2448*s13^5*s23 + 10808*s13^4*s23^2 + 19375*
                s13^3*s23^3 + 11147*s13^2*s23^4 + 4244*s13*s23^5 + 1220*
                s23^6))) + p1q^5*(p3q^2*(s12*s13^2*s23^4*(s13 + s23)^2*
              (263*s13^2 - 626*s13*s23 - 160*s23^2) + 10*s13^2*s23^5*
              (s13 + s23)^2*(2*s13^2 - 9*s13*s23 + 16*s23^2) + 
             9*s12^7*(72*s13^4 + 208*s13^3*s23 - 87*s13^2*s23^2 - 222*s13*
                s23^3 - 100*s23^4) + s12^6*(648*s13^5 - 1692*s13^4*s23 - 3625*
                s13^3*s23^2 - 3254*s13^2*s23^3 - 3612*s13*s23^4 - 1720*
                s23^5) - s12^5*s23*(-396*s13^5 + 3049*s13^4*s23 + 3445*s13^3*
                s23^2 + 542*s13^2*s23^3 + 2015*s13*s23^4 + 1490*s23^5) + 
             s12^4*s23*(-1872*s13^6 + 2225*s13^5*s23 + 3384*s13^4*s23^2 + 337*
                s13^3*s23^3 - 1825*s13^2*s23^4 - 2590*s13*s23^5 - 1260*
                s23^6) - s12^2*s23^3*(70*s13^6 + 361*s13^5*s23 + 3146*s13^4*
                s23^2 + 4029*s13^3*s23^3 + 1118*s13^2*s23^4 - 486*s13*s23^5 - 
               160*s23^6) - s12^3*s23^2*(1780*s13^6 - 1365*s13^5*s23 - 611*
                s13^4*s23^2 + 4208*s13^3*s23^3 + 4552*s13^2*s23^4 + 1703*s13*
                s23^5 + 430*s23^6)) - p2q^2*(10*s13^2*s23^4*(s13 + s23)^2*
              (90*s13^3 - 8*s13^2*s23 + 75*s13*s23^2 - 16*s23^3) + 
             s12^6*s23*(1872*s13^4 + 1780*s13^3*s23 + 70*s13^2*s23^2 - 263*
                s13*s23^3 - 20*s23^4) + s12*s13^2*s23^3*(1998*s13^5 + 3612*
                s13^4*s23 + 2015*s13^3*s23^2 + 2590*s13^2*s23^3 + 1703*s13*
                s23^4 - 486*s23^5) + s12^5*(-648*s13^6 - 396*s13^5*s23 - 2225*
                s13^4*s23^2 - 1365*s13^3*s23^3 + 361*s13^2*s23^4 + 100*s13*
                s23^5 + 50*s23^6) + s12^4*s13*(-648*s13^6 + 1692*s13^5*s23 + 
               3049*s13^4*s23^2 - 3384*s13^3*s23^3 - 611*s13^2*s23^4 + 3146*
                s13*s23^5 + 1149*s23^6) + s12^3*s23*(-1872*s13^7 + 3625*s13^6*
                s23 + 3445*s13^5*s23^2 - 337*s13^4*s23^3 + 4208*s13^3*s23^4 + 
               4029*s13^2*s23^5 + 946*s13*s23^6 - 230*s23^7) + 
             s12^2*s23^2*(783*s13^7 + 3254*s13^6*s23 + 542*s13^5*s23^2 + 1825*
                s13^4*s23^3 + 4552*s13^3*s23^4 + 1118*s13^2*s23^5 + 160*s13*
                s23^6 - 160*s23^7)) + p2q*p3q*(-10*s13^2*s23^4*(s13 + s23)^2*
              (36*s13^3 - s13^2*s23 + 93*s13*s23^2 - 32*s23^3) - 
             9*s12^7*s23*(-64*s13^3 + 52*s13^2*s23 + 111*s13*s23^2 + 40*
                s23^3) - s12*s13^2*s23^3*(999*s13^5 + 1243*s13^4*s23 + 2223*
                s13^3*s23^2 + 5467*s13^2*s23^3 + 3162*s13*s23^4 - 326*
                s23^5) - s12^6*(1296*s13^5 + 7452*s13^4*s23 + 7340*s13^3*
                s23^2 + 1605*s13^2*s23^3 + 1243*s13*s23^4 + 710*s23^5) - 
             s12^5*(1296*s13^6 + 4392*s13^5*s23 + 6260*s13^4*s23^2 + 4825*
                s13^3*s23^3 + 1317*s13^2*s23^4 + 2223*s13*s23^5 + 1270*
                s23^6) - s12^4*s23*(7452*s13^6 + 6260*s13^5*s23 + 162*s13^4*
                s23^2 + 4560*s13^3*s23^3 + 8139*s13^2*s23^4 + 5467*s13*
                s23^5 + 1530*s23^6) - s12^2*s23^2*(468*s13^7 + 1605*s13^6*
                s23 + 1317*s13^5*s23^2 + 8139*s13^4*s23^3 + 9661*s13^3*
                s23^4 + 2236*s13^2*s23^5 - 326*s13*s23^6 - 320*s23^7) - 
             s12^3*s23*(-576*s13^7 + 7340*s13^6*s23 + 4825*s13^5*s23^2 + 4560*
                s13^4*s23^3 + 11656*s13^3*s23^4 + 9661*s13^2*s23^5 + 3162*s13*
                s23^6 + 290*s23^7))) - 
         p1q^2*(p3q^5*s12^2*(-90*s12^8*s23 + 8*s12^7*(27*s13 - 20*s23)*s23 + 
             s12^6*(1944*s13^3 + 648*s13^2*s23 - 473*s13*s23^2 - 110*s23^3) + 
             s13^3*s23^3*(275*s13^3 + 1025*s13^2*s23 + 1721*s13*s23^2 + 971*
                s23^3) + 2*s12^5*(648*s13^4 - 99*s13^3*s23 - 1083*s13^2*
                s23^2 + 220*s13*s23^3 + 810*s23^4) + s12*s13^2*s23^2*
              (1238*s13^4 + 1728*s13^3*s23 + 3914*s13^2*s23^2 + 2785*s13*
                s23^3 + 905*s23^4) + s12^2*s13*s23*(1368*s13^5 + 1018*s13^4*
                s23 + 7358*s13^3*s23^2 + 8320*s13^2*s23^3 + 5577*s13*s23^4 + 
               582*s23^5) + s12^3*s23*(-990*s13^5 + 6776*s13^4*s23 + 8247*
                s13^3*s23^2 + 9600*s13^2*s23^3 + 5088*s13*s23^4 + 1720*
                s23^5) + s12^4*(-648*s13^5 + 990*s13^4*s23 - 41*s13^3*s23^2 + 
               2114*s13^2*s23^3 + 5635*s13*s23^4 + 3380*s23^5)) + 
           p2q*p3q^4*s12*(-90*s12^9*s23 + 2*s12^8*(243*s13 - 250*s23)*s23 + 
             s12^7*(2592*s13^3 - 819*s13^2*s23 - 2671*s13*s23^2 - 1030*
                s23^3) - s12^6*(5832*s13^4 + 9729*s13^3*s23 + 9096*s13^2*
                s23^2 + 1780*s13*s23^3 - 2040*s23^4) + s13^3*s23^3*
              (256*s13^4 + 825*s13^3*s23 + 749*s13^2*s23^2 - 223*s13*s23^3 - 
               403*s23^4) + s12*s13^2*s23^2*(476*s13^5 + 2316*s13^4*s23 + 
               2732*s13^3*s23^2 + 2158*s13^2*s23^3 + 189*s13*s23^4 - 807*
                s23^5) + s12^5*(-6480*s13^5 - 3780*s13^4*s23 + 1524*s13^3*
                s23^2 + 4256*s13^2*s23^3 + 8490*s13*s23^4 + 4600*s23^5) + 
             s12^3*s23*(8109*s13^6 - 4513*s13^5*s23 + 7107*s13^4*s23^2 + 
               11786*s13^3*s23^3 + 5882*s13^2*s23^4 - 1149*s13*s23^5 - 1020*
                s23^6) + s12^2*s13*s23*(-387*s13^6 + 6299*s13^5*s23 + 1140*
                s13^4*s23^2 + 3632*s13^3*s23^3 + 297*s13^2*s23^4 - 1687*s13*
                s23^5 - 271*s23^6) + s12^4*(1944*s13^6 - 6390*s13^5*s23 + 
               13665*s13^4*s23^2 + 20487*s13^3*s23^3 + 17945*s13^2*s23^4 + 
               6235*s13*s23^5 + 920*s23^6)) + p2q^5*s13^2*
            (s12^6*s23*(1368*s13^2 + 1238*s13*s23 + 275*s23^2) - 
             10*s13^3*s23*(s13 + s23)^2*(9*s13^3 - 2*s13^2*s23 + 6*s13*
                s23^2 - 172*s23^3) + s12^5*(-648*s13^4 - 990*s13^3*s23 + 1018*
                s13^2*s23^2 + 1728*s13*s23^3 + 1025*s23^4) + 
             s12*s13^2*s23*(216*s13^5 - 473*s13^4*s23 + 440*s13^3*s23^2 + 
               5635*s13^2*s23^3 + 5088*s13*s23^4 + 582*s23^5) + 
             s12^2*s13*s23*(648*s13^5 - 2166*s13^4*s23 + 2114*s13^3*s23^2 + 
               9600*s13^2*s23^3 + 5577*s13*s23^4 + 905*s23^5) + 
             s12^4*(1296*s13^5 + 990*s13^4*s23 + 6776*s13^3*s23^2 + 7358*
                s13^2*s23^3 + 3914*s13*s23^4 + 1721*s23^5) + 
             s12^3*(1944*s13^6 - 198*s13^5*s23 - 41*s13^4*s23^2 + 8247*s13^3*
                s23^3 + 8320*s13^2*s23^4 + 2785*s13*s23^5 + 971*s23^6)) + 
           p2q^4*p3q*s13*(s12^7*s23*(-387*s13^2 + 476*s13*s23 + 256*s23^2) - 
             10*s13^3*s23*(s13 + s23)^2*(9*s13^4 + 32*s13^3*s23 + 30*s13^2*
                s23^2 - 296*s13*s23^3 + 102*s23^4) + s12^6*(1944*s13^4 + 8109*
                s13^3*s23 + 6299*s13^2*s23^2 + 2316*s13*s23^3 + 825*s23^4) + 
             s12^5*(-6480*s13^5 - 6390*s13^4*s23 - 4513*s13^3*s23^2 + 1140*
                s13^2*s23^3 + 2732*s13*s23^4 + 749*s23^5) + 
             s12^2*s13*s23*(-819*s13^6 - 9096*s13^5*s23 + 4256*s13^4*s23^2 + 
               17945*s13^3*s23^3 + 5882*s13^2*s23^4 - 1687*s13*s23^5 - 807*
                s23^6) + s12*s13^2*s23*(486*s13^6 - 2671*s13^5*s23 - 1780*
                s13^4*s23^2 + 8490*s13^3*s23^3 + 6235*s13^2*s23^4 - 1149*s13*
                s23^5 - 271*s23^6) + s12^4*(-5832*s13^6 - 3780*s13^5*s23 + 
               13665*s13^4*s23^2 + 7107*s13^3*s23^3 + 3632*s13^2*s23^4 + 2158*
                s13*s23^5 - 223*s23^6) + s12^3*(2592*s13^7 - 9729*s13^6*s23 + 
               1524*s13^5*s23^2 + 20487*s13^4*s23^3 + 11786*s13^3*s23^4 + 297*
                s13^2*s23^5 + 189*s13*s23^6 - 403*s23^7)) + 
           p2q^3*p3q^2*(s12^8*s23*(-513*s13^2 - 249*s13*s23 + 250*s23^2) - 
             10*s13^4*s23^2*(s13 + s23)^2*(25*s13^3 - 10*s13^2*s23 - 153*s13*
                s23^2 + 152*s23^3) + s12*s13^3*s23*(s13 + s23)^2*
              (270*s13^4 - 2600*s13^3*s23 + 4875*s13^2*s23^2 - 1142*s13*
                s23^3 - 1417*s23^4) + s12^7*(-1944*s13^4 - 2295*s13^3*s23 + 
               1885*s13^2*s23^2 + 1530*s13*s23^3 + 790*s23^4) + 
             s12^6*(11664*s13^5 + 24570*s13^4*s23 + 23162*s13^3*s23^2 + 11184*
                s13^2*s23^3 + 3357*s13*s23^4 + 330*s23^5) + 
             s12^5*(3888*s13^6 + 9720*s13^5*s23 + 6078*s13^4*s23^2 + 13020*
                s13^3*s23^3 + 8196*s13^2*s23^4 + 659*s13*s23^5 - 710*s23^6) - 
             s12^2*s13^2*s23*(1980*s13^6 + 5098*s13^5*s23 - 11663*s13^4*
                s23^2 - 14591*s13^3*s23^3 + 1316*s13^2*s23^4 + 5107*s13*
                s23^5 + 1281*s23^6) + s12^3*s13*(648*s13^7 - 11439*s13^6*
                s23 + 19513*s13^5*s23^2 + 25011*s13^4*s23^3 + 5504*s13^3*
                s23^4 - 4541*s13^2*s23^5 - 3297*s13*s23^6 - 1549*s23^7) - 
             s12^4*(9072*s13^7 - 13059*s13^6*s23 - 18219*s13^5*s23^2 + 1663*
                s13^4*s23^3 - 2350*s13^3*s23^4 + 986*s13^2*s23^5 + 2468*s13*
                s23^6 + 500*s23^7)) + p2q^2*p3q^3*(10*s12^9*(27*s13 - 25*s23)*
              s23 + 10*s13^4*s23^3*(s13 + s23)^2*(25*s13^2 + 29*s13*s23 - 50*
                s23^2) + 4*s12^8*(162*s13^3 - 495*s13^2*s23 - 515*s13*s23^2 - 
               100*s23^3) - s12^7*(9072*s13^4 + 11439*s13^3*s23 + 5098*s13^2*
                s23^2 + 55*s13*s23^3 - 1480*s23^4) + s12*s13^3*s23^2*
              (-249*s13^5 + 1530*s13^4*s23 + 3357*s13^3*s23^2 + 659*s13^2*
                s23^3 - 2468*s13*s23^4 - 1549*s23^5) + 
             s12^6*(3888*s13^5 + 13059*s13^4*s23 + 19513*s13^3*s23^2 + 11663*
                s13^2*s23^3 + 6008*s13*s23^4 + 1640*s23^5) + 
             s12^5*(11664*s13^6 + 9720*s13^5*s23 + 18219*s13^4*s23^2 + 25011*
                s13^3*s23^3 + 14591*s13^2*s23^4 + 1174*s13*s23^5 - 1510*
                s23^6) + s12^3*s13*s23*(-2295*s13^6 + 23162*s13^5*s23 + 13020*
                s13^4*s23^2 + 2350*s13^3*s23^3 - 4541*s13^2*s23^4 - 5107*s13*
                s23^5 - 1417*s23^6) + s12^2*s13^2*s23*(-513*s13^6 + 1885*
                s13^5*s23 + 11184*s13^4*s23^2 + 8196*s13^3*s23^3 - 986*s13^2*
                s23^4 - 3297*s13*s23^5 - 1281*s23^6) - 
             s12^4*(1944*s13^7 - 24570*s13^6*s23 - 6078*s13^5*s23^2 + 1663*
                s13^4*s23^3 - 5504*s13^3*s23^4 + 1316*s13^2*s23^5 + 3976*s13*
                s23^6 + 1520*s23^7))) + 
         p1q^3*(p3q^4*s12*(-9*s12^8*s23*(37*s13 + 50*s23) + 
             s12^6*s23*(3924*s13^3 + 2304*s13^2*s23 - 745*s13*s23^2 - 1230*
                s23^3) + s13^3*s23^4*(243*s13^3 + 959*s13^2*s23 + 1279*s13*
                s23^2 + 563*s23^3) - s12^7*(1944*s13^3 + 297*s13^2*s23 - 128*
                s13*s23^2 + 820*s23^3) + s12*s13^2*s23^3*(-32*s13^4 + 1530*
                s13^3*s23 + 3335*s13^2*s23^2 + 3233*s13*s23^3 + 1370*s23^4) + 
             2*s12^5*(972*s13^5 + 225*s13^4*s23 + 323*s13^3*s23^2 - 1920*
                s13^2*s23^3 - 1090*s13*s23^4 - 60*s23^5) + s12^2*s13*s23^2*
              (-1886*s13^5 + 2521*s13^4*s23 + 6151*s13^3*s23^2 + 8973*s13^2*
                s23^3 + 4918*s13*s23^4 + 348*s23^5) + s12^4*s23*
              (3213*s13^5 - 6532*s13^4*s23 - 7238*s13^3*s23^2 - 3987*s13^2*
                s23^3 + 3550*s13*s23^4 + 2420*s23^5) + s12^3*s23*
              (-2421*s13^6 + 3030*s13^5*s23 + 92*s13^4*s23^2 + 3567*s13^3*
                s23^3 + 6002*s13^2*s23^4 + 4872*s13*s23^5 + 1680*s23^6)) + 
           p2q*p3q^3*(-9*s12^9*s23*(37*s13 + 40*s23) + 10*s13^3*s23^4*
              (s13 + s23)^2*(23*s13^2 + 43*s13*s23 - 16*s23^2) + 
             s12^8*(-1296*s13^3 + 702*s13^2*s23 + 895*s13*s23^2 - 1120*
                s23^3) + s12^7*(7776*s13^4 + 13563*s13^3*s23 + 1508*s13^2*
                s23^2 - 4467*s13*s23^3 - 2880*s23^4) + 
             s12^6*(3888*s13^5 - 2574*s13^4*s23 - 10138*s13^3*s23^2 - 18390*
                s13^2*s23^3 - 9305*s13*s23^4 - 780*s23^5) + 
             s12*s13^2*s23^3*(-539*s13^5 + 594*s13^4*s23 + 3981*s13^3*s23^2 + 
               4181*s13^2*s23^3 + 770*s13*s23^4 - 563*s23^5) + 
             s12^2*s13*s23^2*(-1282*s13^6 - 4351*s13^5*s23 + 2057*s13^4*
                s23^2 + 7652*s13^3*s23^3 + 4320*s13^2*s23^4 + 637*s13*s23^5 - 
               77*s23^6) + s12^4*s23*(-16272*s13^6 + 5537*s13^5*s23 + 6355*
                s13^4*s23^2 + 8472*s13^3*s23^3 + 13079*s13^2*s23^4 + 7447*s13*
                s23^5 + 1740*s23^6) + s12^5*(-5184*s13^6 + 4455*s13^5*s23 - 
               12480*s13^4*s23^2 - 19378*s13^3*s23^3 - 11596*s13^2*s23^4 + 
               3775*s13*s23^5 + 3740*s23^6) + s12^3*s23*(459*s13^7 - 14392*
                s13^6*s23 - 1430*s13^5*s23^2 + 9102*s13^4*s23^3 + 15099*s13^3*
                s23^4 + 8479*s13^2*s23^5 - 15*s13*s23^6 - 660*s23^7)) + 
           p2q^2*p3q^2*(s12^8*s23*(999*s13^2 + 803*s13*s23 - 210*s23^2) - 
             10*s13^3*s23^3*(s13 + s23)^2*(21*s13^3 + 28*s13^2*s23 - 181*s13*
                s23^2 + 82*s23^3) + s12^7*(4536*s13^4 + 7506*s13^3*s23 - 836*
                s13^2*s23^2 - 2992*s13*s23^3 - 700*s23^4) + 
             s12*s13^2*s23^2*(s13 + s23)^2*(803*s13^4 - 4598*s13^3*s23 + 3833*
                s13^2*s23^2 + 1124*s13*s23^3 - 640*s23^4) - 
             s12^6*(9720*s13^5 + 27243*s13^4*s23 + 27088*s13^3*s23^2 + 15269*
                s13^2*s23^3 + 4560*s13*s23^4 - 1040*s23^5) - 
             s12^5*(9720*s13^6 + 13068*s13^5*s23 + 19983*s13^4*s23^2 + 22040*
                s13^3*s23^3 + 4904*s13^2*s23^4 - 4192*s13*s23^5 - 2520*
                s23^6) + s12^2*s13*s23*(999*s13^7 - 836*s13^6*s23 - 15269*
                s13^5*s23^2 - 4904*s13^4*s23^3 + 11142*s13^3*s23^4 + 4486*
                s13^2*s23^5 - 1466*s13*s23^6 - 640*s23^7) + 
             2*s12^3*s23*(3753*s13^7 - 13544*s13^6*s23 - 11020*s13^5*s23^2 + 
               454*s13^4*s23^3 + 4767*s13^3*s23^4 + 2243*s13^2*s23^5 - 78*s13*
                s23^6 - 410*s23^7) + s12^4*(4536*s13^7 - 27243*s13^6*s23 - 
               19983*s13^5*s23^2 - 4214*s13^4*s23^3 + 908*s13^3*s23^4 + 11142*
                s13^2*s23^5 + 5441*s13*s23^6 + 170*s23^7)) + 
           p2q^4*s13*(-10*s13^3*s23^2*(s13 + s23)^2*(45*s13^3 - 8*s13^2*s23 + 
               94*s13*s23^2 - 168*s23^3) + s12^6*s23*(-2421*s13^3 - 1886*
                s13^2*s23 - 32*s13*s23^2 + 243*s23^3) + 
             s12^5*(1944*s13^5 + 3213*s13^4*s23 + 3030*s13^3*s23^2 + 2521*
                s13^2*s23^3 + 1530*s13*s23^4 + 959*s23^5) + 
             s12^4*s23*(450*s13^5 - 6532*s13^4*s23 + 92*s13^3*s23^2 + 6151*
                s13^2*s23^3 + 3335*s13*s23^4 + 1279*s23^5) + 
             s12*s13^2*s23*(-333*s13^6 + 128*s13^5*s23 - 745*s13^4*s23^2 - 
               2180*s13^3*s23^3 + 3550*s13^2*s23^4 + 4872*s13*s23^5 + 348*
                s23^6) + s12^2*s13*s23*(-297*s13^6 + 2304*s13^5*s23 - 3840*
                s13^4*s23^2 - 3987*s13^3*s23^3 + 6002*s13^2*s23^4 + 4918*s13*
                s23^5 + 1370*s23^6) + s12^3*(-1944*s13^7 + 3924*s13^6*s23 + 
               646*s13^5*s23^2 - 7238*s13^4*s23^3 + 3567*s13^3*s23^4 + 8973*
                s13^2*s23^5 + 3233*s13*s23^6 + 563*s23^7)) + 
           p2q^3*p3q*(s12^7*s23*(459*s13^3 - 1282*s13^2*s23 - 539*s13*s23^2 + 
               230*s23^3) - 20*s13^3*s23^2*(s13 + s23)^2*(18*s13^4 + 20*s13^3*
                s23 + 86*s13^2*s23^2 - 153*s13*s23^3 + 33*s23^4) - 
             s12^6*(5184*s13^5 + 16272*s13^4*s23 + 14392*s13^3*s23^2 + 4351*
                s13^2*s23^3 - 594*s13*s23^4 - 890*s23^5) + 
             s12^5*(3888*s13^6 + 4455*s13^5*s23 + 5537*s13^4*s23^2 - 1430*
                s13^3*s23^3 + 2057*s13^2*s23^4 + 3981*s13*s23^5 + 930*
                s23^6) + s12^2*s13*s23*(702*s13^7 + 1508*s13^6*s23 - 18390*
                s13^5*s23^2 - 11596*s13^4*s23^3 + 13079*s13^3*s23^4 + 8479*
                s13^2*s23^5 + 637*s13*s23^6 - 563*s23^7) - s12*s13^2*s23*
              (333*s13^7 - 895*s13^6*s23 + 4467*s13^5*s23^2 + 9305*s13^4*
                s23^3 - 3775*s13^3*s23^4 - 7447*s13^2*s23^5 + 15*s13*s23^6 + 
               77*s23^7) + s12^4*(7776*s13^7 - 2574*s13^6*s23 - 12480*s13^5*
                s23^2 + 6355*s13^4*s23^3 + 9102*s13^3*s23^4 + 7652*s13^2*
                s23^5 + 4181*s13*s23^6 + 110*s23^7) + 
             s12^3*(-1296*s13^8 + 13563*s13^7*s23 - 10138*s13^6*s23^2 - 19378*
                s13^5*s23^3 + 8472*s13^4*s23^4 + 15099*s13^3*s23^5 + 4320*
                s13^2*s23^6 + 770*s13*s23^7 - 160*s23^8))) + 
         p1q^4*(p3q^3*(-10*s13^3*s23^5*(s13 + s23)^2*(7*s13 + 16*s23) - 
             18*s12^8*(36*s13^3 - 13*s13^2*s23 - 74*s13*s23^2 - 50*s23^3) + 
             s12*s13^2*s23^4*(173*s13^4 - 57*s13^3*s23 - 1176*s13^2*s23^2 - 
               1669*s13*s23^3 - 723*s23^4) + s12^7*(1296*s13^4 + 5040*s13^3*
                s23 + 1591*s13^2*s23^2 + 1668*s13*s23^3 + 1680*s23^4) - 
             s12^2*s13*s23^3*(61*s13^5 - 918*s13^4*s23 + 251*s13^3*s23^2 + 
               2167*s13^2*s23^3 + 1284*s13*s23^4 + 77*s23^5) + 
             s12^5*s23*(3096*s13^5 - 3285*s13^4*s23 - 2011*s13^3*s23^2 + 2903*
                s13^2*s23^3 + 3930*s13*s23^4 + 1680*s23^5) + 
             s12^6*(1944*s13^5 + 216*s13^4*s23 - 896*s13^3*s23^2 - 2213*s13^2*
                s23^3 + 1350*s13*s23^4 + 1970*s23^5) + s12^3*s23^2*
              (-2176*s13^6 + 4316*s13^5*s23 + 8012*s13^4*s23^2 + 5623*s13^3*
                s23^3 - 198*s13^2*s23^4 - 2398*s13*s23^5 - 820*s23^6) + 
             s12^4*s23*(-2682*s13^6 + 5414*s13^5*s23 + 7963*s13^4*s23^2 + 
               10134*s13^3*s23^3 + 6836*s13^2*s23^4 + 595*s13*s23^5 - 330*
                s23^6)) + p2q*p3q^2*(9*s12^8*s23*(26*s13^2 + 111*s13*s23 + 60*
                s23^2) + 10*s13^2*s23^4*(s13 + s23)^2*(3*s13^3 + 31*s13^2*
                s23 - 91*s13*s23^2 + 16*s23^3) - s12*s13^2*s23^3*
              (s13 + s23)^2*(796*s13^3 - 3020*s13^2*s23 + 689*s13*s23^2 + 800*
                s23^3) + s12^7*(3240*s13^4 + 6840*s13^3*s23 - 58*s13^2*
                s23^2 + 251*s13*s23^3 + 1260*s23^4) - 
             s12^6*(1296*s13^5 + 11808*s13^4*s23 + 11096*s13^3*s23^2 + 2208*
                s13^2*s23^3 - 4135*s13*s23^4 - 2860*s23^5) + 
             s12^4*s23*(-17298*s13^6 - 5264*s13^5*s23 + 12450*s13^4*s23^2 + 
               22545*s13^3*s23^3 + 17870*s13^2*s23^4 + 3450*s13*s23^5 - 1020*
                s23^6) + s12^5*(-4536*s13^6 - 5112*s13^5*s23 - 11146*s13^4*
                s23^2 + 105*s13^3*s23^3 + 15703*s13^2*s23^4 + 11350*s13*
                s23^5 + 2530*s23^6) + s12^3*s23*(504*s13^7 - 14806*s13^6*
                s23 + 303*s13^5*s23^2 + 16805*s13^4*s23^3 + 11245*s13^3*
                s23^4 - 741*s13^2*s23^5 - 3171*s13*s23^6 - 1250*s23^7) + 
             s12^2*s23^2*(-929*s13^7 - 1127*s13^6*s23 + 9740*s13^5*s23^2 + 
               9469*s13^4*s23^3 - 2107*s13^3*s23^4 - 3302*s13^2*s23^5 - 154*
                s13*s23^6 + 160*s23^7)) + p2q^2*p3q*
            (s12^7*s23*(504*s13^3 - 929*s13^2*s23 - 796*s13*s23^2 + 30*
                s23^3) + 10*s13^2*s23^3*(s13 + s23)^2*(54*s13^4 + 18*s13^3*
                s23 + 196*s13^2*s23^2 - 157*s13*s23^3 + 16*s23^4) - 
             s12^6*(4536*s13^5 + 17298*s13^4*s23 + 14806*s13^3*s23^2 + 1127*
                s13^2*s23^3 - 1428*s13*s23^4 - 370*s23^5) + 
             s12^5*(-1296*s13^6 - 5112*s13^5*s23 - 5264*s13^4*s23^2 + 303*
                s13^3*s23^3 + 9740*s13^2*s23^4 + 4555*s13*s23^5 - 260*
                s23^6) + s12*s13^2*s23^2*(999*s13^6 + 251*s13^5*s23 + 4135*
                s13^4*s23^2 + 11350*s13^3*s23^3 + 3450*s13^2*s23^4 - 3171*s13*
                s23^5 - 154*s23^6) + s12^4*(3240*s13^7 - 11808*s13^6*s23 - 
               11146*s13^5*s23^2 + 12450*s13^4*s23^3 + 16805*s13^3*s23^4 + 
               9469*s13^2*s23^5 + 842*s13*s23^6 - 1350*s23^7) + 
             s12^3*s23*(6840*s13^7 - 11096*s13^6*s23 + 105*s13^5*s23^2 + 
               22545*s13^4*s23^3 + 11245*s13^3*s23^4 - 2107*s13^2*s23^5 - 
               2289*s13*s23^6 - 590*s23^7) + s12^2*s23*(234*s13^8 - 58*s13^7*
                s23 - 2208*s13^6*s23^2 + 15703*s13^5*s23^3 + 17870*s13^4*
                s23^4 - 741*s13^3*s23^5 - 3302*s13^2*s23^6 - 800*s13*s23^7 + 
               160*s23^8)) + p2q^3*(10*s13^3*s23^3*(s13 + s23)^2*
              (90*s13^3 - 12*s13^2*s23 + 131*s13*s23^2 - 82*s23^3) - 
             s12^6*s23*(2682*s13^4 + 2176*s13^3*s23 + 61*s13^2*s23^2 - 173*
                s13*s23^3 + 70*s23^4) + s12^5*(1944*s13^6 + 3096*s13^5*s23 + 
               5414*s13^4*s23^2 + 4316*s13^3*s23^3 + 918*s13^2*s23^4 - 57*s13*
                s23^5 - 300*s23^6) + s12*s13^2*s23^2*(1332*s13^6 + 1668*s13^5*
                s23 + 1350*s13^4*s23^2 + 3930*s13^3*s23^3 + 595*s13^2*s23^4 - 
               2398*s13*s23^5 - 77*s23^6) + s12^2*s13*s23*(234*s13^7 + 1591*
                s13^6*s23 - 2213*s13^5*s23^2 + 2903*s13^4*s23^3 + 6836*s13^3*
                s23^4 - 198*s13^2*s23^5 - 1284*s13*s23^6 - 723*s23^7) + 
             s12^4*(1296*s13^7 + 216*s13^6*s23 - 3285*s13^5*s23^2 + 7963*
                s13^4*s23^3 + 8012*s13^3*s23^4 - 251*s13^2*s23^5 - 1176*s13*
                s23^6 - 390*s23^7) - s12^3*(648*s13^8 - 5040*s13^7*s23 + 896*
                s13^6*s23^2 + 2011*s13^5*s23^3 - 10134*s13^4*s23^4 - 5623*
                s13^3*s23^5 + 2167*s13^2*s23^6 + 1669*s13*s23^7 + 160*
                s23^8))))/(72*ep*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12^3*
         s13^3*s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + 
       (-9*p1q^7*s23^2*(s12 + s23)^2*(s13 + s23)^2*
          (-10*s13^4*s23^4*(s13 + s23)^2 - s12^2*s13^3*s23^2*
            (73*s13^3 + 150*s13^2*s23 + 49*s13*s23^2 - 28*s23^3) - 
           2*s12*s13^3*s23^3*(11*s13^3 + 22*s13^2*s23 + 6*s13*s23^2 - 
             5*s23^3) + s12^6*(288*s13^4 + 223*s13^3*s23 - 73*s13^2*s23^2 - 
             22*s13*s23^3 - 10*s23^4) + s12^5*(576*s13^5 + 1209*s13^4*s23 + 
             507*s13^3*s23^2 - 150*s13^2*s23^3 - 44*s13*s23^4 - 20*s23^5) + 
           s12^3*s13*s23*(223*s13^5 + 507*s13^4*s23 + 448*s13^3*s23^2 + 
             182*s13^2*s23^3 + 28*s13*s23^4 + 10*s23^5) + 
           s12^4*(288*s13^6 + 1209*s13^5*s23 + 1412*s13^4*s23^2 + 
             448*s13^3*s23^3 - 49*s13^2*s23^4 - 12*s13*s23^5 - 10*s23^6)) - 
         9*(p2q + p3q)^2*(s12 + s13)*s23*(s12 + s23)*(s13 + s23)*
          (s12 + s13 + s23)*(p3q^5*s12^4*(-10*s12^6*s23 - 10*s12^5*s23*
              (s13 + 4*s23) + s13^3*s23^2*(139*s13^2 + 255*s13*s23 + 116*
                s23^2) + s12^4*(73*s13^3 + 51*s13^2*s23 - 38*s13*s23^2 - 50*
                s23^3) + 6*s12*s13^2*s23*(47*s13^3 + 121*s13^2*s23 + 75*s13*
                s23^2 + 5*s23^3) + s12^2*s13*(143*s13^4 + 687*s13^3*s23 + 629*
                s13^2*s23^2 + 111*s13*s23^3 - 18*s23^4) + 
             2*s12^3*(108*s13^4 + 184*s13^3*s23 + 66*s13^2*s23^2 - 23*s13*
                s23^3 - 10*s23^4)) + p2q^5*s13^4*(-10*s13^3*s23*(s13 + s23)^2*
              (s13 + 2*s23) - 2*s12*s13^2*s23*(s13 + s23)^2*(5*s13 + 9*s23) + 
             3*s12^2*s13*s23*(s13 + s23)^2*(17*s13 + 10*s23) + 
             3*s12^4*(s13 + s23)^2*(72*s13 + 85*s23) + 
             s12^5*(143*s13^2 + 282*s13*s23 + 139*s23^2) + 
             s12^3*(73*s13^4 + 368*s13^3*s23 + 629*s13^2*s23^2 + 450*s13*
                s23^3 + 116*s23^4)) + p2q^4*p3q*s13^3*
            (10*s13^3*s23^2*(s13 + s23)^2*(s13 + 2*s23) - 
             s12^6*(213*s13^2 + 341*s13*s23 + 96*s23^2) + 
             s12^5*(70*s13^3 - 268*s13^2*s23 - 603*s13*s23^2 - 265*s23^3) + 
             s12^4*(429*s13^4 + 1137*s13^3*s23 + 677*s13^2*s23^2 - 284*s13*
                s23^3 - 285*s23^4) + s12^2*s13*s23*(108*s13^4 + 243*s13^3*
                s23 + 124*s13^2*s23^2 - 41*s13*s23^3 - 30*s23^4) + 
             2*s12*s13^2*s23*(14*s13^4 + 47*s13^3*s23 + 56*s13^2*s23^2 + 32*
                s13*s23^3 + 9*s23^4) + s12^3*(146*s13^5 + 704*s13^4*s23 + 
               1079*s13^3*s23^2 + 561*s13^2*s23^3 - 76*s13*s23^4 - 116*
                s23^5)) + p2q*p3q^4*s12^3*(2*s12^6*s23*(14*s13 + 5*s23) + 
             2*s12^5*(73*s13^3 + 54*s13^2*s23 + 47*s13*s23^2 + 20*s23^3) - 
             s13^3*s23^2*(96*s13^3 + 265*s13^2*s23 + 285*s13*s23^2 + 116*
                s23^3) - s12*s13^2*s23*(341*s13^4 + 603*s13^3*s23 + 284*s13^2*
                s23^2 + 76*s13*s23^3 + 30*s23^4) + s12^4*(429*s13^4 + 704*
                s13^3*s23 + 243*s13^2*s23^2 + 112*s13*s23^3 + 50*s23^4) + 
             s12^2*s13*(-213*s13^5 - 268*s13^4*s23 + 677*s13^3*s23^2 + 561*
                s13^2*s23^3 - 41*s13*s23^4 + 18*s23^5) + 
             s12^3*(70*s13^5 + 1137*s13^4*s23 + 1079*s13^3*s23^2 + 124*s13^2*
                s23^3 + 64*s13*s23^4 + 20*s23^5)) + p2q^2*p3q^3*s12^2*s13*
            (s12^6*(73*s13^2 + 17*s13*s23 - 18*s23^2) + 
             2*s12^5*(105*s13^3 + 190*s13^2*s23 - 6*s13*s23^2 - 22*s23^3) - 
             5*s13^3*s23^2*(7*s13^3 + 26*s13^2*s23 + 29*s13*s23^2 + 10*
                s23^3) + s12*s13^2*s23*(24*s13^4 - 309*s13^3*s23 - 957*s13^2*
                s23^2 - 992*s13*s23^3 - 368*s23^4) - s12^4*(502*s13^4 + 48*
                s13^3*s23 - 373*s13^2*s23^2 + 135*s13*s23^3 + 24*s23^4) - 
             s12^3*(642*s13^5 + 2212*s13^4*s23 + 1643*s13^3*s23^2 + 371*s13^2*
                s23^3 + 158*s13*s23^4 - 2*s23^5) - s12^2*s13*(3*s13^5 + 897*
                s13^4*s23 + 2460*s13^3*s23^2 + 2251*s13^2*s23^3 + 805*s13*
                s23^4 + 52*s23^5)) - p2q^3*p3q^2*s12*s13^2*
            (s12^6*(3*s13^2 - 24*s13*s23 + 35*s23^2) + 2*s13^3*s23^2*
              (9*s13^3 + 22*s13^2*s23 + 12*s13*s23^2 - s23^3) + 
             s12^5*(642*s13^3 + 897*s13^2*s23 + 309*s13*s23^2 + 130*s23^3) + 
             s12*s13^2*s23*(-17*s13^4 + 12*s13^3*s23 + 135*s13^2*s23^2 + 158*
                s13*s23^3 + 52*s23^4) + s12^4*(502*s13^4 + 2212*s13^3*s23 + 
               2460*s13^2*s23^2 + 957*s13*s23^3 + 145*s23^4) + 
             s12^3*(-210*s13^5 + 48*s13^4*s23 + 1643*s13^3*s23^2 + 2251*s13^2*
                s23^3 + 992*s13*s23^4 + 50*s23^5) + s12^2*s13*
              (-73*s13^5 - 380*s13^4*s23 - 373*s13^3*s23^2 + 371*s13^2*
                s23^3 + 805*s13*s23^4 + 368*s23^5))) + p1q^6*s23*(s12 + s23)*
          (s13 + s23)*(p3q*(-10*s13^3*s23^5*(s13 + s23)^3*(9*s13^2 - 4*s13*
                s23 + 14*s23^2) - 2*s12*s13^3*s23^4*(s13 + s23)^2*
              (144*s13^3 - 145*s13^2*s23 - 160*s13*s23^2 + 219*s23^3) + 
             9*s12^8*(576*s13^5 + 1346*s13^4*s23 + 631*s13^3*s23^2 - 249*
                s13^2*s23^3 - 128*s13*s23^4 - 50*s23^5) + s12^2*s13^3*s23^3*
              (-531*s13^5 + 755*s13^4*s23 + 7827*s13^3*s23^2 + 11387*s13^2*
                s23^3 + 5058*s13*s23^4 + 212*s23^5) + 
             s12^7*(7776*s13^6 + 28827*s13^5*s23 + 38329*s13^4*s23^2 + 14131*
                s13^3*s23^3 - 5095*s13^2*s23^4 - 3130*s13*s23^5 - 1310*
                s23^6) + s12^6*(5184*s13^7 + 16839*s13^6*s23 + 27680*s13^5*
                s23^2 + 30456*s13^4*s23^3 + 16588*s13^3*s23^4 + 1689*s13^2*
                s23^5 - 2286*s13*s23^6 - 1370*s23^7) + 
             s12^5*(2592*s13^8 + 9585*s13^7*s23 - 4009*s13^6*s23^2 - 24474*
                s13^5*s23^3 - 5736*s13^4*s23^4 + 16799*s13^3*s23^5 + 9713*
                s13^2*s23^6 - 228*s13*s23^7 - 750*s23^8) + 
             s12^4*s23*(4923*s13^8 + 5227*s13^7*s23 - 21258*s13^6*s23^2 - 
               35139*s13^5*s23^3 - 5788*s13^4*s23^4 + 13111*s13^3*s23^5 + 
               5184*s13^2*s23^6 - 358*s13*s23^7 - 380*s23^8) + 
             s12^3*s23^2*(1998*s13^8 + 1477*s13^7*s23 - 1421*s13^6*s23^2 + 
               4037*s13^5*s23^3 + 9583*s13^4*s23^4 + 4958*s13^3*s23^5 + 14*
                s13^2*s23^6 - 438*s13*s23^7 - 140*s23^8)) + 
           p2q*(-10*s13^3*s23^5*(s13 + s23)^3*(45*s13^2 - 4*s13*s23 + 14*
                s23^2) - s12^2*s13^3*s23^3*(s13 + s23)^2*(2241*s13^3 + 613*
                s13^2*s23 - 5156*s13*s23^2 - 14*s23^3) - 2*s12*s13^3*s23^4*
              (s13 + s23)^2*(576*s13^3 + 413*s13^2*s23 - 259*s13*s23^2 + 219*
                s23^3) + 9*s12^8*(288*s13^5 + 547*s13^4*s23 + 222*s13^3*
                s23^2 - 59*s13^2*s23^3 - 32*s13*s23^4 - 10*s23^5) + 
             s12^7*(5184*s13^6 + 9585*s13^5*s23 + 5227*s13^4*s23^2 + 1477*
                s13^3*s23^3 + 755*s13^2*s23^4 - 286*s13*s23^5 - 230*s23^6) + 
             s12^6*(7776*s13^7 + 16839*s13^6*s23 - 4009*s13^5*s23^2 - 21258*
                s13^4*s23^3 - 1421*s13^3*s23^4 + 7827*s13^2*s23^5 + 612*s13*
                s23^6 - 290*s23^7) + s12^5*(5184*s13^8 + 28827*s13^7*s23 + 
               27680*s13^6*s23^2 - 24474*s13^5*s23^3 - 35139*s13^4*s23^4 + 
               4037*s13^3*s23^5 + 11387*s13^2*s23^6 + 492*s13*s23^7 - 390*
                s23^8) + s12^4*s23*(12114*s13^8 + 38329*s13^7*s23 + 30456*
                s13^6*s23^2 - 5736*s13^5*s23^3 - 5788*s13^4*s23^4 + 9583*
                s13^3*s23^5 + 5058*s13^2*s23^6 - 556*s13*s23^7 - 380*s23^8) + 
             s12^3*s23^2*(5679*s13^8 + 14131*s13^7*s23 + 16588*s13^6*s23^2 + 
               16799*s13^5*s23^3 + 13111*s13^4*s23^4 + 4958*s13^3*s23^5 + 212*
                s13^2*s23^6 - 438*s13*s23^7 - 140*s23^8))) - 
         p1q^5*(p3q^2*(s12 + s23)*(10*s13^3*s23^6*(s13 + s23)^4*
              (4*s13^2 - 9*s13*s23 + 14*s23^2) + 2*s12*s13^3*s23^5*
              (s13 + s23)^4*(334*s13^2 - 308*s13*s23 + 65*s23^2) + 
             2*s12^2*s13^3*s23^4*(s13 + s23)^2*(850*s13^4 + 2220*s13^3*s23 - 
               918*s13^2*s23^2 - 2139*s13*s23^3 + 14*s23^4) + 
             9*s12^9*(288*s13^6 + 1411*s13^5*s23 + 1899*s13^4*s23^2 + 563*
                s13^3*s23^3 - 405*s13^2*s23^4 - 292*s13*s23^5 - 100*s23^6) + 
             s12^8*(5184*s13^7 + 16002*s13^6*s23 + 22894*s13^5*s23^2 + 19729*
                s13^4*s23^3 + 6880*s13^3*s23^4 - 4613*s13^2*s23^5 - 6540*s13*
                s23^6 - 2540*s23^7) + s12^3*s23^3*(s13 + s23)^2*
              (-5147*s13^7 + 8271*s13^6*s23 + 25920*s13^5*s23^2 + 14658*s13^4*
                s23^3 - 1896*s13^3*s23^4 + 16*s13^2*s23^5 - 94*s13*s23^6 + 
               140*s23^7) + s12^7*(2592*s13^8 + 5184*s13^7*s23 - 16224*s13^6*
                s23^2 - 47257*s13^5*s23^3 - 20615*s13^4*s23^4 + 26355*s13^3*
                s23^5 + 16537*s13^2*s23^6 - 5062*s13*s23^7 - 2910*s23^8) - 
             s12^6*s23*(5634*s13^8 + 18800*s13^7*s23 + 35087*s13^6*s23^2 + 
               25442*s13^5*s23^3 - 35084*s13^4*s23^4 - 67524*s13^3*s23^5 - 
               27179*s13^2*s23^6 + 3930*s13*s23^7 + 2350*s23^8) + 
             s12^5*s23*(-7515*s13^9 - 28491*s13^8*s23 - 1019*s13^7*s23^2 + 
               105851*s13^6*s23^3 + 177452*s13^5*s23^4 + 141276*s13^4*s23^5 + 
               58384*s13^3*s23^6 + 4488*s13^2*s23^7 - 5508*s13*s23^8 - 1490*
                s23^9) + s12^4*s23^2*(-13574*s13^9 - 28462*s13^8*s23 + 46566*
                s13^7*s23^2 + 188419*s13^6*s23^3 + 208890*s13^5*s23^4 + 98277*
                s13^4*s23^5 + 13406*s13^3*s23^6 - 5218*s13^2*s23^7 - 2542*s13*
                s23^8 - 270*s23^9)) - p2q^2*(s13 + s23)*
            (10*s13^3*s23^6*(s13 + s23)^3*(90*s13^3 - 16*s13^2*s23 + 69*s13*
                s23^2 - 14*s23^3) + 2*s12*s13^3*s23^5*(s13 + s23)^2*
              (1314*s13^4 + 642*s13^3*s23 - 67*s13^2*s23^2 + 1457*s13*s23^3 - 
               93*s23^4) + s12^2*s13^3*s23^4*(s13 + s23)^2*(3645*s13^4 - 2677*
                s13^3*s23 - 14828*s13^2*s23^2 + 5154*s13*s23^3 + 32*s23^4) + 
             s12^9*s23*(7515*s13^5 + 13574*s13^4*s23 + 5147*s13^3*s23^2 - 
               1700*s13^2*s23^3 - 668*s13*s23^4 - 40*s23^5) + 
             s12^8*(-2592*s13^7 + 5634*s13^6*s23 + 28491*s13^5*s23^2 + 28462*
                s13^4*s23^3 + 2023*s13^3*s23^4 - 7840*s13^2*s23^5 - 2056*s13*
                s23^6 - 70*s23^7) - s12^7*(5184*s13^8 + 5184*s13^7*s23 - 
               18800*s13^6*s23^2 - 1019*s13^5*s23^3 + 46566*s13^4*s23^4 + 
               37315*s13^3*s23^5 + 8744*s13^2*s23^6 + 1674*s13*s23^7 + 20*
                s23^8) - s12^3*s23^3*(5067*s13^9 + 6880*s13^8*s23 + 26355*
                s13^7*s23^2 + 67524*s13^6*s23^3 + 58384*s13^5*s23^4 + 13406*
                s13^4*s23^5 - 1958*s13^3*s23^6 + 28*s13^2*s23^7 + 130*s13*
                s23^8 + 140*s23^9) - s12^6*(2592*s13^9 + 16002*s13^8*s23 - 
               16224*s13^7*s23^2 - 35087*s13^6*s23^3 + 105851*s13^5*s23^4 + 
               188419*s13^4*s23^5 + 74769*s13^3*s23^6 - 3510*s13^2*s23^7 - 
               504*s13*s23^8 + 180*s23^9) - s12^4*s23^2*(17091*s13^9 + 19729*
                s13^8*s23 - 20615*s13^7*s23^2 + 35084*s13^6*s23^3 + 141276*
                s13^5*s23^4 + 98277*s13^4*s23^5 + 10882*s13^3*s23^6 - 4222*
                s13^2*s23^7 - 96*s13*s23^8 + 470*s23^9) - 
             s12^5*s23*(12699*s13^9 + 22894*s13^8*s23 - 47257*s13^7*s23^2 - 
               25442*s13^6*s23^3 + 177452*s13^5*s23^4 + 208890*s13^4*s23^5 + 
               53340*s13^3*s23^6 - 10364*s13^2*s23^7 - 1016*s13*s23^8 + 520*
                s23^9)) + p2q*p3q*(-10*s13^3*s23^6*(s13 + s23)^4*
              (36*s13^3 - 11*s13^2*s23 + 87*s13*s23^2 - 28*s23^3) - 
             2*s12*s13^3*s23^5*(s13 + s23)^3*(612*s13^4 - 648*s13^3*s23 + 337*
                s13^2*s23^2 + 1864*s13*s23^3 - 273*s23^4) - s12^2*s13^3*s23^4*
              (s13 + s23)^2*(1926*s13^5 - 6071*s13^4*s23 - 23421*s13^3*
                s23^2 - 3903*s13^2*s23^3 + 10333*s13*s23^4 - 648*s23^5) + 
             9*s12^10*s23*(259*s13^5 + 488*s13^4*s23 + 111*s13^3*s23^2 - 214*
                s13^2*s23^3 - 136*s13*s23^4 - 40*s23^5) - 
             s12^9*(5184*s13^7 + 35577*s13^6*s23 + 70834*s13^5*s23^2 + 52650*
                s13^4*s23^3 + 9104*s13^3*s23^4 - 2219*s13^2*s23^5 + 2376*s13*
                s23^6 + 1330*s23^7) + s12^3*s23^3*(s13 + s23)^2*
              (999*s13^8 - 11102*s13^7*s23 + 27866*s13^6*s23^2 + 63088*s13^5*
                s23^3 + 29283*s13^4*s23^4 - 984*s13^3*s23^5 + 396*s13^2*
                s23^6 - 14*s13*s23^7 + 280*s23^8) - s12^8*(10368*s13^8 + 
               80802*s13^7*s23 + 234192*s13^6*s23^2 + 318313*s13^5*s23^3 + 
               179079*s13^4*s23^4 - 6661*s13^3*s23^5 - 33637*s13^2*s23^6 + 
               458*s13*s23^7 + 2590*s23^8) - 2*s12^7*(2592*s13^9 + 40401*
                s13^8*s23 + 140822*s13^7*s23^2 + 214170*s13^6*s23^3 + 154624*
                s13^5*s23^4 + 17569*s13^4*s23^5 - 53859*s13^3*s23^6 - 28408*
                s13^2*s23^7 + 1543*s13*s23^8 + 1990*s23^9) - 
             s12^6*s23*(35577*s13^9 + 234192*s13^8*s23 + 428340*s13^7*s23^2 + 
               156822*s13^6*s23^3 - 334950*s13^5*s23^4 - 416814*s13^4*s23^5 - 
               183325*s13^3*s23^6 - 20894*s13^2*s23^7 + 11364*s13*s23^8 + 
               4020*s23^9) + s12^5*s23*(2331*s13^10 - 70834*s13^9*s23 - 
               318313*s13^8*s23^2 - 309248*s13^7*s23^3 + 334950*s13^6*s23^4 + 
               823030*s13^5*s23^5 + 552075*s13^4*s23^6 + 120670*s13^3*s23^7 - 
               16115*s13^2*s23^8 - 10220*s13*s23^9 - 1690*s23^10) + 
             s12^4*s23^2*(4392*s13^10 - 52650*s13^9*s23 - 179079*s13^8*
                s23^2 - 35138*s13^7*s23^3 + 416814*s13^6*s23^4 + 552075*s13^5*
                s23^5 + 256568*s13^4*s23^6 + 27711*s13^3*s23^7 - 9037*s13^2*
                s23^8 - 2090*s13*s23^9 + 250*s23^10))) + 
         p1q*(p2q^6*s13^3*(s13 + s23)*(-10*s13^4*s23^4*(s13 + s23)^3*
              (23*s13 + 86*s23) + 9*s12^9*s23*(179*s13^2 + 354*s13*s23 + 175*
                s23^2) - 2*s12*s13^3*s23^3*(s13 + s23)^2*(21*s13^3 + 899*
                s13^2*s23 + 1857*s13*s23^2 + 664*s23^3) + s12^2*s13^2*s23^2*
              (s13 + s23)^2*(204*s13^4 - 726*s13^3*s23 - 4917*s13^2*s23^2 - 
               2919*s13*s23^3 - 376*s23^4) + s12^8*(-108*s13^4 + 306*s13^3*
                s23 + 7911*s13^2*s23^2 + 13144*s13*s23^3 + 5807*s23^4) + 
             s12^7*(2160*s13^5 - 3528*s13^4*s23 - 7014*s13^3*s23^2 + 14761*
                s13^2*s23^3 + 26560*s13*s23^4 + 10473*s23^5) + 
             s12^6*(4536*s13^6 + 3942*s13^5*s23 - 20276*s13^4*s23^2 - 16073*
                s13^3*s23^3 + 29413*s13^2*s23^4 + 36459*s13*s23^5 + 10335*
                s23^6) + s12^3*s13*s23*(-72*s13^7 + 1218*s13^6*s23 - 1775*
                s13^5*s23^2 - 12004*s13^4*s23^3 - 8843*s13^3*s23^4 + 7226*
                s13^2*s23^5 + 9172*s13*s23^6 + 2042*s23^7) + 
             s12^5*(2160*s13^7 + 9621*s13^6*s23 - 3958*s13^5*s23^2 - 29815*
                s13^4*s23^3 + 1070*s13^3*s23^4 + 46564*s13^2*s23^5 + 31702*
                s13*s23^6 + 4604*s23^7) + s12^4*(-108*s13^8 + 3384*s13^7*
                s23 + 5593*s13^6*s23^2 - 12049*s13^5*s23^3 - 16521*s13^4*
                s23^4 + 19412*s13^3*s23^5 + 35320*s13^2*s23^6 + 13887*s13*
                s23^7 + 510*s23^8)) + p3q^6*s12^3*(s13^4*s23^4*(s13 + s23)^2*
              (1575*s13^3 + 2657*s13^2*s23 + 3584*s13*s23^2 + 510*s23^3) - 
             2*s12^9*(54*s13^4 + 36*s13^3*s23 - 102*s13^2*s23^2 + 21*s13*
                s23^3 + 115*s23^4) + 2*s12^8*(1080*s13^5 + 1638*s13^4*s23 + 
               573*s13^3*s23^2 - 57*s13^2*s23^3 - 962*s13*s23^4 - 890*
                s23^5) + s12^7*(4536*s13^6 + 11781*s13^5*s23 + 8977*s13^4*
                s23^2 - 557*s13^3*s23^3 - 6483*s13^2*s23^4 - 9234*s13*s23^5 - 
               4820*s23^6) + s12*s13^3*s23^3*(4761*s13^6 + 18951*s13^5*s23 + 
               37033*s13^4*s23^2 + 46794*s13^3*s23^3 + 36306*s13^2*s23^4 + 
               14397*s13*s23^5 + 2042*s23^6) + s12^6*(2160*s13^7 + 8478*s13^6*
                s23 + 5663*s13^5*s23^2 - 6456*s13^4*s23^3 - 13779*s13^3*
                s23^4 - 19644*s13^2*s23^5 - 17906*s13*s23^6 - 6080*s23^7) + 
             s12^2*s13^2*s23^2*(4797*s13^7 + 21055*s13^6*s23 + 41321*s13^5*
                s23^2 + 65872*s13^4*s23^3 + 78266*s13^3*s23^4 + 49207*s13^2*
                s23^5 + 11214*s13*s23^6 - 376*s23^7) + s12^3*s13*s23*
              (1611*s13^8 + 8217*s13^7*s23 + 7747*s13^6*s23^2 + 13340*s13^5*
                s23^3 + 47634*s13^4*s23^4 + 54732*s13^3*s23^5 + 16398*s13^2*
                s23^6 - 4047*s13*s23^7 - 1328*s23^8) - s12^4*s23*
              (-198*s13^8 + 10542*s13^7*s23 + 36349*s13^6*s23^2 + 28745*s13^5*
                s23^3 - 2891*s13^4*s23^4 + 1617*s13^3*s23^5 + 14802*s13^2*
                s23^6 + 7698*s13*s23^7 + 860*s23^8) - 
             s12^5*(108*s13^8 + 1368*s13^7*s23 + 16334*s13^6*s23^2 + 33773*
                s13^5*s23^3 + 28570*s13^4*s23^4 + 20847*s13^3*s23^5 + 24610*
                s13^2*s23^6 + 16924*s13*s23^7 + 3670*s23^8)) + 
           p2q*p3q^5*s12^2*(90*s12^11*s23^2*(s13 + s23) + s13^4*s23^4*
              (s13 + s23)^3*(387*s13^3 + 2194*s13^2*s23 + 681*s13*s23^2 + 534*
                s23^3) - 2*s12^10*(108*s13^4 + 72*s13^3*s23 - 384*s13^2*
                s23^2 - 363*s13*s23^3 + 5*s23^4) + s12^9*(4752*s13^5 + 5247*
                s13^4*s23 - 1112*s13^3*s23^2 + 263*s13^2*s23^3 - 610*s13*
                s23^4 - 2340*s23^5) - 2*s12*s13^3*s23^3*(s13 + s23)^2*
              (234*s13^5 - 8073*s13^4*s23 - 15667*s13^3*s23^2 - 14750*s13^2*
                s23^3 - 2048*s13*s23^4 + 364*s23^5) + 
             s12^8*(432*s13^6 - 11799*s13^5*s23 - 35621*s13^4*s23^2 - 34177*
                s13^3*s23^3 - 12347*s13^2*s23^4 - 9120*s13*s23^5 - 6780*
                s23^6) - 2*s12^7*(6912*s13^7 + 42570*s13^6*s23 + 104411*s13^5*
                s23^2 + 113559*s13^4*s23^3 + 53650*s13^3*s23^4 + 13601*s13^2*
                s23^5 + 8472*s13*s23^6 + 3535*s23^7) + s12^2*s13^2*s23^2*
              (-1809*s13^8 + 31942*s13^7*s23 + 162247*s13^6*s23^2 + 324410*
                s13^5*s23^3 + 357504*s13^4*s23^4 + 225213*s13^3*s23^5 + 70446*
                s13^2*s23^6 + 7307*s13*s23^7 + 484*s23^8) - 
             s12^6*(8856*s13^8 + 86886*s13^7*s23 + 321667*s13^6*s23^2 + 
               503133*s13^5*s23^3 + 351779*s13^4*s23^4 + 97239*s13^3*s23^5 + 
               14732*s13^2*s23^6 + 10226*s13*s23^7 + 1890*s23^8) + 
             s12^4*s23*(12717*s13^9 + 78377*s13^8*s23 + 136578*s13^7*s23^2 + 
               160742*s13^6*s23^3 + 257614*s13^5*s23^4 + 271232*s13^4*s23^5 + 
               110933*s13^3*s23^6 + 11315*s13^2*s23^7 + 3804*s13*s23^8 + 680*
                s23^9) + s12^3*s13*s23*(-954*s13^9 + 32212*s13^8*s23 + 182299*
                s13^7*s23^2 + 391798*s13^6*s23^3 + 516690*s13^5*s23^4 + 
               468342*s13^4*s23^5 + 250873*s13^3*s23^6 + 58604*s13^2*s23^7 + 
               3674*s13*s23^8 + 986*s23^9) + s12^5*(432*s13^9 - 5265*s13^8*
                s23 - 102320*s13^7*s23^2 - 323130*s13^6*s23^3 - 331218*s13^5*
                s23^4 - 77046*s13^4*s23^5 + 37216*s13^3*s23^6 + 8753*s13^2*
                s23^7 + 1662*s13*s23^8 + 1320*s23^9)) + p2q^5*p3q*s13^2*
            (-9*s12^10*s23*(106*s13^3 + 201*s13^2*s23 + 52*s13*s23^2 - 43*
                s23^3) + 10*s13^4*s23^3*(s13 + s23)^4*(9*s13^3 - 37*s13^2*
                s23 - 140*s13*s23^2 + 68*s23^3) + 2*s12*s13^3*s23^2*
              (s13 + s23)^3*(45*s13^5 + 228*s13^4*s23 - 1124*s13^3*s23^2 - 
               1917*s13^2*s23^3 + 423*s13*s23^4 + 493*s23^5) + 
             s12^9*(432*s13^5 + 12717*s13^4*s23 + 32212*s13^3*s23^2 + 31942*
                s13^2*s23^3 + 15210*s13*s23^4 + 3355*s23^5) + 
             s12^2*s13^2*s23^2*(s13 + s23)^2*(768*s13^6 - 1273*s13^5*s23 - 
               10569*s13^4*s23^2 - 4791*s13^3*s23^3 + 5419*s13^2*s23^4 + 2706*
                s13*s23^5 + 484*s23^6) + s12^8*(-8856*s13^6 - 5265*s13^5*
                s23 + 78377*s13^4*s23^2 + 182299*s13^3*s23^3 + 162247*s13^2*
                s23^4 + 63158*s13*s23^5 + 8424*s23^6) - 
             2*s12^7*(6912*s13^7 + 43443*s13^6*s23 + 51160*s13^5*s23^2 - 
               68289*s13^4*s23^3 - 195899*s13^3*s23^4 - 162205*s13^2*s23^5 - 
               54157*s13*s23^6 - 4773*s23^7) - s12^3*s13*s23*(s13 + s23)^2*
              (144*s13^7 + 824*s13^6*s23 + 32385*s13^5*s23^2 + 41706*s13^4*
                s23^3 - 18558*s13^3*s23^4 - 41806*s13^2*s23^5 - 8763*s13*
                s23^6 + 728*s23^7) + s12^6*(432*s13^8 - 85140*s13^7*s23 - 
               321667*s13^6*s23^2 - 323130*s13^5*s23^3 + 160742*s13^4*s23^4 + 
               516690*s13^3*s23^5 + 357504*s13^2*s23^6 + 94430*s13*s23^7 + 
               5839*s23^8) + s12^5*(4752*s13^9 - 11799*s13^8*s23 - 208822*
                s13^7*s23^2 - 503133*s13^6*s23^3 - 331218*s13^5*s23^4 + 
               257614*s13^4*s23^5 + 468342*s13^3*s23^6 + 225213*s13^2*s23^7 + 
               36964*s13*s23^8 + 2283*s23^9) + s12^4*(-216*s13^10 + 5247*
                s13^9*s23 - 35621*s13^8*s23^2 - 227118*s13^7*s23^3 - 351779*
                s13^6*s23^4 - 77046*s13^5*s23^5 + 271232*s13^4*s23^6 + 250873*
                s13^3*s23^7 + 70446*s13^2*s23^8 + 2640*s13*s23^9 + 534*
                s23^10)) + p2q^3*p3q^3*(-10*s13^6*s23^4*(s13 + s23)^4*
              (9*s13^2 - 5*s13*s23 - 50*s23^2) - 18*s12^12*s23^2*
              (9*s13^2 + 14*s13*s23 + 5*s23^2) - 2*s12*s13^5*s23^3*
              (s13 + s23)^3*(126*s13^4 + 82*s13^3*s23 - 487*s13^2*s23^2 - 460*
                s13*s23^3 - 377*s23^4) + s12^11*(432*s13^5 - 2619*s13^4*s23 - 
               6482*s13^3*s23^2 - 3901*s13^2*s23^3 - 920*s13*s23^4 - 310*
                s23^5) - s12^2*s13^4*s23^2*(s13 + s23)^2*(162*s13^6 + 3577*
                s13^5*s23 + 5662*s13^4*s23^2 - 11218*s13^3*s23^3 - 13824*
                s13^2*s23^4 - 3977*s13*s23^5 - 2538*s23^6) - 
             s12^10*(9936*s13^6 + 52947*s13^5*s23 + 86804*s13^4*s23^2 + 57317*
                s13^3*s23^3 + 12978*s13^2*s23^4 + 274*s13*s23^5 - 160*
                s23^6) - s12^3*s13^3*s23^2*(s13 + s23)^2*(6482*s13^6 + 44353*
                s13^5*s23 - 13320*s13^4*s23^2 - 128204*s13^3*s23^3 - 119472*
                s13^2*s23^4 - 16415*s13*s23^5 + 4072*s23^6) + 
             s12^9*(8208*s13^7 - 14373*s13^6*s23 - 132384*s13^5*s23^2 - 
               185990*s13^4*s23^3 - 81868*s13^3*s23^4 - 3683*s13^2*s23^5 + 
               3098*s13*s23^6 + 1940*s23^7) + s12^8*(37152*s13^8 + 242163*
                s13^7*s23 + 491334*s13^6*s23^2 + 459100*s13^5*s23^3 + 253872*
                s13^4*s23^4 + 110491*s13^3*s23^5 + 30598*s13^2*s23^6 + 6272*
                s13*s23^7 + 3110*s23^8) + s12^7*(8208*s13^9 + 242163*s13^8*
                s23 + 1086468*s13^7*s23^2 + 2017480*s13^6*s23^3 + 2027708*
                s13^5*s23^4 + 1210944*s13^4*s23^5 + 389200*s13^3*s23^6 + 
               42843*s13^2*s23^7 + 5996*s13*s23^8 + 2050*s23^9) + 
             s12^4*s13^2*s23*(-2619*s13^9 - 86804*s13^8*s23 - 185990*s13^7*
                s23^2 + 253872*s13^6*s23^3 + 1210944*s13^5*s23^4 + 1535898*
                s13^4*s23^5 + 882418*s13^3*s23^6 + 207520*s13^2*s23^7 + 8271*
                s13*s23^8 + 2538*s23^9) + s12^6*(-9936*s13^10 - 14373*s13^9*
                s23 + 491334*s13^8*s23^2 + 2017480*s13^7*s23^3 + 3379432*
                s13^6*s23^4 + 3030712*s13^5*s23^5 + 1535898*s13^4*s23^6 + 
               383563*s13^3*s23^7 + 24316*s13^2*s23^8 + 3182*s13*s23^9 + 500*
                s23^10) + s12^5*s13*(432*s13^10 - 52947*s13^9*s23 - 132384*
                s13^8*s23^2 + 459100*s13^7*s23^3 + 2027708*s13^6*s23^4 + 
               3030712*s13^5*s23^5 + 2282476*s13^4*s23^6 + 882418*s13^3*
                s23^7 + 148230*s13^2*s23^8 + 9053*s13*s23^9 + 754*s23^10)) + 
           p2q^2*p3q^4*s12*(90*s12^12*s23^2*(s13 + s23) + 2*s13^5*s23^4*
              (s13 + s23)^3*(36*s13^3 - 160*s13^2*s23 - 353*s13*s23^2 - 22*
                s23^3) + s12^11*(-108*s13^4 - 72*s13^3*s23 + 402*s13^2*
                s23^2 + 516*s13*s23^3 + 130*s23^4) - s12*s13^4*s23^3*
              (s13 + s23)^2*(243*s13^5 - 163*s13^4*s23 - 6740*s13^3*s23^2 - 
               6327*s13^2*s23^3 - 1965*s13*s23^4 - 1702*s23^5) + 
             s12^10*(3024*s13^5 + 9*s13^4*s23 - 7768*s13^3*s23^2 - 3281*s13^2*
                s23^3 + 322*s13*s23^4 - 870*s23^5) - 
             s12^9*(13392*s13^6 + 67257*s13^5*s23 + 114324*s13^4*s23^2 + 
               81555*s13^3*s23^3 + 18132*s13^2*s23^4 + 56*s13*s23^5 + 1800*
                s23^6) - s12^2*s13^3*s23^2*(s13 + s23)^2*(972*s13^6 + 7906*
                s13^5*s23 - 41497*s13^4*s23^2 - 96588*s13^3*s23^3 - 81686*
                s13^2*s23^4 - 10317*s13*s23^5 + 2764*s23^6) - 
             s12^8*(21168*s13^7 + 156600*s13^6*s23 + 401799*s13^5*s23^2 + 
               433005*s13^4*s23^3 + 186467*s13^3*s23^4 + 14709*s13^2*s23^5 - 
               5510*s13*s23^6 - 950*s23^7) + s12^7*(9828*s13^8 - 3681*s13^7*
                s23 - 234525*s13^6*s23^2 - 525439*s13^5*s23^3 - 404829*s13^4*
                s23^4 - 80226*s13^3*s23^5 + 28930*s13^2*s23^6 + 16020*s13*
                s23^7 + 4890*s23^8) + s12^4*s13*s23*(-10224*s13^9 + 82345*
                s13^8*s23 + 676423*s13^7*s23^2 + 1650013*s13^6*s23^3 + 
               2071822*s13^5*s23^4 + 1531314*s13^4*s23^5 + 646962*s13^3*
                s23^6 + 128424*s13^2*s23^7 + 10017*s13*s23^8 + 1784*s23^9) + 
             s12^3*s13^2*s23*(-657*s13^9 - 18887*s13^8*s23 + 53534*s13^7*
                s23^2 + 478788*s13^6*s23^3 + 1053585*s13^5*s23^4 + 1121804*
                s13^4*s23^5 + 626029*s13^3*s23^6 + 159809*s13^2*s23^7 + 10877*
                s13*s23^8 + 1854*s23^9) + s12^6*(13824*s13^9 + 154863*s13^8*
                s23 + 451456*s13^7*s23^2 + 537983*s13^6*s23^3 + 425699*s13^5*
                s23^4 + 364799*s13^4*s23^5 + 209515*s13^3*s23^6 + 54585*s13^2*
                s23^7 + 17926*s13*s23^8 + 4230*s23^9) + 
             s12^5*(-648*s13^10 + 59715*s13^9*s23 + 490686*s13^8*s23^2 + 
               1321547*s13^7*s23^3 + 1837118*s13^6*s23^4 + 1619688*s13^5*
                s23^5 + 941304*s13^4*s23^6 + 291916*s13^3*s23^7 + 33558*s13^2*
                s23^8 + 9152*s13*s23^9 + 1180*s23^10)) + p2q^4*p3q^2*s13*
            (-9*s12^11*s23*(73*s13^3 + 108*s13^2*s23 + 27*s13*s23^2 - 8*
                s23^3) + 10*s13^5*s23^3*(s13 + s23)^4*(9*s13^3 - 23*s13^2*
                s23 - 49*s13*s23^2 + 118*s23^3) + 2*s12*s13^4*s23^2*
              (s13 + s23)^4*(45*s13^4 + 78*s13^3*s23 - 421*s13^2*s23^2 + 1008*
                s13*s23^3 + 892*s23^4) - s12^10*(648*s13^5 + 10224*s13^4*
                s23 + 18887*s13^3*s23^2 + 9850*s13^2*s23^3 + 323*s13*s23^4 + 
               104*s23^5) + s12^9*(13824*s13^6 + 59715*s13^5*s23 + 82345*
                s13^4*s23^2 + 53534*s13^3*s23^3 + 24713*s13^2*s23^4 + 6823*
                s13*s23^5 - 1450*s23^6) + s12^2*s13^3*s23^2*(s13 + s23)^2*
              (402*s13^6 - 4085*s13^5*s23 - 10364*s13^4*s23^2 + 10104*s13^3*
                s23^3 + 19086*s13^2*s23^4 + 6309*s13*s23^5 + 1854*s23^6) + 
             s12^8*(9828*s13^7 + 154863*s13^6*s23 + 490686*s13^5*s23^2 + 
               676423*s13^4*s23^3 + 478788*s13^3*s23^4 + 171676*s13^2*s23^5 + 
               19970*s13*s23^6 - 3050*s23^7) - s12^3*s13^2*s23*(s13 + s23)^2*
              (72*s13^7 + 7624*s13^6*s23 + 66235*s13^5*s23^2 + 46373*s13^4*
                s23^3 - 78755*s13^3*s23^4 - 98378*s13^2*s23^5 - 16405*s13*
                s23^6 + 2764*s23^7) + s12^7*(-21168*s13^8 - 3681*s13^7*s23 + 
               451456*s13^6*s23^2 + 1321547*s13^5*s23^3 + 1650013*s13^4*
                s23^4 + 1053585*s13^3*s23^5 + 316359*s13^2*s23^6 + 21359*s13*
                s23^7 - 2570*s23^8) + s12^6*(-13392*s13^9 - 156600*s13^8*
                s23 - 234525*s13^7*s23^2 + 537983*s13^6*s23^3 + 1837118*s13^5*
                s23^4 + 2071822*s13^4*s23^5 + 1121804*s13^3*s23^6 + 270277*
                s13^2*s23^7 + 11959*s13*s23^8 - 838*s23^9) + 
             s12^5*(3024*s13^10 - 67257*s13^9*s23 - 401799*s13^8*s23^2 - 
               525439*s13^7*s23^3 + 425699*s13^6*s23^4 + 1619688*s13^5*
                s23^5 + 1531314*s13^4*s23^6 + 626029*s13^3*s23^7 + 99556*
                s13^2*s23^8 + 5369*s13*s23^9 - 44*s23^10) + 
             s12^4*s13*(-108*s13^10 + 9*s13^9*s23 - 114324*s13^8*s23^2 - 
               433005*s13^7*s23^3 - 404829*s13^6*s23^4 + 364799*s13^5*s23^5 + 
               941304*s13^4*s23^6 + 646962*s13^3*s23^7 + 159809*s13^2*s23^8 + 
               4789*s13*s23^9 + 1702*s23^10))) + 
         p1q^2*(p2q^5*s13^2*(s13 + s23)*(-10*s13^4*s23^3*(s13 + s23)^3*
              (9*s13^3 - 4*s13^2*s23 + 12*s13*s23^2 - 164*s23^3) + 
             s12^9*(108*s13^4 + 6156*s13^3*s23 + 11637*s13^2*s23^2 + 6530*s13*
                s23^3 + 781*s23^4) - 2*s12*s13^3*s23^2*(s13 + s23)^2*
              (45*s13^5 - 78*s13^4*s23 + 497*s13^3*s23^2 - 487*s13^2*s23^3 - 
               3018*s13*s23^4 - 966*s23^5) + s12^2*s13^2*s23^2*(s13 + s23)^2*
              (222*s13^5 - 2018*s13^4*s23 - 8008*s13^3*s23^2 + 6573*s13^2*
                s23^3 + 4649*s13*s23^4 + 1076*s23^5) + 
             s12^8*(-2268*s13^5 + 3114*s13^4*s23 + 34415*s13^3*s23^2 + 48610*
                s13^2*s23^3 + 22243*s13*s23^4 + 2026*s23^5) + 
             s12^7*(2808*s13^6 - 9324*s13^5*s23 + 7619*s13^4*s23^2 + 75238*
                s13^3*s23^3 + 85295*s13^2*s23^4 + 31192*s13*s23^5 + 1864*
                s23^6) + s12^6*(12744*s13^7 + 12888*s13^6*s23 - 24861*s13^5*
                s23^2 + 21437*s13^4*s23^3 + 111033*s13^3*s23^4 + 81569*s13^2*
                s23^5 + 16784*s13*s23^6 + 1246*s23^7) - s12^3*s13*s23*
              (72*s13^8 - 5114*s13^7*s23 + 5850*s13^6*s23^2 + 37916*s13^5*
                s23^3 + 22192*s13^4*s23^4 - 21925*s13^3*s23^5 - 16220*s13^2*
                s23^6 + 1597*s13*s23^7 + 580*s23^8) + 
             s12^5*(7452*s13^8 + 32760*s13^7*s23 + 5140*s13^6*s23^2 - 38704*
                s13^5*s23^3 + 43340*s13^4*s23^4 + 106216*s13^3*s23^5 + 38655*
                s13^2*s23^6 - 4266*s13*s23^7 + 1099*s23^8) + 
             s12^4*(-108*s13^9 + 13518*s13^8*s23 + 24180*s13^7*s23^2 - 28925*
                s13^6*s23^3 - 43520*s13^5*s23^4 + 39794*s13^4*s23^5 + 53993*
                s13^3*s23^6 + 2735*s13^2*s23^7 - 6151*s13*s23^8 + 472*
                s23^9)) - p3q^5*s12^2*(s12 + s23)*
            (90*s12^10*s23^2*(s13 + s23) - s13^4*s23^4*(s13 + s23)^3*
              (781*s13^2 - 317*s13*s23 + 472*s23^2) - s12*s13^3*s23^3*
              (s13 + s23)^2*(6530*s13^4 + 9183*s13^3*s23 + 6296*s13^2*s23^2 - 
               4991*s13*s23^3 - 580*s23^4) + 2*s12^9*(54*s13^4 + 36*s13^3*
                s23 - 111*s13^2*s23^2 + 12*s13*s23^3 + 115*s23^4) - 
             2*s12^8*(3726*s13^5 + 6759*s13^4*s23 + 2557*s13^3*s23^2 - 787*
                s13^2*s23^3 - 386*s13*s23^4 - 135*s23^5) - 
             2*s12^7*(6372*s13^6 + 16380*s13^5*s23 + 12090*s13^4*s23^2 - 2925*
                s13^3*s23^3 - 5911*s13^2*s23^4 - 429*s13*s23^5 + 655*s23^6) - 
             s12^2*s13^2*s23^2*(11637*s13^7 + 48610*s13^6*s23 + 85295*s13^5*
                s23^2 + 81569*s13^4*s23^3 + 38655*s13^3*s23^4 + 2735*s13^2*
                s23^5 - 1597*s13*s23^6 + 1076*s23^7) - 
             s12^6*(2808*s13^7 + 12888*s13^6*s23 + 5140*s13^5*s23^2 - 28925*
                s13^4*s23^3 - 37916*s13^3*s23^4 - 11461*s13^2*s23^5 + 6990*
                s13*s23^6 + 4600*s23^7) + s12^5*(2268*s13^8 + 9324*s13^7*
                s23 + 24861*s13^6*s23^2 + 38704*s13^5*s23^3 + 43520*s13^4*
                s23^4 + 22192*s13^3*s23^5 - 9787*s13^2*s23^6 - 14978*s13*
                s23^7 - 4800*s23^8) - s12^3*s13*s23*(6156*s13^8 + 34415*s13^7*
                s23 + 75238*s13^6*s23^2 + 111033*s13^5*s23^3 + 106216*s13^4*
                s23^4 + 53993*s13^3*s23^5 + 16220*s13^2*s23^6 + 6801*s13*
                s23^7 + 1932*s23^8) - s12^4*(108*s13^9 + 3114*s13^8*s23 + 
               7619*s13^7*s23^2 + 21437*s13^6*s23^3 + 43340*s13^5*s23^4 + 
               39794*s13^4*s23^5 + 21925*s13^3*s23^6 + 16947*s13^2*s23^7 + 
               9900*s13*s23^8 + 1640*s23^9)) + p2q*p3q^4*s12*
            (-90*s12^12*s23^2*(s13 + s23) - 2*s13^4*s23^5*(s13 + s23)^3*
              (72*s13^3 - 37*s13^2*s23 - 275*s13*s23^2 - 31*s23^3) - 
             4*s12^11*(54*s13^4 + 36*s13^3*s23 - 147*s13^2*s23^2 + 21*s13*
                s23^3 + 160*s23^4) + s12^10*(10044*s13^5 + 16281*s13^4*s23 + 
               2456*s13^3*s23^2 - 5615*s13^2*s23^3 - 3774*s13*s23^4 - 2080*
                s23^5) + s12*s13^3*s23^4*(s13 + s23)^2*(183*s13^5 + 6995*
                s13^4*s23 + 5986*s13^3*s23^2 + 4393*s13^2*s23^3 + 4801*s13*
                s23^4 - 148*s23^5) - s12^2*s13^2*s23^3*(s13 + s23)^2*
              (1697*s13^6 - 48320*s13^5*s23 - 76656*s13^4*s23^2 - 51085*s13^3*
                s23^3 + 10628*s13^2*s23^4 + 2158*s13*s23^5 + 592*s23^6) - 
             s12^9*(12420*s13^6 + 41958*s13^5*s23 + 57691*s13^4*s23^2 + 56742*
                s13^3*s23^3 + 38485*s13^2*s23^4 + 11556*s13*s23^5 + 860*
                s23^6) - s12^8*(48168*s13^7 + 222039*s13^6*s23 + 407519*s13^5*
                s23^2 + 358213*s13^4*s23^3 + 169035*s13^3*s23^4 + 54086*s13^2*
                s23^5 + 3786*s13*s23^6 - 6750*s23^7) - 
             s12^7*(18144*s13^8 + 179712*s13^7*s23 + 520712*s13^6*s23^2 + 
               615857*s13^5*s23^3 + 322761*s13^4*s23^4 + 68929*s13^3*s23^5 - 
               2349*s13^2*s23^6 - 19190*s13*s23^7 - 11360*s23^8) + 
             s12^3*s13*s23^2*(-5077*s13^9 + 102913*s13^8*s23 + 486289*s13^7*
                s23^2 + 855598*s13^6*s23^3 + 742279*s13^5*s23^4 + 295480*
                s13^4*s23^5 + 13660*s13^3*s23^6 - 16613*s13^2*s23^7 - 719*s13*
                s23^8 - 946*s23^9) + s12^6*(7020*s13^9 + 40095*s13^8*s23 + 
               25961*s13^7*s23^2 + 8251*s13^6*s23^3 + 252579*s13^5*s23^4 + 
               414223*s13^4*s23^5 + 209356*s13^3*s23^6 + 45693*s13^2*s23^7 + 
               21146*s13*s23^8 + 5260*s23^9) + s12^5*(-324*s13^10 + 52614*
                s13^9*s23 + 337200*s13^8*s23^2 + 805944*s13^7*s23^3 + 1206732*
                s13^6*s23^4 + 1275290*s13^5*s23^5 + 812057*s13^4*s23^6 + 
               238440*s13^3*s23^7 + 23079*s13^2*s23^8 + 3636*s13*s23^9 - 980*
                s23^10) + s12^4*s23*(-3537*s13^10 + 110820*s13^9*s23 + 613950*
                s13^8*s23^2 + 1274010*s13^7*s23^3 + 1478812*s13^6*s23^4 + 
               1042651*s13^5*s23^5 + 392737*s13^4*s23^6 + 56429*s13^3*s23^7 + 
               1412*s13^2*s23^8 - 3256*s13*s23^9 - 960*s23^10)) + 
           p2q^2*p3q^3*(10*s13^5*s23^5*(s13 + s23)^4*(23*s13^2 + 31*s13*s23 - 
               46*s23^2) + 2*s12*s13^4*s23^4*(s13 + s23)^3*(163*s13^4 + 907*
                s13^3*s23 + 444*s13^2*s23^2 + 13*s13*s23^3 - 227*s23^4) - 
             2*s12^12*(54*s13^4 + 36*s13^3*s23 - 183*s13^2*s23^2 - 60*s13*
                s23^3 + 115*s23^4) + 2*s12^11*(1458*s13^5 + 1404*s13^4*s23 - 
               2119*s13^3*s23^2 - 2420*s13^2*s23^3 - 885*s13*s23^4 - 450*
                s23^5) - s12^10*(32292*s13^6 + 114021*s13^5*s23 + 136749*
                s13^4*s23^2 + 73525*s13^3*s23^3 + 21735*s13^2*s23^4 + 4200*
                s13*s23^5 - 230*s23^6) - s12^2*s13^3*s23^3*(s13 + s23)^2*
              (1009*s13^6 - 2963*s13^5*s23 - 30146*s13^4*s23^2 - 21726*s13^3*
                s23^3 - 5941*s13^2*s23^4 - 7717*s13*s23^5 + 1052*s23^6) - 
             2*s12^9*(10098*s13^7 + 78606*s13^6*s23 + 179423*s13^5*s23^2 + 
               151296*s13^4*s23^3 + 38153*s13^3*s23^4 - 1702*s13^2*s23^5 - 
               944*s13*s23^6 - 1950*s23^7) - 2*s12^3*s13^2*s23^2*
              (s13 + s23)^2*(826*s13^7 + 8307*s13^6*s23 - 59397*s13^5*s23^2 - 
               113149*s13^4*s23^3 - 67518*s13^3*s23^4 + 8380*s13^2*s23^5 + 
               2759*s13*s23^6 + 748*s23^7) + s12^8*(60588*s13^8 + 272547*
                s13^7*s23 + 460009*s13^6*s23^2 + 515350*s13^5*s23^3 + 486138*
                s13^4*s23^4 + 294235*s13^3*s23^5 + 76757*s13^2*s23^6 + 8490*
                s13*s23^7 + 3350*s23^8) + 2*s12^7*(18846*s13^9 + 242496*s13^8*
                s23 + 842692*s13^7*s23^2 + 1426630*s13^6*s23^3 + 1491943*
                s13^5*s23^4 + 991987*s13^4*s23^5 + 348365*s13^3*s23^6 + 39878*
                s13^2*s23^7 - 125*s13*s23^8 - 1190*s23^9) + 
             s12^6*(-7452*s13^10 + 136809*s13^9*s23 + 1268419*s13^8*s23^2 + 
               3565194*s13^7*s23^3 + 5076346*s13^6*s23^4 + 4262338*s13^5*
                s23^5 + 2128830*s13^4*s23^6 + 528099*s13^3*s23^7 + 22707*
                s13^2*s23^8 - 10340*s13*s23^9 - 4150*s23^10) + 
             s12^4*s13*s23*(-63*s13^10 - 46437*s13^9*s23 + 135442*s13^8*
                s23^2 + 1152664*s13^7*s23^3 + 2308988*s13^6*s23^4 + 2059400*
                s13^5*s23^5 + 802732*s13^4*s23^6 + 46228*s13^3*s23^7 - 33997*
                s13^2*s23^8 - 215*s13*s23^9 - 1462*s23^10) + 
             2*s12^5*(162*s13^11 - 17694*s13^10*s23 + 89800*s13^9*s23^2 + 
               814635*s13^8*s23^3 + 1926231*s13^7*s23^4 + 2213198*s13^6*
                s23^5 + 1380782*s13^5*s23^6 + 437754*s13^4*s23^7 + 53006*
                s13^3*s23^8 + 528*s13^2*s23^9 - 3630*s13*s23^10 - 710*
                s23^11)) + p2q^3*p3q^2*(-10*s13^5*s23^4*(s13 + s23)^4*
              (23*s13^3 - 2*s13^2*s23 - 153*s13*s23^2 + 142*s23^3) + 
             2*s12*s13^4*s23^3*(s13 + s23)^4*(60*s13^4 - 1125*s13^3*s23 + 
               2040*s13^2*s23^2 - 706*s13*s23^3 - 731*s23^4) + 
             s12^11*(324*s13^5 - 63*s13^4*s23 - 1652*s13^3*s23^2 - 1009*s13^2*
                s23^3 + 326*s13*s23^4 + 230*s23^5) + s12^10*(-7452*s13^6 - 
               35388*s13^5*s23 - 46437*s13^4*s23^2 - 19918*s13^3*s23^3 + 945*
                s13^2*s23^4 + 2792*s13*s23^5 + 1230*s23^6) + 
             s12^2*s13^3*s23^2*(s13 + s23)^2*(366*s13^7 - 5572*s13^6*s23 - 
               10957*s13^5*s23^2 + 30890*s13^4*s23^3 + 25934*s13^3*s23^4 - 
               3002*s13^2*s23^5 + 2777*s13*s23^6 - 1496*s23^7) + 
             s12^9*(37692*s13^7 + 136809*s13^6*s23 + 179600*s13^5*s23^2 + 
               135442*s13^4*s23^3 + 83914*s13^3*s23^4 + 35063*s13^2*s23^5 + 
               7308*s13*s23^6 + 2160*s23^7) + s12^8*(60588*s13^8 + 484992*
                s13^7*s23 + 1268419*s13^6*s23^2 + 1629270*s13^5*s23^3 + 
               1152664*s13^4*s23^4 + 447272*s13^3*s23^5 + 84981*s13^2*s23^6 + 
               8458*s13*s23^7 + 940*s23^8) - s12^3*s13^2*s23*(s13 + s23)^2*
              (72*s13^8 + 4094*s13^7*s23 + 65265*s13^6*s23^2 - 58318*s13^5*
                s23^3 - 242864*s13^4*s23^4 - 152684*s13^3*s23^5 + 20133*s13^2*
                s23^6 + 6406*s13*s23^7 + 1052*s23^8) + 
             s12^7*(-20196*s13^9 + 272547*s13^8*s23 + 1685384*s13^7*s23^2 + 
               3565194*s13^6*s23^3 + 3852462*s13^5*s23^4 + 2308988*s13^4*
                s23^5 + 706426*s13^3*s23^6 + 79539*s13^2*s23^7 + 4102*s13*
                s23^8 - 1290*s23^9) + s12^6*(-32292*s13^10 - 157212*s13^9*
                s23 + 460009*s13^8*s23^2 + 2853260*s13^7*s23^3 + 5076346*
                s13^6*s23^4 + 4426396*s13^5*s23^5 + 2059400*s13^4*s23^6 + 
               479610*s13^3*s23^7 + 41325*s13^2*s23^8 - 396*s13*s23^9 - 1530*
                s23^10) + s12^5*(2916*s13^11 - 114021*s13^10*s23 - 358846*
                s13^9*s23^2 + 515350*s13^8*s23^3 + 2983886*s13^7*s23^4 + 
               4262338*s13^6*s23^5 + 2761564*s13^5*s23^6 + 802732*s13^4*
                s23^7 + 95998*s13^3*s23^8 + 20323*s13^2*s23^9 - 1336*s13*
                s23^10 - 460*s23^11) + s12^4*s13*(-108*s13^11 + 2808*s13^10*
                s23 - 136749*s13^9*s23^2 - 302592*s13^8*s23^3 + 486138*s13^7*
                s23^4 + 1983974*s13^6*s23^5 + 2128830*s13^5*s23^6 + 875508*
                s13^4*s23^7 + 46228*s13^3*s23^8 - 29292*s13^2*s23^9 + 5613*
                s13*s23^10 - 454*s23^11)) + p2q^4*p3q*s13*
            (-10*s13^4*s23^3*(s13 + s23)^4*(9*s13^4 + 28*s13^3*s23 + 42*s13^2*
                s23^2 - 286*s13*s23^3 + 96*s23^4) - s12^10*(324*s13^5 + 3537*
                s13^4*s23 + 5077*s13^3*s23^2 + 1697*s13^2*s23^3 - 183*s13*
                s23^4 + 144*s23^5) + s12^9*(7020*s13^6 + 52614*s13^5*s23 + 
               110820*s13^4*s23^2 + 102913*s13^3*s23^3 + 44926*s13^2*s23^4 + 
               7361*s13*s23^5 - 358*s23^6) - 2*s12*s13^3*s23^2*(s13 + s23)^3*
              (45*s13^6 - 93*s13^5*s23 + 2031*s13^4*s23^2 - 81*s13^3*s23^3 - 
               3864*s13^2*s23^4 + 209*s13*s23^5 + 473*s23^6) + 
             s12^2*s13^2*s23^2*(s13 + s23)^2*(588*s13^7 - 6791*s13^6*s23 - 
               25491*s13^5*s23^2 + 3687*s13^4*s23^3 + 20466*s13^3*s23^4 + 
               1074*s13^2*s23^5 + 465*s13*s23^6 - 592*s23^7) + 
             s12^8*(-18144*s13^7 + 40095*s13^6*s23 + 337200*s13^5*s23^2 + 
               613950*s13^4*s23^3 + 486289*s13^3*s23^4 + 171599*s13^2*s23^5 + 
               20159*s13*s23^6 + 340*s23^7) - s12^3*s13*s23*(s13 + s23)^2*
              (144*s13^8 - 2744*s13^7*s23 + 62086*s13^6*s23^2 + 47607*s13^5*
                s23^3 - 88371*s13^4*s23^4 - 80221*s13^3*s23^5 + 10373*s13^2*
                s23^6 + 3046*s13*s23^7 + 148*s23^8) + 
             s12^7*(-48168*s13^8 - 179712*s13^7*s23 + 25961*s13^6*s23^2 + 
               805944*s13^5*s23^3 + 1274010*s13^4*s23^4 + 855598*s13^3*
                s23^5 + 252717*s13^2*s23^6 + 23360*s13*s23^7 + 1790*s23^8) + 
             s12^6*(-12420*s13^9 - 222039*s13^8*s23 - 520712*s13^7*s23^2 + 
               8251*s13^6*s23^3 + 1206732*s13^5*s23^4 + 1478812*s13^4*s23^5 + 
               742279*s13^3*s23^6 + 168198*s13^2*s23^7 + 19573*s13*s23^8 + 
               1910*s23^9) + s12^5*(10044*s13^10 - 41958*s13^9*s23 - 407519*
                s13^8*s23^2 - 615857*s13^7*s23^3 + 252579*s13^6*s23^4 + 
               1275290*s13^5*s23^5 + 1042651*s13^4*s23^6 + 295480*s13^3*
                s23^7 + 27671*s13^2*s23^8 + 13847*s13*s23^9 + 736*s23^10) + 
             s12^4*(-216*s13^11 + 16281*s13^10*s23 - 57691*s13^9*s23^2 - 
               358213*s13^8*s23^3 - 322761*s13^7*s23^4 + 414223*s13^6*s23^5 + 
               812057*s13^5*s23^6 + 392737*s13^4*s23^7 + 13660*s13^3*s23^8 - 
               15536*s13^2*s23^9 + 4505*s13*s23^10 + 62*s23^11))) + 
         p1q^4*(-(p3q^3*(s12 + s23)*(-10*s13^4*s23^6*(s13 + s23)^4*(5*s13 + 
                14*s23) + 2*s12*s13^3*s23^5*(s13 + s23)^3*(154*s13^3 - 
                15*s13^2*s23 - 188*s13*s23^2 - 109*s23^3) + 2*s12^2*s13^3*s23^
                4*(s13 + s23)^2*(165*s13^4 + 2297*s13^3*s23 + 564*s13^2*
                 s23^2 - 1029*s13*s23^3 + 404*s23^4) - 9*s12^10*(288*s13^5 + 
                583*s13^4*s23 + 236*s13^3*s23^2 - 187*s13^2*s23^3 - 
                228*s13*s23^4 - 100*s23^5) - 2*s12^3*s13*s23^3*(s13 + s23)^2*(
                4982*s13^6 - 341*s13^5*s23 - 12358*s13^4*s23^2 - 
                12745*s13^3*s23^3 - 1397*s13^2*s23^4 - 586*s13*s23^5 + 
                151*s23^6) + s12^9*(2592*s13^6 + 17334*s13^5*s23 + 
                23389*s13^4*s23^2 + 5296*s13^3*s23^3 - 1811*s13^2*s23^4 + 
                4320*s13*s23^5 + 2460*s23^6) + s12^8*(12960*s13^7 + 
                48888*s13^6*s23 + 80019*s13^5*s23^2 + 49183*s13^4*s23^3 - 
                17159*s13^3*s23^4 - 21423*s13^2*s23^5 + 3918*s13*s23^6 + 
                3250*s23^7) - s12^6*s23*(2025*s13^8 + 13963*s13^7*s23 + 
                78819*s13^6*s23^2 + 157826*s13^5*s23^3 + 118882*s13^4*s23^4 + 
                12021*s13^3*s23^5 - 24406*s13^2*s23^6 - 10000*s13*s23^7 - 
                1350*s23^8) + s12^7*(7776*s13^8 + 36198*s13^7*s23 + 
                43457*s13^6*s23^2 - 18170*s13^5*s23^3 - 75866*s13^4*s23^4 - 
                61386*s13^3*s23^5 - 12995*s13^2*s23^6 + 8180*s13*s23^7 + 
                3250*s23^8) + s12^5*s23*(-11916*s13^9 - 51502*s13^8*s23 - 
                69922*s13^7*s23^2 - 37749*s13^6*s23^3 + 16182*s13^5*s23^4 + 
                63403*s13^4*s23^5 + 59622*s13^3*s23^6 + 21826*s13^2*s23^7 + 
                1542*s13*s23^8 - 950*s23^9) + s12^4*s23^2*(-21372*s13^9 - 
                64807*s13^8*s23 - 28333*s13^7*s23^2 + 107195*s13^6*s23^3 + 
                177133*s13^5*s23^4 + 119274*s13^4*s23^5 + 38646*s13^3*s23^6 + 
                2922*s13^2*s23^7 - 2230*s13*s23^8 - 740*s23^9))) - 
           p2q^3*(s13 + s23)*(10*s13^4*s23^5*(s13 + s23)^3*(90*s13^3 - 24*
                s13^2*s23 + 127*s13*s23^2 - 74*s23^3) + 2*s12*s13^3*s23^4*
              (s13 + s23)^2*(1026*s13^5 + 108*s13^4*s23 + 717*s13^3*s23^2 + 
               2548*s13^2*s23^3 - 813*s13*s23^4 - 151*s23^5) - 
             2*s12^9*s23*(5958*s13^5 + 10686*s13^4*s23 + 4982*s13^3*s23^2 - 
               165*s13^2*s23^3 - 154*s13*s23^4 + 25*s23^5) + 
             s12^2*s13^3*s23^3*(s13 + s23)^2*(1683*s13^5 - 5177*s13^4*s23 - 
               12752*s13^3*s23^2 + 17686*s13^2*s23^3 + 1786*s13*s23^4 + 568*
                s23^5) + s12^8*(7776*s13^7 - 2025*s13^6*s23 - 51502*s13^5*
                s23^2 - 64807*s13^4*s23^3 - 19246*s13^3*s23^4 + 5254*s13^2*
                s23^5 + 894*s13*s23^6 - 340*s23^7) + 
             s12^7*(12960*s13^8 + 36198*s13^7*s23 - 13963*s13^6*s23^2 - 69922*
                s13^5*s23^3 - 28333*s13^4*s23^4 + 16116*s13^3*s23^5 + 10646*
                s13^2*s23^6 + 458*s13*s23^7 - 860*s23^8) + 
             s12^6*(2592*s13^9 + 48888*s13^8*s23 + 43457*s13^7*s23^2 - 78819*
                s13^6*s23^3 - 37749*s13^5*s23^4 + 107195*s13^4*s23^5 + 75604*
                s13^3*s23^6 + 4792*s13^2*s23^7 - 1128*s13*s23^8 - 1040*
                s23^9) + s12^3*s13*s23^2*(-2124*s13^9 + 5296*s13^8*s23 - 
               17159*s13^7*s23^2 - 61386*s13^6*s23^3 - 12021*s13^5*s23^4 + 
               59622*s13^4*s23^5 + 38646*s13^3*s23^6 + 4836*s13^2*s23^7 + 808*
                s13*s23^8 - 218*s23^9) + s12^5*(-2592*s13^10 + 17334*s13^9*
                s23 + 80019*s13^8*s23^2 - 18170*s13^7*s23^3 - 157826*s13^6*
                s23^4 + 16182*s13^5*s23^5 + 177133*s13^4*s23^6 + 78490*s13^3*
                s23^7 - 2180*s13^2*s23^8 - 1812*s13*s23^9 - 610*s23^10) + 
             s12^4*s23*(-5247*s13^10 + 23389*s13^9*s23 + 49183*s13^8*s23^2 - 
               75866*s13^7*s23^3 - 118882*s13^6*s23^4 + 63403*s13^5*s23^5 + 
               119274*s13^4*s23^6 + 32250*s13^3*s23^7 - 442*s13^2*s23^8 - 
               1030*s13*s23^9 - 140*s23^10)) + p2q*p3q^2*
            (10*s13^3*s23^6*(s13 + s23)^4*(3*s13^3 - 35*s13^2*s23 + 83*s13*
                s23^2 - 14*s23^3) + 2*s12*s13^3*s23^5*(s13 + s23)^4*
              (858*s13^3 - 1580*s13^2*s23 + 1037*s13*s23^2 + 55*s23^3) - 
             9*s12^11*s23*(-7*s13^4 + 52*s13^3*s23 + 155*s13^2*s23^2 + 156*
                s13*s23^3 + 60*s23^4) + s12^2*s13^3*s23^4*(s13 + s23)^2*
              (5763*s13^5 + 10074*s13^4*s23 - 16510*s13^3*s23^2 - 10588*s13^2*
                s23^3 + 6375*s13*s23^4 - 2508*s23^5) - 
             s12^10*(12960*s13^6 + 49329*s13^5*s23 + 53978*s13^4*s23^2 + 
               10881*s13^3*s23^3 - 7394*s13^2*s23^4 + 1974*s13*s23^5 + 2160*
                s23^6) - s12^9*(7776*s13^7 + 24795*s13^6*s23 + 36543*s13^5*
                s23^2 + 222*s13^4*s23^3 - 60783*s13^3*s23^4 - 44545*s13^2*
                s23^5 + 2116*s13*s23^6 + 5180*s23^7) + 
             s12^8*(23328*s13^8 + 136440*s13^7*s23 + 395040*s13^6*s23^2 + 
               633496*s13^5*s23^3 + 543735*s13^4*s23^4 + 238736*s13^3*s23^5 + 
               36593*s13^2*s23^6 - 16386*s13*s23^7 - 8490*s23^8) + 
             s12^3*s23^3*(s13 + s23)^2*(2929*s13^8 + 69148*s13^7*s23 + 46395*
                s13^6*s23^2 - 50767*s13^5*s23^3 - 60699*s13^4*s23^4 - 6644*
                s13^3*s23^5 - 3402*s13^2*s23^6 + 474*s13*s23^7 - 140*s23^8) + 
             s12^7*(18144*s13^9 + 216135*s13^8*s23 + 752313*s13^7*s23^2 + 
               1380501*s13^6*s23^3 + 1530775*s13^5*s23^4 + 939321*s13^4*
                s23^5 + 203474*s13^3*s23^6 - 57601*s13^2*s23^7 - 31830*s13*
                s23^8 - 6600*s23^9) + s12^6*s23*(100809*s13^9 + 651729*s13^8*
                s23 + 1485652*s13^7*s23^2 + 1704876*s13^6*s23^3 + 1088660*
                s13^5*s23^4 + 306943*s13^4*s23^5 - 85959*s13^3*s23^6 - 91060*
                s13^2*s23^7 - 18014*s13*s23^8 + 260*s23^9) + 
             s12^4*s23^2*(-4471*s13^10 + 165885*s13^9*s23 + 637852*s13^8*
                s23^2 + 726784*s13^7*s23^3 + 19201*s13^6*s23^4 - 521857*s13^5*
                s23^5 - 363351*s13^4*s23^6 - 88712*s13^3*s23^7 - 4107*s13^2*
                s23^8 + 3894*s13*s23^9 + 870*s23^10) + s12^5*s23*
              (-3483*s13^10 + 191370*s13^9*s23 + 919555*s13^8*s23^2 + 1465004*
                s13^7*s23^3 + 835108*s13^6*s23^4 - 169105*s13^5*s23^5 - 
               429309*s13^4*s23^6 - 200389*s13^3*s23^7 - 34135*s13^2*s23^8 + 
               2676*s13*s23^9 + 2940*s23^10)) + p2q^2*p3q*
            (-10*s13^3*s23^5*(s13 + s23)^4*(54*s13^4 + 194*s13^2*s23^2 - 143*
                s13*s23^3 + 14*s23^4) - 2*s12*s13^3*s23^4*(s13 + s23)^3*
              (702*s13^5 - 1119*s13^4*s23 + 2309*s13^3*s23^2 + 3921*s13^2*
                s23^3 - 1656*s13*s23^4 - 97*s23^5) + s12^10*s23*
              (-3483*s13^5 - 4471*s13^4*s23 + 2929*s13^3*s23^2 + 5763*s13^2*
                s23^3 + 1716*s13*s23^4 + 30*s23^5) - s12^2*s13^3*s23^3*
              (s13 + s23)^2*(1395*s13^6 - 10184*s13^5*s23 - 25572*s13^4*
                s23^2 + 24735*s13^3*s23^3 + 33703*s13^2*s23^4 - 1081*s13*
                s23^5 + 2594*s23^6) + s12^9*(18144*s13^7 + 100809*s13^6*s23 + 
               191370*s13^5*s23^2 + 165885*s13^4*s23^3 + 75006*s13^3*s23^4 + 
               21600*s13^2*s23^5 + 3704*s13*s23^6 - 230*s23^7) + 
             s12^8*(23328*s13^8 + 216135*s13^7*s23 + 651729*s13^6*s23^2 + 
               919555*s13^5*s23^3 + 637852*s13^4*s23^4 + 187620*s13^3*s23^5 + 
               9401*s13^2*s23^6 - 270*s13*s23^7 - 390*s23^8) - 
             s12^3*s23^2*(s13 + s23)^2*(468*s13^9 + 9945*s13^8*s23 - 81141*
                s13^7*s23^2 - 86399*s13^6*s23^3 + 50465*s13^5*s23^4 + 71428*
                s13^4*s23^5 + 7068*s13^3*s23^6 + 3148*s13^2*s23^7 - 390*s13*
                s23^8 + 140*s23^9) + s12^7*(-7776*s13^9 + 136440*s13^8*s23 + 
               752313*s13^7*s23^2 + 1485652*s13^6*s23^3 + 1465004*s13^5*
                s23^4 + 726784*s13^4*s23^5 + 111171*s13^3*s23^6 - 33534*s13^2*
                s23^7 - 3690*s13*s23^8 + 1200*s23^9) + s12^5*s23*
              (-49329*s13^10 - 36543*s13^9*s23 + 633496*s13^8*s23^2 + 1530775*
                s13^7*s23^3 + 1088660*s13^6*s23^4 - 169105*s13^5*s23^5 - 
               521857*s13^4*s23^6 - 178809*s13^3*s23^7 - 346*s13^2*s23^8 + 
               5796*s13*s23^9 + 2130*s23^10) + s12^6*(-12960*s13^10 - 24795*
                s13^9*s23 + 395040*s13^8*s23^2 + 1380501*s13^7*s23^3 + 
               1704876*s13^6*s23^4 + 835108*s13^5*s23^5 + 19201*s13^4*s23^6 - 
               115838*s13^3*s23^7 - 31311*s13^2*s23^8 + 1960*s13*s23^9 + 3050*
                s23^10) + s12^4*s23*(63*s13^11 - 53978*s13^10*s23 - 222*s13^9*
                s23^2 + 543735*s13^8*s23^3 + 939321*s13^7*s23^4 + 306943*
                s13^6*s23^5 - 429309*s13^5*s23^6 - 363351*s13^4*s23^7 - 77389*
                s13^3*s23^8 + 1359*s13^2*s23^9 + 2514*s13*s23^10 + 270*
                s23^11))) + p1q^3*(p3q^4*s12*(s12 + s23)*
            (6*s13^4*s23^5*(s13 + s23)^3*(12*s13^2 + 14*s13*s23 - 13*s23^2) + 
             18*s12^10*s23^2*(16*s13^2 + 41*s13*s23 + 25*s23^2) + 
             s12*s13^3*s23^4*(s13 + s23)^2*(1620*s13^4 + 741*s13^3*s23 + 1986*
                s13^2*s23^2 + 2549*s13*s23^3 - 226*s23^4) + s12^2*s13^2*s23^3*
              (s13 + s23)^2*(11770*s13^5 + 14944*s13^4*s23 + 6229*s13^3*
                s23^2 - 7805*s13^2*s23^3 + 1266*s13*s23^4 - 592*s23^5) + 
             2*s12^9*(3942*s13^5 + 7362*s13^4*s23 + 2587*s13^3*s23^2 - 943*
                s13^2*s23^3 + 555*s13*s23^4 + 595*s23^5) + 
             2*s12^8*(4104*s13^6 + 7623*s13^5*s23 + 2117*s13^4*s23^2 - 4807*
                s13^3*s23^3 - 2994*s13^2*s23^4 + 1096*s13*s23^5 + 925*
                s23^6) - 2*s12^7*(3564*s13^7 + 12294*s13^6*s23 + 26214*s13^5*
                s23^2 + 27935*s13^4*s23^3 + 5234*s13^3*s23^4 - 8127*s13^2*
                s23^5 - 3525*s13*s23^6 - 675*s23^7) + 
             s12^6*(-7344*s13^8 - 33552*s13^7*s23 - 51036*s13^6*s23^2 - 13615*
                s13^5*s23^3 + 45639*s13^4*s23^4 + 71089*s13^3*s23^5 + 41073*
                s13^2*s23^6 + 3630*s13*s23^7 - 1900*s23^8) + 
             s12^3*s13*s23^2*(21172*s13^8 + 85309*s13^7*s23 + 137448*s13^6*
                s23^2 + 115279*s13^5*s23^3 + 47994*s13^4*s23^4 + 2021*s13^3*
                s23^5 - 5310*s13^2*s23^6 - 2553*s13*s23^7 - 1248*s23^8) + 
             s12^5*(108*s13^9 + 3096*s13^8*s23 + 23170*s13^7*s23^2 + 108355*
                s13^6*s23^3 + 219200*s13^5*s23^4 + 215938*s13^4*s23^5 + 
               107904*s13^3*s23^6 + 19221*s13^2*s23^7 - 7492*s13*s23^8 - 3700*
                s23^9) + s12^4*s23*(11538*s13^9 + 61746*s13^8*s23 + 142093*
                s13^7*s23^2 + 227049*s13^6*s23^3 + 237422*s13^5*s23^4 + 
               136580*s13^4*s23^5 + 35517*s13^3*s23^6 - 3745*s13^2*s23^7 - 
               7140*s13*s23^8 - 1560*s23^9)) + p2q^4*s13*(s13 + s23)*
            (10*s13^4*s23^4*(s13 + s23)^3*(45*s13^3 - 16*s13^2*s23 + 98*s13*
                s23^2 - 156*s23^3) + 2*s12*s13^3*s23^3*(s13 + s23)^2*
              (369*s13^5 - 183*s13^4*s23 + 1093*s13^3*s23^2 + 1522*s13^2*
                s23^3 - 2322*s13*s23^4 - 624*s23^5) + 
             2*s12^9*(54*s13^5 + 5769*s13^4*s23 + 10586*s13^3*s23^2 + 5885*
                s13^2*s23^3 + 810*s13*s23^4 + 36*s23^5) + s12^2*s13^2*s23^2*
              (s13 + s23)^2*(288*s13^6 - 2462*s13^5*s23 - 1352*s13^4*s23^2 + 
               21420*s13^3*s23^3 - 415*s13^2*s23^4 - 1369*s13*s23^5 - 592*
                s23^6) + s12^8*(-7344*s13^6 + 3096*s13^5*s23 + 61746*s13^4*
                s23^2 + 85309*s13^3*s23^3 + 38484*s13^2*s23^4 + 3981*s13*
                s23^5 + 300*s23^6) + s12^7*(-7128*s13^7 - 33552*s13^6*s23 + 
               23170*s13^5*s23^2 + 142093*s13^4*s23^3 + 137448*s13^3*s23^4 + 
               47887*s13^2*s23^5 + 5088*s13*s23^6 + 390*s23^7) + 
             s12^3*s13*s23^2*(5174*s13^8 - 9614*s13^7*s23 - 10468*s13^6*
                s23^2 + 71089*s13^5*s23^3 + 107904*s13^4*s23^4 + 35517*s13^3*
                s23^5 - 5310*s13^2*s23^6 + 82*s13*s23^7 - 226*s23^8) + 
             s12^6*(8208*s13^8 - 24588*s13^7*s23 - 51036*s13^6*s23^2 + 108355*
                s13^5*s23^3 + 227049*s13^4*s23^4 + 115279*s13^3*s23^5 + 19597*
                s13^2*s23^6 + 7262*s13*s23^7 + 90*s23^8) + 
             s12^5*(7884*s13^9 + 15246*s13^8*s23 - 52428*s13^7*s23^2 - 13615*
                s13^6*s23^3 + 219200*s13^5*s23^4 + 237422*s13^4*s23^5 + 47994*
                s13^3*s23^6 - 8115*s13^2*s23^7 + 6858*s13*s23^8 - 150*
                s23^9) + s12^4*s23*(14724*s13^9 + 4234*s13^8*s23 - 55870*
                s13^7*s23^2 + 45639*s13^6*s23^3 + 215938*s13^5*s23^4 + 136580*
                s13^4*s23^5 + 2021*s13^3*s23^6 - 5865*s13^2*s23^7 + 2097*s13*
                s23^8 - 78*s23^9)) + p2q*p3q^3*(-10*s13^4*s23^6*(s13 + s23)^4*
              (19*s13^2 + 41*s13*s23 - 14*s23^2) + 72*s12^12*s23^2*
              (4*s13^2 + 9*s13*s23 + 5*s23^2) + 2*s12*s13^3*s23^5*
              (s13 + s23)^3*(92*s13^4 - 764*s13^3*s23 - 829*s13^2*s23^2 - 294*
                s13*s23^3 + 39*s23^4) + s12^2*s13^3*s23^4*(s13 + s23)^2*
              (2937*s13^5 + 12906*s13^4*s23 - 2494*s13^3*s23^2 - 4644*s13^2*
                s23^3 + 4307*s13*s23^4 - 2432*s23^5) + 
             s12^11*(5400*s13^5 + 8541*s13^4*s23 - 758*s13^3*s23^2 - 5413*
                s13^2*s23^3 + 486*s13*s23^4 + 1700*s23^5) - 
             s12^10*(25272*s13^6 + 90630*s13^5*s23 + 108713*s13^4*s23^2 + 
               58684*s13^3*s23^3 + 14969*s13^2*s23^4 - 4720*s13*s23^5 - 5020*
                s23^6) - s12^9*(46224*s13^7 + 220329*s13^6*s23 + 415644*s13^5*
                s23^2 + 338516*s13^4*s23^3 + 76582*s13^3*s23^4 - 37839*s13^2*
                s23^5 - 23764*s13*s23^6 - 7400*s23^7) + s12^3*s13*s23^3*
              (s13 + s23)^2*(415*s13^7 + 78694*s13^6*s23 + 89418*s13^5*
                s23^2 + 10138*s13^4*s23^3 - 46755*s13^3*s23^4 - 5400*s13^2*
                s23^5 - 2668*s13*s23^6 + 302*s23^7) + 
             s12^8*(4752*s13^8 - 55404*s13^7*s23 - 195885*s13^6*s23^2 - 
               160934*s13^5*s23^3 + 63600*s13^4*s23^4 + 191300*s13^3*s23^5 + 
               128907*s13^2*s23^6 + 30732*s13*s23^7 + 1400*s23^8) + 
             s12^7*(20088*s13^9 + 175779*s13^8*s23 + 484518*s13^7*s23^2 + 
               836368*s13^6*s23^3 + 1119056*s13^5*s23^4 + 956882*s13^4*
                s23^5 + 439040*s13^3*s23^6 + 101021*s13^2*s23^7 + 2868*s13*
                s23^8 - 7340*s23^9) + s12^6*(-216*s13^10 + 104562*s13^9*s23 + 
               643065*s13^8*s23^2 + 1467910*s13^7*s23^3 + 1907312*s13^6*
                s23^4 + 1638592*s13^5*s23^5 + 883138*s13^4*s23^6 + 237404*
                s13^3*s23^7 + 6945*s13^2*s23^8 - 16584*s13*s23^9 - 6100*
                s23^10) + s12^5*s23*(-5463*s13^10 + 190988*s13^9*s23 + 969218*
                s13^8*s23^2 + 1741820*s13^7*s23^3 + 1529858*s13^6*s23^4 + 
               663040*s13^5*s23^5 + 65622*s13^4*s23^6 - 46336*s13^3*s23^7 - 
               14423*s13^2*s23^8 - 7260*s13*s23^9 - 480*s23^10) + 
             s12^4*s23^2*(-7075*s13^10 + 167772*s13^9*s23 + 713816*s13^8*
                s23^2 + 1023420*s13^7*s23^3 + 523918*s13^6*s23^4 - 107864*
                s13^5*s23^5 - 205656*s13^4*s23^6 - 62580*s13^3*s23^7 - 4211*
                s13^2*s23^8 + 644*s13*s23^9 + 600*s23^10)) + 
           p2q^3*p3q*(20*s13^4*s23^4*(s13 + s23)^4*(18*s13^4 + 13*s13^3*s23 + 
               91*s13^2*s23^2 - 144*s13*s23^3 + 30*s23^4) + 
             s12^10*(-216*s13^6 - 5463*s13^5*s23 - 7075*s13^4*s23^2 + 415*
                s13^3*s23^3 + 2937*s13^2*s23^4 + 184*s13*s23^5 - 190*s23^6) + 
             2*s12*s13^3*s23^3*(s13 + s23)^3*(324*s13^6 - 729*s13^5*s23 + 
               3575*s13^4*s23^2 + 3020*s13^3*s23^3 - 3690*s13^2*s23^4 - 131*
                s13*s23^5 + 151*s23^6) + s12^2*s13^3*s23^2*(s13 + s23)^2*
              (288*s13^7 - 5989*s13^6*s23 - 3279*s13^5*s23^2 + 50386*s13^4*
                s23^3 + 31414*s13^3*s23^4 - 12193*s13^2*s23^5 - 83*s13*
                s23^6 - 2064*s23^7) + 2*s12^9*(10044*s13^7 + 52281*s13^6*
                s23 + 95494*s13^5*s23^2 + 83886*s13^4*s23^3 + 39762*s13^3*
                s23^4 + 9390*s13^2*s23^5 - 488*s13*s23^6 - 585*s23^7) + 
             s12^8*(4752*s13^8 + 175779*s13^7*s23 + 643065*s13^6*s23^2 + 
               969218*s13^5*s23^3 + 713816*s13^4*s23^4 + 247221*s13^3*s23^5 + 
               26255*s13^2*s23^6 - 5690*s13*s23^7 - 2640*s23^8) - 
             2*s12^3*s13*s23^2*(s13 + s23)^2*(379*s13^8 + 28584*s13^7*s23 - 
               19256*s13^6*s23^2 - 85722*s13^5*s23^3 - 28820*s13^4*s23^4 + 
               24660*s13^3*s23^5 + 2668*s13^2*s23^6 + 1294*s13*s23^7 - 39*
                s23^8) + 2*s12^7*(-23112*s13^9 - 27702*s13^8*s23 + 242259*
                s13^7*s23^2 + 733955*s13^6*s23^3 + 870910*s13^5*s23^4 + 
               511710*s13^4*s23^5 + 133834*s13^3*s23^6 + 1637*s13^2*s23^7 - 
               4981*s13*s23^8 - 1330*s23^9) + s12^6*(-25272*s13^10 - 220329*
                s13^9*s23 - 195885*s13^8*s23^2 + 836368*s13^7*s23^3 + 1907312*
                s13^6*s23^4 + 1529858*s13^5*s23^5 + 523918*s13^4*s23^6 + 
               62939*s13^3*s23^7 - 7475*s13^2*s23^8 - 8188*s13*s23^9 - 990*
                s23^10) + 2*s12^5*(2700*s13^11 - 45315*s13^10*s23 - 207822*
                s13^9*s23^2 - 80467*s13^8*s23^3 + 559528*s13^7*s23^4 + 819296*
                s13^6*s23^5 + 331520*s13^5*s23^6 - 53932*s13^4*s23^7 - 44386*
                s13^3*s23^8 + 769*s13^2*s23^9 - 1594*s13*s23^10 + 75*
                s23^11) + s12^4*s23*(8541*s13^11 - 108713*s13^10*s23 - 338516*
                s13^9*s23^2 + 63600*s13^8*s23^3 + 956882*s13^7*s23^4 + 883138*
                s13^6*s23^5 + 65622*s13^5*s23^6 - 205656*s13^4*s23^7 - 60223*
                s13^3*s23^8 - 557*s13^2*s23^9 - 354*s13*s23^10 + 140*
                s23^11)) + p2q^2*p3q^2*(10*s13^4*s23^5*(s13 + s23)^4*
              (15*s13^3 + 38*s13^2*s23 - 173*s13*s23^2 + 74*s23^3) - 
             2*s12*s13^3*s23^4*(s13 + s23)^4*(609*s13^4 - 2229*s13^3*s23 + 
               2404*s13^2*s23^2 - 48*s13*s23^3 - 190*s23^4) + 
             s12^11*(108*s13^5 - 999*s13^4*s23 - 3340*s13^3*s23^2 - 3761*
                s13^2*s23^3 - 1218*s13*s23^4 + 150*s23^5) - 
             s12^10*(18144*s13^6 + 72567*s13^5*s23 + 88090*s13^4*s23^2 + 
               39051*s13^3*s23^3 + 6138*s13^2*s23^4 + 414*s13*s23^5 - 980*
                s23^6) - s12^2*s13^3*s23^3*(s13 + s23)^2*(3761*s13^6 - 1384*
                s13^5*s23 - 35052*s13^4*s23^2 - 1528*s13^3*s23^3 + 18341*
                s13^2*s23^4 - 3660*s13*s23^5 + 3678*s23^6) + 
             s12^9*(19764*s13^7 + 49671*s13^6*s23 + 23464*s13^5*s23^2 + 7124*
                s13^4*s23^3 + 41800*s13^3*s23^4 + 34059*s13^2*s23^5 + 5716*
                s13*s23^6 + 690*s23^7) + s12^8*(76032*s13^8 + 450423*s13^7*
                s23 + 1054122*s13^6*s23^2 + 1323288*s13^5*s23^3 + 942872*
                s13^4*s23^4 + 369491*s13^3*s23^5 + 73016*s13^2*s23^6 + 2740*
                s13*s23^7 - 3300*s23^8) - s12^3*s13*s23^2*(s13 + s23)^2*
              (3340*s13^8 + 32371*s13^7*s23 - 109882*s13^6*s23^2 - 182098*
                s13^5*s23^3 - 18896*s13^4*s23^4 + 85471*s13^3*s23^5 + 12264*
                s13^2*s23^6 + 4438*s13*s23^7 - 380*s23^8) + 
             s12^7*(19764*s13^9 + 450423*s13^8*s23 + 1782952*s13^7*s23^2 + 
               3177824*s13^6*s23^3 + 3172880*s13^5*s23^4 + 1811796*s13^4*
                s23^5 + 492974*s13^3*s23^6 + 19767*s13^2*s23^7 - 11470*s13*
                s23^8 - 5750*s23^9) + s12^6*(-18144*s13^10 + 49671*s13^9*
                s23 + 1054122*s13^8*s23^2 + 3177824*s13^7*s23^3 + 4248440*
                s13^6*s23^4 + 2979358*s13^5*s23^5 + 1080330*s13^4*s23^6 + 
               134419*s13^3*s23^7 - 31494*s13^2*s23^8 - 12678*s13*s23^9 - 
               2100*s23^10) + s12^4*s23*(-999*s13^11 - 88090*s13^10*s23 + 
               7124*s13^9*s23^2 + 942872*s13^8*s23^3 + 1811796*s13^7*s23^4 + 
               1080330*s13^6*s23^5 - 171276*s13^5*s23^6 - 398332*s13^4*
                s23^7 - 114437*s13^3*s23^8 - 3696*s13^2*s23^9 + 1616*s13*
                s23^10 + 740*s23^11) + s12^5*(108*s13^11 - 72567*s13^10*s23 + 
               23464*s13^9*s23^2 + 1323288*s13^8*s23^3 + 3172880*s13^7*
                s23^4 + 2979358*s13^6*s23^5 + 1012936*s13^5*s23^6 - 171276*
                s13^4*s23^7 - 164310*s13^3*s23^8 - 14699*s13^2*s23^9 - 2144*
                s13*s23^10 + 1230*s23^11))))/(144*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12^3*s13^3*(s12 + s13)*s23^2*(s12 + s23)^2*
         (s13 + s23)^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + 
       ((9*p1q^7*s23^3*(s12 + s23)^2*(s13 + s23)^2*
           (5*s13^4*s23^2*(s13 + s23)^3 + s12^7*s23*(21*s13 + 5*s23) + 
            s12*s13^3*s23*(s13 + s23)^2*(21*s13^2 + 35*s13*s23 + 20*s23^2) + 
            s12^6*(36*s13^3 + 130*s13^2*s23 + 77*s13*s23^2 + 15*s23^3) + 
            s12^5*(108*s13^4 + 475*s13^3*s23 + 463*s13^2*s23^2 + 
              111*s13*s23^3 + 15*s23^4) + s12^2*s13^2*s23*(130*s13^4 + 
              463*s13^3*s23 + 633*s13^2*s23^2 + 402*s13*s23^3 + 102*s23^4) + 
            s12^4*(108*s13^5 + 732*s13^4*s23 + 1219*s13^3*s23^2 + 
              633*s13^2*s23^3 + 75*s13*s23^4 + 5*s23^5) + 
            s12^3*s13*(36*s13^5 + 475*s13^4*s23 + 1219*s13^3*s23^2 + 
              1146*s13^2*s23^3 + 402*s13*s23^4 + 20*s23^5)) + 
          9*(p2q + p3q)^2*(s12 + s13)*(s12 + s13 + s23)*
           (p3q^5*s12^3*(s12 + s23)^2*(16*s13^4*s23^2*(s13 + s23)^3 + 
              5*s12^7*s23*(2*s13 + s23) + 5*s12^6*s23*(10*s13^2 + 
                13*s13*s23 + 4*s23^2) + s12*s13^3*s23*(32*s13^4 + 
                88*s13^3*s23 + 93*s13^2*s23^2 + 45*s13*s23^3 + 8*s23^4) + 
              s12^5*(36*s13^4 + 140*s13^3*s23 + 192*s13^2*s23^2 + 
                103*s13*s23^3 + 25*s23^4) + s12^2*s13^2*s23*(92*s13^4 + 
                271*s13^3*s23 + 344*s13^2*s23^2 + 228*s13*s23^3 + 68*s23^4) + 
              2*s12^4*(36*s13^5 + 153*s13^4*s23 + 239*s13^3*s23^2 + 
                143*s13^2*s23^3 + 31*s13*s23^4 + 5*s23^5) + s12^3*s13*(
                36*s13^5 + 266*s13^4*s23 + 617*s13^3*s23^2 + 574*s13^2*
                 s23^3 + 196*s13*s23^4 + 14*s23^5)) + p2q^5*s13^3*
             (s13 + s23)^2*(16*s12^7*s23*(2*s13 + s23) + 5*s13^4*s23^2*
               (s13 + s23)^2*(s13 + 2*s23) + 4*s12^6*(9*s13^3 + 
                23*s13^2*s23 + 22*s13*s23^2 + 12*s23^3) + 2*s12^3*s13*s23*(
                70*s13^4 + 239*s13^3*s23 + 287*s13^2*s23^2 + 114*s13*s23^3 + 
                4*s23^4) + s12*s13^3*s23*(10*s13^4 + 65*s13^3*s23 + 
                103*s13^2*s23^2 + 62*s13*s23^3 + 14*s23^4) + 
              2*s12^2*s13^2*s23*(25*s13^4 + 96*s13^3*s23 + 143*s13^2*s23^2 + 
                98*s13*s23^3 + 34*s23^4) + s12^5*(72*s13^4 + 266*s13^3*s23 + 
                271*s13^2*s23^2 + 93*s13*s23^3 + 48*s23^4) + 
              s12^4*(36*s13^5 + 306*s13^4*s23 + 617*s13^3*s23^2 + 
                344*s13^2*s23^3 + 45*s13*s23^4 + 16*s23^5)) - 
            p2q^2*p3q^3*s12*s13*(s12 + s23)*(-16*s13^4*s23^3*(s13 + s23)^4 + 
              s12^8*s23*(20*s13^2 + 37*s13*s23 + 12*s23^2) - s12*s13^3*s23^
                2*(s13 + s23)^2*(87*s13^3 + 217*s13^2*s23 + 319*s13*s23^2 + 
                138*s23^3) + s12^7*(144*s13^4 + 326*s13^3*s23 + 285*s13^2*
                 s23^2 + 113*s13*s23^3 + 15*s23^4) + s12^6*(72*s13^5 + 
                632*s13^4*s23 + 1511*s13^3*s23^2 + 1376*s13^2*s23^3 + 
                457*s13*s23^4 + 42*s23^5) - s12^3*s13*s23*(646*s13^6 + 
                3647*s13^5*s23 + 7819*s13^4*s23^2 + 7965*s13^3*s23^3 + 
                3790*s13^2*s23^4 + 594*s13*s23^5 - 44*s23^6) + 
              s12^5*(-288*s13^6 - 1152*s13^5*s23 - 691*s13^4*s23^2 + 
                1497*s13^3*s23^3 + 1928*s13^2*s23^4 + 701*s13*s23^5 + 
                87*s23^6) - s12^2*s13^2*s23*(104*s13^6 + 757*s13^5*s23 + 
                2560*s13^4*s23^2 + 4321*s13^3*s23^3 + 3834*s13^2*s23^4 + 
                1762*s13*s23^5 + 342*s23^6) - s12^4*(216*s13^7 + 
                2020*s13^6*s23 + 5651*s13^5*s23^2 + 5988*s13^4*s23^3 + 
                1854*s13^3*s23^4 - 598*s13^2*s23^5 - 364*s13*s23^6 - 
                48*s23^7)) - p2q*p3q^4*s12^2*(s12 + s23)*
             (16*s13^4*s23^3*(s13 + s23)^3*(2*s13 + s23) + s12^8*s23*(
                24*s13^2 + 19*s13*s23 + 5*s23^2) + s12^7*(-36*s13^4 + 
                82*s13^3*s23 + 221*s13^2*s23^2 + 133*s13*s23^3 + 25*s23^4) + 
              s12*s13^3*s23^2*(118*s13^5 + 470*s13^4*s23 + 782*s13^3*s23^2 + 
                629*s13^2*s23^3 + 207*s13*s23^4 + 8*s23^5) + 
              s12^6*(72*s13^5 + 338*s13^4*s23 + 590*s13^3*s23^2 + 
                473*s13^2*s23^3 + 219*s13*s23^4 + 45*s23^5) + 
              s12^3*s13*s23*(524*s13^6 + 2797*s13^5*s23 + 5757*s13^4*s23^2 + 
                5359*s13^3*s23^3 + 2100*s13^2*s23^4 + 234*s13*s23^5 + 
                14*s23^6) + s12^5*(252*s13^6 + 1386*s13^5*s23 + 2498*s13^4*
                 s23^2 + 1768*s13^3*s23^3 + 508*s13^2*s23^4 + 129*s13*s23^5 + 
                35*s23^6) + s12^2*s13^2*s23*(102*s13^6 + 722*s13^5*s23 + 
                2127*s13^4*s23^2 + 2989*s13^3*s23^3 + 2055*s13^2*s23^4 + 
                646*s13*s23^5 + 68*s23^6) + s12^4*(144*s13^7 + 1528*s13^6*
                 s23 + 4663*s13^5*s23^2 + 5635*s13^4*s23^3 + 2706*s13^3*
                 s23^4 + 398*s13^2*s23^5 + 38*s13*s23^6 + 10*s23^7)) - 
            p2q^4*p3q*s13^2*(s13 + s23)*(5*s13^4*s23^3*(s13 + s23)^3*(s13 + 
                2*s23) + 2*s12^8*s23*(51*s13^2 + 59*s13*s23 + 16*s23^2) + 
              s12*s13^3*s23^2*(s13 + s23)^2*(19*s13^3 + 95*s13^2*s23 + 
                10*s13*s23^2 + 14*s23^3) + 2*s12^7*(72*s13^4 + 262*s13^3*
                 s23 + 361*s13^2*s23^2 + 235*s13*s23^3 + 56*s23^4) + 
              s12^6*(252*s13^5 + 1528*s13^4*s23 + 2797*s13^3*s23^2 + 
                2127*s13^2*s23^3 + 782*s13*s23^4 + 144*s23^5) + 
              2*s12^3*s13*s23*(41*s13^6 + 295*s13^5*s23 + 884*s13^4*s23^2 + 
                1353*s13^3*s23^3 + 1050*s13^2*s23^4 + 323*s13*s23^5 + 
                4*s23^6) + s12^2*s13^2*s23*(24*s13^6 + 221*s13^5*s23 + 
                473*s13^4*s23^2 + 508*s13^3*s23^3 + 398*s13^2*s23^4 + 
                234*s13*s23^5 + 68*s23^6) + s12^5*(72*s13^6 + 1386*s13^5*
                 s23 + 4663*s13^4*s23^2 + 5757*s13^3*s23^3 + 2989*s13^2*
                 s23^4 + 629*s13*s23^5 + 80*s23^6) + s12^4*(-36*s13^7 + 
                338*s13^6*s23 + 2498*s13^5*s23^2 + 5635*s13^4*s23^3 + 
                5359*s13^3*s23^4 + 2055*s13^2*s23^5 + 207*s13*s23^6 + 
                16*s23^7)) + p2q^3*p3q^2*s12*s13*(s13 + s23)*
             (-3*s13^4*s23^3*(s13 + s23)^2*(4*s13^2 - 3*s13*s23 + 16*s23^2) + 
              s12^8*s23*(104*s13^2 + 87*s13*s23 + 16*s23^2) + 
              s12^7*(216*s13^4 + 646*s13^3*s23 + 757*s13^2*s23^2 + 
                391*s13*s23^3 + 64*s23^4) - s12*s13^3*s23^2*(37*s13^5 + 
                113*s13^4*s23 + 457*s13^3*s23^2 + 701*s13^2*s23^3 + 
                364*s13*s23^4 + 44*s23^5) + s12^6*(288*s13^5 + 2020*s13^4*
                 s23 + 3647*s13^3*s23^2 + 2560*s13^2*s23^3 + 840*s13*s23^4 + 
                96*s23^5) - s12^2*s13^2*s23*(20*s13^6 + 285*s13^5*s23 + 
                1376*s13^4*s23^2 + 1928*s13^3*s23^3 + 598*s13^2*s23^4 - 
                594*s13*s23^5 - 342*s23^6) + s12^5*(-72*s13^6 + 1152*s13^5*
                 s23 + 5651*s13^4*s23^2 + 7819*s13^3*s23^3 + 4321*s13^2*
                 s23^4 + 993*s13*s23^5 + 64*s23^6) + s12^3*s13*s23*(
                -326*s13^6 - 1511*s13^5*s23 - 1497*s13^4*s23^2 + 
                1854*s13^3*s23^3 + 3790*s13^2*s23^4 + 1762*s13*s23^5 + 
                138*s23^6) + s12^4*(-144*s13^7 - 632*s13^6*s23 + 
                691*s13^5*s23^2 + 5988*s13^4*s23^3 + 7965*s13^3*s23^4 + 
                3834*s13^2*s23^5 + 595*s13*s23^6 + 16*s23^7))) - 
          p1q^6*s23^2*(s12 + s23)*(s13 + s23)*(p2q*(s13 + s23)*
             (9*s12^9*s23*(21*s13 + 5*s23) + 5*s13^3*s23^3*(s13 + s23)^2*(
                45*s13^3 + 33*s13^2*s23 + 22*s13*s23^2 + 18*s23^3) + 
              3*s12^8*(216*s13^3 + 717*s13^2*s23 + 301*s13*s23^2 + 
                40*s23^3) + 2*s12^7*(1134*s13^4 + 5067*s13^3*s23 + 
                4671*s13^2*s23^2 + 910*s13*s23^3 + 100*s23^4) + 
              s12^6*(3564*s13^5 + 21600*s13^4*s23 + 32440*s13^3*s23^2 + 
                16033*s13^2*s23^3 + 3777*s13*s23^4 + 420*s23^5) + 
              s12^5*(2916*s13^6 + 26523*s13^5*s23 + 57956*s13^4*s23^2 + 
                46018*s13^3*s23^3 + 19272*s13^2*s23^4 + 7180*s13*s23^5 + 
                585*s23^6) + s12*s13^2*s23^2*(981*s13^6 + 3687*s13^5*s23 + 
                5038*s13^4*s23^2 + 4874*s13^3*s23^3 + 5051*s13^2*s23^4 + 
                3243*s13*s23^5 + 734*s23^6) + s12^3*s23*(5346*s13^7 + 
                31860*s13^6*s23 + 58679*s13^5*s23^2 + 49892*s13^4*s23^3 + 
                30700*s13^3*s23^4 + 16050*s13^2*s23^5 + 3887*s13*s23^6 + 
                90*s23^7) + s12^4*(972*s13^7 + 17829*s13^6*s23 + 
                60403*s13^5*s23^2 + 71858*s13^4*s23^3 + 41424*s13^3*s23^4 + 
                21402*s13^2*s23^5 + 7662*s13*s23^6 + 380*s23^7) + 
              s12^2*s13*s23*(612*s13^7 + 7734*s13^6*s23 + 21320*s13^5*s23^2 + 
                25346*s13^4*s23^3 + 21563*s13^3*s23^4 + 15493*s13^2*s23^5 + 
                5812*s13*s23^6 + 734*s23^7)) + p3q*(9*s12^9*s23*(68*s13^2 + 
                109*s13*s23 + 25*s23^2) + 5*s13^3*s23^3*(s13 + s23)^3*(
                9*s13^3 - 3*s13^2*s23 + 22*s13*s23^2 + 18*s23^3) + 
              6*s12^8*(162*s13^4 + 891*s13^3*s23 + 1391*s13^2*s23^2 + 
                778*s13*s23^3 + 140*s23^4) + s12*s13^2*s23^2*(s13 + s23)^2*(
                234*s13^5 + 555*s13^4*s23 + 676*s13^3*s23^2 + 2290*s13^2*
                 s23^3 + 2509*s13*s23^4 + 734*s23^5) + s12^7*(2916*s13^5 + 
                18801*s13^4*s23 + 37206*s13^3*s23^2 + 29054*s13^2*s23^3 + 
                8725*s13*s23^4 + 1280*s23^5) + s12^2*s13*s23*(s13 + s23)^2*(
                189*s13^6 + 2676*s13^5*s23 + 5621*s13^4*s23^2 + 5892*s13^3*
                 s23^3 + 9047*s13^2*s23^4 + 5078*s13*s23^5 + 734*s23^6) + 
              s12^6*(3564*s13^6 + 29439*s13^5*s23 + 78232*s13^4*s23^2 + 
                90539*s13^3*s23^3 + 46666*s13^2*s23^4 + 9912*s13*s23^5 + 
                1140*s23^6) + s12^5*(2268*s13^7 + 25164*s13^6*s23 + 
                84479*s13^5*s23^2 + 132261*s13^4*s23^3 + 108571*s13^3*s23^4 + 
                46909*s13^2*s23^5 + 9925*s13*s23^6 + 765*s23^7) + 
              s12^3*s23*(2799*s13^8 + 19476*s13^7*s23 + 48473*s13^6*s23^2 + 
                65290*s13^5*s23^3 + 62826*s13^4*s23^4 + 46750*s13^3*s23^5 + 
                21305*s13^2*s23^6 + 3977*s13*s23^7 + 90*s23^8) + 
              2*s12^4*(324*s13^8 + 6201*s13^7*s23 + 27020*s13^6*s23^2 + 
                51987*s13^5*s23^3 + 56641*s13^4*s23^4 + 40296*s13^3*s23^5 + 
                18528*s13^2*s23^6 + 4147*s13*s23^7 + 190*s23^8))) + 
          p1q^5*s23*(s12 + s23)*(s13 + s23)*(p2q^2*(s13 + s23)*
             (12*s12^9*(27*s13^3 + 66*s13^2*s23 - 2*s13*s23^2 - 5*s23^3) + 
              s12^8*(1296*s13^4 + 5166*s13^3*s23 + 2588*s13^2*s23^2 - 
                61*s13*s23^3 - 75*s23^4) + 5*s13^3*s23^3*(s13 + s23)^2*(
                90*s13^4 + 46*s13^3*s23 + 117*s13^2*s23^2 + 63*s13*s23^3 - 
                18*s23^4) + s12^7*(2916*s13^5 + 14301*s13^4*s23 + 
                11602*s13^3*s23^2 + 1742*s13^2*s23^3 + 2295*s13*s23^4 + 
                50*s23^5) + s12^6*(4212*s13^6 + 25443*s13^5*s23 + 
                34001*s13^4*s23^2 + 14408*s13^3*s23^3 + 11801*s13^2*s23^4 + 
                6041*s13*s23^5 - 90*s23^6) + s12*s13^2*s23^2*(1584*s13^7 + 
                6019*s13^6*s23 + 7608*s13^5*s23^2 + 11800*s13^4*s23^3 + 
                17362*s13^3*s23^4 + 9231*s13^2*s23^5 - 238*s13*s23^6 - 
                734*s23^7) + s12^5*(3240*s13^7 + 29664*s13^6*s23 + 
                61630*s13^5*s23^2 + 49870*s13^4*s23^3 + 45290*s13^3*s23^4 + 
                33519*s13^2*s23^5 + 3769*s13*s23^6 - 420*s23^7) + 
              s12^2*s13*s23*(657*s13^8 + 11315*s13^7*s23 + 28669*s13^6*
                 s23^2 + 31870*s13^5*s23^3 + 49412*s13^4*s23^4 + 
                51838*s13^3*s23^5 + 14877*s13^2*s23^6 - 2142*s13*s23^7 - 
                734*s23^8) + s12^4*(972*s13^8 + 19782*s13^7*s23 + 
                66292*s13^6*s23^2 + 73796*s13^5*s23^3 + 79496*s13^4*s23^4 + 
                87122*s13^3*s23^5 + 29581*s13^2*s23^6 - 1978*s13*s23^7 - 
                355*s23^8) + s12^3*s23*(6291*s13^8 + 39404*s13^7*s23 + 
                63579*s13^6*s23^2 + 67085*s13^5*s23^3 + 93517*s13^4*s23^4 + 
                64505*s13^3*s23^5 + 6509*s13^2*s23^6 - 2772*s13*s23^7 - 
                90*s23^8)) + p2q*p3q*(9*s12^10*s23*(47*s13^2 + 83*s13*s23 + 
                20*s23^2) + 5*s13^3*s23^3*(s13 + s23)^3*(36*s13^4 - 
                11*s13^3*s23 + 156*s13^2*s23^2 + 55*s13*s23^3 - 36*s23^4) + 
              s12^9*(972*s13^4 + 4815*s13^3*s23 + 6665*s13^2*s23^2 + 
                2875*s13*s23^3 + 485*s23^4) + s12^8*(2916*s13^5 + 
                16668*s13^4*s23 + 30355*s13^3*s23^2 + 20821*s13^2*s23^3 + 
                5229*s13*s23^4 + 1155*s23^5) + s12*s13^2*s23^2*(s13 + s23)^2*(
                747*s13^6 + 1381*s13^5*s23 + 1720*s13^4*s23^2 + 12225*s13^3*
                 s23^3 + 10689*s13^2*s23^4 - 718*s13*s23^5 - 1468*s23^6) + 
              s12^7*(3888*s13^6 + 27513*s13^5*s23 + 59363*s13^4*s23^2 + 
                59879*s13^3*s23^3 + 37405*s13^2*s23^4 + 17046*s13*s23^5 + 
                2630*s23^6) + s12^6*(3888*s13^7 + 30474*s13^6*s23 + 
                73374*s13^5*s23^2 + 99109*s13^4*s23^3 + 109344*s13^3*s23^4 + 
                91384*s13^2*s23^5 + 36859*s13*s23^6 + 2930*s23^7) + 
              s12^5*(2916*s13^8 + 27513*s13^7*s23 + 73374*s13^6*s23^2 + 
                122488*s13^5*s23^3 + 202273*s13^4*s23^4 + 246782*s13^3*
                 s23^5 + 150760*s13^2*s23^6 + 32885*s13*s23^7 + 1065*s23^8) + 
              s12^2*s13*s23*(423*s13^9 + 6665*s13^8*s23 + 20821*s13^7*s23^2 + 
                37405*s13^6*s23^3 + 91384*s13^5*s23^4 + 150760*s13^4*s23^5 + 
                107854*s13^3*s23^6 + 22286*s13^2*s23^7 - 4834*s13*s23^8 - 
                1468*s23^9) + s12^4*(972*s13^9 + 16668*s13^8*s23 + 
                59363*s13^7*s23^2 + 99109*s13^6*s23^3 + 202273*s13^5*s23^4 + 
                359426*s13^4*s23^5 + 312831*s13^3*s23^6 + 107854*s13^2*
                 s23^7 + 7785*s13*s23^8 - 265*s23^9) + s12^3*s23*(
                4815*s13^9 + 30355*s13^8*s23 + 59879*s13^7*s23^2 + 
                109344*s13^6*s23^3 + 246782*s13^5*s23^4 + 312831*s13^4*
                 s23^5 + 166814*s13^3*s23^6 + 22286*s13^2*s23^7 - 
                3654*s13*s23^8 - 180*s23^9)) + p3q^2*(s12 + s23)*
             (9*s12^9*s23*(73*s13^2 + 176*s13*s23 + 50*s23^2) - 
              5*s13^3*s23^3*(s13 + s23)^3*(12*s13^3 - 21*s13^2*s23 + 
                17*s13*s23^2 + 18*s23^3) + s12^8*(972*s13^4 + 6291*s13^3*
                 s23 + 11315*s13^2*s23^2 + 6019*s13*s23^3 + 1130*s23^4) - 
              s12*s13^2*s23^2*(s13 + s23)^2*(24*s13^5 + 13*s13^4*s23 - 
                2345*s13^3*s23^2 - 1364*s13^2*s23^3 + 1304*s13*s23^4 + 
                734*s23^5) + s12^7*(3240*s13^5 + 19782*s13^4*s23 + 
                39404*s13^3*s23^2 + 28669*s13^2*s23^3 + 7608*s13*s23^4 + 
                1495*s23^5) + s12^6*(4212*s13^6 + 29664*s13^5*s23 + 
                66292*s13^4*s23^2 + 63579*s13^3*s23^3 + 31870*s13^2*s23^4 + 
                11800*s13*s23^5 + 1715*s23^6) + s12^5*(2916*s13^7 + 
                25443*s13^6*s23 + 61630*s13^5*s23^2 + 73796*s13^4*s23^3 + 
                67085*s13^3*s23^4 + 49412*s13^2*s23^5 + 17362*s13*s23^6 + 
                1125*s23^7) + s12^2*s13*s23*(792*s13^8 + 2588*s13^7*s23 + 
                1742*s13^6*s23^2 + 11801*s13^5*s23^3 + 33519*s13^4*s23^4 + 
                29581*s13^3*s23^5 + 6509*s13^2*s23^6 - 2142*s13*s23^7 - 
                734*s23^8) + s12^4*(1296*s13^8 + 14301*s13^7*s23 + 
                34001*s13^6*s23^2 + 49870*s13^5*s23^3 + 79496*s13^4*s23^4 + 
                93517*s13^3*s23^5 + 51838*s13^2*s23^6 + 9231*s13*s23^7 + 
                135*s23^8) + s12^3*(324*s13^9 + 5166*s13^8*s23 + 
                11602*s13^7*s23^2 + 14408*s13^6*s23^3 + 45290*s13^5*s23^4 + 
                87122*s13^4*s23^5 + 64505*s13^3*s23^6 + 14877*s13^2*s23^7 - 
                238*s13*s23^8 - 90*s23^9))) + 
          p1q*(-(p2q^6*s13^2*(s13 + s23)^2*(144*s12^10*s23*(2*s13 + s23) + 5*
                s13^5*s23^3*(s13 + s23)^2*(19*s13^2 + 129*s13*s23 + 
                 94*s23^2) + 3*s12^9*(108*s13^3 + 417*s13^2*s23 + 
                 713*s13*s23^2 + 308*s23^3) + 4*s12^8*(243*s13^4 + 
                 1449*s13^3*s23 + 3086*s13^2*s23^2 + 2044*s13*s23^3 + 
                 524*s23^4) + s12*s13^4*s23^2*(59*s13^5 + 2274*s13^4*s23 + 
                 9377*s13^3*s23^2 + 13659*s13^2*s23^3 + 8148*s13*s23^4 + 
                 1651*s23^5) + s12^7*(648*s13^5 + 13599*s13^4*s23 + 
                 42049*s13^3*s23^2 + 41002*s13^2*s23^3 + 14312*s13*s23^4 + 
                 2264*s23^5) + s12^6*(-648*s13^6 + 13428*s13^5*s23 + 
                 74017*s13^4*s23^2 + 112842*s13^3*s23^3 + 61480*s13^2*s23^4 + 
                 12243*s13*s23^5 + 1216*s23^6) + s12^3*s13^2*s23*
                (-1431*s13^6 + 5647*s13^5*s23 + 55988*s13^4*s23^2 + 
                 116689*s13^3*s23^3 + 94031*s13^2*s23^4 + 30075*s13*s23^5 + 
                 3103*s23^6) + s12^2*s13^3*s23*(-216*s13^6 + 667*s13^5*s23 + 
                 14522*s13^4*s23^2 + 43193*s13^3*s23^3 + 47966*s13^2*s23^4 + 
                 22581*s13*s23^5 + 4169*s23^6) + s12^5*(-972*s13^7 + 
                 3717*s13^6*s23 + 65922*s13^5*s23^2 + 165120*s13^4*s23^3 + 
                 143664*s13^3*s23^4 + 45948*s13^2*s23^5 + 5287*s13*s23^6 + 
                 268*s23^7) + s12^4*s13*(-324*s13^7 - 2160*s13^6*s23 + 
                 28644*s13^5*s23^2 + 129673*s13^4*s23^3 + 177086*s13^3*
                  s23^4 + 93190*s13^2*s23^5 + 17480*s13*s23^6 + 
                 1031*s23^7))) - p3q^6*s12^2*(s12 + s23)^2*
             (s12^9*s23*(-216*s13^2 + 59*s13*s23 + 95*s23^2) + 
              4*s13^5*s23^2*(s13 + s23)^2*(36*s13^3 + 159*s13^2*s23 + 
                170*s13*s23^2 + 67*s23^3) + s12^8*(-324*s13^4 - 1431*s13^3*
                 s23 + 667*s13^2*s23^2 + 2274*s13*s23^3 + 835*s23^4) + 
              s12*s13^4*s23*(s13 + s23)^2*(288*s13^4 + 1563*s13^3*s23 + 
                4762*s13^2*s23^2 + 3225*s13*s23^3 + 1031*s23^4) + 
              s12^7*(-972*s13^5 - 2160*s13^4*s23 + 5647*s13^3*s23^2 + 
                14522*s13^2*s23^3 + 9377*s13*s23^4 + 1855*s23^5) + 
              s12^6*(-648*s13^6 + 3717*s13^5*s23 + 28644*s13^4*s23^2 + 
                55988*s13^3*s23^3 + 43193*s13^2*s23^4 + 13659*s13*s23^5 + 
                1585*s23^6) + s12^2*s13^3*s23*(1251*s13^6 + 12344*s13^5*s23 + 
                41002*s13^4*s23^2 + 61480*s13^3*s23^3 + 45948*s13^2*s23^4 + 
                17480*s13*s23^5 + 3103*s23^6) + s12^5*(648*s13^7 + 
                13428*s13^6*s23 + 65922*s13^5*s23^2 + 129673*s13^4*s23^3 + 
                116689*s13^3*s23^4 + 47966*s13^2*s23^5 + 8148*s13*s23^6 + 
                470*s23^7) + s12^4*s13*(972*s13^7 + 13599*s13^6*s23 + 
                74017*s13^5*s23^2 + 165120*s13^4*s23^3 + 177086*s13^3*s23^4 + 
                94031*s13^2*s23^5 + 22581*s13*s23^6 + 1651*s23^7) + 
              s12^3*s13^2*(324*s13^7 + 5796*s13^6*s23 + 42049*s13^5*s23^2 + 
                112842*s13^4*s23^3 + 143664*s13^3*s23^4 + 93190*s13^2*s23^5 + 
                30075*s13*s23^6 + 4169*s23^7)) + p2q*p3q^5*s12*
             (45*s12^13*s23*(2*s13 + s23) + 2*s12^12*s23*(576*s13^2 + 
                391*s13*s23 + 40*s23^2) + 4*s13^5*s23^4*(s13 + s23)^3*(
                36*s13^3 + 128*s13^2*s23 + 103*s13*s23^2 + 31*s23^3) + 
              s12^11*(972*s13^4 + 4311*s13^3*s23 + 2620*s13^2*s23^2 - 
                2119*s13*s23^3 - 1215*s23^4) + s12^10*(1944*s13^5 + 
                2277*s13^4*s23 - 6903*s13^3*s23^2 - 23906*s13^2*s23^3 - 
                20150*s13*s23^4 - 5080*s23^5) + s12*s13^4*s23^3*(s13 + s23)^
                2*(774*s13^5 + 3594*s13^4*s23 + 9056*s13^3*s23^2 + 
                10039*s13^2*s23^3 + 4218*s13*s23^4 + 815*s23^5) + 
              s12^2*s13^3*s23^2*(s13 + s23)^2*(1260*s13^6 + 7407*s13^5*s23 + 
                30257*s13^4*s23^2 + 49882*s13^3*s23^3 + 44743*s13^2*s23^4 + 
                15900*s13*s23^5 + 2419*s23^6) - s12^9*(972*s13^6 + 
                24471*s13^5*s23 + 85616*s13^4*s23^2 + 137983*s13^3*s23^3 + 
                114188*s13^2*s23^4 + 45842*s13*s23^5 + 7765*s23^6) - 
              s12^8*(3888*s13^7 + 54207*s13^6*s23 + 224327*s13^5*s23^2 + 
                413220*s13^4*s23^3 + 395313*s13^3*s23^4 + 194904*s13^2*
                 s23^5 + 45703*s13*s23^6 + 4840*s23^7) - s12^7*(972*s13^8 + 
                33489*s13^7*s23 + 220928*s13^6*s23^2 + 558904*s13^5*s23^3 + 
                703125*s13^4*s23^4 + 461916*s13^3*s23^5 + 145519*s13^2*
                 s23^6 + 16435*s13*s23^7 + 85*s23^8) + s12^6*(1944*s13^9 + 
                8055*s13^8*s23 - 37073*s13^7*s23^2 - 249163*s13^6*s23^3 - 
                474513*s13^5*s23^4 - 415563*s13^4*s23^5 - 174685*s13^3*
                 s23^6 - 24388*s13^2*s23^7 + 5588*s13*s23^8 + 1200*s23^9) + 
              s12^4*s13*s23*(4419*s13^9 + 43717*s13^8*s23 + 179266*s13^7*
                 s23^2 + 386801*s13^6*s23^3 + 544016*s13^5*s23^4 + 
                529686*s13^4*s23^5 + 326432*s13^3*s23^6 + 110650*s13^2*
                 s23^7 + 18366*s13*s23^8 + 1435*s23^9) + s12^3*s13^2*s23*(
                630*s13^9 + 9176*s13^8*s23 + 62729*s13^7*s23^2 + 
                205232*s13^6*s23^3 + 384374*s13^5*s23^4 + 451742*s13^4*
                 s23^5 + 333229*s13^3*s23^6 + 142955*s13^2*s23^7 + 
                31574*s13*s23^8 + 3431*s23^9) + s12^5*(972*s13^10 + 
                14625*s13^9*s23 + 72159*s13^8*s23^2 + 138487*s13^7*s23^3 + 
                147566*s13^6*s23^4 + 156174*s13^5*s23^5 + 164663*s13^4*
                 s23^6 + 100182*s13^3*s23^7 + 29976*s13^2*s23^8 + 
                6258*s13*s23^9 + 380*s23^10)) + p2q^4*p3q^2*
             (-153*s12^12*s13*s23*(2*s13^2 + 3*s13*s23 + s23^2) + 
              5*s13^6*s23^2*(s13 + s23)^4*(9*s13^4 - 10*s13^3*s23 - 
                92*s13^2*s23^2 + 105*s13*s23^3 + 130*s23^4) + 
              s12^10*s23*(4995*s13^5 + 12565*s13^4*s23 + 12907*s13^3*s23^2 + 
                6627*s13^2*s23^3 + 1190*s13*s23^4 - 100*s23^5) + 
              s12^11*(-972*s13^5 - 1017*s13^4*s23 + 246*s13^3*s23^2 + 
                328*s13^2*s23^3 + 17*s13*s23^4 - 20*s23^5) + 
              s12*s13^5*s23*(s13 + s23)^3*(90*s13^6 + 445*s13^5*s23 - 
                3167*s13^4*s23^2 - 1055*s13^3*s23^3 + 7223*s13^2*s23^4 + 
                7071*s13*s23^5 + 3115*s23^6) + s12^9*(5832*s13^7 + 
                47826*s13^6*s23 + 122807*s13^5*s23^2 + 142145*s13^4*s23^3 + 
                82511*s13^3*s23^4 + 22794*s13^2*s23^5 + 1415*s13*s23^6 - 
                200*s23^7) + s12^3*s13^3*s23*(s13 + s23)^2*(783*s13^7 - 
                28119*s13^6*s23 - 79153*s13^5*s23^2 + 7323*s13^4*s23^3 + 
                189704*s13^3*s23^4 + 189608*s13^2*s23^5 + 53009*s13*s23^6 + 
                2216*s23^7) + s12^2*s13^4*s23*(s13 + s23)^2*(810*s13^7 - 
                2551*s13^6*s23 - 18448*s13^5*s23^2 - 13366*s13^4*s23^3 + 
                40685*s13^3*s23^4 + 66095*s13^2*s23^5 + 33279*s13*s23^6 + 
                6788*s23^7) + s12^8*(4860*s13^8 + 88173*s13^7*s23 + 
                355434*s13^6*s23^2 + 606317*s13^5*s23^3 + 521248*s13^4*
                 s23^4 + 229949*s13^3*s23^5 + 42872*s13^2*s23^6 - 
                225*s13*s23^7 - 200*s23^8) + s12^7*(-4860*s13^9 + 
                25254*s13^8*s23 + 352763*s13^7*s23^2 + 1043848*s13^6*s23^3 + 
                1406582*s13^5*s23^4 + 985088*s13^4*s23^5 + 343731*s13^3*
                 s23^6 + 43393*s13^2*s23^7 - 733*s13*s23^8 - 100*s23^9) + 
              s12^5*s13*s23*(-55800*s13^9 - 237682*s13^8*s23 - 121355*s13^7*
                 s23^2 + 865117*s13^6*s23^3 + 1912073*s13^5*s23^4 + 
                1715943*s13^4*s23^5 + 731048*s13^3*s23^6 + 127720*s13^2*
                 s23^7 + 5337*s13*s23^8 + 205*s23^9) + s12^6*(-5832*s13^10 - 
                63837*s13^9*s23 - 17182*s13^8*s23^2 + 665319*s13^7*s23^3 + 
                1734831*s13^6*s23^4 + 1937514*s13^5*s23^5 + 1093281*s13^4*
                 s23^6 + 288092*s13^3*s23^7 + 22102*s13^2*s23^8 + 
                92*s13*s23^9 - 20*s23^10) + s12^4*s13^2*(972*s13^10 - 
                12699*s13^9*s23 - 137176*s13^8*s23^2 - 332984*s13^7*s23^3 - 
                53229*s13^6*s23^4 + 874171*s13^5*s23^5 + 1411881*s13^4*
                 s23^6 + 949711*s13^3*s23^7 + 280823*s13^2*s23^8 + 
                25782*s13*s23^9 + 710*s23^10)) + p2q^5*p3q*s13*
             (18*s12^11*s23*(35*s13^3 + 70*s13^2*s23 + 43*s13*s23^2 + 
                8*s23^3) + s12^10*(s13 + s23)^2*(972*s13^3 + 2475*s13^2*s23 + 
                3254*s13*s23^2 + 944*s23^3) + 5*s13^5*s23^2*(s13 + s23)^4*(
                9*s13^4 - 20*s13^3*s23 - 217*s13^2*s23^2 - 64*s13*s23^3 + 
                76*s23^4) + s12*s13^4*s23*(s13 + s23)^3*(90*s13^6 + 
                512*s13^5*s23 - 3925*s13^4*s23^2 - 10001*s13^3*s23^3 - 
                4576*s13^2*s23^4 + 1953*s13*s23^5 + 1435*s23^6) + 
              s12^9*(1944*s13^6 + 14625*s13^5*s23 + 43717*s13^4*s23^2 + 
                62729*s13^3*s23^3 + 46331*s13^2*s23^4 + 17018*s13*s23^5 + 
                2380*s23^6) + s12^3*s13^2*s23*(s13 + s23)^2*(4311*s13^7 - 
                15525*s13^6*s23 - 111244*s13^5*s23^2 - 157300*s13^4*s23^3 - 
                36072*s13^3*s23^4 + 54759*s13^2*s23^5 + 26736*s13*s23^6 + 
                2419*s23^7) + s12^8*(-972*s13^7 + 8055*s13^6*s23 + 
                72159*s13^5*s23^2 + 179266*s13^4*s23^3 + 205232*s13^3*s23^4 + 
                117803*s13^2*s23^5 + 31745*s13*s23^6 + 3040*s23^7) + 
              s12^2*s13^3*s23*(s13 + s23)^2*(1152*s13^7 + 316*s13^6*s23 - 
                25690*s13^5*s23^2 - 63124*s13^4*s23^3 - 42966*s13^3*s23^4 + 
                3537*s13^2*s23^5 + 11504*s13*s23^6 + 3431*s23^7) + 
              s12^7*(-3888*s13^8 - 33489*s13^7*s23 - 37073*s13^6*s23^2 + 
                138487*s13^5*s23^3 + 386801*s13^4*s23^4 + 384374*s13^3*
                 s23^5 + 174764*s13^2*s23^6 + 33352*s13*s23^7 + 2120*s23^8) + 
              s12^6*(-972*s13^9 - 54207*s13^8*s23 - 220928*s13^7*s23^2 - 
                249163*s13^6*s23^3 + 147566*s13^5*s23^4 + 544016*s13^4*
                 s23^5 + 451742*s13^3*s23^6 + 155268*s13^2*s23^7 + 
                19290*s13*s23^8 + 784*s23^9) + s12^5*(1944*s13^10 - 
                24471*s13^9*s23 - 224327*s13^8*s23^2 - 558904*s13^7*s23^3 - 
                474513*s13^6*s23^4 + 156174*s13^5*s23^5 + 529686*s13^4*
                 s23^6 + 333229*s13^3*s23^7 + 78962*s13^2*s23^8 + 
                5848*s13*s23^9 + 124*s23^10) + s12^4*s13*(972*s13^10 + 
                2277*s13^9*s23 - 85616*s13^8*s23^2 - 413220*s13^7*s23^3 - 
                703125*s13^6*s23^4 - 415563*s13^5*s23^5 + 164663*s13^4*
                 s23^6 + 326432*s13^3*s23^7 + 142955*s13^2*s23^8 + 
                20738*s13*s23^9 + 815*s23^10)) + p2q^2*p3q^4*
             (-20*s13^6*s23^5*(s13 + s23)^5 + 45*s12^14*s23*(2*s13 + s23) + 
              5*s12^13*s23*(162*s13^2 + 143*s13*s23 + 26*s23^2) + 
              s12^12*(972*s13^4 + 783*s13^3*s23 - 931*s13^2*s23^2 - 
                1562*s13*s23^3 - 390*s23^4) - s12*s13^5*s23^3*(s13 + s23)^3*(
                153*s13^4 - 476*s13^3*s23 - 221*s13^2*s23^2 + 523*s13*s23^3 - 
                205*s23^4) - s12^11*s23*(12699*s13^4 + 26553*s13^3*s23 + 
                22740*s13^2*s23^2 + 9131*s13*s23^3 + 1435*s23^4) - 
              s12^2*s13^4*s23^2*(s13 + s23)^2*(459*s13^6 - 1246*s13^5*s23 - 
                4594*s13^4*s23^2 - 12360*s13^3*s23^3 - 13558*s13^2*s23^4 - 
                3917*s13*s23^5 - 710*s23^6) - s12^10*(5832*s13^6 + 
                55800*s13^5*s23 + 137176*s13^4*s23^2 + 134608*s13^3*s23^3 + 
                52813*s13^2*s23^4 + 4998*s13*s23^5 + 165*s23^6) - 
              s12^9*(4860*s13^7 + 63837*s13^6*s23 + 237682*s13^5*s23^2 + 
                332984*s13^4*s23^3 + 179102*s13^3*s23^4 + 4495*s13^2*s23^5 - 
                22408*s13*s23^6 - 3860*s23^7) - s12^3*s13^3*s23*(s13 + s23)^
                2*(306*s13^7 - 858*s13^6*s23 - 11497*s13^5*s23^2 - 
                58659*s13^4*s23^3 - 101134*s13^3*s23^4 - 82804*s13^2*s23^5 - 
                21350*s13*s23^6 - 2216*s23^7) + s12^8*(4860*s13^8 + 
                25254*s13^7*s23 - 17182*s13^6*s23^2 - 121355*s13^5*s23^3 - 
                53229*s13^4*s23^4 + 125197*s13^3*s23^5 + 134099*s13^2*s23^6 + 
                44942*s13*s23^7 + 5540*s23^8) + s12^6*s23*(47826*s13^9 + 
                355434*s13^8*s23 + 1043848*s13^7*s23^2 + 1734831*s13^6*
                 s23^3 + 1912073*s13^5*s23^4 + 1411881*s13^4*s23^5 + 
                621929*s13^3*s23^6 + 139441*s13^2*s23^7 + 16416*s13*s23^8 + 
                650*s23^9) + s12^7*(5832*s13^9 + 88173*s13^8*s23 + 
                352763*s13^7*s23^2 + 665319*s13^6*s23^3 + 865117*s13^5*
                 s23^4 + 874171*s13^4*s23^5 + 576339*s13^3*s23^6 + 
                206154*s13^2*s23^7 + 37781*s13*s23^8 + 3125*s23^9) + 
              s12^4*s13^2*s23*(-1017*s13^9 + 12565*s13^8*s23 + 142145*s13^7*
                 s23^2 + 521248*s13^6*s23^3 + 985088*s13^5*s23^4 + 
                1093281*s13^4*s23^5 + 731048*s13^3*s23^6 + 280823*s13^2*
                 s23^7 + 57441*s13*s23^8 + 6788*s23^9) + s12^5*s13*(
                -972*s13^10 + 4995*s13^9*s23 + 122807*s13^8*s23^2 + 
                606317*s13^7*s23^3 + 1406582*s13^6*s23^4 + 1937514*s13^5*
                 s23^5 + 1715943*s13^4*s23^6 + 949711*s13^3*s23^7 + 
                297842*s13^2*s23^8 + 46855*s13*s23^9 + 3115*s23^10)) + 
            p2q^3*p3q^3*(-9*s12^13*s23*(14*s13^2 + 14*s13*s23 + 5*s23^2) - 
              5*s13^6*s23^3*(s13 + s23)^4*(9*s13^3 + 4*s13^2*s23 - 
                71*s13*s23^2 - 50*s23^3) + s12^12*(324*s13^4 - 2403*s13^3*
                 s23 - 4245*s13^2*s23^2 - 1988*s13*s23^3 - 200*s23^4) - 
              s12*s13^5*s23^2*(s13 + s23)^3*(126*s13^5 + 1610*s13^4*s23 - 
                2116*s13^3*s23^2 - 5011*s13^2*s23^3 - 2532*s13*s23^4 - 
                1761*s23^5) - s12^11*(1944*s13^5 + 13815*s13^4*s23 + 
                23449*s13^3*s23^2 + 14920*s13^2*s23^3 + 3092*s13*s23^4 - 
                5*s23^5) - s12^10*(5184*s13^6 + 32814*s13^5*s23 + 
                72891*s13^4*s23^2 + 60072*s13^3*s23^3 + 10188*s13^2*s23^4 - 
                6403*s13*s23^5 - 1370*s23^6) - s12^2*s13^4*s23*(s13 + s23)^2*(
                126*s13^7 + 3993*s13^6*s23 + 6808*s13^5*s23^2 - 7421*s13^4*
                 s23^3 - 38353*s13^3*s23^4 - 42816*s13^2*s23^5 - 
                17037*s13*s23^6 - 3252*s23^7) - s12^3*s13^3*s23*(s13 + s23)^
                2*(2403*s13^7 + 18643*s13^6*s23 + 20383*s13^5*s23^2 - 
                73501*s13^4*s23^3 - 176875*s13^3*s23^4 - 139074*s13^2*s23^5 - 
                27589*s13*s23^6 + 406*s23^7) + s12^9*(1944*s13^7 + 
                9540*s13^6*s23 - 11614*s13^5*s23^2 - 31602*s13^4*s23^3 + 
                14092*s13^3*s23^4 + 46387*s13^2*s23^5 + 22303*s13*s23^6 + 
                3005*s23^7) + s12^8*(9720*s13^8 + 116226*s13^7*s23 + 
                361888*s13^6*s23^2 + 525259*s13^5*s23^3 + 470044*s13^4*
                 s23^4 + 303494*s13^3*s23^5 + 126943*s13^2*s23^6 + 
                26506*s13*s23^7 + 2900*s23^8) + s12^7*(1944*s13^9 + 
                116226*s13^8*s23 + 639882*s13^7*s23^2 + 1406840*s13^6*s23^3 + 
                1681220*s13^5*s23^4 + 1241523*s13^4*s23^5 + 566325*s13^3*
                 s23^6 + 141022*s13^2*s23^7 + 17890*s13*s23^8 + 1355*s23^9) + 
              s12^6*(-5184*s13^10 + 9540*s13^9*s23 + 361888*s13^8*s23^2 + 
                1406840*s13^7*s23^3 + 2452168*s13^6*s23^4 + 2402956*s13^5*
                 s23^5 + 1420629*s13^4*s23^6 + 482612*s13^3*s23^7 + 
                80142*s13^2*s23^8 + 7815*s13*s23^9 + 250*s23^10) + 
              s12^5*s13*(-1944*s13^10 - 32814*s13^9*s23 - 11614*s13^8*s23^2 + 
                525259*s13^7*s23^3 + 1681220*s13^6*s23^4 + 2402956*s13^5*
                 s23^5 + 1890820*s13^4*s23^6 + 835127*s13^3*s23^7 + 
                193846*s13^2*s23^8 + 23541*s13*s23^9 + 1761*s23^10) + 
              s12^4*s13^2*(324*s13^10 - 13815*s13^9*s23 - 72891*s13^8*s23^2 - 
                31602*s13^7*s23^3 + 470044*s13^6*s23^4 + 1241523*s13^5*
                 s23^5 + 1420629*s13^4*s23^6 + 835127*s13^3*s23^7 + 
                236652*s13^2*s23^8 + 26777*s13*s23^9 + 3252*s23^10))) + 
          p1q^3*(p2q^4*(s13 + s23)^2*(4*s12^10*s23*(-9*s13^3 + 127*s13^2*
                 s23 - 3*s13*s23^2 + 5*s23^3) + 5*s13^5*s23^3*(s13 + s23)^2*(
                45*s13^4 + 9*s13^3*s23 + 190*s13^2*s23^2 - 126*s13*s23^3 - 
                192*s23^4) + s12^9*(-324*s13^5 + 1395*s13^4*s23 + 
                6983*s13^3*s23^2 + 3810*s13^2*s23^3 - 922*s13*s23^4 + 
                100*s23^5) + s12^8*(-972*s13^6 + 4212*s13^5*s23 + 
                22693*s13^4*s23^2 + 23822*s13^3*s23^3 - 1226*s13^2*s23^4 - 
                3883*s13*s23^5 + 200*s23^6) + s12*s13^4*s23^2*(639*s13^7 + 
                1804*s13^6*s23 + 2783*s13^5*s23^2 + 11366*s13^4*s23^3 + 
                5358*s13^3*s23^4 - 21223*s13^2*s23^5 - 22220*s13*s23^6 - 
                5387*s23^7) + s12^7*(-648*s13^7 + 2763*s13^6*s23 + 
                37314*s13^5*s23^2 + 64708*s13^4*s23^3 + 633*s13^3*s23^4 - 
                34140*s13^2*s23^5 - 6792*s13*s23^6 + 200*s23^7) + 
              s12^2*s13^3*s23*(324*s13^8 + 2911*s13^7*s23 + 1925*s13^6*
                 s23^2 + 15481*s13^5*s23^3 + 47104*s13^4*s23^4 - 
                22258*s13^3*s23^5 - 103143*s13^2*s23^6 - 59591*s13*s23^7 - 
                9667*s23^8) + s12^3*s13^2*s23*(1881*s13^8 + 1746*s13^7*s23 + 
                510*s13^6*s23^2 + 74937*s13^5*s23^3 + 69187*s13^4*s23^4 - 
                152492*s13^3*s23^5 - 205298*s13^2*s23^6 - 64590*s13*s23^7 - 
                4519*s23^8) + s12^6*(648*s13^8 - 1584*s13^7*s23 + 
                28361*s13^6*s23^2 + 112545*s13^5*s23^3 + 34263*s13^4*s23^4 - 
                115198*s13^3*s23^5 - 68543*s13^2*s23^6 - 6118*s13*s23^7 + 
                100*s23^8) + s12^4*s13*(324*s13^9 + 2556*s13^8*s23 - 
                6265*s13^7*s23^2 + 36743*s13^6*s23^3 + 152647*s13^5*s23^4 - 
                28046*s13^4*s23^5 - 285922*s13^3*s23^6 - 173289*s13^2*s23^7 - 
                25679*s13*s23^8 - 555*s23^9) + s12^5*(972*s13^9 - 
                567*s13^8*s23 + 1526*s13^7*s23^2 + 104416*s13^6*s23^3 + 
                122305*s13^5*s23^4 - 143975*s13^4*s23^5 - 217394*s13^3*
                 s23^6 - 60091*s13^2*s23^7 - 2854*s13*s23^8 + 20*s23^9)) + 
            p3q^4*(s12 + s23)^2*(20*s13^5*s23^4*(s13 + s23)^5 + 
              9*s12^11*s23*(36*s13^2 + 71*s13*s23 + 25*s23^2) - 
              s12*s13^4*s23^3*(s13 + s23)^3*(12*s13^3 + 886*s13^2*s23 + 
                1189*s13*s23^2 + 555*s23^3) + s12^10*(324*s13^4 + 
                1881*s13^3*s23 + 2911*s13^2*s23^2 + 1804*s13*s23^3 + 
                495*s23^4) + s12^2*s13^3*s23^2*(s13 + s23)^2*(508*s13^5 + 
                2794*s13^4*s23 - 7322*s13^3*s23^2 - 22290*s13^2*s23^3 - 
                16641*s13*s23^4 - 4519*s23^5) + s12^9*(972*s13^5 + 
                2556*s13^4*s23 + 1746*s13^3*s23^2 + 1925*s13^2*s23^3 + 
                2783*s13*s23^4 + 1265*s23^5) + s12^8*(648*s13^6 - 
                567*s13^5*s23 - 6265*s13^4*s23^2 + 510*s13^3*s23^3 + 
                15481*s13^2*s23^4 + 11366*s13*s23^5 + 1315*s23^6) - 
              s12^3*s13^2*s23*(s13 + s23)^2*(36*s13^6 - 7055*s13^5*s23 - 
                9748*s13^4*s23^2 + 25918*s13^3*s23^3 + 73110*s13^2*s23^4 + 
                45256*s13*s23^5 + 9667*s23^6) + s12^7*(-648*s13^7 - 
                1584*s13^6*s23 + 1526*s13^5*s23^2 + 36743*s13^4*s23^3 + 
                74937*s13^3*s23^4 + 47104*s13^2*s23^5 + 5358*s13*s23^6 - 
                1270*s23^7) + s12^4*s13*s23*(1395*s13^8 + 22693*s13^7*s23 + 
                64708*s13^6*s23^2 + 34263*s13^5*s23^3 - 143975*s13^4*s23^4 - 
                285922*s13^3*s23^5 - 205298*s13^2*s23^6 - 59591*s13*s23^7 - 
                5387*s23^8) + s12^6*(-972*s13^8 + 2763*s13^7*s23 + 
                28361*s13^6*s23^2 + 104416*s13^5*s23^3 + 152647*s13^4*s23^4 + 
                69187*s13^3*s23^5 - 22258*s13^2*s23^6 - 21223*s13*s23^7 - 
                2550*s23^8) - s12^5*(324*s13^9 - 4212*s13^8*s23 - 
                37314*s13^7*s23^2 - 112545*s13^6*s23^3 - 122305*s13^5*s23^4 + 
                28046*s13^4*s23^5 + 152492*s13^3*s23^6 + 103143*s13^2*s23^7 + 
                22220*s13*s23^8 + 960*s23^9)) - p2q^2*p3q^2*(s12 + s23)*
             (s13 + s23)*(s12^11*s23*(1287*s13^2 + 653*s13*s23 + 5*s23^2) + 
              s12^10*(972*s13^4 + 6444*s13^3*s23 + 1888*s13^2*s23^2 - 
                2421*s13*s23^3 - 650*s23^4) + 5*s13^4*s23^3*(s13 + s23)^3*(
                s13^4 - 133*s13^3*s23 + 267*s13^2*s23^2 + 71*s13*s23^3 - 
                90*s23^4) + s12^9*(1944*s13^5 + 3879*s13^4*s23 - 
                11399*s13^3*s23^2 - 27355*s13^2*s23^3 - 14192*s13*s23^4 - 
                645*s23^5) + s12*s13^3*s23^2*(s13 + s23)^2*(653*s13^6 - 
                3727*s13^5*s23 - 7391*s13^4*s23^2 + 13887*s13^3*s23^3 + 
                13352*s13^2*s23^4 - 3602*s13*s23^5 - 3656*s23^6) - 
              s12^8*(972*s13^6 + 32211*s13^5*s23 + 117412*s13^4*s23^2 + 
                181635*s13^3*s23^3 + 98418*s13^2*s23^4 + 4622*s13*s23^5 - 
                2370*s23^6) - s12^7*(3888*s13^7 + 82503*s13^6*s23 + 
                314294*s13^5*s23^2 + 504438*s13^4*s23^3 + 334518*s13^3*
                 s23^4 + 37028*s13^2*s23^5 - 33735*s13*s23^6 - 3955*s23^7) - 
              s12^6*(972*s13^8 + 82503*s13^7*s23 + 419032*s13^6*s23^2 + 
                751452*s13^5*s23^3 + 545460*s13^4*s23^4 + 7521*s13^3*s23^5 - 
                157374*s13^2*s23^6 - 36989*s13*s23^7 - 1050*s23^8) + 
              s12^2*s13^2*s23*(1287*s13^9 + 1888*s13^8*s23 - 27355*s13^7*
                 s23^2 - 98418*s13^6*s23^3 - 37028*s13^5*s23^4 + 
                157374*s13^4*s23^5 + 156959*s13^3*s23^6 + 13416*s13^2*s23^7 - 
                27311*s13*s23^8 - 7708*s23^9) + s12^3*s13*s23*(6444*s13^9 - 
                11399*s13^8*s23 - 181635*s13^7*s23^2 - 334518*s13^6*s23^3 - 
                7521*s13^5*s23^4 + 450483*s13^4*s23^5 + 327105*s13^3*s23^6 + 
                16172*s13^2*s23^7 - 27311*s13*s23^8 - 3656*s23^9) + 
              s12^5*(1944*s13^9 - 32211*s13^8*s23 - 314294*s13^7*s23^2 - 
                751452*s13^6*s23^3 - 603300*s13^5*s23^4 + 165908*s13^4*
                 s23^5 + 450483*s13^3*s23^6 + 156959*s13^2*s23^7 + 
                2492*s13*s23^8 - 995*s23^9) + s12^4*(972*s13^10 + 
                3879*s13^9*s23 - 117412*s13^8*s23^2 - 504438*s13^7*s23^3 - 
                545460*s13^6*s23^4 + 165908*s13^5*s23^5 + 630804*s13^4*
                 s23^6 + 327105*s13^3*s23^7 + 13416*s13^2*s23^8 - 
                10914*s13*s23^9 - 450*s23^10)) + p2q*p3q^3*(s12 + s23)*
             (9*s12^12*s23*(36*s13^2 + 61*s13*s23 + 20*s23^2) - 
              5*s13^4*s23^4*(s13 + s23)^4*(15*s13^3 + 92*s13^2*s23 + 
                15*s13*s23^2 - 14*s23^3) + s12^11*(324*s13^4 + 594*s13^3*
                 s23 + 953*s13^2*s23^2 + 1578*s13*s23^3 + 670*s23^4) + 
              s12^10*s23*(-5535*s13^4 - 6506*s13^3*s23 + 5541*s13^2*s23^2 + 
                9022*s13*s23^3 + 2890*s23^4) + s12*s13^3*s23^3*(s13 + s23)^3*(
                988*s13^5 - 411*s13^4*s23 - 7625*s13^3*s23^2 - 5784*s13^2*
                 s23^3 + 207*s13*s23^4 + 1205*s23^5) + s12^9*(-2268*s13^6 - 
                14445*s13^5*s23 - 9748*s13^4*s23^2 + 40367*s13^3*s23^3 + 
                70177*s13^2*s23^4 + 36909*s13*s23^5 + 5100*s23^6) + 
              s12^8*(-2592*s13^7 + 3105*s13^6*s23 + 79306*s13^5*s23^2 + 
                265734*s13^4*s23^3 + 355355*s13^3*s23^4 + 201137*s13^2*
                 s23^5 + 39272*s13*s23^6 + 740*s23^7) + s12^2*s13^2*s23^
                2*(s13 + s23)^2*(2386*s13^7 + 10439*s13^6*s23 + 17232*s13^5*
                 s23^2 - 35894*s13^4*s23^3 - 79790*s13^3*s23^4 - 
                32867*s13^2*s23^5 + 3704*s13*s23^6 + 3854*s23^7) + 
              s12^7*(972*s13^8 + 44847*s13^7*s23 + 261242*s13^6*s23^2 + 
                698069*s13^5*s23^3 + 933860*s13^4*s23^4 + 587005*s13^3*
                 s23^5 + 112855*s13^2*s23^6 - 26177*s13*s23^7 - 5370*s23^8) + 
              s12^3*s13*s23*(s13 + s23)^2*(1323*s13^8 + 18567*s13^7*s23 + 
                80704*s13^6*s23^2 + 58201*s13^5*s23^3 - 127532*s13^4*s23^4 - 
                219958*s13^3*s23^5 - 68916*s13^2*s23^6 + 3116*s13*s23^7 + 
                2451*s23^8) + s12^6*(2592*s13^9 + 59211*s13^8*s23 + 
                352616*s13^7*s23^2 + 936336*s13^6*s23^3 + 1287312*s13^5*
                 s23^4 + 819186*s13^4*s23^5 + 39630*s13^3*s23^6 - 
                192609*s13^2*s23^7 - 64186*s13*s23^8 - 3870*s23^9) + 
              s12^5*(972*s13^10 + 35073*s13^9*s23 + 262596*s13^8*s23^2 + 
                770461*s13^7*s23^3 + 1084732*s13^6*s23^4 + 540010*s13^5*
                 s23^5 - 385880*s13^4*s23^6 - 595498*s13^3*s23^7 - 
                239683*s13^2*s23^8 - 27369*s13*s23^9 - 80*s23^10) + 
              s12^4*s23*(10287*s13^10 + 107905*s13^9*s23 + 407622*s13^8*
                 s23^2 + 630282*s13^7*s23^3 + 193550*s13^6*s23^4 - 
                638993*s13^5*s23^5 - 870434*s13^4*s23^6 - 426451*s13^3*
                 s23^7 - 65927*s13^2*s23^8 + 2735*s13*s23^9 + 380*s23^10)) + 
            p2q^3*p3q*(s13 + s23)*(s12^11*s23*(1323*s13^3 + 2386*s13^2*s23 + 
                988*s13*s23^2 - 75*s23^3) + s12^10*(972*s13^5 + 10287*s13^4*
                 s23 + 21213*s13^3*s23^2 + 15211*s13^2*s23^3 + 2553*s13*
                 s23^4 - 760*s23^5) + 10*s13^4*s23^3*(s13 + s23)^3*(
                18*s13^5 + 13*s13^4*s23 + 196*s13^3*s23^2 - 135*s13^2*s23^3 - 
                122*s13*s23^4 + 38*s23^5) + s12^9*(2592*s13^6 + 35073*s13^5*
                 s23 + 107905*s13^4*s23^2 + 119161*s13^3*s23^3 + 
                40496*s13^2*s23^4 - 5894*s13*s23^5 - 2365*s23^6) + 
              s12^8*(972*s13^7 + 59211*s13^6*s23 + 262596*s13^5*s23^2 + 
                407622*s13^4*s23^3 + 238176*s13^3*s23^4 + 9009*s13^2*s23^5 - 
                28904*s13*s23^6 - 3290*s23^7) + s12*s13^3*s23^2*(s13 + s23)^
                2*(549*s13^7 + 480*s13^6*s23 + 7513*s13^5*s23^2 + 
                21403*s13^4*s23^3 - 11047*s13^3*s23^4 - 25486*s13^2*s23^5 - 
                2167*s13*s23^6 + 2451*s23^7) + s12^7*(-2592*s13^8 + 
                44847*s13^7*s23 + 352616*s13^6*s23^2 + 770461*s13^5*s23^3 + 
                630282*s13^4*s23^4 + 69574*s13^3*s23^5 - 134346*s13^2*s23^6 - 
                40431*s13*s23^7 - 2085*s23^8) + s12^6*(-2268*s13^9 + 
                3105*s13^8*s23 + 261242*s13^7*s23^2 + 936336*s13^6*s23^3 + 
                1084732*s13^5*s23^4 + 193550*s13^4*s23^5 - 416821*s13^3*
                 s23^6 - 228341*s13^2*s23^7 - 23151*s13*s23^8 - 340*s23^9) + 
              s12^5*s23*(-14445*s13^9 + 79306*s13^8*s23 + 698069*s13^7*
                 s23^2 + 1287312*s13^6*s23^3 + 540010*s13^5*s23^4 - 
                638993*s13^4*s23^5 - 636364*s13^3*s23^6 - 141820*s13^2*
                 s23^7 - 1548*s13*s23^8 + 205*s23^9) + s12^3*s13*s23*(
                594*s13^10 - 6506*s13^9*s23 + 40367*s13^8*s23^2 + 
                355355*s13^7*s23^3 + 587005*s13^6*s23^4 + 39630*s13^5*s23^5 - 
                595498*s13^4*s23^6 - 426451*s13^3*s23^7 - 60233*s13^2*s23^8 + 
                11412*s13*s23^9 + 1205*s23^10) + s12^2*s13^2*s23*(
                324*s13^10 + 953*s13^9*s23 + 5541*s13^8*s23^2 + 70177*s13^7*
                 s23^3 + 201137*s13^6*s23^4 + 112855*s13^5*s23^5 - 
                192609*s13^4*s23^6 - 239683*s13^3*s23^7 - 65927*s13^2*s23^8 + 
                8018*s13*s23^9 + 3854*s23^10) + s12^4*(324*s13^11 - 
                5535*s13^10*s23 - 9748*s13^9*s23^2 + 265734*s13^8*s23^3 + 
                933860*s13^7*s23^4 + 819186*s13^6*s23^5 - 385880*s13^5*
                 s23^6 - 870434*s13^4*s23^7 - 354674*s13^3*s23^8 - 
                21605*s13^2*s23^9 + 3822*s13*s23^10 + 70*s23^11))) + 
          p1q^4*(-(p2q^3*(s13 + s23)^2*(-(s12^10*s23*(153*s13^3 + 673*s13^2*
                   s23 - 51*s13*s23^2 + 5*s23^3)) + 5*s13^4*s23^4*
                (s13 + s23)^2*(90*s13^4 + 30*s13^3*s23 + 227*s13^2*s23^2 + 
                 33*s13*s23^3 - 94*s23^4) + s12^9*(324*s13^5 - 306*s13^4*
                  s23 - 5860*s13^3*s23^2 - 3769*s13^2*s23^3 + 566*s13*s23^4 - 
                 175*s23^5) + s12^8*(1296*s13^6 + 1161*s13^5*s23 - 
                 10930*s13^4*s23^2 - 13450*s13^3*s23^3 + 488*s13^2*s23^4 - 
                 745*s13*s23^5 - 720*s23^6) + s12*s13^3*s23^3*(1656*s13^7 + 
                 5429*s13^6*s23 + 6752*s13^5*s23^2 + 17542*s13^4*s23^3 + 
                 22949*s13^3*s23^4 + 1486*s13^2*s23^5 - 10085*s13*s23^6 - 
                 3185*s23^7) + s12^7*(1944*s13^7 + 6174*s13^6*s23 - 
                 5412*s13^5*s23^2 - 13107*s13^4*s23^3 + 18798*s13^3*s23^4 + 
                 11378*s13^2*s23^5 - 8515*s13*s23^6 - 1230*s23^7) + s12^2*
                s13^2*s23^2*(1395*s13^8 + 11425*s13^7*s23 + 18516*s13^6*
                  s23^2 + 30134*s13^5*s23^3 + 83328*s13^4*s23^4 + 
                 58838*s13^3*s23^5 - 25940*s13^2*s23^6 - 27686*s13*s23^7 - 
                 4588*s23^8) + s12^6*(1296*s13^8 + 11025*s13^7*s23 + 
                 11926*s13^6*s23^2 + 242*s13^5*s23^3 + 66049*s13^4*s23^4 + 
                 78773*s13^3*s23^5 - 10269*s13^2*s23^6 - 17475*s13*s23^7 - 
                 1045*s23^8) + s12^3*s13*s23*(234*s13^9 + 9764*s13^8*s23 + 
                 31215*s13^7*s23^2 + 31312*s13^6*s23^3 + 108036*s13^5*s23^4 + 
                 182092*s13^4*s23^5 + 34410*s13^3*s23^6 - 72982*s13^2*s23^7 - 
                 27164*s13*s23^8 - 1295*s23^9) + s12^5*(324*s13^9 + 
                 9018*s13^8*s23 + 28604*s13^7*s23^2 + 17841*s13^6*s23^3 + 
                 91339*s13^5*s23^4 + 187149*s13^4*s23^5 + 48569*s13^3*s23^6 - 
                 55901*s13^2*s23^7 - 16204*s13*s23^8 - 435*s23^9) + s12^4*s23*
                (3087*s13^9 + 25378*s13^8*s23 + 35568*s13^7*s23^2 + 
                 57410*s13^6*s23^3 + 210408*s13^5*s23^4 + 169352*s13^4*
                  s23^5 - 52144*s13^3*s23^6 - 60414*s13^2*s23^7 - 
                 7279*s13*s23^8 - 70*s23^9))) - p3q^3*(s12 + s23)^2*
             (-5*s13^4*s23^4*(s13 + s23)^4*(s13^2 + 31*s13*s23 + 14*s23^2) + 
              9*s12^10*s23*(26*s13^3 + 155*s13^2*s23 + 184*s13*s23^2 + 
                50*s23^3) + s12*s13^3*s23^3*(s13 + s23)^3*(51*s13^4 + 
                413*s13^3*s23 - 2137*s13^2*s23^2 - 3394*s13*s23^3 - 
                1295*s23^4) + s12^9*(324*s13^5 + 3087*s13^4*s23 + 
                9764*s13^3*s23^2 + 11425*s13^2*s23^3 + 5429*s13*s23^4 + 
                1050*s23^5) + s12^8*(1296*s13^6 + 9018*s13^5*s23 + 
                25378*s13^4*s23^2 + 31215*s13^3*s23^3 + 18516*s13^2*s23^4 + 
                6752*s13*s23^5 + 1885*s23^6) - s12^2*s13^2*s23^2*(s13 + s23)^
                2*(673*s13^6 + 2423*s13^5*s23 - 6007*s13^4*s23^2 - 
                1787*s13^3*s23^3 + 19850*s13^2*s23^4 + 17988*s13*s23^5 + 
                4588*s23^6) + s12^7*(1944*s13^7 + 11025*s13^6*s23 + 
                28604*s13^5*s23^2 + 35568*s13^4*s23^3 + 31312*s13^3*s23^4 + 
                30134*s13^2*s23^5 + 17542*s13*s23^6 + 2585*s23^7) - 
              s12^3*s13*s23*(s13 + s23)^2*(153*s13^7 + 5554*s13^6*s23 + 
                2189*s13^5*s23^2 - 28730*s13^4*s23^3 - 23502*s13^3*s23^4 + 
                27165*s13^2*s23^5 + 21316*s13*s23^6 + 3185*s23^7) + 
              s12^6*(1296*s13^8 + 6174*s13^7*s23 + 11926*s13^6*s23^2 + 
                17841*s13^5*s23^3 + 57410*s13^4*s23^4 + 108036*s13^3*s23^5 + 
                83328*s13^2*s23^6 + 22949*s13*s23^7 + 995*s23^8) + 
              s12^5*(324*s13^9 + 1161*s13^8*s23 - 5412*s13^7*s23^2 + 
                242*s13^6*s23^3 + 91339*s13^5*s23^4 + 210408*s13^4*s23^5 + 
                182092*s13^3*s23^6 + 58838*s13^2*s23^7 + 1486*s13*s23^8 - 
                775*s23^9) - s12^4*s23*(306*s13^9 + 10930*s13^8*s23 + 
                13107*s13^7*s23^2 - 66049*s13^6*s23^3 - 187149*s13^5*s23^4 - 
                169352*s13^4*s23^5 - 34410*s13^3*s23^6 + 25940*s13^2*s23^7 + 
                10085*s13*s23^8 + 470*s23^9)) - p2q*p3q^2*(s12 + s23)*
             (s13 + s23)*(9*s12^11*s23*(26*s13^2 + 93*s13*s23 + 30*s23^2) - 
              5*s13^3*s23^4*(s13 + s23)^3*(23*s13^4 - 96*s13^3*s23 + 
                116*s13^2*s23^2 + 73*s13*s23^3 - 18*s23^4) + 
              s12^10*(324*s13^4 + 2214*s13^3*s23 + 3967*s13^2*s23^2 + 
                2697*s13*s23^3 + 800*s23^4) + s12^9*(648*s13^5 + 
                1665*s13^4*s23 + 4633*s13^3*s23^2 + 8616*s13^2*s23^3 + 
                6586*s13*s23^4 + 2670*s23^5) - s12*s13^2*s23^3*(s13 + s23)^2*(
                620*s13^6 - 1137*s13^5*s23 - 8718*s13^4*s23^2 + 1892*s13^3*
                 s23^3 + 9849*s13^2*s23^4 + 2262*s13*s23^5 - 734*s23^6) + 
              s12^8*(-648*s13^6 - 10926*s13^5*s23 - 23361*s13^4*s23^2 - 
                5407*s13^3*s23^3 + 34357*s13^2*s23^4 + 33577*s13*s23^5 + 
                5785*s23^6) + s12^7*(-2592*s13^7 - 28377*s13^6*s23 - 
                75269*s13^5*s23^2 - 30266*s13^4*s23^3 + 129100*s13^3*s23^4 + 
                169783*s13^2*s23^5 + 64618*s13*s23^6 + 4520*s23^7) + 
              s12^6*(-2268*s13^8 - 31446*s13^7*s23 - 103005*s13^6*s23^2 - 
                28321*s13^5*s23^3 + 310351*s13^4*s23^4 + 493499*s13^3*s23^5 + 
                263742*s13^2*s23^6 + 33688*s13*s23^7 - 690*s23^8) - 
              s12^4*s23*(4914*s13^9 + 38511*s13^8*s23 + 48169*s13^7*s23^2 - 
                240082*s13^6*s23^3 - 672096*s13^5*s23^4 - 581286*s13^4*
                 s23^5 - 117772*s13^3*s23^6 + 65624*s13^2*s23^7 + 
                20268*s13*s23^8 + 495*s23^9) + s12^2*s13*s23^2*(-586*s13^9 - 
                3116*s13^8*s23 + 6361*s13^7*s23^2 + 75297*s13^6*s23^3 + 
                116576*s13^5*s23^4 + 13288*s13^4*s23^5 - 73543*s13^3*s23^6 - 
                42227*s13^2*s23^7 - 4832*s13*s23^8 + 734*s23^9) - 
              s12^5*(648*s13^9 + 18369*s13^8*s23 + 84697*s13^7*s23^2 + 
                35130*s13^6*s23^3 - 378287*s13^5*s23^4 - 775353*s13^4*s23^5 - 
                545303*s13^3*s23^6 - 99058*s13^2*s23^7 + 18929*s13*s23^8 + 
                2150*s23^9) + s12^3*s23*(-225*s13^10 - 7000*s13^9*s23 - 
                25186*s13^8*s23^2 + 64358*s13^7*s23^3 + 319018*s13^6*s23^4 + 
                365926*s13^5*s23^5 + 61417*s13^4*s23^6 - 112301*s13^3*s23^7 - 
                46815*s13^2*s23^8 - 2684*s13*s23^9 + 90*s23^10)) - 
            p2q^2*p3q*(s13 + s23)*(-(s12^11*s23*(225*s13^3 + 586*s13^2*s23 + 
                 620*s13*s23^2 + 115*s23^3)) - s12^10*(648*s13^5 + 
                4914*s13^4*s23 + 7225*s13^3*s23^2 + 3702*s13^2*s23^3 + 
                723*s13*s23^4 - 20*s23^5) + 5*s13^3*s23^4*(s13 + s23)^3*(
                54*s13^5 - 2*s13^4*s23 + 378*s13^3*s23^2 - 25*s13^2*s23^3 - 
                153*s13*s23^4 + 18*s23^5) + s12^9*(-2268*s13^6 - 
                19017*s13^5*s23 - 43425*s13^4*s23^2 - 32186*s13^3*s23^3 + 
                3245*s13^2*s23^4 + 10269*s13*s23^5 + 650*s23^6) - 
              s12^8*(2592*s13^7 + 33714*s13^6*s23 + 103066*s13^5*s23^2 + 
                86680*s13^4*s23^3 - 39172*s13^3*s23^4 - 81658*s13^2*s23^5 - 
                27053*s13*s23^6 + 265*s23^7) + s12*s13^2*s23^3*(s13 + s23)^2*(
                1107*s13^7 + 1283*s13^6*s23 + 5583*s13^5*s23^2 + 
                26913*s13^4*s23^3 + 9729*s13^3*s23^4 - 13373*s13^2*s23^5 - 
                4062*s13*s23^6 + 734*s23^7) + s12^7*(-648*s13^8 - 
                30969*s13^7*s23 - 134451*s13^6*s23^2 - 119827*s13^5*s23^3 + 
                191913*s13^4*s23^4 + 383376*s13^3*s23^5 + 191873*s13^2*
                 s23^6 + 11766*s13*s23^7 - 3045*s23^8) + s12^6*(648*s13^9 - 
                11574*s13^8*s23 - 103646*s13^7*s23^2 - 131326*s13^6*s23^3 + 
                343157*s13^5*s23^4 + 912178*s13^4*s23^5 + 684944*s13^3*
                 s23^6 + 129864*s13^2*s23^7 - 28767*s13*s23^8 - 3670*s23^9) + 
              s12^5*(324*s13^10 + 2313*s13^9*s23 - 34287*s13^8*s23^2 - 
                105535*s13^7*s23^3 + 282030*s13^6*s23^4 + 1153640*s13^5*
                 s23^5 + 1253382*s13^4*s23^6 + 427343*s13^3*s23^7 - 
                60255*s13^2*s23^8 - 37491*s13*s23^9 - 1500*s23^10) + 
              s12^4*s23*(2538*s13^10 + 6298*s13^9*s23 - 28768*s13^8*s23^2 + 
                98834*s13^7*s23^3 + 803850*s13^6*s23^4 + 1320656*s13^5*
                 s23^5 + 699058*s13^4*s23^6 - 50884*s13^3*s23^7 - 
                115770*s13^2*s23^8 - 14433*s13*s23^9 - 5*s23^10) + 
              s12^2*s13*s23^2*(1071*s13^10 + 6664*s13^9*s23 + 15202*s13^8*
                 s23^2 + 67934*s13^7*s23^3 + 234401*s13^6*s23^4 + 
                297430*s13^5*s23^5 + 80129*s13^4*s23^6 - 85892*s13^3*s23^7 - 
                49499*s13^2*s23^8 - 4098*s13*s23^9 + 734*s23^10) + 
              s12^3*s23*(234*s13^11 + 6181*s13^10*s23 + 13249*s13^9*s23^2 + 
                28950*s13^8*s23^3 + 298883*s13^7*s23^4 + 757241*s13^6*s23^5 + 
                644361*s13^5*s23^6 + 52148*s13^4*s23^7 - 159116*s13^3*s23^8 - 
                47059*s13^2*s23^9 - 60*s13*s23^10 + 90*s23^11))) + 
          p1q^2*(-(p3q^5*s12*(s12 + s23)^2*(45*s12^11*s23*(2*s13 + s23) + 5*
                s12^10*s23*(18*s13^2 + 37*s13*s23 + 19*s23^2) - 4*s13^5*s23^3*
                (s13 + s23)^3*(51*s13^2 + 57*s13*s23 + 26*s23^2) + s12^9*
                (-324*s13^4 - 1296*s13^3*s23 - 156*s13^2*s23^2 + 
                 731*s13*s23^3 + 295*s23^4) - s12*s13^4*s23^2*(s13 + s23)^2*
                (483*s13^4 + 3682*s13^3*s23 + 6312*s13^2*s23^2 + 
                 4093*s13*s23^3 + 1300*s23^4) + s12^2*s13^3*s23*(s13 + s23)^2*
                (153*s13^5 - 5284*s13^4*s23 - 19079*s13^3*s23^2 - 
                 34320*s13^2*s23^3 - 21038*s13*s23^4 - 5733*s23^5) + s12^8*
                (-972*s13^5 - 1755*s13^4*s23 + 3533*s13^3*s23^2 + 
                 5852*s13^2*s23^3 + 1246*s13*s23^4 - 595*s23^5) + s12^7*
                (-648*s13^6 + 4428*s13^5*s23 + 22167*s13^4*s23^2 + 
                 23316*s13^3*s23^3 - 3125*s13^2*s23^4 - 11725*s13*s23^5 - 
                 2880*s23^6) + s12^6*(648*s13^7 + 10089*s13^6*s23 + 
                 34793*s13^5*s23^2 + 17715*s13^4*s23^3 - 57024*s13^3*s23^4 - 
                 74117*s13^2*s23^5 - 28220*s13*s23^6 - 3000*s23^7) - s12^3*
                s13^2*s23*(846*s13^7 + 15916*s13^6*s23 + 81104*s13^5*s23^2 + 
                 208253*s13^4*s23^3 + 280328*s13^3*s23^4 + 194724*s13^2*
                  s23^5 + 65859*s13*s23^6 + 9244*s23^7) + s12^4*s13*
                (324*s13^8 - 1089*s13^7*s23 - 16493*s13^6*s23^2 - 
                 109644*s13^5*s23^3 - 291324*s13^4*s23^4 - 359467*s13^3*
                  s23^5 - 212971*s13^2*s23^6 - 54820*s13*s23^7 - 
                 4371*s23^8) + s12^5*(972*s13^8 + 5112*s13^7*s23 + 
                 11383*s13^6*s23^2 - 53975*s13^5*s23^3 - 199814*s13^4*s23^4 - 
                 229940*s13^3*s23^5 - 110470*s13^2*s23^6 - 20256*s13*s23^7 - 
                 960*s23^8))) - p2q^5*s13*(s13 + s23)^2*
             (-3*s12^10*s23*(-51*s13^2 + 161*s13*s23 + 68*s23^2) + 
              s12^9*(324*s13^4 - 846*s13^3*s23 - 4978*s13^2*s23^2 - 
                4648*s13*s23^3 - 840*s23^4) + 5*s13^5*s23^2*(s13 + s23)^2*(
                9*s13^4 + s13^3*s23 + 48*s13^2*s23^2 - 216*s13*s23^3 - 
                192*s23^4) + s12^8*(972*s13^5 - 1089*s13^4*s23 - 
                15916*s13^3*s23^2 - 29494*s13^2*s23^3 - 14159*s13*s23^4 - 
                1400*s23^5) + s12^7*(648*s13^6 + 5112*s13^5*s23 - 
                16493*s13^4*s23^2 - 81104*s13^3*s23^3 - 77762*s13^2*s23^4 - 
                20399*s13*s23^5 - 1200*s23^6) + s12^2*s13^3*s23*(90*s13^7 - 
                156*s13^6*s23 + 5852*s13^5*s23^2 - 3125*s13^4*s23^3 - 
                74117*s13^3*s23^4 - 110470*s13^2*s23^5 - 54820*s13*s23^6 - 
                9244*s23^7) + s12*s13^4*s23*(90*s13^7 + 185*s13^6*s23 + 
                731*s13^5*s23^2 + 1246*s13^4*s23^3 - 11725*s13^3*s23^4 - 
                28220*s13^2*s23^5 - 20256*s13*s23^6 - 4371*s23^7) - 
              s12^6*(648*s13^7 - 10089*s13^6*s23 - 11383*s13^5*s23^2 + 
                109644*s13^4*s23^3 + 208253*s13^3*s23^4 + 108757*s13^2*
                 s23^5 + 15798*s13*s23^6 + 540*s23^7) - s12^3*s13^2*s23*(
                1296*s13^7 - 3533*s13^6*s23 - 23316*s13^5*s23^2 + 
                57024*s13^4*s23^3 + 229940*s13^3*s23^4 + 212971*s13^2*s23^5 + 
                65859*s13*s23^6 + 5733*s23^7) - s12^5*(972*s13^8 - 
                4428*s13^7*s23 - 34793*s13^6*s23^2 + 53975*s13^5*s23^3 + 
                291324*s13^4*s23^4 + 280328*s13^3*s23^5 + 82129*s13^2*s23^6 + 
                6693*s13*s23^7 + 104*s23^8) - s12^4*s13*(324*s13^8 + 
                1755*s13^7*s23 - 22167*s13^6*s23^2 - 17715*s13^5*s23^3 + 
                199814*s13^4*s23^4 + 359467*s13^3*s23^5 + 194724*s13^2*
                 s23^6 + 32504*s13*s23^7 + 1300*s23^8)) - 
            p2q*p3q^4*(s12 + s23)*(20*s13^5*(s13 - s23)*s23^4*(s13 + s23)^5 + 
              45*s12^13*s23*(2*s13 + s23) + 4*s12^12*s23*(-63*s13^2 + 
                97*s13*s23 + 70*s23^2) - s12*s13^4*s23^3*(s13 + s23)^3*(
                485*s13^4 + 654*s13^3*s23 - 485*s13^2*s23^2 - 579*s13*s23^3 - 
                485*s23^4) + s12^11*(-324*s13^4 - 441*s13^3*s23 + 
                4415*s13^2*s23^2 + 4802*s13*s23^3 + 1300*s23^4) + 
              s12^10*(972*s13^5 + 15444*s13^4*s23 + 38643*s13^3*s23^2 + 
                35175*s13^2*s23^3 + 11334*s13*s23^4 + 770*s23^5) + 
              s12^9*(6480*s13^6 + 59481*s13^5*s23 + 146605*s13^4*s23^2 + 
                143072*s13^3*s23^3 + 39683*s13^2*s23^4 - 11860*s13*s23^5 - 
                4275*s23^6) - s12^2*s13^3*s23^2*(s13 + s23)^2*(1171*s13^6 + 
                5413*s13^5*s23 + 17464*s13^4*s23^2 + 11417*s13^3*s23^3 - 
                10334*s13^2*s23^4 - 10403*s13*s23^5 - 3314*s23^6) + 
              s12^8*(9720*s13^7 + 81072*s13^6*s23 + 225884*s13^5*s23^2 + 
                224523*s13^4*s23^3 + 1162*s13^3*s23^4 - 119218*s13^2*s23^5 - 
                57749*s13*s23^6 - 7120*s23^7) - s12^3*s13^2*s23*(s13 + s23)^
                2*(810*s13^7 + 7222*s13^6*s23 + 48208*s13^5*s23^2 + 
                80804*s13^4*s23^3 + 50311*s13^3*s23^4 - 27175*s13^2*s23^5 - 
                23229*s13*s23^6 - 5813*s23^7) + s12^7*(4860*s13^8 + 
                37791*s13^7*s23 + 109787*s13^6*s23^2 + 11768*s13^5*s23^3 - 
                354852*s13^4*s23^4 - 519837*s13^3*s23^5 - 280346*s13^2*
                 s23^6 - 54613*s13*s23^7 - 2890*s23^8) - s12^4*s13*s23*(
                4212*s13^9 + 51028*s13^8*s23 + 234435*s13^7*s23^2 + 
                531484*s13^6*s23^3 + 679793*s13^5*s23^4 + 465488*s13^4*
                 s23^5 + 104456*s13^3*s23^6 - 45541*s13^2*s23^7 - 
                23373*s13*s23^8 - 2936*s23^9) - s12^6*(324*s13^9 + 
                9684*s13^8*s23 + 77596*s13^7*s23^2 + 332924*s13^6*s23^3 + 
                831843*s13^5*s23^4 + 1086325*s13^4*s23^5 + 687223*s13^3*
                 s23^6 + 179540*s13^2*s23^7 + 10337*s13*s23^8 - 830*s23^9) - 
              s12^5*(648*s13^10 + 13743*s13^9*s23 + 116890*s13^8*s23^2 + 
                410831*s13^7*s23^3 + 876612*s13^6*s23^4 + 1136304*s13^5*
                 s23^5 + 805575*s13^4*s23^6 + 256212*s13^3*s23^7 + 
                10027*s13^2*s23^8 - 8153*s13*s23^9 - 580*s23^10)) + 
            p2q^4*p3q*(s13 + s23)*(s12^11*s23*(810*s13^3 + 1171*s13^2*s23 + 
                485*s13*s23^2 - 20*s23^3) + s12^10*(648*s13^5 + 4212*s13^4*
                 s23 + 8842*s13^3*s23^2 + 7755*s13^2*s23^3 + 2109*s13*s23^4 - 
                80*s23^5) - 5*s13^5*s23^2*(s13 + s23)^3*(9*s13^5 + 
                29*s13^4*s23 + 146*s13^3*s23^2 - 380*s13^2*s23^3 - 
                182*s13*s23^4 + 116*s23^5) + s12^9*(324*s13^6 + 13743*s13^5*
                 s23 + 51028*s13^4*s23^2 + 63462*s13^3*s23^3 + 29461*s13^2*
                 s23^4 + 2932*s13*s23^5 - 100*s23^6) + s12^8*s13*(
                -4860*s13^6 + 9684*s13^5*s23 + 116890*s13^4*s23^2 + 
                234435*s13^3*s23^3 + 184442*s13^2*s23^4 + 51758*s13*s23^5 + 
                413*s23^6) - s12*s13^4*s23*(s13 + s23)^2*(90*s13^7 + 
                208*s13^6*s23 + 4296*s13^5*s23^2 + 2534*s13^4*s23^3 - 
                21224*s13^3*s23^4 - 17835*s13^2*s23^5 + 2281*s13*s23^6 + 
                2936*s23^7) + s12^7*(-9720*s13^8 - 37791*s13^7*s23 + 
                77596*s13^6*s23^2 + 410831*s13^5*s23^3 + 531484*s13^4*s23^4 + 
                260127*s13^3*s23^5 + 29964*s13^2*s23^6 - 3023*s13*s23^7 + 
                100*s23^8) + s12^2*s13^3*s23*(252*s13^9 - 4415*s13^8*s23 - 
                35175*s13^7*s23^2 - 39683*s13^6*s23^3 + 119218*s13^5*s23^4 + 
                280346*s13^4*s23^5 + 179540*s13^3*s23^6 + 10027*s13^2*s23^7 - 
                23373*s13*s23^8 - 5813*s23^9) + s12^3*s13^2*s23*(441*s13^9 - 
                38643*s13^8*s23 - 143072*s13^7*s23^2 - 1162*s13^6*s23^3 + 
                519837*s13^5*s23^4 + 687223*s13^4*s23^5 + 256212*s13^3*
                 s23^6 - 45541*s13^2*s23^7 - 34855*s13*s23^8 - 3314*s23^9) + 
              s12^6*(-6480*s13^9 - 81072*s13^8*s23 - 109787*s13^7*s23^2 + 
                332924*s13^6*s23^3 + 876612*s13^5*s23^4 + 679793*s13^4*
                 s23^5 + 154251*s13^3*s23^6 - 19654*s13^2*s23^7 - 
                3677*s13*s23^8 + 80*s23^9) + s12^4*s13*(324*s13^10 - 
                15444*s13^9*s23 - 146605*s13^8*s23^2 - 224523*s13^7*s23^3 + 
                354852*s13^6*s23^4 + 1086325*s13^5*s23^5 + 805575*s13^4*
                 s23^6 + 104456*s13^3*s23^7 - 79446*s13^2*s23^8 - 
                17031*s13*s23^9 - 485*s23^10) - s12^5*(972*s13^10 + 
                59481*s13^9*s23 + 225884*s13^8*s23^2 + 11768*s13^7*s23^3 - 
                831843*s13^6*s23^4 - 1136304*s13^5*s23^5 - 465488*s13^4*
                 s23^6 + 27268*s13^3*s23^7 + 34454*s13^2*s23^8 + 
                2034*s13*s23^9 - 20*s23^10)) + p2q^2*p3q^3*
             (s12^13*s23*(342*s13^2 - 23*s13*s23 - 95*s23^2) + 
              5*s13^5*s23^4*(s13 + s23)^4*(23*s13^3 + 74*s13^2*s23 - 
                43*s13*s23^2 - 46*s23^3) - s12^12*s23*(1764*s13^3 + 
                4825*s13^2*s23 + 3526*s13*s23^2 + 665*s23^3) - 
              s12^11*(2268*s13^5 + 20493*s13^4*s23 + 39794*s13^3*s23^2 + 
                30188*s13^2*s23^3 + 8014*s13*s23^4 + 455*s23^5) - 
              s12*s13^4*s23^3*(s13 + s23)^3*(418*s13^5 - 4104*s13^4*s23 - 
                5501*s13^3*s23^2 + 3394*s13^2*s23^3 + 5415*s13*s23^4 + 
                2722*s23^5) - s12^10*(5184*s13^6 + 45684*s13^5*s23 + 
                120922*s13^4*s23^2 + 120101*s13^3*s23^3 + 30781*s13^2*s23^4 - 
                10763*s13*s23^5 - 2665*s23^6) + s12^9*(1620*s13^7 + 
                4752*s13^6*s23 - 33914*s13^5*s23^2 - 41684*s13^4*s23^3 + 
                60680*s13^3*s23^4 + 106719*s13^2*s23^5 + 44446*s13*s23^6 + 
                4405*s23^7) - s12^2*s13^3*s23^2*(s13 + s23)^2*(1442*s13^7 - 
                3866*s13^6*s23 - 30057*s13^5*s23^2 - 61057*s13^4*s23^3 - 
                12216*s13^3*s23^4 + 59840*s13^2*s23^5 + 43627*s13*s23^6 + 
                10439*s23^7) + s12^8*(12960*s13^8 + 135396*s13^7*s23 + 
                430858*s13^6*s23^2 + 745565*s13^5*s23^3 + 876337*s13^4*
                 s23^4 + 667874*s13^3*s23^5 + 257478*s13^2*s23^6 + 
                29623*s13*s23^7 - 175*s23^8) - s12^3*s13^2*s23*(s13 + s23)^2*(
                909*s13^8 + 1056*s13^7*s23 - 42633*s13^6*s23^2 - 
                201754*s13^5*s23^3 - 224019*s13^4*s23^4 + 20978*s13^3*s23^5 + 
                196173*s13^2*s23^6 + 90204*s13*s23^7 + 12938*s23^8) + 
              s12^7*(11340*s13^9 + 182178*s13^8*s23 + 848012*s13^7*s23^2 + 
                1864504*s13^6*s23^3 + 2449678*s13^5*s23^4 + 2012567*s13^4*
                 s23^5 + 893440*s13^3*s23^6 + 118844*s13^2*s23^7 - 
                28542*s13*s23^8 - 4785*s23^9) + s12^4*s13*s23*(-2160*s13^10 + 
                32575*s13^9*s23 + 364365*s13^8*s23^2 + 1238937*s13^7*s23^3 + 
                1903694*s13^6*s23^4 + 1219805*s13^5*s23^5 - 191672*s13^4*
                 s23^6 - 754550*s13^3*s23^7 - 416406*s13^2*s23^8 - 
                84119*s13*s23^9 - 5173*s23^10) + s12^6*(2592*s13^10 + 
                97380*s13^9*s23 + 701228*s13^8*s23^2 + 2103995*s13^7*s23^3 + 
                3376454*s13^6*s23^4 + 3138422*s13^5*s23^5 + 1554094*s13^4*
                 s23^6 + 184504*s13^3*s23^7 - 156825*s13^2*s23^8 - 
                50743*s13*s23^9 - 3585*s23^10) + s12^5*(-324*s13^11 + 
                17298*s13^10*s23 + 266065*s13^9*s23^2 + 1259549*s13^8*s23^3 + 
                2712066*s13^7*s23^4 + 3042366*s13^6*s23^5 + 1592481*s13^5*
                 s23^6 - 67695*s13^4*s23^7 - 494578*s13^3*s23^8 - 
                201851*s13^2*s23^9 - 26923*s13*s23^10 - 830*s23^11)) + 
            p2q^3*p3q^2*(s12^12*s23*(-909*s13^3 - 1442*s13^2*s23 - 
                418*s13*s23^2 + 115*s23^3) - 5*s13^5*s23^3*(s13 + s23)^4*(
                19*s13^4 + 57*s13^3*s23 - 251*s13^2*s23^2 + 53*s13*s23^3 + 
                166*s23^4) + s12^11*(-324*s13^5 - 2160*s13^4*s23 - 
                2874*s13^3*s23^2 + 982*s13^2*s23^3 + 2850*s13*s23^4 + 
                830*s23^5) + s12^10*(2592*s13^6 + 17298*s13^5*s23 + 
                32575*s13^4*s23^2 + 39612*s13^3*s23^3 + 36347*s13^2*s23^4 + 
                16559*s13*s23^5 + 1955*s23^6) - s12*s13^4*s23^2*(s13 + s23)^
                3*(23*s13^6 + 3457*s13^5*s23 - 2426*s13^4*s23^2 - 
                13879*s13^3*s23^3 + 1012*s13^2*s23^4 + 11404*s13*s23^5 + 
                5173*s23^6) + s12^9*(11340*s13^7 + 97380*s13^6*s23 + 
                266065*s13^5*s23^2 + 364365*s13^4*s23^3 + 285964*s13^3*
                 s23^4 + 125037*s13^2*s23^5 + 25003*s13*s23^6 + 1590*s23^7) + 
              s12^2*s13^3*s23*(s13 + s23)^2*(342*s13^8 - 5509*s13^7*s23 - 
                19512*s13^6*s23^2 + 13752*s13^5*s23^3 + 98727*s13^4*s23^4 + 
                46272*s13^3*s23^5 - 72427*s13^2*s23^6 - 58243*s13*s23^7 - 
                12938*s23^8) + s12^8*(12960*s13^8 + 182178*s13^7*s23 + 
                701228*s13^6*s23^2 + 1259549*s13^5*s23^3 + 1238937*s13^4*
                 s23^4 + 670160*s13^3*s23^5 + 164387*s13^2*s23^6 + 
                5010*s13*s23^7 - 615*s23^8) - s12^3*s13^2*s23*(s13 + s23)^2*(
                1764*s13^8 + 36266*s13^7*s23 + 45805*s13^6*s23^2 - 
                188556*s13^5*s23^3 - 336567*s13^4*s23^4 - 31750*s13^3*s23^5 + 
                215563*s13^2*s23^6 + 95202*s13*s23^7 + 10439*s23^8) + 
              s12^7*(1620*s13^9 + 135396*s13^8*s23 + 848012*s13^7*s23^2 + 
                2103995*s13^6*s23^3 + 2712066*s13^5*s23^4 + 1903694*s13^4*
                 s23^5 + 628814*s13^3*s23^6 + 25649*s13^2*s23^7 - 
                23648*s13*s23^8 - 1870*s23^9) + s12^6*(-5184*s13^10 + 
                4752*s13^9*s23 + 430858*s13^8*s23^2 + 1864504*s13^7*s23^3 + 
                3376454*s13^6*s23^4 + 3042366*s13^5*s23^5 + 1219805*s13^4*
                 s23^6 - 14110*s13^3*s23^7 - 151091*s13^2*s23^8 - 
                27805*s13*s23^9 - 1135*s23^10) - s12^4*s13*s23*(
                20493*s13^10 + 120922*s13^9*s23 + 41684*s13^8*s23^2 - 
                876337*s13^7*s23^3 - 2012567*s13^6*s23^4 - 1554094*s13^5*
                 s23^5 + 67695*s13^4*s23^6 + 754550*s13^3*s23^7 + 
                389519*s13^2*s23^8 + 64505*s13*s23^9 + 2722*s23^10) - 
              s12^5*(2268*s13^11 + 45684*s13^10*s23 + 33914*s13^9*s23^2 - 
                745565*s13^8*s23^3 - 2449678*s13^7*s23^4 - 3138422*s13^6*
                 s23^5 - 1592481*s13^5*s23^6 + 191672*s13^4*s23^7 + 
                503528*s13^3*s23^8 + 157533*s13^2*s23^9 + 13581*s13*s23^10 + 
                230*s23^11))))*den[-1 + ep])/(72*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12^2*s13^2*(s12 + s13)^3*s23^2*(s12 + s23)^2*
         (s13 + s23)^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + 
       ((-9*p1q^4*s23^2*(s12^5 + s13^4*(s13 + s23) + s12^4*(17*s13 + s23) + 
            2*s12^3*s13*(23*s13 + 32*s23) + 2*s12^2*s13*(23*s13^2 + 
              63*s13*s23 + 40*s23^2) + s12*s13*(17*s13^3 + 64*s13^2*s23 + 
              80*s13*s23^2 + 32*s23^3)) + 9*(p2q + p3q)*(-(p3q*s12) + 
            p2q*s13)*(s12 + s13 + s23)*(p3q^2*(-10*s12*s13^2*s23*(s13 + 
                s23) + s12^4*(24*s13 + s23) - s13^3*s23*(s13 + 2*s23) + 
              2*s12^3*(24*s13^2 + 25*s13*s23 + s23^2) + 2*s12^2*s13*(
                12*s13^2 + 20*s13*s23 + 13*s23^2)) + 
            p2q^2*(s12^4*s23 - s13^3*s23*(s13 + 2*s23) - 2*s12^2*s13*(
                24*s13^2 + 20*s13*s23 - 5*s23^2) + 2*s12^3*(-12*s13^2 + 
                5*s13*s23 + s23^2) - 2*s12*s13^2*(12*s13^2 + 25*s13*s23 + 
                13*s23^2)) + 2*p2q*p3q*(s12 - s13)*(3*s12^3*(4*s13 + s23) + 
              3*s13^2*s23*(s13 + 2*s23) + s12^2*(24*s13^2 + 37*s13*s23 + 
                6*s23^2) + s12*s13*(12*s13^2 + 37*s13*s23 + 28*s23^2))) + 
          p1q*s23*(p3q^3*(45*s12^6 + 9*s12^5*(59*s13 + 26*s23) + 
              s13^3*s23*(17*s13^2 - 5*s13*s23 - 14*s23^2) + 
              s12^4*(1602*s13^2 + 1921*s13*s23 + 275*s23^2) + 
              2*s12^3*(963*s13^3 + 1756*s13^2*s23 + 878*s13*s23^2 + 
                47*s23^3) + s12*s13^2*(135*s13^3 + 622*s13^2*s23 + 
                476*s13*s23^2 + 66*s23^3) + 3*s12^2*s13*(315*s13^3 + 
                810*s13^2*s23 + 558*s13*s23^2 + 154*s23^3)) + 
            p2q*p3q^2*(162*s12^6 + s12^5*(945*s13 + 393*s23) + 
              s12^4*(2457*s13^2 + 3032*s13*s23 + 253*s23^2) + 
              s13^3*(81*s13^3 + 140*s13^2*s23 - 27*s13*s23^2 - 62*s23^3) + 
              s12^3*(2970*s13^3 + 5582*s13^2*s23 + 2532*s13*s23^2 + 
                46*s23^3) + 6*s12^2*s13*(270*s13^3 + 738*s13^2*s23 + 
                449*s13*s23^2 + 101*s23^3) + s12*s13^2*(405*s13^3 + 
                1625*s13^2*s23 + 1252*s13*s23^2 + 210*s23^3)) + 
            p2q^3*(s12^5*(135*s13 + 17*s23) + s12^4*(945*s13^2 + 
                622*s13*s23 - 5*s23^2) + 2*s12^3*(963*s13^3 + 1215*s13^2*
                 s23 + 238*s13*s23^2 - 7*s23^3) + 2*s12^2*s13*(801*s13^3 + 
                1756*s13^2*s23 + 837*s13*s23^2 + 33*s23^3) + 
              s13^3*(45*s13^3 + 234*s13^2*s23 + 275*s13*s23^2 + 94*s23^3) + 
              s12*s13^2*(531*s13^3 + 1921*s13^2*s23 + 1756*s13*s23^2 + 
                462*s23^3)) + p2q^2*p3q*(81*s12^6 + 5*s12^5*(81*s13 + 
                28*s23) + s12^4*(1620*s13^2 + 1625*s13*s23 - 27*s23^2) + 
              2*s12^3*(1485*s13^3 + 2214*s13^2*s23 + 626*s13*s23^2 - 
                31*s23^3) + s13^3*(162*s13^3 + 393*s13^2*s23 + 253*s13*
                 s23^2 + 46*s23^3) + s12^2*s13*(2457*s13^3 + 5582*s13^2*s23 + 
                2694*s13*s23^2 + 210*s23^3) + s12*s13^2*(945*s13^3 + 
                3032*s13^2*s23 + 2532*s13*s23^2 + 606*s23^3))) + 
          p1q^3*s23*(p3q*(9*s12^6 + s12^5*(351*s13 + 134*s23) + 
              s12^4*(990*s13^2 + 1989*s13*s23 + 331*s23^2) + 
              2*s12^3*(585*s13^3 + 1924*s13^2*s23 + 1490*s13*s23^2 + 
                269*s23^3) + s13*s23*(89*s13^4 + 295*s13^3*s23 + 
                538*s13^2*s23^2 + 468*s13*s23^3 + 144*s23^4) + 
              s12^2*(729*s13^4 + 3218*s13^3*s23 + 3966*s13^2*s23^2 + 
                2262*s13*s23^3 + 468*s23^4) + s12*(207*s13^5 + 1314*s13^4*
                 s23 + 2188*s13^3*s23^2 + 1974*s13^2*s23^3 + 936*s13*s23^4 + 
                144*s23^5)) + p2q*(s12^5*(207*s13 + 89*s23) + 
              s12^4*(729*s13^2 + 1314*s13*s23 + 295*s23^2) + 
              2*s12^3*(585*s13^3 + 1609*s13^2*s23 + 1094*s13*s23^2 + 
                269*s23^3) + 2*s12^2*(495*s13^4 + 1924*s13^3*s23 + 
                1983*s13^2*s23^2 + 987*s13*s23^3 + 234*s23^4) + 
              s13*(9*s13^5 + 134*s13^4*s23 + 331*s13^3*s23^2 + 538*s13^2*
                 s23^3 + 468*s13*s23^4 + 144*s23^5) + s12*(351*s13^5 + 
                1989*s13^4*s23 + 2980*s13^3*s23^2 + 2262*s13^2*s23^3 + 
                936*s13*s23^4 + 144*s23^5))) - 
          p1q^2*(p3q^2*(9*s12^6*(24*s13 + 13*s23) + s12^5*(648*s13^2 + 
                1575*s13*s23 + 392*s23^2) + s13^2*s23^2*(33*s13^3 + 
                213*s13^2*s23 + 200*s13*s23^2 + 36*s23^3) + 
              s12^4*(648*s13^3 + 3510*s13^2*s23 + 3175*s13*s23^2 + 
                851*s23^3) + s12^2*s23*(981*s13^4 + 3536*s13^3*s23 + 
                5568*s13^2*s23^2 + 2760*s13*s23^3 + 252*s23^4) + 
              s12*s13*s23*(135*s13^4 + 478*s13^3*s23 + 1814*s13^2*s23^2 + 
                1860*s13*s23^3 + 576*s23^4) + s12^3*(216*s13^4 + 
                2898*s13^3*s23 + 5874*s13^2*s23^2 + 4242*s13*s23^3 + 
                812*s23^4)) + p2q*p3q*(81*s12^6*s23 + s12^5*(-432*s13^2 + 
                1062*s13*s23 + 425*s23^2) + s12^4*(-1296*s13^3 + 
                2223*s13^2*s23 + 3149*s13*s23^2 + 1100*s23^3) + 
              s13^2*s23*(81*s13^4 + 425*s13^3*s23 + 1100*s13^2*s23^2 + 
                1012*s13*s23^3 + 288*s23^4) + s12^3*(-1296*s13^4 + 
                2484*s13^3*s23 + 7898*s13^2*s23^2 + 5912*s13*s23^3 + 
                1012*s23^4) + s12*s13*s23*(1062*s13^4 + 3149*s13^3*s23 + 
                5912*s13^2*s23^2 + 4620*s13*s23^3 + 1152*s23^4) + 
              s12^2*(-432*s13^5 + 2223*s13^4*s23 + 7898*s13^3*s23^2 + 
                10776*s13^2*s23^3 + 4620*s13*s23^4 + 288*s23^5)) + 
            p2q^2*(3*s12^5*s23*(45*s13 + 11*s23) + s12^4*(216*s13^3 + 
                981*s13^2*s23 + 478*s13*s23^2 + 213*s23^3) + 
              2*s12^3*(324*s13^4 + 1449*s13^3*s23 + 1768*s13^2*s23^2 + 
                907*s13*s23^3 + 100*s23^4) + s13^2*s23*(117*s13^4 + 
                392*s13^3*s23 + 851*s13^2*s23^2 + 812*s13*s23^3 + 
                252*s23^4) + 6*s12^2*(108*s13^5 + 585*s13^4*s23 + 
                979*s13^3*s23^2 + 928*s13^2*s23^3 + 310*s13*s23^4 + 
                6*s23^5) + s12*s13*(216*s13^5 + 1575*s13^4*s23 + 
                3175*s13^3*s23^2 + 4242*s13^2*s23^3 + 2760*s13*s23^4 + 
                576*s23^5))))*den[-3 + 2*ep])/(16*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*s23^2) + 
       nl*((ep*(-1 + (4*s12)/s13 + (4*s13)/s12))/6 + 
         (-9*p1q^4*(s12 - s13)^2*s23*(s12 + s13 + s23) + 9*(p2q + p3q)^3*
            (s12 - s13)*(-(p3q*s12) + p2q*s13)*(s12^2 + 2*s12*s13 + s13^2 + 
             3*s12*s23 + 3*s13*s23 + 2*s23^2) + p1q*(p2q + p3q)^2*
            (-(p3q*(s12^3*(36*s13 + 35*s23) + s13*s23*(-s13^2 + 5*s13*s23 + 
                  14*s23^2) + s12*s23*(-53*s13^2 + 10*s13*s23 + 14*s23^2) + 
                s12^2*(-36*s13^2 + 19*s13*s23 + 41*s23^2))) + 
             p2q*(s12^3*s23 + s12^2*(36*s13^2 + 53*s13*s23 - 5*s23^2) - s13*
                s23*(35*s13^2 + 41*s13*s23 + 14*s23^2) - s12*(36*s13^3 + 
                 19*s13^2*s23 + 10*s13*s23^2 + 14*s23^3))) + 
           4*p1q^2*(p3q^2*(-(s12^3*(18*s13 + 5*s23)) + s12^2*(18*s13^2 + 
                 s13*s23 - 8*s23^2) + s13*s23*(4*s13^2 + s13*s23 - 7*s23^2) - 
               7*s12*s23*(-4*s13^2 + s13*s23 + s23^2)) + 
             p2q^2*(4*s12^3*s23 + s12^2*(18*s13^2 + 28*s13*s23 + s23^2) - s13*
                s23*(5*s13^2 + 8*s13*s23 + 7*s23^2) + s12*(-18*s13^3 + 
                 s13^2*s23 - 7*s13*s23^2 - 7*s23^3)) - 
             p2q*p3q*(s12^3*(18*s13 + s23) + s12^2*(-36*s13^2 - 29*s13*s23 + 
                 7*s23^2) + s13*s23*(s13^2 + 7*s13*s23 + 14*s23^2) + s12*
                (18*s13^3 - 29*s13^2*s23 + 14*s13*s23^2 + 14*s23^3))) + 
           p1q^3*(p3q*(9*s12^4 + s12^3*(-27*s13 + s23) + s12^2*(27*s13^2 - 
                 10*s13*s23 - 28*s23^2) - 4*s13*s23*(2*s13^2 + 7*s13*s23 + 
                 7*s23^2) - s12*(9*s13^3 - 17*s13^2*s23 + 56*s13*s23^2 + 
                 28*s23^3)) - p2q*(s12^3*(9*s13 + 8*s23) + s12^2*
                (-27*s13^2 - 17*s13*s23 + 28*s23^2) + s13*(-9*s13^3 - 
                 s13^2*s23 + 28*s13*s23^2 + 28*s23^3) + s12*(27*s13^3 + 
                 10*s13^2*s23 + 56*s13*s23^2 + 28*s23^3))))/
          (24*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*(s12 + s13)*s23) + 
         (3*(s12 + s13 + s23)*(4*p1q^4*s12*s13*s23^2*(s12^2 + 2*s12*s13 + 
              s13^2 + 3*s12*s23 + 3*s13*s23 + 2*s23^2) - 2*(p2q + p3q)^2*s12*
             s13*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*(3*p3q*s12^2 - 
              p3q*s13*s23 + p2q*s12*(-3*s13 + s23) + 3*p3q*s12*(s13 + s23) - 
              3*p2q*s13*(s13 + s23)) - p1q*(p2q + p3q)*s23*
             (p2q*p3q*(2*s12^5 + s12^4*(7*s13 + 3*s23) + s13^3*(2*s13^2 + 
                  3*s13*s23 + s23^2) + s12^3*(15*s13^2 + 22*s13*s23 + 
                  s23^2) + s12*s13^2*(7*s13^2 + 22*s13*s23 + 11*s23^2) + 
                s12^2*s13*(15*s13^2 + 22*s13*s23 + 11*s23^2)) + 
              p3q^2*s12*(2*s12^4 + 5*s12^3*(3*s13 + s23) + s13^2*(4*s13^2 + 
                  10*s13*s23 + 3*s23^2) + s12^2*(30*s13^2 + 32*s13*s23 + 
                  3*s23^2) + s12*s13*(21*s13^2 + 29*s13*s23 + 14*s23^2)) + 
              p2q^2*s13*(4*s12^4 + s12^3*(21*s13 + 10*s23) + 
                s13^2*(2*s13^2 + 5*s13*s23 + 3*s23^2) + s12^2*(30*s13^2 + 
                  29*s13*s23 + 3*s23^2) + s12*s13*(15*s13^2 + 32*s13*s23 + 
                  14*s23^2))) - p1q^3*s23*(p3q*(2*s12^4*(5*s13 + s23) + 
                s12^3*(18*s13^2 + 38*s13*s23 + 7*s23^2) + s13*s23*
                 (2*s13^3 + 7*s13^2*s23 + 9*s13*s23^2 + 4*s23^3) + 
                s12^2*(14*s13^3 + 44*s13^2*s23 + 39*s13*s23^2 + 9*s23^3) + 
                s12*(6*s13^4 + 26*s13^3*s23 + 31*s13^2*s23^2 + 18*s13*s23^3 + 
                  4*s23^4)) + p2q*(2*s12^4*(3*s13 + s23) + s12^3*(14*s13^2 + 
                  26*s13*s23 + 7*s23^2) + s13*s23*(2*s13^3 + 7*s13^2*s23 + 
                  9*s13*s23^2 + 4*s23^3) + s12^2*(18*s13^3 + 44*s13^2*s23 + 
                  31*s13*s23^2 + 9*s23^3) + s12*(10*s13^4 + 38*s13^3*s23 + 
                  39*s13^2*s23^2 + 18*s13*s23^3 + 4*s23^4))) + 
            p1q^2*(p3q^2*(2*s12^5*(3*s13 + s23) + s13^2*s23^2*(2*s13^2 + 
                  3*s13*s23 + s23^2) + s12^4*(12*s13^2 + 29*s13*s23 + 
                  9*s23^2) + 2*s12^3*(3*s13^3 + 23*s13^2*s23 + 25*s13*s23^2 + 
                  7*s23^3) + s12^2*s23*(21*s13^3 + 67*s13^2*s23 + 
                  49*s13*s23^2 + 7*s23^3) + 2*s12*s13*s23*(s13^3 + 
                  6*s13^2*s23 + 15*s13*s23^2 + 8*s23^3)) + 
              p2q*p3q*(2*s12^5*s23 + s12^4*(-12*s13^2 + 21*s13*s23 + 
                  11*s23^2) + s13^2*s23*(2*s13^3 + 11*s13^2*s23 + 
                  17*s13*s23^2 + 8*s23^3) + s12^3*(-24*s13^3 + 37*s13^2*s23 + 
                  58*s13*s23^2 + 17*s23^3) + s12*s13*s23*(21*s13^3 + 
                  58*s13^2*s23 + 79*s13*s23^2 + 32*s23^3) + s12^2*
                 (-12*s13^4 + 37*s13^3*s23 + 126*s13^2*s23^2 + 79*s13*s23^3 + 
                  8*s23^4)) + p2q^2*(2*s12^4*s23*(s13 + s23) + 3*s12^3*
                 (2*s13^3 + 7*s13^2*s23 + 4*s13*s23^2 + s23^3) + 
                s13^2*s23*(2*s13^3 + 9*s13^2*s23 + 14*s13*s23^2 + 7*s23^3) + 
                s12^2*(12*s13^4 + 46*s13^3*s23 + 67*s13^2*s23^2 + 
                  30*s13*s23^3 + s23^4) + s12*s13*(6*s13^4 + 29*s13^3*s23 + 
                  50*s13^2*s23^2 + 49*s13*s23^3 + 16*s23^4))))*den[-1 + ep])/
          (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*
           s23^2) + (3*(s12 + s13 + s23)*(4*p1q^4*s12*s13*s23^2*
             (s12^2 + 2*s12*s13 + s13^2 + 3*s12*s23 + 3*s13*s23 + 2*s23^2) + 
            2*(p2q + p3q)^2*s12*s13*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
             (p3q*(-2*s12^2 - 2*s12*s13 - 3*s12*s23 + s13*s23) + 
              p2q*(2*s12*s13 + 2*s13^2 - s12*s23 + 3*s13*s23)) - 
            p1q*(p2q + p3q)*s23*(p3q^2*s12*(s12^4 + 2*s12^3*(5*s13 + 2*s23) + 
                s13^2*(3*s13^2 + 8*s13*s23 + 3*s23^2) + s12^2*(20*s13^2 + 
                  28*s13*s23 + 3*s23^2) + 2*s12*s13*(7*s13^2 + 12*s13*s23 + 
                  7*s23^2)) + p2q^2*s13*(3*s12^4 + 2*s12^3*(7*s13 + 4*s23) + 
                s13^2*(s13^2 + 4*s13*s23 + 3*s23^2) + s12^2*(20*s13^2 + 
                  24*s13*s23 + 3*s23^2) + 2*s12*s13*(5*s13^2 + 14*s13*s23 + 
                  7*s23^2)) + p2q*p3q*(s12^5 + s13^3*(s13 + s23)^2 + 
                s12^4*(5*s13 + 2*s23) + s12^3*(10*s13^2 + 20*s13*s23 + 
                  s23^2) + s12*s13^2*(5*s13^2 + 20*s13*s23 + 11*s23^2) + 
                s12^2*s13*(10*s13^2 + 20*s13*s23 + 11*s23^2))) - 
            p1q^3*s23*(p3q*(s12^4*(8*s13 + s23) + 2*s12^3*(6*s13^2 + 
                  13*s13*s23 + 2*s23^2) + s13*s23*(s13^3 + 4*s13^2*s23 + 
                  7*s13*s23^2 + 4*s23^3) + s12^2*(8*s13^3 + 22*s13^2*s23 + 
                  24*s13*s23^2 + 7*s23^3) + 2*s12*(2*s13^4 + 7*s13^3*s23 + 
                  8*s13^2*s23^2 + 7*s13*s23^3 + 2*s23^4)) + 
              p2q*(s12^4*(4*s13 + s23) + 2*s12^3*(4*s13^2 + 7*s13*s23 + 
                  2*s23^2) + s13*s23*(s13^3 + 4*s13^2*s23 + 7*s13*s23^2 + 
                  4*s23^3) + s12^2*(12*s13^3 + 22*s13^2*s23 + 16*s13*s23^2 + 
                  7*s23^3) + 2*s12*(4*s13^4 + 13*s13^3*s23 + 12*s13^2*s23^2 + 
                  7*s13*s23^3 + 2*s23^4))) + p1q^2*
             (p3q^2*(s13^2*s23^2*(s13 + s23)^2 + s12^5*(4*s13 + s23) + 
                s12^4*(8*s13^2 + 16*s13*s23 + 5*s23^2) + s12^2*s23*
                 (8*s13^3 + 44*s13^2*s23 + 42*s13*s23^2 + 7*s23^3) + 
                s12^3*(4*s13^3 + 24*s13^2*s23 + 30*s13*s23^2 + 11*s23^3) + 
                s12*s13*s23*(-s13^3 + 4*s13^2*s23 + 25*s13*s23^2 + 
                  16*s23^3)) + p2q^2*(s12^4*s23*(-s13 + s23) + 2*s12^3*
                 (2*s13^3 + 4*s13^2*s23 + 2*s13*s23^2 + s23^3) + 
                s13^2*s23*(s13^3 + 5*s13^2*s23 + 11*s13*s23^2 + 7*s23^3) + 
                s12^2*(8*s13^4 + 24*s13^3*s23 + 44*s13^2*s23^2 + 
                  25*s13*s23^3 + s23^4) + 2*s12*s13*(2*s13^4 + 8*s13^3*s23 + 
                  15*s13^2*s23^2 + 21*s13*s23^3 + 8*s23^4)) + 
              p2q*p3q*(s12^5*s23 + s12^4*(-8*s13^2 + 7*s13*s23 + 6*s23^2) + 
                s13^2*s23*(s13^3 + 6*s13^2*s23 + 13*s13*s23^2 + 8*s23^3) + 
                s12^3*(-16*s13^3 + 8*s13^2*s23 + 30*s13*s23^2 + 13*s23^3) + 
                s12*s13*s23*(7*s13^3 + 30*s13^2*s23 + 67*s13*s23^2 + 
                  32*s23^3) + s12^2*(-8*s13^4 + 8*s13^3*s23 + 80*s13^2*
                   s23^2 + 67*s13*s23^3 + 8*s23^4))))*den[-1 + ep]^2)/
          (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*
           s23^2) + ((-9*p1q^4*s23^2*(s12^5 + s13^4*(s13 + s23) + 
              s12^4*(17*s13 + s23) + 2*s12^3*s13*(23*s13 + 32*s23) + 
              2*s12^2*s13*(23*s13^2 + 63*s13*s23 + 40*s23^2) + 
              s12*s13*(17*s13^3 + 64*s13^2*s23 + 80*s13*s23^2 + 32*s23^3)) + 
            9*(p2q + p3q)*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
             (p3q^2*(-10*s12*s13^2*s23*(s13 + s23) + s12^4*(24*s13 + s23) - 
                s13^3*s23*(s13 + 2*s23) + 2*s12^3*(24*s13^2 + 25*s13*s23 + 
                  s23^2) + 2*s12^2*s13*(12*s13^2 + 20*s13*s23 + 13*s23^2)) + 
              p2q^2*(s12^4*s23 - s13^3*s23*(s13 + 2*s23) - 2*s12^2*s13*
                 (24*s13^2 + 20*s13*s23 - 5*s23^2) + 2*s12^3*(-12*s13^2 + 
                  5*s13*s23 + s23^2) - 2*s12*s13^2*(12*s13^2 + 25*s13*s23 + 
                  13*s23^2)) + 2*p2q*p3q*(s12 - s13)*(3*s12^3*(4*s13 + s23) + 
                3*s13^2*s23*(s13 + 2*s23) + s12^2*(24*s13^2 + 37*s13*s23 + 
                  6*s23^2) + s12*s13*(12*s13^2 + 37*s13*s23 + 28*s23^2))) + 
            p1q*s23*(p3q^3*(45*s12^6 + 9*s12^5*(59*s13 + 26*s23) + 
                s13^3*s23*(17*s13^2 - 5*s13*s23 - 14*s23^2) + 
                s12^4*(1602*s13^2 + 1921*s13*s23 + 275*s23^2) + 
                2*s12^3*(963*s13^3 + 1756*s13^2*s23 + 878*s13*s23^2 + 
                  47*s23^3) + s12*s13^2*(135*s13^3 + 622*s13^2*s23 + 
                  476*s13*s23^2 + 66*s23^3) + 3*s12^2*s13*(315*s13^3 + 
                  810*s13^2*s23 + 558*s13*s23^2 + 154*s23^3)) + 
              p2q*p3q^2*(162*s12^6 + s12^5*(945*s13 + 393*s23) + 
                s12^4*(2457*s13^2 + 3032*s13*s23 + 253*s23^2) + 
                s13^3*(81*s13^3 + 140*s13^2*s23 - 27*s13*s23^2 - 62*s23^3) + 
                s12^3*(2970*s13^3 + 5582*s13^2*s23 + 2532*s13*s23^2 + 
                  46*s23^3) + 6*s12^2*s13*(270*s13^3 + 738*s13^2*s23 + 
                  449*s13*s23^2 + 101*s23^3) + s12*s13^2*(405*s13^3 + 
                  1625*s13^2*s23 + 1252*s13*s23^2 + 210*s23^3)) + 
              p2q^3*(s12^5*(135*s13 + 17*s23) + s12^4*(945*s13^2 + 
                  622*s13*s23 - 5*s23^2) + 2*s12^3*(963*s13^3 + 1215*s13^2*
                   s23 + 238*s13*s23^2 - 7*s23^3) + 2*s12^2*s13*(801*s13^3 + 
                  1756*s13^2*s23 + 837*s13*s23^2 + 33*s23^3) + 
                s13^3*(45*s13^3 + 234*s13^2*s23 + 275*s13*s23^2 + 94*s23^3) + 
                s12*s13^2*(531*s13^3 + 1921*s13^2*s23 + 1756*s13*s23^2 + 
                  462*s23^3)) + p2q^2*p3q*(81*s12^6 + 5*s12^5*(81*s13 + 
                  28*s23) + s12^4*(1620*s13^2 + 1625*s13*s23 - 27*s23^2) + 
                2*s12^3*(1485*s13^3 + 2214*s13^2*s23 + 626*s13*s23^2 - 
                  31*s23^3) + s13^3*(162*s13^3 + 393*s13^2*s23 + 253*s13*
                   s23^2 + 46*s23^3) + s12^2*s13*(2457*s13^3 + 5582*s13^2*
                   s23 + 2694*s13*s23^2 + 210*s23^3) + s12*s13^2*(945*s13^3 + 
                  3032*s13^2*s23 + 2532*s13*s23^2 + 606*s23^3))) + 
            p1q^3*s23*(p3q*(9*s12^6 + s12^5*(351*s13 + 134*s23) + 
                s12^4*(990*s13^2 + 1989*s13*s23 + 331*s23^2) + 2*s12^3*
                 (585*s13^3 + 1924*s13^2*s23 + 1490*s13*s23^2 + 269*s23^3) + 
                s13*s23*(89*s13^4 + 295*s13^3*s23 + 538*s13^2*s23^2 + 
                  468*s13*s23^3 + 144*s23^4) + s12^2*(729*s13^4 + 3218*s13^3*
                   s23 + 3966*s13^2*s23^2 + 2262*s13*s23^3 + 468*s23^4) + 
                s12*(207*s13^5 + 1314*s13^4*s23 + 2188*s13^3*s23^2 + 
                  1974*s13^2*s23^3 + 936*s13*s23^4 + 144*s23^5)) + 
              p2q*(s12^5*(207*s13 + 89*s23) + s12^4*(729*s13^2 + 1314*s13*
                   s23 + 295*s23^2) + 2*s12^3*(585*s13^3 + 1609*s13^2*s23 + 
                  1094*s13*s23^2 + 269*s23^3) + 2*s12^2*(495*s13^4 + 
                  1924*s13^3*s23 + 1983*s13^2*s23^2 + 987*s13*s23^3 + 
                  234*s23^4) + s13*(9*s13^5 + 134*s13^4*s23 + 331*s13^3*
                   s23^2 + 538*s13^2*s23^3 + 468*s13*s23^4 + 144*s23^5) + 
                s12*(351*s13^5 + 1989*s13^4*s23 + 2980*s13^3*s23^2 + 
                  2262*s13^2*s23^3 + 936*s13*s23^4 + 144*s23^5))) - 
            p1q^2*(p3q^2*(9*s12^6*(24*s13 + 13*s23) + s12^5*(648*s13^2 + 
                  1575*s13*s23 + 392*s23^2) + s13^2*s23^2*(33*s13^3 + 
                  213*s13^2*s23 + 200*s13*s23^2 + 36*s23^3) + 
                s12^4*(648*s13^3 + 3510*s13^2*s23 + 3175*s13*s23^2 + 
                  851*s23^3) + s12^2*s23*(981*s13^4 + 3536*s13^3*s23 + 
                  5568*s13^2*s23^2 + 2760*s13*s23^3 + 252*s23^4) + 
                s12*s13*s23*(135*s13^4 + 478*s13^3*s23 + 1814*s13^2*s23^2 + 
                  1860*s13*s23^3 + 576*s23^4) + s12^3*(216*s13^4 + 
                  2898*s13^3*s23 + 5874*s13^2*s23^2 + 4242*s13*s23^3 + 
                  812*s23^4)) + p2q*p3q*(81*s12^6*s23 + s12^5*(-432*s13^2 + 
                  1062*s13*s23 + 425*s23^2) + s12^4*(-1296*s13^3 + 
                  2223*s13^2*s23 + 3149*s13*s23^2 + 1100*s23^3) + 
                s13^2*s23*(81*s13^4 + 425*s13^3*s23 + 1100*s13^2*s23^2 + 
                  1012*s13*s23^3 + 288*s23^4) + s12^3*(-1296*s13^4 + 
                  2484*s13^3*s23 + 7898*s13^2*s23^2 + 5912*s13*s23^3 + 
                  1012*s23^4) + s12*s13*s23*(1062*s13^4 + 3149*s13^3*s23 + 
                  5912*s13^2*s23^2 + 4620*s13*s23^3 + 1152*s23^4) + 
                s12^2*(-432*s13^5 + 2223*s13^4*s23 + 7898*s13^3*s23^2 + 
                  10776*s13^2*s23^3 + 4620*s13*s23^4 + 288*s23^5)) + 
              p2q^2*(3*s12^5*s23*(45*s13 + 11*s23) + s12^4*(216*s13^3 + 
                  981*s13^2*s23 + 478*s13*s23^2 + 213*s23^3) + 2*s12^3*
                 (324*s13^4 + 1449*s13^3*s23 + 1768*s13^2*s23^2 + 
                  907*s13*s23^3 + 100*s23^4) + s13^2*s23*(117*s13^4 + 
                  392*s13^3*s23 + 851*s13^2*s23^2 + 812*s13*s23^3 + 
                  252*s23^4) + 6*s12^2*(108*s13^5 + 585*s13^4*s23 + 
                  979*s13^3*s23^2 + 928*s13^2*s23^3 + 310*s13*s23^4 + 
                  6*s23^5) + s12*s13*(216*s13^5 + 1575*s13^4*s23 + 
                  3175*s13^3*s23^2 + 4242*s13^2*s23^3 + 2760*s13*s23^4 + 
                  576*s23^5))))*den[-3 + 2*ep])/(24*p1q*(p2q + p3q)*
           (p1q + p2q + p3q)^2*s12*s13*(s12 + s13)^3*s23^2)))*
      Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((ep^2*s12*(10*s12 + s13)*s23)/(72*s13) + 
       (ep*(9*p1q^4*s12*s13*s23*(s13 + s23)*(s12 + s13 + s23) + 
          p3q^4*s12*(10*s12^4 - 107*s12*s13^2*s23 + 10*s12^3*(2*s13 + s23) - 
            2*s12^2*s13*(4*s13 + 35*s23) + s13^2*s23*(-83*s13 + 81*s23)) + 
          p1q*p3q^3*(s12^4*(8*s13 - 30*s23) + s12*s13^2*s23*
             (-140*s13 + 269*s23) + s13^2*s23*(2*s13^2 - 79*s13*s23 - 
              81*s23^2) - s12^3*(38*s13^2 + 203*s13*s23 + 30*s23^2) + 
            s12^2*s13*(8*s13^2 - 147*s13*s23 + 59*s23^2)) + 
          p2q^4*s13*(s12^2*(-s13^2 + 79*s13*s23 + 80*s23^2) + 
            s13^2*(-s13^2 + 81*s13*s23 + 82*s23^2) + 
            s12*s13*(-20*s13^2 + 68*s13*s23 + 169*s23^2)) + 
          p1q^2*p3q^2*(9*s12^4*s13 + 2*s13^2*s23*(2*s13^2 - 79*s13*s23 - 
              81*s23^2) - 3*s12^3*(9*s13^2 + 29*s13*s23 - 10*s23^2) + 
            2*s12*s13*s23*(-10*s13^2 + 159*s13*s23 + 6*s23^2) + 
            6*s12^2*(3*s13^3 + 11*s13^2*s23 + 31*s13*s23^2 + 5*s23^3)) - 
          p1q^3*p3q*(9*s12^3*s13*(s13 + 2*s23) - s12^2*(9*s13^3 + 
              89*s13^2*s23 + 70*s13*s23^2 - 10*s23^3) + 
            s13*s23*(-2*s13^3 + 80*s13^2*s23 + 83*s13*s23^2 + s23^3) + 
            s12*s23*(-44*s13^3 - 132*s13^2*s23 + 3*s13*s23^2 + 10*s23^3)) + 
          p2q^3*s13*(p3q*(3*s12^3*(4*s13 - 23*s23) + s13^2*(-s13^2 + 
                247*s13*s23 + 248*s23^2) + s12^2*(59*s13^2 + 202*s13*s23 + 
                251*s23^2) + s12*s13*(-26*s13^2 + 186*s13*s23 + 619*s23^2)) + 
            p1q*(s12^2*(17*s13^2 + 286*s13*s23 + 269*s23^2) + 
              s12*(-38*s13^3 + 196*s13^2*s23 + 506*s13*s23^2 + 29*s23^3) - 
              s13*(s13^3 - 168*s13^2*s23 - 90*s13*s23^2 + 79*s23^3))) + 
          p2q^2*(p3q^2*(249*s13^3*s23*(s13 + s23) - s12^4*(21*s13 + 10*s23) - 
              2*s12^3*(24*s13^2 + 135*s13*s23 + 5*s23^2) + s12^2*s13*(
                75*s13^2 - 6*s13*s23 + 241*s23^2) + s12*s13^2*(-6*s13^2 + 
                59*s13*s23 + 800*s23^2)) + p1q*p3q*(s12^3*(-25*s13^2 - 
                176*s13*s23 + 20*s23^2) + s12^2*(93*s13^3 + 461*s13^2*s23 + 
                604*s13*s23^2 + 20*s23^3) + s12*s13*(-45*s13^3 + 
                291*s13^2*s23 + 1271*s13*s23^2 + 40*s23^3) - s13^2*(s13^3 - 
                338*s13^2*s23 - 98*s13*s23^2 + 241*s23^3)) + 
            p1q^2*(s12^2*(27*s13^3 + 314*s13^2*s23 + 277*s13*s23^2 - 
                10*s23^3) + s13*s23*(89*s13^3 - 72*s13^2*s23 - 162*s13*
                 s23^2 - s23^3) + s12*(-27*s13^4 + 154*s13^3*s23 + 
                460*s13^2*s23^2 + 26*s13*s23^3 - 10*s23^4))) + 
          p2q*(p3q^3*(10*s12^5 - s12^4*s13 + 83*s13^3*s23*(s13 + s23) + 
              s12*s13^2*s23*(-142*s13 + 431*s23) - s12^3*(68*s13^2 + 
                271*s13*s23 + 10*s23^2) + s12^2*s13*(15*s13^2 - 236*s13*s23 + 
                70*s23^2)) + p1q*p3q^2*(s12^4*(8*s13 - 30*s23) + 
              s13^2*s23*(172*s13^2 - 71*s13*s23 - 243*s23^2) - 
              s12^3*(63*s13^2 + 379*s13*s23 + 10*s23^2) + s12*s13*(-7*s13^3 - 
                45*s13^2*s23 + 1034*s13*s23^2 + 11*s23^3) + s12^2*(84*s13^3 + 
                28*s13^2*s23 + 394*s13*s23^2 + 20*s23^3)) + 
            p1q^3*(s12^2*(9*s13^3 + 116*s13^2*s23 + 97*s13*s23^2 - 
                10*s23^3) + s13*s23*(2*s13^3 - 80*s13^2*s23 - 83*s13*s23^2 - 
                s23^3) + s12*(-9*s13^4 + 35*s13^3*s23 + 141*s13^2*s23^2 + 
                6*s13*s23^3 - 10*s23^4)) + p1q^2*p3q*(-3*s12^3*(12*s13^2 + 
                35*s13*s23 - 10*s23^2) + s13*s23*(93*s13^3 - 230*s13^2*s23 - 
                324*s13*s23^2 - s23^3) + s12^2*(54*s13^3 + 380*s13^2*s23 + 
                454*s13*s23^2 + 20*s23^3) + s12*(-18*s13^4 + 152*s13^3*s23 + 
                787*s13^2*s23^2 + 38*s13*s23^3 - 10*s23^4)))))/
        (144*(p2q + p3q)*(p1q + p2q + p3q)^2*s13^2*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) + 
       (-9*p1q^6*s23^2*(-(s13*s23*(s13 + s23)^2*(2*s13^2 + 9*s13*s23 + 
              5*s23^2)) + s12^2*(72*s13^4 + 108*s13^3*s23 + 65*s13^2*s23^2 + 
             16*s13*s23^3 + 5*s23^4) + s12*(72*s13^5 + 178*s13^4*s23 + 
             162*s13^3*s23^2 + 67*s13^2*s23^3 + 16*s13*s23^4 + 5*s23^5)) + 
         9*(p2q + p3q)^2*s23*(-(p3q^4*s12^2*(5*s12^5 + 15*s12^4*(s13 + s23) + 
              s12^3*(26*s13^2 + 39*s13*s23 + 10*s23^2) + 2*s13^3*(19*s13^2 + 
                30*s13*s23 + 11*s23^2) + s12^2*s13*(65*s13^2 + 84*s13*s23 + 
                19*s23^2) + s12*s13^2*(87*s13^2 + 120*s13*s23 + 49*s23^2))) + 
           p2q^4*s13^3*(s13*(s13 + s23)^2*(11*s13 + 13*s23) + 
             s12^3*(38*s13 + 20*s23) + 3*s12^2*(29*s13^2 + 28*s13*s23 + 5*
                s23^2) + s12*(60*s13^3 + 99*s13^2*s23 + 34*s13*s23^2 - 5*
                s23^3)) + p2q^3*p3q*s13^2*(s12^4*(-23*s13 + 15*s23) + 
             s13^2*(s13 + s23)^2*(23*s13 + 19*s23) + s12^3*(62*s13^2 + 107*
                s13*s23 + 45*s23^2) + s12*s13*(154*s13^3 + 243*s13^2*s23 + 84*
                s13*s23^2 - 5*s23^3) + 2*s12^2*(108*s13^3 + 135*s13^2*s23 + 
               70*s13*s23^2 + 15*s23^3)) + p2q*p3q^3*s12*
            (s12^5*(9*s13 + 5*s23) + s12^4*(-4*s13^2 + 33*s13*s23 + 15*
                s23^2) - 2*s12^3*(76*s13^3 + 20*s13^2*s23 - 24*s13*s23^2 - 5*
                s23^3) + 2*s13^3*(11*s13^3 + 25*s13^2*s23 + 25*s13*s23^2 + 11*
                s23^3) + s12^2*s13*(-234*s13^3 - 145*s13^2*s23 + 22*s13*
                s23^2 + 19*s23^3) + s12*s13^2*(-73*s13^3 - 27*s13^2*s23 + 111*
                s13*s23^2 + 49*s23^3)) + p2q^2*p3q^2*s13*
            (-(s12^5*(19*s13 + 4*s23)) + 2*s13^3*(s13 + s23)^2*
              (8*s13 + 7*s23) - s12^4*(130*s13^2 + 29*s13*s23 + 3*s23^2) + 
             s12^3*(-98*s13^3 + 70*s13^2*s23 + 76*s13*s23^2 + s23^3) + 
             s12*s13^2*(137*s13^3 + 262*s13^2*s23 + 165*s13*s23^2 + 40*
                s23^3) + s12^2*s13*(134*s13^3 + 311*s13^2*s23 + 308*s13*
                s23^2 + 81*s23^3))) + 
         p1q*(p3q^5*s12*(45*s12^6*s23 + s12^5*s23*(31*s13 + 250*s23) + 
             2*s13^3*s23*(252*s13^3 + 511*s13^2*s23 + 581*s13*s23^2 + 158*
                s23^3) + s12^4*(648*s13^3 - 51*s13^2*s23 + 695*s13*s23^2 + 
               635*s23^3) + s12^2*s13*s23*(-608*s13^3 + 1525*s13^2*s23 + 1783*
                s13*s23^2 + 664*s23^3) + s12*s13^2*s23*(135*s13^3 + 3217*
                s13^2*s23 + 2711*s13*s23^2 + 1243*s23^3) + 
             s12^3*(648*s13^4 - 924*s13^3*s23 + 423*s13^2*s23^2 + 1598*s13*
                s23^3 + 430*s23^4)) + p2q^2*p3q^3*(-5*s12^6*(37*s13 - 23*s23)*
              s23 + 2*s12^5*(324*s13^3 + 462*s13^2*s23 + 53*s13*s23^2 + 90*
                s23^3) + s12*s13^2*s23*(10146*s13^4 + 8501*s13^3*s23 - 361*
                s13^2*s23^2 - 3834*s13*s23^3 - 2502*s23^4) + 
             s13^3*s23*(495*s13^4 + 1771*s13^3*s23 + 633*s13^2*s23^2 - 1403*
                s13*s23^3 - 760*s23^4) - s12^4*(3240*s13^4 + 6951*s13^3*s23 - 
               654*s13^2*s23^2 + 278*s13*s23^3 + 525*s23^4) + 
             s12^2*s13*(1944*s13^5 + 12405*s13^4*s23 + 24864*s13^3*s23^2 + 
               12085*s13^2*s23^3 + 1943*s13*s23^4 - 892*s23^5) + 
             s12^3*(-1944*s13^5 + 1174*s13^4*s23 + 17501*s13^3*s23^2 + 3387*
                s13^2*s23^3 - 2001*s13*s23^4 - 590*s23^5)) + 
           p2q^5*s13^2*(s12^3*s23*(1859*s13^2 + 1138*s13*s23 - 235*s23^2) + 
             s12^2*(-648*s13^4 + 2130*s13^3*s23 + 776*s13^2*s23^2 - 1517*s13*
                s23^3 - 325*s23^4) + s13*s23*(392*s13^4 + 1294*s13^3*s23 + 
               959*s13^2*s23^2 - 230*s13*s23^3 - 287*s23^4) - 
             s12*(648*s13^5 - 1311*s13^4*s23 - 1580*s13^3*s23^2 + 1052*s13^2*
                s23^3 + 1005*s13*s23^4 + 170*s23^5)) + 
           p2q*p3q^4*(45*s12^7*s23 + s12^6*s23*(-154*s13 + 365*s23) + 
             s12^5*(1296*s13^3 + 201*s13^2*s23 + 839*s13*s23^2 + 930*s23^3) + 
             s12^2*s13*s23*(3084*s13^4 + 15012*s13^3*s23 + 10097*s13^2*
                s23^2 + 2764*s13*s23^3 - 493*s23^4) + 2*s12*s13^2*s23*
              (1953*s13^4 + 2447*s13^3*s23 + 1556*s13^2*s23^2 - 76*s13*
                s23^3 - 401*s23^4) + 2*s13^3*s23*(72*s13^4 + 218*s13^3*s23 + 
               78*s13^2*s23^2 - 127*s13*s23^3 - 59*s23^4) + 
             s12^4*(-648*s13^4 - 4080*s13^3*s23 + 705*s13^2*s23^2 + 1907*s13*
                s23^3 + 270*s23^4) - s12^3*(1944*s13^5 + 1918*s13^4*s23 - 
               8841*s13^3*s23^2 - 3825*s13^2*s23^3 + 254*s13*s23^4 + 340*
                s23^5)) + p2q^4*p3q*s13*(3*s12^4*s23*(-581*s13^2 - 27*s13*
                s23 + 24*s23^2) + s13^2*s23*(1027*s13^4 + 3595*s13^3*s23 + 
               2419*s13^2*s23^2 - 1175*s13*s23^3 - 1026*s23^4) + 
             s12^3*(1944*s13^4 + 7129*s13^3*s23 + 6724*s13^2*s23^2 + 256*s13*
                s23^3 + 94*s23^4) + s12^2*(648*s13^5 + 11262*s13^4*s23 + 6664*
                s13^3*s23^2 - 2560*s13^2*s23^3 - 461*s13*s23^4 + 22*s23^5) - 
             s12*s13*(1296*s13^5 - 6657*s13^4*s23 - 5398*s13^3*s23^2 + 4618*
                s13^2*s23^3 + 4187*s13*s23^4 + 1148*s23^5)) + 
           p2q^3*p3q^2*(s12^5*s23*(672*s13^2 - 38*s13*s23 - 115*s23^2) + 
             s13^3*s23*(986*s13^4 + 3636*s13^3*s23 + 1937*s13^2*s23^2 - 2094*
                s13*s23^3 - 1381*s23^4) - s12^4*(1944*s13^4 + 5538*s13^3*
                s23 - 291*s13^2*s23^2 + 515*s13*s23^3 + 365*s23^4) + 
             s12^2*s13*(3240*s13^5 + 18588*s13^4*s23 + 18957*s13^3*s23^2 + 
               3656*s13^2*s23^3 + 286*s13*s23^4 - 377*s23^5) + 
             s12^3*(1944*s13^5 + 7754*s13^4*s23 + 15771*s13^3*s23^2 + 1836*
                s13^2*s23^3 - 989*s13*s23^4 - 250*s23^5) - 
             s12*s13^2*(648*s13^5 - 12090*s13^4*s23 - 8447*s13^3*s23^2 + 5877*
                s13^2*s23^3 + 6548*s13*s23^4 + 2678*s23^5))) + 
         p1q^5*s23*(p2q*(9*s12^3*(72*s13^4 + 108*s13^3*s23 + 65*s13^2*s23^2 + 
               16*s13*s23^3 + 5*s23^4) + s12^2*(648*s13^5 - 504*s13^4*s23 - 
               1081*s13^3*s23^2 - 757*s13^2*s23^3 - 155*s13*s23^4 + 25*
                s23^5) + s12*(1296*s13^6 + 630*s13^5*s23 - 1009*s13^4*s23^2 - 
               1858*s13^3*s23^3 - 1618*s13^2*s23^4 - 215*s13*s23^5 + 50*
                s23^6) + s23*(126*s13^6 + 347*s13^5*s23 + 695*s13^4*s23^2 + 
               766*s13^3*s23^3 + 441*s13^2*s23^4 + 219*s13*s23^5 + 70*
                s23^6)) + p3q*(9*s12^3*(144*s13^4 + 288*s13^3*s23 + 195*s13^2*
                s23^2 + 64*s13*s23^3 + 25*s23^4) + s12^2*(648*s13^5 + 1422*
                s13^4*s23 + 2321*s13^3*s23^2 + 1340*s13^2*s23^3 + 547*s13*
                s23^4 + 250*s23^5) + s23*(144*s13^6 + 527*s13^5*s23 + 974*
                s13^4*s23^2 + 811*s13^3*s23^3 + 324*s13^2*s23^4 + 174*s13*
                s23^5 + 70*s23^6) + s12*(648*s13^6 - 342*s13^5*s23 - 577*
                s13^4*s23^2 - 634*s13^3*s23^3 - 1105*s13^2*s23^4 - 125*s13*
                s23^5 + 95*s23^6))) + 
         p1q^2*(-(p3q^4*(9*s12^6*s23*(16*s13 + 25*s23) + 2*s13^3*s23^2*(
                70*s13^3 + 282*s13^2*s23 + 271*s13*s23^2 + 59*s23^3) + 
              s12^5*(-1296*s13^3 - 509*s13^2*s23 + 208*s13*s23^2 + 
                595*s23^3) + s12^2*s13*s23*(-383*s13^4 - 5047*s13^3*s23 - 
                233*s13^2*s23^2 + 993*s13*s23^3 + 966*s23^4) + 
              s12*s13^2*s23*(-1296*s13^4 + 706*s13^3*s23 + 2035*s13^2*s23^2 + 
                2342*s13*s23^3 + 1163*s23^4) + s12^4*(-648*s13^4 + 
                1515*s13^3*s23 - 805*s13^2*s23^2 + 1285*s13*s23^3 + 
                1190*s23^4) + s12^3*(648*s13^5 - 159*s13^4*s23 - 
                4493*s13^3*s23^2 + 269*s13^2*s23^3 + 2862*s13*s23^4 + 
                820*s23^5))) - p2q^4*s13*(s12^3*(-3974*s13^3*s23 - 3134*s13^2*
                s23^2 + 228*s13*s23^3 + 36*s23^4) + s13*s23*(-212*s13^5 - 307*
                s13^4*s23 + 1998*s13^3*s23^2 + 3266*s13^2*s23^3 + 1034*s13*
                s23^4 - 139*s23^5) + s12^2*(1944*s13^5 - 1572*s13^4*s23 + 
               3022*s13^3*s23^2 + 5576*s13^2*s23^3 + 725*s13*s23^4 + 67*
                s23^5) + s12*(1944*s13^6 - 1050*s13^5*s23 + 1925*s13^4*
                s23^2 + 6577*s13^3*s23^3 + 2948*s13^2*s23^4 + 673*s13*s23^5 + 
               31*s23^6)) + p2q^3*p3q*(s12^4*s23*(-3592*s13^3 - 1678*s13^2*
                s23 - 207*s13*s23^2 + 95*s23^3) + s12^3*(5184*s13^5 + 16729*
                s13^4*s23 + 14053*s13^3*s23^2 - 1254*s13^2*s23^3 + 275*s13*
                s23^4 + 325*s23^5) + s13^2*s23*(541*s13^5 + 1428*s13^4*s23 - 
               4118*s13^3*s23^2 - 7449*s13^2*s23^3 - 1695*s13*s23^4 + 749*
                s23^5) - s12*s13*(2592*s13^6 - 10955*s13^5*s23 + 987*s13^4*
                s23^2 + 17630*s13^3*s23^3 + 8876*s13^2*s23^4 + 2463*s13*
                s23^5 - 227*s23^6) + s12^2*(2592*s13^6 + 17775*s13^5*s23 + 
               3452*s13^4*s23^2 - 12991*s13^3*s23^3 - 1141*s13^2*s23^4 + 844*
                s13*s23^5 + 230*s23^6)) - p2q*p3q^3*
            (36*s12^6*s23*(4*s13 + 5*s23) - s12^5*(1296*s13^3 + 1567*s13^2*
                s23 + 677*s13*s23^2 - 580*s23^3) + s13^2*s23^2*
              (-34*s13^4 + 2027*s13^3*s23 + 2633*s13^2*s23^2 + 211*s13*
                s23^3 - 361*s23^4) + s12^4*(3888*s13^4 + 9871*s13^3*s23 - 
               1104*s13^2*s23^2 + 1088*s13*s23^3 + 1490*s23^4) + 
             s12*s13*s23*(-7064*s13^5 + 4424*s13^4*s23 + 12242*s13^3*s23^2 + 
               8669*s13^2*s23^3 + 3356*s13*s23^4 - 473*s23^5) + 
             s12^3*(3888*s13^5 + 2619*s13^4*s23 - 12041*s13^3*s23^2 + 634*
                s13^2*s23^3 + 3510*s13*s23^4 + 610*s23^5) - 
             s12^2*(1296*s13^6 + 3067*s13^5*s23 + 9136*s13^4*s23^2 - 4669*
                s13^3*s23^3 - 978*s13^2*s23^4 + 222*s13*s23^5 + 480*s23^6)) + 
           p2q^2*p3q^2*(s12^5*s23*(1058*s13^2 + 714*s13*s23 - 75*s23^2) - 
             s12^4*(4536*s13^4 + 11948*s13^3*s23 + 1577*s13^2*s23^2 + 262*s13*
                s23^3 + 250*s23^4) + s12^3*(1944*s13^5 + 9977*s13^4*s23 + 
               18485*s13^3*s23^2 - 1535*s13^2*s23^3 - 418*s13*s23^4 + 535*
                s23^5) + s13^2*s23*(329*s13^5 + 1331*s13^4*s23 - 3511*s13^3*
                s23^2 - 6238*s13^2*s23^3 - 754*s13*s23^4 + 971*s23^5) - 
             s12*s13*(648*s13^6 - 15673*s13^5*s23 + 2627*s13^4*s23^2 + 21026*
                s13^3*s23^3 + 12174*s13^2*s23^4 + 3983*s13*s23^5 - 731*
                s23^6) + s12^2*(5832*s13^6 + 18887*s13^5*s23 + 10770*s13^4*
                s23^2 - 12137*s13^3*s23^3 - 392*s13^2*s23^4 + 2099*s13*
                s23^5 + 710*s23^6))) + 
         p1q^4*(-(p3q^2*(9*s12^4*(72*s13^4 + 252*s13^3*s23 + 195*s13^2*
                 s23^2 + 96*s13*s23^3 + 50*s23^4) + s12^2*s23^2*(511*s13^4 - 
                414*s13^3*s23 - 2400*s13^2*s23^2 + 185*s13*s23^3 + 
                515*s23^4) - s13*s23^2*(4*s13^5 - 65*s13^4*s23 + 
                963*s13^3*s23^2 + 1488*s13^2*s23^3 + 305*s13*s23^4 - 
                151*s23^5) + s12^3*(648*s13^5 - 828*s13^4*s23 - 1108*s13^3*
                 s23^2 + 362*s13^2*s23^3 + 808*s13*s23^4 + 595*s23^5) + 
              s12*s23*(-1440*s13^6 + 2614*s13^5*s23 + 2301*s13^4*s23^2 - 
                863*s13^3*s23^3 + 773*s13^2*s23^4 + 1067*s13*s23^5 + 
                370*s23^6))) + p2q*p3q*(-18*s12^4*s23*(54*s13^3 + 65*s13^2*
                s23 + 24*s13*s23^2 + 10*s23^3) + s12^3*(1296*s13^5 + 6984*
                s13^4*s23 + 7634*s13^3*s23^2 + 3041*s13^2*s23^3 + 679*s13*
                s23^4 - 170*s23^5) + s12^2*(1296*s13^6 + 4356*s13^5*s23 + 688*
                s13^4*s23^2 + 1833*s13^3*s23^3 + 4822*s13^2*s23^4 + 453*s13*
                s23^5 - 405*s23^6) - s12*s23*(-5328*s13^6 + 1070*s13^5*s23 + 
               1317*s13^4*s23^2 - 3325*s13^3*s23^3 + 1298*s13^2*s23^4 + 1349*
                s13*s23^5 + 345*s23^6) + s23*(-144*s13^7 - 298*s13^6*s23 - 97*
                s13^5*s23^2 + 2744*s13^4*s23^3 + 3989*s13^3*s23^4 + 1216*
                s13^2*s23^5 - 16*s13*s23^6 + 70*s23^7)) + 
           p2q^2*(2*s12^3*s23*(1134*s13^4 + 1481*s13^3*s23 + 752*s13^2*
                s23^2 + 172*s13*s23^3 + 10*s23^4) + s12^2*(-648*s13^6 + 468*
                s13^5*s23 - 2167*s13^4*s23^2 - 1074*s13^3*s23^3 + 1009*s13^2*
                s23^4 + 71*s13*s23^5 - 25*s23^6) + s12*(-648*s13^7 + 2592*
                s13^6*s23 + 1220*s13^5*s23^2 + 1191*s13^4*s23^3 + 2201*s13^3*
                s23^4 - 660*s13^2*s23^5 - 273*s13*s23^6 + 25*s23^7) + 
             s23*(-144*s13^7 - 239*s13^6*s23 - 95*s13^5*s23^2 + 1412*s13^4*
                s23^3 + 2204*s13^3*s23^4 + 857*s13^2*s23^5 + 135*s13*s23^6 + 
               70*s23^7))) + p1q^3*(p3q^3*(9*s12^5*(72*s13^3 + 65*s13^2*s23 + 
               64*s13*s23^2 + 50*s23^3) + s13^2*s23^3*(-509*s13^3 - 159*s13^2*
                s23 + 711*s13*s23^2 + 361*s23^3) + s12^4*(-648*s13^4 - 3267*
                s13^3*s23 - 884*s13^2*s23^2 + 582*s13*s23^3 + 780*s23^4) + 
             s12*s13*s23*(1944*s13^5 - 3070*s13^4*s23 - 5242*s13^3*s23^2 - 
               2661*s13^2*s23^3 - 339*s13*s23^4 + 624*s23^5) + 
             s12^2*s23*(207*s13^5 + 440*s13^4*s23 - 5243*s13^3*s23^2 + 529*
                s13^2*s23^3 + 2508*s13*s23^4 + 780*s23^5) + 
             s12^3*(-1296*s13^5 + 243*s13^4*s23 + 862*s13^3*s23^2 - 2220*
                s13^2*s23^3 + 990*s13*s23^4 + 1110*s23^5)) + 
           p2q*p3q^2*(9*s12^5*s23*(65*s13^2 + 48*s13*s23 + 30*s23^2) - 
             s12^4*(3240*s13^4 + 7929*s13^3*s23 + 3851*s13^2*s23^2 + 1047*s13*
                s23^3 - 450*s23^4) - s13*s23^2*(240*s13^5 + 3200*s13^4*s23 + 
               2110*s13^3*s23^2 - 2277*s13^2*s23^3 - 1276*s13*s23^4 + 151*
                s23^5) + s12^3*(-648*s13^5 + 7353*s13^4*s23 + 8520*s13^3*
                s23^2 - 4509*s13^2*s23^3 + 200*s13*s23^4 + 1140*s23^5) - 
             s12*s23*(-9738*s13^6 + 5822*s13^5*s23 + 14662*s13^4*s23^2 + 5463*
                s13^3*s23^3 + 2191*s13^2*s23^4 + 42*s13*s23^5 + 300*s23^6) + 
             s12^2*(2592*s13^6 + 8109*s13^5*s23 + 1713*s13^4*s23^2 - 11972*
                s13^3*s23^3 + 1290*s13^2*s23^4 + 3138*s13*s23^5 + 660*
                s23^6)) + p2q^3*(s12^3*s23*(4077*s13^4 + 4166*s13^3*s23 + 926*
                s13^2*s23^2 + 164*s13*s23^3 - 25*s23^4) + 
             s12^2*(-1944*s13^6 + 45*s13^5*s23 - 5353*s13^4*s23^2 - 4889*
                s13^3*s23^3 + 781*s13^2*s23^4 + 15*s13*s23^5 - 95*s23^6) - 
             s13*s23*(225*s13^6 + 1037*s13^5*s23 + 3048*s13^4*s23^2 + 2085*
                s13^3*s23^3 - 916*s13^2*s23^4 - 726*s13*s23^5 + 39*s23^6) - 
             s12*(1944*s13^7 - 1575*s13^6*s23 + 2672*s13^5*s23^2 + 4621*s13^4*
                s23^3 - 613*s13^3*s23^4 + 148*s13^2*s23^5 + 233*s13*s23^6 + 
               70*s23^7)) - p2q^2*p3q*(3*s12^4*s23*(906*s13^3 + 854*s13^2*
                s23 + 291*s13*s23^2 + 5*s23^3) - s12^3*(4536*s13^5 + 17019*
                s13^4*s23 + 14002*s13^3*s23^2 - 436*s13^2*s23^3 + 58*s13*
                s23^4 + 140*s23^5) + s13*s23*(225*s13^6 + 1394*s13^5*s23 + 
               5946*s13^4*s23^2 + 4099*s13^3*s23^3 - 2509*s13^2*s23^4 - 1641*
                s13*s23^5 + 190*s23^6) + s12^2*(-3240*s13^6 - 13779*s13^5*
                s23 + 480*s13^4*s23^2 + 10871*s13^3*s23^3 - 1938*s13^2*
                s23^4 - 762*s13*s23^5 + 215*s23^6) + s12*(1296*s13^7 - 11313*
                s13^6*s23 + 3858*s13^5*s23^2 + 13852*s13^4*s23^3 + 2225*s13^3*
                s23^4 + 1955*s13^2*s23^5 + 899*s13*s23^6 + 370*s23^7))))/
        (288*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s13^3*s23*
         (p3q^2*s12*(s12 + s13) - p2q^2*(s12 + s13)*(s13 + s23) + 
          p1q^2*s23*(s13 + s23) + p2q*(p3q*(s12 + s13)*(s12 - s13 - s23) - 
            p1q*(s12 + s13 - s23)*(s13 + s23)) - p1q*p3q*(s13*(s13 + s23) + 
            s12*(s13 + 2*s23)))) + 
       ((72*p1q^6*s13*s23^3*(s13 + s23)*(s12 + s13 + s23) - 
          p1q^5*s23^2*(p2q*(5*(s13 + s23)^2*(45*s13^2 - 10*s13*s23 - 
                2*s23^2) + s12^2*(133*s13^2 + 82*s13*s23 + 30*s23^2) + 
              2*s12*(35*s13^3 + 71*s13^2*s23 + 46*s13*s23^2 + 10*s23^3)) + 
            2*p3q*((s13 + s23)^2*(36*s13^2 + 47*s13*s23 - 5*s23^2) + 
              s12^2*(53*s13^2 + 104*s13*s23 + 15*s23^2) + s12*(-55*s13^3 + 
                116*s13^2*s23 + 181*s13*s23^2 + 10*s23^3))) + 
          9*(p2q + p3q)^2*s13*(8*p3q^4*s12^3*(s12 + s13)*(s12 + s13 + s23) + 
            8*p2q^4*s13*(s12 + s13)*(s12 + s23)*(s13 + s23)*
             (s12 + s13 + s23) - p2q*p3q^3*s12^2*(2*s12^3 + s12^2*(47*s13 + 
                38*s23) + 4*s12*(22*s13^2 + 27*s13*s23 + 9*s23^2) + 
              s13*(43*s13^2 + 70*s13*s23 + 27*s23^2)) - 
            p2q^3*p3q*(s13^2*s23*(s13 + s23)^2 + 8*s12^4*(2*s13 + s23) + 
              s12^3*(7*s13^2 + 32*s13*s23 + 16*s23^2) + s12^2*(-34*s13^3 + 
                9*s13^2*s23 + 34*s13*s23^2 + 8*s23^3) + s12*s13*(-25*s13^3 - 
                14*s13^2*s23 + 29*s13*s23^2 + 18*s23^3)) + 
            p2q^2*p3q^2*s12*(8*s12^4 + s12^3*(-7*s13 + 18*s23) + 
              s12^2*(-3*s13^2 + 69*s13*s23 + 38*s23^2) + s13*(35*s13^3 + 
                81*s13^2*s23 + 65*s13*s23^2 + 19*s23^3) + s12*(47*s13^3 + 
                132*s13^2*s23 + 121*s13*s23^2 + 28*s23^3))) + 
          p1q^4*s23*(p2q*p3q*(20*s12^3*(16*s13^2 + 16*s13*s23 + 7*s23^2) + 
              (s13 + s23)^2*(72*s13^3 + 221*s13^2*s23 + 160*s13*s23^2 + 
                10*s23^3) + s12^2*(-638*s13^3 - 57*s13^2*s23 + 928*s13*
                 s23^2 + 50*s23^3) + s12*(-886*s13^4 + 942*s13^3*s23 + 
                2136*s13^2*s23^2 + 228*s13*s23^3 - 80*s23^4)) + 
            2*p3q^2*(s23*(s13 + s23)^2*(47*s13^2 + 66*s13*s23 - 5*s23^2) + 
              s12^3*(8*s13^2 + 101*s13*s23 + 55*s23^2) + s12^2*(-119*s13^3 + 
                150*s13^2*s23 + 474*s13*s23^2 + 25*s23^3) + s12*(-127*s13^4 + 
                537*s13^3*s23 + 968*s13^2*s23^2 + 269*s13*s23^3 - 
                35*s23^4)) + p2q^2*(s12^3*(61*s13^2 + 10*s13*s23 + 
                30*s23^2) + s12^2*s13*(-157*s13^2 - 393*s13*s23 + 88*s23^2) + 
              (s13 + s23)^2*(153*s13^3 - 179*s13^2*s23 + 100*s13*s23^2 + 
                20*s23^3) + s12*(-65*s13^4 + 444*s13^3*s23 + 497*s13^2*
                 s23^2 - 22*s13*s23^3 - 10*s23^4))) + p1q*(p2q + p3q)*
           (-2*p3q^4*s12^2*(10*s12^4 + s12^3*(147*s13 - 5*s23) + 
              4*s12^2*(75*s13^2 + 69*s13*s23 - 5*s23^2) + s13*(36*s13^3 + 
                25*s13^2*s23 + 148*s13*s23^2 - 5*s23^3) + s12*(199*s13^3 + 
                306*s13^2*s23 + 164*s13*s23^2 - 5*s23^3)) + 
            p2q^2*p3q^2*(s13^2*s23*(s13 + s23)^2*(137*s13 + 3*s23) + 
              2*s12^5*(66*s13 + 5*s23) - 2*s12^4*(147*s13^2 + 105*s13*s23 + 
                10*s23^2) + s12^3*(-297*s13^3 + 1076*s13^2*s23 + 
                190*s13*s23^2 - 30*s23^3) + s12^2*s13*(816*s13^3 + 
                1771*s13^2*s23 + 951*s13*s23^2 + 482*s23^3) + 
              s12*s13*(687*s13^4 + 612*s13^3*s23 + 181*s13^2*s23^2 - 
                74*s13*s23^3 - 330*s23^4)) + p2q^4*s13*
             (s13*(s13 + s23)^2*(164*s13^2 + 295*s13*s23 - 134*s23^2) + 
              s12^3*(245*s13^2 + 224*s13*s23 - 102*s23^2) + 
              s12^2*(654*s13^3 + 873*s13^2*s23 + 14*s13*s23^2 - 124*s23^3) + 
              s12*(573*s13^4 + 1272*s13^3*s23 + 745*s13^2*s23^2 - 
                16*s13*s23^3 - 62*s23^4)) + p2q*p3q^3*s12*(-20*s12^5 + 
              20*s12^4*s23 + s12^3*(111*s13^2 - 204*s13*s23 + 10*s23^2) + 
              2*s12^2*(269*s13^3 + 726*s13^2*s23 + 197*s13*s23^2 - 
                20*s23^3) + s12*(843*s13^4 + 2318*s13^3*s23 + 1553*s13^2*
                 s23^2 + 828*s13*s23^3 - 10*s23^4) + 2*s13*(198*s13^4 + 
                321*s13^3*s23 + 319*s13^2*s23^2 + 191*s13*s23^3 - 5*s23^4)) + 
            p2q^3*p3q*(s13^2*(s13 + s23)^2*(164*s13^2 + 270*s13*s23 - 
                131*s23^2) + s12^4*(-357*s13^2 - 72*s13*s23 + 10*s23^2) + 
              4*s12^3*(-4*s13^3 + 133*s13^2*s23 + 44*s13*s23^2 + 5*s23^3) + 
              2*s12*s13*(513*s13^4 + 621*s13^3*s23 + 225*s13^2*s23^2 + 
                88*s13*s23^3 - 29*s23^4) + s12^2*(1203*s13^4 + 1248*s13^3*
                 s23 + 412*s13^2*s23^2 + 350*s13*s23^3 + 10*s23^4))) + 
          p1q^2*(2*p3q^4*s12*(s12^4*(s13 + 45*s23) + s12^3*(129*s13^2 + 
                514*s13*s23 - 5*s23^2) + s12^2*(255*s13^3 + 1323*s13^2*s23 + 
                639*s13*s23^2 - 65*s23^3) + s13*s23*(-47*s13^3 + 
                136*s13^2*s23 + 173*s13*s23^2 - 10*s23^3) + s12*(127*s13^4 + 
                807*s13^3*s23 + 555*s13^2*s23^2 + 276*s13*s23^3 - 
                15*s23^4)) + p2q^4*(s12^3*(398*s13^3 + 501*s13^2*s23 - 
                150*s13*s23^2 - 10*s23^3) + s13*(s13 + s23)^2*(164*s13^3 + 
                35*s13^2*s23 - 489*s13*s23^2 + 52*s23^3) + s12^2*(960*s13^4 + 
                897*s13^3*s23 - 519*s13^2*s23^2 - 152*s13*s23^3 - 20*s23^4) + 
              s12*(726*s13^5 + 759*s13^4*s23 - 174*s13^3*s23^2 - 
                307*s13^2*s23^3 - 110*s13*s23^4 - 10*s23^5)) + 
            p2q^2*p3q^2*(2*s12^5*(82*s13 + 35*s23) + s12^4*(-947*s13^2 + 
                178*s13*s23 - 70*s23^2) + s12^3*(-961*s13^3 + 2634*s13^2*
                 s23 + 174*s13*s23^2 - 20*s23^3) + s13*(s13 + s23)^2*(
                164*s13^3 + 95*s13^2*s23 - 609*s13*s23^2 + 88*s23^3) + 
              s12^2*(1739*s13^4 + 1819*s13^3*s23 - 2478*s13^2*s23^2 - 
                16*s13*s23^3 + 130*s23^4) + s12*(1753*s13^5 - 284*s13^4*s23 - 
                2383*s13^3*s23^2 - 1724*s13^2*s23^3 - 1368*s13*s23^4 + 
                10*s23^5)) + p2q*p3q^3*(2*s12^5*(83*s13 + 80*s23) + 
              s12^4*(-127*s13^2 + 1302*s13*s23 - 50*s23^2) + 
              s13*s23*(s13 + s23)^2*(146*s13^2 - 139*s13*s23 + 10*s23^2) - 
              2*s12^3*(261*s13^3 - 1930*s13^2*s23 - 711*s13*s23^2 + 
                80*s23^3) + s12^2*(s13^4 + 1594*s13^3*s23 - 354*s13^2*s23^2 + 
                602*s13*s23^3 + 70*s23^4) + s12*(230*s13^5 - 978*s13^4*s23 - 
                926*s13^3*s23^2 - 452*s13^2*s23^3 - 714*s13*s23^4 + 
                20*s23^5)) - p2q^3*p3q*(s12^4*(562*s13^2 + 258*s13*s23 + 
                30*s23^2) + s12^3*s13*(-469*s13^2 - 1354*s13*s23 + 
                444*s23^2) - s13*(s13 + s23)^2*(328*s13^3 - 97*s13^2*s23 - 
                959*s13*s23^2 + 130*s23^3) + s12^2*(-2952*s13^4 - 
                2007*s13^3*s23 + 2343*s13^2*s23^2 + 380*s13*s23^3 - 
                10*s23^4) + s12*(-2249*s13^5 - 954*s13^4*s23 + 2007*s13^3*
                 s23^2 + 1476*s13^2*s23^3 + 784*s13*s23^4 + 20*s23^5))) + 
          p1q^3*(2*p3q^3*(-(s13*(71*s13 - 5*s23)*s23^2*(s13 + s23)^2) + 
              s12^4*(9*s13^2 - 34*s13*s23 - 75*s23^2) + s12^3*(18*s13^3 - 
                235*s13^2*s23 - 696*s13*s23^2 - 15*s23^3) - 
              s12*s23*(482*s13^4 + 758*s13^3*s23 + 495*s13^2*s23^2 + 
                204*s13*s23^3 - 15*s23^4) + s12^2*(9*s13^4 - 683*s13^3*s23 - 
                1866*s13^2*s23^2 - 631*s13*s23^3 + 75*s23^4)) + 
            p2q^3*(s23*(s13 + s23)^2*(-35*s13^3 - 309*s13^2*s23 + 
                174*s13*s23^2 + 10*s23^3) + s12^3*(225*s13^3 + 410*s13^2*
                 s23 - 38*s13*s23^2 + 20*s23^3) + s12^2*(450*s13^4 + 
                155*s13^3*s23 - 649*s13^2*s23^2 + 142*s13*s23^3 + 10*s23^4) + 
              s12*s13*(225*s13^4 - 290*s13^3*s23 - 117*s13^2*s23^2 + 
                492*s13*s23^3 + 94*s23^4)) - p2q*p3q^2*
             (s12^4*(207*s13^2 + 404*s13*s23 + 230*s23^2) - 
              2*s12^3*(108*s13^3 + 153*s13^2*s23 - 922*s13*s23^2 - 5*s23^3) + 
              s23*(s13 + s23)^2*(258*s13^3 + 387*s13^2*s23 - 220*s13*s23^2 + 
                10*s23^3) + s12^2*(-1053*s13^4 + 1134*s13^3*s23 + 
                5392*s13^2*s23^2 + 1090*s13*s23^3 - 180*s23^4) + 
              s12*(-630*s13^5 + 2102*s13^4*s23 + 3034*s13^3*s23^2 + 
                902*s13^2*s23^3 + 650*s13*s23^4 + 50*s23^5)) - 
            p2q^2*p3q*(s13*s23*(s13 + s23)^2*(455*s13^2 + 401*s13*s23 - 
                384*s23^2) + s12^4*(225*s13^2 + 174*s13*s23 + 80*s23^2) - 
              s12^3*(405*s13^3 + 862*s13^2*s23 - 418*s13*s23^2 + 40*s23^3) + 
              s12^2*(-1485*s13^4 + 909*s13^3*s23 + 3470*s13^2*s23^2 - 
                134*s13*s23^3 - 40*s23^4) + s12*(-855*s13^5 + 2400*s13^4*
                 s23 + 3039*s13^3*s23^2 - 58*s13^2*s23^3 + 238*s13*s23^4 + 
                80*s23^5))))*den[-1 + ep])/(72*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s13^2*(p3q^2*s12*(s12 + s13) - 
          p2q^2*(s12 + s13)*(s13 + s23) + p1q^2*s23*(s13 + s23) + 
          p2q*(p3q*(s12 + s13)*(s12 - s13 - s23) - p1q*(s12 + s13 - s23)*
             (s13 + s23)) - p1q*p3q*(s13*(s13 + s23) + s12*(s13 + 2*s23)))) - 
       ((s12 + s13 + s23)*(-9*p1q^4*s23^2*(43*s12*s13 - 23*s13^2 + 
            15*s12*s23 + 5*s13*s23) - 9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (p2q*s13*(28*s12 + 5*s13 + 33*s23) + p3q*(15*s12^2 - 
              23*s13*(s13 + s23) + 15*s12*(s13 + 2*s23))) + 
          p1q^3*s23*(p2q*(-414*s13^3 + 15*s13^2*s23 + 492*s13*s23^2 + 
              250*s23^3 + s12*(774*s13^2 + 105*s13*s23 + 115*s23^2)) + 
            p3q*(9*s12^2*(86*s13 + 45*s23) + s12*(-414*s13^2 - 192*s13*s23 + 
                115*s23^2) + s23*(-327*s13^2 + 492*s13*s23 + 250*s23^2))) + 
          p1q*(p2q^3*s13^2*(-165*s12*s13 - 75*s13^2 + 619*s12*s23 + 
              582*s13*s23 + 844*s23^2) + p2q^2*p3q*s13*
             (s12^2*(465*s13 + 544*s23) + s13*(-327*s13^2 + 168*s13*s23 + 
                430*s23^2) + s12*(-132*s13^2 - 5*s13*s23 + 634*s23^2)) + 
            p3q^3*s12*(135*s12^3 - 414*s13*s23*(s13 + s23) + 
              s12^2*(-282*s13 + 385*s23) + s12*(-327*s13^2 + 762*s13*s23 + 
                790*s23^2)) + p2q*p3q^2*(-5*s12^3*(87*s13 - 77*s23) - 
              414*s13^2*s23*(s13 + s23) + 2*s12*s13*(327*s13^2 - 
                519*s13*s23 + 110*s23^2) + s12^2*(489*s13^2 + 1306*s13*s23 + 
                790*s23^2))) - p1q^2*(p2q^2*s13*(-207*s13^3 - 105*s13^2*s23 + 
              1029*s13*s23^2 + 797*s23^3 + s12*(387*s13^2 - 195*s13*s23 + 
                482*s23^2)) + p3q^2*(-207*s13*s23^2*(s13 + s23) + 
              9*s12^3*(43*s13 + 45*s23) + s12^2*(-207*s13^2 - 519*s13*s23 + 
                365*s23^2) + s12*s23*(-654*s13^2 + 1119*s13*s23 + 
                770*s23^2)) + p2q*p3q*(2*s13*s23*(-327*s13^2 + 411*s13*s23 + 
                295*s23^2) + s12^2*(-774*s13^2 - 330*s13*s23 + 365*s23^2) + 
              s12*(414*s13^3 - 804*s13^2*s23 + 1601*s13*s23^2 + 770*s23^3))))*
         den[-1 + 2*ep])/(288*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s13^3))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]] + 
     (-1/16*(ep*(p1q^4*s23^2*(s12^3*s23 + s13*s23*(s13^2 - s13*s23 - 2*
                s23^2) + s12*s23*(3*s13^2 + 2*s13*s23 - 2*s23^2) + 
             s12^2*(4*s13^2 + 3*s13*s23 - s23^2)) + p3q^4*s12*
            (s12^5 + 2*s12^2*s13*(s13 - 2*s23)*s23 + s13*s23^3*
              (-3*s13 + s23) + s12^4*(2*s13 + 3*s23) + s12*s23^2*
              (-s13^2 - 7*s13*s23 + s23^2) + s12^3*(s13^2 + 5*s13*s23 + s23^
                2)) - p2q^3*p3q*(s13^2*s23*(2*s13^3 + 9*s13^2*s23 + 3*s13*
                s23^2 - 4*s23^3) + s12^3*(4*s13^3 + 6*s13^2*s23 - 2*s13*
                s23^2 - 3*s23^3) + s12*s13*(4*s13^4 + 14*s13^3*s23 + 28*s13^2*
                s23^2 + 14*s13*s23^3 - 11*s23^4) + s12^2*(8*s13^4 + 18*s13^3*
                s23 + s13^2*s23^2 - 3*s23^4)) + p2q^4*s13*
            (s12^2*(s13^3 + 2*s13^2*s23 - s13*s23^2 - 3*s23^3) + 
             s13*(s13^4 + 3*s13^3*s23 + s13^2*s23^2 + s23^4) + 
             s12*(2*s13^4 + 5*s13^3*s23 - 4*s13^2*s23^2 - 7*s13*s23^3 + s23^
                4)) + p2q^2*p3q^2*(s12^4*(6*s13^2 + 6*s13*s23 - s23^2) + 
             s13^2*s23^2*(-s13^2 + 7*s13*s23 + 8*s23^2) + 
             s12^3*(12*s13^3 + 24*s13^2*s23 + 14*s13*s23^2 + 7*s23^3) + 
             s12*s13*s23*(6*s13^3 + 14*s13^2*s23 + 17*s13*s23^2 + 24*s23^3) + 
             s12^2*(6*s13^4 + 24*s13^3*s23 + 54*s13^2*s23^2 + 17*s13*s23^3 + 
               8*s23^4)) - p2q*p3q^3*(-3*s13^2*s23^3*(s13 + s23) + 
             2*s12^5*(2*s13 + s23) + s12^4*(8*s13^2 + 14*s13*s23 + 9*s23^2) + 
             s12^2*s23*(6*s13^3 + s13^2*s23 + 14*s13*s23^2 - 4*s23^3) + 
             s12^3*(4*s13^3 + 18*s13^2*s23 + 28*s13*s23^2 + 3*s23^3) - 
             s12*(2*s13^3*s23^2 + 11*s13*s23^4)) + p1q^3*s23*
            (p3q*(s12^4*s13 - 2*s12^3*(s13 - 4*s23)*s23 + 3*s13*s23^2*
                (s13^2 - s13*s23 - 2*s23^2) - s12*s23*(s13^3 - 7*s13^2*s23 - 
                 11*s13*s23^2 + 4*s23^3) + s12^2*(-s13^3 + 11*s13^2*s23 + 
                 10*s13*s23^2 + 4*s23^3)) + p2q*(-(s12^3*(s13^2 + s13*s23 - 
                  3*s23^2)) + s12^2*s23*(11*s13^2 + 7*s13*s23 - 3*s23^2) + 4*
                s13*s23^2*(2*s13^2 + s13*s23 - s23^2) + s12*(s13^4 - 
                 2*s13^3*s23 + 10*s13^2*s23^2 + 11*s13*s23^3 - 6*s23^4))) + 
           p1q*(p3q^3*(s12^6 + s12^5*(s13 + s23) + s13*s23^3*(2*s13^2 + 
                 s13*s23 - s23^2) - s12*s23^3*(2*s13^2 - 10*s13*s23 + 
                 s23^2) - s12^4*(s13^2 + 8*s23^2) + s12^2*s23*(-2*s13^3 - 
                 2*s13^2*s23 - 16*s13*s23^2 + 3*s23^3) - s12^3*(s13^3 + 
                 3*s13^2*s23 + 24*s13*s23^2 + 4*s23^3)) + 
             p2q*p3q^2*(-(s12^5*(3*s13 + 2*s23)) + 2*s13*s23^3*(7*s13^2 + 
                 5*s13*s23 - 2*s23^2) - s12^4*(3*s13^2 + 5*s13*s23 + 
                 8*s23^2) + s12^3*(3*s13^3 - 14*s13*s23^2 + 15*s23^3) + s12*
                s23*(4*s13^4 + 10*s13^3*s23 + 23*s13^2*s23^2 + 45*s13*s23^3 - 
                 2*s23^4) + s12^2*(3*s13^4 + 7*s13^3*s23 + 46*s13^2*s23^2 + 
                 16*s13*s23^3 + 19*s23^4)) - p2q^3*(s12^3*(s13^3 + 
                 2*s13^2*s23 - 2*s23^3) + s12^2*(s13^4 + 3*s13^3*s23 + 
                 2*s13^2*s23^2 + 2*s13*s23^3 - s23^4) + s12*(-s13^5 + 
                 24*s13^3*s23^2 + 16*s13^2*s23^3 - 10*s13*s23^4 + s23^5) + 
               s13*(-s13^5 - s13^4*s23 + 8*s13^3*s23^2 + 4*s13^2*s23^3 - 
                 3*s13*s23^4 + s23^5)) + p2q^2*p3q*(s12^4*s13*(3*s13 + 
                 4*s23) + s12^3*(3*s13^3 + 7*s13^2*s23 + 10*s13*s23^2 + 
                 14*s23^3) + s13*s23*(-2*s13^4 - 8*s13^3*s23 + 15*s13^2*
                  s23^2 + 19*s13*s23^3 - 2*s23^4) + s12^2*(-3*s13^4 + 
                 46*s13^2*s23^2 + 23*s13*s23^3 + 10*s23^4) - s12*
                (3*s13^5 + 5*s13^4*s23 + 14*s13^3*s23^2 - 16*s13^2*s23^3 - 
                 45*s13*s23^4 + 4*s23^5))) - 
           p1q^2*(p3q^2*(s12^5*(s13 + 2*s23) + s13*s23^3*(-4*s13^2 + 
                 s13*s23 + 5*s23^2) + s12^4*(2*s13^2 + 4*s13*s23 + 9*s23^2) + 
               s12^2*s23*(3*s13^3 - 6*s13^2*s23 + 2*s13*s23^2 - 7*s23^3) + 
               s12^3*(s13^3 + 5*s13^2*s23 + 22*s13*s23^2 - 3*s23^3) + s12*
                s23^2*(s13^3 - 5*s13^2*s23 - 18*s13*s23^2 + 3*s23^3)) - 
             p2q*p3q*(s12^4*(2*s13^2 + 5*s13*s23 + s23^2) + s13*s23^2*
                (s13^3 + 21*s13^2*s23 + 12*s13*s23^2 - 8*s23^3) + s12^3*
                (4*s13^3 + 9*s13^2*s23 + 7*s13*s23^2 + 21*s23^3) + s12*s23*
                (5*s13^4 + 7*s13^3*s23 + 33*s13^2*s23^2 + 44*s13*s23^3 - 
                 8*s23^4) + s12^2*(2*s13^4 + 9*s13^3*s23 + 52*s13^2*s23^2 + 
                 33*s13*s23^3 + 12*s23^4)) + p2q^2*(s12^3*(s13^3 + 
                 3*s13^2*s23 + s13*s23^2 - 4*s23^3) + s12^2*(2*s13^4 + 
                 5*s13^3*s23 - 6*s13^2*s23^2 - 5*s13*s23^3 + s23^4) + s13*s23*
                (2*s13^4 + 9*s13^3*s23 - 3*s13^2*s23^2 - 7*s13*s23^3 + 
                 3*s23^4) + s12*(s13^5 + 4*s13^4*s23 + 22*s13^3*s23^2 + 
                 2*s13^2*s23^3 - 18*s13*s23^4 + 5*s23^5)))))/
         ((p1q + p2q + p3q)^2*s23^2*(-(p3q^2*s12*(s12 + s23)) - 
           p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
           p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
           p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
            (2*s13 + s23))) + 
       (-(p3q^4*s12*(7*s12^5 + 2*s12^4*(7*s13 + 12*s23) + 
            2*s23^3*(3*s13^2 + 3*s13*s23 + 4*s23^2) + 2*s12*s23^2*
             (9*s13^2 - 6*s13*s23 + 10*s23^2) + s12^2*s23*(15*s13^2 + 
              5*s13*s23 + 32*s23^2) + s12^3*(7*s13^2 + 39*s13*s23 + 
              37*s23^2))) + p2q*p3q^3*(s12^5*(28*s13 + 15*s23) + 
           2*s12*s13*s23^2*(18*s13^2 + 7*s13*s23 + 2*s23^2) + 
           s12^4*(56*s13^2 + 111*s13*s23 + 20*s23^2) + 
           s12^2*s23*(45*s13^3 + 30*s13^2*s23 + 105*s13*s23^2 - 16*s23^3) + 
           s12^3*(28*s13^3 + 141*s13^2*s23 + 214*s13*s23^2 - 3*s23^3) + 
           2*s23^3*(3*s13^3 + 7*s13^2*s23 + 8*s13*s23^2 + 4*s23^3)) + 
         p1q^4*s23^2*(s12^3*(11*s13 + 7*s23) + s12^2*(-26*s13^2 + 6*s13*s23 + 
             26*s23^2) + s23*(7*s13^3 + 26*s13^2*s23 + 37*s13*s23^2 + 
             18*s23^3) + s12*(11*s13^3 + 6*s13^2*s23 + 34*s13*s23^2 + 
             37*s23^3)) - p2q^2*p3q^2*(3*s12^4*(14*s13^2 + 15*s13*s23 + 
             6*s23^2) + s12^3*(84*s13^3 + 189*s13^2*s23 + 45*s13*s23^2 + 
             26*s23^3) + s12^2*s13*(42*s13^3 + 189*s13^2*s23 + 
             354*s13*s23^2 + 70*s23^3) + s12*s23*(45*s13^4 + 45*s13^3*s23 + 
             70*s13^2*s23^2 + 16*s13*s23^3 - 24*s23^4) + 
           2*s23^2*(9*s13^4 + 13*s13^3*s23 - 12*s13*s23^3 - 8*s23^4)) - 
         p2q^4*s13*(7*s13^5 + 24*s13^4*s23 + 37*s13^3*s23^2 + 
           32*s13^2*s23^3 + 20*s13*s23^4 + 8*s23^5 + 
           s12^2*(7*s13^3 + 15*s13^2*s23 + 18*s13*s23^2 + 6*s23^3) + 
           s12*(14*s13^4 + 39*s13^3*s23 + 5*s13^2*s23^2 - 12*s13*s23^3 + 
             6*s23^4)) + p2q^3*p3q*(s12^3*(28*s13^3 + 45*s13^2*s23 + 
             36*s13*s23^2 + 6*s23^3) + s12^2*(56*s13^4 + 141*s13^3*s23 + 
             30*s13^2*s23^2 + 14*s13*s23^3 + 14*s23^4) + 
           s23*(15*s13^5 + 20*s13^4*s23 - 3*s13^3*s23^2 - 16*s13^2*s23^3 + 
             8*s23^5) + s12*(28*s13^5 + 111*s13^4*s23 + 214*s13^3*s23^2 + 
             105*s13^2*s23^3 + 4*s13*s23^4 + 16*s23^5)) + 
         p1q^3*s23*(p3q*(-(s12^4*(6*s13 + 13*s23)) + s12^3*(4*s13^2 + 37*s13*
                s23 - 33*s23^2) + s12^2*(10*s13^3 - 85*s13^2*s23 - 37*s13*
                s23^2 - 17*s23^3) + s23^2*(19*s13^3 + 54*s13^2*s23 + 69*s13*
                s23^2 + 34*s23^3) + s12*s23*(41*s13^3 - 13*s13^2*s23 - 3*s13*
                s23^2 + 37*s23^3)) + p2q*(s12^3*(10*s13^2 + 41*s13*s23 + 19*
                s23^2) + s12^2*(4*s13^3 - 85*s13^2*s23 - 13*s13*s23^2 + 54*
                s23^3) + s23*(-13*s13^4 - 33*s13^3*s23 - 17*s13^2*s23^2 + 37*
                s13*s23^3 + 34*s23^4) + s12*(-6*s13^4 + 37*s13^3*s23 - 37*
                s13^2*s23^2 - 3*s13*s23^3 + 69*s23^4))) + 
         p1q^2*(p3q^2*(s12^5*(7*s13 + 13*s23) + s12^4*(14*s13^2 + 28*s13*
                s23 + 25*s23^2) + s12^2*s23*(25*s13^3 - 71*s13^2*s23 + 46*s13*
                s23^2 - 29*s23^3) + s12^3*(7*s13^3 + 40*s13^2*s23 + 166*s13*
                s23^2 + 3*s23^3) + s12*s23^2*(46*s13^3 - 29*s13^2*s23 - 41*
                s13*s23^2 + 4*s23^3) + 2*s23^3*(8*s13^3 + 19*s13^2*s23 + 23*
                s13*s23^2 + 12*s23^3)) - p2q*p3q*
            (2*s12^4*(7*s13^2 + 19*s13*s23 + 15*s23^2) + 
             s12^3*(28*s13^3 + 68*s13^2*s23 - 54*s13*s23^2 + 35*s23^3) + 
             s12*s23*(38*s13^4 - 54*s13^3*s23 + 57*s13^2*s23^2 + 4*s13*
                s23^3 - 103*s23^4) + s23^2*(30*s13^4 + 35*s13^3*s23 - 32*
                s13^2*s23^2 - 103*s13*s23^3 - 66*s23^4) + 
             s12^2*(14*s13^4 + 68*s13^3*s23 + 348*s13^2*s23^2 + 57*s13*
                s23^3 - 32*s23^4)) + p2q^2*(s12^3*(7*s13^3 + 25*s13^2*s23 + 
               46*s13*s23^2 + 16*s23^3) + s12^2*(14*s13^4 + 40*s13^3*s23 - 71*
                s13^2*s23^2 - 29*s13*s23^3 + 38*s23^4) + 
             s23*(13*s13^5 + 25*s13^4*s23 + 3*s13^3*s23^2 - 29*s13^2*s23^3 + 
               4*s13*s23^4 + 24*s23^5) + s12*(7*s13^5 + 28*s13^4*s23 + 166*
                s13^3*s23^2 + 46*s13^2*s23^3 - 41*s13*s23^4 + 46*s23^5))) + 
         p1q*(p3q^3*(-7*s12^6 - s12^5*(7*s13 + 11*s23) + 
             s12^4*(7*s13^2 - 5*s13*s23 + s23^2) + s12^2*s23*(15*s13^3 - 30*
                s13^2*s23 + 101*s13*s23^2 - 6*s23^3) - 2*s12*s23^2*
              (-8*s13^3 + 8*s13^2*s23 + 5*s13*s23^2 + 2*s23^3) + 
             2*s23^3*(2*s13^3 + 5*s13^2*s23 + 7*s13*s23^2 + 4*s23^3) + 
             s12^3*(7*s13^3 + 21*s13^2*s23 + 135*s13*s23^2 + 11*s23^3)) + 
           p2q*p3q^2*(3*s12^5*(7*s13 + 5*s23) + s12^4*(21*s13^2 + 43*s13*
                s23 - 10*s23^2) + s12^3*(-21*s13^3 + 5*s13^2*s23 + 169*s13*
                s23^2 - 57*s23^3) + 4*s23^2*(-4*s13^4 - s13^3*s23 + 11*s13^2*
                s23^2 + 18*s13*s23^3 + 10*s23^4) + 2*s12*s23*(-15*s13^4 + 20*
                s13^3*s23 - 30*s13^2*s23^2 - 18*s13*s23^3 + 17*s23^4) - 
             s12^2*(21*s13^4 + 53*s13^3*s23 + 305*s13^2*s23^2 + 3*s13*s23^3 + 
               38*s23^4)) + p2q^3*(-7*s13^6 - 11*s13^5*s23 + s13^4*s23^2 + 
             11*s13^3*s23^3 - 6*s13^2*s23^4 - 4*s13*s23^5 + 8*s23^6 + 
             s12^3*(7*s13^3 + 15*s13^2*s23 + 16*s13*s23^2 + 4*s23^3) + 
             s12^2*(7*s13^4 + 21*s13^3*s23 - 30*s13^2*s23^2 - 16*s13*s23^3 + 
               10*s23^4) + s12*(-7*s13^5 - 5*s13^4*s23 + 135*s13^3*s23^2 + 
               101*s13^2*s23^3 - 10*s13*s23^4 + 14*s23^5)) - 
           p2q^2*p3q*(s12^4*(21*s13^2 + 30*s13*s23 + 16*s23^2) + 
             s12^3*(21*s13^3 + 53*s13^2*s23 - 40*s13*s23^2 + 4*s23^3) + 
             s12^2*(-21*s13^4 - 5*s13^3*s23 + 305*s13^2*s23^2 + 60*s13*
                s23^3 - 44*s23^4) + s23*(-15*s13^5 + 10*s13^4*s23 + 57*s13^3*
                s23^2 + 38*s13^2*s23^3 - 34*s13*s23^4 - 40*s23^5) - 
             s12*(21*s13^5 + 43*s13^4*s23 + 169*s13^3*s23^2 - 3*s13^2*s23^3 - 
               36*s13*s23^4 + 72*s23^5))))/(32*(p1q + p2q + p3q)^2*s23^2*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       ((-(p2q^4*s13^2*((6*s13 - s23)*(s13 + s23)^2 + s12^2*(2*s13 + 3*s23) + 
             2*s12*(4*s13^2 + s13*s23 - 3*s23^2))) - p3q^4*s12^2*
           (6*s12^3 + s12^2*(8*s13 + 11*s23) - s23*(-3*s13^2 + 6*s13*s23 + 
              s23^2) + 2*s12*(s13^2 + s13*s23 + 2*s23^2)) + 
          p1q^4*s23*(-(s12^3*s23) - (s13 - 6*s23)*s23*(s13 + s23)^2 + 
            s12^2*(-8*s13^2 - 3*s13*s23 + 4*s23^2) + 
            s12*s23*(-3*s13^2 + 8*s13*s23 + 11*s23^2)) + 
          2*p2q^3*p3q*s13*(3*s12^3*(s13 + s23) + (s13 + s23)^2*
             (s13^2 + s13*s23 - 3*s23^2) + s12^2*(15*s13^2 + 5*s13*s23 - 
              s23^2) + s12*(13*s13^3 + 29*s13^2*s23 + 9*s13*s23^2 - 
              7*s23^3)) + 2*p2q*p3q^3*s12*(s12^4 + s12^3*(13*s13 + 3*s23) + 
            s12^2*s13*(15*s13 + 29*s23) + s12*(3*s13^3 + 5*s13^2*s23 + 
              9*s13*s23^2 - 5*s23^3) - s23*(-3*s13^3 + s13^2*s23 + 
              7*s13*s23^2 + 3*s23^3)) - p2q^2*p3q^2*(3*s12^4*(2*s13 + s23) + 
            s23*(s13 + s23)^2*(3*s13^2 - 2*s13*s23 - 4*s23^2) + 
            2*s12^3*(21*s13^2 + 7*s13*s23 + 2*s23^2) + 
            s12^2*(42*s13^3 + 94*s13^2*s23 + 14*s13*s23^2 - 5*s23^3) + 
            2*s12*(3*s13^4 + 7*s13^3*s23 + 7*s13^2*s23^2 - 2*s13*s23^3 - 
              5*s23^4)) + p1q^2*(p2q^2*(s12^3*(8*s13^2 + 14*s13*s23 + 
                3*s23^2) - (s13 + s23)^2*(2*s13^3 - 19*s13^2*s23 + 
                19*s13*s23^2 - 2*s23^3) + s12*s23*(40*s13^3 + 3*s13^2*s23 - 
                30*s13*s23^2 + 7*s23^3) + s12^2*(10*s13^3 - 5*s13^2*s23 - 
                s13*s23^2 + 8*s23^3)) + p3q^2*(-2*s12^5 + 15*s12^4*s23 + 
              s23^2*(s13 + s23)^2*(3*s13 + 2*s23) + s12^3*(10*s13^2 + 
                40*s13*s23 + 17*s23^2) + s12^2*(8*s13^3 - 5*s13^2*s23 + 
                3*s13*s23^2 - 17*s23^3) - s12*s23*(-14*s13^3 + s13^2*s23 + 
                30*s13*s23^2 + 15*s23^3)) - 2*p2q*p3q*
             (s12^4*(3*s13 + 2*s23) + s23*(s13 + s23)^2*(2*s13^2 + 
                4*s13*s23 - 7*s23^2) + s12^3*(5*s13^2 - 3*s13*s23 + 
                8*s23^2) + s12^2*(5*s13^3 + 34*s13^2*s23 + 5*s13*s23^2 + 
                3*s23^3) + s12*(3*s13^4 - 3*s13^3*s23 + 5*s13^2*s23^2 + 
                s13*s23^3 - 10*s23^4))) + 
          p1q*(p2q^3*s13*(s12^3*(2*s13 + 3*s23) - s12^2*s23*(9*s13 + 5*s23) - 
              (s13 + s23)^2*(8*s13^2 - 17*s13*s23 + 3*s23^2) + 
              s12*(-10*s13^3 + 25*s13^2*s23 + 24*s13*s23^2 - 11*s23^3)) + 
            p3q^3*s12*(-8*s12^4 + s12^3*(-10*s13 + s23) + s12^2*s23*(25*s13 + 
                23*s23) - s23*(-3*s13^3 + 5*s13^2*s23 + 11*s13*s23^2 + 
                3*s23^3) + s12*(2*s13^3 - 9*s13^2*s23 + 24*s13*s23^2 + 
                11*s23^3)) - p2q^2*p3q*(s12^4*(4*s13 + 3*s23) + 
              s12^3*(8*s13^2 - 7*s13*s23 + s23^2) + s12^2*(-10*s13^3 + 
                63*s13^2*s23 + 6*s13*s23^2 - 13*s23^3) - 2*(s13 + s23)^2*(
                s13^3 - s13^2*s23 - 8*s13*s23^2 + 3*s23^3) + s12*(-16*s13^4 - 
                37*s13^3*s23 + 17*s13^2*s23^2 + 21*s13*s23^3 - 17*s23^4)) + 
            p2q*p3q^2*(2*s12^5 + 2*s12^4*(8*s13 + s23) + s12^3*(10*s13^2 + 
                37*s13*s23 - 18*s23^2) + s23*(s13 + s23)^2*(-3*s13^2 + 
                5*s13*s23 + 6*s23^2) - s12^2*(8*s13^3 + 63*s13^2*s23 + 
                17*s13*s23^2 + 28*s23^3) - s12*(4*s13^4 - 7*s13^3*s23 + 
                6*s13^2*s23^2 + 21*s13*s23^3 + 4*s23^4))) + 
          p1q^3*(p3q*(s12^4*(2*s13 + 3*s23) + 2*s23^2*(s13 + s23)^2*(s13 + 
                4*s23) + s12^3*(8*s13^2 + 13*s13*s23 - 11*s23^2) + 
              s12^2*(6*s13^3 - 7*s13^2*s23 - 18*s13*s23^2 - 23*s23^3) + 
              s12*s23*(11*s13^3 + s13^2*s23 - 11*s13*s23^2 - s23^3)) + 
            p2q*(s12^3*(6*s13^2 + 11*s13*s23 + 2*s23^2) + s23*(s13 + s23)^2*(
                3*s13^2 - 17*s13*s23 + 8*s23^2) + s12^2*(8*s13^3 - 
                7*s13^2*s23 + s13*s23^2 + 12*s23^3) + s12*(2*s13^4 + 
                13*s13^3*s23 - 18*s13^2*s23^2 - 11*s13*s23^3 + 18*s23^4))))*
         den[-1 + ep])/(8*(p1q + p2q + p3q)^2*s23*(-(p3q^2*s12*(s12 + s23)) - 
          p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
          p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
           (2*s13 + s23))) + (7*(s12^2 + 2*s12*s13 + s13^2 - s12*s23 - 
          s13*s23 - 2*s23^2)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23))*den[-1 + 2*ep])/
        (32*(p1q + p2q + p3q)^2*s23^2))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + ((ep^2*s13*(s12 + 10*s13)*s23)/(72*s12) + 
       (ep*(9*p1q^4*s12*s13*s23*(s12 + s23)*(s12 + s13 + s23) - 
          (p2q + p3q)*(p3q^3*s12*(s12^4 + s12^3*(20*s13 - 81*s23) - 
              80*s13^2*s23^2 - s12*s13*s23*(79*s13 + 169*s23) + 
              s12^2*(s13^2 - 68*s13*s23 - 82*s23^2)) + p2q^3*s13*
             (83*s12^3*s23 - 10*s13^3*(s13 + s23) + 10*s12*s13^2*(-2*s13 + 
                7*s23) + s12^2*(8*s13^2 + 107*s13*s23 - 81*s23^2)) + 
            p2q^2*p3q*(-83*s12^4*s23 + 10*s13^3*s23*(s13 + s23) + 
              s12^2*s13*(60*s13^2 + 129*s13*s23 - 350*s23^2) + 
              s12^3*(-15*s13^2 + 59*s13*s23 - 83*s23^2) + s12*s13^2*(
                21*s13^2 + 201*s13*s23 - 70*s23^2)) + p2q*p3q^2*s12*
             (2*s12^3*(3*s13 - 83*s23) + 3*s13^2*(23*s13 - 57*s23)*s23 - 
              2*s12^2*(30*s13^2 + 59*s13*s23 + 83*s23^2) - 3*s12*s13*(
                4*s13^2 + 41*s13*s23 + 150*s23^2))) + 
          p1q^2*(p3q^2*(-10*s13*s23^3*(s13 + s23) + s12^4*(-27*s13 + 
                89*s23) + 2*s12^2*s23*(157*s13^2 + 230*s13*s23 - 81*s23^2) + 
              s12^3*(27*s13^2 + 154*s13*s23 - 72*s23^2) + s12*s23^2*(
                277*s13^2 + 26*s13*s23 - s23^2)) + p2q*p3q*
             (s12^4*(-18*s13 + 93*s23) + 2*s12^3*(27*s13^2 + 76*s13*s23 - 
                115*s23^2) + 10*s13*s23^2*(3*s13^2 + 2*s13*s23 - s23^2) + 
              s12^2*(-36*s13^3 + 380*s13^2*s23 + 787*s13*s23^2 - 324*s23^3) - 
              s12*s23*(105*s13^3 - 454*s13^2*s23 - 38*s13*s23^2 + s23^3)) + 
            p2q^2*(4*s12^4*s23 + 30*s13^2*s23^2*(s13 + s23) + 
              2*s12^3*(9*s13^2 - 10*s13*s23 - 79*s23^2) + 3*s12*s13*(
                3*s13^3 - 29*s13^2*s23 + 62*s13*s23^2 + 4*s23^3) - 
              3*s12^2*(9*s13^3 - 22*s13^2*s23 - 106*s13*s23^2 + 54*s23^3))) + 
          p1q*(p3q^3*s12*(-s12^4 + s13*s23^2*(269*s13 + 29*s23) + 
              s12^3*(-38*s13 + 168*s23) + s12*s23*(286*s13^2 + 506*s13*s23 - 
                79*s23^2) + s12^2*(17*s13^2 + 196*s13*s23 + 90*s23^2)) + 
            p2q*p3q^2*(-s12^5 + 20*s13^2*s23^2*(s13 + s23) + s12^4*(-45*s13 + 
                338*s23) + 4*s12*s13*s23*(-44*s13^2 + 151*s13*s23 + 
                10*s23^2) + s12^3*(93*s13^2 + 291*s13*s23 + 98*s23^2) + 
              s12^2*(-25*s13^3 + 461*s13^2*s23 + 1271*s13*s23^2 - 
                241*s23^3)) + p2q^2*p3q*(s12^4*(-7*s13 + 172*s23) + 
              s12^3*(84*s13^2 - 45*s13*s23 - 71*s23^2) - 10*s13^2*s23*(
                3*s13^2 + s13*s23 - 2*s23^2) + s12^2*(-63*s13^3 + 
                28*s13^2*s23 + 1034*s13*s23^2 - 243*s23^3) + 
              s12*s13*(8*s13^3 - 379*s13^2*s23 + 394*s13*s23^2 + 11*s23^3)) + 
            p2q^3*(2*s12^4*s23 - 30*s13^3*s23*(s13 + s23) + s12^3*(8*s13^2 - 
                140*s13*s23 - 79*s23^2) + s12*s13^2*(8*s13^2 - 203*s13*s23 + 
                59*s23^2) - s12^2*(38*s13^3 + 147*s13^2*s23 - 269*s13*s23^2 + 
                81*s23^3))) - p1q^3*(p3q*(s12^4*(9*s13 - 2*s23) + 
              10*s13*s23^3*(s13 + s23) + s12*s23^2*(-97*s13^2 - 6*s13*s23 + 
                s23^2) + s12^3*(-9*s13^2 - 35*s13*s23 + 80*s23^2) + 
              s12^2*s23*(-116*s13^2 - 141*s13*s23 + 83*s23^2)) + 
            p2q*(-2*s12^4*s23 + 10*s13*s23^3*(s13 + s23) + s12^3*(-9*s13^2 - 
                44*s13*s23 + 80*s23^2) + s12*s23*(18*s13^3 - 70*s13^2*s23 + 
                3*s13*s23^2 + s23^3) + s12^2*(9*s13^3 - 89*s13^2*s23 - 
                132*s13*s23^2 + 83*s23^3)))))/(144*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12^2*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (-9*p1q^6*s23^2*(s12^5*(72*s13 - 2*s23) + 
           5*s13*s23^4*(s13 + s23) + s12^3*s23*(108*s13^2 + 162*s13*s23 - 
             25*s23^2) + s12^2*s23^2*(65*s13^2 + 67*s13*s23 - 19*s23^2) + 
           s12^4*(72*s13^2 + 178*s13*s23 - 13*s23^2) + 
           s12*s23^3*(16*s13^2 + 16*s13*s23 - 5*s23^2)) - 
         9*(p2q + p3q)^2*s23*(p2q^4*s13^2*(38*s12^5 + 
             s12^4*(87*s13 + 60*s23) + 5*s13^3*(s13^2 + 3*s13*s23 + 2*
                s23^2) + s12*s13^2*(15*s13^2 + 39*s13*s23 + 19*s23^2) + 
             s12^3*(65*s13^2 + 120*s13*s23 + 22*s23^2) + 
             s12^2*s13*(26*s13^2 + 84*s13*s23 + 49*s23^2)) - 
           p3q^4*s12^3*(11*s12^4 + 5*s12^3*(12*s13 + 7*s23) + 
             5*s13*s23*(4*s13^2 + 3*s13*s23 - s23^2) + 
             s12^2*(87*s13^2 + 99*s13*s23 + 37*s23^2) + 
             s12*(38*s13^3 + 84*s13^2*s23 + 34*s13*s23^2 + 13*s23^3)) - 
           p2q*p3q^3*s12^2*(23*s12^5 + s12^4*(154*s13 + 65*s23) + 
             15*s13^2*s23*(s13^2 + 3*s13*s23 + 2*s23^2) + 
             s12^3*(216*s13^2 + 243*s13*s23 + 61*s23^2) + 
             s12*s13*(-23*s13^3 + 107*s13^2*s23 + 140*s13*s23^2 - 5*s23^3) + 
             s12^2*(62*s13^3 + 270*s13^2*s23 + 84*s13*s23^2 + 19*s23^3)) - 
           p2q^3*p3q*s13*(22*s12^6 + s12^5*(-73*s13 + 50*s23) + 
             5*s13^3*s23*(s13^2 + 3*s13*s23 + 2*s23^2) + 
             s12^4*(-234*s13^2 - 27*s13*s23 + 50*s23^2) + 
             s12*s13^2*(9*s13^3 + 33*s13^2*s23 + 48*s13*s23^2 + 19*s23^3) + 
             s12^3*(-152*s13^3 - 145*s13^2*s23 + 111*s13*s23^2 + 22*s23^3) + 
             s12^2*s13*(-4*s13^3 - 40*s13^2*s23 + 22*s13*s23^2 + 49*s23^3)) - 
           p2q^2*p3q^2*s12*(16*s12^6 + s12^5*(137*s13 + 46*s23) + 
             s13^3*s23*(-4*s13^2 - 3*s13*s23 + s23^2) + 
             2*s12^4*(67*s13^2 + 131*s13*s23 + 22*s23^2) + 
             s12^3*(-98*s13^3 + 311*s13^2*s23 + 165*s13*s23^2 + 14*s23^3) + 
             2*s12^2*s13*(-65*s13^3 + 35*s13^2*s23 + 154*s13*s23^2 + 20*
                s23^3) + s12*s13^2*(-19*s13^3 - 29*s13^2*s23 + 76*s13*s23^2 + 
               81*s23^3))) + p1q^5*s23*(p3q*(18*s12^6*(72*s13 + 7*s23) + 
             s12^5*(648*s13^2 + 630*s13*s23 + 347*s23^2) + 
             5*s23^4*(9*s13^3 + 5*s13^2*s23 + 10*s13*s23^2 + 14*s23^3) + 
             s12*s23^3*(144*s13^3 - 155*s13^2*s23 - 215*s13*s23^2 + 219*
                s23^3) + s12^2*s23^2*(585*s13^3 - 757*s13^2*s23 - 1618*s13*
                s23^2 + 441*s23^3) + s12^4*(648*s13^3 - 504*s13^2*s23 - 1009*
                s13*s23^2 + 695*s23^3) + s12^3*s23*(972*s13^3 - 1081*s13^2*
                s23 - 1858*s13*s23^2 + 766*s23^3)) + 
           p2q*(72*s12^6*(9*s13 + 2*s23) + s12^5*(648*s13^2 - 342*s13*s23 + 
               527*s23^2) + 5*s23^4*(45*s13^3 + 50*s13^2*s23 + 19*s13*s23^2 + 
               14*s23^3) + s12*s23^3*(576*s13^3 + 547*s13^2*s23 - 125*s13*
                s23^2 + 174*s23^3) + s12^2*s23^2*(1755*s13^3 + 1340*s13^2*
                s23 - 1105*s13*s23^2 + 324*s23^3) + s12^3*s23*
              (2592*s13^3 + 2321*s13^2*s23 - 634*s13*s23^2 + 811*s23^3) + 
             s12^4*(1296*s13^3 + 1422*s13^2*s23 - 577*s13*s23^2 + 974*
                s23^3))) + p1q^4*(p3q^2*(-72*s12^7*(9*s13 + 2*s23) + 
             s12^6*(-648*s13^2 + 2592*s13*s23 - 239*s23^2) + 
             s12^5*s23*(468*s13^2 + 1220*s13*s23 - 95*s23^2) + 
             5*s23^5*(4*s13^3 - 5*s13^2*s23 + 5*s13*s23^2 + 14*s23^3) + 
             s12*s23^4*(344*s13^3 + 71*s13^2*s23 - 273*s13*s23^2 + 135*
                s23^3) + s12^2*s23^3*(1504*s13^3 + 1009*s13^2*s23 - 660*s13*
                s23^2 + 857*s23^3) + s12^4*s23*(2268*s13^3 - 2167*s13^2*s23 + 
               1191*s13*s23^2 + 1412*s23^3) + s12^3*s23^2*(2962*s13^3 - 1074*
                s13^2*s23 + 2201*s13*s23^2 + 2204*s23^3)) + 
           p2q^2*(4*s12^6*s23*(360*s13 + s23) - s12^5*(648*s13^3 + 2614*s13*
                s23^2 + 65*s23^3) - 5*s13*s23^4*(90*s13^3 + 119*s13^2*s23 + 
               103*s13*s23^2 + 74*s23^3) - s12*s23^3*(864*s13^4 + 808*s13^3*
                s23 + 185*s13^2*s23^2 + 1067*s13*s23^3 + 151*s23^4) + 
             s12^2*s23^2*(-1755*s13^4 - 362*s13^3*s23 + 2400*s13^2*s23^2 - 
               773*s13*s23^3 + 305*s23^4) + s12^4*(-648*s13^4 + 828*s13^3*
                s23 - 511*s13^2*s23^2 - 2301*s13*s23^3 + 963*s23^4) + 
             s12^3*s23*(-2268*s13^4 + 1108*s13^3*s23 + 414*s13^2*s23^2 + 863*
                s13*s23^3 + 1488*s23^4)) + p2q*p3q*(-144*s12^7*s23 + 
             2*s12^6*(648*s13^2 + 2664*s13*s23 - 149*s23^2) + 
             s12^5*(1296*s13^3 + 4356*s13^2*s23 - 1070*s13*s23^2 - 97*
                s23^3) + s12^4*s23*(6984*s13^3 + 688*s13^2*s23 - 1317*s13*
                s23^2 + 2744*s23^3) + s12*s23^3*(-432*s13^4 + 679*s13^3*s23 + 
               453*s13^2*s23^2 - 1349*s13*s23^3 - 16*s23^4) - 
             5*s23^4*(36*s13^4 + 34*s13^3*s23 + 81*s13^2*s23^2 + 69*s13*
                s23^3 - 14*s23^4) + s12^2*s23^2*(-1170*s13^4 + 3041*s13^3*
                s23 + 4822*s13^2*s23^2 - 1298*s13*s23^3 + 1216*s23^4) + 
             s12^3*s23*(-972*s13^4 + 7634*s13^3*s23 + 1833*s13^2*s23^2 + 3325*
                s13*s23^3 + 3989*s23^4))) + 
         p1q*(p3q^5*s12^2*(-8*s12^5*(81*s13 - 49*s23) - 5*s13*s23^3*
              (47*s13^2 + 65*s13*s23 + 34*s23^2) + s12^3*s23*
              (2130*s13^2 + 1580*s13*s23 + 959*s23^2) + 
             s12^4*(-648*s13^2 + 1311*s13*s23 + 1294*s23^2) + 
             s12^2*s23*(1859*s13^3 + 776*s13^2*s23 - 1052*s13*s23^2 - 230*
                s23^3) - s12*s23^2*(-1138*s13^3 + 1517*s13^2*s23 + 1005*s13*
                s23^2 + 287*s23^3)) + p2q^2*p3q^3*
            (s12^7*(-648*s13 + 986*s23) - 5*s13^3*s23^3*(23*s13^2 + 73*s13*
                s23 + 50*s23^2) + 6*s12^6*(540*s13^2 + 2015*s13*s23 + 606*
                s23^2) - s12*s13^2*s23^2*(38*s13^3 + 515*s13^2*s23 + 989*s13*
                s23^2 + 377*s23^3) + s12^5*(1944*s13^3 + 18588*s13^2*s23 + 
               8447*s13*s23^2 + 1937*s23^3) + s12^2*s13*s23*(672*s13^4 + 291*
                s13^3*s23 + 1836*s13^2*s23^2 + 286*s13*s23^3 - 2678*s23^4) + 
             s12^4*(-1944*s13^4 + 7754*s13^3*s23 + 18957*s13^2*s23^2 - 5877*
                s13*s23^3 - 2094*s23^4) + s12^3*s23*(-5538*s13^4 + 15771*
                s13^3*s23 + 3656*s13^2*s23^2 - 6548*s13*s23^3 - 1381*
                s23^4)) + p2q^5*s13*(504*s12^6*s23 + s12^5*s23*
              (135*s13 + 1022*s23) + 5*s13^3*s23*(9*s13^3 + 50*s13^2*s23 + 
               127*s13*s23^2 + 86*s23^3) + s12*s13^2*s23*(31*s13^3 + 695*
                s13^2*s23 + 1598*s13*s23^2 + 664*s23^3) + 
             s12^4*(648*s13^3 - 608*s13^2*s23 + 3217*s13*s23^2 + 1162*
                s23^3) + s12^2*s13*s23*(-51*s13^3 + 423*s13^2*s23 + 1783*s13*
                s23^2 + 1243*s23^3) + s12^3*(648*s13^4 - 924*s13^3*s23 + 1525*
                s13^2*s23^2 + 2711*s13*s23^3 + 316*s23^4)) + 
           p2q*p3q^4*s12*(s12^6*(-1296*s13 + 1027*s23) + 2*s13^2*s23^3*
              (36*s13^2 + 47*s13*s23 + 11*s23^2) + s12^5*(648*s13^2 + 6657*
                s13*s23 + 3595*s23^2) + s12^3*s23*(7129*s13^3 + 6664*s13^2*
                s23 - 4618*s13*s23^2 - 1175*s23^3) - s12*s13*s23^2*
              (81*s13^3 - 256*s13^2*s23 + 461*s13*s23^2 + 1148*s23^3) + 
             s12^4*(1944*s13^3 + 11262*s13^2*s23 + 5398*s13*s23^2 + 2419*
                s23^3) - s12^2*s23*(1743*s13^4 - 6724*s13^3*s23 + 2560*s13^2*
                s23^2 + 4187*s13*s23^3 + 1026*s23^4)) + 
           p2q^3*p3q^2*(495*s12^7*s23 + s12^6*(1944*s13^2 + 10146*s13*s23 + 
               1771*s23^2) + 5*s13^3*s23^2*(23*s13^3 + 36*s13^2*s23 - 105*s13*
                s23^2 - 118*s23^3) + s12^5*(-1944*s13^3 + 12405*s13^2*s23 + 
               8501*s13*s23^2 + 633*s23^3) + s12^2*s13*s23*(924*s13^4 + 654*
                s13^3*s23 + 3387*s13^2*s23^2 + 1943*s13*s23^3 - 2502*s23^4) + 
             s12^4*(-3240*s13^4 + 1174*s13^3*s23 + 24864*s13^2*s23^2 - 361*
                s13*s23^3 - 1403*s23^4) - s12*s13^2*s23*(185*s13^4 - 106*
                s13^3*s23 + 278*s13^2*s23^2 + 2001*s13*s23^3 + 892*s23^4) + 
             s12^3*(648*s13^5 - 6951*s13^4*s23 + 17501*s13^3*s23^2 + 12085*
                s13^2*s23^3 - 3834*s13*s23^4 - 760*s23^5)) + 
           p2q^4*p3q*(144*s12^7*s23 + 2*s12^6*s23*(1953*s13 + 218*s23) + 
             s12^5*(-1944*s13^3 + 3084*s13^2*s23 + 4894*s13*s23^2 + 156*
                s23^3) + s12^2*s13*s23*(201*s13^4 + 705*s13^3*s23 + 3825*
                s13^2*s23^2 + 2764*s13*s23^3 - 802*s23^4) + 
             s12*s13^2*s23*(-154*s13^4 + 839*s13^3*s23 + 1907*s13^2*s23^2 - 
               254*s13*s23^3 - 493*s23^4) + 5*s13^3*s23*(9*s13^4 + 73*s13^3*
                s23 + 186*s13^2*s23^2 + 54*s13*s23^3 - 68*s23^4) - 
             2*s12^4*(324*s13^4 + 959*s13^3*s23 - 7506*s13^2*s23^2 - 1556*s13*
                s23^3 + 127*s23^4) + s12^3*(1296*s13^5 - 4080*s13^4*s23 + 
               8841*s13^3*s23^2 + 10097*s13^2*s23^3 - 152*s13*s23^4 - 118*
                s23^5))) + p1q^2*(-(p3q^4*s12*(4*s12^6*(486*s13 - 53*s23) + 
              s12^5*(1944*s13^2 - 1050*s13*s23 - 307*s23^2) + 
              s13*s23^4*(36*s13^2 + 67*s13*s23 + 31*s23^2) + 
              s12^4*s23*(-1572*s13^2 + 1925*s13*s23 + 1998*s23^2) + 
              s12*s23^3*(228*s13^3 + 725*s13^2*s23 + 673*s13*s23^2 - 
                139*s23^3) + 2*s12^2*s23^2*(-1567*s13^3 + 2788*s13^2*s23 + 
                1474*s13*s23^2 + 517*s23^3) + s12^3*s23*(-3974*s13^3 + 
                3022*s13^2*s23 + 6577*s13*s23^2 + 3266*s23^3))) + 
           p2q*p3q^3*(s12^7*(-2592*s13 + 541*s23) + 5*s13^2*s23^4*
              (19*s13^2 + 65*s13*s23 + 46*s23^2) + s12^6*(2592*s13^2 + 10955*
                s13*s23 + 1428*s23^2) + s12^4*s23*(16729*s13^3 + 3452*s13^2*
                s23 - 17630*s13*s23^2 - 7449*s23^3) + 
             s12^5*(5184*s13^3 + 17775*s13^2*s23 - 987*s13*s23^2 - 4118*
                s23^3) + s12*s13*s23^3*(-207*s13^3 + 275*s13^2*s23 + 844*s13*
                s23^2 + 227*s23^3) - s12^2*s23^2*(1678*s13^4 + 1254*s13^3*
                s23 + 1141*s13^2*s23^2 + 2463*s13*s23^3 - 749*s23^4) - 
             s12^3*s23*(3592*s13^4 - 14053*s13^3*s23 + 12991*s13^2*s23^2 + 
               8876*s13*s23^3 + 1695*s23^4)) - p2q^2*p3q^2*
            (s12^7*(648*s13 - 329*s23) - s12^6*(5832*s13^2 + 15673*s13*s23 + 
               1331*s23^2) + 5*s13^2*s23^3*(15*s13^3 + 50*s13^2*s23 - 107*s13*
                s23^2 - 142*s23^3) + s12^5*(-1944*s13^3 - 18887*s13^2*s23 + 
               2627*s13*s23^2 + 3511*s23^3) + s12*s13*s23^2*(-714*s13^4 + 262*
                s13^3*s23 + 418*s13^2*s23^2 - 2099*s13*s23^3 - 731*s23^4) + 
             s12^3*s23*(11948*s13^4 - 18485*s13^3*s23 + 12137*s13^2*s23^2 + 
               12174*s13*s23^3 + 754*s23^4) + s12^4*(4536*s13^4 - 9977*s13^3*
                s23 - 10770*s13^2*s23^2 + 21026*s13*s23^3 + 6238*s23^4) + 
             s12^2*s23*(-1058*s13^5 + 1577*s13^4*s23 + 1535*s13^3*s23^2 + 392*
                s13^2*s23^3 + 3983*s13*s23^4 - 971*s23^5)) + 
           p2q^4*(4*s12^6*(324*s13 - 35*s23)*s23 - 5*s13^3*s23^2*
              (45*s13^3 + 119*s13^2*s23 + 238*s13*s23^2 + 164*s23^3) - 
             s12^5*(648*s13^3 - 383*s13^2*s23 + 706*s13*s23^2 + 564*s23^3) + 
             s12^2*s13*s23*(509*s13^4 + 805*s13^3*s23 - 269*s13^2*s23^2 - 993*
                s13*s23^3 - 1163*s23^4) + s12^4*(648*s13^4 + 159*s13^3*s23 + 
               5047*s13^2*s23^2 - 2035*s13*s23^3 - 542*s23^4) - 
             s12*s13^2*s23*(144*s13^4 + 208*s13^3*s23 + 1285*s13^2*s23^2 + 
               2862*s13*s23^3 + 966*s23^4) + s12^3*(1296*s13^5 - 1515*s13^4*
                s23 + 4493*s13^3*s23^2 + 233*s13^2*s23^3 - 2342*s13*s23^4 - 
               118*s23^5)) + p2q^3*p3q*(2*s12^6*(648*s13^2 + 3532*s13*s23 + 
               17*s23^2) - s12^5*(3888*s13^3 - 3067*s13^2*s23 + 4424*s13*
                s23^2 + 2027*s23^3) - 10*s13^2*s23^2*(18*s13^4 + 58*s13^3*
                s23 + 149*s13^2*s23^2 + 61*s13*s23^3 - 48*s23^4) - 
             s12^4*(3888*s13^4 + 2619*s13^3*s23 - 9136*s13^2*s23^2 + 12242*
                s13*s23^3 + 2633*s23^4) + s12^3*(1296*s13^5 - 9871*s13^4*
                s23 + 12041*s13^3*s23^2 - 4669*s13^2*s23^3 - 8669*s13*s23^4 - 
               211*s23^5) + s12^2*s23*(1567*s13^5 + 1104*s13^4*s23 - 634*
                s13^3*s23^2 - 978*s13^2*s23^3 - 3356*s13*s23^4 + 361*s23^5) + 
             s12*s13*s23*(-144*s13^5 + 677*s13^4*s23 - 1088*s13^3*s23^2 - 
               3510*s13^2*s23^3 + 222*s13*s23^4 + 473*s23^5))) + 
         p1q^3*(-(p3q^3*(9*s12^7*(216*s13 + 25*s23) + 5*s13*s23^5*(5*s13^2 + 
                19*s13*s23 + 14*s23^2) + s12^6*(1944*s13^2 - 1575*s13*s23 + 
                1037*s23^2) + s12^5*s23*(-45*s13^2 + 2672*s13*s23 + 
                3048*s23^2) + s12*s23^4*(-164*s13^3 - 15*s13^2*s23 + 
                233*s13*s23^2 + 39*s23^3) - s12^2*s23^3*(926*s13^3 + 
                781*s13^2*s23 - 148*s13*s23^2 + 726*s23^3) - s12^3*s23^2*(
                4166*s13^3 - 4889*s13^2*s23 + 613*s13*s23^2 + 916*s23^3) + 
              s12^4*s23*(-4077*s13^3 + 5353*s13^2*s23 + 4621*s13*s23^2 + 
                2085*s23^3))) - p2q*p3q^2*(9*s12^7*(144*s13 + 25*s23) + 
             s12^6*(-3240*s13^2 - 11313*s13*s23 + 1394*s23^2) + 
             5*s13*s23^4*(3*s13^3 - 28*s13^2*s23 + 43*s13*s23^2 + 74*s23^3) + 
             s12^4*s23*(-17019*s13^3 + 480*s13^2*s23 + 13852*s13*s23^2 + 4099*
                s23^3) + s12^5*(-4536*s13^3 - 13779*s13^2*s23 + 3858*s13*
                s23^2 + 5946*s23^3) + s12^3*s23*(2718*s13^4 - 14002*s13^3*
                s23 + 10871*s13^2*s23^2 + 2225*s13*s23^3 - 2509*s23^4) + 
             s12^2*s23^2*(2562*s13^4 + 436*s13^3*s23 - 1938*s13^2*s23^2 + 
               1955*s13*s23^3 - 1641*s23^4) + s12*s23^3*(873*s13^4 - 58*s13^3*
                s23 - 762*s13^2*s23^2 + 899*s13*s23^3 + 190*s23^4)) + 
           p2q^3*(1944*s12^6*s13*s23 + 30*s13^2*s23^3*(15*s13^3 + 26*s13^2*
                s23 + 37*s13*s23^2 + 26*s23^3) - s12^5*(1296*s13^3 - 207*
                s13^2*s23 + 3070*s13*s23^2 + 509*s23^3) + 
             s12^4*(-648*s13^4 + 243*s13^3*s23 + 440*s13^2*s23^2 - 5242*s13*
                s23^3 - 159*s23^4) + 6*s12*s13*s23^2*(96*s13^4 + 97*s13^3*
                s23 + 165*s13^2*s23^2 + 418*s13*s23^3 + 104*s23^4) + 
             s12^2*s23*(585*s13^5 - 884*s13^4*s23 - 2220*s13^3*s23^2 + 529*
                s13^2*s23^3 - 339*s13*s23^4 + 361*s23^5) + 
             s12^3*(648*s13^5 - 3267*s13^4*s23 + 862*s13^3*s23^2 - 5243*s13^2*
                s23^3 - 2661*s13*s23^4 + 711*s23^5)) + 
           p2q^2*p3q*(6*s12^6*(432*s13^2 + 1623*s13*s23 - 40*s23^2) - 
             s12^5*(648*s13^3 - 8109*s13^2*s23 + 5822*s13*s23^2 + 3200*
                s23^3) + s12^4*(-3240*s13^4 + 7353*s13^3*s23 + 1713*s13^2*
                s23^2 - 14662*s13*s23^3 - 2110*s23^4) + 30*s13*s23^3*
              (9*s13^4 + 15*s13^3*s23 + 38*s13^2*s23^2 + 22*s13*s23^3 - 10*
                s23^4) + s12^3*s23*(-7929*s13^4 + 8520*s13^3*s23 - 11972*
                s13^2*s23^2 - 5463*s13*s23^3 + 2277*s23^4) + 
             s12*s23^2*(432*s13^5 - 1047*s13^4*s23 + 200*s13^3*s23^2 + 3138*
                s13^2*s23^3 - 42*s13*s23^4 - 151*s23^5) + 
             s12^2*s23*(585*s13^5 - 3851*s13^4*s23 - 4509*s13^3*s23^2 + 1290*
                s13^2*s23^3 - 2191*s13*s23^4 + 1276*s23^5))))/
        (288*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12^3*s23*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) + 
       ((72*p1q^6*s12*s23^3*(s12 + s23)*(s12 + s13 + s23) - 
          p1q^5*s23^2*(p3q*(225*s12^4 + 10*s12^3*(7*s13 + 40*s23) + 
              2*s12*s23*(41*s13^2 + 46*s13*s23 - 35*s23^2) - 
              10*s23^2*(-3*s13^2 - 2*s13*s23 + s23^2) + s12^2*(133*s13^2 + 
                142*s13*s23 + 115*s23^2)) + 2*p2q*(36*s12^4 + 
              s12^3*(-55*s13 + 119*s23) - 5*s23^2*(-3*s13^2 - 2*s13*s23 + 
                s23^2) + s12*s23*(104*s13^2 + 181*s13*s23 + 37*s23^2) + 
              s12^2*(53*s13^2 + 116*s13*s23 + 125*s23^2))) + 
          9*(p2q + p3q)^2*s12*(8*p2q^4*s13^3*(s12 + s13)*(s12 + s13 + s23) + 
            8*p3q^4*s12*(s12 + s13)*(s12 + s23)*(s13 + s23)*
             (s12 + s13 + s23) - p2q^3*p3q*s13^2*(43*s12^3 + s12^2*(88*s13 + 
                70*s23) + 2*s13*(s13^2 + 19*s13*s23 + 18*s23^2) + 
              s12*(47*s13^2 + 108*s13*s23 + 27*s23^2)) + 
            p2q*p3q^3*(s12^4*(25*s13 - s23) - 8*s13^2*s23*(s13 + s23)^2 + 
              2*s12^3*(17*s13^2 + 7*s13*s23 - s23^2) - s12^2*(7*s13^3 + 
                9*s13^2*s23 + 29*s13*s23^2 + s23^3) - 2*s12*s13*(8*s13^3 + 
                16*s13^2*s23 + 17*s13*s23^2 + 9*s23^3)) + p2q^2*p3q^2*s13*
             (35*s12^4 + s12^3*(47*s13 + 81*s23) + s12^2*(-3*s13^2 + 
                132*s13*s23 + 65*s23^2) + 2*s13*(4*s13^3 + 9*s13^2*s23 + 
                19*s13*s23^2 + 14*s23^3) + s12*(-7*s13^3 + 69*s13^2*s23 + 
                121*s13*s23^2 + 19*s23^3))) + p1q^4*s23*
           (p3q^2*(153*s12^5 + s12^4*(-65*s13 + 127*s23) + 
              s12^3*(-157*s13^2 + 444*s13*s23 - 105*s23^2) + 
              10*s23^2*(3*s13^3 - s13*s23^2 + 2*s23^3) + s12^2*(61*s13^3 - 
                393*s13^2*s23 + 497*s13*s23^2 + 41*s23^3) + 2*s12*s23*(
                5*s13^3 + 44*s13^2*s23 - 11*s13*s23^2 + 70*s23^3)) + 
            2*p2q^2*(s12^4*(-127*s13 + 47*s23) + s12^3*(-119*s13^2 + 
                537*s13*s23 + 160*s23^2) - 5*s23^2*(-11*s13^3 - 5*s13^2*s23 + 
                7*s13*s23^2 + s23^3) + s12*s23*(101*s13^3 + 474*s13^2*s23 + 
                269*s13*s23^2 + 56*s23^3) + 2*s12^2*(4*s13^3 + 75*s13^2*s23 + 
                484*s13*s23^2 + 87*s23^3)) + p2q*p3q*(72*s12^5 + 
              s12^4*(-886*s13 + 365*s23) + s12^3*(-638*s13^2 + 942*s13*s23 + 
                674*s23^2) + 10*s23^2*(14*s13^3 + 5*s13^2*s23 - 8*s13*s23^2 + 
                s23^3) + 4*s12*s23*(80*s13^3 + 232*s13^2*s23 + 57*s13*s23^2 + 
                45*s23^3) + s12^2*(320*s13^3 - 57*s13^2*s23 + 2136*s13*
                 s23^2 + 551*s23^3))) - p1q*(p2q + p3q)*
           (2*p2q^4*s13^2*(36*s12^4 + s12^3*(199*s13 + 25*s23) + 
              2*s12^2*(150*s13^2 + 153*s13*s23 + 74*s23^2) + s12*(147*s13^3 + 
                276*s13^2*s23 + 164*s13*s23^2 - 5*s23^3) + 5*s13*(2*s13^3 - 
                s13^2*s23 - 4*s13*s23^2 - s23^3)) - p3q^4*s12*
             (164*s12^5 + s12^4*(573*s13 + 623*s23) - 2*s13*s23^2*(51*s13^2 + 
                62*s13*s23 + 31*s23^2) + 2*s12^3*(327*s13^2 + 636*s13*s23 + 
                310*s23^2) + 2*s12*s23*(112*s13^3 + 7*s13^2*s23 - 
                8*s13*s23^2 - 67*s23^3) + s12^2*(245*s13^3 + 873*s13^2*s23 + 
                745*s13*s23^2 + 27*s23^3)) - p2q*p3q^3*(164*s12^6 + 
              10*s13^2*s23^2*(s13 + s23)^2 + 2*s12^5*(513*s13 + 299*s23) + 
              3*s12^4*(401*s13^2 + 414*s13*s23 + 191*s23^2) + 
              2*s12*s13*s23*(-36*s13^3 + 88*s13^2*s23 + 175*s13*s23^2 - 
                29*s23^3) + s12^3*(-16*s13^3 + 1248*s13^2*s23 + 
                450*s13*s23^2 + 8*s23^3) + s12^2*(-357*s13^4 + 532*s13^3*
                 s23 + 412*s13^2*s23^2 + 176*s13*s23^3 - 131*s23^4)) - 
            p2q^3*p3q*s13*(396*s12^5 + s12^4*(843*s13 + 642*s23) + 
              s12^3*(538*s13^2 + 2318*s13*s23 + 638*s23^2) + 
              2*s12*s23*(-102*s13^3 + 197*s13^2*s23 + 414*s13*s23^2 - 
                5*s23^3) + s12^2*(111*s13^3 + 1452*s13^2*s23 + 1553*s13*
                 s23^2 + 382*s23^3) - 10*s13*(2*s13^4 - 2*s13^3*s23 - 
                s13^2*s23^2 + 4*s13*s23^3 + s23^4)) - p2q^2*p3q^2*
             (s12^5*(687*s13 + 137*s23) + 10*s13^3*s23*(s13^2 - 2*s13*s23 - 
                3*s23^2) + s12^4*(816*s13^2 + 612*s13*s23 + 277*s23^2) + 
              s12^3*(-297*s13^3 + 1771*s13^2*s23 + 181*s13*s23^2 + 
                143*s23^3) + 2*s12*s13*(66*s13^4 - 105*s13^3*s23 + 
                95*s13^2*s23^2 + 241*s13*s23^3 - 165*s23^4) + 
              s12^2*(-294*s13^4 + 1076*s13^3*s23 + 951*s13^2*s23^2 - 
                74*s13*s23^3 + 3*s23^4))) + 
          p1q^3*(p3q^3*(5*s12^5*(45*s13 - 7*s23) + s12^4*(450*s13^2 - 
                290*s13*s23 - 379*s23^2) + s12^3*(225*s13^3 + 155*s13^2*s23 - 
                117*s13*s23^2 - 479*s23^3) + 10*s23^3*(2*s13^3 + s13^2*s23 + 
                s23^3) + s12^2*s23*(410*s13^3 - 649*s13^2*s23 + 
                492*s13*s23^2 + 49*s23^3) + 2*s12*s23^2*(-19*s13^3 + 
                71*s13^2*s23 + 47*s13*s23^2 + 97*s23^3)) + 
            2*p2q^3*(s12^4*(9*s13^2 - 482*s13*s23 - 71*s23^2) + 
              s12^3*(18*s13^3 - 683*s13^2*s23 - 758*s13*s23^2 - 137*s23^3) - 
              15*s13*s23^2*(5*s13^3 + s13^2*s23 - 5*s13*s23^2 - s23^3) + 
              s12^2*(9*s13^4 - 235*s13^3*s23 - 1866*s13^2*s23^2 - 
                495*s13*s23^3 - 61*s23^4) - s12*s23*(34*s13^4 + 696*s13^3*
                 s23 + 631*s13^2*s23^2 + 204*s13*s23^3 - 5*s23^4)) + 
            p2q^2*p3q*(6*s12^5*(105*s13 - 43*s23) + s12^4*(1053*s13^2 - 
                2102*s13*s23 - 903*s23^2) + 2*s12^3*(108*s13^3 - 
                567*s13^2*s23 - 1517*s13*s23^2 - 406*s23^3) - 
              2*s12*s23*(202*s13^4 + 922*s13^3*s23 + 545*s13^2*s23^2 + 
                325*s13*s23^3 - 100*s23^4) - 10*s23^2*(23*s13^4 + s13^3*s23 - 
                18*s13^2*s23^2 + 5*s13*s23^3 + s23^4) + s12^2*(-207*s13^4 + 
                306*s13^3*s23 - 5392*s13^2*s23^2 - 902*s13*s23^3 + 
                43*s23^4)) + p2q*p3q^2*(5*s12^5*(171*s13 - 91*s23) + 
              3*s12^4*(495*s13^2 - 800*s13*s23 - 437*s23^2) + 
              s12^3*(405*s13^3 - 909*s13^2*s23 - 3039*s13*s23^2 - 
                873*s23^3) + 40*s13*s23^2*(-2*s13^3 + s13^2*s23 + s13*s23^2 - 
                2*s23^3) + 2*s12*s23*(-87*s13^4 - 209*s13^3*s23 + 
                67*s13^2*s23^2 - 119*s13*s23^3 + 192*s23^4) + 
              s12^2*(-225*s13^4 + 862*s13^3*s23 - 3470*s13^2*s23^2 + 
                58*s13*s23^3 + 367*s23^4))) + 
          p1q^2*(p3q^4*(164*s12^6 - 10*s13*s23^3*(s13 + s23)^2 + 
              363*s12^5*(2*s13 + s23) + 3*s12^4*(320*s13^2 + 253*s13*s23 - 
                85*s23^2) + s12^3*(398*s13^3 + 897*s13^2*s23 - 174*s13*
                 s23^2 - 891*s23^3) - 2*s12*s23^2*(75*s13^3 + 76*s13^2*s23 + 
                55*s13*s23^2 - 26*s23^3) - s12^2*s23*(-501*s13^3 + 
                519*s13^2*s23 + 307*s13*s23^2 + 385*s23^3)) + 
            2*p2q^4*s13*(s12^4*(127*s13 - 47*s23) + s12^3*(255*s13^2 + 
                807*s13*s23 + 136*s23^2) + 5*s13*s23*(9*s13^3 - s13^2*s23 - 
                13*s13*s23^2 - 3*s23^3) + s12^2*(129*s13^3 + 1323*s13^2*s23 + 
                555*s13*s23^2 + 173*s23^3) + s12*(s13^4 + 514*s13^3*s23 + 
                639*s13^2*s23^2 + 276*s13*s23^3 - 10*s23^4)) + 
            p2q*p3q^3*(328*s12^6 + 13*s12^5*(173*s13 + 43*s23) + 
              3*s12^4*(984*s13^2 + 318*s13*s23 - 275*s23^2) + 
              s12^3*(469*s13^3 + 2007*s13^2*s23 - 2007*s13*s23^2 - 
                1885*s23^3) + 10*s13*s23^2*(-3*s13^3 + s13*s23^2 - 2*s23^3) - 
              2*s12*s23*(129*s13^4 + 222*s13^3*s23 + 190*s13^2*s23^2 + 
                392*s13*s23^3 - 65*s23^4) - s12^2*(562*s13^4 - 1354*s13^3*
                 s23 + 2343*s13^2*s23^2 + 1476*s13*s23^3 + 699*s23^4)) + 
            p2q^3*p3q*(2*s12^5*(115*s13 + 73*s23) + s12^4*(s13^2 - 
                978*s13*s23 + 153*s23^2) - 2*s12^3*(261*s13^3 - 797*s13^2*
                 s23 + 463*s13*s23^2 + 61*s23^3) + 10*s13*s23*(16*s13^4 - 
                5*s13^3*s23 - 16*s13^2*s23^2 + 7*s13*s23^3 + 2*s23^4) - 
              s12^2*(127*s13^4 - 3860*s13^3*s23 + 354*s13^2*s23^2 + 
                452*s13*s23^3 + 119*s23^4) + 2*s12*(83*s13^5 + 651*s13^4*
                 s23 + 711*s13^3*s23^2 + 301*s13^2*s23^3 - 357*s13*s23^4 + 
                5*s23^5)) + p2q^2*p3q^2*(164*s12^6 + s12^5*(1753*s13 + 
                423*s23) + s12^4*(1739*s13^2 - 284*s13*s23 - 255*s23^2) - 
              s12^3*(961*s13^3 - 1819*s13^2*s23 + 2383*s13*s23^2 + 
                1035*s23^3) + 10*s13*s23*(7*s13^4 - 7*s13^3*s23 - 
                2*s13^2*s23^2 + 13*s13*s23^3 + s23^4) - s12^2*(947*s13^4 - 
                2634*s13^3*s23 + 2478*s13^2*s23^2 + 1724*s13*s23^3 + 
                433*s23^4) + 2*s12*(82*s13^5 + 89*s13^4*s23 + 87*s13^3*
                 s23^2 - 8*s13^2*s23^3 - 684*s13*s23^4 + 44*s23^5))))*
         den[-1 + ep])/(72*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12^2*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       ((s12 + s13 + s23)*(-9*p1q^4*s23^2*(-23*s12^2 + 43*s12*s13 + 
            5*s12*s23 + 15*s13*s23) + 9*(p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (-(p3q*s12*(5*s12 + 28*s13 + 33*s23)) + 
            p2q*(23*s12^2 - 15*s13*(s13 + 2*s23) + s12*(-15*s13 + 23*s23))) + 
          p1q^3*s23*(p3q*(-414*s12^3 + 3*s12^2*(258*s13 + 5*s23) + 
              5*s23^2*(23*s13 + 50*s23) + 3*s12*s23*(35*s13 + 164*s23)) + 
            p2q*(-3*s12^2*(138*s13 + 109*s23) + 5*s23*(81*s13^2 + 
                23*s13*s23 + 50*s23^2) + 6*s12*(129*s13^2 - 32*s13*s23 + 
                82*s23^2))) + p1q*(p3q^3*s12^2*(-75*s12^2 - 165*s12*s13 + 
              582*s12*s23 + 619*s13*s23 + 844*s23^2) + p2q*p3q^2*s12*
             (-327*s12^3 + s12^2*(-132*s13 + 168*s23) + 2*s13*s23*(272*s13 + 
                317*s23) + 5*s12*(93*s13^2 - s13*s23 + 86*s23^2)) + 
            p2q^3*s13*(-3*s12^2*(109*s13 + 138*s23) - 6*s12*(47*s13^2 - 
                127*s13*s23 + 69*s23^2) + 5*s13*(27*s13^2 + 77*s13*s23 + 
                158*s23^2)) + p2q^2*p3q*(6*s12^3*(109*s13 - 69*s23) + 
              5*s13^2*s23*(77*s13 + 158*s23) + 3*s12^2*(163*s13^2 - 
                346*s13*s23 - 138*s23^2) + s12*s13*(-435*s13^2 + 
                1306*s13*s23 + 220*s23^2))) + 
          p1q^2*(p3q^2*s12*(207*s12^3 + 3*s12*(65*s13 - 343*s23)*s23 + 
              s12^2*(-387*s13 + 105*s23) - s23^2*(482*s13 + 797*s23)) - 
            p2q*p3q*(6*s12^3*(69*s13 - 109*s23) + 5*s13*s23^2*(73*s13 + 
                154*s23) + s12*s23*(-330*s13^2 + 1601*s13*s23 + 590*s23^2) + 
              s12^2*(-774*s13^2 - 804*s13*s23 + 822*s23^2)) + 
            p2q^2*(3*s12^2*(69*s13^2 + 218*s13*s23 + 69*s23^2) - 
              5*s13*s23*(81*s13^2 + 73*s13*s23 + 154*s23^2) - 
              3*s12*(129*s13^3 - 173*s13^2*s23 + 373*s13*s23^2 - 69*s23^3))))*
         den[-1 + 2*ep])/(288*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12^3))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]] + 
     ((9*ep*p1q*(s12 + s13 + s23)*(-(p3q*s12) + p2q*s13 + p1q*(2*s13 + s23)))/
        (16*p3q*s12 - 16*(p1q + p2q)*(s13 + s23)) + 
       (9*(s12 + s13 + s23)*(p1q^5*s23*(s12 + s13 + s23) + 
          (p2q + p3q)^3*(-(p3q^2*s12^2) - p2q*p3q*s12*(3*s12 + s13 + 2*s23) + 
            p2q^2*(3*s12*s13 + 2*s13^2 + 4*s12*s23 + 6*s13*s23 + 4*s23^2)) + 
          p1q*(p2q + p3q)^2*(2*p3q^2*s12*(-2*s12 + s23) + 
            p2q*p3q*(-6*s12^2 + 4*s12*s13 + 2*s13^2 + 3*s12*s23 + 5*s13*s23 + 
              2*s23^2) + p2q^2*(8*s12*s13 + 4*s13^2 + 11*s12*s23 + 
              15*s13*s23 + 10*s23^2)) - 
          p1q^4*(p3q*(s12^2 + s23^2 - s12*(s13 + 2*s23)) + 
            p2q*(s13^2 - s12*(s13 + 4*s23))) + p1q^2*(p2q + p3q)*
           (2*p2q*p3q*(-3*s12^2 + 4*s12*s13 + s13^2 + 6*s12*s23 + 
              3*s13*s23) - p3q^2*(4*s12^2 + s23^2 - 2*s12*(s13 + 4*s23)) + 
            p2q^2*(4*s13^2 + 16*s13*s23 + 9*s23^2 + 2*s12*(5*s13 + 7*s23))) + 
          p1q^3*(p2q^2*(6*s12*s13 + s13^2 + 10*s12*s23 + 6*s13*s23 + 
              2*s23^2) + p3q^2*(-3*s12^2 - 2*s23*(s13 + 2*s23) + 
              s12*(2*s13 + 5*s23)) + p2q*p3q*(-2*s12^2 + 2*s13^2 + 
              5*s13*s23 - 2*s23^2 + 2*s12*(5*s13 + 8*s23)))))/
        (16*(p2q + p3q)*(p1q + p2q + p3q)^2*s23*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) + (9*(p1q + p2q)*(s12 + s13 + s23)*
         (p3q*(p2q + p3q)*(-(p3q^2*s12^2) - p2q*p3q*s12*(3*s12 + s13 + 
              2*s23) + p2q^2*(3*s12*s13 + 2*s13^2 + 4*s12*s23 + 6*s13*s23 + 
              4*s23^2)) - p1q^3*s23*(p3q*(s13 + s23) + 
            p2q*(s12 + 2*(s13 + s23))) + 
          p1q^2*(p2q*p3q*(s12^2 + 2*s12*s13 + s13^2 + 3*s12*s23 - s13*s23 - 
              2*s23^2) + p2q^2*(s13 - s23)*(s12 + 2*(s13 + s23)) + 
            p3q^2*(-(s23*(s13 + s23)) + s12*(s13 + 2*s23))) + 
          p1q*(p3q^3*s12*(-s12 + s13 + 2*s23) + p2q^3*s13*
             (s12 + 2*(s13 + s23)) + p2q*p3q^2*(-s12^2 + s13^2 + 3*s13*s23 + 
              2*s23^2 + 3*s12*(s13 + 2*s23)) + p2q^2*p3q*
             (-s12^2 + 2*(s13 + s23)^2 + s12*(s13 + 3*s23))))*den[-1 + ep])/
        (8*(p2q + p3q)*(p1q + p2q + p3q)^2*s23*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*
        Eik[k]] + ((ep*p2q*(s12 + s13)*(s12 + s13 + s23)*
         (-(p3q*s12) + p2q*s13 + p1q*(2*s13 + s23)))/
        (16*s13*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (p2q*((p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
           (-(p3q*s12) + p2q*(s13 + s23)) - p1q^3*(s12 + s13 + s23)*
           (2*p2q*s12*(s13 - 2*s23) - 3*p2q*(s13 + 2*s23)^2 + 
            p3q*(2*s12^2 + 7*s12*s13 + 8*s12*s23 - 4*s13*s23 - 6*s23^2)) + 
          p1q^4*(2*s13^3 + 2*s12^2*s23 + 9*s13^2*s23 + 13*s13*s23^2 + 
            6*s23^3 + s12*(2*s13^2 + 9*s13*s23 + 8*s23^2)) + 
          p1q*(p2q + p3q)*(s12 + s13 + s23)*(2*p3q^2*s12*(s12 - s13 - 
              2*s23) + p2q*p3q*(-6*s12*s13 + 2*s13^2 - 4*s12*s23 + 
              4*s13*s23 + 3*s23^2) + p2q^2*(4*s13^2 + 6*s13*s23 + 
              s23*(2*s12 + 3*s23))) + p1q^2*(s12 + s13 + s23)*
           (2*p2q*p3q*(-4*s12*s13 + 2*s13^2 - 3*s12*s23 + 6*s13*s23 + 
              6*s23^2) + p2q^2*(-2*s12*s13 + 4*s13^2 + 4*s12*s23 + 
              10*s13*s23 + 9*s23^2) + p3q^2*(2*s12^2 + 2*s13^2 + 4*s13*s23 + 
              3*s23^2 - 2*s12*(s13 + 4*s23)))))/(16*p1q*(p1q + p2q + p3q)^2*
         s13*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (p2q*(p1q + p2q)*(s12 + s13 + s23)*(p1q^3*s23*(s12 + 2*(s13 + s23)) + 
          p3q*(p3q*s12 - p2q*s13)*(p3q*s12 - p2q*(s13 + s23)) + 
          p1q*(-(p3q^2*s12*(2*s13 + 3*s23)) - p2q^2*s13*
             (s12 + 2*(s13 + s23)) + p2q*p3q*(s12^2 + 2*s13^2 + 5*s13*s23 + 
              3*s23^2 + 2*s12*(s13 + s23))) - 
          p1q^2*(p2q*(s13 - s23)*(s12 + 2*(s13 + s23)) + 
            p3q*(s12^2 + 2*s12*(s13 + s23) - 2*s23*(s13 + s23))))*
         den[-1 + ep])/(8*p1q*(p1q + p2q + p3q)^2*s13*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        Eik[k]] + ((-9*ep*p1q*(s12 + s13 + s23)*(p3q*s12 - p2q*s13 + 
          p1q*(2*s12 + s23)))/(16*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (9*(s12 + s13 + s23)*
         (p1q^5*s23*(s12 + s13 + s23) - 
          p1q^4*(p2q*(-(s12*s13) + (s13 - s23)^2) + 
            p3q*(s12^2 - s12*s13 - 4*s13*s23)) + p1q*(p2q + p3q)^2*
           (2*p2q^2*s13*(-2*s13 + s23) + p2q*p3q*(2*s12^2 + 4*s12*s13 - 
              6*s13^2 + 5*s12*s23 + 3*s13*s23 + 2*s23^2) + 
            p3q^2*(4*s12^2 + 8*s12*s13 + 15*s12*s23 + 11*s13*s23 + 
              10*s23^2)) + (p2q + p3q)^3*(-(p2q^2*s13^2) - 
            p2q*p3q*s13*(s12 + 3*s13 + 2*s23) + p3q^2*(2*s12^2 + 
              4*s23*(s13 + s23) + 3*s12*(s13 + 2*s23))) + 
          p1q^2*(p2q + p3q)*(2*p2q*p3q*(s12^2 + 4*s12*s13 - 3*s13^2 + 
              3*s12*s23 + 6*s13*s23) + p2q^2*(2*s12*s13 - 4*s13^2 + 
              8*s13*s23 - s23^2) + p3q^2*(4*s12^2 + 2*s12*(5*s13 + 8*s23) + 
              s23*(14*s13 + 9*s23))) + p1q^3*
           (p2q^2*(-3*s13^2 + 2*s12*(s13 - s23) + 5*s13*s23 - 4*s23^2) + 
            p3q^2*(s12^2 + 6*s12*(s13 + s23) + 2*s23*(5*s13 + s23)) + 
            p2q*p3q*(2*s12^2 + 5*s12*(2*s13 + s23) - 2*(s13^2 - 8*s13*s23 + 
                s23^2)))))/(16*(p2q + p3q)*(p1q + p2q + p3q)^2*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (9*(p1q + p3q)*(s12 + s13 + s23)*
         (-(p1q^3*s23*(p2q*(s12 + s23) + p3q*(2*s12 + s13 + 2*s23))) + 
          p1q^2*(p3q^2*(s12 - s23)*(2*s12 + s13 + 2*s23) + 
            p2q^2*(s12*(s13 - s23) + (2*s13 - s23)*s23) + 
            p2q*p3q*(s12^2 + 2*s12*s13 + s13^2 - s12*s23 + 3*s13*s23 - 
              2*s23^2)) - p2q*(p2q + p3q)*(p2q^2*s13^2 + p2q*p3q*s13*
             (s12 + 3*s13 + 2*s23) - p3q^2*(2*s12^2 + 4*s23*(s13 + s23) + 
              3*s12*(s13 + 2*s23))) + p1q*(p2q^3*s13*(s12 - s13 + 2*s23) + 
            p3q^3*s12*(2*s12 + s13 + 2*s23) + p2q^2*p3q*(s12^2 - s13^2 + 
              6*s13*s23 + 2*s23^2 + 3*s12*(s13 + s23)) + 
            p2q*p3q^2*(2*s12^2 - s13^2 + 3*s13*s23 + 2*s23^2 + 
              s12*(s13 + 4*s23))))*den[-1 + ep])/(8*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k]] + 
     ((ep*p3q*(s12 + s13)*(s12 + s13 + s23)*(p3q*s12 - p2q*s13 + 
          p1q*(2*s12 + s23)))/(16*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - 
       (p3q*(-((p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
            (-(p2q*s13) + p3q*(s12 + s23))) + 
          p1q^4*(2*s12^3 + s12^2*(2*s13 + 9*s23) + s12*s23*(9*s13 + 13*s23) + 
            2*s23*(s13^2 + 4*s13*s23 + 3*s23^2)) + p1q^3*(s12 + s13 + s23)*
           (p2q*(-7*s12*s13 - 2*s13^2 + 4*s12*s23 - 8*s13*s23 + 6*s23^2) + 
            p3q*(3*s12^2 - 2*s12*(s13 - 6*s23) + 4*s23*(s13 + 3*s23))) - 
          p1q*(p2q + p3q)*(s12 + s13 + s23)*(2*p2q^2*s13*(s12 - s13 + 
              2*s23) + p2q*p3q*(-2*s12^2 + 6*s12*s13 - 4*s12*s23 + 
              4*s13*s23 - 3*s23^2) - p3q^2*(4*s12^2 + 6*s12*s23 + 
              s23*(2*s13 + 3*s23))) + p1q^2*(s12 + s13 + s23)*
           (p2q^2*(2*s12^2 - 2*s12*s13 + 2*s13^2 + 4*s12*s23 - 8*s13*s23 + 
              3*s23^2) + 2*p2q*p3q*(2*s12^2 - 4*s12*s13 + 6*s12*s23 - 
              3*s13*s23 + 6*s23^2) + p3q^2*(4*s12^2 - 2*s12*(s13 - 5*s23) + 
              s23*(4*s13 + 9*s23)))))/(16*p1q*(p1q + p2q + p3q)^2*s12*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (p3q*(p1q + p3q)*(s12 + s13 + s23)*(p1q^3*s23*(2*s12 + s13 + 2*s23) + 
          p2q*(p3q*s12 - p2q*s13)*(-(p2q*s13) + p3q*(s12 + s23)) - 
          p1q^2*(p3q*(s12 - s23)*(2*s12 + s13 + 2*s23) + 
            p2q*(2*s12*s13 + s13^2 - 2*s12*s23 + 2*s13*s23 - 2*s23^2)) + 
          p1q*(-(p3q^2*s12*(2*s12 + s13 + 2*s23)) - p2q^2*s13*
             (2*s12 + 3*s23) + p2q*p3q*(2*s12^2 + 2*s12*s13 + s13^2 + 
              5*s12*s23 + 2*s13*s23 + 3*s23^2)))*den[-1 + ep])/
        (8*p1q*(p1q + p2q + p3q)^2*s12*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k]] + 
     ((-9*p2q*(s12 + s13 + s23)*(-2*p1q^5*(p2q + p3q)*s23^2*(2*s13 + s23) + 
          (p2q + p3q)^5*s23*(p2q*s13*(2*s12 + 2*s13 + s23) + 
            p3q*(2*s12^2 + 4*s13*(s13 + s23) + 3*s12*(2*s13 + s23))) + 
          p1q^4*s23*(p3q^2*(8*s12*s13 + 4*s13^2 + 3*s12*s23 - 5*s13*s23 - 
              4*s23^2) + 4*p2q*p3q*(s13^2 - 4*s13*s23 - 2*s23^2 + 
              s12*(s13 + s23)) + p2q^2*(8*s13^2 - 3*s13*s23 - 4*s23^2 + 
              s12*(4*s13 + s23))) + p1q^3*(p2q + p3q)*
           (p2q^2*(-4*s13^3 + 13*s13^2*s23 + 2*(s12 - 2*s23)*s23^2 + 
              s13*s23*(9*s12 + 2*s23)) - p3q^2*(-8*s13^2*s23 + 6*s13*s23^2 + 
              8*s23^3 + s12^2*(4*s13 + s23) - s12*s23*(15*s13 + 2*s23)) + 
            p2q*p3q*(-(s12^2*s23) + s23*(9*s13^2 - 20*s13*s23 - 12*s23^2) + 
              4*s12*(2*s13^2 + 3*s13*s23 + s23^2))) - p1q*(p2q + p3q)^3*
           (p2q^2*(4*s13^3 - 6*s12*s13*s23 - 2*s13^2*s23 + s23^3) - 
            2*p2q*p3q*(s12^2*s23 + s23*(7*s13^2 + 2*s13*s23 - 2*s23^2) + 
              2*s12*(2*s13^2 + 5*s13*s23 + s23^2)) + 
            p3q^2*(s12^2*(4*s13 - 2*s23) - 2*s12*s23*(5*s13 + 2*s23) + 
              s23*(-8*s13^2 - 4*s13*s23 + 3*s23^2))) - 2*p1q^2*(p2q + p3q)^2*
           (p2q^2*(4*s13^3 - 3*s13^2*s23 + s23^2*(-s12 + s23) - 
              s13*s23*(5*s12 + s23)) - p2q*p3q*(s12^2*s23 + s23*(9*s13^2 - 
                2*s13*s23 - 4*s23^2) + 2*s12*(4*s13^2 + 7*s13*s23 + 
                2*s23^2)) + p3q^2*(s12^2*(4*s13 - s23) - 3*s12*s23*(3*s13 + 
                s23) + s23*(-6*s13^2 - s13*s23 + 3*s23^2)))))/
        (16*p1q*(p2q + p3q)^2*(p1q + p2q + p3q)^2*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) + 
       (9*p2q*(s12 + s13 + s23)*(p1q^4*(p2q - p3q)*s23^2 - 
          p1q^3*s23*(-(p3q^2*(3*s12 + 2*s13)) + p2q^2*(s12 + 2*s13 - s23) - 
            3*p2q*p3q*(2*s13 + s23)) - p1q*(p2q + p3q)*
           (-(p2q^3*s13*(s12 + s13)) + p3q^3*s12*(2*s12 + 2*s13 + s23) + 
            p2q*p3q^2*(2*s12^2 + 8*s12*s13 + 6*s13^2 + 3*s12*s23 + s13*s23 - 
              3*s23^2) + p2q^2*p3q*(s12^2 + 7*s12*s13 + 6*s13^2 + 2*s12*s23 + 
              s13*s23 - s23^2)) - p2q*p3q*(p2q + p3q)^2*
           (p2q*s13*(2*s12 + 2*s13 + s23) + p3q*(2*s12^2 + 4*s13*(s13 + 
                s23) + 3*s12*(2*s13 + s23))) - 
          p1q^2*(-(p2q^3*(s13*(s13 - 2*s23) + s12*(s13 - s23))) + 
            p2q^2*p3q*(s12^2 + 6*s12*s13 + 5*s13^2 + 4*s12*s23 - 2*s13*s23 - 
              3*s23^2) + p3q^3*(2*s12^2 + 2*s12*(s13 - s23) - 
              s23*(2*s13 + s23)) + p2q*p3q^2*(3*s12^2 + 6*s13^2 - 4*s13*s23 - 
              4*s23^2 + 3*s12*(3*s13 + s23))))*den[-1 + ep])/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s13*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        Eik[k]] + ((-9*p3q*(s12 + s13 + s23)*(-2*p1q^5*(p2q + p3q)*s23^2*
           (2*s12 + s23) + (p2q + p3q)^5*s23*(p3q*s12*(2*s12 + 2*s13 + s23) + 
            p2q*(4*s12^2 + 6*s12*s13 + 2*s13^2 + 4*s12*s23 + 3*s13*s23)) + 
          p1q^4*s23*(p3q^2*(8*s12^2 + s12*(4*s13 - 3*s23) + (s13 - 4*s23)*
               s23) + 4*p2q*p3q*(s12^2 + s12*(s13 - 4*s23) + 
              (s13 - 2*s23)*s23) + p2q^2*(4*s12^2 + 8*s12*s13 - 5*s12*s23 + 
              3*s13*s23 - 4*s23^2)) - 2*p1q^2*(p2q + p3q)^2*
           (p3q^2*(4*s12^3 - 3*s12^2*s23 + s23^2*(-s13 + s23) - 
              s12*s23*(5*s13 + s23)) - p2q*p3q*(2*s12*(7*s13 - s23)*s23 + 
              s12^2*(8*s13 + 9*s23) + s23*(s13^2 + 4*s13*s23 - 4*s23^2)) - 
            p2q^2*(6*s12^2*s23 + s23*(s13^2 + 3*s13*s23 - 3*s23^2) + 
              s12*(-4*s13^2 + 9*s13*s23 + s23^2))) - p1q*(p2q + p3q)^3*
           (p3q^2*(4*s12^3 - 2*s12^2*s23 - 6*s12*s13*s23 + s23^3) - 
            2*p2q*p3q*(2*s12*s23*(5*s13 + s23) + s12^2*(4*s13 + 7*s23) + 
              s23*(s13^2 + 2*s13*s23 - 2*s23^2)) - p2q^2*(8*s12^2*s23 + 
              s23*(2*s13^2 + 4*s13*s23 - 3*s23^2) + s12*(-4*s13^2 + 
                10*s13*s23 + 4*s23^2))) + p1q^3*(p2q + p3q)*
           (p3q^2*(-4*s12^3 + 13*s12^2*s23 + 2*(s13 - 2*s23)*s23^2 + 
              s12*s23*(9*s13 + 2*s23)) + p2q^2*(8*s12^2*s23 + 
              s12*(-4*s13^2 + 15*s13*s23 - 6*s23^2) - s23*(s13^2 - 
                2*s13*s23 + 8*s23^2)) + p2q*p3q*(4*s12*(3*s13 - 5*s23)*s23 + 
              s12^2*(8*s13 + 9*s23) - s23*(s13^2 - 4*s13*s23 + 12*s23^2)))))/
        (16*p1q*(p2q + p3q)^2*(p1q + p2q + p3q)^2*s12*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (9*p3q*(s12 + s13 + s23)*(p1q^4*(p2q - p3q)*s23^2 - 
          p1q^3*s23*(p2q^2*(2*s12 + 3*s13) + 3*p2q*p3q*(2*s12 + s23) + 
            p3q^2*(-2*s12 - s13 + s23)) + p2q*p3q*(p2q + p3q)^2*
           (p3q*s12*(2*s12 + 2*s13 + s23) + p2q*(4*s12^2 + 6*s12*s13 + 
              2*s13^2 + 4*s12*s23 + 3*s13*s23)) + 
          p1q^2*(-(p3q^3*(s12^2 + s12*(s13 - 2*s23) - s13*s23)) + 
            p2q^2*p3q*(6*s12^2 + 9*s12*s13 + 3*s13^2 - 4*s12*s23 + 
              3*s13*s23 - 4*s23^2) + p2q*p3q^2*(5*s12^2 + 6*s12*s13 + s13^2 - 
              2*s12*s23 + 4*s13*s23 - 3*s23^2) + p2q^3*(2*s13^2 + 
              2*s12*(s13 - s23) - 2*s13*s23 - s23^2)) + p1q*(p2q + p3q)*
           (-(p3q^3*s12*(s12 + s13)) + p2q^3*s13*(2*s12 + 2*s13 + s23) + 
            p2q*p3q^2*(6*s12^2 + s13^2 + 2*s13*s23 - s23^2 + s12*(7*s13 + 
                s23)) + p2q^2*p3q*(6*s12^2 + 2*s13^2 + 3*s13*s23 - 3*s23^2 + 
              s12*(8*s13 + s23))))*den[-1 + ep])/(8*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)))*Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k]] + 
     ((-9*ep*p1q*(s12 + s13 + s23)*(p3q^2*s12*(-3*s12^3 + 
            s12^2*(2*s13 - 3*s23) + s13*s23*(-3*s13 + s23) + 
            s12*s13*(-3*s13 + 2*s23)) + p2q^2*s13*(-3*s12^2*(s13 + s23) - 
            3*s13^2*(s13 + s23) + s12*(2*s13^2 + 2*s13*s23 + s23^2)) + 
          p2q*p3q*(3*s13^2*s23*(s13 + s23) + 3*s12^3*(2*s13 + s23) + 
            s12*s13^2*(6*s13 + s23) + s12^2*(-4*s13^2 + s13*s23 + 3*s23^2)) + 
          p1q^2*(2*s12^3*(s13 + s23) + s13*s23*(2*s13^2 + s13*s23 - s23^2) + 
            s12^2*(-4*s13^2 - 2*s13*s23 + s23^2) + 
            s12*(2*s13^3 - 2*s13^2*s23 - 4*s13*s23^2 - s23^3)) + 
          p1q*(p3q*(-2*s12^4 + 2*s12^3*(3*s13 + s23) + s12*s13*(2*s13^2 - 
                4*s13*s23 - s23^2) + s13*s23*(2*s13^2 + s13*s23 - s23^2) + 
              s12^2*(-6*s13^2 + 4*s13*s23 + 4*s23^2)) + 
            p2q*(2*s12^3*(s13 + s23) + s12^2*(-6*s13^2 - 4*s13*s23 + s23^2) + 
              2*s13^2*(-s13^2 + s13*s23 + 2*s23^2) + s12*(6*s13^3 + 
                4*s13^2*s23 - s13*s23^2 - s23^3)))))/
        (16*s12*s13*(-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*
           (s12 + s23) - p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (9*(s12 + s13 + s23)*(p1q^7*s23^2*(s13*s23^2*(s13 + s23)^2 + 
            s12*s23*(s13 + s23)^2*(8*s13 + s23) + 
            s12^3*(8*s13^2 + 8*s13*s23 + s23^2) + 
            s12^2*(8*s13^3 + 24*s13^2*s23 + 17*s13*s23^2 + 2*s23^3)) + 
          (p2q + p3q)^4*(-(p3q*s12) + p2q*s13)*s23*(s12 + s13 + s23)*
           (p2q^2*s13*(s13*s23*(s13 + s23) + s12^2*(2*s13 + s23) + 
              s12*(2*s13^2 - s23^2)) - p3q^2*s12*(s13*(s13 - s23)*s23 + 
              s12^2*(2*s13 + s23) + s12*(2*s13^2 + s23^2)) + 
            p2q*p3q*(-2*s12^3*s13 - s13*s23^2*(s13 + s23) + s12^2*s23*(
                2*s13 + s23) + s12*(2*s13^3 - 2*s13^2*s23 + s23^3))) - 
          p1q^6*s23*(p2q*(s12^4*(8*s13^2 + 9*s13*s23 + 2*s23^2) + 
              s13*s23^2*(4*s13^3 + 7*s13^2*s23 + 5*s13*s23^2 + 2*s23^3) + 
              s12^3*(8*s13^3 - 5*s13^2*s23 - 7*s13*s23^2 + 3*s23^3) + 
              s12*s23*(25*s13^4 + 27*s13^3*s23 - 4*s13^2*s23^2 - 
                5*s13*s23^3 + 2*s23^4) + s12^2*(16*s13^4 + 19*s13^3*s23 - 
                26*s13^2*s23^2 - 22*s13*s23^3 + 3*s23^4)) + 
            p3q*(s12^4*(16*s13^2 + 25*s13*s23 + 4*s23^2) + s13*s23^2*(
                2*s13^3 + 3*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) + 
              s12^3*(8*s13^3 + 19*s13^2*s23 + 27*s13*s23^2 + 7*s23^3) + 
              s12*s23*(9*s13^4 - 7*s13^3*s23 - 22*s13^2*s23^2 - 5*s13*s23^3 + 
                2*s23^4) + s12^2*(8*s13^4 - 5*s13^3*s23 - 26*s13^2*s23^2 - 
                4*s13*s23^3 + 5*s23^4))) - p1q*(p2q + p3q)^2*
           (p3q^4*s12*(4*s12^5*(2*s13 + s23) + s12^3*s23*(5*s13^2 + 
                11*s13*s23 + s23^2) + s12^4*(8*s13^2 + 9*s13*s23 + 4*s23^2) + 
              s13*s23^2*(2*s13^3 + s13^2*s23 + s13*s23^2 - 2*s23^3) + 
              s12^2*s23*(-5*s13^3 + 16*s13^2*s23 + 20*s13*s23^2 + 3*s23^3) + 
              s12*s23*(3*s13^4 - s13^3*s23 + 14*s13^2*s23^2 + 9*s13*s23^3 + 
                2*s23^4)) + p2q^2*p3q^2*(-(s12^5*s23*(25*s13 + 6*s23)) + 
              3*s13^3*s23^2*(-2*s13^2 - s13*s23 + s23^2) + s12^2*s13*s23*(
                68*s13^3 + 81*s13^2*s23 - 8*s13*s23^2 - 12*s23^3) + 
              s12^4*(48*s13^3 + 68*s13^2*s23 + 21*s13*s23^2 - 3*s23^3) + 
              s12*s13*s23*(-25*s13^4 + 21*s13^3*s23 + 35*s13^2*s23^2 - 
                12*s13*s23^3 - 16*s23^4) + s12^3*(48*s13^4 + 138*s13^3*s23 + 
                81*s13^2*s23^2 + 35*s13*s23^3 + 3*s23^4)) + 
            p2q^4*s13*(s12^4*s23*(3*s13 + 2*s23) + s12^3*s23*(-5*s13^2 - 
                s13*s23 + s23^2) + s12^2*(8*s13^4 + 5*s13^3*s23 + 
                16*s13^2*s23^2 + 14*s13*s23^3 + s23^4) + s13*s23*(4*s13^4 + 
                4*s13^3*s23 + s13^2*s23^2 + 3*s13*s23^3 + 2*s23^4) + 
              s12*(8*s13^5 + 9*s13^4*s23 + 11*s13^3*s23^2 + 20*s13^2*s23^3 + 
                9*s13*s23^4 - 2*s23^5)) + p2q^3*p3q*(-3*s12^5*s13*s23 + 
              s12^4*s23*(26*s13^2 + 17*s13*s23 + 2*s23^2) + 
              s12^3*(-32*s13^4 - 32*s13^3*s23 - 13*s13^2*s23^2 + 
                3*s13*s23^3 + 2*s23^4) + s13*s23*(4*s13^5 - 2*s13^4*s23 - 
                4*s13^3*s23^2 + 4*s13^2*s23^3 + s13*s23^4 - s23^5) - 
              s12^2*(32*s13^5 + 78*s13^4*s23 + 35*s13^3*s23^2 + 
                22*s13^2*s23^3 + 13*s13*s23^4 - s23^5) + s12*s23*(-45*s13^5 - 
                31*s13^4*s23 + 21*s13^3*s23^2 + 3*s13^2*s23^3 - 
                10*s13*s23^4 + s23^5)) + p2q*p3q^3*(4*s12^6*s23 - 
              s12^5*(32*s13^2 + 45*s13*s23 + 2*s23^2) + s13*s23^3*(2*s13^3 + 
                2*s13^2*s23 + s13*s23^2 + s23^3) + s12^3*s23*(-32*s13^3 - 
                35*s13^2*s23 + 21*s13*s23^2 + 4*s23^3) - s12^4*(32*s13^3 + 
                78*s13^2*s23 + 31*s13*s23^2 + 4*s23^3) + s12^2*s23*(
                26*s13^4 - 13*s13^3*s23 - 22*s13^2*s23^2 + 3*s13*s23^3 + 
                s23^4) - s12*s23*(3*s13^5 - 17*s13^4*s23 - 3*s13^3*s23^2 + 
                13*s13^2*s23^3 + 10*s13*s23^4 + s23^5))) + 
          p1q^5*(p3q^2*(s12^5*(8*s13^2 + 25*s13*s23 + 5*s23^2) + 
              s12^4*(8*s13^3 - 19*s13^2*s23 - 26*s13*s23^2 + 2*s23^3) - 
              s12^3*s23*(-3*s13^3 + 41*s13^2*s23 + 53*s13*s23^2 + 2*s23^3) - 
              s13*s23^3*(4*s13^3 + 7*s13^2*s23 + 14*s13*s23^2 + 11*s23^3) + 
              s12*s23^2*(-26*s13^4 + 10*s13^3*s23 + 25*s13^2*s23^2 - 
                9*s13*s23^3 - 6*s23^4) + s12^2*s23*(-25*s13^4 + 
                16*s13^3*s23 + 33*s13^2*s23^2 - 5*s13*s23^3 - 5*s23^4)) - 
            p2q^2*(s12^4*s23*(25*s13^2 + 26*s13*s23 + 4*s23^2) - 
              s12^3*(8*s13^4 + 3*s13^3*s23 + 16*s13^2*s23^2 + 10*s13*s23^3 - 
                7*s23^4) + s13*s23^2*(-5*s13^4 - 2*s13^3*s23 + 2*s13^2*
                 s23^2 + 5*s13*s23^3 + 6*s23^4) + s12*s23*(-25*s13^5 + 
                26*s13^4*s23 + 53*s13^3*s23^2 + 5*s13^2*s23^3 + 9*s13*s23^4 + 
                11*s23^5) + s12^2*(-8*s13^5 + 19*s13^4*s23 + 41*s13^3*s23^2 - 
                33*s13^2*s23^3 - 25*s13*s23^4 + 14*s23^5)) + 
            p2q*p3q*(s12^5*s23*(9*s13 + 4*s23) - s12^4*(16*s13^3 + 
                92*s13^2*s23 + 87*s13*s23^2 + 3*s23^3) + s13*s23^2*(4*s13^4 - 
                3*s13^3*s23 - 7*s13^2*s23^2 - 16*s13*s23^3 - 16*s23^4) + 
              s12^2*s23*(-92*s13^4 - 69*s13^3*s23 + 76*s13^2*s23^2 + 
                36*s13*s23^3 - 16*s23^4) - s12^3*(16*s13^4 + 58*s13^3*s23 + 
                69*s13^2*s23^2 + 55*s13*s23^3 + 7*s23^4) - 
              s12*s23*(-9*s13^5 + 87*s13^4*s23 + 55*s13^3*s23^2 - 
                36*s13^2*s23^3 + 8*s13*s23^4 + 16*s23^5))) + 
          p1q^4*(p3q^3*(-2*s12^6*(4*s13 + s23) + s12^5*(16*s13^2 + 
                60*s13*s23 + 9*s23^2) + s13*s23^3*(-2*s13^3 + s13^2*s23 - 
                10*s13*s23^2 - 13*s23^3) + s12^3*s23*(40*s13^3 - 
                23*s13^2*s23 - 26*s13*s23^2 + 6*s23^3) + s12^4*(24*s13^3 + 
                10*s13^2*s23 + 23*s13*s23^2 + 7*s23^3) + s12*s23^2*(
                -34*s13^4 + 30*s13^3*s23 + 55*s13^2*s23^2 + 10*s13*s23^3 - 
                3*s23^4) + s12^2*s23*(-36*s13^4 + 49*s13^3*s23 + 
                61*s13^2*s23^2 + 32*s13*s23^3 + 7*s23^4)) + 
            p2q^2*p3q*(2*s12^5*s23*(11*s13 + 4*s23) - s12^4*(56*s13^3 + 
                216*s13^2*s23 + 169*s13*s23^2 + 2*s23^3) - s12^3*(16*s13^4 + 
                92*s13^3*s23 + 101*s13^2*s23^2 + 57*s13*s23^3 - 7*s23^4) + 
              s12*s23*(98*s13^5 - 115*s13^4*s23 - 135*s13^3*s23^2 + 
                80*s13^2*s23^3 + 13*s13*s23^4 - 31*s23^5) + 
              s13*s23*(-2*s13^5 + 16*s13^4*s23 + 4*s13^3*s23^2 + 
                9*s13^2*s23^3 + 2*s13*s23^4 - 21*s23^5) + s12^2*(40*s13^5 - 
                138*s13^4*s23 - 175*s13^3*s23^2 + 120*s13^2*s23^3 + 
                114*s13*s23^4 - 14*s23^5)) - p2q*p3q^2*(2*s12^6*s23 - 
              2*s12^5*(20*s13^2 + 49*s13*s23 + 8*s23^2) + s12^4*(16*s13^3 + 
                138*s13^2*s23 + 115*s13*s23^2 - 4*s23^3) + s12^3*(56*s13^4 + 
                92*s13^3*s23 + 175*s13^2*s23^2 + 135*s13*s23^3 - 9*s23^4) + 
              s12^2*s23*(216*s13^4 + 101*s13^3*s23 - 120*s13^2*s23^2 - 
                80*s13*s23^3 - 2*s23^4) + s13*s23^2*(-8*s13^4 + 2*s13^3*s23 - 
                7*s13^2*s23^2 + 14*s13*s23^3 + 31*s23^4) + 
              s12*s23*(-22*s13^5 + 169*s13^4*s23 + 57*s13^3*s23^2 - 
                114*s13^2*s23^3 - 13*s13*s23^4 + 21*s23^5)) + 
            p2q^3*(-2*s12^4*s23*(18*s13^2 + 17*s13*s23 + s23^2) + 
              s12^3*(24*s13^4 + 40*s13^3*s23 + 49*s13^2*s23^2 + 
                30*s13*s23^3 + s23^4) + s12^2*(16*s13^5 + 10*s13^4*s23 - 
                23*s13^3*s23^2 + 61*s13^2*s23^3 + 55*s13*s23^4 - 10*s23^5) + 
              s13*s23*(-2*s13^5 + 9*s13^4*s23 + 7*s13^3*s23^2 + 
                6*s13^2*s23^3 + 7*s13*s23^4 - 3*s23^5) + s12*(-8*s13^6 + 
                60*s13^5*s23 + 23*s13^4*s23^2 - 26*s13^3*s23^3 + 
                32*s13^2*s23^4 + 10*s13*s23^5 - 13*s23^6))) + 
          p1q^3*(p3q^4*(-6*s12^6*(4*s13 + s23) + s12^5*s23*(40*s13 + 7*s23) + 
              s12^3*s13*s23*(48*s13^2 - 25*s13*s23 - 13*s23^2) + 
              6*s13*s23^4*(s13^2 - s23^2) + s12^4*(24*s13^3 + 12*s13^2*s23 + 
                39*s13*s23^2 + 7*s23^3) + s12*s23^2*(-26*s13^4 + 
                25*s13^3*s23 + 49*s13^2*s23^2 + 27*s13*s23^3 + s23^4) + 
              s12^2*s23*(-30*s13^4 + 45*s13^3*s23 + 29*s13^2*s23^2 + 
                35*s13*s23^3 + 7*s23^4)) + p2q*p3q^3*(-2*s12^6*(8*s13 + 
                5*s23) + 2*s12^5*(48*s13^2 + 95*s13*s23 + 13*s23^2) + 
              s12^4*(48*s13^3 + 16*s13^2*s23 + 16*s13*s23^2 + 17*s23^3) + 
              s13*s23^2*(8*s13^4 - s13^3*s23 + 17*s13^2*s23^2 + 3*s13*s23^3 - 
                23*s23^4) + s12^3*(-64*s13^4 + 8*s13^3*s23 - 104*s13^2*
                 s23^2 - 110*s13*s23^3 + 13*s23^4) + s12^2*s23*(-230*s13^4 - 
                8*s13^3*s23 + 140*s13^2*s23^2 + 119*s13*s23^3 + 27*s23^4) + 
              s12*s23*(26*s13^5 - 162*s13^4*s23 - 14*s13^3*s23^2 + 
                159*s13^2*s23^3 + 74*s13*s23^4 - 5*s23^5)) + 
            p2q^2*p3q^2*(-4*s12^6*s23 + s12^5*(56*s13^2 + 144*s13*s23 + 
                27*s23^2) - 3*s12^4*(40*s13^3 + 108*s13^2*s23 + 
                69*s13*s23^2 - 3*s23^3) - 4*s12^3*(30*s13^4 + 68*s13^3*s23 + 
                69*s13^2*s23^2 + 42*s13*s23^3 - 6*s23^4) + 
              s13*s23*(-4*s13^5 + 27*s13^4*s23 + 9*s13^3*s23^2 + 
                24*s13^2*s23^3 + 23*s13*s23^4 - 23*s23^5) + 
              s12*s23*(144*s13^5 - 207*s13^4*s23 - 168*s13^3*s23^2 + 
                186*s13^2*s23^3 + 94*s13*s23^4 - 23*s23^5) + 
              s12^2*(56*s13^5 - 324*s13^4*s23 - 276*s13^3*s23^2 + 
                158*s13^2*s23^3 + 186*s13*s23^4 + 23*s23^5)) + 
            p2q^3*p3q*(2*s12^5*s23*(13*s13 + 4*s23) - s12^4*(64*s13^3 + 
                230*s13^2*s23 + 162*s13*s23^2 + s23^3) + s12^3*(48*s13^4 + 
                8*s13^3*s23 - 8*s13^2*s23^2 - 14*s13*s23^3 + 17*s23^4) + 
              s13*s23*(-10*s13^5 + 26*s13^4*s23 + 17*s13^3*s23^2 + 
                13*s13^2*s23^3 + 27*s13*s23^4 - 5*s23^5) + s12^2*(96*s13^5 + 
                16*s13^4*s23 - 104*s13^3*s23^2 + 140*s13^2*s23^3 + 
                159*s13*s23^4 + 3*s23^5) + s12*(-16*s13^6 + 190*s13^5*s23 + 
                16*s13^4*s23^2 - 110*s13^3*s23^3 + 119*s13^2*s23^4 + 
                74*s13*s23^5 - 23*s23^6)) + p2q^4*(-2*s12^4*s13*s23*(15*s13 + 
                13*s23) + s12^2*s13*s23*(12*s13^3 - 25*s13^2*s23 + 
                29*s13*s23^2 + 49*s23^3) + s12^3*(24*s13^4 + 48*s13^3*s23 + 
                45*s13^2*s23^2 + 25*s13*s23^3 + 6*s23^4) + 
              s13*s23*(-6*s13^5 + 7*s13^4*s23 + 7*s13^3*s23^2 + 7*s13*s23^4 + 
                s23^5) + s12*(-24*s13^6 + 40*s13^5*s23 + 39*s13^4*s23^2 - 
                13*s13^3*s23^3 + 35*s13^2*s23^4 + 27*s13*s23^5 - 6*s23^6))) + 
          p1q^2*(p3q^5*(-8*s12^6*(3*s13 + s23) + s13*s23^4*(2*s13^2 + 
                s13*s23 - s23^2) - 2*s12^5*(8*s13^2 + 3*s13*s23 + s23^2) + 
              s12^2*s13*s23*(-14*s13^3 + 15*s13^2*s23 - 15*s13*s23^2 + 
                3*s23^3) + s12^4*(8*s13^3 - 10*s13^2*s23 + s13*s23^2 + 
                3*s23^3) - s12^3*s23*(-22*s13^3 + 35*s13^2*s23 + 
                25*s13*s23^2 + 4*s23^3) + s12*s23^2*(-11*s13^4 + 
                5*s13^3*s23 + 13*s13^2*s23^2 + 15*s13*s23^3 + s23^4)) + 
            p2q*p3q^4*(-4*s12^6*(8*s13 + 5*s23) + 4*s12^5*(18*s13^2 + 
                29*s13*s23 + s23^2) + s12^4*(80*s13^3 + 114*s13^2*s23 + 
                43*s13*s23^2 + 7*s23^3) + s13*s23^2*(4*s13^4 + 8*s13^2*
                 s23^2 + 5*s13*s23^3 - 7*s23^4) - 3*s12^3*(8*s13^4 - 
                26*s13^3*s23 + 11*s13^2*s23^2 + 35*s13*s23^3 + 4*s23^4) + 
              s12^2*s23*(-126*s13^4 + 33*s13^3*s23 + 37*s13^2*s23^2 + 
                29*s13*s23^3 + 8*s23^4) + s12*s23*(14*s13^5 - 83*s13^4*s23 - 
                3*s13^3*s23^2 + 77*s13^2*s23^3 + 59*s13*s23^4 + 3*s23^5)) + 
            p2q^2*p3q^3*(-8*s12^6*(s13 + 2*s23) + 2*s12^5*(56*s13^2 + 
                100*s13*s23 + 9*s23^2) - s12^4*(48*s13^3 + 96*s13^2*s23 + 
                74*s13*s23^2 - 5*s23^3) - 2*s12^3*(72*s13^4 + 130*s13^3*s23 + 
                123*s13^2*s23^2 + 106*s13*s23^3 + 4*s23^4) + 
              s13*s23*(-4*s13^5 + 16*s13^4*s23 + s13^3*s23^2 + 6*s13^2*
                 s23^3 + 15*s13*s23^4 - 10*s23^5) - 2*s12*s23*(-46*s13^5 + 
                94*s13^4*s23 + 70*s13^3*s23^2 - 61*s13^2*s23^3 - 
                51*s13*s23^4 + s23^5) + s12^2*(24*s13^5 - 332*s13^4*s23 - 
                230*s13^3*s23^2 + 58*s13^2*s23^3 + 84*s13*s23^4 + 
                19*s23^5)) + p2q^4*p3q*(2*s12^5*s23*(7*s13 + 2*s23) - 
              s12^4*s13*(24*s13^2 + 126*s13*s23 + 83*s23^2) + 
              s12^3*(80*s13^4 + 78*s13^3*s23 + 33*s13^2*s23^2 - 3*s13*s23^3 + 
                8*s23^4) + s13*s23*(-20*s13^5 + 4*s13^4*s23 + 7*s13^3*s23^2 - 
                12*s13^2*s23^3 + 8*s13*s23^4 + 3*s23^5) + s12^2*(72*s13^5 + 
                114*s13^4*s23 - 33*s13^3*s23^2 + 37*s13^2*s23^3 + 
                77*s13*s23^4 + 5*s23^5) + s12*(-32*s13^6 + 116*s13^5*s23 + 
                43*s13^4*s23^2 - 105*s13^3*s23^3 + 29*s13^2*s23^4 + 
                59*s13*s23^5 - 7*s23^6)) + p2q^5*(-(s12^4*s13*s23*
                (14*s13 + 11*s23)) + s12^3*(8*s13^4 + 22*s13^3*s23 + 
                15*s13^2*s23^2 + 5*s13*s23^3 + 2*s23^4) + s13*s23*(-8*s13^5 - 
                2*s13^4*s23 + 3*s13^3*s23^2 - 4*s13^2*s23^3 + s23^5) + 
              s12^2*(-16*s13^5 - 10*s13^4*s23 - 35*s13^3*s23^2 - 
                15*s13^2*s23^3 + 13*s13*s23^4 + s23^5) - s12*(24*s13^6 + 
                6*s13^5*s23 - s13^4*s23^2 + 25*s13^3*s23^3 - 3*s13^2*s23^4 - 
                15*s13*s23^5 + s23^6)) + p2q^3*p3q^2*(-4*s12^6*s23 + 
              4*s12^5*(6*s13^2 + 23*s13*s23 + 4*s23^2) + s12^4*(-144*s13^3 - 
                332*s13^2*s23 - 188*s13*s23^2 + s23^3) - 2*s12^3*(24*s13^4 + 
                130*s13^3*s23 + 115*s13^2*s23^2 + 70*s13*s23^3 - 3*s23^4) + 
              s13*s23*(-16*s13^5 + 18*s13^4*s23 + 5*s13^3*s23^2 - 
                8*s13^2*s23^3 + 19*s13*s23^4 - 2*s23^5) + s12^2*(112*s13^5 - 
                96*s13^4*s23 - 246*s13^3*s23^2 + 58*s13^2*s23^3 + 
                122*s13*s23^4 + 15*s23^5) - 2*s12*(4*s13^6 - 100*s13^5*s23 + 
                37*s13^4*s23^2 + 106*s13^3*s23^3 - 42*s13^2*s23^4 - 
                51*s13*s23^5 + 5*s23^6)))))/(16*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13*s23^2*(p1q^3*s23*(s12 + s23)*
           (s13 + s23) + (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - (9*(s12 + s13 + s23)^2*
         (p1q^6*s23^2*(p3q*s12*(s12 - s13 + s23)*(s13 + s23) + 
            p2q*s13*(s12 + s23)*(-s12 + s13 + s23)) - p2q*p3q*(p2q + p3q)^2*
           (-(p3q*s12) + p2q*s13)*(p2q^2*s13*(s13*s23*(s13 + s23) + 
              s12^2*(2*s13 + s23) + s12*(2*s13^2 - s23^2)) - 
            p3q^2*s12*(s13*(s13 - s23)*s23 + s12^2*(2*s13 + s23) + 
              s12*(2*s13^2 + s23^2)) + p2q*p3q*(-2*s12^3*s13 - 
              s13*s23^2*(s13 + s23) + s12^2*s23*(2*s13 + s23) + 
              s12*(2*s13^3 - 2*s13^2*s23 + s23^3))) + 
          p1q^5*s23*(p3q^2*s12*(s13^3 - s13^2*s23 + s13*s23^2 + 3*s23^3 - 
              s12^2*(s13 + 2*s23) + s12*(2*s13^2 + 5*s13*s23 + s23^2)) + 
            p2q^2*s13*(s12^3 + s12^2*(2*s13 - s23) + s12*(-s13^2 + 
                5*s13*s23 + s23^2) + s23*(-2*s13^2 + s13*s23 + 3*s23^2)) + 
            2*p2q*p3q*(s12^3*s13 + s13*s23^2*(s13 + s23) + s12^2*(-4*s13^2 - 
                4*s13*s23 + s23^2) + s12*(s13^3 - 4*s13^2*s23 - 6*s13*s23^2 + 
                s23^3))) - p1q^2*(p3q^5*s12^2*(s13^3 + 2*s13^2*s23 + 
              s13*s23^2 + 2*s23^3 - s12^2*(2*s13 + 3*s23) - s12*(s13^2 - 
                4*s13*s23 + s23^2)) + p2q^5*s13^2*(s12^3 - s12^2*(s13 - 
                2*s23) + s12*(-2*s13^2 + 4*s13*s23 + s23^2) + 
              s23*(-3*s13^2 - s13*s23 + 2*s23^2)) + p2q*p3q^4*
             (-6*s12^5 + s12^4*(13*s13 - 7*s23) + s12^3*(6*s13^2 + 
                5*s13*s23 + 6*s23^2) + s13*s23*(2*s13^3 + 2*s13^2*s23 - 
                s13*s23^2 - s23^3) + s12^2*(-12*s13^3 + 6*s13^2*s23 - 
                10*s13*s23^2 + 7*s23^3) + s12*s13*(s13^3 - 13*s13^2*s23 - 
                2*s13*s23^2 + 7*s23^3)) + p2q^3*p3q^2*(-2*s12^5 + 
              s12^4*(17*s13 + 8*s23) + s12^3*(-45*s13^2 - 30*s13*s23 + 
                13*s23^2) + s12^2*(-25*s13^3 - 5*s13^2*s23 - 7*s13*s23^2 + 
                s23^3) + s12*(31*s13^4 - 18*s13^3*s23 - 18*s13^2*s23^2 + 
                26*s13*s23^3 - 2*s23^4) + s13*(-8*s13^4 + s13^3*s23 + 
                16*s13^2*s23^2 + 6*s13*s23^3 - s23^4)) + 
            p2q^4*p3q*(s12^4*(s13 + 2*s23) + s12^3*(-12*s13^2 - 13*s13*s23 + 
                2*s23^2) + s12^2*(6*s13^3 + 6*s13^2*s23 - 2*s13*s23^2 - 
                s23^3) + s13^2*(-6*s13^3 - 7*s13^2*s23 + 6*s13*s23^2 + 
                7*s23^3) + s12*(13*s13^4 + 5*s13^3*s23 - 10*s13^2*s23^2 + 
                7*s13*s23^3 - s23^4)) + p2q^2*p3q^3*(-8*s12^5 + 
              s12^4*(31*s13 + s23) + s12^3*(-25*s13^2 - 18*s13*s23 + 
                16*s23^2) - s12^2*(45*s13^3 + 5*s13^2*s23 + 18*s13*s23^2 - 
                6*s23^3) + s13*(-2*s13^4 + 8*s13^3*s23 + 13*s13^2*s23^2 + 
                s13*s23^3 - 2*s23^4) + s12*(17*s13^4 - 30*s13^3*s23 - 
                7*s13^2*s23^2 + 26*s13*s23^3 - s23^4))) + 
          p1q*(p2q + p3q)*(p3q^5*s12^3*(s13^2 + s23^2 + s12*(s13 + s23)) + 
            p2q^5*s13^3*(s12^2 + s12*s13 + s23*(s13 + s23)) + 
            p2q^4*p3q*s13*(s12^3*(3*s13 + 4*s23) - s12^2*s13*(7*s13 + 
                5*s23) + s12*(-6*s13^3 + 2*s13^2*s23 + 5*s13*s23^2 - 
                2*s23^3) + s13*(4*s13^3 + 6*s13^2*s23 + 3*s13*s23^2 + 
                s23^3)) + p2q*p3q^4*s12*(4*s12^4 - 6*s12^3*(s13 - s23) + 
              4*s13^3*s23 - 2*s13*s23^3 + s12^2*(-7*s13^2 + 2*s13*s23 + 
                3*s23^2) + s12*(3*s13^3 - 5*s13^2*s23 + 5*s13*s23^2 + 
                s23^3)) - p2q^3*p3q^2*(2*s12^4*(3*s13 + s23) + 
              s12^3*(-21*s13^2 - 14*s13*s23 + s23^2) + s12^2*(-6*s13^3 + 
                s13^2*s23 - 5*s13*s23^2 - 2*s23^3) + s12*(19*s13^4 - 
                2*s13^2*s23^2 + 6*s13*s23^3 - s23^4) + s13*(-2*s13^4 + 
                3*s13^3*s23 + 7*s13^2*s23^2 + 3*s13*s23^3 + s23^4)) + 
            p2q^2*p3q^3*(2*s12^5 - s12^4*(19*s13 + 3*s23) + s12^3*(6*s13^2 - 
                7*s23^2) + s12^2*(21*s13^3 - s13^2*s23 + 2*s13*s23^2 - 
                3*s23^3) + s13*s23*(-2*s13^3 - s13^2*s23 + 2*s13*s23^2 + 
                s23^3) - s12*(6*s13^4 - 14*s13^3*s23 - 5*s13^2*s23^2 + 
                6*s13*s23^3 + s23^4))) + 
          p1q^3*(p2q^4*s13*(s12^3*(-2*s13 + s23) + s12^2*(-s13^2 - 
                2*s13*s23 + s23^2) + s23*(3*s13^3 - 3*s13^2*s23 - 
                5*s13*s23^2 + s23^3) + s12*(s13^3 - 9*s13^2*s23 + s13*s23^2 + 
                s23^3)) + p3q^4*s12*(s12^3*(s13 + 3*s23) - s12^2*(s13^2 + 
                9*s13*s23 + 3*s23^2) + s12*(-2*s13^3 - 2*s13^2*s23 + 
                s13*s23^2 - 5*s23^3) + s23*(s13^3 + s13^2*s23 + s13*s23^2 + 
                s23^3)) + p2q*p3q^3*(2*s12^5 - s12^4*(13*s13 + 3*s23) + 
              2*s12^3*(s13^2 + 2*s13*s23 - 8*s23^2) + s12^2*(13*s13^3 - 
                s13^2*s23 + 21*s13*s23^2 - 7*s23^3) + 2*s13*s23*(-2*s13^3 - 
                2*s13^2*s23 + s13*s23^2 + s23^3) - 2*s12*(2*s13^4 - 
                7*s13^3*s23 + s13^2*s23^2 + 7*s13*s23^3 - 2*s23^4)) - 
            p2q^3*p3q*(4*s12^4*(s13 + s23) + s12^3*(-13*s13^2 - 14*s13*s23 + 
                4*s23^2) + s12^2*(-2*s13^3 + s13^2*s23 + 2*s13*s23^2 - 
                2*s23^3) + s13*(-2*s13^4 + 3*s13^3*s23 + 16*s13^2*s23^2 + 
                7*s13*s23^3 - 4*s23^4) + s12*(13*s13^4 - 4*s13^3*s23 - 
                21*s13^2*s23^2 + 14*s13*s23^3 - 2*s23^4)) + 
            p2q^2*p3q^2*(2*s12^5 - 2*s12^4*(9*s13 + 4*s23) + 
              s12^3*(18*s13^2 + 16*s13*s23 - 15*s23^2) + s12^2*(18*s13^3 - 
                22*s13^2*s23 - 7*s13*s23^2 - s23^3) + s12*(-18*s13^4 + 
                16*s13^3*s23 - 7*s13^2*s23^2 - 44*s13*s23^3 + 4*s23^4) + 
              s13*(2*s13^4 - 8*s13^3*s23 - 15*s13^2*s23^2 - s13*s23^3 + 
                4*s23^4))) + p1q^4*(p2q^3*s13*(-(s12^3*(s13 - 2*s23)) + 
              s12^2*(-s13^2 + 2*s13*s23 + s23^2) + 2*s12*s23*(-3*s13^2 + 
                3*s13*s23 + s23^2) + s23*(s13^3 - 5*s13^2*s23 - 3*s13*s23^2 + 
                3*s23^3)) + p3q^3*s12*(s12^3*s23 - s12^2*(s13^2 + 6*s13*s23 + 
                5*s23^2) - s12*(s13^3 - 2*s13^2*s23 - 6*s13*s23^2 + 
                3*s23^3) + s23*(2*s13^3 + s13^2*s23 + 2*s13*s23^2 + 
                3*s23^3)) + p2q^2*p3q*(-(s12^4*(3*s13 + 2*s23)) + 
              s12^3*(4*s13^2 + 7*s13*s23 - 2*s23^2) + s12^2*(4*s13^3 - 
                7*s13^2*s23 - 13*s13*s23^2 + 2*s23^3) + s13*s23*(-2*s13^3 - 
                5*s13^2*s23 + 3*s13*s23^2 + 6*s23^3) + s12*(-3*s13^4 + 
                13*s13^3*s23 + 8*s13^2*s23^2 - 21*s13*s23^3 + 2*s23^4)) + 
            p2q*p3q^2*(-2*s13*(s13 - s23)*s23*(s13 + s23)^2 - 
              s12^4*(3*s13 + 2*s23) + s12^3*(4*s13^2 + 13*s13*s23 - 
                5*s23^2) + s12^2*(4*s13^3 - 7*s13^2*s23 + 8*s13*s23^2 + 
                3*s23^3) + s12*(-3*s13^4 + 7*s13^3*s23 - 13*s13^2*s23^2 - 
                21*s13*s23^3 + 6*s23^4))))*den[-1 + ep])/
        (8*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*s23*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*p2q*(s12 + s13 + s23)*(p3q^2*s12*(25*s12^3 - 
            13*s12^2*(s13 - 2*s23) + s13*s23*(-3*s13 + s23) + 
            s12*(-2*s13^2 - 4*s13*s23 + s23^2)) + 
          p2q*p3q*(3*s13^2*s23*(s13 + s23) - 2*s12^3*(25*s13 + 12*s23) + 
            s12^2*(26*s13^2 - 4*s13*s23 - 24*s23^2) + 
            s12*s13*(4*s13^2 + 5*s13*s23 + 6*s23^2)) + 
          p1q^2*(-(s12^3*(18*s13 + 17*s23)) + 2*s12^2*(9*s13^2 + 4*s13*s23 - 
              5*s23^2) + s13*s23*(s13^2 - s13*s23 - 2*s23^2) + 
            s12*s23*(8*s13^2 + 16*s13*s23 + 7*s23^2)) - 
          p2q^2*s13*(-(s12^2*(25*s13 + 24*s23)) + s13*(2*s13^2 + s13*s23 - 
              s23^2) + s12*(13*s13^2 + 22*s13*s23 + 8*s23^2)) + 
          p1q*(p3q*(17*s12^4 - s12^3*(46*s13 + 15*s23) + s12^2*(10*s13^2 - 
                25*s13*s23 - 33*s23^2) + s13*s23*(2*s13^2 + s13*s23 - 
                s23^2) + s12*(s13^3 + s13^2*s23 + 4*s13*s23^2 - s23^3)) - 
            p2q*(s12^3*(17*s13 + 16*s23) + s12^2*(-46*s13^2 - 37*s13*s23 + 
                8*s23^2) + s12*(10*s13^3 + 7*s13^2*s23 - 13*s13*s23^2 - 
                8*s23^3) + s13*(s13^3 - 3*s13^2*s23 - 3*s13*s23^2 + 
                s23^3)))))/(16*s12*s13*(-(p3q^2*s12*(s12 + s23)) - 
          p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - p2q^2*s13*(s13 + s23) + 
          p2q*p3q*s23*(s13 + s23) + p1q^2*(s12 + s23)*(s13 + s23) + 
          p1q*p2q*(s12 - s13 + s23)*(s13 + s23) + p2q*p3q*s12*
           (2*s13 + s23))) + (p2q*(s12 + s13 + s23)*
         (9*p1q^7*s12*s23^2*(s13 + s23)*(s12^2*(4*s13 + s23) + 
            2*s12*(2*s13^2 + 4*s13*s23 + s23^2) + s23*(3*s13^2 + 4*s13*s23 + 
              s23^2)) + 9*(p2q + p3q)^4*s12*s23*(s12 + s13 + s23)*
           (p2q^3*s13^2*(s12 + s13 - s23)*(s13 + s23) + p3q^3*s12^2*
             (s13^2 + s23^2 + s12*(s13 + s23)) + p2q*p3q^2*s12*
             (s12^2*s13 - 2*s13^3 - s13^2*s23 - 2*s13*s23^2 - s23^3 - 
              s12*(s13^2 + 4*s13*s23 + s23^2)) + p2q^2*p3q*s13*
             (s13^3 + s13^2*s23 + s13*s23^2 + s23^3 - s12^2*(2*s13 + s23) + 
              s12*(-s13^2 + 3*s13*s23 + 2*s23^2))) - 
          p1q^6*s23*(p2q*(18*s12^4*(2*s13^2 + 3*s13*s23 + s23^2) + 
              s23^4*(s13^2 + 5*s13*s23 + 4*s23^2) + s12^3*(36*s13^3 - 
                36*s13^2*s23 - 43*s13*s23^2 + 27*s23^3) + s12*s23*(90*s13^4 + 
                137*s13^3*s23 + 18*s13^2*s23^2 - 5*s13*s23^3 + 23*s23^4) + 
              s12^2*(72*s13^4 + 108*s13^3*s23 - 94*s13^2*s23^2 - 
                99*s13*s23^3 + 28*s23^4)) + p3q*(s23^4*(s13^2 + 5*s13*s23 + 
                4*s23^2) + 9*s12^4*(8*s13^2 + 15*s13*s23 + 4*s23^2) + 
              s12^3*(36*s13^3 + 63*s13^2*s23 + 110*s13*s23^2 + 63*s23^3) + 
              s12*s23*(27*s13^4 - 16*s13^3*s23 - 99*s13^2*s23^2 - 
                32*s13*s23^3 + 23*s23^4) + s12^2*(36*s13^4 - 9*s13^3*s23 - 
                148*s13^2*s23^2 - 54*s13*s23^3 + 46*s23^4))) - 
          p1q*(p2q + p3q)^2*(p3q^4*s12*(36*s12^5*(s13 + s23) + 
              s13*s23^3*(s13^2 - s13*s23 + 2*s23^2) + s12^3*s23*(9*s13^2 + 
                46*s13*s23 + 14*s23^2) + s12^4*(36*s13^2 + 36*s13*s23 + 
                39*s23^2) + s12^2*s23*(-18*s13^3 + 55*s13^2*s23 + 
                84*s13*s23^2 + 31*s23^3) + s12*s23*(9*s13^4 + 12*s13^3*s23 + 
                26*s13^2*s23^2 + 48*s13*s23^3 + 20*s23^4)) + 
            p2q^4*s13*(18*s12^4*s23*(s13 + s23) + s12^3*s23*(-27*s13^2 - 
                15*s13*s23 + 10*s23^2) + s13*s23^2*(3*s13^3 + 5*s13^2*s23 + 
                4*s13*s23^2 + 2*s23^3) + s12^2*(36*s13^4 + 36*s13^3*s23 + 
                91*s13^2*s23^2 + 98*s13*s23^3 + 8*s23^4) + s12*(36*s13^5 + 
                45*s13^4*s23 + 55*s13^3*s23^2 + 102*s13^2*s23^3 + 
                39*s13*s23^4 - 16*s23^5)) + p2q^2*p3q^2*
             (-3*s12^5*s23*(60*s13 + 17*s23) + s12^4*(216*s13^3 + 
                333*s13^2*s23 + 160*s13*s23^2 - 24*s23^3) + s13*s23^2*(
                3*s13^4 + 3*s13^3*s23 + 2*s13^2*s23^2 - 2*s13*s23^3 - 
                4*s23^4) + s12^2*s23*(279*s13^4 + 315*s13^3*s23 - 
                50*s13^2*s23^2 - 80*s13*s23^3 - 2*s23^4) + s12^3*(216*s13^4 + 
                621*s13^3*s23 + 414*s13^2*s23^2 + 212*s13*s23^3 + 29*s23^4) - 
              s12*s23*(45*s13^5 - 7*s13^4*s23 - 95*s13^3*s23^2 + 
                44*s13^2*s23^3 + 76*s13*s23^4 + 4*s23^5)) + 
            p2q^3*p3q*(-18*s12^5*s13*s23 + s12^4*s23*(171*s13^2 + 
                156*s13*s23 + 17*s23^2) + s13*s23^2*(6*s13^4 + 9*s13^3*s23 + 
                7*s13^2*s23^2 + 2*s13*s23^3 - 2*s23^4) + s12^3*(-144*s13^4 - 
                135*s13^3*s23 - 59*s13^2*s23^2 + 43*s13*s23^3 + 17*s23^4) - 
              s12^2*(144*s13^5 + 315*s13^4*s23 + 180*s13^3*s23^2 + 
                89*s13^2*s23^3 + 70*s13*s23^4 - 7*s23^5) + 
              s12*s23*(-135*s13^5 - 139*s13^4*s23 + 74*s13^3*s23^2 + 
                19*s13^2*s23^3 - 45*s13*s23^4 + 7*s23^5)) + 
            p2q*p3q^3*(36*s12^6*s23 - 6*s12^5*(24*s13^2 + 45*s13*s23 + 
                2*s23^2) - s13*s23^3*(s13^3 + s13^2*s23 + 2*s13*s23^2 + 
                2*s23^3) - s12^4*(144*s13^3 + 387*s13^2*s23 + 148*s13*s23^2 + 
                27*s23^3) + s12^3*s23*(-153*s13^3 - 135*s13^2*s23 + 
                119*s13*s23^2 + 43*s23^3) + s12^2*s23*(63*s13^4 - 
                50*s13^3*s23 - 125*s13^2*s23^2 + 10*s13*s23^3 + 11*s23^4) - 
              s12*s23*(9*s13^5 + 15*s13^4*s23 + 20*s13^3*s23^2 + 
                61*s13^2*s23^3 + 45*s13*s23^4 + 11*s23^5))) + 
          p1q^5*(p3q^2*(9*s12^5*(4*s13^2 + 14*s13*s23 + 5*s23^2) - 
              s12^3*s23^2*(119*s13^2 + 228*s13*s23 + 17*s23^2) + 
              s23^4*(3*s13^3 + 10*s13^2*s23 - s13*s23^2 - 8*s23^3) + 
              s12^4*(36*s13^3 - 99*s13^2*s23 - 205*s13*s23^2 + 18*s23^3) + 
              s12*s23^2*(-70*s13^4 - 13*s13^3*s23 + 159*s13^2*s23^2 + 
                40*s13*s23^3 - 54*s23^4) + s12^2*s23*(-99*s13^4 - 
                11*s13^3*s23 + 250*s13^2*s23^2 + 104*s13*s23^3 - 36*s23^4)) - 
            p2q^2*(2*s12^4*s23*(63*s13^2 + 80*s13*s23 + 18*s23^2) + 
              s23^4*(-s13^3 - 9*s13^2*s23 + 8*s23^3) - s12^3*(36*s13^4 + 
                27*s13^3*s23 + 151*s13^2*s23^2 + 95*s13*s23^3 - 60*s23^4) + 
              s12*s23*(-99*s13^5 + 25*s13^4*s23 + 273*s13^3*s23^2 + 
                139*s13^2*s23^3 + 95*s13*s23^4 + 100*s23^5) + 
              s12^2*(-36*s13^5 + 72*s13^4*s23 + 254*s13^3*s23^2 - 
                79*s13^2*s23^3 - 96*s13*s23^4 + 116*s23^5)) + 
            p2q*p3q*(18*s12^5*s23*(3*s13 + 2*s23) + s23^4*(4*s13^3 + 
                19*s13^2*s23 - s13*s23^2 - 16*s23^3) - s12^4*(72*s13^3 + 
                441*s13^2*s23 + 500*s13*s23^2 + 27*s23^3) + s12^2*s23*(
                -387*s13^4 - 490*s13^3*s23 + 374*s13^2*s23^2 + 317*s13*
                 s23^3 - 125*s23^4) - s12^3*(72*s13^4 + 261*s13^3*s23 + 
                139*s13^2*s23^2 + 124*s13*s23^3 + 59*s23^4) - 
              s12*s23*(-27*s13^5 + 275*s13^4*s23 + 403*s13^3*s23^2 - 
                47*s13^2*s23^3 + 10*s13*s23^4 + 145*s23^5))) + 
          p1q^4*(p3q^3*(-18*s12^6*(2*s13 + s23) + 9*s12^5*(8*s13^2 + 
                37*s13*s23 + 9*s23^2) + s12^3*s23*(117*s13^3 - 103*s13^2*
                 s23 - 305*s13*s23^2 + 47*s23^3) + s12^4*(108*s13^3 + 
                18*s13^2*s23 - 69*s13*s23^2 + 64*s23^3) + s23^3*(-2*s13^4 - 
                3*s13^3*s23 + 12*s13^2*s23^2 + 7*s13*s23^3 - 6*s23^4) - 
              2*s12*s23^2*(43*s13^4 + 26*s13^3*s23 - 86*s13^2*s23^2 - 
                49*s13*s23^3 + 9*s23^4) + s12^2*s23*(-126*s13^4 - 
                3*s13^3*s23 + 250*s13^2*s23^2 + 144*s13*s23^3 + 70*s23^4)) + 
            p2q^2*p3q*(72*s12^5*s23*(2*s13 + s23) - 2*s12^4*(126*s13^3 + 
                567*s13^2*s23 + 521*s13*s23^2 + 11*s23^3) - s23^3*(s13^4 + 
                19*s13^3*s23 - 21*s13^2*s23^2 - 17*s13*s23^3 + 22*s23^4) + 
              s12^3*(-72*s13^4 - 351*s13^3*s23 - 64*s13^2*s23^2 + 
                18*s13*s23^3 + 48*s23^4) + s12*s23*(333*s13^5 - 
                80*s13^4*s23 - 721*s13^3*s23^2 + 20*s13^2*s23^3 + 
                22*s13*s23^4 - 264*s23^5) + s12^2*(180*s13^5 - 468*s13^4*
                 s23 - 1082*s13^3*s23^2 + 535*s13^2*s23^3 + 777*s13*s23^4 - 
                100*s23^5)) - p2q*p3q^2*(18*s12^6*s23 - 9*s12^5*(20*s13^2 + 
                61*s13*s23 + 16*s23^2) + s12^4*(72*s13^3 + 774*s13^2*s23 + 
                899*s13*s23^2 - 35*s23^3) + s12^3*(252*s13^4 + 477*s13^3*
                 s23 + 533*s13^2*s23^2 + 622*s13*s23^3 - 62*s23^4) + 
              s12^2*s23*(810*s13^4 + 901*s13^3*s23 - 607*s13^2*s23^2 - 
                614*s13*s23^3 - 39*s23^4) + s23^3*(4*s13^4 + 15*s13^3*s23 - 
                26*s13^2*s23^2 - 15*s13*s23^3 + 22*s23^4) + 
              s12*s23*(-54*s13^5 + 439*s13^4*s23 + 639*s13^3*s23^2 - 
                219*s13^2*s23^3 - 139*s13*s23^4 + 172*s23^5)) + 
            p2q^3*(-2*s12^4*s23*(99*s13^2 + 106*s13*s23 + 10*s23^2) + 
              s23^3*(s13^4 - 7*s13^3*s23 + 7*s13^2*s23^2 + 9*s13*s23^3 - 
                6*s23^4) + s12^3*(108*s13^4 + 243*s13^3*s23 + 420*s13^2*
                 s23^2 + 290*s13*s23^3 + 6*s23^4) + s12^2*(72*s13^5 + 
                72*s13^4*s23 - 112*s13^3*s23^2 + 313*s13^2*s23^3 + 
                325*s13*s23^4 - 78*s23^5) + s12*(-36*s13^6 + 207*s13^5*s23 + 
                300*s13^4*s23^2 + 19*s13^3*s23^3 + 90*s13^2*s23^4 + 
                8*s13*s23^5 - 110*s23^6))) + 
          p1q^3*(p3q^4*(-54*s12^6*(2*s13 + s23) + 2*s12^5*s23*(153*s13 + 
                31*s23) - s12^3*s23*(-162*s13^3 + 18*s13^2*s23 + 
                229*s13*s23^2 + s23^3) + s12^4*(108*s13^3 + 108*s13^2*s23 + 
                151*s13*s23^2 + 70*s23^3) + s23^3*(-2*s13^4 - 7*s13^3*s23 + 
                2*s13^2*s23^2 + 5*s13*s23^3 - 2*s23^4) + s12*s23^2*(
                -50*s13^4 - 49*s13^3*s23 + 93*s13^2*s23^2 + 81*s13*s23^3 + 
                17*s23^4) + s12^2*s23*(-90*s13^4 + 23*s13^3*s23 + 
                136*s13^2*s23^2 + 30*s13*s23^3 + 64*s23^4)) + 
            p2q*p3q^3*(-18*s12^6*(4*s13 + 5*s23) + 2*s12^5*(216*s13^2 + 
                585*s13*s23 + 116*s23^2) + 4*s12^4*(54*s13^3 - 18*s13^2*s23 - 
                53*s13*s23^2 + 43*s23^3) - s12^3*(288*s13^4 + 144*s13^3*s23 + 
                252*s13^2*s23^2 + 673*s13*s23^3 - 112*s23^4) + 
              s23^3*(s13^4 - 17*s13^3*s23 + 17*s13^2*s23^2 + 23*s13*s23^3 - 
                12*s23^4) + s12^2*s23*(-774*s13^4 - 548*s13^3*s23 + 
                787*s13^2*s23^2 + 645*s13*s23^3 + 258*s23^4) + 
              s12*s23*(54*s13^5 - 308*s13^4*s23 - 439*s13^3*s23^2 + 
                384*s13^2*s23^3 + 351*s13*s23^4 - 16*s23^5)) - 
            p2q^2*p3q^2*(36*s12^6*s23 - 2*s12^5*(126*s13^2 + 450*s13*s23 + 
                121*s23^2) + 3*s12^4*(180*s13^3 + 624*s13^2*s23 + 
                495*s13*s23^2 - 32*s23^3) + s12^3*(540*s13^4 + 1224*s13^3*
                 s23 + 850*s13^2*s23^2 + 591*s13*s23^3 - 202*s23^4) + 
              s23^2*(s13^5 - 15*s13^4*s23 + 14*s13^3*s23^2 - 29*s13^2*s23^3 - 
                39*s13*s23^4 + 20*s23^5) + 3*s12*s23*(-132*s13^5 + 
                72*s13^4*s23 + 323*s13^3*s23^2 - 122*s13^2*s23^3 - 
                147*s13*s23^4 + 56*s23^5) - s12^2*(252*s13^5 - 1044*s13^4*
                 s23 - 1714*s13^3*s23^2 + 825*s13^2*s23^3 + 1284*s13*s23^4 + 
                236*s23^5)) + p2q^3*p3q*(36*s12^5*s23*(5*s13 + 2*s23) - 
              2*s12^4*(144*s13^3 + 648*s13^2*s23 + 541*s13*s23^2 + 4*s23^3) + 
              s12^3*(216*s13^4 + 216*s13^3*s23 + 388*s13^2*s23^2 + 
                245*s13*s23^3 + 136*s23^4) + s23^2*(-2*s13^5 + 19*s13^4*s23 - 
                5*s13^3*s23^2 + 15*s13^2*s23^3 + 29*s13*s23^4 - 12*s23^5) + 
              s12^2*(432*s13^5 + 216*s13^4*s23 - 684*s13^3*s23^2 + 
                625*s13^2*s23^3 + 1041*s13*s23^4 + 44*s23^5) + 
              s12*(-72*s13^6 + 540*s13^5*s23 + 508*s13^4*s23^2 - 
                313*s13^3*s23^3 + 348*s13^2*s23^4 + 315*s13*s23^5 - 
                184*s23^6)) + p2q^4*(-2*s12^4*s23*(90*s13^2 + 88*s13*s23 + 
                s23^2) + s12^2*s23^2*(-189*s13^3 + 163*s13^2*s23 + 
                336*s13*s23^2 + 2*s23^3) + s12^3*(108*s13^4 + 270*s13^3*s23 + 
                356*s13^2*s23^2 + 248*s13*s23^3 + 47*s23^4) - 
              s23^2*(s13^5 - 7*s13^4*s23 + s13^3*s23^2 - s13^2*s23^3 - 
                8*s13*s23^4 + 2*s23^5) + s12*(-108*s13^6 + 54*s13^5*s23 + 
                250*s13^4*s23^2 + 122*s13^3*s23^3 + 237*s13^2*s23^4 + 
                144*s13*s23^5 - 49*s23^6))) + 
          p1q^2*(p2q*p3q^4*(-36*s12^6*(4*s13 + 5*s23) + s12^5*(324*s13^2 + 
                810*s13*s23 + 22*s23^2) + 2*s12^4*(180*s13^3 + 261*s13^2*
                 s23 + 89*s13*s23^2 + 32*s23^3) - 3*s12^3*(36*s13^4 - 
                60*s13^3*s23 + 25*s13^2*s23^2 + 198*s13*s23^3 + 35*s23^4) - 
              s23^2*(2*s13^5 + 2*s13^4*s23 + 9*s13^3*s23^2 - 5*s13^2*s23^3 - 
                12*s13*s23^4 + 2*s23^5) + s12*s23*(18*s13^5 - 119*s13^4*s23 - 
                180*s13^3*s23^2 + 197*s13^2*s23^3 + 212*s13*s23^4 + 
                45*s23^5) + s12^2*(-414*s13^4*s23 - 204*s13^3*s23^2 + 
                320*s13^2*s23^3 + 86*s13*s23^4 + 80*s23^5)) - 
            p2q^2*p3q^3*(36*s12^6*(s13 + 4*s23) - 18*s12^5*(28*s13^2 + 
                71*s13*s23 + 8*s23^2) + s12^4*(216*s13^3 + 756*s13^2*s23 + 
                754*s13*s23^2 - 42*s23^3) + s12^3*(648*s13^4 + 1332*s13^3*
                 s23 + 1218*s13^2*s23^2 + 1179*s13*s23^3 + 82*s23^4) + 
              s23^2*(10*s13^5 + 5*s13^4*s23 + 18*s13^3*s23^2 - 11*s13^2*
                 s23^3 - 28*s13*s23^4 + 6*s23^5) - s12*s23*(198*s13^5 - 
                238*s13^4*s23 - 729*s13^3*s23^2 + 254*s13^2*s23^3 + 
                439*s13*s23^4 + 14*s23^5) - s12^2*(108*s13^5 - 1116*s13^4*
                 s23 - 1412*s13^3*s23^2 + 295*s13^2*s23^3 + 516*s13*s23^4 + 
                184*s23^5)) + p2q^4*p3q*(2*s12^5*s23*(54*s13 + 17*s23) - 
              2*s12^4*(54*s13^3 + 360*s13^2*s23 + 298*s13*s23^2 + s23^3) + 
              3*s12^3*(120*s13^4 + 174*s13^3*s23 + 139*s13^2*s23^2 + 
                39*s13*s23^3 + 21*s23^4) + s23^2*(-14*s13^5 + s13^4*s23 + 
                3*s13^3*s23^2 + 8*s13^2*s23^3 + 18*s13*s23^4 - 2*s23^5) + 
              s12^2*(324*s13^5 + 504*s13^4*s23 - 210*s13^3*s23^2 + 
                131*s13^2*s23^3 + 530*s13*s23^4 + 50*s23^5) + 
              s12*(-144*s13^6 + 234*s13^5*s23 + 313*s13^4*s23^2 - 
                279*s13^3*s23^3 + 185*s13^2*s23^4 + 311*s13*s23^5 - 
                51*s23^6)) + p2q^5*(-2*s12^4*s13*s23*(45*s13 + 44*s23) + 
              s13*s23^2*(-4*s13^4 + s13^3*s23 + 3*s13^2*s23^2 + 2*s13*s23^3 + 
                4*s23^4) + s12^3*(36*s13^4 + 108*s13^3*s23 + 93*s13^2*s23^2 + 
                45*s13*s23^3 + 17*s23^4) - s12^2*(72*s13^5 + 126*s13^4*s23 + 
                296*s13^3*s23^2 + 155*s13^2*s23^3 - 90*s13*s23^4 - 
                10*s23^5) - s12*(108*s13^6 + 108*s13^5*s23 + 49*s13^4*s23^2 + 
                99*s13^3*s23^3 - 59*s13^2*s23^4 - 97*s13*s23^5 + 7*s23^6)) + 
            p3q^5*(-36*s12^6*(3*s13 + 2*s23) + s12^5*(-72*s13^2 + 
                54*s13*s23 - 22*s23^2) + s13*s23^4*(-s13^2 + s13*s23 + 
                2*s23^2) + s12^3*s23*(90*s13^3 + s13^2*s23 - 90*s13*s23^2 - 
                33*s23^3) + s12^4*(36*s13^3 + 36*s13^2*s23 + 86*s13*s23^2 + 
                28*s23^3) + 2*s12^2*s23*(-18*s13^4 + 15*s13^3*s23 + 
                35*s13^2*s23^2 - 11*s13*s23^3 + s23^4) + 
              s12*(-7*s13^4*s23^2 + 45*s13^2*s23^4 + 34*s13*s23^5 + 
                13*s23^6)) - p2q^3*p3q^2*(36*s12^6*s23 - 2*s12^5*(54*s13^2 + 
                315*s13*s23 + 67*s23^2) + 2*s12^4*(324*s13^3 + 936*s13^2*
                 s23 + 677*s13*s23^2 - 2*s23^3) + s12^3*(216*s13^4 + 
                1008*s13^3*s23 + 818*s13^2*s23^2 + 603*s13*s23^3 - 
                36*s23^4) + s23^2*(18*s13^5 + 3*s13^4*s23 + 10*s13^3*s23^2 - 
                13*s13^2*s23^3 - 32*s13*s23^4 + 6*s23^5) - s12^2*(504*s13^5 - 
                108*s13^4*s23 - 1092*s13^3*s23^2 + 331*s13^2*s23^3 + 
                848*s13*s23^4 + 146*s23^5) + s12*(36*s13^6 - 522*s13^5*s23 - 
                236*s13^4*s23^2 + 729*s13^3*s23^3 - 228*s13^2*s23^4 - 
                475*s13*s23^5 + 62*s23^6)))))/(16*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13*s23^2*(p1q^3*s23*(s12 + s23)*
           (s13 + s23) + (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + (p2q*(s12 + s13 + s23)^2*
         (p1q^6*s23^2*(p2q*s23*(s12^2 + s12*s23 + s13*(s13 + s23)) + 
            p3q*(s13*s23*(s13 + s23) - s12^2*(9*s13 + 8*s23) + 
              s12*(9*s13^2 - 8*s23^2))) + 9*p2q*p3q*(p2q + p3q)^2*s12*
           (p2q^3*s13^2*(s12 + s13 - s23)*(s13 + s23) + p3q^3*s12^2*
             (s13^2 + s23^2 + s12*(s13 + s23)) + p2q*p3q^2*s12*
             (s12^2*s13 - 2*s13^3 - s13^2*s23 - 2*s13*s23^2 - s23^3 - 
              s12*(s13^2 + 4*s13*s23 + s23^2)) + p2q^2*p3q*s13*
             (s13^3 + s13^2*s23 + s13*s23^2 + s23^3 - s12^2*(2*s13 + s23) + 
              s12*(-s13^2 + 3*s13*s23 + 2*s23^2))) - 
          p1q^5*s23*(p2q^2*s23*(s12^3 + s12^2*(2*s13 - s23) + 
              s13*(2*s13^2 - s13*s23 - 3*s23^2) + s12*(s13^2 + 4*s13*s23 - 
                2*s23^2)) + p2q*p3q*(3*s12^3*s23 + s13*s23*(3*s13^2 - 
                2*s13*s23 - 5*s23^2) + s12^2*(-36*s13^2 - 15*s13*s23 + 
                16*s23^2) + s12*(18*s13^3 - 51*s13^2*s23 - 46*s13*s23^2 + 
                13*s23^3)) + p3q^2*(-(s12^3*(9*s13 + 16*s23)) + 
              s13*s23*(s13^2 - s13*s23 - 2*s23^2) + 2*s12^2*(9*s13^2 + 
                23*s13*s23 + 4*s23^2) + s12*(9*s13^3 - 7*s13^2*s23 + 
                13*s13*s23^2 + 24*s23^3))) + 
          p1q^4*(p2q^3*s23*(s12^3*(s13 - 2*s23) + s12^2*(s13^2 - 2*s13*s23 - 
                s23^2) + s12*(s13^3 + s13^2*s23 - 9*s13*s23^2 + s23^3) + 
              s13*(s13^3 - 5*s13^2*s23 - 3*s13*s23^2 + 3*s23^3)) - 
            p3q^3*(8*s12^4*s23 + s13*s23^2*(2*s13^2 + s13*s23 - s23^2) - 
              s12^3*(9*s13^2 + 55*s13*s23 + 40*s23^2) + s12^2*(-9*s13^3 + 
                17*s13^2*s23 + 53*s13*s23^2 - 24*s23^3) + s12*s23*(17*s13^3 + 
                11*s13^2*s23 + 27*s13*s23^2 + 24*s23^3)) + 
            p2q*p3q^2*(2*s12^4*(9*s13 + 10*s23) + s12^3*(-9*s13^2 - 
                6*s13*s23 + 36*s23^2) - s12^2*(18*s13^3 - 21*s13^2*s23 + 
                82*s13*s23^2 + 31*s23^3) + s12*(9*s13^4 - 60*s13^3*s23 + 
                59*s13^2*s23^2 + 50*s13*s23^3 - 49*s23^4) + s23*(s13^4 - 
                6*s13^3*s23 - 2*s13^2*s23^2 + 3*s13*s23^3 - 2*s23^4)) + 
            p2q^2*p3q*(s12^4*(18*s13 + 19*s23) + 3*s12^3*(-6*s13^2 + 
                s13*s23 + 4*s23^2) + s12^2*(-27*s13^3 + 48*s13^2*s23 + 
                50*s13*s23^2 - 20*s23^3) + s12*(9*s13^4 - 105*s13^3*s23 + 
                8*s13^2*s23^2 + 77*s13*s23^3 - 15*s23^4) + s23*(2*s13^4 - 
                9*s13^3*s23 - 4*s13^2*s23^2 + 5*s13*s23^3 - 2*s23^4))) + 
          p1q^3*(p2q^4*s23*(s12^3*(2*s13 - s23) + 2*s12*s13*(s13^2 + 
                3*s13*s23 - 3*s23^2) + s12^2*(s13^2 + 2*s13*s23 - s23^2) + 
              s13*(3*s13^3 - 3*s13^2*s23 - 5*s13*s23^2 + s23^3)) - 
            p3q^4*(s13^2*s23^2*(s13 + s23) + 3*s12^4*(3*s13 + 8*s23) - 
              s12^3*(9*s13^2 + 83*s13*s23 + 24*s23^2) + s12*s23*(7*s13^3 + 
                7*s13^2*s23 + 15*s13*s23^2 + 8*s23^3) - s12^2*(18*s13^3 + 
                19*s13^2*s23 - 3*s13*s23^2 + 40*s23^3)) + 
            p2q*p3q^3*(-18*s12^5 + s12^4*(63*s13 + 33*s23) + 
              s12^3*(36*s13^2 + 114*s13*s23 + 139*s23^2) + 
              s12*s23*(-84*s13^3 + 9*s13^2*s23 + 30*s13*s23^2 - 29*s23^3) + 
              s23^2*(-5*s13^3 - 2*s13^2*s23 + s13*s23^2 - 2*s23^3) + 
              s12^2*(-45*s13^3 + 33*s13^2*s23 - 60*s13*s23^2 + 61*s23^3)) + 
            p2q^2*p3q^2*(-18*s12^5 + 3*s12^4*(36*s13 + 25*s23) + 
              s12^3*(-45*s13^2 + 26*s13*s23 + 129*s23^2) + 
              s12^2*(-117*s13^3 + 109*s13^2*s23 + 67*s13*s23^2 + 11*s23^3) + 
              s12*(54*s13^4 - 154*s13^3*s23 + 40*s13^2*s23^2 + 162*s13*
                 s23^3 - 29*s23^4) + s23*(3*s13^4 - 6*s13^3*s23 + 
                2*s13^2*s23^2 + 7*s13*s23^3 - 4*s23^4)) + 
            p2q^3*p3q*(36*s12^4*(s13 + s23) + s12^3*(-72*s13^2 - 30*s13*s23 + 
                31*s23^2) - s12^2*(54*s13^3 + 12*s13^2*s23 - 27*s13*s23^2 + 
                20*s23^3) + s12*(54*s13^4 - 138*s13^3*s23 - 87*s13^2*s23^2 + 
                48*s13*s23^3 - 17*s23^4) + s23*(6*s13^4 - 5*s13^3*s23 - 
                2*s13^2*s23^2 + 7*s13*s23^3 - 2*s23^4))) - 
          p1q*(p2q + p3q)*(-(p2q^5*s13^2*(s12 + s13)*s23*(-s12 + s13 + 
               s23)) + p3q^5*s12^2*(s13*(s13 - s23)*s23 + s12^2*(9*s13 + 
                8*s23) + s12*(9*s13^2 + 8*s23^2)) + p2q^2*p3q^3*
             (18*s12^5 - 3*s12^4*(45*s13 + 8*s23) - s12^3*(81*s13^2 + 
                61*s13*s23 + 56*s23^2) + s12^2*(72*s13^3 - 98*s13^2*s23 - 
                68*s13*s23^2 - 25*s23^3) + s13*s23*(s13^3 + s13^2*s23 - 
                2*s13*s23^2 - 2*s23^3) - s12*s23*(-21*s13^3 + 20*s13^2*s23 + 
                45*s13*s23^2 + 11*s23^3)) + p2q*p3q^4*s12*(36*s12^4 + 
              55*s12^3*s23 - 2*s13^3*s23 + 4*s13*s23^3 + s12^2*(-45*s13^2 + 
                42*s13*s23 + 32*s23^2) + s12*(-9*s13^3 - 24*s13^2*s23 + 
                32*s13*s23^2 + 13*s23^3)) + p2q^4*p3q*s13*
             (-3*s12^2*s13*(6*s13 + 5*s23) + s12^3*(36*s13 + 34*s23) + 
              s13*s23*(s13^2 + 5*s13*s23 + 4*s23^2) - s12*(54*s13^3 + 
                12*s13^2*s23 - 23*s13*s23^2 + 14*s23^3)) + 
            p2q^3*p3q^2*(-(s12^4*(54*s13 + 17*s23)) + s12^3*(117*s13^2 + 
                93*s13*s23 - 8*s23^2) + s13*s23*(3*s13^3 + 7*s13^2*s23 + 
                2*s13*s23^2 - 2*s23^3) + s12^2*(135*s13^3 + 73*s13^2*s23 + 
                43*s13*s23^2 + 16*s23^3) + s12*(-36*s13^4 + 65*s13^3*s23 + 
                76*s13^2*s23^2 - 9*s13*s23^3 + 7*s23^4))) + 
          p1q^2*(p2q^5*s13*s23*(s12^3 - s12^2*(s13 - 2*s23) + 
              s13*(3*s13^2 + s13*s23 - 2*s23^2) + s12*(s13^2 + 5*s13*s23 - 
                s23^2)) + p3q^5*s12*(-6*s12^3*(3*s13 + 4*s23) + 
              s12^2*(-9*s13^2 + 37*s13*s23 - 8*s23^2) + s13*s23*(s13^2 + 
                2*s13*s23 - s23^2) + s12*(9*s13^3 + 17*s13^2*s23 + 
                14*s13*s23^2 + 16*s23^3)) + p2q^4*p3q*
             (s12^4*(18*s13 + 17*s23) + s12^3*(-90*s13^2 - 67*s13*s23 + 
                16*s23^2) + s12^2*(-18*s13^3 - 19*s13^2*s23 + s13*s23^2 - 
                8*s23^3) + s13*s23*(4*s13^3 - 3*s13^2*s23 - s13*s23^2 + 
                6*s23^3) + s12*(90*s13^4 - 39*s13^3*s23 - 66*s13^2*s23^2 + 
                31*s13*s23^3 - 7*s23^4)) - p2q^2*p3q^3*(72*s12^5 + 
              s12^3*(6*s13 - 131*s23)*s23 - s12^4*(171*s13 + 7*s23) + 
              s12^2*(234*s13^3 - 2*s13^2*s23 + 21*s13*s23^2 - 53*s23^3) + 
              s12*(-9*s13^4 + 178*s13^3*s23 + 59*s13^2*s23^2 - 86*s13*s23^3 + 
                s23^4) + s23*(4*s13^4 + 11*s13^3*s23 + s13^2*s23^2 - 
                4*s13*s23^3 + 2*s23^4)) + p2q*p3q^4*(-54*s12^5 + 
              s12^4*(27*s13 - 59*s23) + s12^3*(72*s13^2 + 78*s13*s23 + 
                51*s23^2) + s13*s23*(-s13^3 - 2*s13^2*s23 + s13*s23^2 + 
                2*s23^3) + s12^2*(-18*s13^3 + 71*s13^2*s23 + 6*s13*s23^2 + 
                62*s23^3) + s12*(-9*s13^4 - 40*s13^3*s23 + s13^2*s23^2 + 
                22*s13*s23^3 + 6*s23^4)) - p2q^3*p3q^2*(18*s12^5 - 
              4*s12^4*(36*s13 + 17*s23) + s12^3*(171*s13^2 + 88*s13*s23 - 
                106*s23^2) + s12^2*(225*s13^3 + 43*s13^2*s23 - 22*s13*s23^2 - 
                8*s23^3) + s23*(2*s13^4 + 13*s13^3*s23 + s13^2*s23^2 - 
                8*s13*s23^3 + 2*s23^4) + s12*(-108*s13^4 + 168*s13^3*s23 + 
                111*s13^2*s23^2 - 104*s13*s23^3 + 14*s23^4))))*den[-1 + ep])/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*s23*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p2]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     (-1/8*((2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(s12 + s13 + s23)^2*
          (-9*p2q*s13 + p1q*s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23)))/
         (p1q*(p1q + p2q + p3q)^2*s12*s13*s23) - 
       ((p1q + p2q)*(p1q + p3q)*(s12 + s13 + s23)^2*(-9*p2q*s13 + p1q*s23)*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))*den[-1 + ep])/
        (4*p1q*(p1q + p2q + p3q)^2*s12*s13*s23))*
      Int[DS[k]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*p3q*(s12 + s13 + s23)*(-(p3q^2*s12*(2*s12^3 + 8*s13*s23*
              (-3*s13 + s23) + s12^2*(13*s13 + s23) - 
             s12*(25*s13^2 - 22*s13*s23 + s23^2))) + 
          p2q^2*s13*(-(s12^2*(2*s13 + 3*s23)) + s12*(-13*s13^2 - 4*s13*s23 + 
              s23^2) + s13*(25*s13^2 + 26*s13*s23 + s23^2)) + 
          p2q*p3q*(-24*s13^2*s23*(s13 + s23) + s12^3*(4*s13 + 3*s23) - 
            2*s12*s13*(25*s13^2 + 2*s13*s23 - 3*s23^2) + 
            s12^2*(26*s13^2 + 5*s13*s23 + 3*s23^2)) + 
          p1q^2*(s12^3*s23 + s12^2*(18*s13^2 + 8*s13*s23 - s23^2) + 
            s13*s23*(-17*s13^2 - 10*s13*s23 + 7*s23^2) - 
            2*s12*(9*s13^3 - 4*s13^2*s23 - 8*s13*s23^2 + s23^3)) + 
          p1q*(-(p3q*(s12^4 + s12^3*(10*s13 - 3*s23) + s12^2*(-46*s13^2 + 
                 7*s13*s23 - 3*s23^2) + 8*s13*s23*(2*s13^2 + s13*s23 - 
                 s23^2) + s12*(17*s13^3 - 37*s13^2*s23 - 13*s13*s23^2 + 
                 s23^3))) + p2q*(s12^3*(s13 + 2*s23) + s12^2*(10*s13^2 + 
                s13*s23 + s23^2) + s13*(17*s13^3 - 15*s13^2*s23 - 
                33*s13*s23^2 - s23^3) - s12*(46*s13^3 + 25*s13^2*s23 - 
                4*s13*s23^2 + s23^3)))))/(16*s12*s13*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (p3q*(s12 + s13 + s23)*(9*p1q^7*s13*s23^2*(s12 + s23)*
           (4*s12*(s13 + s23)^2 + s23*(s13 + s23)^2 + 
            s12^2*(4*s13 + 3*s23)) + 9*(p2q + p3q)^4*s13*s23*
           (s12 + s13 + s23)*(p3q^3*s12^2*(s12 + s13 - s23)*(s12 + s23) + 
            p2q^3*s13^2*(s12^2 + s12*s13 + s23*(s13 + s23)) + 
            p2q*p3q^2*s12*(s12^3 + s12^2*(-s13 + s23) + s23*(-s13^2 + 
                2*s13*s23 + s23^2) + s12*(-2*s13^2 + 3*s13*s23 + s23^2)) - 
            p2q^2*p3q*s13*(2*s12^3 + s12^2*(s13 + s23) + s23^2*(s13 + s23) + 
              s12*(-s13^2 + 4*s13*s23 + 2*s23^2))) - 
          p1q^6*s23*(p2q*(9*s12^4*s13*(4*s13 + 3*s23) + s12^3*s13*(36*s13^2 - 
                9*s13*s23 - 16*s23^2) + s12^2*(72*s13^4 + 63*s13^3*s23 - 
                148*s13^2*s23^2 - 99*s13*s23^3 + s23^4) + s23^2*(36*s13^4 + 
                63*s13^3*s23 + 46*s13^2*s23^2 + 23*s13*s23^3 + 4*s23^4) + 
              s12*s23*(135*s13^4 + 110*s13^3*s23 - 54*s13^2*s23^2 - 
                32*s13*s23^3 + 5*s23^4)) + p3q*(18*s12^4*s13*(4*s13 + 
                5*s23) + s12^3*s13*(36*s13^2 + 108*s13*s23 + 137*s23^2) + 
              s12^2*(36*s13^4 - 36*s13^3*s23 - 94*s13^2*s23^2 + 
                18*s13*s23^3 + s23^4) + s23^2*(18*s13^4 + 27*s13^3*s23 + 
                28*s13^2*s23^2 + 23*s13*s23^3 + 4*s23^4) + 
              s12*s23*(54*s13^4 - 43*s13^3*s23 - 99*s13^2*s23^2 - 
                5*s13*s23^3 + 5*s23^4))) - p1q*(p2q + p3q)^2*
           (p3q^4*s12*(36*s12^5*s13 + 3*s12^4*(12*s13^2 + 15*s13*s23 + 
                s23^2) + s12^3*s23*(36*s13^2 + 55*s13*s23 + 5*s23^2) + 
              2*s13*s23^2*(9*s13^3 + 5*s13^2*s23 + 4*s13*s23^2 - 8*s23^3) + 
              s12^2*s23*(-27*s13^3 + 91*s13^2*s23 + 102*s13*s23^2 + 
                4*s23^3) + s12*s23*(18*s13^4 - 15*s13^3*s23 + 98*s13^2*
                 s23^2 + 39*s13*s23^3 + 2*s23^4)) + p2q^2*p3q^2*
             (3*s12^5*s23*(-15*s13 + s23) + s12^4*(216*s13^3 + 279*s13^2*
                 s23 + 7*s13*s23^2 + 3*s23^3) + s12^2*s23*(333*s13^4 + 
                414*s13^3*s23 - 50*s13^2*s23^2 - 44*s13*s23^3 - 2*s23^4) + 
              s12^3*(216*s13^4 + 621*s13^3*s23 + 315*s13^2*s23^2 + 
                95*s13*s23^3 + 2*s23^4) - s13*s23^2*(51*s13^4 + 
                24*s13^3*s23 - 29*s13^2*s23^2 + 2*s13*s23^3 + 4*s23^4) - 
              4*s12*s23*(45*s13^5 - 40*s13^4*s23 - 53*s13^3*s23^2 + 
                20*s13^2*s23^3 + 19*s13*s23^4 + s23^5)) + 
            p2q^4*s13*(9*s12^4*s13*s23 + s12^3*s23*(-18*s13^2 + 12*s13*s23 + 
                s23^2) + s12^2*(36*s13^4 + 9*s13^3*s23 + 55*s13^2*s23^2 + 
                26*s13*s23^3 - s23^4) + s13*s23*(36*s13^4 + 39*s13^3*s23 + 
                14*s13^2*s23^2 + 31*s13*s23^3 + 20*s23^4) + 2*s12*(18*s13^5 + 
                18*s13^4*s23 + 23*s13^3*s23^2 + 42*s13^2*s23^3 + 
                24*s13*s23^4 + s23^5)) + p2q*p3q^3*(-3*s12^5*(48*s13^2 + 
                45*s13*s23 - 2*s23^2) - s12^4*(144*s13^3 + 315*s13^2*s23 + 
                139*s13*s23^2 - 9*s23^3) + s13*s23^3*(17*s13^3 + 
                17*s13^2*s23 + 7*s13*s23^2 + 7*s23^3) + s12^3*s23*(
                -135*s13^3 - 180*s13^2*s23 + 74*s13*s23^2 + 7*s23^3) + 
              s12^2*s23*(171*s13^4 - 59*s13^3*s23 - 89*s13^2*s23^2 + 
                19*s13*s23^3 + 2*s23^4) - s12*s23*(18*s13^5 - 156*s13^4*s23 - 
                43*s13^3*s23^2 + 70*s13^2*s23^3 + 45*s13*s23^4 + 2*s23^5)) - 
            p2q^3*p3q*(9*s12^5*s13*s23 + s12^4*s23*(-63*s13^2 + 15*s13*s23 + 
                s23^2) + s12^3*(144*s13^4 + 153*s13^3*s23 + 50*s13^2*s23^2 + 
                20*s13*s23^3 + s23^4) + s12*s23*(270*s13^5 + 148*s13^4*s23 - 
                119*s13^3*s23^2 - 10*s13^2*s23^3 + 45*s13*s23^4 + 2*s23^5) + 
              s12^2*(144*s13^5 + 387*s13^4*s23 + 135*s13^3*s23^2 + 
                125*s13^2*s23^3 + 61*s13*s23^4 + 2*s23^5) + 
              s13*s23*(-36*s13^5 + 12*s13^4*s23 + 27*s13^3*s23^2 - 
                43*s13^2*s23^3 - 11*s13*s23^4 + 11*s23^5))) + 
          p1q^5*(p3q^2*(9*s12^5*s13*(4*s13 + 11*s23) + s12^4*s13*(36*s13^2 - 
                72*s13*s23 - 25*s23^2) + s12*s13*s23^2*(-160*s13^3 + 
                95*s13^2*s23 + 96*s13*s23^2 - 95*s23^3) + s12^3*s23*(
                27*s13^3 - 254*s13^2*s23 - 273*s13*s23^2 + s23^3) - 
              4*s23^3*(9*s13^4 + 15*s13^3*s23 + 29*s13^2*s23^2 + 
                25*s13*s23^3 + 2*s23^4) + s12^2*s23*(-126*s13^4 + 
                151*s13^3*s23 + 79*s13^2*s23^2 - 139*s13*s23^3 + 9*s23^4)) - 
            p2q^2*(s12^4*s13*s23*(99*s13 + 70*s23) + s12^3*(-36*s13^4 + 
                11*s13^2*s23^2 + 13*s13*s23^3 - 3*s23^4) + 
              s12*s23*(-126*s13^5 + 205*s13^4*s23 + 228*s13^3*s23^2 - 
                104*s13^2*s23^3 - 40*s13*s23^4 + s23^5) + s23^2*(-45*s13^5 - 
                18*s13^4*s23 + 17*s13^3*s23^2 + 36*s13^2*s23^3 + 
                54*s13*s23^4 + 8*s23^5) - s12^2*(36*s13^5 - 99*s13^4*s23 - 
                119*s13^3*s23^2 + 250*s13^2*s23^3 + 159*s13*s23^4 + 
                10*s23^5)) + p2q*p3q*(27*s12^5*s13*s23 - s12^4*s13*(
                72*s13^2 + 387*s13*s23 + 275*s23^2) - s12^3*(72*s13^4 + 
                261*s13^3*s23 + 490*s13^2*s23^2 + 403*s13*s23^3 - 4*s23^4) + 
              s12^2*s23*(-441*s13^4 - 139*s13^3*s23 + 374*s13^2*s23^2 + 
                47*s13*s23^3 + 19*s23^4) - s12*s23*(-54*s13^5 + 500*s13^4*
                 s23 + 124*s13^3*s23^2 - 317*s13^2*s23^3 + 10*s13*s23^4 + 
                s23^5) - s23^2*(-36*s13^5 + 27*s13^4*s23 + 59*s13^3*s23^2 + 
                125*s13^2*s23^3 + 145*s13*s23^4 + 16*s23^5))) + 
          p1q^4*(p3q^3*(-36*s12^6*s13 + 9*s12^5*s13*(8*s13 + 23*s23) + 
              s12^3*s23*(243*s13^3 - 112*s13^2*s23 + 19*s13*s23^2 - 
                7*s23^3) + s12^4*(108*s13^3 + 72*s13^2*s23 + 300*s13*s23^2 + 
                s23^3) - 2*s23^3*(10*s13^4 - 3*s13^3*s23 + 39*s13^2*s23^2 + 
                55*s13*s23^3 + 3*s23^4) + s12^2*s23*(-198*s13^4 + 
                420*s13^3*s23 + 313*s13^2*s23^2 + 90*s13*s23^3 + 7*s23^4) + 
              s12*s23^2*(-212*s13^4 + 290*s13^3*s23 + 325*s13^2*s23^2 + 
                8*s13*s23^3 + 9*s23^4)) + p2q*p3q^2*(9*s12^5*s13*(20*s13 + 
                37*s23) - s12^4*(72*s13^3 + 468*s13^2*s23 + 80*s13*s23^2 + 
                s23^3) - s12^3*(252*s13^4 + 351*s13^3*s23 + 1082*s13^2*
                 s23^2 + 721*s13*s23^3 + 19*s23^4) + s12^2*s23*(-1134*s13^4 - 
                64*s13^3*s23 + 535*s13^2*s23^2 + 20*s13*s23^3 + 21*s23^4) - 
              2*s23^2*(-36*s13^5 + 11*s13^4*s23 - 24*s13^3*s23^2 + 
                50*s13^2*s23^3 + 132*s13*s23^4 + 11*s23^5) + 
              s12*s23*(144*s13^5 - 1042*s13^4*s23 + 18*s13^3*s23^2 + 
                777*s13^2*s23^3 + 22*s13*s23^4 + 17*s23^5)) + 
            p2q^2*p3q*(54*s12^5*s13*s23 - s12^4*(252*s13^3 + 810*s13^2*s23 + 
                439*s13*s23^2 + 4*s23^3) - s12^3*(72*s13^4 + 477*s13^3*s23 + 
                901*s13^2*s23^2 + 639*s13*s23^3 + 15*s23^4) + 
              s12*s23*(549*s13^5 - 899*s13^4*s23 - 622*s13^3*s23^2 + 
                614*s13^2*s23^3 + 139*s13*s23^4 + 15*s23^5) + 
              s12^2*(180*s13^5 - 774*s13^4*s23 - 533*s13^3*s23^2 + 
                607*s13^2*s23^3 + 219*s13*s23^4 + 26*s23^5) + 
              s23*(-18*s13^6 + 144*s13^5*s23 + 35*s13^4*s23^2 + 
                62*s13^3*s23^3 + 39*s13^2*s23^4 - 172*s13*s23^5 - 
                22*s23^6)) + p2q^3*(-2*s12^4*s23*(63*s13^2 + 43*s13*s23 + 
                s23^2) + s12^3*(108*s13^4 + 117*s13^3*s23 - 3*s13^2*s23^2 - 
                52*s13*s23^3 - 3*s23^4) + s12^2*(72*s13^5 + 18*s13^4*s23 - 
                103*s13^3*s23^2 + 250*s13^2*s23^3 + 172*s13*s23^4 + 
                12*s23^5) + s23*(-18*s13^6 + 81*s13^5*s23 + 64*s13^4*s23^2 + 
                47*s13^3*s23^3 + 70*s13^2*s23^4 - 18*s13*s23^5 - 6*s23^6) + 
              s12*(-36*s13^6 + 333*s13^5*s23 - 69*s13^4*s23^2 - 305*s13^3*
                 s23^3 + 144*s13^2*s23^4 + 98*s13*s23^5 + 7*s23^6))) + 
          p1q^3*(p3q^4*(-108*s12^6*s13 + s12^5*(54*s13 - s23)*s23 - 
              s12^3*s23*(-270*s13^3 + 189*s13^2*s23 - 122*s13*s23^2 + 
                s23^3) + s12^4*(108*s13^3 + 250*s13*s23^2 + 7*s23^3) + 
              s23^3*(-2*s13^4 + 47*s13^3*s23 + 2*s13^2*s23^2 - 49*s13*s23^3 - 
                2*s23^4) + 8*s12*s23^2*(-22*s13^4 + 31*s13^3*s23 + 
                42*s13^2*s23^2 + 18*s13*s23^3 + s23^4) + s12^2*s23*(
                -180*s13^4 + 356*s13^3*s23 + 163*s13^2*s23^2 + 237*s13*
                 s23^3 + s23^4)) + p2q*p3q^3*(-72*s12^6*s13 + 
              s12^5*(432*s13^2 + 540*s13*s23 - 2*s23^2) + s12^4*(216*s13^3 + 
                216*s13^2*s23 + 508*s13*s23^2 + 19*s23^3) - 
              s12^3*(288*s13^4 - 216*s13^3*s23 + 684*s13^2*s23^2 + 
                313*s13*s23^3 + 5*s23^4) + s12^2*s23*(-1296*s13^4 + 
                388*s13^3*s23 + 625*s13^2*s23^2 + 348*s13*s23^3 + 15*s23^4) + 
              4*s23^2*(18*s13^5 - 2*s13^4*s23 + 34*s13^3*s23^2 + 
                11*s13^2*s23^3 - 46*s13*s23^4 - 3*s23^5) + 
              s12*s23*(180*s13^5 - 1082*s13^4*s23 + 245*s13^3*s23^2 + 
                1041*s13^2*s23^3 + 315*s13*s23^4 + 29*s23^5)) + 
            p2q^2*p3q^2*(s12^5*(252*s13^2 + 396*s13*s23 - s23^2) - 
              3*s12^4*(180*s13^3 + 348*s13^2*s23 + 72*s13*s23^2 - 5*s23^3) - 
              s12^3*(540*s13^4 + 1224*s13^3*s23 + 1714*s13^2*s23^2 + 
                969*s13*s23^3 + 14*s23^4) + 3*s12*s23*(300*s13^5 - 
                495*s13^4*s23 - 197*s13^3*s23^2 + 428*s13^2*s23^3 + 
                147*s13*s23^4 + 13*s23^5) + s12^2*(252*s13^5 - 1872*s13^4*
                 s23 - 850*s13^3*s23^2 + 825*s13^2*s23^3 + 366*s13*s23^4 + 
                29*s23^5) + 2*s23*(-18*s13^6 + 121*s13^5*s23 + 48*s13^4*
                 s23^2 + 101*s13^3*s23^3 + 118*s13^2*s23^4 - 84*s13*s23^5 - 
                10*s23^6)) + p2q^4*(-2*s12^4*s23*(45*s13^2 + 25*s13*s23 + 
                s23^2) + s12^3*(108*s13^4 + 162*s13^3*s23 + 23*s13^2*s23^2 - 
                49*s13*s23^3 - 7*s23^4) + s12^2*s23*(108*s13^4 - 
                18*s13^3*s23 + 136*s13^2*s23^2 + 93*s13*s23^3 + 2*s23^4) + 
              s23*(-54*s13^6 + 62*s13^5*s23 + 70*s13^4*s23^2 - s13^3*s23^3 + 
                64*s13^2*s23^4 + 17*s13*s23^5 - 2*s23^6) + s12*(-108*s13^6 + 
                306*s13^5*s23 + 151*s13^4*s23^2 - 229*s13^3*s23^3 + 
                30*s13^2*s23^4 + 81*s13*s23^5 + 5*s23^6)) + 
            p2q^3*p3q*(54*s12^5*s13*s23 + s12^4*(-288*s13^3 - 774*s13^2*s23 - 
                308*s13*s23^2 + s23^3) + s12^3*(216*s13^4 - 144*s13^3*s23 - 
                548*s13^2*s23^2 - 439*s13*s23^3 - 17*s23^4) + 
              s12^2*(432*s13^5 - 72*s13^4*s23 - 252*s13^3*s23^2 + 
                787*s13^2*s23^3 + 384*s13*s23^4 + 17*s23^5) + 
              2*s23*(-45*s13^6 + 116*s13^5*s23 + 86*s13^4*s23^2 + 
                56*s13^3*s23^3 + 129*s13^2*s23^4 - 8*s13*s23^5 - 6*s23^6) + 
              s12*(-72*s13^6 + 1170*s13^5*s23 - 212*s13^4*s23^2 - 
                673*s13^3*s23^3 + 645*s13^2*s23^4 + 351*s13*s23^5 + 
                23*s23^6))) + p1q^2*(p3q^5*(-108*s12^6*s13 + 
              s13*s23^4*(17*s13^2 + 10*s13*s23 - 7*s23^2) - 
              4*s12^5*(18*s13^2 + 27*s13*s23 + s23^2) + s12^4*(36*s13^3 - 
                126*s13^2*s23 - 49*s13*s23^2 + s23^3) + s12^3*s23*(
                108*s13^3 - 296*s13^2*s23 - 99*s13*s23^2 + 3*s23^3) + 
              s12^2*s23*(-90*s13^4 + 93*s13^3*s23 - 155*s13^2*s23^2 + 
                59*s13*s23^3 + 2*s23^4) + s12*s23^2*(-88*s13^4 + 
                45*s13^3*s23 + 90*s13^2*s23^2 + 97*s13*s23^3 + 4*s23^4)) + 
            p2q*p3q^4*(-144*s12^6*s13 + 2*s12^5*(162*s13^2 + 117*s13*s23 - 
                7*s23^2) + s12^4*(360*s13^3 + 504*s13^2*s23 + 313*s13*s23^2 + 
                s23^3) - 3*s12^3*(36*s13^4 - 174*s13^3*s23 + 70*s13^2*s23^2 + 
                93*s13*s23^3 - s23^4) + s12^2*s23*(-720*s13^4 + 417*s13^3*
                 s23 + 131*s13^2*s23^2 + 185*s13*s23^3 + 8*s23^4) + 
              s23^2*(34*s13^5 - 2*s13^4*s23 + 63*s13^3*s23^2 + 50*s13^2*
                 s23^3 - 51*s13*s23^4 - 2*s23^5) + s12*s23*(108*s13^5 - 
                596*s13^4*s23 + 117*s13^3*s23^2 + 530*s13^2*s23^3 + 
                311*s13*s23^4 + 18*s23^5)) + p2q^5*(-(s12^4*s13*s23*
                (36*s13 + 7*s23)) + s12^3*(36*s13^4 + 90*s13^3*s23 + 
                30*s13^2*s23^2 - s23^4) + s12^2*(-72*s13^5 + 36*s13^4*s23 + 
                s13^3*s23^2 + 70*s13^2*s23^3 + 45*s13*s23^4 + s23^5) + 
              s13*s23*(-72*s13^5 - 22*s13^4*s23 + 28*s13^3*s23^2 - 
                33*s13^2*s23^3 + 2*s13*s23^4 + 13*s23^5) + 2*s12*(-54*s13^6 + 
                27*s13^5*s23 + 43*s13^4*s23^2 - 45*s13^3*s23^3 - 
                11*s13^2*s23^4 + 17*s13*s23^5 + s23^6)) - 
            p2q^2*p3q^3*(36*s12^6*s13 - 18*s12^5*(28*s13^2 + 29*s13*s23 - 
                s23^2) + s12^4*(216*s13^3 + 108*s13^2*s23 - 236*s13*s23^2 + 
                3*s23^3) + s12^3*(648*s13^4 + 1008*s13^3*s23 + 1092*s13^2*
                 s23^2 + 729*s13*s23^3 + 10*s23^4) - s12^2*(108*s13^5 - 
                1872*s13^4*s23 - 818*s13^3*s23^2 + 331*s13^2*s23^3 + 
                228*s13*s23^4 + 13*s23^5) - s12*s23*(630*s13^5 - 
                1354*s13^4*s23 - 603*s13^3*s23^2 + 848*s13^2*s23^3 + 
                475*s13*s23^4 + 32*s23^5) + 2*s23*(18*s13^6 - 67*s13^5*s23 - 
                2*s13^4*s23^2 - 18*s13^3*s23^3 - 73*s13^2*s23^4 + 
                31*s13*s23^5 + 3*s23^6)) + p2q^4*p3q*(2*s12^5*(9*s13 - s23)*
               s23 - s12^4*(108*s13^3 + 414*s13^2*s23 + 119*s13*s23^2 + 
                2*s23^3) + 3*s12^3*(120*s13^4 + 60*s13^3*s23 - 68*s13^2*
                 s23^2 - 60*s13*s23^3 - 3*s23^4) + s12^2*(324*s13^5 + 
                522*s13^4*s23 - 75*s13^3*s23^2 + 320*s13^2*s23^3 + 
                197*s13*s23^4 + 5*s23^5) + s23*(-180*s13^6 + 22*s13^5*s23 + 
                64*s13^4*s23^2 - 105*s13^3*s23^3 + 80*s13^2*s23^4 + 
                45*s13*s23^5 - 2*s23^6) + 2*s12*(-72*s13^6 + 405*s13^5*s23 + 
                89*s13^4*s23^2 - 297*s13^3*s23^3 + 43*s13^2*s23^4 + 
                106*s13*s23^5 + 6*s23^6)) + p2q^3*p3q^2*
             (2*s12^5*(54*s13^2 + 99*s13*s23 - 5*s23^2) - s12^4*(648*s13^3 + 
                1116*s13^2*s23 + 238*s13*s23^2 + 5*s23^3) - 
              s12^3*(216*s13^4 + 1332*s13^3*s23 + 1412*s13^2*s23^2 + 
                729*s13*s23^3 + 18*s23^4) + s12^2*(504*s13^5 - 756*s13^4*
                 s23 - 1218*s13^3*s23^2 + 295*s13^2*s23^3 + 254*s13*s23^4 + 
                11*s23^5) + 2*s23*(-72*s13^6 + 72*s13^5*s23 + 21*s13^4*
                 s23^2 - 41*s13^3*s23^3 + 92*s13^2*s23^4 + 7*s13*s23^5 - 
                3*s23^6) + s12*(-36*s13^6 + 1278*s13^5*s23 - 754*s13^4*
                 s23^2 - 1179*s13^3*s23^3 + 516*s13^2*s23^4 + 439*s13*s23^5 + 
                28*s23^6)))))/(16*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*
         s23^2*(p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) + (p3q*(s12 + s13 + s23)^2*
         (p1q^6*s23^2*(p3q*s23*(s12^2 + s12*s23 + s13*(s13 + s23)) + 
            p2q*(-8*s13*s23*(s13 + s23) + s12^2*(9*s13 + s23) + 
              s12*(-9*s13^2 + s23^2))) + 9*p2q*p3q*(p2q + p3q)^2*s13*
           (p3q^3*s12^2*(s12 + s13 - s23)*(s12 + s23) + p2q^3*s13^2*
             (s12^2 + s12*s13 + s23*(s13 + s23)) + p2q*p3q^2*s12*
             (s12^3 + s12^2*(-s13 + s23) + s23*(-s13^2 + 2*s13*s23 + s23^2) + 
              s12*(-2*s13^2 + 3*s13*s23 + s23^2)) - p2q^2*p3q*s13*
             (2*s12^3 + s12^2*(s13 + s23) + s23^2*(s13 + s23) + 
              s12*(-s13^2 + 4*s13*s23 + 2*s23^2))) - 
          p1q^5*s23*(p3q^2*s23*(2*s12^3 + s12^2*(s13 - s23) + 
              s12*(2*s13^2 + 4*s13*s23 - 3*s23^2) + s13*(s13^2 - s13*s23 - 
                2*s23^2)) + p2q*p3q*(3*s12^3*(6*s13 + s23) - 
              s12^2*(36*s13^2 + 51*s13*s23 + 2*s23^2) - s12*s23*(15*s13^2 + 
                46*s13*s23 + 5*s23^2) + s13*s23*(3*s13^2 + 16*s13*s23 + 
                13*s23^2)) + p2q^2*(s12^3*(9*s13 + s23) + s12^2*(18*s13^2 - 
                7*s13*s23 - s23^2) + 8*s13*s23*(-2*s13^2 + s13*s23 + 
                3*s23^2) + s12*(-9*s13^3 + 46*s13^2*s23 + 13*s13*s23^2 - 
                2*s23^3))) - p1q*(p2q + p3q)*(-(p3q^5*s12^2*(s12 + s13)*s23*
              (s12 - s13 + s23)) + p2q^5*s13^2*(8*s13*s23*(s13 + s23) + 
              s12^2*(9*s13 + s23) + s12*(9*s13^2 - s23^2)) + 
            p2q*p3q^4*s12*(34*s13^3*s23 - 14*s13*s23^3 + s12^3*(-54*s13 + 
                s23) + s12^2*(-18*s13^2 - 12*s13*s23 + 5*s23^2) + 
              s12*(36*s13^3 - 15*s13^2*s23 + 23*s13*s23^2 + 4*s23^3)) + 
            p2q^4*p3q*s13*(-(s12^3*(9*s13 + 2*s23)) - 3*s12^2*s13*(15*s13 + 
                8*s23) + 2*s12*s23*(21*s13^2 + 16*s13*s23 + 2*s23^2) + 
              s13*(36*s13^3 + 55*s13^2*s23 + 32*s13*s23^2 + 13*s23^3)) + 
            p2q^2*p3q^3*(s12^4*(-36*s13 + 3*s23) + s12^3*(135*s13^2 + 
                65*s13*s23 + 7*s23^2) + s12^2*(117*s13^3 + 73*s13^2*s23 + 
                76*s13*s23^2 + 2*s23^3) + s13*s23*(-17*s13^3 - 8*s13^2*s23 + 
                16*s13*s23^2 + 7*s23^3) + s12*(-54*s13^4 + 93*s13^3*s23 + 
                43*s13^2*s23^2 - 9*s13*s23^3 - 2*s23^4)) + 
            p2q^3*p3q^2*(s12^4*s23 + s12^3*(72*s13^2 + 21*s13*s23 + s23^2) - 
              s12^2*(81*s13^3 + 98*s13^2*s23 + 20*s13*s23^2 + 2*s23^3) + 
              s13*(18*s13^4 - 24*s13^3*s23 - 56*s13^2*s23^2 - 25*s13*s23^3 - 
                11*s23^4) - s12*(135*s13^4 + 61*s13^3*s23 + 68*s13^2*s23^2 + 
                45*s13*s23^3 + 2*s23^4))) + 
          p1q^4*(p3q^3*s23*(s12^4 + s12^3*(s13 - 5*s23) + s12^2*(s13^2 + 
                s13*s23 - 3*s23^2) + s13*s23*(-2*s13^2 - s13*s23 + s23^2) + 
              s12*(s13^3 - 2*s13^2*s23 - 9*s13*s23^2 + 3*s23^3)) + 
            p2q^3*(s12^3*(9*s13^2 - 17*s13*s23 - 2*s23^2) + s12^2*(9*s13^3 - 
                17*s13^2*s23 - 11*s13*s23^2 - s23^3) + s12*s23*(55*s13^3 - 
                53*s13^2*s23 - 27*s13*s23^2 + s23^3) - 8*s13*s23*(s13^3 - 
                5*s13^2*s23 - 3*s13*s23^2 + 3*s23^3)) + 
            p2q^2*p3q*(s12^4*(9*s13 + s23) - 6*s12^3*(3*s13^2 + 10*s13*s23 + 
                s23^2) + s12^2*(-9*s13^3 + 21*s13^2*s23 + 59*s13*s23^2 - 
                2*s23^3) + s23*(20*s13^4 + 36*s13^3*s23 - 31*s13^2*s23^2 - 
                49*s13*s23^3 - 2*s23^4) + s12*(18*s13^4 - 6*s13^3*s23 - 
                82*s13^2*s23^2 + 50*s13*s23^3 + 3*s23^4)) + 
            p2q*p3q^2*(s12^4*(9*s13 + 2*s23) - 3*s12^3*(9*s13^2 + 
                35*s13*s23 + 3*s23^2) + s12^2*(-18*s13^3 + 48*s13^2*s23 + 
                8*s13*s23^2 - 4*s23^3) + s23*(19*s13^4 + 12*s13^3*s23 - 
                20*s13^2*s23^2 - 15*s13*s23^3 - 2*s23^4) + s12*(18*s13^4 + 
                3*s13^3*s23 + 50*s13^2*s23^2 + 77*s13*s23^3 + 5*s23^4))) + 
          p1q^3*(p3q^4*s23*(3*s12^4 + s12^3*(2*s13 - 3*s23) - 
              s13^2*s23*(s13 + s23) + s12^2*(s13^2 + 6*s13*s23 - 5*s23^2) + 
              s12*(2*s13^3 + 2*s13^2*s23 - 6*s13*s23^2 + s23^3)) + 
            p2q^4*(s12^3*(18*s13^2 - 7*s13*s23 - s23^2) + s12^2*(9*s13^3 + 
                19*s13^2*s23 - 7*s13*s23^2 - s23^3) - 8*s13*s23*(3*s13^3 - 
                3*s13^2*s23 - 5*s13*s23^2 + s23^3) - s12*s13*(9*s13^3 - 
                83*s13^2*s23 + 3*s13*s23^2 + 15*s23^3)) + 
            p2q^3*p3q*(-18*s13^5 + 33*s13^4*s23 + 139*s13^3*s23^2 + 
              61*s13^2*s23^3 - 29*s13*s23^4 - 2*s23^5 - s12^3*(45*s13^2 + 
                84*s13*s23 + 5*s23^2) + s12^2*(36*s13^3 + 33*s13^2*s23 + 
                9*s13*s23^2 - 2*s23^3) + s12*(63*s13^4 + 114*s13^3*s23 - 
                60*s13^2*s23^2 + 30*s13*s23^3 + s23^4)) + 
            p2q*p3q^3*(6*s12^4*(9*s13 + s23) - s12^3*(54*s13^2 + 
                138*s13*s23 + 5*s23^2) - s12^2*(72*s13^3 + 12*s13^2*s23 + 
                87*s13*s23^2 + 2*s23^3) + s23*(36*s13^4 + 31*s13^3*s23 - 
                20*s13^2*s23^2 - 17*s13*s23^3 - 2*s23^4) + s12*(36*s13^4 - 
                30*s13^3*s23 + 27*s13^2*s23^2 + 48*s13*s23^3 + 7*s23^4)) + 
            p2q^2*p3q^2*(-18*s13^5 + 75*s13^4*s23 + 129*s13^3*s23^2 + 
              11*s13^2*s23^3 - 29*s13*s23^4 - 4*s23^5 + 3*s12^4*(18*s13 + 
                s23) - s12^3*(117*s13^2 + 154*s13*s23 + 6*s23^2) + 
              s12^2*(-45*s13^3 + 109*s13^2*s23 + 40*s13*s23^2 + 2*s23^3) + 
              s12*(108*s13^4 + 26*s13^3*s23 + 67*s13^2*s23^2 + 162*s13*
                 s23^3 + 7*s23^4))) + p1q^2*(p3q^5*s12*s23*
             (3*s12^3 + s12^2*(s13 + s23) + s13*(s13^2 + 2*s13*s23 - s23^2) - 
              s12*(s13^2 - 5*s13*s23 + 2*s23^2)) + p2q^5*s13*
             (s12^3*(9*s13 + s23) - 8*s13*s23*(3*s13^2 + s13*s23 - 2*s23^2) + 
              s12^2*(-9*s13^2 + 17*s13*s23 + 2*s23^2) - s12*(18*s13^3 - 
                37*s13^2*s23 - 14*s13*s23^2 + s23^3)) + p2q^3*p3q^2*
             (-72*s13^5 + s12^4*(9*s13 - 4*s23) + 7*s13^4*s23 + 
              131*s13^3*s23^2 + 53*s13^2*s23^3 - s13*s23^4 - 2*s23^5 - 
              s12^2*s23*(-2*s13^2 + 59*s13*s23 + s23^2) - s12^3*(234*s13^2 + 
                178*s13*s23 + 11*s23^2) + s12*(171*s13^4 - 6*s13^3*s23 - 
                21*s13^2*s23^2 + 86*s13*s23^3 + 4*s23^4)) + 
            p2q*p3q^4*(s12^4*(90*s13 + 4*s23) - 3*s12^3*(6*s13^2 + 
                13*s13*s23 + s23^2) + s13*s23*(17*s13^3 + 16*s13^2*s23 - 
                8*s13*s23^2 - 7*s23^3) - s12^2*(90*s13^3 + 19*s13^2*s23 + 
                66*s13*s23^2 + s23^3) + s12*(18*s13^4 - 67*s13^3*s23 + 
                s13^2*s23^2 + 31*s13*s23^3 + 6*s23^4)) + 
            p2q^4*p3q*(-(s12^4*(9*s13 + s23)) - 2*s12^3*(9*s13^2 + 
                20*s13*s23 + s23^2) + s12^2*(72*s13^3 + 71*s13^2*s23 + 
                s13*s23^2 + s23^3) + s12*(27*s13^4 + 78*s13^3*s23 + 
                6*s13^2*s23^2 + 22*s13*s23^3 + 2*s23^4) + s13*(-54*s13^4 - 
                59*s13^3*s23 + 51*s13^2*s23^2 + 62*s13*s23^3 + 6*s23^4)) + 
            p2q^2*p3q^3*(2*s12^4*(54*s13 - s23) - s12^3*(225*s13^2 + 
                168*s13*s23 + 13*s23^2) - s12^2*(171*s13^3 + 43*s13^2*s23 + 
                111*s13*s23^2 + s23^3) + 2*s12*(72*s13^4 - 44*s13^3*s23 + 
                11*s13^2*s23^2 + 52*s13*s23^3 + 4*s23^4) - 2*(9*s13^5 - 
                34*s13^4*s23 - 53*s13^3*s23^2 - 4*s13^2*s23^3 + 7*s13*s23^4 + 
                s23^5))))*den[-1 + ep])/(8*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13*s23*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p3]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     (((2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(s12 + s13 + s23)^2*
         (9*p3q*s12 - p1q*s23)*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23)))/(8*p1q*(p1q + p2q + p3q)^2*s12*s13*s23) - 
       ((p1q + p2q)*(p1q + p3q)*(s12 + s13 + s23)^2*(-9*p3q*s12 + p1q*s23)*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))*den[-1 + ep])/
        (4*p1q*(p1q + p2q + p3q)^2*s12*s13*s23))*
      Int[DS[k]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-9*(2*p1q^2 + 2*p1q*(p2q + p3q) + (p2q + p3q)^2)*(p3q*s12 + p2q*s13)*
         (s12 + s13 + s23)^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23))/(8*p1q*(p1q + p2q + p3q)^2*s12*s13*s23) - 
       (9*(p1q + p2q)*(p1q + p3q)*(p3q*s12 + p2q*s13)*(s12 + s13 + s23)^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)*den[-1 + ep])/
        (4*p1q*(p1q + p2q + p3q)^2*s12*s13*s23))*
      Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((9*(2*p1q^5*(p2q + p3q)*s23^2*(s13*s23*(s13 + s23) + 
            s12^2*(4*s13 + s23) + s12*(4*s13^2 + 6*s13*s23 + s23^2)) - 
          (p2q + p3q)^5*s23*(s12 + s13 + s23)*
           (p2q*s13*(4*s12^2 + 4*s12*s13 + 3*s12*s23 + s13*s23) + 
            p3q*s12*(s12*(4*s13 + s23) + s13*(4*s13 + 3*s23))) - 
          p1q^4*s23*(s12 + s13 + s23)*(p3q^2*(s13*(s13 - 4*s23)*s23 + 
              s12^2*(16*s13 + 3*s23) + s12*(8*s13^2 - 8*s13*s23 - 4*s23^2)) + 
            4*p2q*p3q*(s13*(s13 - 2*s23)*s23 + s12^2*(2*s13 + s23) + 
              2*s12*(s13^2 - 4*s13*s23 - s23^2)) + 
            p2q^2*(s13*(3*s13 - 4*s23)*s23 + s12^2*(8*s13 + s23) + 
              4*s12*(4*s13^2 - 2*s13*s23 - s23^2))) + p1q*(p2q + p3q)^3*
           (s12 + s13 + s23)*(p3q^2*(s13*s23^3 - 2*s12^2*s23*(2*s13 + s23) + 
              2*s12^3*(4*s13 + s23) + s12*s23*(-10*s13^2 - 2*s13*s23 + 
                s23^2)) + p2q^2*(-10*s12^2*s13*s23 + s12*(-2*s13 + s23)^2*(
                2*s13 + s23) + s13*s23*(2*s13^2 - 2*s13*s23 + s23^2)) + 
            2*p2q*p3q*(s12^3*s23 + s12*s23*(-11*s13^2 - 2*s13*s23 + s23^2) + 
              s13*s23*(s13^2 - s13*s23 + s23^2) - s12^2*(8*s13^2 + 
                11*s13*s23 + s23^2))) - 2*p1q^2*(p2q + p3q)^2*
           (s12 + s13 + s23)*(p3q^2*(s13*(s13 - s23)*s23^2 - s12^3*(8*s13 + 
                s23) + s12^2*s23*(8*s13 + 3*s23) + s12*s23*(9*s13^2 + 
                2*s13*s23 - s23^2)) - p2q*p3q*(s12^3*s23 + s13*s23*(s13^2 - 
                4*s13*s23 + 2*s23^2) + s12*s23*(-17*s13^2 + 4*s13*s23 + 
                2*s23^2) - s12^2*(16*s13^2 + 17*s13*s23 + 4*s23^2)) + 
            p2q^2*(s12^2*s23*(9*s13 + s23) - s13*s23*(s13^2 - 3*s13*s23 + 
                s23^2) - s12*(8*s13^3 - 8*s13^2*s23 - 2*s13*s23^2 + 
                s23^3))) + p1q^3*(s12 + s13 + s23)*
           (p2q*p3q^2*(2*s12^3*(4*s13 + s23) + 2*s12*s23*(-19*s13^2 + 
                16*s13*s23 + 6*s23^2) + s13*s23*(s13^2 - 10*s13*s23 + 
                12*s23^2) - s12^2*(16*s13^2 + 49*s13*s23 + 14*s23^2)) + 
            p2q^3*(-(s12^2*s23*(17*s13 + 2*s23)) + s13*s23*(s13^2 - 
                6*s13*s23 + 4*s23^2) + 4*s12*(2*s13^3 - 7*s13^2*s23 + 
                s23^3)) + p3q^3*(-2*s13*(s13 - 2*s23)*s23^2 + 
              s12^3*(8*s13 + s23) - 2*s12^2*s23*(14*s13 + 3*s23) + 
              s12*(-17*s13^2*s23 + 4*s23^3)) + p2q^2*p3q*(s12^3*s23 - 
              2*s12^2*(8*s13^2 + 19*s13*s23 + 5*s23^2) + 2*s13*s23*(s13^2 - 
                7*s13*s23 + 6*s23^2) + s12*(8*s13^3 - 49*s13^2*s23 + 
                32*s13*s23^2 + 12*s23^3)))))/(16*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + (9*(s12 + s13 + s23)*
         (p1q^4*(p2q - p3q)*(s12 - s13)*s23^2 - p1q^3*s23*
           (p2q^2*(s12^2 + 2*s12*s13 - s13^2 - s12*s23 + 2*s13*s23) + 
            p3q^2*(-s12^2 + s13*(s13 - s23) + 2*s12*(s13 + s23)) + 
            p2q*p3q*(2*s12^2 + s13*(2*s13 - s23) - s12*(8*s13 + s23))) - 
          p2q*p3q*(p2q + p3q)^2*(p2q*s13*(4*s12^2 + 4*s12*s13 + 3*s12*s23 + 
              s13*s23) + p3q*s12*(s12*(4*s13 + s23) + s13*(4*s13 + 3*s23))) + 
          p1q*(p2q + p3q)*(p2q^3*s13*(3*s12^2 + 3*s12*s13 + 2*s12*s23 + 
              s13*s23) + p3q^3*s12*(s12*(3*s13 + s23) + s13*(3*s13 + 
                2*s23)) + p2q*p3q^2*(2*s12^3 - s12^2*(4*s13 + s23) + 
              s13*(s13^2 + s23^2) + s12*(-5*s13^2 + 2*s13*s23 + s23^2)) + 
            p2q^2*p3q*(s12^3 - 5*s12^2*s13 + s13*(2*s13^2 - s13*s23 + 
                s23^2) + s12*(-4*s13^2 + 2*s13*s23 + s23^2))) + 
          p1q^2*(p2q^3*(3*s12*s13^2 + s12^2*(3*s13 - s23) + s13*(2*s13 - s23)*
               s23) + p3q^3*(-(s13^2*s23) + s12^2*(3*s13 + 2*s23) + 
              s12*(3*s13^2 - s23^2)) + p2q*p3q^2*(s12^3 - s12^2*(4*s13 + 
                3*s23) + s12*(-4*s13^2 + 6*s13*s23) + s13*(s13^2 - 
                4*s13*s23 + s23^2)) + p2q^2*p3q*(s12^3 + s13^2*(s13 - 
                3*s23) - 4*s12^2*(s13 + s23) + s12*(-4*s13^2 + 6*s13*s23 + 
                s23^2))))*den[-1 + ep])/(8*p1q*(p1q + p2q + p3q)^2*s12*s13*
         s23*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p2 + p3]*Eik[k - p1]] + 
     ((9*ep*(p1q + p2q)*s23*(s12 + s13 + s23)*(-(p3q*s12) + p2q*s13 + 
          p1q*(2*s13 + s23)))/(16*s12*(p3q*s12 - (p1q + p2q)*(s13 + s23))) + 
       (9*(p1q + p2q)*(s12 + s13 + s23)*(p1q^5*s23*(s12 + s13 + s23) + 
          p1q*(p2q + p3q)^2*(2*p3q^2*s12*(-2*s12 + s23) + 
            p2q*p3q*(-2*s12^2 + 6*s12*s13 + 5*s12*s23 + s13*s23) + 
            p2q^2*(2*s12*s13 - 2*s13^2 + 5*s12*s23 + 3*s13*s23 + 4*s23^2)) + 
          (p2q + p3q)^3*(-(p3q^2*s12^2) + p2q*p3q*s12*(-s12 + s13) + 
            p2q^2*(2*s23*(s13 + s23) + s12*(s13 + 2*s23))) + 
          p1q^2*(p2q + p3q)*(-2*p2q*p3q*(s12^2 - 4*s12*s13 + s13^2 - 
              6*s12*s23 + s13*s23 + 2*s23^2) + p2q^2*(-4*s13^2 + s23^2 + 
              2*s12*(s13 + 3*s23)) - p3q^2*(4*s12^2 + s23^2 - 
              2*s12*(s13 + 4*s23))) - p1q^4*
           (p3q*(s12^2 + s23^2 - s12*(s13 + 2*s23)) + 
            p2q*(s13^2 - s12*(s13 + 4*s23))) - 
          p1q^3*(p2q*p3q*(2*s12^2 + 2*s13^2 + 3*s13*s23 + 6*s23^2 - 
              6*s12*(s13 + 2*s23)) + p2q^2*(3*s13^2 + 2*s13*s23 + 2*s23^2 - 
              2*s12*(s13 + 3*s23)) + p3q^2*(3*s12^2 + 2*s23*(s13 + 2*s23) - 
              s12*(2*s13 + 5*s23)))))/(16*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*
         s12*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (9*(p1q + p2q)^2*(s12 + s13 + s23)*
         (p1q^3*s23*(p3q*(s13 + s23) + p2q*(s12 + 2*(s13 + s23))) - 
          p3q*(p2q + p3q)*(-(p3q^2*s12^2) + p2q*p3q*s12*(-s12 + s13) + 
            p2q^2*(2*s23*(s13 + s23) + s12*(s13 + 2*s23))) + 
          p1q*(p3q^3*s12*(s12 - s13 - 2*s23) + p2q^2*p3q*
             (-s12^2 + s12*(s13 - s23) + 2*(s13 + s23)^2) + 
            p2q*p3q^2*(-s12^2 + s13*(s13 + s23) - 3*s12*(s13 + 2*s23)) + 
            p2q^3*(2*s23*(s13 + s23) + s12*(s13 + 2*s23))) + 
          p1q^2*(p2q*p3q*(-s12^2 + s13^2 - s12*s23 + 5*s13*s23 + 4*s23^2) + 
            p3q^2*(s23*(s13 + s23) - s12*(s13 + 2*s23)) + 
            p2q^2*(4*s23*(s13 + s23) + s12*(s13 + 3*s23))))*den[-1 + ep])/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        Eik[k - p1]] + ((9*ep*(p1q + p3q)*s23*(s12 + s13 + s23)*
         (p3q*s12 - p2q*s13 + p1q*(2*s12 + s23)))/
        (16*s13*(p2q*s13 - p1q*(s12 + s23) - p3q*(s12 + s23))) + 
       (9*(p1q + p3q)*(s12 + s13 + s23)*(p1q^5*s23*(s12 + s13 + s23) - 
          p1q^4*(p2q*(-(s12*s13) + (s13 - s23)^2) + 
            p3q*(s12^2 - s12*s13 - 4*s13*s23)) - 
          p1q^3*(p2q^2*(-2*s12*s13 + 3*s13^2 + 2*s12*s23 - 5*s13*s23 + 
              4*s23^2) + p2q*p3q*(2*s12^2 - 6*s12*s13 + 2*s13^2 + 3*s12*s23 - 
              12*s13*s23 + 6*s23^2) + p3q^2*(3*s12^2 - 2*s12*(s13 - s23) + 
              2*s23*(-3*s13 + s23))) + p1q^2*(p2q + p3q)*
           (p2q^2*(2*s12*s13 - 4*s13^2 + 8*s13*s23 - s23^2) - 
            2*p2q*p3q*(s12^2 + s13^2 - 6*s13*s23 + 2*s23^2 + s12*(-4*s13 + 
                s23)) + p3q^2*(-4*s12^2 + 2*s12*s13 + s23*(6*s13 + s23))) + 
          (p2q + p3q)^3*(p2q*p3q*(s12 - s13)*s13 - p2q^2*s13^2 + 
            p3q^2*(2*s23*(s13 + s23) + s12*(s13 + 2*s23))) - 
          p1q*(p2q + p3q)^2*(2*p2q^2*s13*(2*s13 - s23) + 
            p3q^2*(2*s12^2 - 2*s12*s13 - 3*s12*s23 - 5*s13*s23 - 4*s23^2) - 
            p2q*p3q*(s12*(6*s13 + s23) + s13*(-2*s13 + 5*s23)))))/
        (16*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s13*(-(p2q*s13) + 
          p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (9*(p1q + p3q)^2*(s12 + s13 + s23)*
         (p1q^3*s23*(p2q*(s12 + s23) + p3q*(2*s12 + s13 + 2*s23)) + 
          p1q^2*(p2q^2*(-(s12*s13) + s12*s23 - 2*s13*s23 + s23^2) + 
            p2q*p3q*(s12^2 - s13^2 + 5*s12*s23 - s13*s23 + 4*s23^2) + 
            p3q^2*(s12*s13 + 4*s12*s23 + 3*s13*s23 + 4*s23^2)) + 
          p2q*(p2q + p3q)*(p2q^2*s13^2 + p2q*p3q*s13*(-s12 + s13) - 
            p3q^2*(2*s23*(s13 + s23) + s12*(s13 + 2*s23))) + 
          p1q*(p2q^3*s13*(-s12 + s13 - 2*s23) + p3q^3*(2*s23*(s13 + s23) + 
              s12*(s13 + 2*s23)) + p2q*p3q^2*(2*s12^2 - s13^2 - s13*s23 + 
              2*s23^2 + s12*(s13 + 4*s23)) + p2q^2*p3q*(s12^2 + 
              s12*(-3*s13 + s23) - s13*(s13 + 6*s23))))*den[-1 + ep])/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s13*(-(p2q*s13) + 
          p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k - p1]] + 
     (-1/16*(ep*(p1q + p3q)*(8*s12 - s13)*(s12 + s13 + s23)*
          (p3q*s12 - p2q*s13 + p1q*(2*s12 + s23)))/
         (s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((p1q + p3q)*(s12 + s13 + s23)*(9*p1q^5*s12*s23*(s12 + s13 + s23) + 
          (p2q + p3q)^3*(-(p2q^2*s13^2*(9*s12 + s23)) + p2q*p3q*s13*
             (9*s12^2 - 9*s12*s13 + 2*s12*s23 + s23^2) + 
            p3q^2*s12*(9*s12*s13 + 17*s12*s23 + 18*s13*s23 + 17*s23^2)) - 
          p1q*(p2q + p3q)^2*(2*p2q^2*s13*(2*s13 - s23)*(9*s12 + s23) + 
            p3q^2*(18*s12^3 + s23^3 - s12^2*(18*s13 + 25*s23) - 
              s12*s23*(47*s13 + 34*s23)) + p2q*p3q*(3*s12*s13*(6*s13 - 
                17*s23) - 9*s12^2*(6*s13 + s23) + s23*(2*s13^2 - 4*s13*s23 + 
                s23^2))) - p1q^4*(p3q*(9*s12^3 + 2*s23^2*(-s13 + s23) - 
              s12*s23*(40*s13 + s23) - s12^2*(9*s13 + 2*s23)) + 
            p2q*(2*s23^2*(-s13 + s23) - s12^2*(9*s13 + 2*s23) + 
              s12*(9*s13^2 - 22*s13*s23 + 8*s23^2))) + p1q^2*(p2q + p3q)*
           (p3q^2*(-36*s12^3 + (2*s13 - 3*s23)*s23^2 + 2*s12^2*(9*s13 + 
                s23) + s12*s23*(62*s13 + 11*s23)) + 
            p2q^2*(18*s12^2*s13 - 9*s12*(4*s13^2 - 8*s13*s23 + s23^2) - 
              s23*(6*s13^2 - 6*s13*s23 + s23^2)) - 2*p2q*p3q*
             (9*s12^3 + s12^2*(-36*s13 + 7*s23) + s23*(2*s13^2 - 5*s13*s23 + 
                2*s23^2) + s12*(9*s13^2 - 60*s13*s23 + 16*s23^2))) - 
          p1q^3*(p3q^2*(27*s12^3 + 4*s23^2*(-s13 + s23) + 2*s12*s23*(
                -32*s13 + 7*s23) + s12^2*(-18*s13 + 13*s23)) + 
            p2q^2*(-2*s12^2*(9*s13 - 7*s23) + 2*s23*(s13^2 - 4*s13*s23 + 
                s23^2) + s12*(27*s13^2 - 52*s13*s23 + 32*s23^2)) + 
            p2q*p3q*(18*s12^3 + 18*s12^2*(-3*s13 + s23) + 2*s23*(s13^2 - 
                6*s13*s23 + 3*s23^2) + s12*(18*s13^2 - 125*s13*s23 + 
                46*s23^2)))))/(16*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*
         s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       ((p1q + p3q)^2*(s12 + s13 + s23)*
         (p1q^3*s23*(p2q*(7*s12^2 - 2*s12*s13 + 7*s12*s23 - s13*s23) + 
            p3q*(16*s12^2 + 7*s12*s13 + 16*s12*s23 - s13*s23)) + 
          p2q*(p2q + p3q)*(p2q^2*s13^2*(9*s12 + s23) - p2q*p3q*s13*
             (9*s12^2 - 9*s12*s13 + 2*s12*s23 + s23^2) - 
            p3q^2*s12*(9*s12*s13 + 17*s12*s23 + 18*s13*s23 + 17*s23^2)) + 
          p1q*(p3q^3*s12*(9*s12*s13 + 16*s12*s23 + 17*s13*s23 + 16*s23^2) - 
            p2q^3*s13*(9*s12^2 - 9*s12*(s13 - 2*s23) + s23*(-2*s13 + s23)) + 
            p2q^2*p3q*(9*s12^3 + 9*s12^2*(-3*s13 + s23) + s12*(-9*s13^2 - 
                54*s13*s23 + s23^2) + s23*(3*s13^2 - s13*s23 + s23^2)) + 
            p2q*p3q^2*(18*s12^3 + s12^2*(9*s13 + 34*s23) + s23*(s13^2 + 
                s23^2) + s12*(-9*s13^2 - 10*s13*s23 + 17*s23^2))) + 
          p1q^2*(p2q^2*(s13*(s13 - 2*s23)*s23 + s12*s23*(-20*s13 + 7*s23) + 
              s12^2*(-9*s13 + 7*s23)) + p3q^2*(-(s13*s23^2) + 
              8*s12*s23*(3*s13 + 4*s23) + s12^2*(9*s13 + 32*s23)) + 
            p2q*p3q*(9*s12^3 + 39*s12^2*s23 + s13*(s13 - 3*s23)*s23 + 
              s12*(-9*s13^2 - 14*s13*s23 + 30*s23^2))))*den[-1 + ep])/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s12*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]] + 
     (-1/16*(ep*(p1q + p2q)*(s12 + s13)*(s12 + s13 + s23)*
          (-(p3q*s12) + p2q*s13 + p1q*(2*s13 + s23)))/
         (s12*(p3q*s12 - (p1q + p2q)*(s13 + s23))) + 
       ((p1q + p2q)*((p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
           (p3q*s12 - p2q*(s13 + s23)) + p1q^4*(2*s13^3 + 3*s13^2*s23 - 
            s13*s23^2 - 2*s23^3 + 2*s12^2*(2*s13 + s23) + 
            s12*s13*(6*s13 + 7*s23)) + p1q*(p2q + p3q)*(s12 + s13 + s23)*
           (2*p3q^2*s12*(-2*s12 + s23) + p2q^2*(2*s12*s13 - 2*s13^2 - 
              2*s13*s23 - s23^2) - p2q*p3q*(2*s12^2 - 6*s12*s13 - 4*s12*s23 + 
              s23^2)) - p1q^3*(s12 + s13 + s23)*
           (-(p2q*(10*s12*s13 + 5*s13^2 + 4*s12*s23 + 4*s13*s23 - 4*s23^2)) + 
            p3q*(2*s12^2 - 7*s12*s13 - 4*s13^2 - 8*s12*s23 - 4*s13*s23 + 
              2*s23^2)) + p1q^2*(s12 + s13 + s23)*
           (2*p2q*p3q*(-2*s12^2 + 6*s12*s13 + 2*s13^2 + 5*s12*s23 + 
              2*s13*s23 - 2*s23^2) - p3q^2*(6*s12^2 - 6*s12*s23 + s23^2) + 
            p2q^2*(2*s13^2 + 2*s13*s23 - 3*s23^2 + 2*s12*(4*s13 + s23)))))/
        (16*p1q*(p1q + p2q + p3q)^2*s12*(-(p3q*s12) + (p1q + p2q)*
           (s13 + s23))) + ((p1q + p2q)^2*(s12 + s13 + s23)*
         (-(p3q*(p3q*s12 - p2q*s13)*(p3q*s12 - p2q*(s13 + s23))) + 
          p1q^3*(2*s13*(s13 + s23) + s12*(2*s13 + s23)) + 
          p1q^2*(-(p3q*s12^2) + 2*p3q*s12*(s13 + s23) + 
            4*p2q*s13*(s13 + s23) + 2*p3q*s13*(s13 + s23) + 
            p2q*s12*(3*s13 + s23)) + p1q*(p3q^2*s12*(-2*s12 + s23) + 
            p2q^2*s13*(s12 + 2*(s13 + s23)) - p2q*p3q*(s12^2 + 
              s23*(s13 + s23))))*den[-1 + ep])/(8*p1q*(p1q + p2q + p3q)^2*s12*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((9*(s12 + s13 + s23)*(2*p1q^5*(p2q + p3q)*s23^2*(2*s13 + s23) - 
          (p2q + p3q)^5*s23*(2*p3q*s13*(s13 + s23) + p3q*s12*(2*s13 + s23) + 
            p2q*s13*(2*s12 + 2*s13 + s23)) - p1q^4*s23*
           (p3q^2*(8*s12*s13 + 4*s13^2 + 3*s12*s23 - 5*s13*s23 - 4*s23^2) + 
            4*p2q*p3q*(s13^2 - 4*s13*s23 - 2*s23^2 + s12*(s13 + s23)) + 
            p2q^2*(8*s13^2 - 3*s13*s23 - 4*s23^2 + s12*(4*s13 + s23))) + 
          p1q*(p2q + p3q)^3*(p2q^2*(4*s13^3 - 6*s12*s13*s23 - 2*s13^2*s23 + 
              s23^3) + p3q^2*(-2*s12*s23*(s13 + s23) + 2*s12^2*(2*s13 + 
                s23) + s23*(-4*s13^2 - 2*s13*s23 + s23^2)) + 
            2*p2q*p3q*(s12^2*s23 + s23*(-5*s13^2 - s13*s23 + s23^2) - 
              s12*(4*s13^2 + 6*s13*s23 + s23^2))) - p1q^3*(p2q + p3q)*
           (p2q^2*(-4*s13^3 + 13*s13^2*s23 + 2*(s12 - 2*s23)*s23^2 + 
              s13*s23*(9*s12 + 2*s23)) - p3q^2*(s12^2*(4*s13 + s23) - 
              3*s12*s23*(5*s13 + 2*s23) + 2*s23*(-4*s13^2 + s13*s23 + 
                2*s23^2)) + p2q*p3q*(-(s12^2*s23) + s23*(9*s13^2 - 
                16*s13*s23 - 8*s23^2) + 4*s12*(2*s13^2 + 3*s13*s23 + 
                2*s23^2))) + 2*p1q^2*(p2q + p3q)^2*
           (p2q^2*(4*s13^3 - 3*s13^2*s23 + s23^2*(-s12 + s23) - 
              s13*s23*(5*s12 + s23)) + p3q^2*(s12^2*(4*s13 + s23) - 
              s12*s23*(5*s13 + 3*s23) + s23*(-4*s13^2 - s13*s23 + s23^2)) + 
            p2q*p3q*(s12^2*s23 + s23*(-7*s13^2 + 2*s13*s23 + 2*s23^2) - 
              2*s12*(4*s13^2 + 5*s13*s23 + 2*s23^2)))))/
        (16*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + (9*(s12 + s13 + s23)*
         (-(p1q^3*(-(p3q^2*(s12 - 2*s23)) + p2q*p3q*(2*s12 - 4*s13 - s23) + 
             p2q^2*(s12 + 2*s13 - s23))*s23) + p1q^4*(p2q - p3q)*s23^2 - 
          p2q*p3q*(p2q + p3q)^2*(2*p3q*s13*(s13 + s23) + 
            p3q*s12*(2*s13 + s23) + p2q*s13*(2*s12 + 2*s13 + s23)) + 
          p1q*(p2q + p3q)*(p2q^3*s13*(s12 + s13) + p2q^2*p3q*
             (s12^2 - 3*s12*s13 - 4*s13^2 + s13*s23 + s23^2) + 
            p2q*p3q^2*(2*s12^2 - 2*s13^2 - s12*s23 + s13*s23 + s23^2) + 
            p3q^3*(2*s13*(s13 + s23) + s12*(2*s13 + s23))) + 
          p1q^2*(p2q^3*(s13*(s13 - 2*s23) + s12*(s13 - s23)) + 
            p3q^3*(2*s13^2 + 2*s13*s23 - s23^2 + 2*s12*(s13 + s23)) + 
            p2q^2*p3q*(s12^2 - 3*s13^2 + 2*s13*s23 + s23^2 - 2*s12*(s13 + 
                2*s23)) + p2q*p3q^2*(s12^2 - 2*s13*(s13 - 2*s23) - 
              s12*(s13 + 3*s23))))*den[-1 + ep])/(8*p1q*(p1q + p2q + p3q)^2*
         s23*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k - p2]] + 
     (-1/16*(ep*(p1q + p2q)*(s12 - 8*s13)*(s12 + s13 + s23)*
          (-(p3q*s12) + p2q*s13 + p1q*(2*s13 + s23)))/
         (s12*s13*(p3q*s12 - (p1q + p2q)*(s13 + s23))) + 
       ((p1q + p2q)*(s12 + s13 + s23)*(9*p1q^5*s13*s23*(s12 + s13 + s23) + 
          (p2q + p3q)^3*(-(p3q^2*s12^2*(9*s13 + s23)) + p2q*p3q*s12*
             (-9*s12*s13 + 9*s13^2 + 2*s13*s23 + s23^2) + 
            p2q^2*s13*(17*s23*(s13 + s23) + 9*s12*(s13 + 2*s23))) - 
          p1q^4*(p3q*(9*s12^2*s13 + 2*s23*(-s13^2 + 4*s13*s23 + s23^2) - 
              s12*(9*s13^2 + 22*s13*s23 + 2*s23^2)) - 
            p2q*(-9*s13^3 + 2*s13^2*s23 + s13*s23^2 - 2*s23^3 + 
              s12*(9*s13^2 + 40*s13*s23 + 2*s23^2))) + p1q*(p2q + p3q)^2*
           (-2*p3q^2*s12*(2*s12 - s23)*(9*s13 + s23) + 
            p2q^2*(-18*s13^3 + 25*s13^2*s23 + 34*s13*s23^2 - s23^3 + 
              s12*s13*(18*s13 + 47*s23)) + p2q*p3q*(9*s13^2*s23 - s23^3 - 
              2*s12^2*(9*s13 + s23) + s12*(54*s13^2 + 51*s13*s23 + 
                4*s23^2))) + p1q^2*(p2q + p3q)*
           (-(p3q^2*(6*s12^2*(6*s13 + s23) + s23^2*(9*s13 + s23) - 6*s12*
                (3*s13^2 + 12*s13*s23 + s23^2))) + 
            p2q^2*(-36*s13^3 + 2*s13^2*s23 + 11*s13*s23^2 - 3*s23^3 + 
              2*s12*(9*s13^2 + 31*s13*s23 + s23^2)) - 2*p2q*p3q*
             (9*s13^3 + 7*s13^2*s23 + 16*s13*s23^2 + 2*s23^3 + 
              s12^2*(9*s13 + 2*s23) - s12*(36*s13^2 + 60*s13*s23 + 
                5*s23^2))) - p1q^3*(p2q^2*(27*s13^3 + 13*s13^2*s23 + 
              14*s13*s23^2 + 4*s23^3 - 2*s12*(9*s13^2 + 32*s13*s23 + 
                2*s23^2)) + p3q^2*(s12^2*(27*s13 + 2*s23) + 2*s23*(7*s13^2 + 
                16*s13*s23 + s23^2) - 2*s12*(9*s13^2 + 26*s13*s23 + 
                4*s23^2)) + p2q*p3q*(2*s12^2*(9*s13 + s23) - s12*(54*s13^2 + 
                125*s13*s23 + 12*s23^2) + 2*(9*s13^3 + 9*s13^2*s23 + 
                23*s13*s23^2 + 3*s23^3)))))/(16*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13*s23*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) - ((p1q + p2q)^2*(s12 + s13 + s23)*
         (p1q^3*s23*(p2q*s12*(7*s13 - s23) + 16*p2q*s13*(s13 + s23) + 
            7*p3q*s13*(s13 + s23) - p3q*s12*(2*s13 + s23)) - 
          p3q*(p2q + p3q)*(-(p3q^2*s12^2*(9*s13 + s23)) + 
            p2q*p3q*s12*(-9*s12*s13 + 9*s13^2 + 2*s13*s23 + s23^2) + 
            p2q^2*s13*(17*s23*(s13 + s23) + 9*s12*(s13 + 2*s23))) + 
          p1q*(p3q^3*s12*(9*s12*s13 - 9*s13^2 + 2*s12*s23 - 18*s13*s23 - 
              s23^2) + p2q^2*p3q*(18*s13^3 + s12*s13*(9*s13 - 10*s23) + 
              34*s13^2*s23 + 17*s13*s23^2 + s23^3 + s12^2*(-9*s13 + s23)) + 
            p2q^3*s13*(16*s23*(s13 + s23) + s12*(9*s13 + 17*s23)) + 
            p2q*p3q^2*(9*s13^3 + 9*s13^2*s23 + s13*s23^2 + s23^3 + 
              s12^2*(-9*s13 + 3*s23) - s12*(27*s13^2 + 54*s13*s23 + 
                s23^2))) + p1q^2*(p2q^2*(32*s13*s23*(s13 + s23) + 
              s12*(9*s13^2 + 24*s13*s23 - s23^2)) + 
            p3q^2*(s12^2*s23 + 7*s13*s23*(s13 + s23) - s12*(9*s13^2 + 
                20*s13*s23 + 2*s23^2)) + p2q*p3q*(s12^2*(-9*s13 + s23) - 
              s12*s23*(14*s13 + 3*s23) + 3*s13*(3*s13^2 + 13*s13*s23 + 
                10*s23^2))))*den[-1 + ep])/(8*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)^2*s12*s13*s23*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))))*Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep*(p1q + p3q)*(s12 + s13)*(s12 + s13 + s23)*(p3q*s12 - p2q*s13 + 
          p1q*(2*s12 + s23)))/(16*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + 
       ((p1q + p3q)*((p2q + p3q)^2*(-(p3q*s12) + p2q*s13)*(s12 + s13 + s23)*
           (-(p2q*s13) + p3q*(s12 + s23)) + p1q^4*(2*s12^3 + 
            3*s12^2*(2*s13 + s23) + 2*s23*(s13^2 - s23^2) + 
            s12*(4*s13^2 + 7*s13*s23 - s23^2)) - p1q*(p2q + p3q)*
           (s12 + s13 + s23)*(2*p2q^2*s13*(2*s13 - s23) + 
            p3q^2*(2*s12^2 - 2*s12*s13 + 2*s12*s23 + s23^2) + 
            p2q*p3q*(-6*s12*s13 + 2*s13^2 - 4*s13*s23 + s23^2)) + 
          p1q^2*(s12 + s13 + s23)*(-(p2q^2*(6*s13^2 - 6*s13*s23 + s23^2)) + 
            2*p2q*p3q*(2*s12^2 - 2*s13^2 + 5*s13*s23 - 2*s23^2 + 
              2*s12*(3*s13 + s23)) + p3q^2*(2*s12^2 + (2*s13 - 3*s23)*s23 + 
              2*s12*(4*s13 + s23))) + p1q^3*(s12 + s13 + s23)*
           (p3q*(5*s12^2 + 4*(s13 - s23)*s23 + 2*s12*(5*s13 + 2*s23)) + 
            p2q*(4*s12^2 + s12*(7*s13 + 4*s23) - 2*(s13^2 - 4*s13*s23 + 
                s23^2)))))/(16*p1q*(p1q + p2q + p3q)^2*s13*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((p1q + p3q)^2*(s12 + s13 + s23)*(-(p2q*(p3q*s12 - p2q*s13)*
            (-(p2q*s13) + p3q*(s12 + s23))) + p1q^3*(2*s12^2 + s13*s23 + 
            2*s12*(s13 + s23)) + p1q*(p2q^2*s13*(-2*s13 + s23) + 
            p3q^2*s12*(2*s12 + s13 + 2*s23) - p2q*p3q*(s13^2 + 
              s23*(s12 + s23))) + p1q^2*(p3q*(4*s12^2 + 3*s12*s13 + 
              4*s12*s23 + s13*s23) + p2q*(2*s12^2 - s13*(s13 - 2*s23) + 
              2*s12*(s13 + s23))))*den[-1 + ep])/(8*p1q*(p1q + p2q + p3q)^2*
         s13*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((9*(s12 + s13 + s23)*(2*p1q^5*(p2q + p3q)*s23^2*(2*s12 + s23) - 
          p1q^4*s23*(p3q^2*(8*s12^2 + s12*(4*s13 - 3*s23) + (s13 - 4*s23)*
               s23) + 4*p2q*p3q*(s12^2 + s12*(s13 - 4*s23) + 
              (s13 - 2*s23)*s23) + p2q^2*(4*s12^2 + 8*s12*s13 - 5*s12*s23 + 
              3*s13*s23 - 4*s23^2)) - (p2q + p3q)^5*s23*
           (p3q*s12*(2*s12 + 2*s13 + s23) + p2q*(2*s12^2 + s13*s23 + 
              2*s12*(s13 + s23))) + p1q*(p2q + p3q)^3*
           (p3q^2*(4*s12^3 - 2*s12^2*s23 - 6*s12*s13*s23 + s23^3) + 
            p2q^2*(-4*s12^2*s23 + s12*(4*s13^2 - 2*s13*s23 - 2*s23^2) + 
              s23*(2*s13^2 - 2*s13*s23 + s23^2)) - 2*p2q*p3q*
             (s12*s23*(6*s13 + s23) + s12^2*(4*s13 + 5*s23) - 
              s23*(s13^2 - s13*s23 + s23^2))) + 2*p1q^2*(p2q + p3q)^2*
           (p3q^2*(4*s12^3 - 3*s12^2*s23 + s23^2*(-s13 + s23) - 
              s12*s23*(5*s13 + s23)) + p2q^2*(-4*s12^2*s23 + s12*(4*s13^2 - 
                5*s13*s23 - s23^2) + s23*(s13^2 - 3*s13*s23 + s23^2)) + 
            p2q*p3q*(2*s12*s23*(-5*s13 + s23) - s12^2*(8*s13 + 7*s23) + 
              s23*(s13^2 - 4*s13*s23 + 2*s23^2))) - p1q^3*(p2q + p3q)*
           (p3q^2*(-4*s12^3 + 13*s12^2*s23 + 2*(s13 - 2*s23)*s23^2 + 
              s12*s23*(9*s13 + 2*s23)) + p2q^2*(8*s12^2*s23 + 
              s12*(-4*s13^2 + 15*s13*s23 - 2*s23^2) - s23*(s13^2 - 
                6*s13*s23 + 4*s23^2)) + p2q*p3q*(4*s12*(3*s13 - 4*s23)*s23 + 
              s12^2*(8*s13 + 9*s23) - s23*(s13^2 - 8*s13*s23 + 8*s23^2)))))/
        (16*p1q*(p2q + p3q)*(p1q + p2q + p3q)^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) - (9*(s12 + s13 + s23)*
         (p1q^4*(p2q - p3q)*s23^2 - p1q^3*s23*(p2q^2*(s13 - 2*s23) + 
            p2q*p3q*(4*s12 - 2*s13 + s23) + p3q^2*(-2*s12 - s13 + s23)) + 
          p2q*p3q*(p2q + p3q)^2*(p3q*s12*(2*s12 + 2*s13 + s23) + 
            p2q*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23))) - 
          p1q*(p2q + p3q)*(p3q^3*s12*(s12 + s13) + p2q^2*p3q*
             (-2*s12^2 + 2*s13^2 + s12*s23 - s13*s23 + s23^2) + 
            p2q*p3q^2*(-4*s12^2 + s13^2 + s23^2 + s12*(-3*s13 + s23)) + 
            p2q^3*(2*s12^2 + s13*s23 + 2*s12*(s13 + s23))) - 
          p1q^2*(p2q^2*p3q*(-2*s12^2 - s12*s13 + s13^2 + 4*s12*s23 - 
              3*s13*s23) + p3q^3*(s12^2 + s12*(s13 - 2*s23) - s13*s23) + 
            p2q*p3q^2*(-3*s12^2 - 2*s12*s13 + s13^2 + 2*s12*s23 - 4*s13*s23 + 
              s23^2) + p2q^3*(2*s12^2 + (2*s13 - s23)*s23 + 2*s12*(s13 + 
                s23))))*den[-1 + ep])/(8*p1q*(p1q + p2q + p3q)^2*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((9*ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/
        (8*s12*(p3q*s12 - (p1q + p2q)*(s13 + s23))) + 
       (9*(s12 + s13 + s23)*(-(p2q^2*p3q*(p3q*s12 - p2q*s13)^2*
            (s12 + s13 + s23)) - p1q^4*s23^2*(2*p3q*(s13 + s23) + 
            p2q*(-s12 + s13 + s23)) + p1q^3*s23*
           (-(p2q^2*(s12 - s13 - s23)*(2*s13 - s23)) + 2*p3q^2*s12*
             (2*s13 + 3*s23) + p2q*p3q*(-2*s12^2 + 2*s12*s13 + 4*s13^2 + 
              3*s12*s23 + s13*s23 - 3*s23^2)) + p1q*(2*p3q^4*s12^3 + 
            p2q*p3q^3*s12^2*(s12 - 7*s13 - 3*s23) - p2q^4*s13^2*
             (-s12 + s13 + s23) + p2q^3*p3q*s13*(-2*s12^2 + 3*s12*s13 - 
              3*s13^2 + 4*s12*s23 - s13*s23 + 2*s23^2) + p2q^2*p3q^2*s12*
             (s12^2 + s12*(-3*s13 + s23) + 2*(2*s13 + s23)^2)) + 
          p1q^2*(-(p2q^3*s13*(s13 - 2*s23)*(-s12 + s13 + s23)) - 
            2*p3q^3*s12^2*(s13 + 3*s23) + p2q*p3q^2*s12*(s12^2 + 4*s13^2 + 
              6*s13*s23 + 6*s23^2 - s12*(s13 + 3*s23)) + 
            p2q^2*p3q*(-2*s13^3 + 4*s13^2*s23 + 5*s13*s23^2 - s23^3 - 
              2*s12^2*(s13 + s23) + s12*(2*s13^2 + 2*s13*s23 + s23^2)))))/
        (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) - (9*ep*(s12 + s13 + s23)*
         (p2q*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 
          p1q^5*s23^2*(s12 + s13 + s23) + p1q^4*s23*
           (p2q*(-2*s13^2 + 2*s13*s23 + 3*s23^2 + s12*(-2*s13 + s23)) + 
            p3q*(-2*s12^2 - 2*s12*(s13 + s23) + s23*(3*s13 + 2*s23))) + 
          p1q*(p2q + p3q)*(p3q^3*s12^2*(-2*s12 + s13) + 
            p2q^3*s13*(4*s13^2 + s12*(s13 - 2*s23) + s13*s23 - 2*s23^2) + 
            p2q*p3q^2*s12*(s12^2 + s12*(8*s13 + s23) - 2*(s13^2 + s13*s23 + 
                s23^2)) - p2q^2*p3q*(2*s12^2*(s13 + s23) + 2*s12*(5*s13^2 + 
                5*s13*s23 + s23^2) + s13*(-s13^2 + 2*s13*s23 + 2*s23^2))) + 
          p1q^2*(p2q^3*(4*s13^3 + s12*(s13 - s23)^2 - 5*s13^2*s23 - 
              5*s13*s23^2 + s23^3) + p3q^3*s12*(-2*s13*s23 + 3*s12*(s13 + 
                2*s23)) - p2q^2*p3q*(-3*s13^3 + 8*s13^2*s23 + 4*s13*s23^2 - 
              2*s23^3 + 2*s12^2*(s13 + s23) + 4*s12*(2*s13^2 + 3*s13*s23 + 
                s23^2)) + p2q*p3q^2*(s12^3 + s12^2*(4*s13 + 5*s23) + 
              s23*(-2*s13^2 + s13*s23 + s23^2) - s12*(6*s13^2 + 10*s13*s23 + 
                5*s23^2))) + p1q^3*(p2q^2*(s13^3 + s12*(s13 - s23)^2 - 
              7*s13^2*s23 - 2*s13*s23^2 + 3*s23^3) + 
            p3q^2*(s12^3 + s13*s23^2 + s12^2*(s13 + s23) - 6*s12*s23*(s13 + 
                s23)) - p2q*p3q*(2*s12^2*(s13 + s23) - s23*(-6*s13^2 + 
                s13*s23 + 3*s23^2) + s12*(2*s13^2 + 10*s13*s23 + 7*s23^2)))))/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + 
          (p1q + p2q)*(s13 + s23))) + (9*(s12 + s13 + s23)*
         (-(p2q^2*p3q*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)) - 
          p1q^4*s23^2*(2*p3q*(s13 + s23) + p2q*(-s12 + s13 + s23)) + 
          p1q^3*s23*(-(p2q^2*(s12 - s13 - s23)*(2*s13 - s23)) + 
            2*p3q^2*s12*(2*s13 + 3*s23) + p2q*p3q*(-2*s12^2 + 2*s12*s13 + 
              4*s13^2 + 3*s12*s23 + s13*s23 - 3*s23^2)) + 
          p1q*(2*p3q^4*s12^3 + p2q*p3q^3*s12^2*(s12 - 7*s13 - 3*s23) - 
            p2q^4*s13^2*(-s12 + s13 + s23) + p2q^3*p3q*s13*
             (-2*s12^2 + 3*s12*s13 - 3*s13^2 + 4*s12*s23 - s13*s23 + 
              2*s23^2) + p2q^2*p3q^2*s12*(s12^2 + s12*(-3*s13 + s23) + 
              2*(2*s13 + s23)^2)) + p1q^2*(-(p2q^3*s13*(s13 - 2*s23)*
              (-s12 + s13 + s23)) - 2*p3q^3*s12^2*(s13 + 3*s23) + 
            p2q*p3q^2*s12*(s12^2 + 4*s13^2 + 6*s13*s23 + 6*s23^2 - 
              s12*(s13 + 3*s23)) + p2q^2*p3q*(-2*s13^3 + 4*s13^2*s23 + 
              5*s13*s23^2 - s23^3 - 2*s12^2*(s13 + s23) + s12*(2*s13^2 + 
                2*s13*s23 + s23^2))))*den[-1 + ep])/(4*p1q*(p2q + p3q)*
         (p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((ep*(2*s12 - s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(8*s12*s13*(p3q*s12 - 
          (p1q + p2q)*(s13 + s23))) + (ep^2*(s12 + s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(8*s12*s13*(p3q*s12 - 
          (p1q + p2q)*(s13 + s23))) - ((s12 + s13 + s23)*
         ((p3q*s12 - p2q*s13)^2*(2*p3q*s12 + p2q*(s12 - s13 - s23)) + 
          p1q^3*(s12 - s13 - s23)*s23^2 + p1q^2*s23*
           (-(p2q*(s12 - s13 - s23)*(2*s13 - s23)) + 2*p3q*s12*
             (-s12 + s13 + 2*s23)) + p1q*(p3q^2*s12^2*(s12 - s13 - 5*s23) - 
            p2q^2*s13*(s13 - 2*s23)*(-s12 + s13 + s23) - 2*p2q*p3q*s12*
             (-s13^2 - s23^2 + s12*(s13 + s23)))))/(4*(p1q + p2q + p3q)*s12*
         s13*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       ((s12 + s13 + s23)*((p3q*s12 - p2q*s13)^2*(2*p3q*s12 + 
            p2q*(s12 - s13 - s23)) + p1q^3*(s12 - s13 - s23)*s23^2 + 
          p1q^2*s23*(-(p2q*(s12 - s13 - s23)*(2*s13 - s23)) + 
            2*p3q*s12*(-s12 + s13 + 2*s23)) + 
          p1q*(p3q^2*s12^2*(s12 - s13 - 5*s23) - p2q^2*s13*(s13 - 2*s23)*
             (-s12 + s13 + s23) - 2*p2q*p3q*s12*(-s13^2 - s23^2 + 
              s12*(s13 + s23))))*den[-1 + ep])/(4*(p1q + p2q + p3q)*s12*s13*
         (-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((9*ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + 
          (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*(p2q*s13 + p1q*s23)))/
        (8*s13*(p2q*s13 - p1q*(s12 + s23) - p3q*(s12 + s23))) - 
       (9*(s12 + s13 + s23)*(p2q*p3q^2*(p3q*s12 - p2q*s13)^2*
           (s12 + s13 + s23) + p1q^4*s23^2*(2*p2q*(s12 + s23) + 
            p3q*(s12 - s13 + s23)) - p1q*(2*p2q^4*s13^3 + p2q^3*p3q*s13^2*
             (-7*s12 + s13 - 3*s23) - p3q^4*s12^2*(s12 - s13 + s23) + 
            p2q^2*p3q^2*s13*(8*s12^2 - 3*s12*s13 + s13^2 + 8*s12*s23 + 
              s13*s23 + 2*s23^2) + p2q*p3q^3*s12*(-3*s12^2 + 3*s12*s13 - 
              2*s13^2 - s12*s23 + 4*s13*s23 + 2*s23^2)) - 
          p1q^3*s23*(p3q^2*(2*s12 - s23)*(s12 - s13 + s23) + 
            p2q^2*(4*s12*s13 + 6*s13*s23) + p2q*p3q*(4*s12^2 - 2*s13^2 + 
              3*s13*s23 - 3*s23^2 + s12*(2*s13 + s23))) + 
          p1q^2*(p3q^3*s12*(s12 - 2*s23)*(s12 - s13 + s23) + 
            2*p2q^3*s13^2*(s12 + 3*s23) - p2q^2*p3q*s13*(4*s12^2 - s12*s13 + 
              s13^2 + 6*s12*s23 - 3*s13*s23 + 6*s23^2) + 
            p2q*p3q^2*(2*s12^3 - 2*s12^2*(s13 + 2*s23) + s12*(2*s13^2 - 
                2*s13*s23 - 5*s23^2) + s23*(2*s13^2 - s13*s23 + s23^2)))))/
        (4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + 
          p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (9*ep*(s12 + s13 + s23)*(p3q*(p2q + p3q)^2*(p3q*s12 - p2q*s13)^2*
           (s12 + s13 + s23) + p1q^5*s23^2*(s12 + s13 + s23) - 
          p1q^4*s23*(p2q*(2*s12*s13 + 2*s13^2 - 3*s12*s23 + 2*s13*s23 - 
              2*s23^2) + p3q*(2*s12^2 + 2*s12*(s13 - s23) - s23*(s13 + 
                3*s23))) + p1q^3*(p3q^2*(s12^3 + s12^2*(s13 - 7*s23) - 
              2*s12*s23*(s13 + s23) + s23^2*(s13 + 3*s23)) - 
            p2q*p3q*(2*s12^2*(s13 + 3*s23) + s23*(2*s13^2 + 7*s13*s23 - 
                3*s23^2) + s12*(2*s13^2 + 10*s13*s23 - s23^2)) + 
            p2q^2*(s13*(s13^2 + s13*s23 - 6*s23^2) + s12*(s13^2 - 6*s13*s23 + 
                s23^2))) + p1q*(p2q + p3q)*(p2q^3*(s12 - 2*s13)*s13^2 + 
            p2q^2*p3q*s13*(-2*s12^2 + 8*s12*s13 + s13^2 - 2*s12*s23 + 
              s13*s23 - 2*s23^2) + p3q^3*s12*(4*s12^2 + s12*(s13 + s23) - 
              2*s23*(s13 + s23)) + p2q*p3q^2*(s12^3 - 2*s13*s23*(s13 + s23) - 
              2*s12^2*(5*s13 + s23) - 2*s12*(s13^2 + 5*s13*s23 + s23^2))) + 
          p1q^2*(p2q^3*s13*(3*s12*s13 - 2*s12*s23 + 6*s13*s23) + 
            p3q^3*(4*s12^3 + s12^2*(s13 - 5*s23) + s23^2*(s13 + s23) - 
              s12*s23*(2*s13 + 5*s23)) + p2q^2*p3q*(s13^3 + 5*s13^2*s23 - 
              5*s13*s23^2 + s23^3 - 2*s12^2*(3*s13 + s23) + s12*(4*s13^2 - 
                10*s13*s23 + s23^2)) + p2q*p3q^2*(3*s12^3 - 8*s12^2*(s13 + 
                s23) + 2*s23*(-s13^2 - 2*s13*s23 + s23^2) - 2*s12*(s13^2 + 
                6*s13*s23 + 2*s23^2)))))/(8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (9*(s12 + s13 + s23)*(p2q*p3q^2*(p3q*s12 - p2q*s13)^2*
           (s12 + s13 + s23) + p1q^4*s23^2*(2*p2q*(s12 + s23) + 
            p3q*(s12 - s13 + s23)) - p1q*(2*p2q^4*s13^3 + p2q^3*p3q*s13^2*
             (-7*s12 + s13 - 3*s23) - p3q^4*s12^2*(s12 - s13 + s23) + 
            p2q^2*p3q^2*s13*(8*s12^2 - 3*s12*s13 + s13^2 + 8*s12*s23 + 
              s13*s23 + 2*s23^2) + p2q*p3q^3*s12*(-3*s12^2 + 3*s12*s13 - 
              2*s13^2 - s12*s23 + 4*s13*s23 + 2*s23^2)) - 
          p1q^3*s23*(p3q^2*(2*s12 - s23)*(s12 - s13 + s23) + 
            p2q^2*(4*s12*s13 + 6*s13*s23) + p2q*p3q*(4*s12^2 - 2*s13^2 + 
              3*s13*s23 - 3*s23^2 + s12*(2*s13 + s23))) + 
          p1q^2*(p3q^3*s12*(s12 - 2*s23)*(s12 - s13 + s23) + 
            2*p2q^3*s13^2*(s12 + 3*s23) - p2q^2*p3q*s13*(4*s12^2 - s12*s13 + 
              s13^2 + 6*s12*s23 - 3*s13*s23 + 6*s23^2) + 
            p2q*p3q^2*(2*s12^3 - 2*s12^2*(s13 + 2*s23) + s12*(2*s13^2 - 
                2*s13*s23 - 5*s23^2) + s23*(2*s13^2 - s13*s23 + s23^2))))*
         den[-1 + ep])/(4*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + ((ep*(s12 - 2*s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(8*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - (ep^2*(s12 + s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(8*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + ((s12 + s13 + s23)*
         (p1q^3*s23^2*(s12 - s13 + s23) + (p3q*s12 - p2q*s13)^2*
           (-2*p2q*s13 + p3q*(s12 - s13 + s23)) - p1q^2*s23*
           (p3q*(2*s12 - s23)*(s12 - s13 + s23) + 2*p2q*s13*
             (s12 - s13 + 2*s23)) + p1q*(p3q^2*s12*(s12 - 2*s23)*
             (s12 - s13 + s23) + p2q^2*s13^2*(s12 - s13 + 5*s23) - 
            2*p2q*p3q*s13*(s12^2 - s12*s13 + s23*(-s13 + s23)))))/
        (4*(p1q + p2q + p3q)*s12*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + ((s12 + s13 + s23)*
         (p1q^3*s23^2*(s12 - s13 + s23) + (p3q*s12 - p2q*s13)^2*
           (-2*p2q*s13 + p3q*(s12 - s13 + s23)) - p1q^2*s23*
           (p3q*(2*s12 - s23)*(s12 - s13 + s23) + 2*p2q*s13*
             (s12 - s13 + 2*s23)) + p1q*(p3q^2*s12*(s12 - 2*s23)*
             (s12 - s13 + s23) + p2q^2*s13^2*(s12 - s13 + 5*s23) - 
            2*p2q*p3q*s13*(s12^2 - s12*s13 + s23*(-s13 + s23))))*
         den[-1 + ep])/(4*(p1q + p2q + p3q)*s12*s13*(-(p2q*s13) + 
          p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + 
     ((9*(s12 + s13 + s23)*(p1q^3*(2*p2q*(s12 + 3*s13) + 
            p3q*(5*s12 + s13 - s23))*s23^2 - 2*p1q^4*s23^3 + 
          p2q*p3q*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 
          p1q*(2*p2q^3*s13^2*(s12 + s13) + p3q^3*s12^2*(s12 + s13 - s23) + 
            p2q^2*p3q*s13*(-4*s12^2 - 3*s12*s13 + s13^2 - 2*s12*s23 - 
              3*s13*s23 - 2*s23^2) + 2*p2q*p3q^2*s12*(s12^2 - s13^2 - 
              s12*s23 - s23^2)) + p1q^2*s23*(-2*p2q^2*s13*(2*s12 + 3*s13) - 
            2*p3q^2*s12*(2*s12 + s13 - s23) + p2q*p3q*(-4*s12^2 - 2*s13^2 + 
              3*s13*s23 + s23^2 + s12*(-2*s13 + s23)))))/
        (4*p1q*(p1q + p2q + p3q)*s13*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + (9*ep*(s12 + s13 + s23)*
         ((p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*s23*(s12 + s13 + s23) + 
          p1q^4*s23^2*(-4*p2q*s13^2 - 3*p2q*s13*s23 + p2q*(s12 - 2*s23)*s23 + 
            p3q*(s13 - 2*s23)*s23 + p3q*s12*(4*s13 + s23)) + 
          p1q^3*s23*(p2q^2*(8*s13^3 + 2*s13^2*s23 + 3*s12*s23^2 + 
              s13*s23*(-2*s12 + 3*s23)) + 2*p2q*p3q*s23*(-s12^2 + 
              3*s13*(-s13 + s23) + s12*(4*s13 + 5*s23)) + 
            p3q^2*(3*s13*s23^2 - 2*s12^2*(4*s13 + s23) + s12*s23*(2*s13 + 
                7*s23))) + p1q*(p2q + p3q)*
           (-(p2q^3*s13*(4*s13^3 + s13^2*s23 + 2*s23^2*(s12 + s23) + s13*s23*
                (-3*s12 + 2*s23))) + p3q^3*s12*(s12*(3*s13 - 2*s23)*s23 - 
              2*s23^2*(s13 + s23) + s12^2*(4*s13 + 3*s23)) + 
            p2q*p3q^2*(3*s12^3*s23 - 2*s13*s23^2*(s13 + s23) - 
              2*s12*s23*(3*s13^2 + 3*s13*s23 + 2*s23^2) - s12^2*(12*s13^2 + 
                7*s13*s23 + 4*s23^2)) - p2q^2*p3q*(2*s12^2*s23*(3*s13 + 
                s23) + s13*s23*(-3*s13^2 + 4*s13*s23 + 4*s23^2) + 
              s12*(-12*s13^3 - 5*s13^2*s23 + 6*s13*s23^2 + 2*s23^3))) + 
          p1q^2*(p2q^3*(-4*s13^4 + s12*s13^2*s23 + 5*s13^3*s23 + 
              s13*s23^2*(-6*s12 + s23) + s23^3*(s12 + s23)) + 
            p3q^3*(s12*s23^2*(-6*s13 + s23) + s23^3*(s13 + s23) + 
              s12^3*(4*s13 + s23) - s12^2*s23*(7*s13 + 8*s23)) + 
            p2q*p3q^2*(s12^3*s23 + 3*s23^2*(-2*s13^2 + s13*s23 + s23^2) + 
              s12*s23*(-2*s13^2 - 6*s13*s23 + 3*s23^2) - s12^2*(12*s13^2 + 
                13*s13*s23 + 14*s23^2)) + p2q^2*p3q*(-2*s12^2*s23*(s13 + 
                3*s23) + 3*s23*(3*s13^3 - 2*s13^2*s23 + s13*s23^2 + s23^3) + 
              s12*(12*s13^3 + 7*s13^2*s23 - 6*s13*s23^2 + 3*s23^3)))))/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + (9*(s12 + s13 + s23)*
         (p1q^3*(2*p2q*(s12 + 3*s13) + p3q*(5*s12 + s13 - s23))*s23^2 - 
          2*p1q^4*s23^3 + p2q*p3q*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 
          p1q*(2*p2q^3*s13^2*(s12 + s13) + p3q^3*s12^2*(s12 + s13 - s23) + 
            p2q^2*p3q*s13*(-4*s12^2 - 3*s12*s13 + s13^2 - 2*s12*s23 - 
              3*s13*s23 - 2*s23^2) + 2*p2q*p3q^2*s12*(s12^2 - s13^2 - 
              s12*s23 - s23^2)) + p1q^2*s23*(-2*p2q^2*s13*(2*s12 + 3*s13) - 
            2*p3q^2*s12*(2*s12 + s13 - s23) + p2q*p3q*(-4*s12^2 - 2*s13^2 + 
              3*s13*s23 + s23^2 + s12*(-2*s13 + s23))))*den[-1 + ep])/
        (4*p1q*(p1q + p2q + p3q)*s13*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((9*(s12 + s13 + s23)*(p1q^3*(2*p3q*(3*s12 + s13) + 
            p2q*(s12 + 5*s13 - s23))*s23^2 - 2*p1q^4*s23^3 + 
          p2q*p3q*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 
          p1q^2*s23*(-2*p3q^2*s12*(3*s12 + 2*s13) - 2*p2q^2*s13*
             (s12 + 2*s13 - s23) + p2q*p3q*(-2*s12^2 - 2*s12*s13 - 4*s13^2 + 
              3*s12*s23 + s13*s23 + s23^2)) + 
          p1q*(2*p3q^3*s12^2*(s12 + s13) + p2q^3*s13^2*(s12 + s13 - s23) - 
            2*p2q^2*p3q*s13*(s12^2 - s13^2 + s13*s23 + s23^2) + 
            p2q*p3q^2*s12*(s12^2 - 3*s12*(s13 + s23) - 2*(2*s13^2 + s13*s23 + 
                s23^2)))))/(4*p1q*(p1q + p2q + p3q)*s12*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (9*ep*(s12 + s13 + s23)*(-((p2q + p3q)^3*(p3q*s12 - p2q*s13)^2*s23*
            (s12 + s13 + s23)) + p1q^4*s23^2*
           (-(p2q*((s13 - 2*s23)*s23 + s12*(4*s13 + s23))) + 
            p3q*(4*s12^2 + 3*s12*s23 + s23*(-s13 + 2*s23))) - 
          p1q^3*s23*(2*p2q*p3q*s23*(-3*s12^2 + 4*s12*s13 - s13^2 + 
              3*s12*s23 + 5*s13*s23) + p3q^2*(8*s12^3 + 2*s12^2*s23 + 
              3*s13*s23^2 + s12*s23*(-2*s13 + 3*s23)) + 
            p2q^2*(s13*s23*(-2*s13 + 7*s23) + s12*(-8*s13^2 + 2*s13*s23 + 
                3*s23^2))) - p1q*(p2q + p3q)*
           (-(p3q^3*s12*(4*s12^3 + s12^2*s23 + 2*s23^2*(s13 + s23) + s12*s23*
                (-3*s13 + 2*s23))) + p2q^3*s13*(s23*(3*s13^2 - 2*s13*s23 - 
                2*s23^2) + s12*(4*s13^2 + 3*s13*s23 - 2*s23^2)) + 
            p2q*p3q^2*(s12^2*(5*s13 - 4*s23)*s23 - 2*s13*s23^2*(s13 + s23) + 
              3*s12^3*(4*s13 + s23) - 2*s12*s23*(3*s13^2 + 3*s13*s23 + 
                2*s23^2)) - p2q^2*p3q*(2*s12^2*(6*s13^2 + 3*s13*s23 + 
                s23^2) + s12*s23*(7*s13^2 + 6*s13*s23 + 2*s23^2) + 
              s13*s23*(-3*s13^2 + 4*s13*s23 + 4*s23^2))) + 
          p1q^2*(p3q^3*(4*s12^4 - 5*s12^3*s23 - s12^2*s13*s23 + 
              s12*(6*s13 - s23)*s23^2 - s23^3*(s13 + s23)) - 
            p2q*p3q^2*(s12^2*(7*s13 - 6*s23)*s23 + 3*s12^3*(4*s13 + 3*s23) + 
              3*s23^2*(-2*s13^2 + s13*s23 + s23^2) + s12*s23*(-2*s13^2 - 
                6*s13*s23 + 3*s23^2)) - p2q^3*(s12*(4*s13^3 - 7*s13^2*s23 - 
                6*s13*s23^2 + s23^3) + s23*(s13^3 - 8*s13^2*s23 + s13*s23^2 + 
                s23^3)) + p2q^2*p3q*(s12*s23*(13*s13^2 + 6*s13*s23 - 
                3*s23^2) + 2*s12^2*(6*s13^2 + s13*s23 + 3*s23^2) - 
              s23*(s13^3 - 14*s13^2*s23 + 3*s13*s23^2 + 3*s23^3)))))/
        (8*p1q*(p2q + p3q)*(p1q + p2q + p3q)*s12*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + (9*(s12 + s13 + s23)*
         (p1q^3*(2*p3q*(3*s12 + s13) + p2q*(s12 + 5*s13 - s23))*s23^2 - 
          2*p1q^4*s23^3 + p2q*p3q*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23) + 
          p1q^2*s23*(-2*p3q^2*s12*(3*s12 + 2*s13) - 2*p2q^2*s13*
             (s12 + 2*s13 - s23) + p2q*p3q*(-2*s12^2 - 2*s12*s13 - 4*s13^2 + 
              3*s12*s23 + s13*s23 + s23^2)) + 
          p1q*(2*p3q^3*s12^2*(s12 + s13) + p2q^3*s13^2*(s12 + s13 - s23) - 
            2*p2q^2*p3q*s13*(s12^2 - s13^2 + s13*s23 + s23^2) + 
            p2q*p3q^2*s12*(s12^2 - 3*s12*(s13 + s23) - 2*(2*s13^2 + s13*s23 + 
                s23^2))))*den[-1 + ep])/(4*p1q*(p1q + p2q + p3q)*s12*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep]
