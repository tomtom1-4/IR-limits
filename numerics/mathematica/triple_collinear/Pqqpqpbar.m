P0Pol = (-2*ep*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
      (3*(p1q + p2q + p3q)*s23) + 
     (2*(2*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23) + 
        (p2q + p3q)*(p2q^2*(-2*s13^2 + s12*s23 - s13*s23) + 
          p3q^2*(-2*s12^2 - s12*s23 + s13*s23) + 2*p2q*p3q*
           (2*s12*s13 + s12*s23 + s13*s23)) + 
        p1q*(p2q^2*(-2*s13^2 + 2*s12*s23 + s23^2) + 
          p3q^2*(-2*s12^2 + 2*s13*s23 + s23^2) + 2*p2q*p3q*
           (2*s12*s13 + 3*s12*s23 + 3*s13*s23 + 2*s23^2))))/
      (3*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2)
 
P0Avg = (-2*ep*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
      (3*(p1q + p2q + p3q)*s23) + 
     (2*(2*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23) + 
        (p2q + p3q)*(p2q^2*(-2*s13^2 + s12*s23 - s13*s23) + 
          p3q^2*(-2*s12^2 - s12*s23 + s13*s23) + 2*p2q*p3q*
           (2*s12*s13 + s12*s23 + s13*s23)) + 
        p1q*(p2q^2*(-2*s13^2 + 2*s12*s23 + s23^2) + 
          p3q^2*(-2*s12^2 + 2*s13*s23 + s23^2) + 2*p2q*p3q*
           (2*s12*s13 + 3*s12*s23 + 3*s13*s23 + 2*s23^2))))/
      (3*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2)
 
P1Pol = ((2*(2*p1q*p2q*(s12 - s13)*s13^2 + p2q^2*s13^2*(s12 - 3*s13 - s23) + 
          p1q^2*s23*(s12 + s13 + s23)*(2*s13 + s23) + 
          p3q^2*(s12^3 + 2*s12*s13*(s13 - s23) + 2*s13^2*s23 + 
            s12^2*(-s13 + s23)) - 2*p3q*(s12 - s13)*
           (p2q*s13*(s12 - s13 + s23) + p1q*s12*(s13 + s23) + 
            p1q*s23*(2*s13 + s23))))/(9*ep*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23) + (ep*(-(p2q^3*s12*s13^2*(s12 - s13 - s23)*
            (2*s13^2 + 3*s13*s23 + s23^2)) - p1q^3*s23*(s13 + s23)*
           (s12*(2*s13 - s23)*(s13 + s23)^2 + s13*s23*(s13 + s23)^2 + 
            s12^2*(2*s13^2 - s23^2)) - p3q^3*s12^2*(-2*s13^4 + s12^3*s23 + 
            2*s13^2*s23^2 + s12^2*(2*s13^2 + 2*s13*s23 + s23^2) + 
            s12*s13*(-4*s13^2 + 3*s13*s23 + s23^2)) + p2q^2*p3q*s13^2*
           (s13*(s13 + s23)^3 + s12^3*(3*s13 + s23) + s12*(s13 + s23)^2*
             (s13 + 3*s23) - s12^2*(9*s13^2 + 11*s13*s23 + 2*s23^2)) + 
          p2q*p3q^2*s12*(-(s13^2*(3*s13 - s23)*(s13 + s23)^2) + 
            s12^3*(-s13^2 + s13*s23 + s23^2) + s12*s13*(-5*s13^3 - 
              8*s13^2*s23 - 2*s13*s23^2 + s23^3) + 
            s12^2*(9*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + s23^3)) + 
          p1q^2*(p3q*(-(s12*s13*(s13 - s23)*s23*(s13 + s23)^2) - 
              s13^2*s23*(s13 + s23)^3 + s12^3*(2*s13^3 + 4*s13^2*s23 - 
                2*s13*s23^2 - 3*s23^3) + s12^2*(-2*s13^4 + s13^2*s23^2 - 
                4*s13*s23^3 - 3*s23^4)) + p2q*(s13 + s23)*
             (s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^2*(-2*s13^3 - 
                4*s13^2*s23 + s23^3) + s12*(2*s13^4 + s13^3*s23 - 
                2*s13^2*s23^2 + s23^4))) + p1q*(p2q^2*s13^2*(s13 + s23)*
             (s23*(s13 + s23)^2 - s12^2*(4*s13 + 3*s23) + 2*s12*(2*s13^2 + 
                3*s13*s23 + s23^2)) + p3q^2*s12*(-(s13^2*(s13 - 3*s23)*
                (s13 + s23)^2) + s12^3*(-2*s13^2 + s13*s23 + 3*s23^2) + 
              s12*s13*(-2*s13^3 + 2*s13^2*s23 + 5*s13*s23^2 + s23^3) + 
              s12^2*(5*s13^3 + 4*s13^2*s23 + 5*s13*s23^2 + 3*s23^3)) + 
            p2q*p3q*(2*s12*s13^2*(s13 + s23)^3 + s13^2*(s13 - s23)*
               (s13 + s23)^3 + s12^3*(6*s13^3 + 5*s13^2*s23 - 2*s13*s23^2 - 
                2*s23^3) - s12^2*(9*s13^4 + 9*s13^3*s23 + 2*s13^2*s23^2 + 
                4*s13*s23^3 + 2*s23^4)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13^2*s23*(s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (2*p3q^3*s12^2*(s12^3*(s13 + 3*s23) + s12*s13*(6*s13^2 + 3*s13*s23 - 
             7*s23^2) + s12^2*(-4*s13^2 - 3*s13*s23 + 3*s23^2) + 
           s13^2*(-s13^2 + 8*s13*s23 + 9*s23^2)) - (p1q + p2q)*(s13 + s23)*
          (6*p1q^2*s12*s23*(s12 + s13 + s23)*(2*s13^2 + 3*s13*s23 + s23^2) + 
           p2q^2*s13^2*(-(s12^2*(s13 - 2*s23)) + s13*(s13 + s23)^2 - 
             2*s12*(12*s13^2 + 17*s13*s23 + 5*s23^2)) - 
           p1q*p2q*s13*(s13*s23*(s13 + s23)^2 - 3*s12^2*(4*s13^2 + 7*s13*
                s23 + 2*s23^2) + 2*s12*(6*s13^3 + 2*s13^2*s23 - 7*s13*s23^2 - 
               3*s23^3))) - p3q^2*s12*
          (p2q*(-(s13^2*(3*s13 - 17*s23)*(s13 + s23)^2) + 
             2*s12^3*(2*s13^2 + 9*s13*s23 + 3*s23^2) + 14*s12*s13*
              (2*s13^3 + s13^2*s23 - 2*s13*s23^2 - s23^3) + 
             s12^2*(-37*s13^3 - 45*s13^2*s23 + 10*s13*s23^2 + 6*s23^3)) + 
           p1q*(-(s13^2*(s13 - 19*s23)*(s13 + s23)^2) + 
             2*s12^3*(7*s13^2 + 14*s13*s23 + 9*s23^2) + 2*s12*s13*
              (7*s13^3 - 4*s13^2*s23 - 25*s13*s23^2 - 14*s23^3) + 
             s12^2*(-19*s13^3 - 23*s13^2*s23 + 18*s13*s23^2 + 18*s23^3))) + 
         p3q*(-(p2q^2*s13*(-17*s12*s13*(s13 - s23)*(s13 + s23)^2 + 
              s13^2*(s13 + s23)^3 - s12^3*(s13^2 + 15*s13*s23 + 10*s23^2) + 
              s12^2*(53*s13^3 + 91*s13^2*s23 + 28*s13*s23^2 - 10*s23^3))) + 
           p1q^2*(s13 + s23)*(s13^2*s23*(s13 + s23)^2 - 14*s12*s13*s23*
              (2*s13^2 + 3*s13*s23 + s23^2) + 2*s12^3*(6*s13^2 + 16*s13*s23 + 
               9*s23^2) + 3*s12^2*(-4*s13^3 + s13^2*s23 + 12*s13*s23^2 + 6*
                s23^3)) + p1q*p2q*(-(s13^2*(s13 - s23)*(s13 + s23)^3) + 
             s12*s13*(s13 + s23)^2*(15*s13^2 - 47*s13*s23 - 14*s23^2) + 
             s12^3*(25*s13^3 + 65*s13^2*s23 + 48*s13*s23^2 + 12*s23^3) + 
             s12^2*(-55*s13^4 - 86*s13^3*s23 + 3*s13^2*s23^2 + 46*s13*s23^3 + 
               12*s23^4))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23*
         (s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]] + 
     ((7*(-2*p2q*p3q*s12*(s12 - s13)*(s12 - s13 - s23) + 
          p3q^2*s12^2*(-3*s12 + s13 - s23) + p1q^2*s23*(2*s12 + s23)*
           (s12 + s13 + s23) + p2q^2*(2*s12^2*(s13 + s23) + 
            s13^2*(s13 + s23) - s12*s13*(s13 + 2*s23)) - 2*p1q*(s12 - s13)*
           (p3q*s12^2 - p2q*(s23*(s13 + s23) + s12*(s13 + 2*s23)))))/
        (9*ep*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s23) + 
       (7*ep*(p3q^3*s12^2*s13*(s12 - s13 + s23)*(2*s12^2 + 3*s12*s23 + 
            s23^2) - p1q^3*s23*(s12 + s23)*(s12*s23^3 - 
            s13*s23^2*(s13 + s23) + s12^3*(2*s13 + s23) + 
            s12^2*(2*s13^2 + 3*s13*s23 + 2*s23^2)) - p2q^3*s13^2*
           (-2*s12^4 - 4*s12^3*s13 + s13^2*s23*(s13 + s23) + 
            s12*s13*s23*(2*s13 + s23) + s12^2*(2*s13^2 + 3*s13*s23 + 
              2*s23^2)) + p2q^2*p3q*s13*(-3*s12^5 - 5*s12^4*(s13 + s23) + 
            s13^2*s23^2*(s13 + s23) + s12^3*(9*s13^2 - 8*s13*s23 - s23^2) + 
            s12*s13*s23*(s13^2 + 3*s13*s23 + s23^2) + 
            s12^2*(-s13^3 + 2*s13^2*s23 - 2*s13*s23^2 + s23^3)) + 
          p2q*p3q^2*s12^2*(s12^4 + s12^3*(s13 + 3*s23) + 
            s13*s23*(s13^2 - 2*s13*s23 + 3*s23^2) + 
            s12^2*(-9*s13^2 + 5*s13*s23 + 3*s23^2) + 
            s12*(3*s13^3 - 11*s13^2*s23 + 7*s13*s23^2 + s23^3)) + 
          p1q^2*(p3q*(s12 + s23)*(-(s12*s23^4) + s13*s23^3*(s13 + s23) + 
              s12^4*(2*s13 + s23) + s12^3*(-2*s13^2 + s13*s23 + s23^2) - 
              s12^2*s23*(4*s13^2 + 2*s13*s23 + s23^2)) - 
            p2q*(s12^5*s23 + 3*s13^2*s23^3*(s13 + s23) + s12*s13*s23^2*(
                2*s13^2 + 4*s13*s23 - s23^2) + s12^4*(2*s13^2 + s13*s23 + 
                3*s23^2) + s12^2*s23*(-4*s13^3 - s13^2*s23 - s13*s23^2 + 
                s23^3) + s12^3*(-2*s13^3 + s13*s23^2 + 3*s23^3))) + 
          p1q*(p3q^2*s12^2*(s12 + s23)*(s12^2*(4*s13 + s23) + 
              s23*(-3*s13^2 + 2*s13*s23 + s23^2) + s12*(-4*s13^2 + 
                6*s13*s23 + 2*s23^2)) + p2q*p3q*(s12^6 + 2*s12^5*(s13 + 
                s23) - 2*s13^2*s23^3*(s13 + s23) - 2*s12*s13^2*s23^2*(s13 + 
                2*s23) + s12^4*(-9*s13^2 + 6*s13*s23) + s12^3*(6*s13^3 - 
                9*s13^2*s23 + 6*s13*s23^2 - 2*s23^3) - s12^2*s23*(-5*s13^3 + 
                2*s13^2*s23 - 2*s13*s23^2 + s23^3)) + p2q^2*s13*
             (-s12^5 + s12^4*(-2*s13 + s23) + 3*s13^2*s23^2*(s13 + s23) + 
              s12*s13*s23*(s13^2 + 5*s13*s23 + s23^2) + s12^3*(5*s13^2 + 
                2*s13*s23 + 5*s23^2) + s12^2*(-2*s13^3 + 4*s13^2*s23 + 
                5*s13*s23^2 + 3*s23^3)))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13*s23*(s12 + s23)*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - (7*(6*p1q^3*s13*s23*(s12 + s23)^2*(2*s12 + s23)*
           (s12 + s13 + s23) + p3q^3*s12^2*(s12 + s23)*
           (s12^3 + 2*s13*(s13 - 5*s23)*s23 + s12^2*(-24*s13 + 2*s23) + 
            s12*(-s13^2 - 34*s13*s23 + s23^2)) - 2*p2q^3*s13^2*
           (-s12^4 + 3*s13^2*s23*(s13 + s23) + s12^3*(6*s13 + 8*s23) + 
            s12*s13*(s13^2 - 3*s13*s23 - 7*s23^2) + 
            s12^2*(-4*s13^2 + 3*s13*s23 + 9*s23^2)) + p2q*p3q^2*s12*
           (s12^5 - 10*s13^2*s23^2*(s13 + s23) + s12^4*(-17*s13 + 3*s23) + 
            s12^3*(53*s13^2 - 17*s13*s23 + 3*s23^2) + s12*s13*s23*
             (-15*s13^2 + 28*s13*s23 + 17*s23^2) + 
            s12^2*(-s13^3 + 91*s13^2*s23 + 17*s13*s23^2 + s23^3)) + 
          p2q^2*p3q*s13*(-3*s12^5 + 6*s13^2*s23^2*(s13 + s23) + 
            s12^4*(28*s13 + 11*s23) + 2*s12*s13*s23*(9*s13^2 + 5*s13*s23 - 
              7*s23^2) + s12^3*(-37*s13^2 + 14*s13*s23 + 31*s23^2) + 
            s12^2*(4*s13^3 - 45*s13^2*s23 - 28*s13*s23^2 + 17*s23^3)) - 
          p1q^2*(s12 + s23)*(p3q*(-6*s13*s23^3*(s13 + s23) + s12^4*(12*s13 + 
                s23) - 6*s12*s13*s23^2*(4*s13 + 5*s23) - 2*s12^3*(6*s13^2 + 
                4*s13*s23 - s23^2) + s12^2*s23*(-33*s13^2 - 44*s13*s23 + 
                s23^2)) + p2q*(s12^4*s23 + 18*s13^2*s23^2*(s13 + s23) + 
              2*s12*s13*s23*(16*s13^2 + 18*s13*s23 - 7*s23^2) - 
              2*s12^3*(6*s13^2 + 14*s13*s23 - s23^2) + s12^2*(12*s13^3 + 
                3*s13^2*s23 - 42*s13*s23^2 + s23^3))) + 
          p1q*(p3q^2*s12*(s12 + s23)*(s12^4 + s12^3*(-36*s13 + s23) + 
              6*s13*s23^2*(s13 + s23) + s12^2*(11*s13^2 - 38*s13*s23 - 
                s23^2) + s12*s23*(23*s13^2 + 4*s13*s23 - s23^2)) + 
            p2q*p3q*(s12^6 - 12*s13^2*s23^3*(s13 + s23) + s12^5*(-15*s13 + 
                2*s23) + s12^4*s13*(55*s13 + 17*s23) - 2*s12*s13*s23^2*(
                24*s13^2 + 23*s13*s23 - 7*s23^2) + s12^3*(-25*s13^3 + 
                86*s13^2*s23 + 93*s13*s23^2 - 2*s23^3) - s12^2*s23*(
                65*s13^3 + 3*s13^2*s23 - 75*s13*s23^2 + s23^3)) + 
            p2q^2*s13*(-s12^5 + 18*s13^2*s23^2*(s13 + s23) + s12^4*(14*s13 + 
                17*s23) + 2*s12*s13*s23*(14*s13^2 + 9*s13*s23 - 14*s23^2) + 
              s12^3*(-19*s13^2 - 8*s13*s23 + 37*s23^2) + s12^2*(14*s13^3 - 
                23*s13^2*s23 - 50*s13*s23^2 + 19*s23^3)))))/
        (36*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13*s23*(s12 + s23)*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     ((-2*ep^2*(s12 + s13 - s23)*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23))/(9*(p1q + p2q + p3q)*(s12 + s13)*s23) + 
       (ep*(p1q^2*(p2q + p3q)*s23*(-7*s12*s13^2*s23^3 + 7*s13^3*s23^2*
             (s13 + s23) + 2*s12^4*(4*s13^2 + s23^2) + s12^2*s13*
             (8*s13^3 + 4*s13^2*s23 - 13*s13*s23^2 - 2*s23^3) + 
            2*s12^3*(8*s13^3 + 2*s13^2*s23 + s23^3)) + 
          (p2q + p3q)*(4*p2q*p3q*s12^2*s13^2*(2*s13*(13*s13 - 6*s23)*s23 + 
              s12^2*(4*s13 + 21*s23) + s12*(4*s13^2 + 43*s13*s23 - 
                7*s23^2)) + p3q^2*s12^2*(2*s12^4*s23 + s13^3*(39*s13 - 
                37*s23)*s23 + s12*s13^2*(58*s13 - 21*s23)*s23 + 
              s12^3*(-8*s13^2 + 4*s13*s23 + 2*s23^2) + s12^2*s13*(-8*s13^2 + 
                29*s13*s23 + 2*s23^2)) + p2q^2*s13^2*(44*s12^4*s23 + 
              7*s13^3*s23*(s13 + s23) + 7*s12*s13^2*s23*(2*s13 + s23) + 
              s12^2*s13*(-8*s13^2 + 59*s13*s23 - 16*s23^2) - 
              4*s12^3*(2*s13^2 - 22*s13*s23 + 3*s23^2))) - 
          2*p1q*(p2q^2*s13^2*(-4*s12^4*s23 + 7*s12*s13^2*s23^2 + 
              7*s13^2*s23^2*(s13 + s23) + s12^3*(4*s13^2 - 2*s13*s23 + 
                17*s23^2) + s12^2*(4*s13^3 - 2*s13^2*s23 + 25*s13*s23^2 - 
                7*s23^3)) + p2q*p3q*(2*s12^5*s23^2 + 7*s12*s13^4*s23^2 + 
              7*s13^4*s23^2*(s13 + s23) + s12^2*s13^2*s23*(-14*s13^2 + 
                43*s13*s23 - 19*s23^2) + s12^3*s13^2*(-8*s13^2 - 20*s13*s23 + 
                23*s23^2) + 2*s12^4*(-4*s13^3 - 7*s13^2*s23 + s13*s23^2 + 
                s23^3)) + 2*p3q^2*s12^2*(-(s12*s13^2*(s13 - 5*s23)*s23) + 
              s13^2*s23*(-2*s13^2 + 11*s13*s23 - 6*s23^2) + s12^3*(2*s13^2 + 
                s23^2) + s12^2*(2*s13^3 - s13^2*s23 + s13*s23^2 + s23^3)))))/
        (18*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)*s23^2) + 
       (p1q^3*(p2q + p3q)*s23^2*(7*s13^2*s23^2*(s13 + s23) + 
           7*s12*s13^2*s23*(2*s13 + 3*s23) + 2*s12^3*(39*s13^2 + 2*s13*s23 + 
             s23^2) + 2*s12^2*(39*s13^3 + 48*s13^2*s23 + 3*s13*s23^2 + 
             s23^3)) - (p2q + p3q)^2*(p3q^2*s12^2*(2*s12^4*s23 + 
             2*s13^3*(23*s13 - 2*s23)*s23 - s12*s13^2*s23*(11*s13 + 7*s23) + 
             s12^3*(-78*s13^2 + 2*s23^2) - s12^2*s13*(78*s13^2 + 57*s13*s23 + 
               2*s23^2)) + p2q^2*s13^2*(41*s12^4*s23 - 7*s12*s13^2*s23^2 + 
             7*s13^3*s23*(s13 + s23) - s12^2*s13*(78*s13^2 + 37*s13*s23 + 2*
                s23^2) + s12^3*(-78*s13^2 + 9*s13*s23 + 11*s23^2)) + 
           p2q*p3q*s12*s13*(-4*s12^4*s23 - 14*s13^3*s23*(s13 + s23) + 
             s12*s13^2*s23*(89*s13 + 3*s23) + s12^3*(156*s13^2 + 69*s13*s23 - 
               4*s23^2) + s12^2*s13*(156*s13^2 + 172*s13*s23 + 13*s23^2))) - 
         p1q^2*s23*(p2q^2*(21*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (4*s13^2 + 6*s13*s23 - s23^2) + 2*s12^4*(39*s13^2 + 2*s13*s23 + 
               s23^2) + s12^2*s13*(156*s13^3 + 99*s13^2*s23 - 40*s13*s23^2 + 
               2*s23^3) + s12^3*(154*s13^3 + 17*s13^2*s23 + 8*s13*s23^2 + 2*
                s23^3)) + 2*p2q*p3q*(14*s13^3*s23^2*(s13 + s23) + 
             7*s12*s13^3*s23*(3*s13 + 5*s23) + s12^2*s13^2*(79*s13^2 - 18*s13*
                s23 - 68*s23^2) + s12^4*(79*s13^2 + 6*s13*s23 + 4*s23^2) + 
             s12^3*(78*s13^3 - 13*s13^2*s23 + 10*s13*s23^2 + 4*s23^3)) + 
           p3q^2*(7*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (2*s13^2 + 4*s13*s23 + s23^2) + 2*s12^4*(78*s13^2 + 4*s13*s23 + 
               3*s23^2) + s12^2*s13*(78*s13^3 + 17*s13^2*s23 - 20*s13*s23^2 - 
               2*s23^3) + s12^3*(154*s13^3 + 109*s13^2*s23 + 12*s13*s23^2 + 6*
                s23^3))) + p1q*(p2q^3*s13^2*(-82*s12^4*s23 + 
             21*s13^2*s23^2*(s13 + s23) + s12^3*(78*s13^2 - 89*s13*s23 - 24*
                s23^2) + 7*s12*s13*s23*(2*s13^2 + 3*s13*s23 - 2*s23^2) + 
             s12^2*(78*s13^3 - 75*s13^2*s23 - 83*s13*s23^2 - 2*s23^3)) + 
           p2q^2*p3q*(4*s12^5*s23*(s13 + s23) + 35*s13^4*s23^2*(s13 + s23) + 
             7*s12*s13^3*s23*(4*s13^2 + 5*s13*s23 - 4*s23^2) + 
             2*s12^2*s13^2*(39*s13^3 - 161*s13^2*s23 - 80*s13*s23^2 - 2*
                s23^3) + s12^4*(-156*s13^3 - 309*s13^2*s23 + 4*s13*s23^2 + 4*
                s23^3) - s12^3*s13*(78*s13^3 + 417*s13^2*s23 + 141*s13*
                s23^2 + 4*s23^3)) + p3q^3*s12^2*
            (s13^2*s23*(-92*s13^2 + s13*s23 - 7*s23^2) - s12*s13*s23*
              (79*s13^2 + 98*s13*s23 + 4*s23^2) + s12^3*(78*s13^2 + 4*s13*
                s23 + 6*s23^2) + s12^2*(78*s13^3 - 65*s13^2*s23 + 6*s13*
                s23^2 + 6*s23^3)) + p2q*p3q^2*(14*s13^4*s23^2*(s13 + s23) + 
             14*s12*s13^3*s23*(s13^2 + s13*s23 - s23^2) + 
             2*s12^5*(39*s13^2 + 4*s13*s23 + 5*s23^2) - s12^2*s13^2*s23*
              (339*s13^2 + 76*s13*s23 + 9*s23^2) - 2*s12^4*(39*s13^3 + 146*
                s13^2*s23 - 5*s13*s23^2 - 5*s23^3) - s12^3*s13*
              (156*s13^3 + 407*s13^2*s23 + 215*s13*s23^2 + 8*s23^3))))/
        (9*ep*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) + 
       (-(p1q^3*(p2q + p3q)*s23^2*(21*s13^4*s23^2*(s13 + s23) + 
            2*s12^5*(78*s13^2 + 8*s13*s23 + 3*s23^2) + 7*s12*s13^3*s23*
             (8*s13^2 + 15*s13*s23 + 4*s23^2) + s12^2*s13^2*
             (156*s13^3 + 272*s13^2*s23 + 77*s13*s23^2 - 11*s23^3) + 
            6*s12^4*(78*s13^3 + 32*s13^2*s23 + 5*s13*s23^2 + s23^3) + 
            s12^3*s13*(468*s13^3 + 392*s13^2*s23 + 17*s13*s23^2 + 
              8*s23^3))) + (p2q + p3q)^2*(s12 + s13)*
          (p3q^2*s12^2*(6*s12^5*s23 + s12*s13^3*(127*s13 - 86*s23)*s23 + 
             s13^4*(143*s13 - 72*s23)*s23 + 6*s12^4*(-26*s13^2 + s23^2) - 
             3*s12^2*s13^2*(52*s13^2 + 21*s13*s23 + 2*s23^2) - 
             s12^3*s13*(312*s13^2 + 53*s13*s23 + 6*s23^2)) + 
           p2q^2*s13^2*(133*s12^5*s23 - 21*s12*s13^3*s23^2 + 
             21*s13^4*s23*(s13 + s23) + s12^2*s13^2*(-156*s13^2 + 27*s13*
                s23 - 11*s23^2) + s12^4*(-156*s13^2 + 232*s13*s23 + 18*
                s23^2) + s12^3*s13*(-312*s13^2 + 147*s13*s23 + 29*s23^2)) + 
           p2q*p3q*s12*s13*(-10*s12^5*s23 + s12*s13^3*(362*s13 - 33*s23)*
              s23 - 35*s13^4*s23*(s13 + s23) + s12^4*(312*s13^2 + 257*s13*
                s23 - 10*s23^2) + 3*s12^2*s13^2*(104*s13^2 + 286*s13*s23 + 3*
                s23^2) + s12^3*s13*(624*s13^2 + 728*s13*s23 + 37*s23^2))) + 
         p1q^2*s23*(p2q^2*(63*s13^5*s23^2*(s13 + s23) + 
             2*s12^6*(78*s13^2 + 8*s13*s23 + 3*s23^2) + 7*s12*s13^4*s23*
              (16*s13^2 + 33*s13*s23 + 8*s23^2) + s12^2*s13^3*
              (312*s13^3 + 328*s13^2*s23 + 116*s13*s23^2 - 59*s23^3) + 
             s12^3*s13^2*(928*s13^3 + 456*s13^2*s23 - 83*s13*s23^2 - 30*
                s23^3) + s12^5*(616*s13^3 + 32*s13^2*s23 + 30*s13*s23^2 + 6*
                s23^3) + s12^4*s13*(1076*s13^3 + 256*s13^2*s23 - 47*s13*
                s23^2 + 8*s23^3)) + 2*p2q*p3q*(42*s13^5*s23^2*(s13 + s23) + 
             42*s12*s13^4*s23*(2*s13^2 + 4*s13*s23 + s23^2) + 
             4*s12^6*(40*s13^2 + 6*s13*s23 + 3*s23^2) + s12^2*s13^3*
              (160*s13^3 + 72*s13^2*s23 + 53*s13*s23^2 - 32*s23^3) + 
             2*s12^3*s13^2*(238*s13^3 - 24*s13^2*s23 - 93*s13*s23^2 - 16*
                s23^3) + 4*s12^5*(119*s13^3 - 7*s13^2*s23 + 12*s13*s23^2 + 3*
                s23^3) + s12^4*s13*(632*s13^3 - 88*s13^2*s23 - 117*s13*
                s23^2 + 12*s23^3)) + p3q^2*(21*s13^5*s23^2*(s13 + s23) + 
             7*s12*s13^4*s23*(8*s13^2 + 15*s13*s23 + 4*s23^2) + 
             2*s12^6*(156*s13^2 + 16*s13*s23 + 9*s23^2) + s12^3*s13^2*
              (616*s13^3 + 336*s13^2*s23 + 7*s13*s23^2 - 34*s23^3) + 
             s12^2*s13^3*(156*s13^3 + 112*s13^2*s23 + 138*s13*s23^2 - 5*
                s23^3) + 2*s12^5*(464*s13^3 + 104*s13^2*s23 + 33*s13*s23^2 + 
               9*s23^3) + s12^4*s13*(1076*s13^3 + 456*s13^2*s23 - 39*s13*
                s23^2 + 16*s23^3))) + 
         p1q*(p3q^3*s12*(21*s13^5*s23^2*(s13 + s23) - 
             2*s12^6*(78*s13^2 + 8*s13*s23 + 9*s23^2) + s12*s13^4*s23*
              (212*s13^2 - 86*s13*s23 + 111*s23^2) + s12^2*s13^3*s23*
              (516*s13^2 - 20*s13*s23 + 135*s23^2) + s12^4*s13*
              (-468*s13^3 + 420*s13^2*s23 + 109*s13*s23^2 - 8*s23^3) - 
             2*s12^5*(234*s13^3 - 70*s13^2*s23 + 21*s13*s23^2 + 9*s23^3) + 
             s12^3*s13^2*(-156*s13^3 + 568*s13^2*s23 + 220*s13*s23^2 + 35*
                s23^3)) - 2*p2q*p3q^2*(21*s13^6*s23^2*(s13 + s23) + 
             s12^2*s13^4*s23*(-344*s13^2 + 129*s13*s23 - 130*s23^2) + 
             7*s12*s13^5*s23*(4*s13^2 + 5*s13*s23 - 2*s23^2) + 
             s12^7*(78*s13^2 + 16*s13*s23 + 15*s23^2) - s12^5*s13*
              (234*s13^3 + 986*s13^2*s23 + 86*s13*s23^2 - 3*s23^3) + 
             s12^6*(78*s13^3 - 308*s13^2*s23 + 34*s13*s23^2 + 15*s23^3) - 
             2*s12^4*s13^2*(195*s13^3 + 692*s13^2*s23 + 103*s13*s23^2 + 16*
                s23^3) - s12^3*s13^3*(156*s13^3 + 1094*s13^2*s23 - 14*s13*
                s23^2 + 145*s23^3)) + p2q^2*p3q*(-105*s13^6*s23^2*
              (s13 + s23) - 4*s12^7*s23*(4*s13 + 3*s23) - 7*s12*s13^5*s23*
              (16*s13^2 + 34*s13*s23 + 3*s23^2) + 4*s12^6*(78*s13^3 + 162*
                s13^2*s23 - 5*s13*s23^2 - 3*s23^3) + 2*s12^5*s13*
              (390*s13^3 + 1014*s13^2*s23 + 11*s13*s23^2 + 4*s23^3) + 
             s12^4*s13^2*(468*s13^3 + 2848*s13^2*s23 + 207*s13*s23^2 + 40*
                s23^3) + 3*s12^3*s13^3*(-52*s13^3 + 724*s13^2*s23 + 24*s13*
                s23^2 + 75*s23^3) + s12^2*s13^4*(-156*s13^3 + 576*s13^2*s23 - 
               238*s13*s23^2 + 229*s23^3)) + p2q^3*s13*
            (-63*s13^5*s23^2*(s13 + s23) + 2*s12^6*s23*(86*s13 + 3*s23) - 
             7*s12*s13^4*s23*(8*s13^2 + 21*s13*s23 + 4*s23^2) - 
             2*s12^2*s13^3*(78*s13^3 - 50*s13^2*s23 + 33*s13*s23^2 - 40*
                s23^3) + s12^5*(-156*s13^3 + 476*s13^2*s23 - 41*s13*s23^2 + 6*
                s23^3) + s12^4*s13*(-468*s13^3 + 648*s13^2*s23 + 15*s13*
                s23^2 + 11*s23^3) + s12^3*(-468*s13^5 + 500*s13^4*s23 + 80*
                s13^3*s23^2 + 70*s13^2*s23^3))))/(18*(p2q + p3q)^2*
         (p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)^2*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) + 
       ((-4*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23) + (p2q + p3q)*
           (2*p2q*p3q*(-4*s12*s13 + s12*s23 + s13*s23) + 
            p3q^2*(4*s12^2 + 5*s12*s23 + s13*s23) + 
            p2q^2*(4*s13^2 + s12*s23 + 5*s13*s23)) + 
          p1q*(p2q^2*(4*s13^2 - 4*s12*s23 - 5*s23^2) + 
            p3q^2*(4*s12^2 - 4*s13*s23 - 5*s23^2) - 2*p2q*p3q*
             (4*s12*s13 + 6*s12*s23 + 6*s13*s23 + 7*s23^2)))*den[-3 + 2*ep])/
        (2*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2) + 
       nl*((2*ep*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
          (3*(p1q + p2q + p3q)*s23) + (-4*p1q^2*(p2q + p3q)*s23*
            (s12 + s13 + s23) - (p2q + p3q)*(p2q^2*(-4*s13^2 + s12*s23 - 3*
                s13*s23) + p3q^2*(-4*s12^2 - 3*s12*s23 + s13*s23) + 
             2*p2q*p3q*(4*s12*s13 + s12*s23 + s13*s23)) + 
           p1q*(p2q^2*(4*s13^2 - 4*s12*s23 - 3*s23^2) + 
             p3q^2*(4*s12^2 - 4*s13*s23 - 3*s23^2) - 2*p2q*p3q*
              (4*s12*s13 + 6*s12*s23 + 6*s13*s23 + 5*s23^2)))/
          (3*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2) + 
         ((-4*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23) + (p2q + p3q)*
             (2*p2q*p3q*(-4*s12*s13 + s12*s23 + s13*s23) + p3q^2*(4*s12^2 + 
                5*s12*s23 + s13*s23) + p2q^2*(4*s13^2 + s12*s23 + 
                5*s13*s23)) + p1q*(p2q^2*(4*s13^2 - 4*s12*s23 - 5*s23^2) + 
              p3q^2*(4*s12^2 - 4*s13*s23 - 5*s23^2) - 2*p2q*p3q*(4*s12*s13 + 
                6*s12*s23 + 6*s13*s23 + 7*s23^2)))*den[-3 + 2*ep])/
          (3*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2)))*
      Int[DS[k]*DS[k + p2 + p3]] + 
     ((-2*ep^2*(5*s12 + 5*s13 + s23)*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23))/(9*(p1q + p2q + p3q)*(s12 + s13)*s23) + 
       (-(p1q^3*s23^2*(7*s13^2*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
             (2*s13 + 3*s23) + 2*s12^3*(2*s13^2 + 2*s13*s23 + s23^2) + 
            2*s12^2*(2*s13^3 + 11*s13^2*s23 + 3*s13*s23^2 + s23^3))) + 
         (p2q + p3q)*(p3q^2*s12^2*(2*s12^4*s23 + s13^3*(9*s13 - 5*s23)*s23 - 
             s12*s13^2*s23*(12*s13 + 7*s23) + s12^3*(-4*s13^2 + 2*s23^2) - 
             s12^2*s13*(4*s13^2 + 19*s13*s23 + 2*s23^2)) - 
           2*p2q*p3q*s12*s13*(2*s12^4*s23 + 7*s13^3*s23*(s13 + s23) - 
             s12*s13^2*s23*(8*s13 + s23) + 2*s12^3*(-2*s13^2 + s13*s23 + s23^
                2) - s12^2*s13*(4*s13^2 + 11*s13*s23 + 6*s23^2)) + 
           p2q^2*s13^2*(4*s12^4*s23 - 7*s12*s13^2*s23^2 + 7*s13^3*s23*
              (s13 + s23) + s12^2*s13*(-4*s13^2 + s13*s23 - 2*s23^2) + 
             s12^3*(-4*s13^2 + 8*s13*s23 + 10*s23^2))) + 
         p1q^2*s23*(p2q*(21*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (4*s13^2 + 6*s13*s23 - s23^2) + 2*s12^4*(2*s13^2 + 2*s13*s23 + 
               s23^2) + 2*s12^3*(2*s13^3 + 8*s13^2*s23 + 4*s13*s23^2 + s23^
                3) + s12^2*s13*(8*s13^3 + 24*s13^2*s23 - 3*s13*s23^2 + 2*
                s23^3)) + p3q*(7*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (2*s13^2 + 4*s13*s23 + s23^2) + s12^4*(8*s13^2 + 8*s13*s23 + 6*
                s23^2) + s12^2*s13*(4*s13^3 + 16*s13^2*s23 + 17*s13*s23^2 - 2*
                s23^3) + 2*s12^3*(2*s13^3 + 17*s13^2*s23 + 6*s13*s23^2 + 3*
                s23^3))) + p1q*(p2q^2*s13^2*(8*s12^4*s23 - 21*s13^2*s23^2*
              (s13 + s23) - 7*s12*s13*s23*(2*s13^2 + 3*s13*s23 - 2*s23^2) + 
             s12^3*(-4*s13^2 + 12*s13*s23 + 22*s23^2) + 
             2*s12^2*(-2*s13^3 + s13^2*s23 + 4*s13*s23^2 + s23^3)) - 
           2*p2q*p3q*(2*s12^5*s23*(s13 + s23) + 7*s13^4*s23^2*(s13 + s23) + 
             7*s12*s13^3*s23*(s13^2 + s13*s23 - s23^2) - 2*s12^2*s13^2*s23*
              (7*s13^2 + s13*s23 + s23^2) + 2*s12^4*(-2*s13^3 - 2*s13^2*s23 + 
               s13*s23^2 + s23^3) - s12^3*s13*(4*s13^3 + 15*s13^2*s23 + 22*
                s13*s23^2 + 2*s23^3)) - p3q^2*s12^2*
            (s13^2*s23*(-18*s13^2 + 3*s13*s23 - 7*s23^2) - 
             s12*s13*s23*(2*s13^2 + 23*s13*s23 + 4*s23^2) + 
             s12^3*(4*s13^2 + 4*s13*s23 + 6*s23^2) + s12^2*(4*s13^3 + 8*s13^2*
                s23 + 6*s13*s23^2 + 6*s23^3))))/(9*ep*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       (ep*(p2q^4*s13^3*(s13 + s23)^2*(-32*s12^5*s23 + 7*s13^3*s23^2*
             (s13 + s23) + 7*s12*s13^2*s23^2*(2*s13 + s23) + 
            s12^4*(20*s13^2 - 29*s13*s23 - 34*s23^2) + s12^2*s13*s23*
             (27*s13^2 + 40*s13*s23 - 6*s23^2) + s12^3*(20*s13^3 + 
              18*s13^2*s23 + 7*s13*s23^2 - 2*s23^3)) + 
          p3q^4*s12^3*(s12 + s23)^2*(2*s12^4*s23^2 - 37*s13^3*s23*
             (s13 + s23)^2 - 3*s12*s13^2*s23*(8*s13^2 + 11*s13*s23 + 
              7*s23^2) + 2*s12^3*(10*s13^3 + 11*s13^2*s23 + 2*s13*s23^2 + 
              s23^3) + s12^2*s13*(20*s13^3 + 23*s13^2*s23 + 15*s13*s23^2 + 
              2*s23^3)) + p1q^4*s23^2*(s12 + s23)*(s13 + s23)*
           (7*s12*s13^2*s23^3*(s13 + s23) - 7*s13^3*s23^2*(s13 + s23)^2 + 
            s12^5*(4*s13^2 - 2*s23^2) + 2*s12^4*(3*s13^3 + 5*s13^2*s23 - 
              2*s23^3) + 2*s12^3*(8*s13^4 + 12*s13^3*s23 + 5*s13^2*s23^2 + 
              s13*s23^3 - s23^4) + s12^2*s13*(14*s13^4 + 30*s13^3*s23 + 
              25*s13^2*s23^2 + 11*s13*s23^3 + 2*s23^4)) + 
          p2q*p3q^3*s12^2*(s13^3*s23^3*(s13 + s23)^2*(37*s13 + 41*s23) - 
            2*s12^6*s23*(-s13^2 + 2*s13*s23 + s23^2) - 
            s12^5*(80*s13^4 + 157*s13^3*s23 + 63*s13^2*s23^2 + 14*s13*s23^3 + 
              6*s23^4) + s12*s13^2*s23^2*(104*s13^4 + 272*s13^3*s23 + 
              243*s13^2*s23^2 + 100*s13*s23^3 + 25*s23^4) + 
            s12^2*s13*s23*(81*s13^5 + 82*s13^4*s23 - 66*s13^3*s23^2 - 
              26*s13^2*s23^3 + 9*s13*s23^4 - 2*s23^5) - 
            s12^3*s23*(155*s13^5 + 443*s13^4*s23 + 380*s13^3*s23^2 + 
              122*s13^2*s23^3 + 10*s13*s23^4 + 2*s23^5) - 
            s12^4*(80*s13^5 + 347*s13^4*s23 + 452*s13^3*s23^2 + 
              171*s13^2*s23^3 + 18*s13*s23^4 + 6*s23^5)) + 
          p2q^3*p3q*s13^2*(-7*s13^3*s23^3*(s13 + s23)^3 - 7*s12*s13^2*s23^2*
             (s13 + s23)^3*(2*s13 + s23) + 2*s12^6*s23*(33*s13^2 + 
              47*s13*s23 + 16*s23^2) + s12^5*(-80*s13^4 - 135*s13^3*s23 + 
              37*s13^2*s23^2 + 172*s13*s23^3 + 80*s23^4) - 
            s12^4*(80*s13^5 + 337*s13^4*s23 + 448*s13^3*s23^2 + 
              136*s13^2*s23^3 - 123*s13*s23^4 - 64*s23^5) + 
            s12^3*s23*(-177*s13^5 - 477*s13^4*s23 - 365*s13^3*s23^2 - 
              16*s13^2*s23^3 + 65*s13*s23^4 + 16*s23^5) + s12^2*s13*s23*
             (7*s13^5 - 48*s13^4*s23 - 171*s13^3*s23^2 - 157*s13^2*s23^3 - 
              21*s13*s23^4 + 20*s23^5)) + p2q^2*p3q^2*s12*s13*
           (7*s13^4*s23^3*(s13 + s23)^2 + 2*s12^6*s23*(-18*s13^2 - 
              14*s13*s23 + s23^2) + s12^5*(120*s13^4 + 259*s13^3*s23 + 
              94*s13^2*s23^2 - 19*s13*s23^3 + 4*s23^4) + s12*s13^2*s23^2*
             (-23*s13^4 - 24*s13^3*s23 + 70*s13^2*s23^2 + 127*s13*s23^3 + 
              56*s23^4) + s12^3*s13*s23*(289*s13^4 + 793*s13^3*s23 + 
              821*s13^2*s23^2 + 446*s13*s23^3 + 107*s23^4) + 
            s12^4*(120*s13^5 + 563*s13^4*s23 + 778*s13^3*s23^2 + 
              419*s13^2*s23^3 + 80*s13*s23^4 + 2*s23^5) + s12^2*s13*s23*
             (-51*s13^5 + 54*s13^4*s23 + 434*s13^3*s23^2 + 506*s13^2*s23^3 + 
              213*s13*s23^4 + 36*s23^5)) + p1q^3*s23*
           (p3q*(s12 + s23)*(7*s12*s13^2*s23^3*(s13 + s23)^3 - 
              7*s13^3*s23^3*(s13 + s23)^3 + s12^6*(-4*s13^3 - 8*s13^2*s23 + 
                4*s13*s23^2 + 6*s23^3) + 2*s12^5*(11*s13^4 + 18*s13^3*s23 + 
                7*s13^2*s23^2 + 5*s13*s23^3 + 5*s23^4) + s12^2*s13*s23*(
                55*s13^5 + 153*s13^4*s23 + 126*s13^3*s23^2 + 8*s13^2*s23^3 - 
                18*s13*s23^4 + 2*s23^5) + s12^4*(28*s13^5 + 85*s13^4*s23 + 
                98*s13^3*s23^2 + 43*s13^2*s23^3 + 2*s13*s23^4 + 2*s23^5) + 
              s12^3*(34*s13^6 + 132*s13^5*s23 + 161*s13^4*s23^2 + 
                59*s13^3*s23^3 - 4*s13^2*s23^4 - 2*s13*s23^5 - 2*s23^6)) + 
            p2q*(s13 + s23)*(7*s13^3*(3*s13 - s23)*s23^3*(s13 + s23)^2 + 
              s12^6*(24*s13^3 + 30*s13^2*s23 - 2*s23^3) + s12^5*(38*s13^4 + 
                107*s13^3*s23 + 83*s13^2*s23^2 + 2*s13*s23^3 - 6*s23^4) + 
              7*s12*s13^2*s23^2*(2*s13^4 + 5*s13^3*s23 + s13^2*s23^2 - 
                s13*s23^3 + s23^4) + 2*s12^4*(16*s13^5 + 75*s13^4*s23 + 
                88*s13^3*s23^2 + 33*s13^2*s23^3 + 3*s13*s23^4 - 3*s23^5) + 
              s12^2*s13*s23*(-28*s13^5 + 9*s13^4*s23 + 83*s13^3*s23^2 + 
                46*s13^2*s23^3 + 2*s13*s23^4 + 2*s23^5) + s12^3*(-14*s13^6 + 
                41*s13^5*s23 + 188*s13^4*s23^2 + 139*s13^3*s23^3 + 
                8*s13^2*s23^4 + 6*s13*s23^5 - 2*s23^6))) + 
          p1q*(p2q^3*s13^2*(s13 + s23)*(18*s12^6*s23*(s13 + s23) + 
              7*s13^3*(s13 - 3*s23)*s23^2*(s13 + s23)^2 - s12^5*(20*s13^3 + 
                89*s13^2*s23 + 33*s13*s23^2 - 38*s23^3) + 7*s12*s13^2*s23^2*(
                s13^3 - 3*s13^2*s23 - 5*s13*s23^2 - s23^3) + 
              s12^4*s23*(-147*s13^3 - 258*s13^2*s23 - 89*s13*s23^2 + 
                22*s23^3) + s12^2*s13*s23*(41*s13^4 + 15*s13^3*s23 - 
                118*s13^2*s23^2 - 72*s13*s23^3 + 20*s23^4) + 
              s12^3*(20*s13^5 - 55*s13^4*s23 - 224*s13^3*s23^2 - 
                171*s13^2*s23^3 - 18*s13*s23^4 + 2*s23^5)) + 
            p3q^3*s12^2*(s12 + s23)*(2*s12^6*s23^2 + s13^3*s23^2*(s13 + s23)^
                2*(33*s13 + 37*s23) + 2*s12^5*(10*s13^3 + 13*s13^2*s23 + 
                s13*s23^2 - s23^3) - s12^4*s23*(25*s13^3 + 5*s13^2*s23 + 
                6*s13*s23^2 + 10*s23^3) - s12^2*s13*s23*(79*s13^4 + 
                208*s13^3*s23 + 121*s13^2*s23^2 + 12*s13*s23^3 + 2*s23^4) + 
              s12*s13^2*s23*(33*s13^4 + 37*s13^3*s23 + 6*s13^2*s23^2 + 
                47*s13*s23^3 + 45*s23^4) - s12^3*(20*s13^5 + 107*s13^4*s23 + 
                169*s13^3*s23^2 + 88*s13^2*s23^3 + 10*s13*s23^4 + 6*s23^5)) + 
            p2q^2*p3q*s13*(-7*s12*s13^3*(s13 - 3*s23)*s23^2*(s13 + s23)^3 - 
              7*s13^3*(s13 - 2*s23)*s23^3*(s13 + s23)^3 - 4*s12^7*s13*s23*(
                5*s13 + 4*s23) + s12^5*s23*(241*s13^4 + 710*s13^3*s23 + 
                690*s13^2*s23^2 + 209*s13*s23^3 - 8*s23^4) + 
              s12^6*(60*s13^4 + 242*s13^3*s23 + 235*s13^2*s23^2 + 
                55*s13*s23^3 - 4*s23^4) + s12^3*s13*s23*(-229*s13^5 - 
                381*s13^4*s23 + 212*s13^3*s23^2 + 640*s13^2*s23^3 + 
                303*s13*s23^4 + 27*s23^5) + s12^2*s13*s23*(7*s13^6 - 
                85*s13^5*s23 - 187*s13^4*s23^2 + 13*s13^3*s23^3 + 
                219*s13^2*s23^4 + 97*s13*s23^5 - 14*s23^6) + 
              s12^4*(-60*s13^6 - 89*s13^5*s23 + 324*s13^4*s23^2 + 
                805*s13^3*s23^3 + 641*s13^2*s23^4 + 179*s13*s23^5 - 
                4*s23^6)) + p2q*p3q^2*s12*(-14*s13^4*s23^4*(s13 + s23)^2 - 
              2*s12^7*s23*(-s13^2 + s13*s23 + s23^2) - s12^6*(60*s13^4 + 
                159*s13^3*s23 + 75*s13^2*s23^2 + 2*s23^4) + s12^5*s23*(
                -89*s13^4 - 246*s13^3*s23 - 127*s13^2*s23^2 + 12*s13*s23^3 + 
                6*s23^4) + 2*s12*s13^2*s23^2*(-13*s13^5 + 10*s13^4*s23 + 
                112*s13^3*s23^2 + 137*s13^2*s23^3 + 36*s13*s23^4 - 
                12*s23^5) + s12^2*s13^2*s23*(-40*s13^5 + 240*s13^4*s23 + 
                855*s13^3*s23^2 + 836*s13^2*s23^3 + 303*s13*s23^4 + 
                42*s23^5) + s12^3*s23*(287*s13^6 + 820*s13^5*s23 + 
                865*s13^4*s23^2 + 535*s13^3*s23^3 + 179*s13^2*s23^4 + 
                6*s13*s23^5 + 4*s23^6) + s12^4*(60*s13^6 + 231*s13^5*s23 + 
                309*s13^4*s23^2 + 217*s13^3*s23^3 + 63*s13^2*s23^4 + 
                16*s13*s23^5 + 10*s23^6))) + 
          p1q^2*(p3q^2*s12*(s12 + s23)*(7*s13^3*s23^4*(s13 + s23)^2 - 
              2*s12^6*s23*(-2*s13^2 + s13*s23 + 3*s23^2) + s12*s13^2*s23^2*(
                74*s13^4 + 212*s13^3*s23 + 178*s13^2*s23^2 + 9*s13*s23^3 - 
                31*s23^4) - 2*s12^5*(10*s13^4 + 36*s13^3*s23 + 25*s13^2*
                 s23^2 + 4*s13*s23^3 + 3*s23^4) - s12^4*(20*s13^5 + 
                81*s13^4*s23 + 127*s13^3*s23^2 + 72*s13^2*s23^3 - 6*s23^5) + 
              s12^2*s13*s23*(67*s13^5 + 190*s13^4*s23 + 201*s13^3*s23^2 + 
                109*s13^2*s23^3 + 29*s13*s23^4 - 2*s23^5) + s12^3*s23*(
                -14*s13^5 - 31*s13^4*s23 + 31*s13^3*s23^2 + 42*s13^2*s23^3 + 
                4*s13*s23^4 + 6*s23^5)) - p2q^2*s13*(s13 + s23)*
             (21*s13^3*(s13 - s23)*s23^3*(s13 + s23)^2 - 2*s12^6*s13*s23*(
                21*s13 + 22*s23) + s12^5*(20*s13^4 + 19*s13^3*s23 - 
                100*s13^2*s23^2 - 107*s13*s23^3 - 2*s23^4) + 7*s12*s13^2*s23^
                2*(s13^4 + 4*s13^3*s23 - 2*s13*s23^3 + s23^4) + 
              s12^4*(20*s13^5 + 106*s13^4*s23 + 61*s13^3*s23^2 - 
                91*s13^2*s23^3 - 68*s13*s23^4 - 4*s23^5) + s12^3*s23*(
                107*s13^5 + 222*s13^4*s23 + 34*s13^3*s23^2 - 74*s13^2*s23^3 + 
                11*s13*s23^4 - 2*s23^5) + s12^2*s13*s23*(-14*s13^5 + 
                80*s13^4*s23 + 157*s13^3*s23^2 + 13*s13^2*s23^3 - 
                34*s13*s23^4 + 16*s23^5)) + p2q*p3q*(7*s13^3*(2*s13 - s23)*
               s23^4*(s13 + s23)^3 + 7*s12*s13^2*s23^3*(s13 + s23)^3*(
                2*s13^2 - 2*s13*s23 + s23^2) + s12^7*(-34*s13^3*s23 - 
                32*s13^2*s23^2 + 4*s13*s23^3 + 4*s23^4) + s12^6*(40*s13^5 + 
                119*s13^4*s23 + 77*s13^3*s23^2 - 4*s13^2*s23^3 + 
                8*s13*s23^4 + 10*s23^5) + s12^4*s23*(149*s13^6 + 
                569*s13^5*s23 + 790*s13^4*s23^2 + 544*s13^3*s23^3 + 
                174*s13^2*s23^4 - 2*s13*s23^5 - 2*s23^6) + s12^2*s13*s23^2*(
                -62*s13^6 - 54*s13^5*s23 + 208*s13^4*s23^2 + 329*s13^3*
                 s23^3 + 109*s13^2*s23^4 - 18*s13*s23^5 + 2*s23^6) + 
              s12^5*(40*s13^6 + 219*s13^5*s23 + 454*s13^4*s23^2 + 
                439*s13^3*s23^3 + 158*s13^2*s23^4 + 2*s13*s23^5 + 6*s23^6) + 
              s12^3*s23*(-69*s13^7 + 62*s13^6*s23 + 619*s13^5*s23^2 + 
                784*s13^4*s23^3 + 311*s13^3*s23^4 + 19*s13^2*s23^5 + 
                2*s13*s23^6 - 2*s23^7)))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13^2*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (p1q^5*s23^2*(s12 + s23)^2*(s13 + s23)^2*(21*s13^4*s23^2*(s13 + s23) + 
           2*s12^5*(8*s13^2 + 6*s13*s23 + 3*s23^2) + 7*s12*s13^3*s23*
            (6*s13^2 + 13*s13*s23 + 4*s23^2) + s12^2*s13^2*
            (16*s13^3 + 86*s13^2*s23 + 45*s13*s23^2 - 11*s23^3) + 
           s12^4*(48*s13^3 + 26*s13^2*s23 + 26*s13*s23^2 + 6*s23^3) + 
           s12^3*s13*(48*s13^3 + 58*s13^2*s23 - 5*s13*s23^2 + 8*s23^3)) - 
         p1q^4*s23*(s12 + s23)*(s13 + s23)*
          (p3q*(21*s13^4*(s13 - s23)*s23^3*(s13 + s23)^2 + 
             s12^7*(32*s13^3 + 72*s13^2*s23 + 50*s13*s23^2 + 24*s23^3) + 
             7*s12*s13^3*s23^2*(9*s13^4 + 16*s13^3*s23 - 2*s13^2*s23^2 - 13*
                s13*s23^3 - 4*s23^4) + 2*s12^6*(40*s13^4 + 80*s13^3*s23 + 65*
                s13^2*s23^2 + 65*s13*s23^3 + 21*s23^4) + s12^2*s13^2*s23*
              (58*s13^5 + 146*s13^4*s23 + 114*s13^3*s23^2 - 3*s13^2*s23^3 - 
               39*s13*s23^4 + 11*s23^5) + s12^5*(80*s13^5 + 234*s13^4*s23 + 
               117*s13^3*s23^2 - 44*s13^2*s23^3 + 72*s13*s23^4 + 12*s23^5) + 
             s12^3*s13*(16*s13^6 + 110*s13^5*s23 + 218*s13^4*s23^2 + 118*
                s13^3*s23^3 - 68*s13^2*s23^4 - 37*s13*s23^5 - 8*s23^6) + 
             s12^4*(48*s13^6 + 198*s13^5*s23 + 212*s13^4*s23^2 - 75*s13^3*
                s23^3 - 150*s13^2*s23^4 - 16*s13*s23^5 - 6*s23^6)) + 
           p2q*(21*s13^4*(4*s13 - s23)*s23^3*(s13 + s23)^2 + 
             2*s12^7*(8*s13^3 + 14*s13^2*s23 + 9*s13*s23^2 + 3*s23^3) + 
             7*s12*s13^3*s23^2*(25*s13^4 + 65*s13^3*s23 + 36*s13^2*s23^2 - 8*
                s13*s23^3 - 4*s23^4) + s12^6*(48*s13^4 + 50*s13^3*s23 + 26*
                s13^2*s23^2 + 32*s13*s23^3 + 6*s23^4) + 
             s12^5*(80*s13^5 + 138*s13^4*s23 - 17*s13^3*s23^2 - 71*s13^2*
                s23^3 - 4*s13*s23^4 - 6*s23^5) + s12^2*s13^2*s23*
              (132*s13^5 + 420*s13^4*s23 + 256*s13^3*s23^2 - 175*s13^2*
                s23^3 - 132*s13*s23^4 + 11*s23^5) + 2*s12^3*s13*
              (16*s13^6 + 125*s13^5*s23 + 116*s13^4*s23^2 - 130*s13^3*s23^3 - 
               139*s13^2*s23^4 - 7*s13*s23^5 - 4*s23^6) + 
             2*s12^4*(40*s13^6 + 117*s13^5*s23 + s13^4*s23^2 - 111*s13^3*
                s23^3 - 44*s13^2*s23^4 - 13*s13*s23^5 - 3*s23^6))) + 
         (s12 + s13)*(p3q^5*s12^3*(2*s12^7*s23*(s13 + 3*s23) + 
             2*s13^4*s23^3*(5*s13^2 - 33*s13*s23 - 38*s23^2) + 
             s12*s13^3*s23^2*(13*s13^3 - 258*s13^2*s23 - 353*s13*s23^2 - 90*
                s23^3) - 2*s12^6*(8*s13^3 + 12*s13^2*s23 - 3*s13*s23^2 - 9*
                s23^3) - s12^5*(32*s13^4 + 93*s13^3*s23 + 79*s13^2*s23^2 - 18*
                s23^4) + s12^2*s13^2*s23*(3*s13^4 - 341*s13^3*s23 - 656*s13^2*
                s23^2 - 322*s13*s23^3 - 6*s23^4) - s12^3*s13*s23*
              (165*s13^4 + 582*s13^3*s23 + 442*s13^2*s23^2 + 43*s13*s23^3 + 6*
                s23^4) - s12^4*(16*s13^5 + 235*s13^4*s23 + 287*s13^3*s23^2 + 
               92*s13^2*s23^3 + 10*s13*s23^4 - 6*s23^5)) + 
           p2q^5*s13^3*(21*s13^4*s23^2*(s13 + s23)^3 + 7*s12*s13^3*s23*
              (s13 + s23)^2*(s13^2 + s13*s23 - 3*s23^2) - 2*s12^2*s13^2*s23*
              (s13 + s23)^2*(22*s13^2 - 7*s13*s23 + 3*s23^2) + 
             s12^6*s23*(3*s13^2 + 8*s13*s23 + 5*s23^2) - 
             2*s12^5*(8*s13^4 + 30*s13^3*s23 + 23*s13^2*s23^2 - 11*s13*
                s23^3 - 12*s23^4) + s12^4*(-32*s13^5 - 55*s13^4*s23 + 23*
                s13^3*s23^2 + 104*s13^2*s23^3 + 77*s13*s23^4 + 19*s23^5) + 
             s12^3*s13*(-16*s13^5 - 43*s13^4*s23 + 23*s13^3*s23^2 + 148*s13^2*
                s23^3 + 133*s13*s23^4 + 35*s23^5)) + p2q^4*p3q*s13^2*
            (21*s13^4*(s13 - s23)*s23^2*(s13 + s23)^3 - s12^7*s23*
              (8*s13^2 + 27*s13*s23 + 15*s23^2) + 7*s12*s13^3*s23*
              (s13 + s23)^2*(s13^3 - 11*s13^2*s23 - 12*s13*s23^2 + 3*s23^3) + 
             2*s12^6*(32*s13^4 + 103*s13^3*s23 + 68*s13^2*s23^2 - 22*s13*
                s23^3 - 21*s23^4) + s12^5*(112*s13^5 + 180*s13^4*s23 + 146*
                s13^3*s23^2 + 116*s13^2*s23^3 + 3*s13*s23^4 - 39*s23^5) + 
             s12^2*s13^2*s23*(-65*s13^5 + 32*s13^4*s23 + 261*s13^3*s23^2 + 
               158*s13^2*s23^3 + 7*s13*s23^4 + 13*s23^5) + 
             s12^3*s13*(-16*s13^6 + 253*s13^5*s23 + 706*s13^4*s23^2 + 690*
                s13^3*s23^3 + 259*s13^2*s23^4 - 15*s13*s23^5 - 21*s23^6) + 
             s12^4*(32*s13^6 + 291*s13^5*s23 + 473*s13^4*s23^2 + 241*s13^3*
                s23^3 + 42*s13^2*s23^4 - s13*s23^5 - 12*s23^6)) + 
           p2q*p3q^4*s12^2*(-3*s13^4*(15*s13 - 26*s23)*s23^3*(s13 + s23)^2 + 
             2*s12^8*s23*(s13 + 3*s23) + 2*s12^6*s13*(16*s13^3 + 19*s13^2*
                s23 - 24*s13*s23^2 - 33*s23^3) - 2*s12^7*(8*s13^3 + 15*s13^2*
                s23 + 9*s13*s23^2 - 6*s23^3) + s12*s13^3*s23^2*
              (-72*s13^4 + 331*s13^3*s23 + 653*s13^2*s23^2 + 344*s13*s23^3 + 
               94*s23^4) + s12^5*(112*s13^5 + 81*s13^4*s23 + 111*s13^3*
                s23^2 + 66*s13^2*s23^3 - 64*s13*s23^4 - 12*s23^5) + 
             s12^3*s13*s23*(541*s13^5 + 1281*s13^4*s23 + 921*s13^3*s23^2 + 
               249*s13^2*s23^3 + 82*s13*s23^4 + 6*s23^5) + s12^2*s13^2*s23*
              (-13*s13^5 + 806*s13^4*s23 + 1356*s13^3*s23^2 + 812*s13^2*
                s23^3 + 255*s13*s23^4 + 8*s23^5) + s12^4*(64*s13^6 + 565*
                s13^5*s23 + 438*s13^4*s23^2 + 145*s13^3*s23^3 + 158*s13^2*
                s23^4 - 12*s13*s23^5 - 6*s23^6)) + p2q^2*p3q^3*s12*
            (7*s13^5*s23^3*(s13 + s23)^2*(8*s13 + 5*s23) - 
             6*s12^8*s23*(s13^2 + 4*s13*s23 + s23^2) + 
             2*s12^7*(32*s13^4 + 70*s13^3*s23 + 34*s13^2*s23^2 - 25*s13*
                s23^3 - 9*s23^4) + s12*s13^4*s23^2*(122*s13^4 + 66*s13^3*
                s23 - 136*s13^2*s23^2 + 39*s13*s23^3 + 119*s23^4) + 
             s12^3*s13^2*s23*(-638*s13^5 - 856*s13^4*s23 + 67*s13^3*s23^2 + 
               645*s13^2*s23^3 + 303*s13*s23^4 - 21*s23^5) + 
             s12^6*(32*s13^5 + 66*s13^4*s23 + 279*s13^3*s23^2 + 239*s13^2*
                s23^3 - 12*s13*s23^4 - 18*s23^5) + s12^2*s13^3*s23*
              (24*s13^5 - 651*s13^4*s23 - 874*s13^3*s23^2 - 27*s13^2*s23^3 + 
               273*s13*s23^4 + 101*s23^5) + s12^5*(-128*s13^6 + 322*s13^5*
                s23 + 486*s13^4*s23^2 + 277*s13^3*s23^3 + 217*s13^2*s23^4 + 
               30*s13*s23^5 - 6*s23^6) + s12^4*s13*(-96*s13^6 - 260*s13^5*
                s23 + 416*s13^4*s23^2 + 905*s13^3*s23^3 + 340*s13^2*s23^4 + 
               31*s13*s23^5 + 16*s23^6)) - p2q^3*p3q^2*s13*
            (21*s13^5*s23^3*(s13 + s23)^3 + 7*s12*s13^4*s23^2*(s13 + s23)^2*
              (12*s13^2 + s13*s23 - 8*s23^2) - s12^8*s23*(9*s13^2 + 37*s13*
                s23 + 16*s23^2) + 2*s12^7*(48*s13^4 + 129*s13^3*s23 + 73*
                s13^2*s23^2 - 33*s13*s23^3 - 21*s23^4) + s12^2*s13^3*s23*
              (21*s13^5 - 228*s13^4*s23 - 394*s13^3*s23^2 - 32*s13^2*s23^3 + 
               59*s13*s23^4 - 54*s23^5) + s12^6*(128*s13^5 + 205*s13^4*s23 + 
               406*s13^3*s23^2 + 359*s13^2*s23^3 + 26*s13*s23^4 - 36*s23^5) + 
             s12^3*s13^2*s23*(-320*s13^5 - 104*s13^4*s23 + 653*s13^3*s23^2 + 
               620*s13^2*s23^3 + 197*s13*s23^4 + 14*s23^5) + 
             s12^5*(-32*s13^6 + 558*s13^5*s23 + 1014*s13^4*s23^2 + 578*s13^3*
                s23^3 + 252*s13^2*s23^4 + 96*s13*s23^5 - 10*s23^6) + 
             s12^4*s13*(-64*s13^6 + 279*s13^5*s23 + 1199*s13^4*s23^2 + 1410*
                s13^3*s23^3 + 555*s13^2*s23^4 + 62*s13*s23^5 + 41*s23^6))) - 
         p1q*(-(p3q^4*s12^2*(-(s13^5*(12*s13 - 97*s23)*s23^3*(s13 + s23)^2) + 
              2*s12^9*s23*(s13 + 3*s23) - 2*s12^8*(16*s13^3 + 26*s13^2*s23 + 
                9*s13*s23^2 + 3*s23^3) - s12^7*(80*s13^4 + 135*s13^3*s23 + 
                105*s13^2*s23^2 + 104*s13*s23^3 + 54*s23^4) + 
              s12*s13^4*s23^2*(-17*s13^4 + 334*s13^3*s23 + 749*s13^2*s23^2 + 
                675*s13*s23^3 + 277*s23^4) + s12^3*s13^2*s23*(213*s13^5 + 
                894*s13^4*s23 + 1598*s13^3*s23^2 + 1703*s13^2*s23^3 + 
                825*s13*s23^4 + 47*s23^5) - s12^6*(48*s13^5 + 293*s13^4*s23 + 
                113*s13^3*s23^2 - 40*s13^2*s23^3 + 154*s13*s23^4 + 
                66*s23^5) + s12^2*s13^3*s23*(-5*s13^5 + 458*s13^4*s23 + 
                1223*s13^3*s23^2 + 1647*s13^2*s23^3 + 1098*s13*s23^4 + 
                231*s23^5) + 2*s12^5*(8*s13^6 - 88*s13^5*s23 - 25*s13^4*
                 s23^2 + 221*s13^3*s23^3 + 117*s13^2*s23^4 - 39*s13*s23^5 - 
                12*s23^6) + s12^4*s13*(16*s13^6 + 254*s13^5*s23 + 
                401*s13^4*s23^2 + 1045*s13^3*s23^3 + 1046*s13^2*s23^4 + 
                188*s13*s23^5 - 8*s23^6))) + p2q^4*s13^2*
            (-21*s13^5*(s13 - 4*s23)*s23^2*(s13 + s23)^3 + 
             2*s12^8*s23*(5*s13^2 + 11*s13*s23 + 6*s23^2) + 2*s12^2*s13^3*s23*
              (s13 + s23)^2*(51*s13^3 + 8*s13^2*s23 + 48*s13*s23^2 - 51*
                s23^3) - 7*s12*s13^4*s23*(s13 + s23)^2*(s13^3 - 11*s13^2*
                s23 - 31*s13*s23^2 - 4*s23^3) + s12^7*(-16*s13^4 - 53*s13^3*
                s23 - 23*s13^2*s23^2 + 51*s13*s23^3 + 37*s23^4) + 
             s12^6*(-16*s13^5 + 6*s13^4*s23 + 41*s13^3*s23^2 + 52*s13^2*
                s23^3 + 71*s13*s23^4 + 38*s23^5) + s12^3*s13^2*
              (32*s13^6 + 125*s13^5*s23 - 82*s13^4*s23^2 - 602*s13^3*s23^3 - 
               641*s13^2*s23^4 - 245*s13*s23^5 - 31*s23^6) + 
             s12^5*(48*s13^6 + 111*s13^5*s23 - 46*s13^4*s23^2 - 163*s13^3*
                s23^3 + 23*s13^2*s23^4 + 90*s13*s23^5 + 13*s23^6) + 
             s12^4*s13*(80*s13^6 + 58*s13^5*s23 - 350*s13^4*s23^2 - 685*s13^3*
                s23^3 - 428*s13^2*s23^4 - 23*s13*s23^5 + 48*s23^6)) - 
           p2q*p3q^3*s12*(2*s12^10*s23*(s13 + 3*s23) + 7*s13^5*s23^3*
              (s13 + s23)^2*(5*s13^2 - 4*s13*s23 - 3*s23^2) - 
             2*s12^9*(8*s13^3 + 20*s13^2*s23 + 17*s13*s23^2 + 3*s23^3) + 
             s12^8*(80*s13^4 + 221*s13^3*s23 + 105*s13^2*s23^2 - 68*s13*
                s23^3 - 36*s23^4) + s12*s13^4*s23^2*(61*s13^5 - 273*s13^4*
                s23 - 597*s13^3*s23^2 - 202*s13^2*s23^3 - 52*s13*s23^4 - 113*
                s23^5) + s12^7*(288*s13^5 + 539*s13^4*s23 + 831*s13^3*s23^2 + 
               608*s13^2*s23^3 + 52*s13*s23^4 - 12*s23^5) + 
             s12^2*s13^3*s23*(12*s13^6 - 788*s13^5*s23 - 1317*s13^4*s23^2 - 
               708*s13^3*s23^3 - 163*s13^2*s23^4 - 111*s13*s23^5 - 139*
                s23^6) + 2*s12^6*(112*s13^6 + 548*s13^5*s23 + 870*s13^4*
                s23^2 + 722*s13^3*s23^3 + 344*s13^2*s23^4 + 85*s13*s23^5 + 15*
                s23^6) - s12^3*s13^2*s23*(521*s13^6 + 1043*s13^5*s23 + 499*
                s13^4*s23^2 - 517*s13^3*s23^3 - 223*s13^2*s23^4 + 256*s13*
                s23^5 + 37*s23^6) + s12^4*s13*(-48*s13^7 - 227*s13^6*s23 + 
               937*s13^5*s23^2 + 1970*s13^4*s23^3 + 1296*s13^3*s23^4 + 303*
                s13^2*s23^5 - 103*s13*s23^6 + 8*s23^7) + 
             s12^5*(-16*s13^7 + 1126*s13^6*s23 + 2185*s13^5*s23^2 + 2314*
                s13^4*s23^3 + 1270*s13^3*s23^4 + 159*s13^2*s23^5 + 94*s13*
                s23^6 + 18*s23^7)) + p2q^2*p3q^2*(21*s13^6*(s13 - 2*s23)*
              s23^3*(s13 + s23)^3 + 2*s12^10*s23*(2*s13^2 + 9*s13*s23 + 3*
                s23^2) + 7*s12*s13^5*s23^2*(s13 + s23)^2*(9*s13^3 - 26*s13^2*
                s23 - 25*s13*s23^2 + s23^3) - 2*s12^9*(24*s13^4 + 88*s13^3*
                s23 + 79*s13^2*s23^2 + 8*s13*s23^3 - 3*s23^4) + 
             s12^8*(48*s13^5 + 181*s13^4*s23 - 156*s13^3*s23^2 - 375*s13^2*
                s23^3 - 136*s13*s23^4 - 18*s23^5) + s12^7*(384*s13^6 + 619*
                s13^5*s23 + 544*s13^4*s23^2 + 342*s13^3*s23^3 - 43*s13^2*
                s23^4 - 150*s13*s23^5 - 30*s23^6) + s12^2*s13^4*s23*
              (14*s13^6 - 458*s13^5*s23 - 710*s13^4*s23^2 - 223*s13^3*s23^3 - 
               183*s13^2*s23^4 - 37*s13*s23^5 + 161*s23^6) + 
             s12^3*s13^3*s23*(-401*s13^6 - 76*s13^5*s23 + 1067*s13^4*s23^2 + 
               1478*s13^3*s23^3 + 1027*s13^2*s23^4 + 470*s13*s23^5 + 179*
                s23^6) + s12^6*(384*s13^7 + 1196*s13^6*s23 + 1950*s13^5*
                s23^2 + 1567*s13^4*s23^3 + 923*s13^3*s23^4 + 392*s13^2*
                s23^5 - 46*s13*s23^6 - 12*s23^7) + s12^5*s13*(48*s13^7 + 1734*
                s13^6*s23 + 3355*s13^5*s23^2 + 3139*s13^4*s23^3 + 2325*s13^3*
                s23^4 + 1152*s13^2*s23^5 + 263*s13*s23^6 + 2*s23^7) + 
             s12^4*s13^2*(-48*s13^7 + 381*s13^6*s23 + 2374*s13^5*s23^2 + 3847*
                s13^4*s23^3 + 2705*s13^3*s23^4 + 1536*s13^2*s23^5 + 730*s13*
                s23^6 + 41*s23^7)) + p2q^3*p3q*s13*
            (-21*s13^5*s23^2*(s13 + s23)^3*(s13^2 - 4*s13*s23 + 3*s23^2) - 
             2*s12^9*s23*(6*s13^2 + 13*s13*s23 + 5*s23^2) + 
             s12^8*(48*s13^4 + 191*s13^3*s23 + 193*s13^2*s23^2 + 38*s13*
                s23^3 - 12*s23^4) - 7*s12*s13^4*s23*(s13 + s23)^2*
              (s13^4 - 19*s13^3*s23 + 3*s13^2*s23^2 + 39*s13*s23^3 + 4*
                s23^4) + 2*s12^7*(8*s13^5 - 9*s13^4*s23 + 144*s13^3*s23^2 + 
               286*s13^2*s23^3 + 141*s13*s23^4 + 6*s23^5) + 
             s12^6*(-224*s13^6 - 326*s13^5*s23 + 318*s13^4*s23^2 + 904*s13^3*
                s23^3 + 823*s13^2*s23^4 + 347*s13*s23^5 + 20*s23^6) + 
             s12^2*s13^3*s23*(100*s13^6 - 250*s13^5*s23 - 923*s13^4*s23^2 - 
               958*s13^3*s23^3 - 649*s13^2*s23^4 - 182*s13*s23^5 + 82*
                s23^6) + s12^5*(-288*s13^7 - 451*s13^6*s23 + 25*s13^5*s23^2 + 
               995*s13^4*s23^3 + 1478*s13^3*s23^4 + 823*s13^2*s23^5 + 142*s13*
                s23^6 + 6*s23^7) + s12^4*s13*(-80*s13^7 - 909*s13^6*s23 - 
               1280*s13^5*s23^2 + 56*s13^4*s23^3 + 1159*s13^3*s23^4 + 1092*
                s13^2*s23^5 + 441*s13*s23^6 + 13*s23^7) + s12^3*s13^2*
              (16*s13^7 - 456*s13^6*s23 - 1446*s13^5*s23^2 - 1619*s13^4*
                s23^3 - 400*s13^3*s23^4 + 492*s13^2*s23^5 + 321*s13*s23^6 + 
               74*s23^7))) + p1q^3*(p3q^2*(s12 + s23)*
            (-21*s13^5*s23^4*(s13 + s23)^3 - 7*s12*s13^4*s23^3*(s13 + s23)^2*
              (12*s13^2 + 16*s13*s23 + 7*s23^2) + 2*s12^8*(8*s13^4 + 38*s13^3*
                s23 + 53*s13^2*s23^2 + 39*s13*s23^3 + 18*s23^4) - 
             s12^2*s13^3*s23^2*(144*s13^5 + 409*s13^4*s23 + 651*s13^3*s23^2 + 
               716*s13^2*s23^3 + 353*s13*s23^4 + 23*s23^5) + 
             2*s12^7*(24*s13^5 + 67*s13^4*s23 + 39*s13^3*s23^2 + 39*s13^2*
                s23^3 + 71*s13*s23^4 + 24*s23^5) - s12^3*s13^2*s23*
              (74*s13^6 + 297*s13^5*s23 + 797*s13^4*s23^2 + 1173*s13^3*
                s23^3 + 758*s13^2*s23^4 + 114*s13*s23^5 - 45*s23^6) + 
             s12^6*(48*s13^6 + 120*s13^5*s23 - 51*s13^4*s23^2 - 427*s13^3*
                s23^3 - 326*s13^2*s23^4 - 34*s13*s23^5 - 12*s23^6) - 
             s12^4*s13*s23*(68*s13^6 + 399*s13^5*s23 + 1036*s13^4*s23^2 + 
               1190*s13^3*s23^3 + 455*s13^2*s23^4 - 2*s13*s23^5 + 24*s23^6) + 
             s12^5*(16*s13^7 + 68*s13^6*s23 - 269*s13^5*s23^2 - 891*s13^4*
                s23^3 - 821*s13^3*s23^4 - 341*s13^2*s23^5 - 122*s13*s23^6 - 
               24*s23^7)) - p2q^2*(s13 + s23)*(-42*s13^5*(3*s13 - 2*s23)*
              s23^4*(s13 + s23)^2 + 2*s12^8*s23*(22*s13^3 + 32*s13^2*s23 + 12*
                s13*s23^2 + 3*s23^3) - 7*s12*s13^4*s23^3*(39*s13^4 + 71*s13^3*
                s23 - 17*s13^2*s23^2 - 61*s13*s23^3 - 12*s23^4) + 
             s12^2*s13^3*s23^2*(-251*s13^5 - 418*s13^4*s23 + 346*s13^3*
                s23^2 + 876*s13^2*s23^3 + 293*s13*s23^4 - 70*s23^5) + 
             2*s12^7*(-8*s13^5 + 19*s13^4*s23 + 91*s13^3*s23^2 + 92*s13^2*
                s23^3 + 40*s13*s23^4 + 9*s23^5) + s12^3*s13^2*s23*
              (-106*s13^6 - 233*s13^5*s23 + 442*s13^4*s23^2 + 1311*s13^3*
                s23^3 + 585*s13^2*s23^4 - 171*s13*s23^5 - 22*s23^6) + 
             s12^6*(-48*s13^6 - 8*s13^5*s23 + 394*s13^4*s23^2 + 427*s13^3*
                s23^3 + 151*s13^2*s23^4 + 102*s13*s23^5 + 18*s23^6) + 
             s12^5*(-48*s13^7 - 60*s13^6*s23 + 419*s13^5*s23^2 + 941*s13^4*
                s23^3 + 438*s13^3*s23^4 - 4*s13^2*s23^5 + 60*s13*s23^6 + 6*
                s23^7) + s12^4*s13*(-16*s13^7 - 164*s13^6*s23 + 161*s13^5*
                s23^2 + 1161*s13^4*s23^3 + 975*s13^3*s23^4 + 48*s13^2*s23^5 - 
               57*s13*s23^6 + 14*s23^7)) + p2q*p3q*
            (21*s13^4*s23^4*(s13 + s23)^3*(3*s13^2 - 4*s13*s23 + s23^2) + 
             2*s12^9*s23*(14*s13^3 + 30*s13^2*s23 + 25*s13*s23^2 + 9*s23^3) + 
             7*s12*s13^3*s23^3*(s13 + s23)^2*(25*s13^4 - 3*s13^3*s23 - 37*
                s13^2*s23^2 + 7*s13*s23^3 + 4*s23^4) - 
             2*s12^8*(16*s13^5 + 75*s13^4*s23 + 109*s13^3*s23^2 + 20*s13^2*
                s23^3 - 47*s13*s23^4 - 15*s23^5) - s12^7*(96*s13^6 + 446*
                s13^5*s23 + 912*s13^4*s23^2 + 1033*s13^3*s23^3 + 495*s13^2*
                s23^4 + 36*s13*s23^5 + 12*s23^6) + s12^2*s13^2*s23^2*
              (170*s13^7 + 170*s13^6*s23 - 385*s13^5*s23^2 - 624*s13^4*
                s23^3 - 182*s13^3*s23^4 + 211*s13^2*s23^5 + 143*s13*s23^6 - 
               11*s23^7) - 2*s12^6*(48*s13^7 + 298*s13^6*s23 + 886*s13^5*
                s23^2 + 1249*s13^4*s23^3 + 817*s13^3*s23^4 + 252*s13^2*
                s23^5 + 70*s13*s23^6 + 18*s23^7) - s12^4*s23*(150*s13^8 + 972*
                s13^7*s23 + 2328*s13^6*s23^2 + 2826*s13^5*s23^3 + 1697*s13^4*
                s23^4 + 156*s13^3*s23^5 - 241*s13^2*s23^6 - 30*s13*s23^7 - 6*
                s23^8) - s12^5*(32*s13^8 + 536*s13^7*s23 + 1782*s13^6*s23^2 + 
               3255*s13^5*s23^3 + 3206*s13^4*s23^4 + 1129*s13^3*s23^5 - 68*
                s13^2*s23^6 + 38*s13*s23^7 + 6*s23^8) + s12^3*s13*s23*
              (58*s13^8 - 158*s13^7*s23 - 833*s13^6*s23^2 - 1334*s13^5*
                s23^3 - 999*s13^4*s23^4 - 86*s13^3*s23^5 + 241*s13^2*s23^6 + 
               53*s13*s23^7 + 8*s23^8))) - 
         p1q^2*(p3q^3*s12*(21*s13^6*s23^4*(s13 + s23)^2 + 
             2*s12^9*(8*s13^3 + 15*s13^2*s23 + 15*s13*s23^2 + 12*s23^3) + 
             2*s12^8*(8*s13^4 - 29*s13^3*s23 - 37*s13^2*s23^2 + 22*s13*
                s23^3 + 18*s23^4) + s12*s13^4*s23^3*(119*s13^4 + 116*s13^3*
                s23 - 63*s13^2*s23^2 + 23*s13*s23^3 + 83*s23^4) - 
             s12^7*(48*s13^5 + 217*s13^4*s23 + 511*s13^3*s23^2 + 438*s13^2*
                s23^3 + 132*s13*s23^4 + 36*s23^5) + s12^2*s13^3*s23^2*
              (161*s13^5 - 22*s13^4*s23 - 414*s13^3*s23^2 - 181*s13^2*s23^3 + 
               190*s13*s23^4 + 140*s23^5) - s12^4*s13*s23*(206*s13^6 + 1265*
                s13^5*s23 + 2181*s13^4*s23^2 + 1204*s13^3*s23^3 - 155*s13^2*
                s23^4 - 205*s13*s23^5 + 24*s23^6) + s12^3*s13^2*s23*
              (63*s13^6 - 270*s13^5*s23 - 1063*s13^4*s23^2 - 1192*s13^3*
                s23^3 - 108*s13^2*s23^4 + 407*s13*s23^5 + 69*s23^6) - 
             s12^6*(80*s13^6 + 472*s13^5*s23 + 1190*s13^4*s23^2 + 1065*s13^3*
                s23^3 + 467*s13^2*s23^4 + 300*s13*s23^5 + 84*s23^6) - 
             s12^5*(32*s13^7 + 612*s13^6*s23 + 1617*s13^5*s23^2 + 1946*s13^4*
                s23^3 + 740*s13^3*s23^4 - 3*s13^2*s23^5 + 178*s13*s23^6 + 36*
                s23^7)) + p2q^3*s13*(42*s13^5*(2*s13 - 3*s23)*s23^3*
              (s13 + s23)^3 + 7*s12*s13^4*s23^2*(s13 + s23)^2*
              (15*s13^3 - 8*s13^2*s23 - 65*s13*s23^2 - 12*s23^3) + 
             2*s12^8*s23*(19*s13^3 + 43*s13^2*s23 + 27*s13*s23^2 + 3*s23^3) + 
             s12^2*s13^3*s23*(s13 + s23)^2*(65*s13^4 - 214*s13^3*s23 - 405*
                s13^2*s23^2 - 278*s13*s23^3 + 134*s23^4) + 
             s12^7*(-32*s13^5 - 76*s13^4*s23 + 75*s13^3*s23^2 + 258*s13^2*
                s23^3 + 151*s13*s23^4 + 12*s23^5) + s12^6*(-80*s13^6 - 187*
                s13^5*s23 + 75*s13^4*s23^2 + 527*s13^3*s23^3 + 471*s13^2*
                s23^4 + 132*s13*s23^5 + 6*s23^6) + s12^5*s13*(-48*s13^6 - 192*
                s13^5*s23 - 152*s13^4*s23^2 + 619*s13^3*s23^3 + 1183*s13^2*
                s23^4 + 589*s13*s23^5 + 33*s23^6) + s12^4*s13*
              (16*s13^7 - 252*s13^6*s23 - 685*s13^5*s23^2 - 121*s13^4*s23^3 + 
               1121*s13^3*s23^4 + 1207*s13^2*s23^5 + 380*s13*s23^6 - 2*
                s23^7) + s12^3*s13^2*(16*s13^7 - 68*s13^6*s23 - 636*s13^5*
                s23^2 - 1175*s13^4*s23^3 - 370*s13^3*s23^4 + 755*s13^2*
                s23^5 + 592*s13*s23^6 + 90*s23^7)) + p2q^2*p3q*
            (63*s13^5*(s13 - s23)^2*s23^3*(s13 + s23)^3 - 4*s12^9*s23*
              (10*s13^3 + 20*s13^2*s23 + 12*s13*s23^2 + 3*s23^3) + 
             14*s12*s13^4*s23^2*(s13 + s23)^2*(7*s13^4 - 14*s13^3*s23 - 15*
                s13^2*s23^2 + 19*s13*s23^3 + 4*s23^4) + 
             2*s12^8*(40*s13^5 + 170*s13^4*s23 + 162*s13^3*s23^2 - 2*s13^2*
                s23^3 - 53*s13*s23^4 - 15*s23^5) + 2*s12^7*(88*s13^6 + 342*
                s13^5*s23 + 633*s13^4*s23^2 + 631*s13^3*s23^3 + 247*s13^2*
                s23^4 - 20*s13*s23^5 - 9*s23^6) + s12^2*s13^3*s23*
              (49*s13^7 - 309*s13^6*s23 - 551*s13^5*s23^2 + 262*s13^4*s23^3 + 
               967*s13^3*s23^4 + 850*s13^2*s23^5 + 279*s13*s23^6 - 59*
                s23^7) + s12^3*s13^2*s23*(-296*s13^7 - 265*s13^6*s23 + 1039*
                s13^5*s23^2 + 2578*s13^4*s23^3 + 2386*s13^3*s23^4 + 836*s13^2*
                s23^5 - 10*s13*s23^6 - 30*s23^7) + s12^6*(48*s13^7 + 765*
                s13^6*s23 + 2460*s13^5*s23^2 + 3136*s13^4*s23^3 + 2013*s13^3*
                s23^4 + 648*s13^2*s23^5 + 54*s13*s23^6 + 6*s23^7) + 
             s12^5*(-112*s13^8 + 644*s13^7*s23 + 2661*s13^6*s23^2 + 4475*
                s13^5*s23^3 + 4184*s13^4*s23^4 + 1788*s13^3*s23^5 + 204*s13^2*
                s23^6 + 44*s13*s23^7 + 6*s23^8) + s12^4*s13*(-64*s13^8 - 162*
                s13^7*s23 + 1205*s13^6*s23^2 + 3844*s13^5*s23^3 + 4428*s13^4*
                s23^4 + 2685*s13^3*s23^5 + 722*s13^2*s23^6 - 56*s13*s23^7 + 8*
                s23^8)) + p2q*p3q^2*(-21*s13^5*(2*s13 - s23)*s23^4*
              (s13 + s23)^3 + 2*s12^10*s23*(7*s13^2 + 14*s13*s23 + 9*s23^2) - 
             7*s12*s13^4*s23^3*(s13 + s23)^2*(24*s13^3 + 5*s13^2*s23 - 14*s13*
                s23^2 - 4*s23^3) - 2*s12^9*(32*s13^4 + 113*s13^3*s23 + 92*
                s13^2*s23^2 - 9*s23^4) - s12^8*(112*s13^5 + 267*s13^4*s23 + 
               460*s13^3*s23^2 + 401*s13^2*s23^3 + 144*s13*s23^4 + 36*
                s23^5) + s12^7*(48*s13^6 - 96*s13^5*s23 - 340*s13^4*s23^2 + 
               79*s13^3*s23^3 + 227*s13^2*s23^4 - 100*s13*s23^5 - 36*s23^6) + 
             s12^2*s13^3*s23^2*(-240*s13^6 - 114*s13^5*s23 + 424*s13^4*
                s23^2 + 488*s13^3*s23^3 + 569*s13^2*s23^4 + 374*s13*s23^5 - 5*
                s23^6) + s12^3*s13^2*s23*(-100*s13^7 + 549*s13^6*s23 + 1512*
                s13^5*s23^2 + 1833*s13^4*s23^3 + 1888*s13^3*s23^4 + 1232*
                s13^2*s23^5 + 280*s13*s23^6 - 34*s23^7) + s12^4*s13*s23*
              (505*s13^7 + 1891*s13^6*s23 + 3046*s13^5*s23^2 + 3124*s13^4*
                s23^3 + 2675*s13^3*s23^4 + 1176*s13^2*s23^5 + 9*s13*s23^6 + 
               16*s23^7) + s12^6*(176*s13^7 + 340*s13^6*s23 + 701*s13^5*
                s23^2 + 1019*s13^4*s23^3 + 1328*s13^3*s23^4 + 892*s13^2*
                s23^5 + 108*s13*s23^6 + 18*s23^7) + s12^5*(80*s13^8 + 1014*
                s13^7*s23 + 1895*s13^6*s23^2 + 2385*s13^5*s23^3 + 2903*s13^4*
                s23^4 + 1906*s13^3*s23^5 + 505*s13^2*s23^6 + 108*s13*s23^7 + 
               18*s23^8))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*
         (s12 + s13)^2*s23^2*(s12 + s23)*(s13 + s23)*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((ep*(2*p1q*p2q*s13^2*s23*(-5*s12 + s13 + s23) + p1q^2*(s12 - s13)*s23^2*
           (s12 + s13 + s23) - p2q^2*s13^2*(-7*s12^2 - 6*s12*s13 + s13^2 + 
            5*s12*s23 + s13*s23) + p3q^2*s12*(s12^3 + 4*s13^2*(2*s13 - s23) + 
            s12^2*(2*s13 + s23) + s12*s13*(9*s13 + s23)) - 
          2*p3q*s12*(4*p2q*s13^2*(-2*s12 - 2*s13 + s23) + 
            p1q*s23*(s12^2 + 6*s13^2 + s12*(s13 + s23)))))/
        (36*(p2q + p3q)*(p1q + p2q + p3q)*s13^2) + 
       (p1q^3*s23^2*(s13*s23^2*(s13 + s23) + s12^2*(32*s13^2 + 16*s13*s23 + 
             5*s23^2) + s12*(32*s13^3 + 48*s13^2*s23 + 22*s13*s23^2 + 
             5*s23^3)) - (p2q + p3q)*(p3q^2*s12*(5*s12^4*s23 + 16*s13^4*s23 + 
             s12*s13^2*s23*(s13 + s23) + s12^2*s13*(-32*s13^2 + 7*s13*s23 - 
               10*s23^2) + s12^3*(-32*s13^2 - 5*s13*s23 + 5*s23^2)) - 
           2*p2q*p3q*s12*s13*(5*s12^3*s23 + s13^2*s23*(-15*s13 + s23) + 
             s12^2*(-32*s13^2 - 37*s13*s23 + 5*s23^2) + 
             s12*s13*(-32*s13^2 - 25*s13*s23 + 6*s23^2)) + 
           p2q^2*s13^2*(21*s12^3*s23 + s13^2*s23*(s13 + s23) - 
             s12*s13*(32*s13^2 + 25*s13*s23 + 10*s23^2) - 
             s12^2*(32*s13^2 + 37*s13*s23 + 27*s23^2))) + 
         p1q*(p2q^2*s13*(3*s13^2*s23^2*(s13 + s23) - 6*s12^3*s23*
              (8*s13 + s23) + s12*s13*(32*s13^3 - 32*s13^2*s23 - 44*s13*
                s23^2 - 15*s23^3) + s12^2*(32*s13^3 + 16*s13^2*s23 + 27*s13*
                s23^2 - 6*s23^3)) + 2*p2q*p3q*(s13^3*s23^2*(s13 + s23) + 
             s12^4*s23*(8*s13 + 5*s23) - s12*s13^2*s23*(64*s13^2 + 49*s13*
                s23 + 18*s23^2) + s12^3*(-32*s13^3 - 80*s13^2*s23 + 3*s13*
                s23^2 + 5*s23^3) - 2*s12^2*s13*(16*s13^3 + 28*s13^2*s23 + 10*
                s13*s23^2 + 5*s23^3)) + p3q^2*s12*
            (-(s12*s13*s23^2*(17*s13 + 19*s23)) + 2*s13^2*s23*
              (-16*s13^2 + s13*s23 + s23^2) + s12^3*(32*s13^2 + 16*s13*s23 + 
               15*s23^2) + s12^2*(32*s13^3 - 48*s13^2*s23 + 12*s13*s23^2 + 15*
                s23^3))) - p1q^2*s23*(p2q*(3*s13^2*s23^2*(s13 + s23) + 
             s12*s13^2*(64*s13^2 + 48*s13*s23 + 3*s23^2) + 
             s12^3*(32*s13^2 + 16*s13*s23 + 5*s23^2) + 
             s12^2*(32*s13^3 + 21*s13*s23^2 + 5*s23^3)) + 
           p3q*(s13^2*s23^2*(s13 + s23) + s12^3*(64*s13^2 + 32*s13*s23 + 15*
                s23^2) + s12*s13*(32*s13^3 - 23*s13*s23^2 - 8*s23^3) + 
             s12^2*(32*s13^3 + 32*s13^2*s23 + 39*s13*s23^2 + 15*s23^3))))/
        (72*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) + ((3*s12 - s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23))*den[-1 + 2*ep])/(72*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + 
     ((7*ep*(-(p1q^2*(s12 - s13)*s23^2*(s12 + s13 + s23)) + 
          2*p3q*s12^2*(4*p2q*s13*(2*s12 + 2*s13 - s23) + 
            p1q*s23*(s12 - 5*s13 + s23)) - 2*p1q*p2q*s13*s23*
           (6*s12^2 + s12*s13 + s13*(s13 + s23)) + p2q^2*s13*
           (8*s12^3 + s12^2*(9*s13 - 4*s23) + s13^2*(s13 + s23) + 
            s12*s13*(2*s13 + s23)) - p3q^2*s12^2*(s12^2 + 
            s12*(-6*s13 + s23) + s13*(-7*s13 + 5*s23))))/
        (72*(p2q + p3q)*(p1q + p2q + p3q)*s12^2) - 
       (7*(-(p1q^3*s23^2*(32*s12^3*s13 + 5*s13*s23^2*(s13 + s23) + 
             s12*s23*(16*s13^2 + 22*s13*s23 + s23^2) + 
             s12^2*(32*s13^2 + 48*s13*s23 + s23^2))) + 
          (p2q + p3q)*(2*p2q*p3q*s12*s13*(s12*s13*(37*s13 - 6*s23)*s23 - 
              5*s13^2*s23*(s13 + s23) + s12^3*(32*s13 + 15*s23) + 
              s12^2*(32*s13^2 + 25*s13*s23 - s23^2)) + p3q^2*s12^2*
             (3*s13^2*(7*s13 - 9*s23)*s23 + s12^3*(-32*s13 + s23) - 
              s12*s13*s23*(37*s13 + 10*s23) + s12^2*(-32*s13^2 - 25*s13*s23 + 
                s23^2)) + p2q^2*s13*(16*s12^4*s23 + s12^3*s13*(-32*s13 + 
                s23) + 5*s13^3*s23*(s13 + s23) - 5*s12*s13^2*s23*(s13 + 
                2*s23) + s12^2*s13*(-32*s13^2 + 7*s13*s23 + s23^2))) + 
          p1q*(p3q^2*s12*(-32*s12^4*s13 + 6*s13^2*s23^2*(s13 + s23) + 
              s12^3*(-32*s13^2 + 32*s13*s23 - 3*s23^2) + s12^2*s23*(
                -16*s13^2 + 44*s13*s23 - 3*s23^2) + 3*s12*s13*s23*(16*s13^2 - 
                9*s13*s23 + 5*s23^2)) + 2*p2q*p3q*(-5*s13^3*s23^2*(s13 + 
                s23) + s12^4*(32*s13^2 + 64*s13*s23 - s23^2) + 
              2*s12^2*s13*s23*(40*s13^2 + 10*s13*s23 + 9*s23^2) + 
              s12*s13^2*s23*(-8*s13^2 - 3*s13*s23 + 10*s23^2) + 
              s12^3*(32*s13^3 + 56*s13^2*s23 + 49*s13*s23^2 - s23^3)) - 
            p2q^2*s13*(-32*s12^4*s23 + 15*s13^2*s23^2*(s13 + s23) + 
              s12*s13*s23*(16*s13^2 + 12*s13*s23 - 19*s23^2) + 
              2*s12^3*(16*s13^2 + s23^2) + s12^2*(32*s13^3 - 48*s13^2*s23 - 
                17*s13*s23^2 + 2*s23^3))) + p1q^2*s23*
           (p2q*(32*s12^4*s13 + 15*s13^2*s23^2*(s13 + s23) + s12*s13*s23*(
                32*s13^2 + 39*s13*s23 - 8*s23^2) + s12^3*(32*s13^2 + s23^2) + 
              s12^2*(64*s13^3 + 32*s13^2*s23 - 23*s13*s23^2 + s23^3)) + 
            p3q*(64*s12^4*s13 + 5*s13^2*s23^2*(s13 + s23) + s12*s13^2*s23*(
                16*s13 + 21*s23) + s12^3*(32*s13^2 + 48*s13*s23 + 3*s23^2) + 
              s12^2*(32*s13^3 + 3*s13*s23^2 + 3*s23^3)))))/
        (144*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s23*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) - (7*(s12 - 3*s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23))*den[-1 + 2*ep])/(144*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*
        DS[k + p1 + p2 + p3]] + 
     ((-7*ep*p2q*(s12 + s13 + s23)*(3*p2q*s13 + p3q*(s12 + 4*s13) - p1q*s23))/
        (36*(p1q + p2q + p3q)*s13) - (7*p2q*(s12 + s13 + s23)*
         (2*p1q^3*(p2q + p3q)*s23^2 + p1q^2*s23*
           (-2*p2q*p3q*(s12 + s13 - 3*s23) + p2q^2*(-2*s12 - 4*s13 + s23) + 
            p3q^2*(-4*s12 - 2*s13 + s23)) - p1q*(p2q + p3q)*
           (p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)^2*(p1q + p2q + p3q)*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*Eik[k]] + 
     (-1/18*(ep*p3q*(s12 + s13 + s23)*(3*p3q*s12 + p2q*(4*s12 + s13) - 
           p1q*s23))/((p1q + p2q + p3q)*s12) - 
       (2*p3q*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2 + 
          p1q^2*s23*(-2*p2q*p3q*(s12 + s13 - 3*s23) + 
            p2q^2*(-2*s12 - 4*s13 + s23) + p3q^2*(-4*s12 - 2*s13 + s23)) - 
          p1q*(p2q + p3q)*(p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)^2*(p1q + p2q + p3q)*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k]] + 
     ((ep*p1q*(s12 + s13 + s23)*(p2q*(s12 + s13 - s23) + 
          p3q*(s12 + s13 - s23) - 2*p1q*s23))/(9*(p1q + p2q + p3q)*s23) + 
       (p1q*(s12 + s13 + s23)*(2*p1q^3*s23^2*(s12 + s13 + s23) - 
          p1q^2*s23*(p3q*(4*s12^2 + 2*s12*s13 + 2*s13^2 + s12*s23 - s13*s23 - 
              s23^2) + p2q*(2*s12^2 + 2*s12*s13 + 4*s13^2 - s12*s23 + 
              s13*s23 - s23^2)) - (p2q + p3q)*
           (-(p3q^2*(2*s12^3 + 2*s12^2*s13 + s12*s13*s23 + s13*s23*
                (-s13 + s23))) + p2q*p3q*(s13*(3*s13 - s23)*s23 + 
              s12^2*(4*s13 + 3*s23) + s12*(4*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*(-2*s13^3 + s12^2*s23 - s12*(2*s13^2 + s13*s23 + s23^2))) + 
          p1q*(p3q^2*(2*s12^3 + s12^2*(2*s13 - 3*s23) + s12*(s13 - s23)*s23 + 
              2*s13*s23*(-s13 + s23)) + p2q^2*(-2*s12^2*s23 + 
              s13*(2*s13^2 - 3*s13*s23 - s23^2) + s12*(2*s13^2 + s13*s23 + 
                2*s23^2)) - p2q*p3q*(s12^2*(4*s13 + 9*s23) + s23*(9*s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 6*s13*s23 + 
                3*s23^2)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((7*ep*p2q*(s12 + s13 + s23)*(4*p2q^2*s13^2*(s12 + s13 - s23) - 
          p1q^2*s23*(s12^2 - 6*s12*s13 + s13^2 + 2*s12*s23 - 6*s13*s23 + 
            s23^2) + p2q*p3q*s13*(-5*s12^2 + 3*s13^2 - 10*s13*s23 + 3*s23^2 - 
            2*s12*(s13 + s23)) + p3q^2*(s12^3 - 2*s12^2*(s13 - s23) + 
            4*s13*s23*(-s13 + s23) + s12*(-3*s13^2 + 2*s13*s23 + s23^2)) + 
          p1q*(p2q*s13*(-3*s12^2 - 2*s12*s13 + s13^2 + 2*s12*s23 - 
              10*s13*s23 + 5*s23^2) + p3q*(s12^3 + s12^2*(-2*s13 + s23) - 
              s23*(5*s13^2 - 10*s13*s23 + s23^2) - s12*(3*s13^2 - 8*s13*s23 + 
                s23^2)))))/(36*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (7*p2q*(s12 + s13 + s23)*(-2*p1q^3*s23^2*(s12 + s13 + s23) + 
          p1q^2*s23*(p3q*(4*s12^2 + 2*s12*s13 + 2*s13^2 + s12*s23 - s13*s23 - 
              s23^2) + p2q*(2*s12^2 + 2*s12*s13 + 4*s13^2 - s12*s23 + 
              s13*s23 - s23^2)) + (p2q + p3q)*
           (-(p3q^2*(2*s12^3 + 2*s12^2*s13 + s12*s13*s23 + s13*s23*
                (-s13 + s23))) + p2q*p3q*(s13*(3*s13 - s23)*s23 + 
              s12^2*(4*s13 + 3*s23) + s12*(4*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*(-2*s13^3 + s12^2*s23 - s12*(2*s13^2 + s13*s23 + s23^2))) + 
          p1q*(p3q^2*(-2*s12^3 + 2*s13*(s13 - s23)*s23 + s12*s23*(-s13 + 
                s23) + s12^2*(-2*s13 + 3*s23)) + p2q^2*(2*s12^2*s23 + 
              s13*(-2*s13^2 + 3*s13*s23 + s23^2) - s12*(2*s13^2 + s13*s23 + 
                2*s23^2)) + p2q*p3q*(s12^2*(4*s13 + 9*s23) + s23*(9*s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 6*s13*s23 + 
                3*s23^2)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*p3q*(s12 + s13 + s23)*(4*p3q^2*s12^2*(s12 + s13 - s23) - 
          p1q^2*s23*(s12^2 - 6*s12*(s13 + s23) + (s13 + s23)^2) + 
          p2q*p3q*s12*(3*s12^2 - 5*s13^2 - 2*s13*s23 + 3*s23^2 - 
            2*s12*(s13 + 5*s23)) + p2q^2*(s13*(s13 + s23)^2 - 
            s12^2*(3*s13 + 4*s23) + s12*(-2*s13^2 + 2*s13*s23 + 4*s23^2)) + 
          p1q*(p3q*s12*(s12^2 - 3*s13^2 + 2*s13*s23 + 5*s23^2 - 
              2*s12*(s13 + 5*s23)) + p2q*((s13 - s23)*(s13 + s23)^2 - 
              s12^2*(3*s13 + 5*s23) - 2*s12*(s13^2 - 4*s13*s23 - 5*s23^2)))))/
        (18*(p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + (p1q + p2q)*
           (s13 + s23))) - (2*p3q*(s12 + s13 + s23)*
         (2*p1q^3*s23^2*(s12 + s13 + s23) - p1q^2*s23*
           (p3q*(4*s12^2 + 2*s12*s13 + 2*s13^2 + s12*s23 - s13*s23 - s23^2) + 
            p2q*(2*s12^2 + 2*s12*s13 + 4*s13^2 - s12*s23 + s13*s23 - 
              s23^2)) - (p2q + p3q)*(-(p3q^2*(2*s12^3 + 2*s12^2*s13 + s12*s13*
                s23 + s13*s23*(-s13 + s23))) + p2q*p3q*
             (s13*(3*s13 - s23)*s23 + s12^2*(4*s13 + 3*s23) + 
              s12*(4*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*(-2*s13^3 + s12^2*s23 - s12*(2*s13^2 + s13*s23 + s23^2))) + 
          p1q*(p3q^2*(2*s12^3 + s12^2*(2*s13 - 3*s23) + s12*(s13 - s23)*s23 + 
              2*s13*s23*(-s13 + s23)) + p2q^2*(-2*s12^2*s23 + 
              s13*(2*s13^2 - 3*s13*s23 - s23^2) + s12*(2*s13^2 + s13*s23 + 
                2*s23^2)) - p2q*p3q*(s12^2*(4*s13 + 9*s23) + s23*(9*s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 6*s13*s23 + 
                3*s23^2)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p2 + p3]*Eik[k]] - 
     (ep*(s12 + s13 + s23)*(p2q^2*s13*(11*s12^2 + 13*s12*s13 + 2*s13^2) + 
        p3q^2*s12*(7*s12^2 + 23*s12*s13 + 16*s13^2) + 
        p2q*p3q*(7*s12^3 + 34*s12^2*s13 + 29*s12*s13^2 + 2*s13^3) - 
        p1q*p3q*(14*s12^2 + 25*s12*s13 + 2*s13^2)*s23 - 
        p1q*p2q*(7*s12^2 + 20*s12*s13 + 4*s13^2)*s23 + p1q^2*(7*s12 + 2*s13)*
         s23^2)*Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]])/
      (36*(p1q + p2q + p3q)*s12*s13*s23) + 
     ((ep*(p2q + p3q)^2*(s12 + s13 + s23))/(9*(p1q + p2q + p3q)*s23) + 
       ((s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2 + 
          p1q^2*s23*(-2*p2q*p3q*(s12 + s13 - 3*s23) + 
            p2q^2*(-2*s12 - 4*s13 + s23) + p3q^2*(-4*s12 - 2*s13 + s23)) - 
          p1q*(p2q + p3q)*(p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2 + p3]*Eik[k - p1]] - 
     (7*ep*(p1q + p3q)^2*(s12 + s13 + s23)*(p2q*s13*(s12 + s13 - s23) + 
        p1q*s23*(s12 - s13 + s23) - p3q*(s12^2 + 2*s13*s23 + 
          s12*(s13 + s23)))*Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]])/
      (36*(p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
        p3q*(s12 + s23))) + ((-7*ep*(p2q + p3q)^2*s13*(s12 + s13 + s23))/
        (18*(p1q + p2q + p3q)*s23) - (7*s13*(s12 + s13 + s23)*
         (2*p1q^3*(p2q + p3q)*s23^2 + p1q^2*s23*
           (-2*p2q*p3q*(s12 + s13 - 3*s23) + p2q^2*(-2*s12 - 4*s13 + s23) + 
            p3q^2*(-4*s12 - 2*s13 + s23)) - p1q*(p2q + p3q)*
           (p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k - p2]] + 
     (ep*(p1q + p2q)^2*(s12 + s13 + s23)*(-(p3q*s12*(s12 + s13 - s23)) + 
        p1q*(s12 - s13 - s23)*s23 + p2q*s13*(s13 + s23) + 
        p2q*s12*(s13 + 2*s23))*Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]])/
      (18*(p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
     (-1/9*(ep*(p2q + p3q)^2*s12*(s12 + s13 + s23))/((p1q + p2q + p3q)*s23) - 
       (2*s12*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2 + 
          p1q^2*s23*(-2*p2q*p3q*(s12 + s13 - 3*s23) + 
            p2q^2*(-2*s12 - 4*s13 + s23) + p3q^2*(-4*s12 - 2*s13 + s23)) - 
          p1q*(p2q + p3q)*(p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((7*ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(18*(p1q + p2q + p3q)*s13*s23) + 
       (14*ep*(s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23))*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(9*(p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(9*(p1q + p2q + p3q)*s12*s23) + 
       (4*ep*(s12 + s13 + s23)*(p3q*(2*s12 + s23) - p2q*(2*s13 + s23))*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(9*(p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep]
 
P1Avg = ((2*(2*p1q*p2q*(s12 - s13)*s13^2 + p2q^2*s13^2*(s12 - 3*s13 - s23) + 
          p1q^2*s23*(s12 + s13 + s23)*(2*s13 + s23) + 
          p3q^2*(s12^3 + 2*s12*s13*(s13 - s23) + 2*s13^2*s23 + 
            s12^2*(-s13 + s23)) - 2*p3q*(s12 - s13)*
           (p2q*s13*(s12 - s13 + s23) + p1q*s12*(s13 + s23) + 
            p1q*s23*(2*s13 + s23))))/(9*ep*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23) + (ep*(-(p2q^3*s12*s13^2*(s12 - s13 - s23)*
            (2*s13^2 + 3*s13*s23 + s23^2)) - p1q^3*s23*(s13 + s23)*
           (s12*(2*s13 - s23)*(s13 + s23)^2 + s13*s23*(s13 + s23)^2 + 
            s12^2*(2*s13^2 - s23^2)) - p3q^3*s12^2*(-2*s13^4 + s12^3*s23 + 
            2*s13^2*s23^2 + s12^2*(2*s13^2 + 2*s13*s23 + s23^2) + 
            s12*s13*(-4*s13^2 + 3*s13*s23 + s23^2)) + p2q^2*p3q*s13^2*
           (s13*(s13 + s23)^3 + s12^3*(3*s13 + s23) + s12*(s13 + s23)^2*
             (s13 + 3*s23) - s12^2*(9*s13^2 + 11*s13*s23 + 2*s23^2)) + 
          p2q*p3q^2*s12*(-(s13^2*(3*s13 - s23)*(s13 + s23)^2) + 
            s12^3*(-s13^2 + s13*s23 + s23^2) + s12*s13*(-5*s13^3 - 
              8*s13^2*s23 - 2*s13*s23^2 + s23^3) + 
            s12^2*(9*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + s23^3)) + 
          p1q^2*(p3q*(-(s12*s13*(s13 - s23)*s23*(s13 + s23)^2) - 
              s13^2*s23*(s13 + s23)^3 + s12^3*(2*s13^3 + 4*s13^2*s23 - 
                2*s13*s23^2 - 3*s23^3) + s12^2*(-2*s13^4 + s13^2*s23^2 - 
                4*s13*s23^3 - 3*s23^4)) + p2q*(s13 + s23)*
             (s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^2*(-2*s13^3 - 
                4*s13^2*s23 + s23^3) + s12*(2*s13^4 + s13^3*s23 - 
                2*s13^2*s23^2 + s23^4))) + p1q*(p2q^2*s13^2*(s13 + s23)*
             (s23*(s13 + s23)^2 - s12^2*(4*s13 + 3*s23) + 2*s12*(2*s13^2 + 
                3*s13*s23 + s23^2)) + p3q^2*s12*(-(s13^2*(s13 - 3*s23)*
                (s13 + s23)^2) + s12^3*(-2*s13^2 + s13*s23 + 3*s23^2) + 
              s12*s13*(-2*s13^3 + 2*s13^2*s23 + 5*s13*s23^2 + s23^3) + 
              s12^2*(5*s13^3 + 4*s13^2*s23 + 5*s13*s23^2 + 3*s23^3)) + 
            p2q*p3q*(2*s12*s13^2*(s13 + s23)^3 + s13^2*(s13 - s23)*
               (s13 + s23)^3 + s12^3*(6*s13^3 + 5*s13^2*s23 - 2*s13*s23^2 - 
                2*s23^3) - s12^2*(9*s13^4 + 9*s13^3*s23 + 2*s13^2*s23^2 + 
                4*s13*s23^3 + 2*s23^4)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13^2*s23*(s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
       (2*p3q^3*s12^2*(s12^3*(s13 + 3*s23) + s12*s13*(6*s13^2 + 3*s13*s23 - 
             7*s23^2) + s12^2*(-4*s13^2 - 3*s13*s23 + 3*s23^2) + 
           s13^2*(-s13^2 + 8*s13*s23 + 9*s23^2)) - (p1q + p2q)*(s13 + s23)*
          (6*p1q^2*s12*s23*(s12 + s13 + s23)*(2*s13^2 + 3*s13*s23 + s23^2) + 
           p2q^2*s13^2*(-(s12^2*(s13 - 2*s23)) + s13*(s13 + s23)^2 - 
             2*s12*(12*s13^2 + 17*s13*s23 + 5*s23^2)) - 
           p1q*p2q*s13*(s13*s23*(s13 + s23)^2 - 3*s12^2*(4*s13^2 + 7*s13*
                s23 + 2*s23^2) + 2*s12*(6*s13^3 + 2*s13^2*s23 - 7*s13*s23^2 - 
               3*s23^3))) - p3q^2*s12*
          (p2q*(-(s13^2*(3*s13 - 17*s23)*(s13 + s23)^2) + 
             2*s12^3*(2*s13^2 + 9*s13*s23 + 3*s23^2) + 14*s12*s13*
              (2*s13^3 + s13^2*s23 - 2*s13*s23^2 - s23^3) + 
             s12^2*(-37*s13^3 - 45*s13^2*s23 + 10*s13*s23^2 + 6*s23^3)) + 
           p1q*(-(s13^2*(s13 - 19*s23)*(s13 + s23)^2) + 
             2*s12^3*(7*s13^2 + 14*s13*s23 + 9*s23^2) + 2*s12*s13*
              (7*s13^3 - 4*s13^2*s23 - 25*s13*s23^2 - 14*s23^3) + 
             s12^2*(-19*s13^3 - 23*s13^2*s23 + 18*s13*s23^2 + 18*s23^3))) + 
         p3q*(-(p2q^2*s13*(-17*s12*s13*(s13 - s23)*(s13 + s23)^2 + 
              s13^2*(s13 + s23)^3 - s12^3*(s13^2 + 15*s13*s23 + 10*s23^2) + 
              s12^2*(53*s13^3 + 91*s13^2*s23 + 28*s13*s23^2 - 10*s23^3))) + 
           p1q^2*(s13 + s23)*(s13^2*s23*(s13 + s23)^2 - 14*s12*s13*s23*
              (2*s13^2 + 3*s13*s23 + s23^2) + 2*s12^3*(6*s13^2 + 16*s13*s23 + 
               9*s23^2) + 3*s12^2*(-4*s13^3 + s13^2*s23 + 12*s13*s23^2 + 6*
                s23^3)) + p1q*p2q*(-(s13^2*(s13 - s23)*(s13 + s23)^3) + 
             s12*s13*(s13 + s23)^2*(15*s13^2 - 47*s13*s23 - 14*s23^2) + 
             s12^3*(25*s13^3 + 65*s13^2*s23 + 48*s13*s23^2 + 12*s23^3) + 
             s12^2*(-55*s13^4 - 86*s13^3*s23 + 3*s13^2*s23^2 + 46*s13*s23^3 + 
               12*s23^4))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23*
         (s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]] + 
     ((7*(-2*p2q*p3q*s12*(s12 - s13)*(s12 - s13 - s23) + 
          p3q^2*s12^2*(-3*s12 + s13 - s23) + p1q^2*s23*(2*s12 + s23)*
           (s12 + s13 + s23) + p2q^2*(2*s12^2*(s13 + s23) + 
            s13^2*(s13 + s23) - s12*s13*(s13 + 2*s23)) - 2*p1q*(s12 - s13)*
           (p3q*s12^2 - p2q*(s23*(s13 + s23) + s12*(s13 + 2*s23)))))/
        (9*ep*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s23) + 
       (7*ep*(p3q^3*s12^2*s13*(s12 - s13 + s23)*(2*s12^2 + 3*s12*s23 + 
            s23^2) - p1q^3*s23*(s12 + s23)*(s12*s23^3 - 
            s13*s23^2*(s13 + s23) + s12^3*(2*s13 + s23) + 
            s12^2*(2*s13^2 + 3*s13*s23 + 2*s23^2)) - p2q^3*s13^2*
           (-2*s12^4 - 4*s12^3*s13 + s13^2*s23*(s13 + s23) + 
            s12*s13*s23*(2*s13 + s23) + s12^2*(2*s13^2 + 3*s13*s23 + 
              2*s23^2)) + p2q^2*p3q*s13*(-3*s12^5 - 5*s12^4*(s13 + s23) + 
            s13^2*s23^2*(s13 + s23) + s12^3*(9*s13^2 - 8*s13*s23 - s23^2) + 
            s12*s13*s23*(s13^2 + 3*s13*s23 + s23^2) + 
            s12^2*(-s13^3 + 2*s13^2*s23 - 2*s13*s23^2 + s23^3)) + 
          p2q*p3q^2*s12^2*(s12^4 + s12^3*(s13 + 3*s23) + 
            s13*s23*(s13^2 - 2*s13*s23 + 3*s23^2) + 
            s12^2*(-9*s13^2 + 5*s13*s23 + 3*s23^2) + 
            s12*(3*s13^3 - 11*s13^2*s23 + 7*s13*s23^2 + s23^3)) + 
          p1q^2*(p3q*(s12 + s23)*(-(s12*s23^4) + s13*s23^3*(s13 + s23) + 
              s12^4*(2*s13 + s23) + s12^3*(-2*s13^2 + s13*s23 + s23^2) - 
              s12^2*s23*(4*s13^2 + 2*s13*s23 + s23^2)) - 
            p2q*(s12^5*s23 + 3*s13^2*s23^3*(s13 + s23) + s12*s13*s23^2*(
                2*s13^2 + 4*s13*s23 - s23^2) + s12^4*(2*s13^2 + s13*s23 + 
                3*s23^2) + s12^2*s23*(-4*s13^3 - s13^2*s23 - s13*s23^2 + 
                s23^3) + s12^3*(-2*s13^3 + s13*s23^2 + 3*s23^3))) + 
          p1q*(p3q^2*s12^2*(s12 + s23)*(s12^2*(4*s13 + s23) + 
              s23*(-3*s13^2 + 2*s13*s23 + s23^2) + s12*(-4*s13^2 + 
                6*s13*s23 + 2*s23^2)) + p2q*p3q*(s12^6 + 2*s12^5*(s13 + 
                s23) - 2*s13^2*s23^3*(s13 + s23) - 2*s12*s13^2*s23^2*(s13 + 
                2*s23) + s12^4*(-9*s13^2 + 6*s13*s23) + s12^3*(6*s13^3 - 
                9*s13^2*s23 + 6*s13*s23^2 - 2*s23^3) - s12^2*s23*(-5*s13^3 + 
                2*s13^2*s23 - 2*s13*s23^2 + s23^3)) + p2q^2*s13*
             (-s12^5 + s12^4*(-2*s13 + s23) + 3*s13^2*s23^2*(s13 + s23) + 
              s12*s13*s23*(s13^2 + 5*s13*s23 + s23^2) + s12^3*(5*s13^2 + 
                2*s13*s23 + 5*s23^2) + s12^2*(-2*s13^3 + 4*s13^2*s23 + 
                5*s13*s23^2 + 3*s23^3)))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13*s23*(s12 + s23)*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - (7*(6*p1q^3*s13*s23*(s12 + s23)^2*(2*s12 + s23)*
           (s12 + s13 + s23) + p3q^3*s12^2*(s12 + s23)*
           (s12^3 + 2*s13*(s13 - 5*s23)*s23 + s12^2*(-24*s13 + 2*s23) + 
            s12*(-s13^2 - 34*s13*s23 + s23^2)) - 2*p2q^3*s13^2*
           (-s12^4 + 3*s13^2*s23*(s13 + s23) + s12^3*(6*s13 + 8*s23) + 
            s12*s13*(s13^2 - 3*s13*s23 - 7*s23^2) + 
            s12^2*(-4*s13^2 + 3*s13*s23 + 9*s23^2)) + p2q*p3q^2*s12*
           (s12^5 - 10*s13^2*s23^2*(s13 + s23) + s12^4*(-17*s13 + 3*s23) + 
            s12^3*(53*s13^2 - 17*s13*s23 + 3*s23^2) + s12*s13*s23*
             (-15*s13^2 + 28*s13*s23 + 17*s23^2) + 
            s12^2*(-s13^3 + 91*s13^2*s23 + 17*s13*s23^2 + s23^3)) + 
          p2q^2*p3q*s13*(-3*s12^5 + 6*s13^2*s23^2*(s13 + s23) + 
            s12^4*(28*s13 + 11*s23) + 2*s12*s13*s23*(9*s13^2 + 5*s13*s23 - 
              7*s23^2) + s12^3*(-37*s13^2 + 14*s13*s23 + 31*s23^2) + 
            s12^2*(4*s13^3 - 45*s13^2*s23 - 28*s13*s23^2 + 17*s23^3)) - 
          p1q^2*(s12 + s23)*(p3q*(-6*s13*s23^3*(s13 + s23) + s12^4*(12*s13 + 
                s23) - 6*s12*s13*s23^2*(4*s13 + 5*s23) - 2*s12^3*(6*s13^2 + 
                4*s13*s23 - s23^2) + s12^2*s23*(-33*s13^2 - 44*s13*s23 + 
                s23^2)) + p2q*(s12^4*s23 + 18*s13^2*s23^2*(s13 + s23) + 
              2*s12*s13*s23*(16*s13^2 + 18*s13*s23 - 7*s23^2) - 
              2*s12^3*(6*s13^2 + 14*s13*s23 - s23^2) + s12^2*(12*s13^3 + 
                3*s13^2*s23 - 42*s13*s23^2 + s23^3))) + 
          p1q*(p3q^2*s12*(s12 + s23)*(s12^4 + s12^3*(-36*s13 + s23) + 
              6*s13*s23^2*(s13 + s23) + s12^2*(11*s13^2 - 38*s13*s23 - 
                s23^2) + s12*s23*(23*s13^2 + 4*s13*s23 - s23^2)) + 
            p2q*p3q*(s12^6 - 12*s13^2*s23^3*(s13 + s23) + s12^5*(-15*s13 + 
                2*s23) + s12^4*s13*(55*s13 + 17*s23) - 2*s12*s13*s23^2*(
                24*s13^2 + 23*s13*s23 - 7*s23^2) + s12^3*(-25*s13^3 + 
                86*s13^2*s23 + 93*s13*s23^2 - 2*s23^3) - s12^2*s23*(
                65*s13^3 + 3*s13^2*s23 - 75*s13*s23^2 + s23^3)) + 
            p2q^2*s13*(-s12^5 + 18*s13^2*s23^2*(s13 + s23) + s12^4*(14*s13 + 
                17*s23) + 2*s12*s13*s23*(14*s13^2 + 9*s13*s23 - 14*s23^2) + 
              s12^3*(-19*s13^2 - 8*s13*s23 + 37*s23^2) + s12^2*(14*s13^3 - 
                23*s13^2*s23 - 50*s13*s23^2 + 19*s23^3)))))/
        (36*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13*s23*(s12 + s23)*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     ((-2*ep^2*(s12 + s13 - s23)*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23))/(9*(p1q + p2q + p3q)*(s12 + s13)*s23) + 
       (ep*(p1q^2*(p2q + p3q)*s23*(-7*s12*s13^2*s23^3 + 7*s13^3*s23^2*
             (s13 + s23) + 2*s12^4*(4*s13^2 + s23^2) + s12^2*s13*
             (8*s13^3 + 4*s13^2*s23 - 13*s13*s23^2 - 2*s23^3) + 
            2*s12^3*(8*s13^3 + 2*s13^2*s23 + s23^3)) + 
          (p2q + p3q)*(4*p2q*p3q*s12^2*s13^2*(2*s13*(13*s13 - 6*s23)*s23 + 
              s12^2*(4*s13 + 21*s23) + s12*(4*s13^2 + 43*s13*s23 - 
                7*s23^2)) + p3q^2*s12^2*(2*s12^4*s23 + s13^3*(39*s13 - 
                37*s23)*s23 + s12*s13^2*(58*s13 - 21*s23)*s23 + 
              s12^3*(-8*s13^2 + 4*s13*s23 + 2*s23^2) + s12^2*s13*(-8*s13^2 + 
                29*s13*s23 + 2*s23^2)) + p2q^2*s13^2*(44*s12^4*s23 + 
              7*s13^3*s23*(s13 + s23) + 7*s12*s13^2*s23*(2*s13 + s23) + 
              s12^2*s13*(-8*s13^2 + 59*s13*s23 - 16*s23^2) - 
              4*s12^3*(2*s13^2 - 22*s13*s23 + 3*s23^2))) - 
          2*p1q*(p2q^2*s13^2*(-4*s12^4*s23 + 7*s12*s13^2*s23^2 + 
              7*s13^2*s23^2*(s13 + s23) + s12^3*(4*s13^2 - 2*s13*s23 + 
                17*s23^2) + s12^2*(4*s13^3 - 2*s13^2*s23 + 25*s13*s23^2 - 
                7*s23^3)) + p2q*p3q*(2*s12^5*s23^2 + 7*s12*s13^4*s23^2 + 
              7*s13^4*s23^2*(s13 + s23) + s12^2*s13^2*s23*(-14*s13^2 + 
                43*s13*s23 - 19*s23^2) + s12^3*s13^2*(-8*s13^2 - 20*s13*s23 + 
                23*s23^2) + 2*s12^4*(-4*s13^3 - 7*s13^2*s23 + s13*s23^2 + 
                s23^3)) + 2*p3q^2*s12^2*(-(s12*s13^2*(s13 - 5*s23)*s23) + 
              s13^2*s23*(-2*s13^2 + 11*s13*s23 - 6*s23^2) + s12^3*(2*s13^2 + 
                s23^2) + s12^2*(2*s13^3 - s13^2*s23 + s13*s23^2 + s23^3)))))/
        (18*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)*s23^2) + 
       (p1q^3*(p2q + p3q)*s23^2*(7*s13^2*s23^2*(s13 + s23) + 
           7*s12*s13^2*s23*(2*s13 + 3*s23) + 2*s12^3*(39*s13^2 + 2*s13*s23 + 
             s23^2) + 2*s12^2*(39*s13^3 + 48*s13^2*s23 + 3*s13*s23^2 + 
             s23^3)) - (p2q + p3q)^2*(p3q^2*s12^2*(2*s12^4*s23 + 
             2*s13^3*(23*s13 - 2*s23)*s23 - s12*s13^2*s23*(11*s13 + 7*s23) + 
             s12^3*(-78*s13^2 + 2*s23^2) - s12^2*s13*(78*s13^2 + 57*s13*s23 + 
               2*s23^2)) + p2q^2*s13^2*(41*s12^4*s23 - 7*s12*s13^2*s23^2 + 
             7*s13^3*s23*(s13 + s23) - s12^2*s13*(78*s13^2 + 37*s13*s23 + 2*
                s23^2) + s12^3*(-78*s13^2 + 9*s13*s23 + 11*s23^2)) + 
           p2q*p3q*s12*s13*(-4*s12^4*s23 - 14*s13^3*s23*(s13 + s23) + 
             s12*s13^2*s23*(89*s13 + 3*s23) + s12^3*(156*s13^2 + 69*s13*s23 - 
               4*s23^2) + s12^2*s13*(156*s13^2 + 172*s13*s23 + 13*s23^2))) - 
         p1q^2*s23*(p2q^2*(21*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (4*s13^2 + 6*s13*s23 - s23^2) + 2*s12^4*(39*s13^2 + 2*s13*s23 + 
               s23^2) + s12^2*s13*(156*s13^3 + 99*s13^2*s23 - 40*s13*s23^2 + 
               2*s23^3) + s12^3*(154*s13^3 + 17*s13^2*s23 + 8*s13*s23^2 + 2*
                s23^3)) + 2*p2q*p3q*(14*s13^3*s23^2*(s13 + s23) + 
             7*s12*s13^3*s23*(3*s13 + 5*s23) + s12^2*s13^2*(79*s13^2 - 18*s13*
                s23 - 68*s23^2) + s12^4*(79*s13^2 + 6*s13*s23 + 4*s23^2) + 
             s12^3*(78*s13^3 - 13*s13^2*s23 + 10*s13*s23^2 + 4*s23^3)) + 
           p3q^2*(7*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (2*s13^2 + 4*s13*s23 + s23^2) + 2*s12^4*(78*s13^2 + 4*s13*s23 + 
               3*s23^2) + s12^2*s13*(78*s13^3 + 17*s13^2*s23 - 20*s13*s23^2 - 
               2*s23^3) + s12^3*(154*s13^3 + 109*s13^2*s23 + 12*s13*s23^2 + 6*
                s23^3))) + p1q*(p2q^3*s13^2*(-82*s12^4*s23 + 
             21*s13^2*s23^2*(s13 + s23) + s12^3*(78*s13^2 - 89*s13*s23 - 24*
                s23^2) + 7*s12*s13*s23*(2*s13^2 + 3*s13*s23 - 2*s23^2) + 
             s12^2*(78*s13^3 - 75*s13^2*s23 - 83*s13*s23^2 - 2*s23^3)) + 
           p2q^2*p3q*(4*s12^5*s23*(s13 + s23) + 35*s13^4*s23^2*(s13 + s23) + 
             7*s12*s13^3*s23*(4*s13^2 + 5*s13*s23 - 4*s23^2) + 
             2*s12^2*s13^2*(39*s13^3 - 161*s13^2*s23 - 80*s13*s23^2 - 2*
                s23^3) + s12^4*(-156*s13^3 - 309*s13^2*s23 + 4*s13*s23^2 + 4*
                s23^3) - s12^3*s13*(78*s13^3 + 417*s13^2*s23 + 141*s13*
                s23^2 + 4*s23^3)) + p3q^3*s12^2*
            (s13^2*s23*(-92*s13^2 + s13*s23 - 7*s23^2) - s12*s13*s23*
              (79*s13^2 + 98*s13*s23 + 4*s23^2) + s12^3*(78*s13^2 + 4*s13*
                s23 + 6*s23^2) + s12^2*(78*s13^3 - 65*s13^2*s23 + 6*s13*
                s23^2 + 6*s23^3)) + p2q*p3q^2*(14*s13^4*s23^2*(s13 + s23) + 
             14*s12*s13^3*s23*(s13^2 + s13*s23 - s23^2) + 
             2*s12^5*(39*s13^2 + 4*s13*s23 + 5*s23^2) - s12^2*s13^2*s23*
              (339*s13^2 + 76*s13*s23 + 9*s23^2) - 2*s12^4*(39*s13^3 + 146*
                s13^2*s23 - 5*s13*s23^2 - 5*s23^3) - s12^3*s13*
              (156*s13^3 + 407*s13^2*s23 + 215*s13*s23^2 + 8*s23^3))))/
        (9*ep*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) + 
       (-(p1q^3*(p2q + p3q)*s23^2*(21*s13^4*s23^2*(s13 + s23) + 
            2*s12^5*(78*s13^2 + 8*s13*s23 + 3*s23^2) + 7*s12*s13^3*s23*
             (8*s13^2 + 15*s13*s23 + 4*s23^2) + s12^2*s13^2*
             (156*s13^3 + 272*s13^2*s23 + 77*s13*s23^2 - 11*s23^3) + 
            6*s12^4*(78*s13^3 + 32*s13^2*s23 + 5*s13*s23^2 + s23^3) + 
            s12^3*s13*(468*s13^3 + 392*s13^2*s23 + 17*s13*s23^2 + 
              8*s23^3))) + (p2q + p3q)^2*(s12 + s13)*
          (p3q^2*s12^2*(6*s12^5*s23 + s12*s13^3*(127*s13 - 86*s23)*s23 + 
             s13^4*(143*s13 - 72*s23)*s23 + 6*s12^4*(-26*s13^2 + s23^2) - 
             3*s12^2*s13^2*(52*s13^2 + 21*s13*s23 + 2*s23^2) - 
             s12^3*s13*(312*s13^2 + 53*s13*s23 + 6*s23^2)) + 
           p2q^2*s13^2*(133*s12^5*s23 - 21*s12*s13^3*s23^2 + 
             21*s13^4*s23*(s13 + s23) + s12^2*s13^2*(-156*s13^2 + 27*s13*
                s23 - 11*s23^2) + s12^4*(-156*s13^2 + 232*s13*s23 + 18*
                s23^2) + s12^3*s13*(-312*s13^2 + 147*s13*s23 + 29*s23^2)) + 
           p2q*p3q*s12*s13*(-10*s12^5*s23 + s12*s13^3*(362*s13 - 33*s23)*
              s23 - 35*s13^4*s23*(s13 + s23) + s12^4*(312*s13^2 + 257*s13*
                s23 - 10*s23^2) + 3*s12^2*s13^2*(104*s13^2 + 286*s13*s23 + 3*
                s23^2) + s12^3*s13*(624*s13^2 + 728*s13*s23 + 37*s23^2))) + 
         p1q^2*s23*(p2q^2*(63*s13^5*s23^2*(s13 + s23) + 
             2*s12^6*(78*s13^2 + 8*s13*s23 + 3*s23^2) + 7*s12*s13^4*s23*
              (16*s13^2 + 33*s13*s23 + 8*s23^2) + s12^2*s13^3*
              (312*s13^3 + 328*s13^2*s23 + 116*s13*s23^2 - 59*s23^3) + 
             s12^3*s13^2*(928*s13^3 + 456*s13^2*s23 - 83*s13*s23^2 - 30*
                s23^3) + s12^5*(616*s13^3 + 32*s13^2*s23 + 30*s13*s23^2 + 6*
                s23^3) + s12^4*s13*(1076*s13^3 + 256*s13^2*s23 - 47*s13*
                s23^2 + 8*s23^3)) + 2*p2q*p3q*(42*s13^5*s23^2*(s13 + s23) + 
             42*s12*s13^4*s23*(2*s13^2 + 4*s13*s23 + s23^2) + 
             4*s12^6*(40*s13^2 + 6*s13*s23 + 3*s23^2) + s12^2*s13^3*
              (160*s13^3 + 72*s13^2*s23 + 53*s13*s23^2 - 32*s23^3) + 
             2*s12^3*s13^2*(238*s13^3 - 24*s13^2*s23 - 93*s13*s23^2 - 16*
                s23^3) + 4*s12^5*(119*s13^3 - 7*s13^2*s23 + 12*s13*s23^2 + 3*
                s23^3) + s12^4*s13*(632*s13^3 - 88*s13^2*s23 - 117*s13*
                s23^2 + 12*s23^3)) + p3q^2*(21*s13^5*s23^2*(s13 + s23) + 
             7*s12*s13^4*s23*(8*s13^2 + 15*s13*s23 + 4*s23^2) + 
             2*s12^6*(156*s13^2 + 16*s13*s23 + 9*s23^2) + s12^3*s13^2*
              (616*s13^3 + 336*s13^2*s23 + 7*s13*s23^2 - 34*s23^3) + 
             s12^2*s13^3*(156*s13^3 + 112*s13^2*s23 + 138*s13*s23^2 - 5*
                s23^3) + 2*s12^5*(464*s13^3 + 104*s13^2*s23 + 33*s13*s23^2 + 
               9*s23^3) + s12^4*s13*(1076*s13^3 + 456*s13^2*s23 - 39*s13*
                s23^2 + 16*s23^3))) + 
         p1q*(p3q^3*s12*(21*s13^5*s23^2*(s13 + s23) - 
             2*s12^6*(78*s13^2 + 8*s13*s23 + 9*s23^2) + s12*s13^4*s23*
              (212*s13^2 - 86*s13*s23 + 111*s23^2) + s12^2*s13^3*s23*
              (516*s13^2 - 20*s13*s23 + 135*s23^2) + s12^4*s13*
              (-468*s13^3 + 420*s13^2*s23 + 109*s13*s23^2 - 8*s23^3) - 
             2*s12^5*(234*s13^3 - 70*s13^2*s23 + 21*s13*s23^2 + 9*s23^3) + 
             s12^3*s13^2*(-156*s13^3 + 568*s13^2*s23 + 220*s13*s23^2 + 35*
                s23^3)) - 2*p2q*p3q^2*(21*s13^6*s23^2*(s13 + s23) + 
             s12^2*s13^4*s23*(-344*s13^2 + 129*s13*s23 - 130*s23^2) + 
             7*s12*s13^5*s23*(4*s13^2 + 5*s13*s23 - 2*s23^2) + 
             s12^7*(78*s13^2 + 16*s13*s23 + 15*s23^2) - s12^5*s13*
              (234*s13^3 + 986*s13^2*s23 + 86*s13*s23^2 - 3*s23^3) + 
             s12^6*(78*s13^3 - 308*s13^2*s23 + 34*s13*s23^2 + 15*s23^3) - 
             2*s12^4*s13^2*(195*s13^3 + 692*s13^2*s23 + 103*s13*s23^2 + 16*
                s23^3) - s12^3*s13^3*(156*s13^3 + 1094*s13^2*s23 - 14*s13*
                s23^2 + 145*s23^3)) + p2q^2*p3q*(-105*s13^6*s23^2*
              (s13 + s23) - 4*s12^7*s23*(4*s13 + 3*s23) - 7*s12*s13^5*s23*
              (16*s13^2 + 34*s13*s23 + 3*s23^2) + 4*s12^6*(78*s13^3 + 162*
                s13^2*s23 - 5*s13*s23^2 - 3*s23^3) + 2*s12^5*s13*
              (390*s13^3 + 1014*s13^2*s23 + 11*s13*s23^2 + 4*s23^3) + 
             s12^4*s13^2*(468*s13^3 + 2848*s13^2*s23 + 207*s13*s23^2 + 40*
                s23^3) + 3*s12^3*s13^3*(-52*s13^3 + 724*s13^2*s23 + 24*s13*
                s23^2 + 75*s23^3) + s12^2*s13^4*(-156*s13^3 + 576*s13^2*s23 - 
               238*s13*s23^2 + 229*s23^3)) + p2q^3*s13*
            (-63*s13^5*s23^2*(s13 + s23) + 2*s12^6*s23*(86*s13 + 3*s23) - 
             7*s12*s13^4*s23*(8*s13^2 + 21*s13*s23 + 4*s23^2) - 
             2*s12^2*s13^3*(78*s13^3 - 50*s13^2*s23 + 33*s13*s23^2 - 40*
                s23^3) + s12^5*(-156*s13^3 + 476*s13^2*s23 - 41*s13*s23^2 + 6*
                s23^3) + s12^4*s13*(-468*s13^3 + 648*s13^2*s23 + 15*s13*
                s23^2 + 11*s23^3) + s12^3*(-468*s13^5 + 500*s13^4*s23 + 80*
                s13^3*s23^2 + 70*s13^2*s23^3))))/(18*(p2q + p3q)^2*
         (p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)^2*s23^2*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) + 
       ((-4*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23) + (p2q + p3q)*
           (2*p2q*p3q*(-4*s12*s13 + s12*s23 + s13*s23) + 
            p3q^2*(4*s12^2 + 5*s12*s23 + s13*s23) + 
            p2q^2*(4*s13^2 + s12*s23 + 5*s13*s23)) + 
          p1q*(p2q^2*(4*s13^2 - 4*s12*s23 - 5*s23^2) + 
            p3q^2*(4*s12^2 - 4*s13*s23 - 5*s23^2) - 2*p2q*p3q*
             (4*s12*s13 + 6*s12*s23 + 6*s13*s23 + 7*s23^2)))*den[-3 + 2*ep])/
        (2*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2) + 
       nl*((2*ep*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23))/
          (3*(p1q + p2q + p3q)*s23) + (-4*p1q^2*(p2q + p3q)*s23*
            (s12 + s13 + s23) - (p2q + p3q)*(p2q^2*(-4*s13^2 + s12*s23 - 3*
                s13*s23) + p3q^2*(-4*s12^2 - 3*s12*s23 + s13*s23) + 
             2*p2q*p3q*(4*s12*s13 + s12*s23 + s13*s23)) + 
           p1q*(p2q^2*(4*s13^2 - 4*s12*s23 - 3*s23^2) + 
             p3q^2*(4*s12^2 - 4*s13*s23 - 3*s23^2) - 2*p2q*p3q*
              (4*s12*s13 + 6*s12*s23 + 6*s13*s23 + 5*s23^2)))/
          (3*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2) + 
         ((-4*p1q^2*(p2q + p3q)*s23*(s12 + s13 + s23) + (p2q + p3q)*
             (2*p2q*p3q*(-4*s12*s13 + s12*s23 + s13*s23) + p3q^2*(4*s12^2 + 
                5*s12*s23 + s13*s23) + p2q^2*(4*s13^2 + s12*s23 + 
                5*s13*s23)) + p1q*(p2q^2*(4*s13^2 - 4*s12*s23 - 5*s23^2) + 
              p3q^2*(4*s12^2 - 4*s13*s23 - 5*s23^2) - 2*p2q*p3q*(4*s12*s13 + 
                6*s12*s23 + 6*s13*s23 + 7*s23^2)))*den[-3 + 2*ep])/
          (3*(p2q + p3q)^2*(p1q + p2q + p3q)*s23^2)))*
      Int[DS[k]*DS[k + p2 + p3]] + 
     ((-2*ep^2*(5*s12 + 5*s13 + s23)*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23))/(9*(p1q + p2q + p3q)*(s12 + s13)*s23) + 
       (-(p1q^3*s23^2*(7*s13^2*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
             (2*s13 + 3*s23) + 2*s12^3*(2*s13^2 + 2*s13*s23 + s23^2) + 
            2*s12^2*(2*s13^3 + 11*s13^2*s23 + 3*s13*s23^2 + s23^3))) + 
         (p2q + p3q)*(p3q^2*s12^2*(2*s12^4*s23 + s13^3*(9*s13 - 5*s23)*s23 - 
             s12*s13^2*s23*(12*s13 + 7*s23) + s12^3*(-4*s13^2 + 2*s23^2) - 
             s12^2*s13*(4*s13^2 + 19*s13*s23 + 2*s23^2)) - 
           2*p2q*p3q*s12*s13*(2*s12^4*s23 + 7*s13^3*s23*(s13 + s23) - 
             s12*s13^2*s23*(8*s13 + s23) + 2*s12^3*(-2*s13^2 + s13*s23 + s23^
                2) - s12^2*s13*(4*s13^2 + 11*s13*s23 + 6*s23^2)) + 
           p2q^2*s13^2*(4*s12^4*s23 - 7*s12*s13^2*s23^2 + 7*s13^3*s23*
              (s13 + s23) + s12^2*s13*(-4*s13^2 + s13*s23 - 2*s23^2) + 
             s12^3*(-4*s13^2 + 8*s13*s23 + 10*s23^2))) + 
         p1q^2*s23*(p2q*(21*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (4*s13^2 + 6*s13*s23 - s23^2) + 2*s12^4*(2*s13^2 + 2*s13*s23 + 
               s23^2) + 2*s12^3*(2*s13^3 + 8*s13^2*s23 + 4*s13*s23^2 + s23^
                3) + s12^2*s13*(8*s13^3 + 24*s13^2*s23 - 3*s13*s23^2 + 2*
                s23^3)) + p3q*(7*s13^3*s23^2*(s13 + s23) + 7*s12*s13^2*s23*
              (2*s13^2 + 4*s13*s23 + s23^2) + s12^4*(8*s13^2 + 8*s13*s23 + 6*
                s23^2) + s12^2*s13*(4*s13^3 + 16*s13^2*s23 + 17*s13*s23^2 - 2*
                s23^3) + 2*s12^3*(2*s13^3 + 17*s13^2*s23 + 6*s13*s23^2 + 3*
                s23^3))) + p1q*(p2q^2*s13^2*(8*s12^4*s23 - 21*s13^2*s23^2*
              (s13 + s23) - 7*s12*s13*s23*(2*s13^2 + 3*s13*s23 - 2*s23^2) + 
             s12^3*(-4*s13^2 + 12*s13*s23 + 22*s23^2) + 
             2*s12^2*(-2*s13^3 + s13^2*s23 + 4*s13*s23^2 + s23^3)) - 
           2*p2q*p3q*(2*s12^5*s23*(s13 + s23) + 7*s13^4*s23^2*(s13 + s23) + 
             7*s12*s13^3*s23*(s13^2 + s13*s23 - s23^2) - 2*s12^2*s13^2*s23*
              (7*s13^2 + s13*s23 + s23^2) + 2*s12^4*(-2*s13^3 - 2*s13^2*s23 + 
               s13*s23^2 + s23^3) - s12^3*s13*(4*s13^3 + 15*s13^2*s23 + 22*
                s13*s23^2 + 2*s23^3)) - p3q^2*s12^2*
            (s13^2*s23*(-18*s13^2 + 3*s13*s23 - 7*s23^2) - 
             s12*s13*s23*(2*s13^2 + 23*s13*s23 + 4*s23^2) + 
             s12^3*(4*s13^2 + 4*s13*s23 + 6*s23^2) + s12^2*(4*s13^3 + 8*s13^2*
                s23 + 6*s13*s23^2 + 6*s23^3))))/(9*ep*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       (ep*(p2q^4*s13^3*(s13 + s23)^2*(-32*s12^5*s23 + 7*s13^3*s23^2*
             (s13 + s23) + 7*s12*s13^2*s23^2*(2*s13 + s23) + 
            s12^4*(20*s13^2 - 29*s13*s23 - 34*s23^2) + s12^2*s13*s23*
             (27*s13^2 + 40*s13*s23 - 6*s23^2) + s12^3*(20*s13^3 + 
              18*s13^2*s23 + 7*s13*s23^2 - 2*s23^3)) + 
          p3q^4*s12^3*(s12 + s23)^2*(2*s12^4*s23^2 - 37*s13^3*s23*
             (s13 + s23)^2 - 3*s12*s13^2*s23*(8*s13^2 + 11*s13*s23 + 
              7*s23^2) + 2*s12^3*(10*s13^3 + 11*s13^2*s23 + 2*s13*s23^2 + 
              s23^3) + s12^2*s13*(20*s13^3 + 23*s13^2*s23 + 15*s13*s23^2 + 
              2*s23^3)) + p1q^4*s23^2*(s12 + s23)*(s13 + s23)*
           (7*s12*s13^2*s23^3*(s13 + s23) - 7*s13^3*s23^2*(s13 + s23)^2 + 
            s12^5*(4*s13^2 - 2*s23^2) + 2*s12^4*(3*s13^3 + 5*s13^2*s23 - 
              2*s23^3) + 2*s12^3*(8*s13^4 + 12*s13^3*s23 + 5*s13^2*s23^2 + 
              s13*s23^3 - s23^4) + s12^2*s13*(14*s13^4 + 30*s13^3*s23 + 
              25*s13^2*s23^2 + 11*s13*s23^3 + 2*s23^4)) + 
          p2q*p3q^3*s12^2*(s13^3*s23^3*(s13 + s23)^2*(37*s13 + 41*s23) - 
            2*s12^6*s23*(-s13^2 + 2*s13*s23 + s23^2) - 
            s12^5*(80*s13^4 + 157*s13^3*s23 + 63*s13^2*s23^2 + 14*s13*s23^3 + 
              6*s23^4) + s12*s13^2*s23^2*(104*s13^4 + 272*s13^3*s23 + 
              243*s13^2*s23^2 + 100*s13*s23^3 + 25*s23^4) + 
            s12^2*s13*s23*(81*s13^5 + 82*s13^4*s23 - 66*s13^3*s23^2 - 
              26*s13^2*s23^3 + 9*s13*s23^4 - 2*s23^5) - 
            s12^3*s23*(155*s13^5 + 443*s13^4*s23 + 380*s13^3*s23^2 + 
              122*s13^2*s23^3 + 10*s13*s23^4 + 2*s23^5) - 
            s12^4*(80*s13^5 + 347*s13^4*s23 + 452*s13^3*s23^2 + 
              171*s13^2*s23^3 + 18*s13*s23^4 + 6*s23^5)) + 
          p2q^3*p3q*s13^2*(-7*s13^3*s23^3*(s13 + s23)^3 - 7*s12*s13^2*s23^2*
             (s13 + s23)^3*(2*s13 + s23) + 2*s12^6*s23*(33*s13^2 + 
              47*s13*s23 + 16*s23^2) + s12^5*(-80*s13^4 - 135*s13^3*s23 + 
              37*s13^2*s23^2 + 172*s13*s23^3 + 80*s23^4) - 
            s12^4*(80*s13^5 + 337*s13^4*s23 + 448*s13^3*s23^2 + 
              136*s13^2*s23^3 - 123*s13*s23^4 - 64*s23^5) + 
            s12^3*s23*(-177*s13^5 - 477*s13^4*s23 - 365*s13^3*s23^2 - 
              16*s13^2*s23^3 + 65*s13*s23^4 + 16*s23^5) + s12^2*s13*s23*
             (7*s13^5 - 48*s13^4*s23 - 171*s13^3*s23^2 - 157*s13^2*s23^3 - 
              21*s13*s23^4 + 20*s23^5)) + p2q^2*p3q^2*s12*s13*
           (7*s13^4*s23^3*(s13 + s23)^2 + 2*s12^6*s23*(-18*s13^2 - 
              14*s13*s23 + s23^2) + s12^5*(120*s13^4 + 259*s13^3*s23 + 
              94*s13^2*s23^2 - 19*s13*s23^3 + 4*s23^4) + s12*s13^2*s23^2*
             (-23*s13^4 - 24*s13^3*s23 + 70*s13^2*s23^2 + 127*s13*s23^3 + 
              56*s23^4) + s12^3*s13*s23*(289*s13^4 + 793*s13^3*s23 + 
              821*s13^2*s23^2 + 446*s13*s23^3 + 107*s23^4) + 
            s12^4*(120*s13^5 + 563*s13^4*s23 + 778*s13^3*s23^2 + 
              419*s13^2*s23^3 + 80*s13*s23^4 + 2*s23^5) + s12^2*s13*s23*
             (-51*s13^5 + 54*s13^4*s23 + 434*s13^3*s23^2 + 506*s13^2*s23^3 + 
              213*s13*s23^4 + 36*s23^5)) + p1q^3*s23*
           (p3q*(s12 + s23)*(7*s12*s13^2*s23^3*(s13 + s23)^3 - 
              7*s13^3*s23^3*(s13 + s23)^3 + s12^6*(-4*s13^3 - 8*s13^2*s23 + 
                4*s13*s23^2 + 6*s23^3) + 2*s12^5*(11*s13^4 + 18*s13^3*s23 + 
                7*s13^2*s23^2 + 5*s13*s23^3 + 5*s23^4) + s12^2*s13*s23*(
                55*s13^5 + 153*s13^4*s23 + 126*s13^3*s23^2 + 8*s13^2*s23^3 - 
                18*s13*s23^4 + 2*s23^5) + s12^4*(28*s13^5 + 85*s13^4*s23 + 
                98*s13^3*s23^2 + 43*s13^2*s23^3 + 2*s13*s23^4 + 2*s23^5) + 
              s12^3*(34*s13^6 + 132*s13^5*s23 + 161*s13^4*s23^2 + 
                59*s13^3*s23^3 - 4*s13^2*s23^4 - 2*s13*s23^5 - 2*s23^6)) + 
            p2q*(s13 + s23)*(7*s13^3*(3*s13 - s23)*s23^3*(s13 + s23)^2 + 
              s12^6*(24*s13^3 + 30*s13^2*s23 - 2*s23^3) + s12^5*(38*s13^4 + 
                107*s13^3*s23 + 83*s13^2*s23^2 + 2*s13*s23^3 - 6*s23^4) + 
              7*s12*s13^2*s23^2*(2*s13^4 + 5*s13^3*s23 + s13^2*s23^2 - 
                s13*s23^3 + s23^4) + 2*s12^4*(16*s13^5 + 75*s13^4*s23 + 
                88*s13^3*s23^2 + 33*s13^2*s23^3 + 3*s13*s23^4 - 3*s23^5) + 
              s12^2*s13*s23*(-28*s13^5 + 9*s13^4*s23 + 83*s13^3*s23^2 + 
                46*s13^2*s23^3 + 2*s13*s23^4 + 2*s23^5) + s12^3*(-14*s13^6 + 
                41*s13^5*s23 + 188*s13^4*s23^2 + 139*s13^3*s23^3 + 
                8*s13^2*s23^4 + 6*s13*s23^5 - 2*s23^6))) + 
          p1q*(p2q^3*s13^2*(s13 + s23)*(18*s12^6*s23*(s13 + s23) + 
              7*s13^3*(s13 - 3*s23)*s23^2*(s13 + s23)^2 - s12^5*(20*s13^3 + 
                89*s13^2*s23 + 33*s13*s23^2 - 38*s23^3) + 7*s12*s13^2*s23^2*(
                s13^3 - 3*s13^2*s23 - 5*s13*s23^2 - s23^3) + 
              s12^4*s23*(-147*s13^3 - 258*s13^2*s23 - 89*s13*s23^2 + 
                22*s23^3) + s12^2*s13*s23*(41*s13^4 + 15*s13^3*s23 - 
                118*s13^2*s23^2 - 72*s13*s23^3 + 20*s23^4) + 
              s12^3*(20*s13^5 - 55*s13^4*s23 - 224*s13^3*s23^2 - 
                171*s13^2*s23^3 - 18*s13*s23^4 + 2*s23^5)) + 
            p3q^3*s12^2*(s12 + s23)*(2*s12^6*s23^2 + s13^3*s23^2*(s13 + s23)^
                2*(33*s13 + 37*s23) + 2*s12^5*(10*s13^3 + 13*s13^2*s23 + 
                s13*s23^2 - s23^3) - s12^4*s23*(25*s13^3 + 5*s13^2*s23 + 
                6*s13*s23^2 + 10*s23^3) - s12^2*s13*s23*(79*s13^4 + 
                208*s13^3*s23 + 121*s13^2*s23^2 + 12*s13*s23^3 + 2*s23^4) + 
              s12*s13^2*s23*(33*s13^4 + 37*s13^3*s23 + 6*s13^2*s23^2 + 
                47*s13*s23^3 + 45*s23^4) - s12^3*(20*s13^5 + 107*s13^4*s23 + 
                169*s13^3*s23^2 + 88*s13^2*s23^3 + 10*s13*s23^4 + 6*s23^5)) + 
            p2q^2*p3q*s13*(-7*s12*s13^3*(s13 - 3*s23)*s23^2*(s13 + s23)^3 - 
              7*s13^3*(s13 - 2*s23)*s23^3*(s13 + s23)^3 - 4*s12^7*s13*s23*(
                5*s13 + 4*s23) + s12^5*s23*(241*s13^4 + 710*s13^3*s23 + 
                690*s13^2*s23^2 + 209*s13*s23^3 - 8*s23^4) + 
              s12^6*(60*s13^4 + 242*s13^3*s23 + 235*s13^2*s23^2 + 
                55*s13*s23^3 - 4*s23^4) + s12^3*s13*s23*(-229*s13^5 - 
                381*s13^4*s23 + 212*s13^3*s23^2 + 640*s13^2*s23^3 + 
                303*s13*s23^4 + 27*s23^5) + s12^2*s13*s23*(7*s13^6 - 
                85*s13^5*s23 - 187*s13^4*s23^2 + 13*s13^3*s23^3 + 
                219*s13^2*s23^4 + 97*s13*s23^5 - 14*s23^6) + 
              s12^4*(-60*s13^6 - 89*s13^5*s23 + 324*s13^4*s23^2 + 
                805*s13^3*s23^3 + 641*s13^2*s23^4 + 179*s13*s23^5 - 
                4*s23^6)) + p2q*p3q^2*s12*(-14*s13^4*s23^4*(s13 + s23)^2 - 
              2*s12^7*s23*(-s13^2 + s13*s23 + s23^2) - s12^6*(60*s13^4 + 
                159*s13^3*s23 + 75*s13^2*s23^2 + 2*s23^4) + s12^5*s23*(
                -89*s13^4 - 246*s13^3*s23 - 127*s13^2*s23^2 + 12*s13*s23^3 + 
                6*s23^4) + 2*s12*s13^2*s23^2*(-13*s13^5 + 10*s13^4*s23 + 
                112*s13^3*s23^2 + 137*s13^2*s23^3 + 36*s13*s23^4 - 
                12*s23^5) + s12^2*s13^2*s23*(-40*s13^5 + 240*s13^4*s23 + 
                855*s13^3*s23^2 + 836*s13^2*s23^3 + 303*s13*s23^4 + 
                42*s23^5) + s12^3*s23*(287*s13^6 + 820*s13^5*s23 + 
                865*s13^4*s23^2 + 535*s13^3*s23^3 + 179*s13^2*s23^4 + 
                6*s13*s23^5 + 4*s23^6) + s12^4*(60*s13^6 + 231*s13^5*s23 + 
                309*s13^4*s23^2 + 217*s13^3*s23^3 + 63*s13^2*s23^4 + 
                16*s13*s23^5 + 10*s23^6))) + 
          p1q^2*(p3q^2*s12*(s12 + s23)*(7*s13^3*s23^4*(s13 + s23)^2 - 
              2*s12^6*s23*(-2*s13^2 + s13*s23 + 3*s23^2) + s12*s13^2*s23^2*(
                74*s13^4 + 212*s13^3*s23 + 178*s13^2*s23^2 + 9*s13*s23^3 - 
                31*s23^4) - 2*s12^5*(10*s13^4 + 36*s13^3*s23 + 25*s13^2*
                 s23^2 + 4*s13*s23^3 + 3*s23^4) - s12^4*(20*s13^5 + 
                81*s13^4*s23 + 127*s13^3*s23^2 + 72*s13^2*s23^3 - 6*s23^5) + 
              s12^2*s13*s23*(67*s13^5 + 190*s13^4*s23 + 201*s13^3*s23^2 + 
                109*s13^2*s23^3 + 29*s13*s23^4 - 2*s23^5) + s12^3*s23*(
                -14*s13^5 - 31*s13^4*s23 + 31*s13^3*s23^2 + 42*s13^2*s23^3 + 
                4*s13*s23^4 + 6*s23^5)) - p2q^2*s13*(s13 + s23)*
             (21*s13^3*(s13 - s23)*s23^3*(s13 + s23)^2 - 2*s12^6*s13*s23*(
                21*s13 + 22*s23) + s12^5*(20*s13^4 + 19*s13^3*s23 - 
                100*s13^2*s23^2 - 107*s13*s23^3 - 2*s23^4) + 7*s12*s13^2*s23^
                2*(s13^4 + 4*s13^3*s23 - 2*s13*s23^3 + s23^4) + 
              s12^4*(20*s13^5 + 106*s13^4*s23 + 61*s13^3*s23^2 - 
                91*s13^2*s23^3 - 68*s13*s23^4 - 4*s23^5) + s12^3*s23*(
                107*s13^5 + 222*s13^4*s23 + 34*s13^3*s23^2 - 74*s13^2*s23^3 + 
                11*s13*s23^4 - 2*s23^5) + s12^2*s13*s23*(-14*s13^5 + 
                80*s13^4*s23 + 157*s13^3*s23^2 + 13*s13^2*s23^3 - 
                34*s13*s23^4 + 16*s23^5)) + p2q*p3q*(7*s13^3*(2*s13 - s23)*
               s23^4*(s13 + s23)^3 + 7*s12*s13^2*s23^3*(s13 + s23)^3*(
                2*s13^2 - 2*s13*s23 + s23^2) + s12^7*(-34*s13^3*s23 - 
                32*s13^2*s23^2 + 4*s13*s23^3 + 4*s23^4) + s12^6*(40*s13^5 + 
                119*s13^4*s23 + 77*s13^3*s23^2 - 4*s13^2*s23^3 + 
                8*s13*s23^4 + 10*s23^5) + s12^4*s23*(149*s13^6 + 
                569*s13^5*s23 + 790*s13^4*s23^2 + 544*s13^3*s23^3 + 
                174*s13^2*s23^4 - 2*s13*s23^5 - 2*s23^6) + s12^2*s13*s23^2*(
                -62*s13^6 - 54*s13^5*s23 + 208*s13^4*s23^2 + 329*s13^3*
                 s23^3 + 109*s13^2*s23^4 - 18*s13*s23^5 + 2*s23^6) + 
              s12^5*(40*s13^6 + 219*s13^5*s23 + 454*s13^4*s23^2 + 
                439*s13^3*s23^3 + 158*s13^2*s23^4 + 2*s13*s23^5 + 6*s23^6) + 
              s12^3*s23*(-69*s13^7 + 62*s13^6*s23 + 619*s13^5*s23^2 + 
                784*s13^4*s23^3 + 311*s13^3*s23^4 + 19*s13^2*s23^5 + 
                2*s13*s23^6 - 2*s23^7)))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*
         s12^2*s13^2*(s12 + s13)*s23^2*(s12 + s23)*(s13 + s23)*
         (-(p3q^2*s12*(s12 + s23)) - p1q*p3q*(s12 - s13 - s23)*(s12 + s23) - 
          p2q^2*s13*(s13 + s23) + p2q*p3q*s23*(s13 + s23) + 
          p1q^2*(s12 + s23)*(s13 + s23) + p1q*p2q*(s12 - s13 + s23)*
           (s13 + s23) + p2q*p3q*s12*(2*s13 + s23))) + 
       (p1q^5*s23^2*(s12 + s23)^2*(s13 + s23)^2*(21*s13^4*s23^2*(s13 + s23) + 
           2*s12^5*(8*s13^2 + 6*s13*s23 + 3*s23^2) + 7*s12*s13^3*s23*
            (6*s13^2 + 13*s13*s23 + 4*s23^2) + s12^2*s13^2*
            (16*s13^3 + 86*s13^2*s23 + 45*s13*s23^2 - 11*s23^3) + 
           s12^4*(48*s13^3 + 26*s13^2*s23 + 26*s13*s23^2 + 6*s23^3) + 
           s12^3*s13*(48*s13^3 + 58*s13^2*s23 - 5*s13*s23^2 + 8*s23^3)) - 
         p1q^4*s23*(s12 + s23)*(s13 + s23)*
          (p3q*(21*s13^4*(s13 - s23)*s23^3*(s13 + s23)^2 + 
             s12^7*(32*s13^3 + 72*s13^2*s23 + 50*s13*s23^2 + 24*s23^3) + 
             7*s12*s13^3*s23^2*(9*s13^4 + 16*s13^3*s23 - 2*s13^2*s23^2 - 13*
                s13*s23^3 - 4*s23^4) + 2*s12^6*(40*s13^4 + 80*s13^3*s23 + 65*
                s13^2*s23^2 + 65*s13*s23^3 + 21*s23^4) + s12^2*s13^2*s23*
              (58*s13^5 + 146*s13^4*s23 + 114*s13^3*s23^2 - 3*s13^2*s23^3 - 
               39*s13*s23^4 + 11*s23^5) + s12^5*(80*s13^5 + 234*s13^4*s23 + 
               117*s13^3*s23^2 - 44*s13^2*s23^3 + 72*s13*s23^4 + 12*s23^5) + 
             s12^3*s13*(16*s13^6 + 110*s13^5*s23 + 218*s13^4*s23^2 + 118*
                s13^3*s23^3 - 68*s13^2*s23^4 - 37*s13*s23^5 - 8*s23^6) + 
             s12^4*(48*s13^6 + 198*s13^5*s23 + 212*s13^4*s23^2 - 75*s13^3*
                s23^3 - 150*s13^2*s23^4 - 16*s13*s23^5 - 6*s23^6)) + 
           p2q*(21*s13^4*(4*s13 - s23)*s23^3*(s13 + s23)^2 + 
             2*s12^7*(8*s13^3 + 14*s13^2*s23 + 9*s13*s23^2 + 3*s23^3) + 
             7*s12*s13^3*s23^2*(25*s13^4 + 65*s13^3*s23 + 36*s13^2*s23^2 - 8*
                s13*s23^3 - 4*s23^4) + s12^6*(48*s13^4 + 50*s13^3*s23 + 26*
                s13^2*s23^2 + 32*s13*s23^3 + 6*s23^4) + 
             s12^5*(80*s13^5 + 138*s13^4*s23 - 17*s13^3*s23^2 - 71*s13^2*
                s23^3 - 4*s13*s23^4 - 6*s23^5) + s12^2*s13^2*s23*
              (132*s13^5 + 420*s13^4*s23 + 256*s13^3*s23^2 - 175*s13^2*
                s23^3 - 132*s13*s23^4 + 11*s23^5) + 2*s12^3*s13*
              (16*s13^6 + 125*s13^5*s23 + 116*s13^4*s23^2 - 130*s13^3*s23^3 - 
               139*s13^2*s23^4 - 7*s13*s23^5 - 4*s23^6) + 
             2*s12^4*(40*s13^6 + 117*s13^5*s23 + s13^4*s23^2 - 111*s13^3*
                s23^3 - 44*s13^2*s23^4 - 13*s13*s23^5 - 3*s23^6))) + 
         (s12 + s13)*(p3q^5*s12^3*(2*s12^7*s23*(s13 + 3*s23) + 
             2*s13^4*s23^3*(5*s13^2 - 33*s13*s23 - 38*s23^2) + 
             s12*s13^3*s23^2*(13*s13^3 - 258*s13^2*s23 - 353*s13*s23^2 - 90*
                s23^3) - 2*s12^6*(8*s13^3 + 12*s13^2*s23 - 3*s13*s23^2 - 9*
                s23^3) - s12^5*(32*s13^4 + 93*s13^3*s23 + 79*s13^2*s23^2 - 18*
                s23^4) + s12^2*s13^2*s23*(3*s13^4 - 341*s13^3*s23 - 656*s13^2*
                s23^2 - 322*s13*s23^3 - 6*s23^4) - s12^3*s13*s23*
              (165*s13^4 + 582*s13^3*s23 + 442*s13^2*s23^2 + 43*s13*s23^3 + 6*
                s23^4) - s12^4*(16*s13^5 + 235*s13^4*s23 + 287*s13^3*s23^2 + 
               92*s13^2*s23^3 + 10*s13*s23^4 - 6*s23^5)) + 
           p2q^5*s13^3*(21*s13^4*s23^2*(s13 + s23)^3 + 7*s12*s13^3*s23*
              (s13 + s23)^2*(s13^2 + s13*s23 - 3*s23^2) - 2*s12^2*s13^2*s23*
              (s13 + s23)^2*(22*s13^2 - 7*s13*s23 + 3*s23^2) + 
             s12^6*s23*(3*s13^2 + 8*s13*s23 + 5*s23^2) - 
             2*s12^5*(8*s13^4 + 30*s13^3*s23 + 23*s13^2*s23^2 - 11*s13*
                s23^3 - 12*s23^4) + s12^4*(-32*s13^5 - 55*s13^4*s23 + 23*
                s13^3*s23^2 + 104*s13^2*s23^3 + 77*s13*s23^4 + 19*s23^5) + 
             s12^3*s13*(-16*s13^5 - 43*s13^4*s23 + 23*s13^3*s23^2 + 148*s13^2*
                s23^3 + 133*s13*s23^4 + 35*s23^5)) + p2q^4*p3q*s13^2*
            (21*s13^4*(s13 - s23)*s23^2*(s13 + s23)^3 - s12^7*s23*
              (8*s13^2 + 27*s13*s23 + 15*s23^2) + 7*s12*s13^3*s23*
              (s13 + s23)^2*(s13^3 - 11*s13^2*s23 - 12*s13*s23^2 + 3*s23^3) + 
             2*s12^6*(32*s13^4 + 103*s13^3*s23 + 68*s13^2*s23^2 - 22*s13*
                s23^3 - 21*s23^4) + s12^5*(112*s13^5 + 180*s13^4*s23 + 146*
                s13^3*s23^2 + 116*s13^2*s23^3 + 3*s13*s23^4 - 39*s23^5) + 
             s12^2*s13^2*s23*(-65*s13^5 + 32*s13^4*s23 + 261*s13^3*s23^2 + 
               158*s13^2*s23^3 + 7*s13*s23^4 + 13*s23^5) + 
             s12^3*s13*(-16*s13^6 + 253*s13^5*s23 + 706*s13^4*s23^2 + 690*
                s13^3*s23^3 + 259*s13^2*s23^4 - 15*s13*s23^5 - 21*s23^6) + 
             s12^4*(32*s13^6 + 291*s13^5*s23 + 473*s13^4*s23^2 + 241*s13^3*
                s23^3 + 42*s13^2*s23^4 - s13*s23^5 - 12*s23^6)) + 
           p2q*p3q^4*s12^2*(-3*s13^4*(15*s13 - 26*s23)*s23^3*(s13 + s23)^2 + 
             2*s12^8*s23*(s13 + 3*s23) + 2*s12^6*s13*(16*s13^3 + 19*s13^2*
                s23 - 24*s13*s23^2 - 33*s23^3) - 2*s12^7*(8*s13^3 + 15*s13^2*
                s23 + 9*s13*s23^2 - 6*s23^3) + s12*s13^3*s23^2*
              (-72*s13^4 + 331*s13^3*s23 + 653*s13^2*s23^2 + 344*s13*s23^3 + 
               94*s23^4) + s12^5*(112*s13^5 + 81*s13^4*s23 + 111*s13^3*
                s23^2 + 66*s13^2*s23^3 - 64*s13*s23^4 - 12*s23^5) + 
             s12^3*s13*s23*(541*s13^5 + 1281*s13^4*s23 + 921*s13^3*s23^2 + 
               249*s13^2*s23^3 + 82*s13*s23^4 + 6*s23^5) + s12^2*s13^2*s23*
              (-13*s13^5 + 806*s13^4*s23 + 1356*s13^3*s23^2 + 812*s13^2*
                s23^3 + 255*s13*s23^4 + 8*s23^5) + s12^4*(64*s13^6 + 565*
                s13^5*s23 + 438*s13^4*s23^2 + 145*s13^3*s23^3 + 158*s13^2*
                s23^4 - 12*s13*s23^5 - 6*s23^6)) + p2q^2*p3q^3*s12*
            (7*s13^5*s23^3*(s13 + s23)^2*(8*s13 + 5*s23) - 
             6*s12^8*s23*(s13^2 + 4*s13*s23 + s23^2) + 
             2*s12^7*(32*s13^4 + 70*s13^3*s23 + 34*s13^2*s23^2 - 25*s13*
                s23^3 - 9*s23^4) + s12*s13^4*s23^2*(122*s13^4 + 66*s13^3*
                s23 - 136*s13^2*s23^2 + 39*s13*s23^3 + 119*s23^4) + 
             s12^3*s13^2*s23*(-638*s13^5 - 856*s13^4*s23 + 67*s13^3*s23^2 + 
               645*s13^2*s23^3 + 303*s13*s23^4 - 21*s23^5) + 
             s12^6*(32*s13^5 + 66*s13^4*s23 + 279*s13^3*s23^2 + 239*s13^2*
                s23^3 - 12*s13*s23^4 - 18*s23^5) + s12^2*s13^3*s23*
              (24*s13^5 - 651*s13^4*s23 - 874*s13^3*s23^2 - 27*s13^2*s23^3 + 
               273*s13*s23^4 + 101*s23^5) + s12^5*(-128*s13^6 + 322*s13^5*
                s23 + 486*s13^4*s23^2 + 277*s13^3*s23^3 + 217*s13^2*s23^4 + 
               30*s13*s23^5 - 6*s23^6) + s12^4*s13*(-96*s13^6 - 260*s13^5*
                s23 + 416*s13^4*s23^2 + 905*s13^3*s23^3 + 340*s13^2*s23^4 + 
               31*s13*s23^5 + 16*s23^6)) - p2q^3*p3q^2*s13*
            (21*s13^5*s23^3*(s13 + s23)^3 + 7*s12*s13^4*s23^2*(s13 + s23)^2*
              (12*s13^2 + s13*s23 - 8*s23^2) - s12^8*s23*(9*s13^2 + 37*s13*
                s23 + 16*s23^2) + 2*s12^7*(48*s13^4 + 129*s13^3*s23 + 73*
                s13^2*s23^2 - 33*s13*s23^3 - 21*s23^4) + s12^2*s13^3*s23*
              (21*s13^5 - 228*s13^4*s23 - 394*s13^3*s23^2 - 32*s13^2*s23^3 + 
               59*s13*s23^4 - 54*s23^5) + s12^6*(128*s13^5 + 205*s13^4*s23 + 
               406*s13^3*s23^2 + 359*s13^2*s23^3 + 26*s13*s23^4 - 36*s23^5) + 
             s12^3*s13^2*s23*(-320*s13^5 - 104*s13^4*s23 + 653*s13^3*s23^2 + 
               620*s13^2*s23^3 + 197*s13*s23^4 + 14*s23^5) + 
             s12^5*(-32*s13^6 + 558*s13^5*s23 + 1014*s13^4*s23^2 + 578*s13^3*
                s23^3 + 252*s13^2*s23^4 + 96*s13*s23^5 - 10*s23^6) + 
             s12^4*s13*(-64*s13^6 + 279*s13^5*s23 + 1199*s13^4*s23^2 + 1410*
                s13^3*s23^3 + 555*s13^2*s23^4 + 62*s13*s23^5 + 41*s23^6))) - 
         p1q*(-(p3q^4*s12^2*(-(s13^5*(12*s13 - 97*s23)*s23^3*(s13 + s23)^2) + 
              2*s12^9*s23*(s13 + 3*s23) - 2*s12^8*(16*s13^3 + 26*s13^2*s23 + 
                9*s13*s23^2 + 3*s23^3) - s12^7*(80*s13^4 + 135*s13^3*s23 + 
                105*s13^2*s23^2 + 104*s13*s23^3 + 54*s23^4) + 
              s12*s13^4*s23^2*(-17*s13^4 + 334*s13^3*s23 + 749*s13^2*s23^2 + 
                675*s13*s23^3 + 277*s23^4) + s12^3*s13^2*s23*(213*s13^5 + 
                894*s13^4*s23 + 1598*s13^3*s23^2 + 1703*s13^2*s23^3 + 
                825*s13*s23^4 + 47*s23^5) - s12^6*(48*s13^5 + 293*s13^4*s23 + 
                113*s13^3*s23^2 - 40*s13^2*s23^3 + 154*s13*s23^4 + 
                66*s23^5) + s12^2*s13^3*s23*(-5*s13^5 + 458*s13^4*s23 + 
                1223*s13^3*s23^2 + 1647*s13^2*s23^3 + 1098*s13*s23^4 + 
                231*s23^5) + 2*s12^5*(8*s13^6 - 88*s13^5*s23 - 25*s13^4*
                 s23^2 + 221*s13^3*s23^3 + 117*s13^2*s23^4 - 39*s13*s23^5 - 
                12*s23^6) + s12^4*s13*(16*s13^6 + 254*s13^5*s23 + 
                401*s13^4*s23^2 + 1045*s13^3*s23^3 + 1046*s13^2*s23^4 + 
                188*s13*s23^5 - 8*s23^6))) + p2q^4*s13^2*
            (-21*s13^5*(s13 - 4*s23)*s23^2*(s13 + s23)^3 + 
             2*s12^8*s23*(5*s13^2 + 11*s13*s23 + 6*s23^2) + 2*s12^2*s13^3*s23*
              (s13 + s23)^2*(51*s13^3 + 8*s13^2*s23 + 48*s13*s23^2 - 51*
                s23^3) - 7*s12*s13^4*s23*(s13 + s23)^2*(s13^3 - 11*s13^2*
                s23 - 31*s13*s23^2 - 4*s23^3) + s12^7*(-16*s13^4 - 53*s13^3*
                s23 - 23*s13^2*s23^2 + 51*s13*s23^3 + 37*s23^4) + 
             s12^6*(-16*s13^5 + 6*s13^4*s23 + 41*s13^3*s23^2 + 52*s13^2*
                s23^3 + 71*s13*s23^4 + 38*s23^5) + s12^3*s13^2*
              (32*s13^6 + 125*s13^5*s23 - 82*s13^4*s23^2 - 602*s13^3*s23^3 - 
               641*s13^2*s23^4 - 245*s13*s23^5 - 31*s23^6) + 
             s12^5*(48*s13^6 + 111*s13^5*s23 - 46*s13^4*s23^2 - 163*s13^3*
                s23^3 + 23*s13^2*s23^4 + 90*s13*s23^5 + 13*s23^6) + 
             s12^4*s13*(80*s13^6 + 58*s13^5*s23 - 350*s13^4*s23^2 - 685*s13^3*
                s23^3 - 428*s13^2*s23^4 - 23*s13*s23^5 + 48*s23^6)) - 
           p2q*p3q^3*s12*(2*s12^10*s23*(s13 + 3*s23) + 7*s13^5*s23^3*
              (s13 + s23)^2*(5*s13^2 - 4*s13*s23 - 3*s23^2) - 
             2*s12^9*(8*s13^3 + 20*s13^2*s23 + 17*s13*s23^2 + 3*s23^3) + 
             s12^8*(80*s13^4 + 221*s13^3*s23 + 105*s13^2*s23^2 - 68*s13*
                s23^3 - 36*s23^4) + s12*s13^4*s23^2*(61*s13^5 - 273*s13^4*
                s23 - 597*s13^3*s23^2 - 202*s13^2*s23^3 - 52*s13*s23^4 - 113*
                s23^5) + s12^7*(288*s13^5 + 539*s13^4*s23 + 831*s13^3*s23^2 + 
               608*s13^2*s23^3 + 52*s13*s23^4 - 12*s23^5) + 
             s12^2*s13^3*s23*(12*s13^6 - 788*s13^5*s23 - 1317*s13^4*s23^2 - 
               708*s13^3*s23^3 - 163*s13^2*s23^4 - 111*s13*s23^5 - 139*
                s23^6) + 2*s12^6*(112*s13^6 + 548*s13^5*s23 + 870*s13^4*
                s23^2 + 722*s13^3*s23^3 + 344*s13^2*s23^4 + 85*s13*s23^5 + 15*
                s23^6) - s12^3*s13^2*s23*(521*s13^6 + 1043*s13^5*s23 + 499*
                s13^4*s23^2 - 517*s13^3*s23^3 - 223*s13^2*s23^4 + 256*s13*
                s23^5 + 37*s23^6) + s12^4*s13*(-48*s13^7 - 227*s13^6*s23 + 
               937*s13^5*s23^2 + 1970*s13^4*s23^3 + 1296*s13^3*s23^4 + 303*
                s13^2*s23^5 - 103*s13*s23^6 + 8*s23^7) + 
             s12^5*(-16*s13^7 + 1126*s13^6*s23 + 2185*s13^5*s23^2 + 2314*
                s13^4*s23^3 + 1270*s13^3*s23^4 + 159*s13^2*s23^5 + 94*s13*
                s23^6 + 18*s23^7)) + p2q^2*p3q^2*(21*s13^6*(s13 - 2*s23)*
              s23^3*(s13 + s23)^3 + 2*s12^10*s23*(2*s13^2 + 9*s13*s23 + 3*
                s23^2) + 7*s12*s13^5*s23^2*(s13 + s23)^2*(9*s13^3 - 26*s13^2*
                s23 - 25*s13*s23^2 + s23^3) - 2*s12^9*(24*s13^4 + 88*s13^3*
                s23 + 79*s13^2*s23^2 + 8*s13*s23^3 - 3*s23^4) + 
             s12^8*(48*s13^5 + 181*s13^4*s23 - 156*s13^3*s23^2 - 375*s13^2*
                s23^3 - 136*s13*s23^4 - 18*s23^5) + s12^7*(384*s13^6 + 619*
                s13^5*s23 + 544*s13^4*s23^2 + 342*s13^3*s23^3 - 43*s13^2*
                s23^4 - 150*s13*s23^5 - 30*s23^6) + s12^2*s13^4*s23*
              (14*s13^6 - 458*s13^5*s23 - 710*s13^4*s23^2 - 223*s13^3*s23^3 - 
               183*s13^2*s23^4 - 37*s13*s23^5 + 161*s23^6) + 
             s12^3*s13^3*s23*(-401*s13^6 - 76*s13^5*s23 + 1067*s13^4*s23^2 + 
               1478*s13^3*s23^3 + 1027*s13^2*s23^4 + 470*s13*s23^5 + 179*
                s23^6) + s12^6*(384*s13^7 + 1196*s13^6*s23 + 1950*s13^5*
                s23^2 + 1567*s13^4*s23^3 + 923*s13^3*s23^4 + 392*s13^2*
                s23^5 - 46*s13*s23^6 - 12*s23^7) + s12^5*s13*(48*s13^7 + 1734*
                s13^6*s23 + 3355*s13^5*s23^2 + 3139*s13^4*s23^3 + 2325*s13^3*
                s23^4 + 1152*s13^2*s23^5 + 263*s13*s23^6 + 2*s23^7) + 
             s12^4*s13^2*(-48*s13^7 + 381*s13^6*s23 + 2374*s13^5*s23^2 + 3847*
                s13^4*s23^3 + 2705*s13^3*s23^4 + 1536*s13^2*s23^5 + 730*s13*
                s23^6 + 41*s23^7)) + p2q^3*p3q*s13*
            (-21*s13^5*s23^2*(s13 + s23)^3*(s13^2 - 4*s13*s23 + 3*s23^2) - 
             2*s12^9*s23*(6*s13^2 + 13*s13*s23 + 5*s23^2) + 
             s12^8*(48*s13^4 + 191*s13^3*s23 + 193*s13^2*s23^2 + 38*s13*
                s23^3 - 12*s23^4) - 7*s12*s13^4*s23*(s13 + s23)^2*
              (s13^4 - 19*s13^3*s23 + 3*s13^2*s23^2 + 39*s13*s23^3 + 4*
                s23^4) + 2*s12^7*(8*s13^5 - 9*s13^4*s23 + 144*s13^3*s23^2 + 
               286*s13^2*s23^3 + 141*s13*s23^4 + 6*s23^5) + 
             s12^6*(-224*s13^6 - 326*s13^5*s23 + 318*s13^4*s23^2 + 904*s13^3*
                s23^3 + 823*s13^2*s23^4 + 347*s13*s23^5 + 20*s23^6) + 
             s12^2*s13^3*s23*(100*s13^6 - 250*s13^5*s23 - 923*s13^4*s23^2 - 
               958*s13^3*s23^3 - 649*s13^2*s23^4 - 182*s13*s23^5 + 82*
                s23^6) + s12^5*(-288*s13^7 - 451*s13^6*s23 + 25*s13^5*s23^2 + 
               995*s13^4*s23^3 + 1478*s13^3*s23^4 + 823*s13^2*s23^5 + 142*s13*
                s23^6 + 6*s23^7) + s12^4*s13*(-80*s13^7 - 909*s13^6*s23 - 
               1280*s13^5*s23^2 + 56*s13^4*s23^3 + 1159*s13^3*s23^4 + 1092*
                s13^2*s23^5 + 441*s13*s23^6 + 13*s23^7) + s12^3*s13^2*
              (16*s13^7 - 456*s13^6*s23 - 1446*s13^5*s23^2 - 1619*s13^4*
                s23^3 - 400*s13^3*s23^4 + 492*s13^2*s23^5 + 321*s13*s23^6 + 
               74*s23^7))) + p1q^3*(p3q^2*(s12 + s23)*
            (-21*s13^5*s23^4*(s13 + s23)^3 - 7*s12*s13^4*s23^3*(s13 + s23)^2*
              (12*s13^2 + 16*s13*s23 + 7*s23^2) + 2*s12^8*(8*s13^4 + 38*s13^3*
                s23 + 53*s13^2*s23^2 + 39*s13*s23^3 + 18*s23^4) - 
             s12^2*s13^3*s23^2*(144*s13^5 + 409*s13^4*s23 + 651*s13^3*s23^2 + 
               716*s13^2*s23^3 + 353*s13*s23^4 + 23*s23^5) + 
             2*s12^7*(24*s13^5 + 67*s13^4*s23 + 39*s13^3*s23^2 + 39*s13^2*
                s23^3 + 71*s13*s23^4 + 24*s23^5) - s12^3*s13^2*s23*
              (74*s13^6 + 297*s13^5*s23 + 797*s13^4*s23^2 + 1173*s13^3*
                s23^3 + 758*s13^2*s23^4 + 114*s13*s23^5 - 45*s23^6) + 
             s12^6*(48*s13^6 + 120*s13^5*s23 - 51*s13^4*s23^2 - 427*s13^3*
                s23^3 - 326*s13^2*s23^4 - 34*s13*s23^5 - 12*s23^6) - 
             s12^4*s13*s23*(68*s13^6 + 399*s13^5*s23 + 1036*s13^4*s23^2 + 
               1190*s13^3*s23^3 + 455*s13^2*s23^4 - 2*s13*s23^5 + 24*s23^6) + 
             s12^5*(16*s13^7 + 68*s13^6*s23 - 269*s13^5*s23^2 - 891*s13^4*
                s23^3 - 821*s13^3*s23^4 - 341*s13^2*s23^5 - 122*s13*s23^6 - 
               24*s23^7)) - p2q^2*(s13 + s23)*(-42*s13^5*(3*s13 - 2*s23)*
              s23^4*(s13 + s23)^2 + 2*s12^8*s23*(22*s13^3 + 32*s13^2*s23 + 12*
                s13*s23^2 + 3*s23^3) - 7*s12*s13^4*s23^3*(39*s13^4 + 71*s13^3*
                s23 - 17*s13^2*s23^2 - 61*s13*s23^3 - 12*s23^4) + 
             s12^2*s13^3*s23^2*(-251*s13^5 - 418*s13^4*s23 + 346*s13^3*
                s23^2 + 876*s13^2*s23^3 + 293*s13*s23^4 - 70*s23^5) + 
             2*s12^7*(-8*s13^5 + 19*s13^4*s23 + 91*s13^3*s23^2 + 92*s13^2*
                s23^3 + 40*s13*s23^4 + 9*s23^5) + s12^3*s13^2*s23*
              (-106*s13^6 - 233*s13^5*s23 + 442*s13^4*s23^2 + 1311*s13^3*
                s23^3 + 585*s13^2*s23^4 - 171*s13*s23^5 - 22*s23^6) + 
             s12^6*(-48*s13^6 - 8*s13^5*s23 + 394*s13^4*s23^2 + 427*s13^3*
                s23^3 + 151*s13^2*s23^4 + 102*s13*s23^5 + 18*s23^6) + 
             s12^5*(-48*s13^7 - 60*s13^6*s23 + 419*s13^5*s23^2 + 941*s13^4*
                s23^3 + 438*s13^3*s23^4 - 4*s13^2*s23^5 + 60*s13*s23^6 + 6*
                s23^7) + s12^4*s13*(-16*s13^7 - 164*s13^6*s23 + 161*s13^5*
                s23^2 + 1161*s13^4*s23^3 + 975*s13^3*s23^4 + 48*s13^2*s23^5 - 
               57*s13*s23^6 + 14*s23^7)) + p2q*p3q*
            (21*s13^4*s23^4*(s13 + s23)^3*(3*s13^2 - 4*s13*s23 + s23^2) + 
             2*s12^9*s23*(14*s13^3 + 30*s13^2*s23 + 25*s13*s23^2 + 9*s23^3) + 
             7*s12*s13^3*s23^3*(s13 + s23)^2*(25*s13^4 - 3*s13^3*s23 - 37*
                s13^2*s23^2 + 7*s13*s23^3 + 4*s23^4) - 
             2*s12^8*(16*s13^5 + 75*s13^4*s23 + 109*s13^3*s23^2 + 20*s13^2*
                s23^3 - 47*s13*s23^4 - 15*s23^5) - s12^7*(96*s13^6 + 446*
                s13^5*s23 + 912*s13^4*s23^2 + 1033*s13^3*s23^3 + 495*s13^2*
                s23^4 + 36*s13*s23^5 + 12*s23^6) + s12^2*s13^2*s23^2*
              (170*s13^7 + 170*s13^6*s23 - 385*s13^5*s23^2 - 624*s13^4*
                s23^3 - 182*s13^3*s23^4 + 211*s13^2*s23^5 + 143*s13*s23^6 - 
               11*s23^7) - 2*s12^6*(48*s13^7 + 298*s13^6*s23 + 886*s13^5*
                s23^2 + 1249*s13^4*s23^3 + 817*s13^3*s23^4 + 252*s13^2*
                s23^5 + 70*s13*s23^6 + 18*s23^7) - s12^4*s23*(150*s13^8 + 972*
                s13^7*s23 + 2328*s13^6*s23^2 + 2826*s13^5*s23^3 + 1697*s13^4*
                s23^4 + 156*s13^3*s23^5 - 241*s13^2*s23^6 - 30*s13*s23^7 - 6*
                s23^8) - s12^5*(32*s13^8 + 536*s13^7*s23 + 1782*s13^6*s23^2 + 
               3255*s13^5*s23^3 + 3206*s13^4*s23^4 + 1129*s13^3*s23^5 - 68*
                s13^2*s23^6 + 38*s13*s23^7 + 6*s23^8) + s12^3*s13*s23*
              (58*s13^8 - 158*s13^7*s23 - 833*s13^6*s23^2 - 1334*s13^5*
                s23^3 - 999*s13^4*s23^4 - 86*s13^3*s23^5 + 241*s13^2*s23^6 + 
               53*s13*s23^7 + 8*s23^8))) - 
         p1q^2*(p3q^3*s12*(21*s13^6*s23^4*(s13 + s23)^2 + 
             2*s12^9*(8*s13^3 + 15*s13^2*s23 + 15*s13*s23^2 + 12*s23^3) + 
             2*s12^8*(8*s13^4 - 29*s13^3*s23 - 37*s13^2*s23^2 + 22*s13*
                s23^3 + 18*s23^4) + s12*s13^4*s23^3*(119*s13^4 + 116*s13^3*
                s23 - 63*s13^2*s23^2 + 23*s13*s23^3 + 83*s23^4) - 
             s12^7*(48*s13^5 + 217*s13^4*s23 + 511*s13^3*s23^2 + 438*s13^2*
                s23^3 + 132*s13*s23^4 + 36*s23^5) + s12^2*s13^3*s23^2*
              (161*s13^5 - 22*s13^4*s23 - 414*s13^3*s23^2 - 181*s13^2*s23^3 + 
               190*s13*s23^4 + 140*s23^5) - s12^4*s13*s23*(206*s13^6 + 1265*
                s13^5*s23 + 2181*s13^4*s23^2 + 1204*s13^3*s23^3 - 155*s13^2*
                s23^4 - 205*s13*s23^5 + 24*s23^6) + s12^3*s13^2*s23*
              (63*s13^6 - 270*s13^5*s23 - 1063*s13^4*s23^2 - 1192*s13^3*
                s23^3 - 108*s13^2*s23^4 + 407*s13*s23^5 + 69*s23^6) - 
             s12^6*(80*s13^6 + 472*s13^5*s23 + 1190*s13^4*s23^2 + 1065*s13^3*
                s23^3 + 467*s13^2*s23^4 + 300*s13*s23^5 + 84*s23^6) - 
             s12^5*(32*s13^7 + 612*s13^6*s23 + 1617*s13^5*s23^2 + 1946*s13^4*
                s23^3 + 740*s13^3*s23^4 - 3*s13^2*s23^5 + 178*s13*s23^6 + 36*
                s23^7)) + p2q^3*s13*(42*s13^5*(2*s13 - 3*s23)*s23^3*
              (s13 + s23)^3 + 7*s12*s13^4*s23^2*(s13 + s23)^2*
              (15*s13^3 - 8*s13^2*s23 - 65*s13*s23^2 - 12*s23^3) + 
             2*s12^8*s23*(19*s13^3 + 43*s13^2*s23 + 27*s13*s23^2 + 3*s23^3) + 
             s12^2*s13^3*s23*(s13 + s23)^2*(65*s13^4 - 214*s13^3*s23 - 405*
                s13^2*s23^2 - 278*s13*s23^3 + 134*s23^4) + 
             s12^7*(-32*s13^5 - 76*s13^4*s23 + 75*s13^3*s23^2 + 258*s13^2*
                s23^3 + 151*s13*s23^4 + 12*s23^5) + s12^6*(-80*s13^6 - 187*
                s13^5*s23 + 75*s13^4*s23^2 + 527*s13^3*s23^3 + 471*s13^2*
                s23^4 + 132*s13*s23^5 + 6*s23^6) + s12^5*s13*(-48*s13^6 - 192*
                s13^5*s23 - 152*s13^4*s23^2 + 619*s13^3*s23^3 + 1183*s13^2*
                s23^4 + 589*s13*s23^5 + 33*s23^6) + s12^4*s13*
              (16*s13^7 - 252*s13^6*s23 - 685*s13^5*s23^2 - 121*s13^4*s23^3 + 
               1121*s13^3*s23^4 + 1207*s13^2*s23^5 + 380*s13*s23^6 - 2*
                s23^7) + s12^3*s13^2*(16*s13^7 - 68*s13^6*s23 - 636*s13^5*
                s23^2 - 1175*s13^4*s23^3 - 370*s13^3*s23^4 + 755*s13^2*
                s23^5 + 592*s13*s23^6 + 90*s23^7)) + p2q^2*p3q*
            (63*s13^5*(s13 - s23)^2*s23^3*(s13 + s23)^3 - 4*s12^9*s23*
              (10*s13^3 + 20*s13^2*s23 + 12*s13*s23^2 + 3*s23^3) + 
             14*s12*s13^4*s23^2*(s13 + s23)^2*(7*s13^4 - 14*s13^3*s23 - 15*
                s13^2*s23^2 + 19*s13*s23^3 + 4*s23^4) + 
             2*s12^8*(40*s13^5 + 170*s13^4*s23 + 162*s13^3*s23^2 - 2*s13^2*
                s23^3 - 53*s13*s23^4 - 15*s23^5) + 2*s12^7*(88*s13^6 + 342*
                s13^5*s23 + 633*s13^4*s23^2 + 631*s13^3*s23^3 + 247*s13^2*
                s23^4 - 20*s13*s23^5 - 9*s23^6) + s12^2*s13^3*s23*
              (49*s13^7 - 309*s13^6*s23 - 551*s13^5*s23^2 + 262*s13^4*s23^3 + 
               967*s13^3*s23^4 + 850*s13^2*s23^5 + 279*s13*s23^6 - 59*
                s23^7) + s12^3*s13^2*s23*(-296*s13^7 - 265*s13^6*s23 + 1039*
                s13^5*s23^2 + 2578*s13^4*s23^3 + 2386*s13^3*s23^4 + 836*s13^2*
                s23^5 - 10*s13*s23^6 - 30*s23^7) + s12^6*(48*s13^7 + 765*
                s13^6*s23 + 2460*s13^5*s23^2 + 3136*s13^4*s23^3 + 2013*s13^3*
                s23^4 + 648*s13^2*s23^5 + 54*s13*s23^6 + 6*s23^7) + 
             s12^5*(-112*s13^8 + 644*s13^7*s23 + 2661*s13^6*s23^2 + 4475*
                s13^5*s23^3 + 4184*s13^4*s23^4 + 1788*s13^3*s23^5 + 204*s13^2*
                s23^6 + 44*s13*s23^7 + 6*s23^8) + s12^4*s13*(-64*s13^8 - 162*
                s13^7*s23 + 1205*s13^6*s23^2 + 3844*s13^5*s23^3 + 4428*s13^4*
                s23^4 + 2685*s13^3*s23^5 + 722*s13^2*s23^6 - 56*s13*s23^7 + 8*
                s23^8)) + p2q*p3q^2*(-21*s13^5*(2*s13 - s23)*s23^4*
              (s13 + s23)^3 + 2*s12^10*s23*(7*s13^2 + 14*s13*s23 + 9*s23^2) - 
             7*s12*s13^4*s23^3*(s13 + s23)^2*(24*s13^3 + 5*s13^2*s23 - 14*s13*
                s23^2 - 4*s23^3) - 2*s12^9*(32*s13^4 + 113*s13^3*s23 + 92*
                s13^2*s23^2 - 9*s23^4) - s12^8*(112*s13^5 + 267*s13^4*s23 + 
               460*s13^3*s23^2 + 401*s13^2*s23^3 + 144*s13*s23^4 + 36*
                s23^5) + s12^7*(48*s13^6 - 96*s13^5*s23 - 340*s13^4*s23^2 + 
               79*s13^3*s23^3 + 227*s13^2*s23^4 - 100*s13*s23^5 - 36*s23^6) + 
             s12^2*s13^3*s23^2*(-240*s13^6 - 114*s13^5*s23 + 424*s13^4*
                s23^2 + 488*s13^3*s23^3 + 569*s13^2*s23^4 + 374*s13*s23^5 - 5*
                s23^6) + s12^3*s13^2*s23*(-100*s13^7 + 549*s13^6*s23 + 1512*
                s13^5*s23^2 + 1833*s13^4*s23^3 + 1888*s13^3*s23^4 + 1232*
                s13^2*s23^5 + 280*s13*s23^6 - 34*s23^7) + s12^4*s13*s23*
              (505*s13^7 + 1891*s13^6*s23 + 3046*s13^5*s23^2 + 3124*s13^4*
                s23^3 + 2675*s13^3*s23^4 + 1176*s13^2*s23^5 + 9*s13*s23^6 + 
               16*s23^7) + s12^6*(176*s13^7 + 340*s13^6*s23 + 701*s13^5*
                s23^2 + 1019*s13^4*s23^3 + 1328*s13^3*s23^4 + 892*s13^2*
                s23^5 + 108*s13*s23^6 + 18*s23^7) + s12^5*(80*s13^8 + 1014*
                s13^7*s23 + 1895*s13^6*s23^2 + 2385*s13^5*s23^3 + 2903*s13^4*
                s23^4 + 1906*s13^3*s23^5 + 505*s13^2*s23^6 + 108*s13*s23^7 + 
               18*s23^8))))/(18*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*
         (s12 + s13)^2*s23^2*(s12 + s23)*(s13 + s23)*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((ep*(2*p1q*p2q*s13^2*s23*(-5*s12 + s13 + s23) + p1q^2*(s12 - s13)*s23^2*
           (s12 + s13 + s23) - p2q^2*s13^2*(-7*s12^2 - 6*s12*s13 + s13^2 + 
            5*s12*s23 + s13*s23) + p3q^2*s12*(s12^3 + 4*s13^2*(2*s13 - s23) + 
            s12^2*(2*s13 + s23) + s12*s13*(9*s13 + s23)) - 
          2*p3q*s12*(4*p2q*s13^2*(-2*s12 - 2*s13 + s23) + 
            p1q*s23*(s12^2 + 6*s13^2 + s12*(s13 + s23)))))/
        (36*(p2q + p3q)*(p1q + p2q + p3q)*s13^2) + 
       (p1q^3*s23^2*(s13*s23^2*(s13 + s23) + s12^2*(32*s13^2 + 16*s13*s23 + 
             5*s23^2) + s12*(32*s13^3 + 48*s13^2*s23 + 22*s13*s23^2 + 
             5*s23^3)) - (p2q + p3q)*(p3q^2*s12*(5*s12^4*s23 + 16*s13^4*s23 + 
             s12*s13^2*s23*(s13 + s23) + s12^2*s13*(-32*s13^2 + 7*s13*s23 - 
               10*s23^2) + s12^3*(-32*s13^2 - 5*s13*s23 + 5*s23^2)) - 
           2*p2q*p3q*s12*s13*(5*s12^3*s23 + s13^2*s23*(-15*s13 + s23) + 
             s12^2*(-32*s13^2 - 37*s13*s23 + 5*s23^2) + 
             s12*s13*(-32*s13^2 - 25*s13*s23 + 6*s23^2)) + 
           p2q^2*s13^2*(21*s12^3*s23 + s13^2*s23*(s13 + s23) - 
             s12*s13*(32*s13^2 + 25*s13*s23 + 10*s23^2) - 
             s12^2*(32*s13^2 + 37*s13*s23 + 27*s23^2))) + 
         p1q*(p2q^2*s13*(3*s13^2*s23^2*(s13 + s23) - 6*s12^3*s23*
              (8*s13 + s23) + s12*s13*(32*s13^3 - 32*s13^2*s23 - 44*s13*
                s23^2 - 15*s23^3) + s12^2*(32*s13^3 + 16*s13^2*s23 + 27*s13*
                s23^2 - 6*s23^3)) + 2*p2q*p3q*(s13^3*s23^2*(s13 + s23) + 
             s12^4*s23*(8*s13 + 5*s23) - s12*s13^2*s23*(64*s13^2 + 49*s13*
                s23 + 18*s23^2) + s12^3*(-32*s13^3 - 80*s13^2*s23 + 3*s13*
                s23^2 + 5*s23^3) - 2*s12^2*s13*(16*s13^3 + 28*s13^2*s23 + 10*
                s13*s23^2 + 5*s23^3)) + p3q^2*s12*
            (-(s12*s13*s23^2*(17*s13 + 19*s23)) + 2*s13^2*s23*
              (-16*s13^2 + s13*s23 + s23^2) + s12^3*(32*s13^2 + 16*s13*s23 + 
               15*s23^2) + s12^2*(32*s13^3 - 48*s13^2*s23 + 12*s13*s23^2 + 15*
                s23^3))) - p1q^2*s23*(p2q*(3*s13^2*s23^2*(s13 + s23) + 
             s12*s13^2*(64*s13^2 + 48*s13*s23 + 3*s23^2) + 
             s12^3*(32*s13^2 + 16*s13*s23 + 5*s23^2) + 
             s12^2*(32*s13^3 + 21*s13*s23^2 + 5*s23^3)) + 
           p3q*(s13^2*s23^2*(s13 + s23) + s12^3*(64*s13^2 + 32*s13*s23 + 15*
                s23^2) + s12*s13*(32*s13^3 - 23*s13*s23^2 - 8*s23^3) + 
             s12^2*(32*s13^3 + 32*s13^2*s23 + 39*s13*s23^2 + 15*s23^3))))/
        (72*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) + ((3*s12 - s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23))*den[-1 + 2*ep])/(72*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + 
     ((7*ep*(-(p1q^2*(s12 - s13)*s23^2*(s12 + s13 + s23)) + 
          2*p3q*s12^2*(4*p2q*s13*(2*s12 + 2*s13 - s23) + 
            p1q*s23*(s12 - 5*s13 + s23)) - 2*p1q*p2q*s13*s23*
           (6*s12^2 + s12*s13 + s13*(s13 + s23)) + p2q^2*s13*
           (8*s12^3 + s12^2*(9*s13 - 4*s23) + s13^2*(s13 + s23) + 
            s12*s13*(2*s13 + s23)) - p3q^2*s12^2*(s12^2 + 
            s12*(-6*s13 + s23) + s13*(-7*s13 + 5*s23))))/
        (72*(p2q + p3q)*(p1q + p2q + p3q)*s12^2) - 
       (7*(-(p1q^3*s23^2*(32*s12^3*s13 + 5*s13*s23^2*(s13 + s23) + 
             s12*s23*(16*s13^2 + 22*s13*s23 + s23^2) + 
             s12^2*(32*s13^2 + 48*s13*s23 + s23^2))) + 
          (p2q + p3q)*(2*p2q*p3q*s12*s13*(s12*s13*(37*s13 - 6*s23)*s23 - 
              5*s13^2*s23*(s13 + s23) + s12^3*(32*s13 + 15*s23) + 
              s12^2*(32*s13^2 + 25*s13*s23 - s23^2)) + p3q^2*s12^2*
             (3*s13^2*(7*s13 - 9*s23)*s23 + s12^3*(-32*s13 + s23) - 
              s12*s13*s23*(37*s13 + 10*s23) + s12^2*(-32*s13^2 - 25*s13*s23 + 
                s23^2)) + p2q^2*s13*(16*s12^4*s23 + s12^3*s13*(-32*s13 + 
                s23) + 5*s13^3*s23*(s13 + s23) - 5*s12*s13^2*s23*(s13 + 
                2*s23) + s12^2*s13*(-32*s13^2 + 7*s13*s23 + s23^2))) + 
          p1q*(p3q^2*s12*(-32*s12^4*s13 + 6*s13^2*s23^2*(s13 + s23) + 
              s12^3*(-32*s13^2 + 32*s13*s23 - 3*s23^2) + s12^2*s23*(
                -16*s13^2 + 44*s13*s23 - 3*s23^2) + 3*s12*s13*s23*(16*s13^2 - 
                9*s13*s23 + 5*s23^2)) + 2*p2q*p3q*(-5*s13^3*s23^2*(s13 + 
                s23) + s12^4*(32*s13^2 + 64*s13*s23 - s23^2) + 
              2*s12^2*s13*s23*(40*s13^2 + 10*s13*s23 + 9*s23^2) + 
              s12*s13^2*s23*(-8*s13^2 - 3*s13*s23 + 10*s23^2) + 
              s12^3*(32*s13^3 + 56*s13^2*s23 + 49*s13*s23^2 - s23^3)) - 
            p2q^2*s13*(-32*s12^4*s23 + 15*s13^2*s23^2*(s13 + s23) + 
              s12*s13*s23*(16*s13^2 + 12*s13*s23 - 19*s23^2) + 
              2*s12^3*(16*s13^2 + s23^2) + s12^2*(32*s13^3 - 48*s13^2*s23 - 
                17*s13*s23^2 + 2*s23^3))) + p1q^2*s23*
           (p2q*(32*s12^4*s13 + 15*s13^2*s23^2*(s13 + s23) + s12*s13*s23*(
                32*s13^2 + 39*s13*s23 - 8*s23^2) + s12^3*(32*s13^2 + s23^2) + 
              s12^2*(64*s13^3 + 32*s13^2*s23 - 23*s13*s23^2 + s23^3)) + 
            p3q*(64*s12^4*s13 + 5*s13^2*s23^2*(s13 + s23) + s12*s13^2*s23*(
                16*s13 + 21*s23) + s12^3*(32*s13^2 + 48*s13*s23 + 3*s23^2) + 
              s12^2*(32*s13^3 + 3*s13*s23^2 + 3*s23^3)))))/
        (144*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s23*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)) - (7*(s12 - 3*s13)*(s12 + s13 + s23)*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23))*den[-1 + 2*ep])/(144*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*
        DS[k + p1 + p2 + p3]] + 
     ((-7*ep*p2q*(s12 + s13 + s23)*(3*p2q*s13 + p3q*(s12 + 4*s13) - p1q*s23))/
        (36*(p1q + p2q + p3q)*s13) - (7*p2q*(s12 + s13 + s23)*
         (2*p1q^3*(p2q + p3q)*s23^2 + p1q^2*s23*
           (-2*p2q*p3q*(s12 + s13 - 3*s23) + p2q^2*(-2*s12 - 4*s13 + s23) + 
            p3q^2*(-4*s12 - 2*s13 + s23)) - p1q*(p2q + p3q)*
           (p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)^2*(p1q + p2q + p3q)*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*Eik[k]] + 
     (-1/18*(ep*p3q*(s12 + s13 + s23)*(3*p3q*s12 + p2q*(4*s12 + s13) - 
           p1q*s23))/((p1q + p2q + p3q)*s12) - 
       (2*p3q*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2 + 
          p1q^2*s23*(-2*p2q*p3q*(s12 + s13 - 3*s23) + 
            p2q^2*(-2*s12 - 4*s13 + s23) + p3q^2*(-4*s12 - 2*s13 + s23)) - 
          p1q*(p2q + p3q)*(p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)^2*(p1q + p2q + p3q)*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k]] + 
     ((ep*p1q*(s12 + s13 + s23)*(p2q*(s12 + s13 - s23) + 
          p3q*(s12 + s13 - s23) - 2*p1q*s23))/(9*(p1q + p2q + p3q)*s23) + 
       (p1q*(s12 + s13 + s23)*(2*p1q^3*s23^2*(s12 + s13 + s23) - 
          p1q^2*s23*(p3q*(4*s12^2 + 2*s12*s13 + 2*s13^2 + s12*s23 - s13*s23 - 
              s23^2) + p2q*(2*s12^2 + 2*s12*s13 + 4*s13^2 - s12*s23 + 
              s13*s23 - s23^2)) - (p2q + p3q)*
           (-(p3q^2*(2*s12^3 + 2*s12^2*s13 + s12*s13*s23 + s13*s23*
                (-s13 + s23))) + p2q*p3q*(s13*(3*s13 - s23)*s23 + 
              s12^2*(4*s13 + 3*s23) + s12*(4*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*(-2*s13^3 + s12^2*s23 - s12*(2*s13^2 + s13*s23 + s23^2))) + 
          p1q*(p3q^2*(2*s12^3 + s12^2*(2*s13 - 3*s23) + s12*(s13 - s23)*s23 + 
              2*s13*s23*(-s13 + s23)) + p2q^2*(-2*s12^2*s23 + 
              s13*(2*s13^2 - 3*s13*s23 - s23^2) + s12*(2*s13^2 + s13*s23 + 
                2*s23^2)) - p2q*p3q*(s12^2*(4*s13 + 9*s23) + s23*(9*s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 6*s13*s23 + 
                3*s23^2)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((7*ep*p2q*(s12 + s13 + s23)*(4*p2q^2*s13^2*(s12 + s13 - s23) - 
          p1q^2*s23*(s12^2 - 6*s12*s13 + s13^2 + 2*s12*s23 - 6*s13*s23 + 
            s23^2) + p2q*p3q*s13*(-5*s12^2 + 3*s13^2 - 10*s13*s23 + 3*s23^2 - 
            2*s12*(s13 + s23)) + p3q^2*(s12^3 - 2*s12^2*(s13 - s23) + 
            4*s13*s23*(-s13 + s23) + s12*(-3*s13^2 + 2*s13*s23 + s23^2)) + 
          p1q*(p2q*s13*(-3*s12^2 - 2*s12*s13 + s13^2 + 2*s12*s23 - 
              10*s13*s23 + 5*s23^2) + p3q*(s12^3 + s12^2*(-2*s13 + s23) - 
              s23*(5*s13^2 - 10*s13*s23 + s23^2) - s12*(3*s13^2 - 8*s13*s23 + 
                s23^2)))))/(36*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (7*p2q*(s12 + s13 + s23)*(-2*p1q^3*s23^2*(s12 + s13 + s23) + 
          p1q^2*s23*(p3q*(4*s12^2 + 2*s12*s13 + 2*s13^2 + s12*s23 - s13*s23 - 
              s23^2) + p2q*(2*s12^2 + 2*s12*s13 + 4*s13^2 - s12*s23 + 
              s13*s23 - s23^2)) + (p2q + p3q)*
           (-(p3q^2*(2*s12^3 + 2*s12^2*s13 + s12*s13*s23 + s13*s23*
                (-s13 + s23))) + p2q*p3q*(s13*(3*s13 - s23)*s23 + 
              s12^2*(4*s13 + 3*s23) + s12*(4*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*(-2*s13^3 + s12^2*s23 - s12*(2*s13^2 + s13*s23 + s23^2))) + 
          p1q*(p3q^2*(-2*s12^3 + 2*s13*(s13 - s23)*s23 + s12*s23*(-s13 + 
                s23) + s12^2*(-2*s13 + 3*s23)) + p2q^2*(2*s12^2*s23 + 
              s13*(-2*s13^2 + 3*s13*s23 + s23^2) - s12*(2*s13^2 + s13*s23 + 
                2*s23^2)) + p2q*p3q*(s12^2*(4*s13 + 9*s23) + s23*(9*s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 6*s13*s23 + 
                3*s23^2)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep*p3q*(s12 + s13 + s23)*(4*p3q^2*s12^2*(s12 + s13 - s23) - 
          p1q^2*s23*(s12^2 - 6*s12*(s13 + s23) + (s13 + s23)^2) + 
          p2q*p3q*s12*(3*s12^2 - 5*s13^2 - 2*s13*s23 + 3*s23^2 - 
            2*s12*(s13 + 5*s23)) + p2q^2*(s13*(s13 + s23)^2 - 
            s12^2*(3*s13 + 4*s23) + s12*(-2*s13^2 + 2*s13*s23 + 4*s23^2)) + 
          p1q*(p3q*s12*(s12^2 - 3*s13^2 + 2*s13*s23 + 5*s23^2 - 
              2*s12*(s13 + 5*s23)) + p2q*((s13 - s23)*(s13 + s23)^2 - 
              s12^2*(3*s13 + 5*s23) - 2*s12*(s13^2 - 4*s13*s23 - 5*s23^2)))))/
        (18*(p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + (p1q + p2q)*
           (s13 + s23))) - (2*p3q*(s12 + s13 + s23)*
         (2*p1q^3*s23^2*(s12 + s13 + s23) - p1q^2*s23*
           (p3q*(4*s12^2 + 2*s12*s13 + 2*s13^2 + s12*s23 - s13*s23 - s23^2) + 
            p2q*(2*s12^2 + 2*s12*s13 + 4*s13^2 - s12*s23 + s13*s23 - 
              s23^2)) - (p2q + p3q)*(-(p3q^2*(2*s12^3 + 2*s12^2*s13 + s12*s13*
                s23 + s13*s23*(-s13 + s23))) + p2q*p3q*
             (s13*(3*s13 - s23)*s23 + s12^2*(4*s13 + 3*s23) + 
              s12*(4*s13^2 + 2*s13*s23 - s23^2)) + 
            p2q^2*(-2*s13^3 + s12^2*s23 - s12*(2*s13^2 + s13*s23 + s23^2))) + 
          p1q*(p3q^2*(2*s12^3 + s12^2*(2*s13 - 3*s23) + s12*(s13 - s23)*s23 + 
              2*s13*s23*(-s13 + s23)) + p2q^2*(-2*s12^2*s23 + 
              s13*(2*s13^2 - 3*s13*s23 - s23^2) + s12*(2*s13^2 + s13*s23 + 
                2*s23^2)) - p2q*p3q*(s12^2*(4*s13 + 9*s23) + s23*(9*s13^2 + 
                3*s13*s23 + 2*s23^2) + s12*(4*s13^2 + 6*s13*s23 + 
                3*s23^2)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p2 + p3]*Eik[k]] - 
     (ep*(s12 + s13 + s23)*(p2q^2*s13*(11*s12^2 + 13*s12*s13 + 2*s13^2) + 
        p3q^2*s12*(7*s12^2 + 23*s12*s13 + 16*s13^2) + 
        p2q*p3q*(7*s12^3 + 34*s12^2*s13 + 29*s12*s13^2 + 2*s13^3) - 
        p1q*p3q*(14*s12^2 + 25*s12*s13 + 2*s13^2)*s23 - 
        p1q*p2q*(7*s12^2 + 20*s12*s13 + 4*s13^2)*s23 + p1q^2*(7*s12 + 2*s13)*
         s23^2)*Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]])/
      (36*(p1q + p2q + p3q)*s12*s13*s23) + 
     ((ep*(p2q + p3q)^2*(s12 + s13 + s23))/(9*(p1q + p2q + p3q)*s23) + 
       ((s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2 + 
          p1q^2*s23*(-2*p2q*p3q*(s12 + s13 - 3*s23) + 
            p2q^2*(-2*s12 - 4*s13 + s23) + p3q^2*(-4*s12 - 2*s13 + s23)) - 
          p1q*(p2q + p3q)*(p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2 + p3]*Eik[k - p1]] - 
     (7*ep*(p1q + p3q)^2*(s12 + s13 + s23)*(p2q*s13*(s12 + s13 - s23) + 
        p1q*s23*(s12 - s13 + s23) - p3q*(s12^2 + 2*s13*s23 + 
          s12*(s13 + s23)))*Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]])/
      (36*(p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
        p3q*(s12 + s23))) + ((-7*ep*(p2q + p3q)^2*s13*(s12 + s13 + s23))/
        (18*(p1q + p2q + p3q)*s23) - (7*s13*(s12 + s13 + s23)*
         (2*p1q^3*(p2q + p3q)*s23^2 + p1q^2*s23*
           (-2*p2q*p3q*(s12 + s13 - 3*s23) + p2q^2*(-2*s12 - 4*s13 + s23) + 
            p3q^2*(-4*s12 - 2*s13 + s23)) - p1q*(p2q + p3q)*
           (p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k - p2]] + 
     (ep*(p1q + p2q)^2*(s12 + s13 + s23)*(-(p3q*s12*(s12 + s13 - s23)) + 
        p1q*(s12 - s13 - s23)*s23 + p2q*s13*(s13 + s23) + 
        p2q*s12*(s13 + 2*s23))*Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]])/
      (18*(p1q + p2q + p3q)*s12*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) + 
     (-1/9*(ep*(p2q + p3q)^2*s12*(s12 + s13 + s23))/((p1q + p2q + p3q)*s23) - 
       (2*s12*(s12 + s13 + s23)*(2*p1q^3*(p2q + p3q)*s23^2 + 
          p1q^2*s23*(-2*p2q*p3q*(s12 + s13 - 3*s23) + 
            p2q^2*(-2*s12 - 4*s13 + s23) + p3q^2*(-4*s12 - 2*s13 + s23)) - 
          p1q*(p2q + p3q)*(p3q^2*(-2*s12^2 + 3*s12*s23 + 2*s13*s23) + 
            p2q^2*(-2*s13^2 + 2*s12*s23 + 3*s13*s23) + 
            p2q*p3q*(4*s12*s13 + 3*s12*s23 + 3*s13*s23 - 2*s23^2)) - 
          (p2q + p3q)^2*(p2q^2*(-2*s13^2 + s12*s23) + 
            p3q^2*(-2*s12^2 + s13*s23) + p2q*p3q*(s13*s23 + s12*(4*s13 + 
                s23)))))/(9*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((7*ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(18*(p1q + p2q + p3q)*s13*s23) + 
       (14*ep*(s12 + s13 + s23)*(-(p3q*(2*s12 + s23)) + p2q*(2*s13 + s23))*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(9*(p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((ep^2*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(9*(p1q + p2q + p3q)*s12*s23) + 
       (4*ep*(s12 + s13 + s23)*(p3q*(2*s12 + s23) - p2q*(2*s13 + s23))*
         (p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 2*p3q*s12*
           (p2q*s13 + p1q*s23)))/(9*(p2q + p3q)*s23^2*(p2q*(s12 + s13) + 
          p3q*(s12 + s13) - p1q*s23)))*Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep]
