P0Pol = (ep^2*(2*p2q*s13*(s12 + s13 - s23) + 2*p1q*s23*(s12 - s13 + s23) - 
        2*p3q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))/
      (9*(p1q + p2q + p3q)*s13*s23) + 
     (2*ep*(-(p2q^2*p3q*(s12^2 + 2*s13*(s13 - 3*s23) + s12*(s13 - s23))) + 
        p2q^3*s13*(s12 + s13 + s23) + p1q^3*s23*(s12 + s13 + s23) - 
        p3q^3*(3*s12^2 + 3*s13^2 - 2*s13*s23 + 3*s23^2 + 4*s12*(s13 + s23)) - 
        p2q*p3q^2*(3*s12^2 + 5*s13^2 - 8*s13*s23 + 3*s23^2 + 
          2*s12*(2*s13 + s23)) - p1q^2*(p2q*(-(s12*s13) + s13^2 + 2*s12*s23 - 
            3*s13*s23 + 4*s23^2) + p3q*(s12^2 + 2*s23*(-3*s13 + s23) + 
            s12*(-s13 + s23))) - p1q*(p2q^2*(2*s12*s13 + 4*s13^2 - s12*s23 - 
            3*s13*s23 + s23^2) + p2q*p3q*(s12^2 + 7*s13^2 - 10*s13*s23 + 
            7*s23^2 + 2*s12*(s13 + s23)) + p3q^2*(3*s12^2 + 3*s13^2 - 
            8*s13*s23 + 5*s23^2 + 2*s12*(s13 + 2*s23)))))/
      (9*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) + 
     (2*(p1q^4*(p2q + p3q)*s13*(6*s13 - s23)*s23*(s12 + s13 + s23) - 
        p3q*(p2q + p3q)*(p2q^3*s13*(s13 - 6*s23)*s23*(s12 + s13 + s23) - 
          p2q*p3q^2*(2*s12^2*(s13 - 6*s23)*s23 + s12*s13*(12*s13^2 + 
              4*s13*s23 - 5*s23^2) + 3*s13*s23*(2*s13^2 + s13*s23 + 
              3*s23^2)) + p3q^3*(3*s12*s13*s23*(s13 + s23) - 
            3*s13*s23*(s13^2 + s23^2) + s12^2*(6*s13^2 - 2*s13*s23 + 
              6*s23^2)) + p2q^2*p3q*(6*s13^4 + 3*s13^3*s23 + 6*s12^2*s23^2 - 
            s13^2*s23*(2*s12 + 9*s23) - s13*s23*(s12^2 + 5*s12*s23 + 
              12*s23^2))) + p1q^3*(p2q^2*(-6*s13^4 + s13^3*s23 + 
            s13*(s12 - 3*s23)*s23^2 - 6*s23^4 + s13^2*s23*(5*s12 + 4*s23)) + 
          p2q*p3q*(s12^2*s13*s23 + 2*s12*s13*(6*s13^2 + 14*s13*s23 + s23^2) + 
            s23*(31*s13^3 + 24*s13^2*s23 - 7*s13*s23^2 - 12*s23^3)) + 
          p3q^2*(s12^2*s13*(-6*s13 + s23) + s12*s13*s23*(11*s13 + s23) + 
            2*s23*(9*s13^3 + 7*s13^2*s23 - 2*s13*s23^2 - 3*s23^3))) + 
        p1q^2*(p2q^3*(-6*s13^4 - 3*s13^3*s23 - 6*s23^4 + 
            s13*s23^2*(5*s12 + s23) + s13^2*s23*(s12 + 4*s23)) + 
          3*p3q^3*(s12^2*s13*(-6*s13 + s23) + 2*s12*s23^2*(s13 + 2*s23) + 
            s23*(7*s13^3 + 4*s13^2*s23 + s13*s23^2 - 2*s23^3)) + 
          2*p2q^2*p3q*(-9*s13^4 + s12^2*s13*s23 + 3*s13^3*s23 + 
            9*s13^2*s23^2 + 3*s13*s23^3 - 9*s23^4 + 
            s12*(6*s13^3 + 8*s13^2*s23 + 8*s13*s23^2 + 6*s23^3)) + 
          p2q*p3q^2*(s12^2*s13*(-6*s13 + 5*s23) + 2*s23*(27*s13^3 + 
              19*s13^2*s23 + 4*s13*s23^2 - 9*s23^3) + 
            s12*(36*s13^3 + 39*s13^2*s23 + 17*s13*s23^2 + 24*s23^3))) + 
        p1q*(-(p2q^4*s13*(s13 - 6*s23)*s23*(s12 + s13 + s23)) + 
          p3q^4*(-2*s12^2*(9*s13^2 - 2*s13*s23 + 3*s23^2) + 
            3*s13*s23*(4*s13^2 + s13*s23 + 3*s23^2) + 
            s12*s23*(-8*s13^2 + s13*s23 + 12*s23^2)) + 
          p2q^3*p3q*(-12*s13^4 - 7*s13^3*s23 + 12*s12*s23^3 + 
            2*s13^2*s23*(s12 + 12*s23) + s13*s23*(s12^2 + 28*s12*s23 + 
              31*s23^2)) + 2*p2q*p3q^3*(s12^2*(-6*s13^2 + 4*s13*s23 - 
              6*s23^2) + s13*s23*(19*s13^2 + 14*s13*s23 + 19*s23^2) + 
            9*s12*(2*s13^3 + s13^2*s23 + s13*s23^2 + 2*s23^3)) + 
          p2q^2*p3q^2*(s12^2*(5*s13 - 6*s23)*s23 + 
            2*s13*(-9*s13^3 + 4*s13^2*s23 + 19*s13*s23^2 + 27*s23^3) + 
            s12*(24*s13^3 + 17*s13^2*s23 + 39*s13*s23^2 + 36*s23^3)))))/
      (9*(p1q + p3q)^2*(p2q + p3q)^2*(p1q + p2q + p3q)*s13^2*s23^2)
 
P0Avg = (ep^2*(2*p2q*s13*(s12 + s13 - s23) + 2*p1q*s23*(s12 - s13 + s23) - 
        2*p3q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))/
      (9*(p1q + p2q + p3q)*s13*s23) + 
     (2*ep*(-(p2q^2*p3q*(s12^2 + 2*s13*(s13 - 3*s23) + s12*(s13 - s23))) + 
        p2q^3*s13*(s12 + s13 + s23) + p1q^3*s23*(s12 + s13 + s23) - 
        p3q^3*(3*s12^2 + 3*s13^2 - 2*s13*s23 + 3*s23^2 + 4*s12*(s13 + s23)) - 
        p2q*p3q^2*(3*s12^2 + 5*s13^2 - 8*s13*s23 + 3*s23^2 + 
          2*s12*(2*s13 + s23)) - p1q^2*(p2q*(-(s12*s13) + s13^2 + 2*s12*s23 - 
            3*s13*s23 + 4*s23^2) + p3q*(s12^2 + 2*s23*(-3*s13 + s23) + 
            s12*(-s13 + s23))) - p1q*(p2q^2*(2*s12*s13 + 4*s13^2 - s12*s23 - 
            3*s13*s23 + s23^2) + p2q*p3q*(s12^2 + 7*s13^2 - 10*s13*s23 + 
            7*s23^2 + 2*s12*(s13 + s23)) + p3q^2*(3*s12^2 + 3*s13^2 - 
            8*s13*s23 + 5*s23^2 + 2*s12*(s13 + 2*s23)))))/
      (9*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) + 
     (2*(p1q^4*(p2q + p3q)*s13*(6*s13 - s23)*s23*(s12 + s13 + s23) - 
        p3q*(p2q + p3q)*(p2q^3*s13*(s13 - 6*s23)*s23*(s12 + s13 + s23) - 
          p2q*p3q^2*(2*s12^2*(s13 - 6*s23)*s23 + s12*s13*(12*s13^2 + 
              4*s13*s23 - 5*s23^2) + 3*s13*s23*(2*s13^2 + s13*s23 + 
              3*s23^2)) + p3q^3*(3*s12*s13*s23*(s13 + s23) - 
            3*s13*s23*(s13^2 + s23^2) + s12^2*(6*s13^2 - 2*s13*s23 + 
              6*s23^2)) + p2q^2*p3q*(6*s13^4 + 3*s13^3*s23 + 6*s12^2*s23^2 - 
            s13^2*s23*(2*s12 + 9*s23) - s13*s23*(s12^2 + 5*s12*s23 + 
              12*s23^2))) + p1q^3*(p2q^2*(-6*s13^4 + s13^3*s23 + 
            s13*(s12 - 3*s23)*s23^2 - 6*s23^4 + s13^2*s23*(5*s12 + 4*s23)) + 
          p2q*p3q*(s12^2*s13*s23 + 2*s12*s13*(6*s13^2 + 14*s13*s23 + s23^2) + 
            s23*(31*s13^3 + 24*s13^2*s23 - 7*s13*s23^2 - 12*s23^3)) + 
          p3q^2*(s12^2*s13*(-6*s13 + s23) + s12*s13*s23*(11*s13 + s23) + 
            2*s23*(9*s13^3 + 7*s13^2*s23 - 2*s13*s23^2 - 3*s23^3))) + 
        p1q^2*(p2q^3*(-6*s13^4 - 3*s13^3*s23 - 6*s23^4 + 
            s13*s23^2*(5*s12 + s23) + s13^2*s23*(s12 + 4*s23)) + 
          3*p3q^3*(s12^2*s13*(-6*s13 + s23) + 2*s12*s23^2*(s13 + 2*s23) + 
            s23*(7*s13^3 + 4*s13^2*s23 + s13*s23^2 - 2*s23^3)) + 
          2*p2q^2*p3q*(-9*s13^4 + s12^2*s13*s23 + 3*s13^3*s23 + 
            9*s13^2*s23^2 + 3*s13*s23^3 - 9*s23^4 + 
            s12*(6*s13^3 + 8*s13^2*s23 + 8*s13*s23^2 + 6*s23^3)) + 
          p2q*p3q^2*(s12^2*s13*(-6*s13 + 5*s23) + 2*s23*(27*s13^3 + 
              19*s13^2*s23 + 4*s13*s23^2 - 9*s23^3) + 
            s12*(36*s13^3 + 39*s13^2*s23 + 17*s13*s23^2 + 24*s23^3))) + 
        p1q*(-(p2q^4*s13*(s13 - 6*s23)*s23*(s12 + s13 + s23)) + 
          p3q^4*(-2*s12^2*(9*s13^2 - 2*s13*s23 + 3*s23^2) + 
            3*s13*s23*(4*s13^2 + s13*s23 + 3*s23^2) + 
            s12*s23*(-8*s13^2 + s13*s23 + 12*s23^2)) + 
          p2q^3*p3q*(-12*s13^4 - 7*s13^3*s23 + 12*s12*s23^3 + 
            2*s13^2*s23*(s12 + 12*s23) + s13*s23*(s12^2 + 28*s12*s23 + 
              31*s23^2)) + 2*p2q*p3q^3*(s12^2*(-6*s13^2 + 4*s13*s23 - 
              6*s23^2) + s13*s23*(19*s13^2 + 14*s13*s23 + 19*s23^2) + 
            9*s12*(2*s13^3 + s13^2*s23 + s13*s23^2 + 2*s23^3)) + 
          p2q^2*p3q^2*(s12^2*(5*s13 - 6*s23)*s23 + 
            2*s13*(-9*s13^3 + 4*s13^2*s23 + 19*s13*s23^2 + 27*s23^3) + 
            s12*(24*s13^3 + 17*s13^2*s23 + 39*s13*s23^2 + 36*s23^3)))))/
      (9*(p1q + p3q)^2*(p2q + p3q)^2*(p1q + p2q + p3q)*s13^2*s23^2)
 
P1Pol = ((10*ep^3*(p2q*s13*(2*s13^4 - s13^3*s23 + s13*s23^3 - 2*s23^4 + 
            s12*(2*s13^3 + s13^2*s23 - s13*s23^2 + 2*s23^3)) + 
          p1q*s23*(-2*s13^4 + s13^3*s23 - s13*s23^3 + 2*s23^4 + 
            s12*(2*s13^3 - s13^2*s23 + s13*s23^2 + 2*s23^3)) - 
          p3q*(4*s13*s23*(s13^3 + s13^2*s23 + s13*s23^2 + s23^3) + 
            s12^2*(2*s13^3 + s13^2*s23 + s13*s23^2 + 2*s23^3) + 
            s12*(2*s13^4 + 3*s13^3*s23 + 6*s13^2*s23^2 + 3*s13*s23^3 + 
              2*s23^4))))/(27*(p1q + p2q + p3q)*s13^2*s23^2*(s13 + s23)) + 
       (2*(p1q^3*s23^2*(s12 + s13 + s23)*(2*s13 + s23) + 
          p2q^3*s13^2*(s12 + s13 + s23)*(s13 + 2*s23) + 
          p3q^3*(s12^2*(s13 - s23)^2 + 4*s13^2*s23^2 + s12^3*(s13 + s23)) + 
          p1q*p3q^2*s23*(s12^3 + 8*s13^2*s23 - s12^2*(5*s13 + s23) + 
            2*s12*(s13^2 - s23^2)) + p1q^2*p3q*s23*(-2*s12^2*(s13 + s23) + 
            s12*(2*s13^2 + s13*s23 - s23^2) + s23*(5*s13^2 + 2*s13*s23 + 
              s23^2)) + p2q*s13*(-4*p1q*p3q*s23*(s12^2 + s13^2 - s13*s23 + 
              s23^2 - s12*(s13 + s23)) + p1q^2*s23*(-2*s13^2 - s13*s23 - 
              3*s23^2 + s12*(2*s13 + s23)) + p3q^2*(s12^3 + 8*s13*s23^2 - 
              s12^2*(s13 + 5*s23) - 2*s12*(s13^2 - s23^2))) + 
          p2q^2*s13*(p1q*s23*(-3*s13^2 - s13*s23 - 2*s23^2 + 
              s12*(s13 + 2*s23)) + p3q*(-2*s12^2*(s13 + s23) + 
              s12*(-s13^2 + s13*s23 + 2*s23^2) + s13*(s13^2 + 2*s13*s23 + 
                5*s23^2)))))/(9*ep*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23^2) + (10*ep^2*(-(p1q^4*s13^2*s23^2*(s13 + s23)*
            (-s12^2 + (s13 + s23)^2)) - p2q^4*s13^2*s23^2*(s13 + s23)*
           (-s12^2 + (s13 + s23)^2) + p3q^4*s12^2*
           (4*s13*s23*(s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + s23^3) + 
            s12^2*(6*s13^3 + 5*s13^2*s23 + 5*s13*s23^2 + 6*s23^3) + 
            3*s12*(2*s13^4 + s13^3*s23 + 2*s13^2*s23^2 + s13*s23^3 + 
              2*s23^4)) - p2q^3*p3q*s13*(s13^2*(s13 + s23)^4 + 
            s12^3*s23^2*(2*s13 + s23) - s12*(s13 + s23)^2*
             (4*s13^3 - 5*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) - 
            s12^2*(5*s13^4 + 13*s13^3*s23 + 17*s13^2*s23^2 + 17*s13*s23^3 + 
              8*s23^4)) + p2q^2*p3q^2*(s12^4*s13*s23^2 - s13^2*(s13 - s23)*
             s23*(s13 + s23)^3 + s12*s13*(s13 + s23)^2*(8*s13^3 - 
              5*s13^2*s23 - s13*s23^2 - 8*s23^3) - 
            s12^3*(10*s13^4 + 16*s13^3*s23 + 17*s13^2*s23^2 + 21*s13*s23^3 + 
              6*s23^4) - 2*s12^2*(s13^5 - 7*s13^4*s23 - 10*s13^3*s23^2 - 
              5*s13^2*s23^3 + 3*s23^5)) + p2q*p3q^3*s12*
           (-(s13*s23*(s13 + s23)^2*(3*s13^2 + 4*s13*s23 + 5*s23^2)) + 
            s12^3*(5*s13^3 + 3*s13^2*s23 + 6*s13*s23^2 + 6*s23^3) - 
            s12^2*s13*(8*s13^3 + 22*s13^2*s23 + 13*s13*s23^2 + 17*s23^3) - 
            s12*(13*s13^5 + 10*s13^4*s23 - s13^3*s23^2 + 4*s13*s23^4 + 
              6*s23^5)) - p1q^3*s23*(-(p2q*(s13 + s23)^2*(2*s13^4 + 2*s13^3*
                s23 - s13^2*s23^2 - 2*s13*s23^3 - s23^4 + s12^2*(6*s13^2 + 
                 3*s13*s23 + 5*s23^2) + s12*(-4*s13^3 + s13^2*s23 - 
                 5*s13*s23^2 + 4*s23^3))) + p3q*(s23^2*(s13 + s23)^4 + 
              s12^3*s13^2*(s13 + 2*s23) + s12*(s13 + s23)^2*(3*s13^3 - 
                3*s13^2*s23 + 5*s13*s23^2 - 4*s23^3) - s12^2*(8*s13^4 + 
                17*s13^3*s23 + 17*s13^2*s23^2 + 13*s13*s23^3 + 5*s23^4))) + 
          p1q^2*(-(p2q^2*(s13 + s23)*((s13 + s23)^2*(s13^4 - s13^3*s23 - 
                 2*s13^2*s23^2 - s13*s23^3 + s23^4) - s12^2*(5*s13^4 + 
                 14*s13^3*s23 + 16*s13^2*s23^2 + 14*s13*s23^3 + 5*s23^4) + 
               s12*(-4*s13^5 + 5*s13^4*s23 + 7*s13^3*s23^2 + 7*s13^2*s23^3 + 
                 5*s13*s23^4 - 4*s23^5))) + p3q^2*(s12^4*s13^2*s23 + 
              s13*(s13 - s23)*s23^2*(s13 + s23)^3 - s12*s23*(s13 + s23)^2*(
                8*s13^3 + s13^2*s23 + 5*s13*s23^2 - 8*s23^3) - 
              s12^3*(6*s13^4 + 21*s13^3*s23 + 17*s13^2*s23^2 + 16*s13*s23^3 + 
                10*s23^4) - 2*s12^2*(3*s13^5 - 5*s13^3*s23^2 - 10*s13^2*
                 s23^3 - 7*s13*s23^4 + s23^5)) + p2q*p3q*
             (s23*(s13 + s23)^4*(s13^2 + s13*s23 - s23^2) - s12^3*(5*s13^4 + 
                16*s13^3*s23 + 14*s13^2*s23^2 + 16*s13*s23^3 + 10*s23^4) + 
              s12*(s13 + s23)^2*(7*s13^4 - 16*s13^3*s23 - 14*s13*s23^3 + 
                12*s23^4) + s12^2*(2*s13^5 + 29*s13^4*s23 + 51*s13^3*s23^2 + 
                54*s13^2*s23^3 + 33*s13*s23^4 + 3*s23^5))) + 
          p1q*(p2q^3*s13*(s13 + s23)^2*(-s13^4 - 2*s13^3*s23 - s13^2*s23^2 + 
              2*s13*s23^3 + 2*s23^4 + s12^2*(5*s13^2 + 3*s13*s23 + 6*s23^2) + 
              s12*(4*s13^3 - 5*s13^2*s23 + s13*s23^2 - 4*s23^3)) + 
            p2q*p3q^2*(-(s13*(s13 - s23)^2*s23*(s13 + s23)^3) + 
              s12^4*(5*s13^3 + 3*s13^2*s23 + 3*s13*s23^2 + 5*s23^3) + 
              s12*(s13 + s23)^2*(7*s13^4 - 15*s13^3*s23 - 4*s13^2*s23^2 - 
                15*s13*s23^3 + 7*s23^4) - s12^3*(13*s13^4 + 38*s13^3*s23 + 
                30*s13^2*s23^2 + 38*s13*s23^3 + 13*s23^4) + 
              s12^2*(-11*s13^5 + 13*s13^4*s23 + 38*s13^3*s23^2 + 
                38*s13^2*s23^3 + 13*s13*s23^4 - 11*s23^5)) + 
            p2q^2*p3q*(-(s13*(s13 + s23)^4*(s13^2 - s13*s23 - s23^2)) - 
              s12^3*(10*s13^4 + 16*s13^3*s23 + 14*s13^2*s23^2 + 
                16*s13*s23^3 + 5*s23^4) + s12*(s13 + s23)^2*(12*s13^4 - 
                14*s13^3*s23 - 16*s13*s23^3 + 7*s23^4) + s12^2*(3*s13^5 + 
                33*s13^4*s23 + 54*s13^3*s23^2 + 51*s13^2*s23^3 + 
                29*s13*s23^4 + 2*s23^5)) + p3q^3*s12*(-(s13*s23*(s13 + s23)^2*
                (5*s13^2 + 4*s13*s23 + 3*s23^2)) + s12^3*(6*s13^3 + 
                6*s13^2*s23 + 3*s13*s23^2 + 5*s23^3) - s12^2*s23*(17*s13^3 + 
                13*s13^2*s23 + 22*s13*s23^2 + 8*s23^3) - s12*(6*s13^5 + 
                4*s13^4*s23 - s13^2*s23^3 + 10*s13*s23^4 + 13*s23^5)))))/
        (27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23^2*
         (s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(p1q^4*s23^2*(s13 + s23)*(3*s12*(2*s13 - s23)*(s13 + s23)^2 + 
            s13*(s13 + s23)^2*(10*s13 + 3*s23) - s12^2*(4*s13^2 + 3*s23^2)) + 
          p2q^4*s13^2*(s13 + s23)*(-3*s12*(s13 - 2*s23)*(s13 + s23)^2 + 
            s23*(s13 + s23)^2*(3*s13 + 10*s23) - s12^2*(3*s13^2 + 4*s23^2)) + 
          p3q^4*s12^2*(4*s13*(s13 - s23)^2*s23*(s13 + s23) + 
            23*s12^3*(s13^2 + s23^2) + s12^2*(43*s13^3 + 52*s13^2*s23 + 
              52*s13*s23^2 + 43*s23^3) + s12*(20*s13^4 - 39*s13^3*s23 - 
              2*s13^2*s23^2 - 39*s13*s23^3 + 20*s23^4)) + 
          p2q^3*p3q*s13*(2*s13*(s13 + s23)^3*(5*s13^2 + 4*s13*s23 + 
              4*s23^2) + s12*(s13 + s23)^2*(17*s13^3 - 6*s13^2*s23 - 
              14*s13*s23^2 - 50*s23^3) + s12^3*(9*s13^3 + 6*s13^2*s23 + 
              28*s13*s23^2 + 24*s23^3) + 2*s12^2*(8*s13^4 + 50*s13^3*s23 + 
              71*s13^2*s23^2 + 62*s13*s23^3 + 33*s23^4)) - 
          p2q^2*p3q^2*(-2*s13^2*(s13 - s23)*s23*(s13 + s23)^3 + 
            s12*s13*s23*(s13 + s23)^2*(31*s13^2 + 15*s13*s23 + 52*s23^2) + 
            s12^4*(9*s13^3 + 3*s13^2*s23 + 44*s13*s23^2 + 20*s23^3) + 
            s12^3*s23*(103*s13^3 + 117*s13^2*s23 + 126*s13*s23^2 + 
              40*s23^3) - s12^2*(9*s13^5 + 161*s13^4*s23 + 225*s13^3*s23^2 + 
              235*s13^2*s23^3 + 142*s13*s23^4 - 20*s23^5)) - 
          p2q*p3q^3*s12*(2*s13*s23*(s13 + s23)^2*(3*s13^2 - 4*s13*s23 + 
              s23^2) - s12^4*(3*s13^2 + 20*s23^2) + 
            s12^3*(36*s13^3 - 6*s13^2*s23 + s13*s23^2 - 17*s23^3) + 
            s12^2*(69*s13^4 + 244*s13^3*s23 + 179*s13^2*s23^2 + 
              201*s13*s23^3 + 23*s23^4) + s12*(30*s13^5 - 32*s13^4*s23 - 
              65*s13^3*s23^2 - 100*s13^2*s23^3 - 77*s13*s23^4 + 20*s23^5)) + 
          p1q^3*s23*(p3q*(2*s23*(s13 + s23)^3*(4*s13^2 + 4*s13*s23 + 
                5*s23^2) - s12*(s13 + s23)^2*(50*s13^3 + 14*s13^2*s23 + 
                6*s13*s23^2 - 17*s23^3) + s12^3*(24*s13^3 + 28*s13^2*s23 + 
                6*s13*s23^2 + 9*s23^3) + 2*s12^2*(33*s13^4 + 62*s13^3*s23 + 
                71*s13^2*s23^2 + 50*s13*s23^3 + 8*s23^4)) + 
            p2q*(s13 + s23)*(-2*(s13 + s23)^2*(10*s13^3 - s13^2*s23 - 
                4*s13*s23^2 - 5*s23^3) + s12^2*(86*s13^3 + 70*s13^2*s23 + 
                81*s13*s23^2 + 7*s23^3) + s12*(-26*s13^4 - 6*s13^3*s23 + 
                17*s13^2*s23^2 + 14*s13*s23^3 + 17*s23^4))) - 
          p1q^2*(p3q^2*(2*s13*(s13 - s23)*s23^2*(s13 + s23)^3 + 
              s12*s13*s23*(s13 + s23)^2*(52*s13^2 + 15*s13*s23 + 31*s23^2) + 
              s12^4*(20*s13^3 + 44*s13^2*s23 + 3*s13*s23^2 + 9*s23^3) + 
              s12^3*s13*(40*s13^3 + 126*s13^2*s23 + 117*s13*s23^2 + 
                103*s23^3) + s12^2*(20*s13^5 - 142*s13^4*s23 - 235*s13^3*
                 s23^2 - 225*s13^2*s23^3 - 161*s13*s23^4 - 9*s23^5)) - 
            p2q^2*(s13 + s23)*((s13 + s23)^2*(10*s13^4 - 15*s13^3*s23 - 
                16*s13^2*s23^2 - 15*s13*s23^3 + 10*s23^4) + s12^2*(10*s13^4 + 
                167*s13^3*s23 + 148*s13^2*s23^2 + 167*s13*s23^3 + 10*s23^4) + 
              4*s12*(5*s13^5 - 3*s13^4*s23 - s13^3*s23^2 - s13^2*s23^3 - 
                3*s13*s23^4 + 5*s23^5)) + p2q*p3q*(2*s23*(s13 + s23)^3*(
                9*s13^3 + 4*s13^2*s23 + 5*s13*s23^2 - 5*s23^3) + 
              s12^3*(-10*s13^4 + 73*s13^3*s23 + 98*s13^2*s23^2 + 
                88*s13*s23^3 - 6*s23^4) - s12*(s13 + s23)^2*(10*s13^4 - 
                77*s13^3*s23 + 32*s13^2*s23^2 - 57*s13*s23^3 + 17*s23^4) - 
              s12^2*(20*s13^5 + 348*s13^4*s23 + 530*s13^3*s23^2 + 
                527*s13^2*s23^3 + 338*s13*s23^4 + 13*s23^5))) - 
          p1q*(-(p2q^3*s13*(s13 + s23)*(2*(s13 + s23)^2*(5*s13^3 + 
                 4*s13^2*s23 + s13*s23^2 - 10*s23^3) + s12^2*(7*s13^3 + 
                 81*s13^2*s23 + 70*s13*s23^2 + 86*s23^3) + s12*(17*s13^4 + 
                 14*s13^3*s23 + 17*s13^2*s23^2 - 6*s13*s23^3 - 26*s23^4))) + 
            p2q*p3q^2*(-2*s13*(s13 - s23)^2*s23*(s13 + s23)^3 + 
              33*s12^4*(s13^3 + s23^3) - s12*(s13 + s23)^2*(10*s13^4 - 
                57*s13^3*s23 + 2*s13^2*s23^2 - 57*s13*s23^3 + 10*s23^4) + 
              s12^3*(47*s13^4 + 308*s13^3*s23 + 262*s13^2*s23^2 + 
                308*s13*s23^3 + 47*s23^4) + s12^2*(4*s13^5 - 306*s13^4*s23 - 
                418*s13^3*s23^2 - 418*s13^2*s23^3 - 306*s13*s23^4 + 
                4*s23^5)) + p2q^2*p3q*(-2*s13*(s13 + s23)^3*(5*s13^3 - 
                5*s13^2*s23 - 4*s13*s23^2 - 9*s23^3) + s12^3*(-6*s13^4 + 
                88*s13^3*s23 + 98*s13^2*s23^2 + 73*s13*s23^3 - 10*s23^4) - 
              s12*(s13 + s23)^2*(17*s13^4 - 57*s13^3*s23 + 32*s13^2*s23^2 - 
                77*s13*s23^3 + 10*s23^4) - s12^2*(13*s13^5 + 338*s13^4*s23 + 
                527*s13^3*s23^2 + 530*s13^2*s23^3 + 348*s13*s23^4 + 
                20*s23^5)) + p3q^3*s12*(-(s12^4*(20*s13^2 + 3*s23^2)) + 
              2*s13*s23*(s13 + s23)^2*(s13^2 - 4*s13*s23 + 3*s23^2) + 
              s12^3*(-17*s13^3 + s13^2*s23 - 6*s13*s23^2 + 36*s23^3) + 
              s12^2*(23*s13^4 + 201*s13^3*s23 + 179*s13^2*s23^2 + 
                244*s13*s23^3 + 69*s23^4) + s12*(20*s13^5 - 77*s13^4*s23 - 
                100*s13^3*s23^2 - 65*s13^2*s23^3 - 32*s13*s23^4 + 
                30*s23^5)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13^2*s23^2*(s13 + s23)*(-(p3q*s12) + (p1q + p2q)*
           (s13 + s23))) + (-18*p1q^4*s12*s23^2*(s13 + s23)^2*
          (s12 + s13 + s23)*(2*s13 + s23) - 18*p2q^4*s12*s13^2*(s13 + s23)^2*
          (s12 + s13 + s23)*(s13 + 2*s23) + 2*p3q^4*s12^2*
          (s12^3*(9*s13^2 + 6*s13*s23 + 9*s23^2) - s12*s13*s23*
            (13*s13^2 + 2*s13*s23 + 13*s23^2) + s13*s23*(-13*s13^3 + 
             21*s13^2*s23 + 21*s13*s23^2 - 13*s23^3) + 
           3*s12^2*(3*s13^3 - 7*s13^2*s23 - 7*s13*s23^2 + 3*s23^3)) + 
         p1q^3*p3q*s23*(s13 + s23)*(-7*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
           6*s12^3*(6*s13^2 + 16*s13*s23 + 9*s23^2) - 
           2*s12*s23*(45*s13^3 + 37*s13^2*s23 + s13*s23^2 + 9*s23^3) + 
           s12^2*(-36*s13^3 - 23*s13^2*s23 + 87*s13*s23^2 + 36*s23^3)) + 
         p1q*p3q^3*s12*(6*s12^4*s23*(s13 + 3*s23) + s13*s23*(s13 + s23)^2*
            (33*s13^2 - 68*s13*s23 + 19*s23^2) + 2*s12*s13*s23*
            (7*s13^3 + 78*s13^2*s23 + 51*s13*s23^2 - 20*s23^3) - 
           6*s12^3*(3*s13^3 + 20*s13^2*s23 + 19*s13*s23^2 + 6*s23^3) + 
           s12^2*(-18*s13^4 + 53*s13^3*s23 + 162*s13^2*s23^2 - 35*s13*s23^3 - 
             54*s23^4)) + p1q^2*p3q^2*s23*(-7*s13*(s13 - s23)*s23*
            (s13 + s23)^3 - 6*s12^4*(7*s13^2 + 14*s13*s23 + 9*s23^2) + 
           s12*s13*(s13 + s23)^2*(33*s13^2 - 152*s13*s23 + 59*s23^2) + 
           s12^3*s13*(133*s13^2 + 226*s13*s23 + 69*s23^2) + 
           s12^2*(-8*s13^4 - 17*s13^3*s23 + 34*s13^2*s23^2 + 97*s13*s23^3 + 
             54*s23^4)) + p2q^2*s13*(p1q^2*s23*(s13 + s23)*
            (7*(s13^2 - s23^2)^2 - s12^2*(21*s13^2 + 118*s13*s23 + 21*
                s23^2) + 2*s12*(65*s13^3 + 71*s13^2*s23 + 71*s13*s23^2 + 65*
                s23^3)) + p1q*p3q*(7*s23*(s13 + s23)^3*(2*s13^2 - 3*s13*s23 + 
               s23^2) - s12*(s13 + s23)^2*(18*s13^3 - 135*s13^2*s23 + 206*s13*
                s23^2 - 133*s23^3) + s12^3*(36*s13^3 + 117*s13^2*s23 + 220*
                s13*s23^2 + 115*s23^3) + s12^2*(18*s13^4 - 104*s13^3*s23 - 
               447*s13^2*s23^2 - 444*s13*s23^3 - 119*s23^4)) + 
           p3q^2*(7*s13*(s13 - s23)*s23*(s13 + s23)^3 - 
             6*s12^4*(9*s13^2 + 14*s13*s23 + 7*s23^2) + s12*s23*(s13 + s23)^2*
              (59*s13^2 - 152*s13*s23 + 33*s23^2) + s12^3*s23*
              (69*s13^2 + 226*s13*s23 + 133*s23^2) + s12^2*(54*s13^4 + 97*
                s13^3*s23 + 34*s13^2*s23^2 - 17*s13*s23^3 - 8*s23^4))) + 
         p2q^3*s13*(s13 + s23)*(p3q*(7*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
             6*s12^3*(9*s13^2 + 16*s13*s23 + 6*s23^2) + 
             s12^2*(36*s13^3 + 87*s13^2*s23 - 23*s13*s23^2 - 36*s23^3) - 
             2*s12*s13*(9*s13^3 + s13^2*s23 + 37*s13*s23^2 + 45*s23^3)) + 
           p1q*(7*s13*(s13 - s23)*s23*(s13 + s23)^2 - 
             s12^2*(18*s13^3 + 39*s13^2*s23 + 95*s13*s23^2 + 36*s23^3) + 
             s12*(-18*s13^4 + 22*s13^3*s23 + 10*s13^2*s23^2 + 6*s13*s23^3 + 
               36*s23^4))) + p2q*(p3q^3*s12*(6*s12^4*s13*(3*s13 + s23) + 
             s13*s23*(s13 + s23)^2*(19*s13^2 - 68*s13*s23 + 33*s23^2) - 
             6*s12^3*(6*s13^3 + 19*s13^2*s23 + 20*s13*s23^2 + 3*s23^3) + 
             2*s12*s13*s23*(-20*s13^3 + 51*s13^2*s23 + 78*s13*s23^2 + 7*
                s23^3) + s12^2*(-54*s13^4 - 35*s13^3*s23 + 162*s13^2*s23^2 + 
               53*s13*s23^3 - 18*s23^4)) + p1q^2*p3q*s23*
            (7*s13*(s13 + s23)^3*(s13^2 - 3*s13*s23 + 2*s23^2) + 
             s12*(s13 + s23)^2*(133*s13^3 - 206*s13^2*s23 + 135*s13*s23^2 - 
               18*s23^3) + s12^3*(115*s13^3 + 220*s13^2*s23 + 117*s13*s23^2 + 
               36*s23^3) - s12^2*(119*s13^4 + 444*s13^3*s23 + 447*s13^2*
                s23^2 + 104*s13*s23^3 - 18*s23^4)) - p1q^3*s23*(s13 + s23)*
            (7*s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^2*(36*s13^3 + 95*s13^2*
                s23 + 39*s13*s23^2 + 18*s23^3) - 2*s12*(18*s13^4 + 3*s13^3*
                s23 + 5*s13^2*s23^2 + 11*s13*s23^3 - 9*s23^4)) + 
           p1q*p3q^2*(7*s13*(s13 - s23)^2*s23*(s13 + s23)^3 + 
             4*s12*s13*s23*(s13 + s23)^2*(23*s13^2 - 76*s13*s23 + 23*s23^2) - 
             6*s12^4*(3*s13^3 + 11*s13^2*s23 + 11*s13*s23^2 + 3*s23^3) + 
             2*s12^3*(9*s13^4 + 130*s13^3*s23 + 290*s13^2*s23^2 + 130*s13*
                s23^3 + 9*s23^4) + s12^2*(36*s13^5 - 39*s13^4*s23 - 157*s13^3*
                s23^2 - 157*s13^2*s23^3 - 39*s13*s23^4 + 36*s23^5))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23^2*
         (s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]] + 
     ((ep^3*(p2q*s13*(s12*s13*(20*s13 - 9*s23) + s12^2*(20*s13 + s23) - 
            s23*(-10*s13^2 + 7*s13*s23 + s23^2)) + 
          p1q*s23*(s12^2*(20*s13 + s23) + s23*(-10*s13^2 + 7*s13*s23 + 
              s23^2) + s12*(-20*s13^2 + 27*s13*s23 + 2*s23^2)) - 
          p3q*(4*s13*s23^2*(5*s13 + s23) + s12^3*(20*s13 + s23) + 
            s12*s23*(50*s13^2 + 15*s13*s23 + s23^2) + 
            s12^2*(20*s13^2 + 31*s13*s23 + 2*s23^2))))/(27*(p1q + p2q + p3q)*
         s13*s23^2*(s12 + s23)) + 
       (ep^2*(2*p1q^4*s23^2*(s12 + s23)*(s12^4 + s13*s23^2*(s13 + s23) + 
            s12^2*s23*(3*s13 + s23) + s12^3*(s13 + 2*s23) + 
            s12*s13*s23*(2*s13 + 3*s23)) - 2*p2q^4*s13^2*s23*
           (s12^4 + s13*s23^2*(s13 + s23) + s12*s23^2*(3*s13 + 2*s23) + 
            s12^3*(s13 + 4*s23) + s12^2*s23*(3*s13 + 5*s23)) - 
          p3q^4*s12^2*(s12 + s23)*(3*s12^3*(40*s13 + s23) + 
            2*s23^2*(33*s13^2 - 7*s13*s23 + 9*s23^2) + 
            3*s12^2*(40*s13^2 + 51*s13*s23 + 10*s23^2) + 
            s12*s23*(194*s13^2 + 21*s13*s23 + 45*s23^2)) + 
          p2q*p3q^3*s12^2*(-(s12^4*(100*s13 + 3*s23)) + 
            s12^3*(160*s13^2 - 129*s13*s23 - 33*s23^2) + 
            s12^2*(260*s13^3 + 148*s13^2*s23 + 121*s13*s23^2 - 71*s23^3) + 
            s12*s23*(406*s13^3 - 79*s13^2*s23 + 225*s13*s23^2 - 55*s23^3) + 
            s23^2*(136*s13^3 - 69*s13^2*s23 + 75*s13*s23^2 - 14*s23^3)) + 
          p2q^2*p3q^2*(-2*s12^6*s23 + 2*s13^2*s23^3*(s13 + s23)^2 + 
            s12^5*(200*s13^2 + 82*s13*s23 - 6*s23^2) + 
            s12^4*(40*s13^3 + 201*s13^2*s23 + 233*s13*s23^2 - 2*s23^3) + 
            2*s12*s13*s23^2*(s13^3 + 3*s13^2*s23 + 4*s13*s23^2 + 2*s23^3) + 
            s12^2*s23*(-92*s13^4 + 83*s13^3*s23 - 60*s13^2*s23^2 + 
              67*s13*s23^3 + 4*s23^4) + s12^3*(-160*s13^4 + 157*s13^3*s23 - 
              63*s13^2*s23^2 + 214*s13*s23^3 + 6*s23^4)) + 
          p2q^3*p3q*s13*(4*s12^5*s23 + s12^4*(-100*s13^2 - 77*s13*s23 + 
              14*s23^2) - s12^3*(80*s13^3 + 69*s13^2*s23 + 118*s13*s23^2 - 
              16*s23^3) - 2*s12*s23^2*(s13^3 + 2*s13^2*s23 - 2*s13*s23^2 - 
              2*s23^3) - 2*s13*s23^2*(s13^3 + 2*s13^2*s23 - s23^3) + 
            s12^2*(20*s13^4 - 32*s13^3*s23 + 3*s13^2*s23^2 - 39*s13*s23^3 + 
              10*s23^4)) + p1q^3*s23*(-(p3q*(s12 + s23)*(2*s12^5 + s12^4*
                (-122*s13 + 15*s23) - 2*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) - 
               2*s12*s23^2*(4*s13^2 + 6*s13*s23 + s23^2) + s12^2*s23*
                (30*s13^2 - 69*s13*s23 + 7*s23^2) + s12^3*(40*s13^2 - 
                 183*s13*s23 + 20*s23^2))) + p2q*(17*s12^5*(6*s13 - s23) + 
              s12^4*(-42*s13^2 + 239*s13*s23 - 47*s23^2) + s12^3*(20*s13^3 - 
                76*s13^2*s23 + 172*s13*s23^2 - 43*s23^3) + s12^2*s23*(
                16*s13^3 - 46*s13^2*s23 + 35*s13*s23^2 - 11*s23^3) + 
              2*s23^3*(-3*s13^3 - 3*s13^2*s23 + s13*s23^2 + s23^3) + 
              2*s12*s23^2*(-6*s13^3 - 9*s13^2*s23 + s13*s23^2 + 2*s23^3))) + 
          p1q^2*(-(p3q^2*(s12 + s23)*(-2*s23^4*(s13 + s23)^2 + 5*s12^5*
                (24*s13 + s23) - 2*s12*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) + 
               2*s12^2*s23^2*(63*s13^2 - 71*s13*s23 + 15*s23^2) + s12^4*
                (120*s13^2 - 93*s13*s23 + 56*s23^2) + s12^3*s23*(274*s13^2 - 
                 347*s13*s23 + 81*s23^2))) - p2q*p3q*(s12^6*(100*s13 - s23) + 
              2*s12*s13*s23^3*(10*s13^2 + 17*s13*s23 + 6*s23^2) + 
              s12^5*(-40*s13^2 - 78*s13*s23 + 47*s23^2) + 2*s23^4*(5*s13^3 + 
                8*s13^2*s23 + 2*s13*s23^2 - s23^3) + 2*s12^2*s23^2*(
                -67*s13^3 + 98*s13^2*s23 - 69*s13*s23^2 + 20*s23^3) + 
              s12^3*s23*(-294*s13^3 + 425*s13^2*s23 - 574*s13*s23^2 + 
                121*s23^3) + s12^4*(-140*s13^3 + 209*s13^2*s23 - 
                606*s13*s23^2 + 131*s23^3)) + p2q^2*(6*s13*(s13 - s23)*s23^
                3*(s13 + s23)^2 + s12^5*(100*s13^2 + 79*s13*s23 + 2*s23^2) + 
              s12^4*(80*s13^3 + 67*s13^2*s23 + 216*s13*s23^2 + 6*s23^3) - 
              2*s12*s23^2*(-3*s13^4 - 6*s13^3*s23 + 2*s13^2*s23^2 + 
                7*s13*s23^3 + 2*s23^4) + s12^3*(-20*s13^4 + 156*s13^3*s23 - 
                81*s13^2*s23^2 + 187*s13*s23^3 + 2*s23^4) - 2*s12^2*s23*(
                20*s13^4 - 33*s13^3*s23 + 24*s13^2*s23^2 - 21*s13*s23^3 + 
                3*s23^4))) + p1q*(-(p3q^3*s12^2*(s12 + s23)*
              (6*s12^3*(40*s13 + s23) + 3*s23^2*(54*s13^2 - 31*s13*s23 + 
                 13*s23^2) + s12^2*(240*s13^2 + 182*s13*s23 + 69*s23^2) + s12*
                s23*(428*s13^2 - 145*s13*s23 + 102*s23^2))) - 
            p2q*p3q^2*(4*s13*s23^4*(s13 + s23)^2 + 2*s12^6*(100*s13 + s23) + 
              s12^5*(-200*s13^2 + 155*s13*s23 + 63*s23^2) + 4*s12*s23^3*(
                2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
              s12^2*s23^2*(-254*s13^3 + 227*s13^2*s23 - 170*s13*s23^2 + 
                43*s23^3) + s12^3*s23*(-680*s13^3 + 436*s13^2*s23 - 
                611*s13*s23^2 + 133*s23^3) + s12^4*(-400*s13^3 + 
                21*s13^2*s23 - 478*s13*s23^2 + 155*s23^3)) + 
            p2q^2*p3q*(-2*s12^6*s23 + s12^5*(300*s13^2 + 157*s13*s23 - 
                4*s23^2) + 2*s13*s23^3*(4*s13^3 + 7*s13^2*s23 + s13*s23^2 - 
                2*s23^3) + s12^4*(120*s13^3 + 266*s13^2*s23 + 433*s13*s23^2 + 
                4*s23^3) + 2*s12*s23^2*(4*s13^4 + 9*s13^3*s23 + 
                6*s13^2*s23^2 - 2*s13*s23^3 - 2*s23^4) + s12^2*s23*(
                -132*s13^4 + 151*s13^3*s23 - 112*s13^2*s23^2 + 107*s13*
                 s23^3 - 2*s23^4) + s12^3*(-180*s13^4 + 315*s13^3*s23 - 
                152*s13^2*s23^2 + 383*s13*s23^3 + 8*s23^4)) + 
            p2q^3*s13*(2*s12^5*s23 + s12^4*(-100*s13^2 - 75*s13*s23 + 
                8*s23^2) - s12^3*(80*s13^3 + 65*s13^2*s23 + 110*s13*s23^2 - 
                14*s23^3) - 2*s13*s23^2*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 
                3*s23^3) + 2*s12*s23^2*(-s13^3 + s13^2*s23 + 8*s13*s23^2 + 
                4*s23^3) + s12^2*(20*s13^4 - 32*s13^3*s23 + 11*s13^2*s23^2 - 
                25*s13*s23^3 + 16*s23^4)))))/(54*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13*s23^2*(s12 + s23)*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p1q^5*s13*s23^2*(-39*s12^4 + 6*s12^3*(8*s13 - 13*s23) + 
           40*s13*s23^2*(s13 + s23) + 2*s12*s13*s23*(63*s13 + 83*s23) + 
           3*s12^2*(29*s13^2 + 58*s13*s23 - 13*s23^2)) + 
         p3q*(2*p3q^4*s12^2*(6*s12^4*s13 + 3*s12^3*(2*s13^2 + 13*s13*s23 - 78*
                s23^2) + s12*s13*s23*(20*s13^2 - 106*s13*s23 - 37*s23^2) + 
             s13*s23^2*(20*s13^2 - 31*s13*s23 + 137*s23^2) - 
             s12^2*s23*(73*s13^2 + 135*s13*s23 + 234*s23^2)) - 
           2*p2q^4*s13^2*(20*s13^2*s23^2*(s13 + s23) + s12*s13*s23^2*
              (63*s13 + 43*s23) + s12^3*(6*s13^2 - 7*s13*s23 + 234*s23^2) + 
             s12^2*(6*s13^3 - s13^2*s23 + 270*s13*s23^2 + 234*s23^3)) + 
           2*p2q*p3q^3*s12*(6*s12^5*s13 - 40*s13^3*s23^2*(s13 + s23) - 
             3*s12^4*(4*s13^2 - 9*s13*s23 + 156*s23^2) + s12^2*s13*s23*
              (169*s13^2 + 249*s13*s23 + 161*s23^2) - 
             2*s12^3*(9*s13^3 + 73*s13^2*s23 - 10*s13*s23^2 + 234*s23^3) + 
             s12*s13*s23*(-60*s13^3 + 89*s13^2*s23 + 39*s13*s23^2 + 414*
                s23^3)) + p2q^2*p3q^2*(40*s13^3*s23^2*(s13 + s23)^2 - 
             4*s12^4*s23*(26*s13^2 - 331*s13*s23 + 117*s23^2) - 
             3*s12^5*(12*s13^2 - 5*s13*s23 + 156*s23^2) - 2*s12^2*s13*s23*
              (119*s13^3 + 93*s13^2*s23 - 99*s13*s23^2 - 511*s23^3) + 
             2*s12*s13^2*s23*(60*s13^3 + 57*s13^2*s23 + 40*s13*s23^2 + 43*
                s23^3) + s12^3*s13*(36*s13^3 + 351*s13^2*s23 + 1396*s13*
                s23^2 + 1359*s23^3)) + p2q^3*p3q*s13*
            (s12^4*(36*s13^2 - 29*s13*s23 + 936*s23^2) - 40*s13^2*s23*
              (s13^3 + 2*s13^2*s23 - s23^3) + 2*s12*s13*s23*(23*s13^3 + 40*
                s13*s23^2 + 43*s23^3) + 2*s12^3*(12*s13^3 + 24*s13^2*s23 + 77*
                s13*s23^2 + 462*s23^3) - s12^2*(12*s13^4 + 137*s13^3*s23 + 
               838*s13^2*s23^2 + 403*s13*s23^3 - 468*s23^4))) + 
         p1q^3*s23*(p3q^2*(132*s12^5*s13 + 2*s12*s13*s23^2*(189*s13^2 + 163*
                s13*s23 - 46*s23^2) + 40*s13*s23^3*(3*s13^2 + 5*s13*s23 + 2*
                s23^2) + 6*s12^3*s13*(50*s13^2 - 17*s13*s23 + 153*s23^2) + 
             s12^4*(-576*s13^2 + 865*s13*s23 + 936*s23^2) + 
             s12^2*s23*(561*s13^3 + 604*s13^2*s23 + 61*s13*s23^2 - 936*
                s23^3)) + 2*p2q*p3q*(27*s12^5*s13 + s12^4*(-153*s13^2 + 620*
                s13*s23 + 468*s23^2) + s12^3*(363*s13^3 + 559*s13^2*s23 + 766*
                s13*s23^2 - 234*s23^3) - 20*s13*s23^2*(8*s13^3 + 11*s13^2*
                s23 + s13*s23^2 - 2*s23^3) - s12*s13*s23*(375*s13^3 + 360*
                s13^2*s23 + 14*s13*s23^2 + 89*s23^3) + 
             s12^2*(-213*s13^4 + 74*s13^3*s23 + 854*s13^2*s23^2 + 314*s13*
                s23^3 - 702*s23^4)) + p2q^2*(120*s13^2*(s13 - s23)*s23*
              (s13 + s23)^2 + s12^4*(-78*s13^2 + 453*s13*s23) + 
             2*s12^3*(63*s13^3 + 146*s13^2*s23 + 268*s13*s23^2 - 234*s23^3) + 
             s12^2*(-174*s13^4 - 211*s13^3*s23 + 644*s13^2*s23^2 + 489*s13*
                s23^3 - 468*s23^4) + 2*s12*s13*(63*s13^4 + 37*s13^3*s23 - 40*
                s13^2*s23^2 - 57*s13*s23^3 - 43*s23^4))) + 
         p1q^4*s23*(p3q*(39*s12^5*s13 - 42*s12^4*s13*(3*s13 - 4*s23) + 
             2*s12*s13*s23^2*(189*s13^2 + 226*s13*s23 - 3*s23^2) + 
             40*s13*s23^3*(3*s13^2 + 4*s13*s23 + s23^2) + 
             s12^3*(87*s13^3 + 140*s13^2*s23 - 139*s13*s23^2 - 468*s23^3) + 
             2*s12^2*s23*(174*s13^3 + 281*s13^2*s23 - 151*s13*s23^2 - 234*
                s23^3)) - p2q*(3*s12^4*s13*(13*s13 - 56*s23) + 
             40*s13*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - s23^3) + 
             2*s12*s13*s23*(126*s13^3 + 143*s13^2*s23 - 20*s13*s23^2 + 3*
                s23^3) + s12^3*(-126*s13^3 - 296*s13^2*s23 + 22*s13*s23^2 + 
               468*s23^3) + s12^2*(87*s13^4 - 339*s13^2*s23^2 + 224*s13*
                s23^3 + 468*s23^4))) + 
         p1q*(-2*p2q^4*s13^2*(20*s13^2*s23^2*(s13 + s23) + s12*s13*s23^2*
              (63*s13 + 43*s23) + s12^3*(6*s13^2 - 7*s13*s23 + 234*s23^2) + 
             s12^2*(6*s13^3 - s13^2*s23 + 270*s13*s23^2 + 234*s23^3)) + 
           2*p3q^4*s12*(12*s12^5*s13 - 40*s13*s23^4*(s13 + s23) - 
             4*s12^3*s13*s23*(77*s13 + 16*s23) + 3*s12^4*(4*s13^2 + 35*s13*
                s23 - 156*s23^2) + s12*s13*s23^2*(103*s13^2 - 61*s13*s23 + 
               548*s23^2) + s12^2*s23*(103*s13^3 - 331*s13^2*s23 + 407*s13*
                s23^2 + 468*s23^3)) + 2*p2q*p3q^3*(12*s12^6*s13 - 
             40*s13^2*s23^3*(s13 + s23)^2 - 9*s12^5*(2*s13^2 - 9*s13*s23 + 78*
                s23^2) - s12*s13*s23^2*(203*s13^3 + 157*s13^2*s23 + 37*s13*
                s23^2 + 83*s23^3) + s12^4*(-30*s13^3 - 381*s13^2*s23 + 732*
                s13*s23^2 + 234*s23^3) + 2*s12^3*s23*(297*s13^3 + 391*s13^2*
                s23 + 795*s13*s23^2 + 468*s23^3) + 2*s12^2*s13*s23*
              (-123*s13^3 + 124*s13^2*s23 + 296*s13*s23^2 + 803*s23^3)) + 
           2*p2q^3*p3q*s13*(s12^4*(24*s13^2 - 22*s13*s23 + 474*s23^2) + 
             20*s13^2*s23*(-2*s13^3 - 3*s13^2*s23 + 3*s13*s23^2 + 4*s23^3) + 
             s12*s13*s23*(46*s13^3 + 20*s13^2*s23 + 163*s13*s23^2 + 129*
                s23^3) + s12^3*(18*s13^3 + 67*s13^2*s23 - 345*s13*s23^2 + 468*
                s23^3) - s12^2*(6*s13^4 + 107*s13^3*s23 + 858*s13^2*s23^2 + 
               398*s13*s23^3 - 474*s23^4)) + p2q^2*p3q^2*
            (-6*s12^5*(10*s13^2 - 5*s13*s23 + 78*s23^2) + 40*s13^2*s23^2*
              (5*s13^3 + 9*s13^2*s23 + 2*s13*s23^2 - 2*s23^3) + 
             s12^4*(-12*s13^3 - 298*s13^2*s23 + 2657*s13*s23^2 + 468*s23^3) + 
             s12^2*s13*s23*(-664*s13^3 - 1323*s13^2*s23 + 504*s13*s23^2 + 
               3025*s23^3) + 2*s12*s13*s23*(183*s13^4 + 108*s13^3*s23 + 77*
                s13^2*s23^2 + 89*s13*s23^3 - 43*s23^4) + 
             2*s12^3*(24*s13^4 + 383*s13^3*s23 + 754*s13^2*s23^2 + 1651*s13*
                s23^3 + 468*s23^4))) + 
         p1q^2*(p2q^3*s13*(3*s12^4*(4*s13^2 - 5*s13*s23 + 156*s23^2) - 
             40*s13^2*s23*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             2*s12*s13*s23*(23*s13^3 + 20*s13^2*s23 + 123*s13*s23^2 + 86*
                s23^3) + 2*s12^3*(6*s13^3 + 43*s13^2*s23 + 34*s13*s23^2 + 462*
                s23^3) + s12^2*s23*(-77*s13^3 - 422*s13^2*s23 + 519*s13*
                s23^2 + 936*s23^3)) + p3q^3*(12*s12^6*s13 + 
             40*s13*s23^4*(s13 + s23)^2 + 3*s12^5*(4*s13^2 + 75*s13*s23 - 156*
                s23^2) + 2*s12*s13*s23^3*(63*s13^2 - 20*s13*s23 - 83*s23^2) + 
             4*s12^4*s23*(-230*s13^2 + 200*s13*s23 + 351*s23^2) + 
             2*s12^2*s23^2*(233*s13^3 + 78*s13^2*s23 + 573*s13*s23^2 - 234*
                s23^3) + s12^3*s23*(379*s13^3 - 644*s13^2*s23 + 1867*s13*
                s23^2 + 1404*s23^3)) + p2q*p3q^2*(12*s12^6*s13 - 
             6*s12^5*(2*s13^2 - 27*s13*s23 + 78*s23^2) - 40*s13*s23^3*
              (7*s13^3 + 12*s13^2*s23 + 4*s13*s23^2 - s23^3) - 
             2*s12*s13*s23^2*(412*s13^3 + 334*s13^2*s23 + 71*s13*s23^2 + 169*
                s23^3) + 2*s12^3*s23*(725*s13^3 + 944*s13^2*s23 + 2206*s13*
                s23^2 + 936*s23^3) + s12^4*(-24*s13^3 - 737*s13^2*s23 + 2496*
                s13*s23^2 + 2340*s23^3) + s12^2*s23*(-711*s13^4 + 466*s13^3*
                s23 + 2475*s13^2*s23^2 + 3236*s13*s23^3 - 936*s23^4)) + 
           p2q^2*p3q*(-3*s12^5*s13*(8*s13 - 5*s23) + 40*s13^2*s23^2*
              (7*s13^3 + 10*s13^2*s23 - 2*s13*s23^2 - 5*s23^3) + 
             s12^4*(-12*s13^3 - 272*s13^2*s23 + 2242*s13*s23^2 + 936*s23^3) + 
             2*s12*s13*s23*(186*s13^4 + 88*s13^3*s23 - 3*s13^2*s23^2 - 11*s13*
                s23^3 - 86*s23^4) - 2*s12^2*s23*(300*s13^4 + 446*s13^3*s23 - 
               931*s13^2*s23^2 - 1474*s13*s23^3 + 234*s23^4) + 
             s12^3*(12*s13^4 + 541*s13^3*s23 + 1316*s13^2*s23^2 + 3391*s13*
                s23^3 + 468*s23^4))))/(54*ep*(p1q + p3q)^2*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep*(-2*p1q^5*s13*s23^2*(s12 + s23)^2*
           (s12^4 - 19*s13*s23^2*(s13 + s23) + s12^3*(53*s13 + 19*s23) + 
            s12*s23*(4*s13^2 + 2*s13*s23 + 17*s23^2) + 
            s12^2*(52*s13^2 + 74*s13*s23 + 35*s23^2)) - p1q^4*s23*(s12 + s23)*
           (p3q*(78*s12^6*s13 + s12^5*s13*(218*s13 + 9*s23) - 
              38*s13*s23^4*(3*s13^2 + 4*s13*s23 + s23^2) - 2*s12*s13*s23^3*(
                43*s13^2 + 95*s13*s23 + 14*s23^2) + s12^4*(-136*s13^3 + 
                803*s13^2*s23 - 503*s13*s23^2 + 48*s23^3) + s12^2*s23^2*(
                366*s13^3 + 591*s13^2*s23 - 277*s13*s23^2 + 48*s23^3) + 
              s12^3*s23*(182*s13^3 + 1214*s13^2*s23 - 721*s13*s23^2 + 
                96*s23^3)) + p2q*(s12^5*s13*(362*s13 - 237*s23) + 
              2*s12*s13*s23^2*(28*s13^3 + 80*s13^2*s23 - 51*s13*s23^2 - 
                65*s23^3) + 38*s13*s23^3*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - 
                s23^3) + s12^4*(-58*s13^3 + 879*s13^2*s23 - 875*s13*s23^2 + 
                48*s23^3) + s12^2*s23*(-264*s13^4 - 80*s13^3*s23 + 
                213*s13^2*s23^2 - 595*s13*s23^3 + 48*s23^4) + 
              s12^3*(-144*s13^4 - 204*s13^3*s23 + 794*s13^2*s23^2 - 
                1141*s13*s23^3 + 96*s23^4))) + 
          p1q^3*(p3q^2*(s12 + s23)*(80*s12^7*s13 + s12^6*s13*(160*s13 + 
                69*s23) + 38*s13*s23^5*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 
              2*s12*s13*s23^4*(39*s13^2 + 143*s13*s23 + 85*s23^2) - 
              s12^3*s23^2*(46*s13^3 + 3325*s13^2*s23 - 3186*s13*s23^2 + 
                96*s23^3) - s12^2*s23^3*(524*s13^3 + 1489*s13^2*s23 - 
                1539*s13*s23^2 + 96*s23^3) + s12^5*(80*s13^3 - 593*s13^2*
                 s23 + 404*s13*s23^2 + 96*s23^3) + s12^4*s23*(442*s13^3 - 
                2493*s13^2*s23 + 2156*s13*s23^2 + 96*s23^3)) - 
            p2q*p3q*(s12^7*s13*(40*s13 - 23*s23) + 2*s12*s13*s23^4*(
                232*s13^3 + 516*s13^2*s23 + 51*s13*s23^2 - 176*s23^3) + 
              s12^6*(80*s13^3 + 1920*s13^2*s23 - 767*s13*s23^2 - 96*s23^3) + 
              38*s13*s23^5*(8*s13^3 + 11*s13^2*s23 + s13*s23^2 - 2*s23^3) + 
              s12^5*(40*s13^4 + 17*s13^3*s23 + 6683*s13^2*s23^2 - 
                3586*s13*s23^3 - 144*s23^4) + 3*s12^3*s23^2*(-350*s13^4 - 
                353*s13^3*s23 + 2481*s13^2*s23^2 - 1997*s13*s23^3 + 
                112*s23^4) + s12^4*s23*(-270*s13^4 - 752*s13^3*s23 + 
                9969*s13^2*s23^2 - 6798*s13*s23^3 + 144*s23^4) + 
              s12^2*s23^3*(-600*s13^4 + 244*s13^3*s23 + 2341*s13^2*s23^2 - 
                2311*s13*s23^3 + 144*s23^4)) - 
            p2q^2*(-114*s13^2*(s13 - s23)*s23^4*(s13 + s23)^2 + 
              s12^6*s13*(40*s13^2 + 263*s13*s23 + 34*s23^2) - 
              2*s12*s13*s23^3*(68*s13^4 + 166*s13^3*s23 - 89*s13^2*s23^2 - 
                185*s13*s23^3 + 2*s23^4) + s12^5*(80*s13^4 - 411*s13^3*s23 + 
                1089*s13^2*s23^2 + 48*s13*s23^3 + 48*s23^4) + 
              2*s12^2*s23^2*(85*s13^5 - 191*s13^4*s23 - 341*s13^3*s23^2 + 
                581*s13^2*s23^3 - 81*s13*s23^4 + 24*s23^5) + 
              s12^3*s23*(232*s13^5 - 114*s13^4*s23 - 1833*s13^3*s23^2 + 
                2185*s13^2*s23^3 - 332*s13*s23^4 + 144*s23^5) + 
              s12^4*(40*s13^5 + 110*s13^4*s23 - 1538*s13^3*s23^2 + 
                2105*s13^2*s23^3 - 160*s13*s23^4 + 144*s23^5))) + 
          p3q*(p3q^4*s12^2*(s12 + s23)*(92*s12^5*s13 - 2*s13*s23^3*(
                47*s13^2 + 259*s13*s23 - 111*s23^2) + s12^4*(172*s13^2 + 
                421*s13*s23 - 48*s23^2) + s12*s13*s23^2*(-116*s13^2 - 
                989*s13*s23 + 543*s23^2) + s12^3*(80*s13^3 + 171*s13^2*s23 + 
                713*s13*s23^2 - 96*s23^3) + s12^2*s23*(38*s13^3 - 
                472*s13^2*s23 + 705*s13*s23^2 - 48*s23^3)) - 
            2*p2q^4*s13^2*(s12 + s23)*(19*s13^2*s23^3*(s13 + s23) - 
              s12*s13*s23^2*(19*s13^2 + 2*s13*s23 + 2*s23^2) + 
              3*s12^4*(2*s13^2 - 13*s13*s23 + 8*s23^2) + s12^2*s23*(
                -6*s13^3 - 78*s13^2*s23 - 31*s13*s23^2 + 24*s23^3) + 
              s12^3*(6*s13^3 - 39*s13^2*s23 - 68*s13*s23^2 + 48*s23^3)) + 
            p2q*p3q^3*s12*(12*s12^7*s13 + s12^6*(-144*s13^2 + 227*s13*s23 - 
                96*s23^2) + 4*s13^2*s23^4*(3*s13^2 + 2*s13*s23 - s23^2) + 
              s12*s13*s23^3*(112*s13^3 + 537*s13^2*s23 - 1263*s13*s23^2 + 
                266*s23^3) - s12^5*(276*s13^3 + 1327*s13^2*s23 - 
                702*s13*s23^2 + 288*s23^3) + s12^2*s13*s23^2*(92*s13^3 + 
                664*s13^2*s23 - 3884*s13*s23^2 + 747*s23^3) - 
              s12^3*s23*(108*s13^4 + 375*s13^3*s23 + 5082*s13^2*s23^2 - 
                980*s13*s23^3 + 96*s23^4) - 2*s12^4*(60*s13^4 + 393*s13^3*
                 s23 + 1820*s13^2*s23^2 - 493*s13*s23^3 + 144*s23^4)) + 
            p2q^2*p3q^2*(38*s13^3*s23^4*(s13 + s23)^2 + s12^7*(-36*s13^2 + 
                82*s13*s23 - 48*s23^2) - 16*s12^6*s23*(41*s13^2 - 
                21*s13*s23 + 9*s23^2) + 2*s12*s13^2*s23^3*(30*s13^3 + 
                99*s13^2*s23 + 65*s13*s23^2 - 4*s23^3) + s12^5*(36*s13^4 + 
                651*s13^3*s23 - 1839*s13^2*s23^2 + 464*s13*s23^3 - 
                144*s23^4) + s12^4*s23*(435*s13^4 + 1988*s13^3*s23 - 
                2549*s13^2*s23^2 + 340*s13*s23^3 - 48*s23^4) + 
              s12^2*s13*s23^2*(-52*s13^4 + 137*s13^3*s23 + 1276*s13^2*s23^2 - 
                807*s13*s23^3 + 92*s23^4) + s12^3*s13*s23*(-54*s13^4 + 
                354*s13^3*s23 + 2521*s13^2*s23^2 - 2129*s13*s23^3 + 
                222*s23^4)) + p2q^3*p3q*s13*(4*s12^6*(9*s13^2 - 40*s13*s23 + 
                24*s23^2) - 38*s13^2*s23^3*(s13^3 + 2*s13^2*s23 - s23^3) + 
              s12^5*(64*s13^3 + 363*s13^2*s23 - 446*s13*s23^2 + 288*s23^3) - 
              2*s12*s13*s23^2*(17*s13^4 + 65*s13^3*s23 + 25*s13^2*s23^2 - 
                40*s13*s23^3 + 2*s23^4) + s12^4*(68*s13^4 + 163*s13^3*s23 + 
                655*s13^2*s23^2 - 522*s13*s23^3 + 336*s23^4) + 
              s12^2*s23*(44*s13^5 - 134*s13^4*s23 - 329*s13^3*s23^2 + 
                355*s13^2*s23^3 - 166*s13*s23^4 + 48*s23^5) + 
              s12^3*(40*s13^5 + 8*s13^4*s23 - 220*s13^3*s23^2 + 641*s13^2*
                 s23^3 - 398*s13*s23^4 + 192*s23^5))) + 
          p1q*(-2*p2q^4*s13^2*(s12 + s23)*(19*s13^2*s23^3*(s13 + s23) - 
              s12*s13*s23^2*(19*s13^2 + 2*s13*s23 + 2*s23^2) + 
              3*s12^4*(2*s13^2 - 13*s13*s23 + 8*s23^2) + s12^2*s23*(
                -6*s13^3 - 78*s13^2*s23 - 31*s13*s23^2 + 24*s23^3) + 
              s12^3*(6*s13^3 - 39*s13^2*s23 - 68*s13*s23^2 + 48*s23^3)) + 
            p3q^4*s12*(s12 + s23)*(264*s12^6*s13 + s12^5*(504*s13^2 + 
                1067*s13*s23 - 96*s23^2) - 4*s13*s23^4*(s13^2 - 2*s13*s23 - 
                3*s23^2) + s12*s13*s23^3*(-316*s13^2 - 1799*s13*s23 + 
                1117*s23^2) + s12^4*(240*s13^3 + 185*s13^2*s23 + 
                1842*s13*s23^2 - 96*s23^3) + s12^3*s23*(246*s13^3 - 
                2149*s13^2*s23 + 2440*s13*s23^2 + 96*s23^3) + 
              s12^2*s23^2*(-226*s13^3 - 3637*s13^2*s23 + 2506*s13*s23^2 + 
                96*s23^3)) + p2q*p3q^3*(24*s12^8*s13 - 76*s13^2*s23^5*
               (s13 + s23)^2 + s12^7*(-316*s13^2 + 477*s13*s23 - 144*s23^2) - 
              4*s12*s13*s23^4*(25*s13^3 + 97*s13^2*s23 + 68*s13*s23^2 - 
                4*s23^3) - s12^6*(620*s13^3 + 3736*s13^2*s23 - 1745*s13*
                 s23^2 + 240*s23^3) + s12^2*s13*s23^3*(408*s13^3 + 
                1092*s13^2*s23 - 4463*s13*s23^2 + 1441*s23^3) + 
              s12^5*(-280*s13^4 - 1603*s13^3*s23 - 11155*s13^2*s23^2 + 
                3526*s13*s23^3 + 144*s23^4) + s12^3*s23^2*(418*s13^4 + 
                2013*s13^3*s23 - 12901*s13^2*s23^2 + 4205*s13*s23^3 + 
                192*s23^4) + s12^4*s23*(-234*s13^4 - 298*s13^3*s23 - 
                16369*s13^2*s23^2 + 5014*s13*s23^3 + 432*s23^4)) + 
            2*p2q^3*p3q*s13*(s12^6*(24*s13^2 - 121*s13*s23 + 48*s23^2) + 
              19*s13^2*s23^3*(-2*s13^3 - 3*s13^2*s23 + 3*s13*s23^2 + 
                4*s23^3) + 2*s12^5*(29*s13^3 + 152*s13^2*s23 - 201*s13*
                 s23^2 + 72*s23^3) + s12*s13*s23^2*(-34*s13^4 - 130*s13^3*
                 s23 + 11*s13^2*s23^2 + 158*s13*s23^3 - 6*s23^4) + 
              s12^4*(74*s13^4 + 83*s13^3*s23 + 492*s13^2*s23^2 - 
                602*s13*s23^3 + 192*s23^4) + s12^2*s23*(44*s13^5 - 
                159*s13^4*s23 - 406*s13^3*s23^2 + 292*s13^2*s23^3 - 
                221*s13*s23^4 + 48*s23^5) + s12^3*(40*s13^5 + 8*s13^4*s23 - 
                375*s13^3*s23^2 + 422*s13^2*s23^3 - 536*s13*s23^4 + 
                144*s23^5)) + p2q^2*p3q^2*(-4*s12^7*(15*s13^2 - 41*s13*s23 + 
                12*s23^2) + 38*s13^2*s23^4*(5*s13^3 + 9*s13^2*s23 + 
                2*s13*s23^2 - 2*s23^3) - s12^6*(52*s13^3 + 1391*s13^2*s23 - 
                590*s13*s23^2 + 48*s23^3) + 2*s12*s13*s23^3*(128*s13^4 + 
                408*s13^3*s23 + 161*s13^2*s23^2 - 136*s13*s23^3 + 2*s23^4) + 
              s12^5*(-32*s13^4 + 1759*s13^3*s23 - 4433*s13^2*s23^2 + 
                784*s13*s23^3 + 144*s23^4) + 2*s12^2*s13*s23^2*(-137*s13^4 + 
                327*s13^3*s23 + 1630*s13^2*s23^2 - 1380*s13*s23^3 + 
                197*s23^4) + s12^3*s23*(-340*s13^5 + 730*s13^4*s23 + 
                6781*s13^3*s23^2 - 6599*s13^2*s23^3 + 872*s13*s23^4 + 
                96*s23^5) + s12^4*(-40*s13^5 + 658*s13^4*s23 + 5578*s13^3*
                 s23^2 - 7137*s13^2*s23^3 + 840*s13*s23^4 + 240*s23^5))) + 
          p1q^2*(p2q*p3q^2*(12*s12^8*s13 + s12^7*(-212*s13^2 + 273*s13*s23 - 
                48*s23^2) - 2*s12*s13*s23^4*(203*s13^3 + 577*s13^2*s23 + 
                255*s13*s23^2 - 100*s23^3) - 38*s13*s23^5*(7*s13^3 + 
                12*s13^2*s23 + 4*s13*s23^2 - s23^3) + s12^6*(-424*s13^3 - 
                3967*s13^2*s23 + 1573*s13*s23^2 + 144*s23^3) + 
              s12^4*s23^2*(567*s13^3 - 19583*s13^2*s23 + 8816*s13*s23^2 + 
                528*s23^3) + s12^3*s13*s23^2*(968*s13^3 + 2124*s13^2*s23 - 
                15453*s13*s23^2 + 7713*s23^3) + s12^2*s23^3*(688*s13^4 + 
                391*s13^3*s23 - 5430*s13^2*s23^2 + 2761*s13*s23^3 - 
                96*s23^4) + s12^5*(-200*s13^4 - 892*s13^3*s23 - 12957*s13^2*
                 s23^2 + 5014*s13*s23^3 + 624*s23^4)) + p3q^3*(s12 + s23)*
             (252*s12^7*s13 + 38*s13*s23^5*(s13 + s23)^2 + s12^6*(492*s13^2 + 
                793*s13*s23 - 48*s23^2) + 6*s12*s13*s23^4*(3*s13^2 + 
                23*s13*s23 + 20*s23^2) - s12^2*s23^3*(492*s13^3 + 
                2331*s13^2*s23 - 2053*s13*s23^2 + 48*s23^3) + 
              s12^5*(240*s13^3 - 361*s13^2*s23 + 1540*s13*s23^2 + 96*s23^3) + 
              s12^4*s23*(514*s13^3 - 3473*s13^2*s23 + 3348*s13*s23^2 + 
                288*s23^3) + s12^3*(-78*s13^3*s23^2 - 5013*s13^2*s23^3 + 
                4320*s13*s23^4 + 96*s23^5)) + p2q^2*p3q*
             (s12^7*(-24*s13^2 + 82*s13*s23) + 38*s13^2*s23^4*(7*s13^3 + 
                10*s13^2*s23 - 2*s13*s23^2 - 5*s23^3) + s12^6*(-92*s13^3 - 
                998*s13^2*s23 + 268*s13*s23^2 + 96*s23^3) + 2*s12*s13*s23^3*(
                166*s13^4 + 475*s13^3*s23 + 7*s13^2*s23^2 - 317*s13*s23^3 + 
                4*s23^4) + s12^5*(-148*s13^4 + 1519*s13^3*s23 - 3587*s13^2*
                 s23^2 + 464*s13*s23^3 + 240*s23^4) + s12^2*s23^2*(
                -392*s13^5 + 899*s13^4*s23 + 2714*s13^3*s23^2 - 3019*s13^2*
                 s23^3 + 512*s13*s23^4 - 48*s23^5) + s12^3*s23*(-518*s13^5 + 
                490*s13^4*s23 + 6189*s13^3*s23^2 - 6367*s13^2*s23^3 + 
                1174*s13*s23^4 - 48*s23^5) + s12^4*(-80*s13^5 + 113*s13^4*
                 s23 + 5176*s13^3*s23^2 - 6405*s13^2*s23^3 + 948*s13*s23^4 + 
                144*s23^5)) + p2q^3*s13*(2*s12^6*(6*s13^2 - 41*s13*s23 + 
                24*s23^2) - 38*s13^2*s23^3*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 
                3*s23^3) + s12^5*(52*s13^3 + 245*s13^2*s23 - 262*s13*s23^2 + 
                192*s23^3) - 2*s12*s13*s23^2*(17*s13^4 + 65*s13^3*s23 - 
                36*s13^2*s23^2 - 118*s13*s23^3 + 4*s23^4) + s12^4*(80*s13^4 + 
                3*s13^3*s23 + 377*s13^2*s23^2 - 394*s13*s23^3 + 336*s23^4) + 
              s12^2*s23*(44*s13^5 - 184*s13^4*s23 - 483*s13^3*s23^2 + 
                277*s13^2*s23^3 - 180*s13*s23^4 + 96*s23^5) + 
              s12^3*(40*s13^5 + 8*s13^4*s23 - 530*s13^3*s23^2 + 299*s13^2*
                 s23^3 - 386*s13*s23^4 + 288*s23^5)))))/
        (108*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*s23^2*
         (s12 + s23)^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (2*p1q^5*s13*s23^2*(s12 + s23)^2*(147*s12^4 - 
           3*s12^3*(57*s13 - 98*s23) - 122*s13*s23^2*(s13 + s23) - 
           2*s12*s13*s23*(193*s13 + 254*s23) + s12^2*(-318*s13^2 - 
             557*s13*s23 + 147*s23^2)) - p1q^4*s23*(s12 + s23)*
          (p3q*(294*s12^6*s13 + s12^5*s13*(-930*s13 + 1213*s23) + 
             4*s12*s13*s23^3*(819*s13^2 + 935*s13*s23 - 6*s23^2) + 
             244*s13*s23^4*(3*s13^2 + 4*s13*s23 + s23^2) + 
             s12^3*s23*(3474*s13^3 + 5072*s13^2*s23 - 521*s13*s23^2 - 3744*
                s23^3) + s12^2*s23^2*(5342*s13^3 + 7111*s13^2*s23 - 353*s13*
                s23^2 - 1872*s23^3) + s12^4*(636*s13^3 + 35*s13^2*s23 + 483*
                s13*s23^2 - 1872*s23^3)) + 
           p2q*(s12^5*s13*(-294*s13 + 1195*s23) + 3*s12^4*(310*s13^3 + 633*
                s13^2*s23 + 731*s13*s23^2 - 624*s23^3) - 244*s13*s23^3*
              (3*s13^3 + 3*s13^2*s23 - s13*s23^2 - s23^3) - 
             4*s12*s13*s23^2*(529*s13^3 + 563*s13^2*s23 - 82*s13*s23^2 + 6*
                s23^3) + s12^3*(-636*s13^4 + 1420*s13^3*s23 + 4944*s13^2*
                s23^2 + 1777*s13*s23^3 - 3744*s23^4) + s12^2*s23*
              (-2076*s13^4 - 1070*s13^3*s23 + 3075*s13^2*s23^2 + 511*s13*
                s23^3 - 1872*s23^4))) + 
         p3q*(-(p3q^4*s12^2*(s12 + s23)*(72*s12^5*s13 + 3*s12^4*(24*s13^2 + 
                223*s13*s23 - 624*s23^2) - 6*s13*s23^3*(14*s13^2 + 
                281*s13*s23 - 282*s23^2) - 3*s12^3*s23*(503*s13^2 - 
                245*s13*s23 + 1248*s23^2) + s12*s13*s23^2*(-290*s13^2 - 
                3865*s13*s23 + 1509*s23^2) - s12^2*s23*(246*s13^3 + 
                3520*s13^2*s23 + 45*s13*s23^2 + 1872*s23^3))) + 
           2*p2q^4*s13^2*(122*s13^2*s23^4*(s13 + s23) + 
             9*s12^5*(4*s13^2 - 5*s13*s23 + 104*s23^2) + 2*s12*s13*s23^3*
              (82*s13^2 + 315*s13*s23 + 172*s23^2) + 3*s12^2*s23^2*
              (-22*s13^3 + 111*s13^2*s23 + 505*s13*s23^2 + 312*s23^3) + 
             s12^4*(36*s13^3 + 39*s13^2*s23 + 737*s13*s23^2 + 2808*s23^3) + 
             s12^3*s23*(48*s13^3 - 172*s13^2*s23 + 1953*s13*s23^2 + 2808*
                s23^3)) + p2q*p3q^3*s12*(-72*s12^7*s13 + 12*s13^2*s23^4*
              (33*s13^2 + 14*s13*s23 - 19*s23^2) + 9*s12^6*(16*s13^2 - 61*s13*
                s23 + 416*s23^2) + s12^2*s13*s23^2*(216*s13^3 - 7278*s13^2*
                s23 + 3488*s13*s23^2 - 8837*s23^3) + s12*s13*s23^3*
              (822*s13^3 - 2199*s13^2*s23 + 1985*s13*s23^2 - 4252*s23^3) + 
             2*s12^4*s23*(-1336*s13^3 + 2434*s13^2*s23 - 1967*s13*s23^2 + 
               5616*s23^3) + s12^5*(216*s13^3 + 2897*s13^2*s23 - 2480*s13*
                s23^2 + 11232*s23^3) + s12^3*s23*(-250*s13^4 - 7559*s13^3*
                s23 + 3390*s13^2*s23^2 - 6516*s13*s23^3 + 3744*s23^4)) + 
           p2q^2*p3q^2*(-244*s13^3*s23^4*(s13 + s23)^2 + 
             6*s12^7*(36*s13^2 - 17*s13*s23 + 312*s23^2) + 
             2*s12^6*s23*(675*s13^2 - 2998*s13*s23 + 2808*s23^2) - 
             4*s12*s13^2*s23^3*(242*s13^3 + 240*s13^2*s23 + 227*s13*s23^2 + 
               229*s23^3) - s12^5*(216*s13^4 + 2893*s13^3*s23 + 2035*s13^2*
                s23^2 + 16144*s13*s23^3 - 5616*s23^4) + s12^4*s23*
              (1627*s13^4 - 3770*s13^3*s23 - 8617*s13^2*s23^2 - 19140*s13*
                s23^3 + 1872*s23^4) - s12^2*s13*s23^2*(844*s13^4 - 1491*s13^3*
                s23 + 1628*s13^2*s23^2 + 649*s13*s23^3 + 4432*s23^4) - 
             s12^3*s13*s23*(40*s13^4 - 4166*s13^3*s23 + 2561*s13^2*s23^2 + 
               5181*s13*s23^3 + 13322*s23^4)) + p2q^3*p3q*s13*
            (-24*s12^6*(9*s13^2 - 8*s13*s23 + 156*s23^2) + 244*s13^2*s23^3*
              (s13^3 + 2*s13^2*s23 - s23^3) - s12^5*(144*s13^3 + 879*s13^2*
                s23 - 754*s13*s23^2 + 11136*s23^3) + s12^4*(72*s13^4 + 641*
                s13^3*s23 + 3175*s13^2*s23^2 + 1450*s13*s23^3 - 12912*
                s23^4) + s12^3*s23*(-392*s13^4 + 1122*s13^3*s23 + 5991*s13^2*
                s23^2 + 2350*s13*s23^3 - 7392*s23^4) + 4*s12*s13*s23^2*
              (82*s13^4 + 76*s13^3*s23 + 80*s13^2*s23^2 - 147*s13*s23^3 - 172*
                s23^4) + s12^2*s23*(44*s13^5 - 928*s13^4*s23 + 337*s13^3*
                s23^2 + 2289*s13^2*s23^3 + 774*s13*s23^4 - 1872*s23^5))) - 
         p1q^3*s23*(p3q^2*(s12 + s23)*(1137*s12^6*s13 + 4*s12*s13*s23^3*
              (933*s13^2 + 883*s13*s23 - 111*s23^2) + 244*s13*s23^4*
              (3*s13^2 + 5*s13*s23 + 2*s23^2) + s12^5*(-4653*s13^2 + 7102*s13*
                s23 + 3744*s23^2) + s12^2*s23^2*(7482*s13^3 + 7233*s13^2*
                s23 + 4519*s13*s23^2 - 3744*s23^3) + s12^3*s23*
              (6292*s13^3 + 2545*s13^2*s23 + 11198*s13*s23^2 - 3744*s23^3) + 
             3*s12^4*(550*s13^3 - 2023*s13^2*s23 + 3904*s13*s23^2 + 1248*
                s23^3)) + p2q*p3q*(273*s12^7*s13 + s12^6*(-2888*s13^2 + 7693*
                s13*s23 + 3744*s23^2) - 244*s13*s23^4*(8*s13^3 + 11*s13^2*
                s23 + s13*s23^2 - 2*s23^3) - 4*s12*s13*s23^3*
              (2038*s13^3 + 2149*s13^2*s23 + 89*s13*s23^2 + 161*s23^3) + 
             s12^5*(5521*s13^3 - 119*s13^2*s23 + 23330*s13*s23^2 + 5616*
                s23^3) + s12^3*s23*(-9460*s13^4 + 7105*s13^3*s23 + 24279*
                s13^2*s23^2 + 26001*s13*s23^3 - 13104*s23^4) + 
             s12^2*s23^2*(-13142*s13^4 - 7174*s13^3*s23 + 9289*s13^2*s23^2 + 
               6677*s13*s23^3 - 5616*s23^4) + s12^4*(-2478*s13^4 + 13648*
                s13^3*s23 + 17647*s13^2*s23^2 + 34102*s13*s23^3 - 5616*
                s23^4)) + p2q^2*(732*s13^2*(s13 - s23)*s23^3*(s13 + s23)^2 + 
             s12^6*s13*(-481*s13 + 1770*s23) + s12^5*(1175*s13^3 - 425*s13^2*
                s23 + 5140*s13*s23^2 - 1872*s23^3) + s12^4*(-1396*s13^4 + 706*
                s13^3*s23 + 2775*s13^2*s23^2 + 7808*s13*s23^3 - 5616*s23^4) + 
             4*s12*s13*s23^2*(479*s13^4 + 364*s13^3*s23 - 368*s13^2*s23^2 - 
               425*s13*s23^3 - 172*s23^4) + s12^3*(668*s13^5 - 3024*s13^4*
                s23 - 2361*s13^3*s23^2 + 3753*s13^2*s23^3 + 6588*s13*s23^4 - 
               5616*s23^5) + 2*s12^2*s23*(906*s13^5 - 432*s13^4*s23 - 1436*
                s13^3*s23^2 + 33*s13^2*s23^3 + 731*s13*s23^4 - 936*s23^5))) - 
         p1q^2*(p3q^3*(s12 + s23)*(72*s12^7*s13 + 244*s13*s23^5*
              (s13 + s23)^2 + 9*s12^6*(8*s13^2 + 229*s13*s23 - 208*s23^2) + 
             68*s12*s13*s23^4*(25*s13^2 + 13*s13*s23 - 12*s23^2) + 
             s12^5*s23*(-8025*s13^2 + 10124*s13*s23 + 3744*s23^2) + 
             s12^2*s23^3*(4486*s13^3 - 33*s13^2*s23 + 10613*s13*s23^2 - 1872*
                s23^3) + s12^3*s23^2*(4416*s13^3 - 8167*s13^2*s23 + 21940*s13*
                s23^2 + 3744*s23^3) + s12^4*s23*(1146*s13^3 - 14395*s13^2*
                s23 + 18402*s13*s23^2 + 11232*s23^3)) + 
           p2q*p3q^2*(72*s12^8*s13 - 3*s12^7*(24*s13^2 - 365*s13*s23 + 624*
                s23^2) - 244*s13*s23^5*(7*s13^3 + 12*s13^2*s23 + 4*s13*
                s23^2 - s23^3) - 4*s12*s13*s23^4*(2039*s13^3 + 2070*s13^2*
                s23 + 457*s13*s23^2 + 487*s23^3) + s12^6*(-144*s13^3 - 7389*
                s13^2*s23 + 16249*s13*s23^2 + 5616*s23^3) + 
             s12^5*s23*(11254*s13^3 - 8869*s13^2*s23 + 48302*s13*s23^2 + 
               24336*s23^3) + s12^3*s13*s23^2*(-11000*s13^3 + 20628*s13^2*
                s23 + 21197*s13*s23^2 + 61847*s23^3) + s12^2*s23^3*
              (-14530*s13^4 - 2477*s13^3*s23 + 6314*s13^2*s23^2 + 18113*s13*
                s23^3 - 3744*s23^4) + s12^4*s23*(-2798*s13^4 + 28431*s13^3*
                s23 + 12479*s13^2*s23^2 + 74618*s13*s23^3 + 20592*s23^4)) + 
           p2q^2*p3q*(-6*s12^7*s13*(24*s13 - 17*s23) - 
             4*s12^6*(18*s13^3 + 529*s13^2*s23 - 2408*s13*s23^2 - 936*
                s23^3) + 244*s13^2*s23^4*(7*s13^3 + 10*s13^2*s23 - 2*s13*
                s23^2 - 5*s23^3) + 4*s12*s13*s23^3*(1200*s13^4 + 1040*s13^3*
                s23 - 111*s13^2*s23^2 - 356*s13*s23^3 - 344*s23^4) + 
             s12^4*s23*(-4797*s13^4 + 4212*s13^3*s23 + 11063*s13^2*s23^2 + 
               46564*s13*s23^3 + 5616*s23^4) + s12^5*(72*s13^4 + 4845*s13^3*
                s23 - 511*s13^2*s23^2 + 30552*s13*s23^3 + 9360*s23^4) + 
             s12^2*s23^2*(4468*s13^5 - 4213*s13^4*s23 - 5630*s13^3*s23^2 + 
               2757*s13^2*s23^3 + 11196*s13*s23^4 - 1872*s23^5) + 
             s12^3*s23*(1376*s13^5 - 10762*s13^4*s23 - 5179*s13^3*s23^2 + 
               12563*s13^2*s23^3 + 38114*s13*s23^4 - 1872*s23^5)) + 
           p2q^3*s13*(6*s12^6*(12*s13^2 - 17*s13*s23 + 312*s23^2) - 
             244*s13^2*s23^3*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             3*s12^4*s23*(-215*s13^3 - 507*s13^2*s23 + 578*s13*s23^2 + 4304*
                s23^3) + s12^5*(72*s13^3 + 653*s13^2*s23 - 446*s13*s23^2 + 
               7392*s23^3) - 4*s12*s13*s23^2*(82*s13^4 - 6*s13^3*s23 - 307*
                s13^2*s23^2 - 685*s13*s23^3 - 344*s23^4) + 
             s12^3*s23*(488*s13^4 - 1422*s13^3*s23 - 3517*s13^2*s23^2 + 4142*
                s13*s23^3 + 11136*s23^4) + s12^2*s23*(-44*s13^5 + 796*s13^4*
                s23 - 369*s13^3*s23^2 + 113*s13^2*s23^3 + 3440*s13*s23^4 + 
               3744*s23^5))) + p1q*(2*p2q^4*s13^2*
            (122*s13^2*s23^4*(s13 + s23) + 9*s12^5*(4*s13^2 - 5*s13*s23 + 104*
                s23^2) + 2*s12*s13*s23^3*(82*s13^2 + 315*s13*s23 + 172*
                s23^2) + 3*s12^2*s23^2*(-22*s13^3 + 111*s13^2*s23 + 505*s13*
                s23^2 + 312*s23^3) + s12^4*(36*s13^3 + 39*s13^2*s23 + 737*s13*
                s23^2 + 2808*s23^3) + s12^3*s23*(48*s13^3 - 172*s13^2*s23 + 
               1953*s13*s23^2 + 2808*s23^3)) - p3q^4*s12*(s12 + s23)*
            (144*s12^6*s13 + s12^4*s23*(-5811*s13^2 + 5264*s13*s23 - 3744*
                s23^2) + 3*s12^5*(48*s13^2 + 629*s13*s23 - 1248*s23^2) + 
             12*s13*s23^4*(19*s13^2 - 14*s13*s23 - 33*s23^2) + 
             s12*s13*s23^3*(854*s13^2 - 3971*s13*s23 + 7727*s23^2) + 
             3*s12^3*s23*(-38*s13^3 - 4051*s13^2*s23 + 2670*s13*s23^2 + 1248*
                s23^3) + s12^2*s23^2*(672*s13^3 - 10961*s13^2*s23 + 12612*s13*
                s23^2 + 3744*s23^3)) + p2q*p3q^3*(-144*s12^8*s13 + 
             488*s13^2*s23^5*(s13 + s23)^2 + 3*s12^7*(72*s13^2 - 457*s13*
                s23 + 1872*s23^2) + s12^2*s13*s23^3*(6402*s13^3 - 3574*s13^2*
                s23 + 1557*s13*s23^2 - 16175*s23^3) + 4*s12*s13*s23^4*
              (812*s13^3 + 709*s13^2*s23 + 168*s13*s23^2 + 271*s23^3) + 
             3*s12^6*(120*s13^3 + 2564*s13^2*s23 - 4077*s13*s23^2 + 3120*
                s23^3) - s12^5*s23*(9335*s13^3 - 12013*s13^2*s23 + 32294*s13*
                s23^2 + 5616*s23^3) + s12^4*s23*(706*s13^4 - 24692*s13^3*
                s23 + 1715*s13^2*s23^2 - 51002*s13*s23^3 - 16848*s23^4) - 
             s12^3*s23^2*(-4468*s13^4 + 21151*s13^3*s23 + 1449*s13^2*s23^2 + 
               46971*s13*s23^3 + 7488*s23^4)) + 2*p2q^3*p3q*s13*
            (-3*s12^6*(48*s13^2 - 49*s13*s23 + 640*s23^2) + 
             122*s13^2*s23^3*(2*s13^3 + 3*s13^2*s23 - 3*s13*s23^2 - 4*
                s23^3) - 2*s12^5*(54*s13^3 + 383*s13^2*s23 - 1188*s13*s23^2 + 
               2856*s23^3) + s12^4*(36*s13^4 + 643*s13^3*s23 + 3236*s13^2*
                s23^2 + 5186*s13*s23^3 - 7584*s23^4) + 2*s12^3*s23*
              (-220*s13^4 + 636*s13^3*s23 + 3265*s13^2*s23^2 + 2216*s13*
                s23^3 - 2856*s23^4) + 2*s12*s13*s23^2*(164*s13^4 + 70*s13^3*
                s23 - 227*s13^2*s23^2 - 832*s13*s23^3 - 516*s23^4) + 
             s12^2*s23*(44*s13^5 - 862*s13^4*s23 + 353*s13^3*s23^2 + 1976*
                s13^2*s23^3 + 443*s13*s23^4 - 1920*s23^5)) + 
           p2q^2*p3q^2*(12*s12^7*(30*s13^2 - 17*s13*s23 + 156*s23^2) - 
             244*s13^2*s23^4*(5*s13^3 + 9*s13^2*s23 + 2*s13*s23^2 - 2*
                s23^3) + s12^6*(72*s13^3 + 2985*s13^2*s23 - 12082*s13*s23^2 + 
               1872*s23^3) + 2*s12^2*s13*s23^2*(-1750*s13^4 + 2420*s13^3*
                s23 + 1453*s13^2*s23^2 + 106*s13*s23^3 - 6195*s23^4) - 
             4*s12*s13*s23^3*(963*s13^4 + 916*s13^3*s23 + 484*s13^2*s23^2 + 
               298*s13*s23^3 - 172*s23^4) - s12^5*(288*s13^4 + 6563*s13^3*
                s23 - 1603*s13^2*s23^2 + 34452*s13*s23^3 + 5616*s23^4) - 
             s12^4*s23*(-5028*s13^4 + 5500*s13^3*s23 + 6249*s13^2*s23^2 + 
               47240*s13*s23^3 + 9360*s23^4) - s12^3*s23*(748*s13^5 - 11904*
                s13^4*s23 - 3809*s13^3*s23^2 + 3335*s13^2*s23^3 + 37744*s13*
                s23^4 + 3744*s23^5))))/(216*(p1q + p3q)^2*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(s12 + s23)^2*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((-2*p1q^4*s13*s23*(s12 + s13 + s23) + 
          p3q*(-2*p2q^3*s13*(s12 + s13 + s23)*(s13 + 24*s23) + 
            p3q^3*(6*s13*s23*(s13 + 2*s23) + 15*s12*s13*(s13 + 5*s23) + 
              s12^2*(19*s13 + 48*s23)) + p2q*p3q^2*(s12*s13*(-4*s13 + 
                71*s23) + s12^2*(19*s13 + 96*s23) - 3*s13*(5*s13^2 + 
                21*s13*s23 + 12*s23^2)) + p2q^2*p3q*(2*s12^2*(s13 + 24*s23) - 
              s12*s13*(17*s13 + 50*s23) - 3*s13*(5*s13^2 + 39*s13*s23 + 
                32*s23^2))) + p1q^3*(p2q*(2*s13^3 + 5*s13^2*s23 + 
              57*s13*s23^2 + 48*s23^3 + s12*s13*(-2*s13 + 5*s23)) + 
            p3q*(2*s12^2*s13 - s12*s13*(2*s13 + 7*s23) + s23*(-11*s13^2 + 
                43*s13*s23 + 48*s23^2))) + 
          p1q^2*(-(p2q^2*(3*s13^3 + 55*s13^2*s23 - 2*s13*s23^2 - 48*s23^3 + 
               s12*s13*(7*s13 + 50*s23))) + 3*p3q^2*(7*s12^2*s13 + 
              s12*(3*s13^2 + 5*s13*s23 - 32*s23^2) + 2*s23*(-2*s13^2 + 
                9*s13*s23 + 8*s23^2)) + p2q*p3q*(7*s12^2*s13 - 9*s13^3 - 
              59*s13^2*s23 + 70*s13*s23^2 + 96*s23^3 - s12*(18*s13^2 + 
                35*s13*s23 + 96*s23^2))) - p1q*(2*p2q^3*s13*(s12 + s13 + s23)*
             (s13 + 24*s23) - p3q^3*(3*s13*s23*(s13 + 7*s23) + 
              s12^2*(38*s13 + 48*s23) + s12*(26*s13^2 + 95*s13*s23 - 
                96*s23^2)) + 2*p2q^2*p3q*(-(s12^2*s13) + 2*s12*(6*s13^2 + 
                49*s13*s23 + 24*s23^2) + s13*(9*s13^2 + 110*s13*s23 + 
                95*s23^2)) + p2q*p3q^2*(-2*s12^2*(13*s13 + 24*s23) + 
              s13*(26*s13^2 + 175*s13*s23 + 119*s23^2) + s12*(20*s13^2 + 
                65*s13*s23 + 192*s23^2))))*den[-3 + 2*ep])/
        (24*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23) + 
       nl*(-1/9*(ep^2*(p2q*s13*(s12 + s13 - s23) + p1q*s23*(s12 - s13 + 
               s23) - p3q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))/
           ((p1q + p2q + p3q)*s13*s23) + 
         (ep*(-2*p2q^3*s13*(s12 + s13 + s23) - 2*p1q^3*s23*(s12 + s13 + 
              s23) + p2q^2*p3q*(2*s12^2 - 5*s12*s13 - 3*s13^2 - 2*s12*s23 - 
              17*s13*s23) + p2q*p3q^2*(7*s12^2 - 4*s12*s13 - 3*s13^2 + 
              11*s12*s23 - 19*s13*s23 + 12*s23^2) + 
            p3q^3*(7*s12^2 + 3*s12*(s13 + 5*s23) + 2*s23*(-s13 + 6*s23)) + 
            p1q^2*(p3q*(2*s12^2 - 2*s12*s13 + 7*s12*s23 - 5*s13*s23 + 
                9*s23^2) + p2q*(-2*s12*s13 + 2*s13^2 + 9*s12*s23 + s13*s23 + 
                13*s23^2)) + p1q*(p2q^2*(-3*s12*s13 + s13^2 - 2*s12*s23 - 
                11*s13*s23 + 2*s23^2) + p3q^2*(7*s12^2 - s12*s13 + 
                20*s12*s23 - 7*s13*s23 + 21*s23^2) + p2q*p3q*(3*s12^2 - 
                8*s12*s13 + s13^2 + 16*s12*s23 - 16*s13*s23 + 25*s23^2))))/
          (18*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) + 
         (2*p1q^4*s13*s23*(s12 + s13 + s23) - 
           p1q^3*(p2q*(2*s13^3 + s13^2*s23 - 35*s13*s23^2 - 48*s23^3 + s12*
                s13*(-2*s13 + 9*s23)) + p3q*(2*s12^2*s13 + s12*s13*
                (-2*s13 + 13*s23) + s23*(s13^2 - 33*s13*s23 - 48*s23^2))) + 
           p1q^2*(-(p2q^2*(s13^3 + 37*s13^2*s23 + 2*s13*s23^2 - 48*s23^3 + 
                s12*s13*(-3*s13 + 46*s23))) - p3q^2*(s12^2*s13 - 2*s23*
                (-2*s13^2 + s13*s23 + 24*s23^2) + s12*(-11*s13^2 + 
                 35*s13*s23 + 96*s23^2)) - p2q*p3q*(3*s12^2*s13 + 11*s13^3 + 
               49*s13^2*s23 - 2*s13*s23^2 - 96*s23^3 + s12*(-2*s13^2 + 
                 81*s13*s23 + 96*s23^2))) + p3q*(2*p2q^3*s13*(s13 - 24*s23)*
              (s12 + s13 + s23) + p3q^3*(2*s13*(s13 - 6*s23)*s23 + s12*s13*
                (5*s13 + 41*s23) + s12^2*(s13 + 48*s23)) + 
             p2q*p3q^2*(s12*s13*(4*s13 + 45*s23) + s12^2*(s13 + 96*s23) - s13*
                (5*s13^2 + 37*s13*s23 + 60*s23^2)) - p2q^2*p3q*
              (2*s12^2*(s13 - 24*s23) + s12*s13*(3*s13 + 46*s23) + s13*
                (5*s13^2 + 87*s13*s23 + 96*s23^2))) + 
           p1q*(2*p2q^3*s13*(s13 - 24*s23)*(s12 + s13 + s23) + 
             p3q^3*(s13*(s13 - 41*s23)*s23 + 2*s12^2*(s13 + 24*s23) + s12*
                (14*s13^2 + 21*s13*s23 - 96*s23^2)) - 2*p2q^2*p3q*
              (s12^2*s13 + 2*s12*s23*(47*s13 + 24*s23) + s13*(3*s13^2 + 
                 86*s13*s23 + 97*s23^2)) - p2q*p3q^2*(2*s12^2*(s13 - 
                 24*s23) + 7*s13*(2*s13^2 + 19*s13*s23 + 27*s23^2) + s12*
                (-4*s13^2 + 123*s13*s23 + 192*s23^2))))/(36*(p1q + p3q)^2*
           (p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23) + 
         ((-2*p1q^4*s13*s23*(s12 + s13 + s23) + 
            p3q*(-2*p2q^3*s13*(s12 + s13 + s23)*(s13 + 24*s23) + 
              p3q^3*(6*s13*s23*(s13 + 2*s23) + 15*s12*s13*(s13 + 5*s23) + 
                s12^2*(19*s13 + 48*s23)) + p2q*p3q^2*(s12*s13*(-4*s13 + 
                  71*s23) + s12^2*(19*s13 + 96*s23) - 3*s13*(5*s13^2 + 
                  21*s13*s23 + 12*s23^2)) + p2q^2*p3q*(2*s12^2*(s13 + 
                  24*s23) - s12*s13*(17*s13 + 50*s23) - 3*s13*(5*s13^2 + 
                  39*s13*s23 + 32*s23^2))) + p1q^3*(p2q*(2*s13^3 + 
                5*s13^2*s23 + 57*s13*s23^2 + 48*s23^3 + s12*s13*(-2*s13 + 
                  5*s23)) + p3q*(2*s12^2*s13 - s12*s13*(2*s13 + 7*s23) + 
                s23*(-11*s13^2 + 43*s13*s23 + 48*s23^2))) + 
            p1q^2*(-(p2q^2*(3*s13^3 + 55*s13^2*s23 - 2*s13*s23^2 - 48*s23^3 + 
                 s12*s13*(7*s13 + 50*s23))) + 3*p3q^2*(7*s12^2*s13 + 
                s12*(3*s13^2 + 5*s13*s23 - 32*s23^2) + 2*s23*(-2*s13^2 + 
                  9*s13*s23 + 8*s23^2)) + p2q*p3q*(7*s12^2*s13 - 9*s13^3 - 
                59*s13^2*s23 + 70*s13*s23^2 + 96*s23^3 - s12*(18*s13^2 + 
                  35*s13*s23 + 96*s23^2))) - p1q*(2*p2q^3*s13*(s12 + s13 + 
                s23)*(s13 + 24*s23) - p3q^3*(3*s13*s23*(s13 + 7*s23) + 
                s12^2*(38*s13 + 48*s23) + s12*(26*s13^2 + 95*s13*s23 - 
                  96*s23^2)) + 2*p2q^2*p3q*(-(s12^2*s13) + 2*s12*(6*s13^2 + 
                  49*s13*s23 + 24*s23^2) + s13*(9*s13^2 + 110*s13*s23 + 
                  95*s23^2)) + p2q*p3q^2*(-2*s12^2*(13*s13 + 24*s23) + 
                s13*(26*s13^2 + 175*s13*s23 + 119*s23^2) + s12*(20*s13^2 + 
                  65*s13*s23 + 192*s23^2))))*den[-3 + 2*ep])/
          (36*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23)))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     ((ep^3*(p1q*s23*(s12*s23*(-9*s13 + 20*s23) + s12^2*(s13 + 20*s23) - 
            s13*(s13^2 + 7*s13*s23 - 10*s23^2)) + 
          p2q*s13*(s12^2*(s13 + 20*s23) + s12*(2*s13^2 + 27*s13*s23 - 
              20*s23^2) + s13*(s13^2 + 7*s13*s23 - 10*s23^2)) - 
          p3q*(4*s13^2*s23*(s13 + 5*s23) + s12^3*(s13 + 20*s23) + 
            s12^2*(2*s13^2 + 31*s13*s23 + 20*s23^2) + 
            s12*s13*(s13^2 + 15*s13*s23 + 50*s23^2))))/(27*(p1q + p2q + p3q)*
         s13^2*(s12 + s13)*s23) - 
       (ep^2*(2*p1q^4*s13*s23^2*(s12^4 + s13^2*s23*(s13 + s23) + 
            s12^3*(4*s13 + s23) + s12*s13^2*(2*s13 + 3*s23) + 
            s12^2*s13*(5*s13 + 3*s23)) - (p2q + p3q)*(s12 + s13)*
           (2*p2q^3*s13^2*(s12^4 + s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 
                s23) + s12*s13*s23*(3*s13 + 2*s23) + s12^2*s13*(s13 + 
                3*s23)) + p2q^2*p3q*s13*(-2*s12^5 + 2*s13^3*(s13 + s23)^2 + 
              s12^4*(-17*s13 + 122*s23) + s12^3*(-24*s13^2 + 181*s13*s23 - 
                40*s23^2) + 2*s12*s13^2*(s13^2 + 3*s13*s23 + 2*s23^2) - 
              3*s12^2*s13*(3*s13^2 - 21*s13*s23 + 10*s23^2)) - 
            p3q^3*s12^2*(3*s12^3*(s13 + 40*s23) + 2*s13^2*(9*s13^2 - 
                7*s13*s23 + 33*s23^2) + 3*s12^2*(10*s13^2 + 51*s13*s23 + 
                40*s23^2) + s12*s13*(45*s13^2 + 21*s13*s23 + 194*s23^2)) - 
            p2q*p3q^2*s12^2*(3*s12^3*(s13 + 40*s23) + s13^2*(21*s13^2 - 
                79*s13*s23 + 96*s23^2) + s12^2*(39*s13^2 + 29*s13*s23 + 
                120*s23^2) + s12*s13*(57*s13^2 - 166*s13*s23 + 234*s23^2))) + 
          p1q*(p3q^3*s12^2*(s12^4*(3*s13 + 100*s23) + s12^3*(33*s13^2 + 
                129*s13*s23 - 160*s23^2) + s12*s13*(55*s13^3 - 225*s13^2*
                 s23 + 79*s13*s23^2 - 406*s23^3) + s12^2*(71*s13^3 - 
                121*s13^2*s23 - 148*s13*s23^2 - 260*s23^3) + 
              s13^2*(14*s13^3 - 75*s13^2*s23 + 69*s13*s23^2 - 136*s23^3)) + 
            p2q^3*s13*(17*s12^5*(s13 - 6*s23) + s12^4*(47*s13^2 - 
                239*s13*s23 + 42*s23^2) + s12^3*(43*s13^3 - 172*s13^2*s23 + 
                76*s13*s23^2 - 20*s23^3) + s12^2*s13*(11*s13^3 - 
                35*s13^2*s23 + 46*s13*s23^2 - 16*s23^3) - 2*s12*s13^2*(
                2*s13^3 + s13^2*s23 - 9*s13*s23^2 - 6*s23^3) - 
              2*s13^3*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3)) + 
            p2q*p3q^2*(4*s13^4*s23*(s13 + s23)^2 + 2*s12^6*(s13 + 100*s23) + 
              s12^5*(63*s13^2 + 155*s13*s23 - 200*s23^2) + s12^3*s13*(
                133*s13^3 - 611*s13^2*s23 + 436*s13*s23^2 - 680*s23^3) + 
              s12^4*(155*s13^3 - 478*s13^2*s23 + 21*s13*s23^2 - 400*s23^3) + 
              s12^2*s13^2*(43*s13^3 - 170*s13^2*s23 + 227*s13*s23^2 - 
                254*s23^3) + 4*s12*s13^3*(s13^3 + 3*s13^2*s23 + 4*s13*s23^2 + 
                2*s23^3)) + p2q^2*p3q*(-(s12^6*(s13 - 100*s23)) + 
              s12^5*(47*s13^2 - 78*s13*s23 - 40*s23^2) + 2*s12*s13^3*s23*(
                6*s13^2 + 17*s13*s23 + 10*s23^2) + s12^3*s13*(121*s13^3 - 
                574*s13^2*s23 + 425*s13*s23^2 - 294*s23^3) + 
              s12^4*(131*s13^3 - 606*s13^2*s23 + 209*s13*s23^2 - 140*s23^3) + 
              2*s12^2*s13^2*(20*s13^3 - 69*s13^2*s23 + 98*s13*s23^2 - 
                67*s23^3) + 2*s13^4*(-s13^3 + 2*s13^2*s23 + 8*s13*s23^2 + 
                5*s23^3))) + p1q^3*s23*(p2q*(-2*s12^5*s13 + s12^4*(-8*s13^2 + 
                75*s13*s23 + 100*s23^2) - 2*s12*s13^2*(4*s13^3 + 
                8*s13^2*s23 + s13*s23^2 - s23^3) + 2*s13^2*s23*(-3*s13^3 - 
                3*s13^2*s23 + s13*s23^2 + s23^3) + s12^3*(-14*s13^3 + 
                110*s13^2*s23 + 65*s13*s23^2 + 80*s23^3) + s12^2*(-16*s13^4 + 
                25*s13^3*s23 - 11*s13^2*s23^2 + 32*s13*s23^3 - 20*s23^4)) + 
            p3q*(-4*s12^5*s13 + s12^4*(-14*s13^2 + 77*s13*s23 + 100*s23^2) + 
              2*s13^2*s23*(-s13^3 + 2*s13*s23^2 + s23^3) + 2*s12*s13^2*(
                -2*s13^3 - 2*s13^2*s23 + 2*s13*s23^2 + s23^3) + 
              s12^3*(-16*s13^3 + 118*s13^2*s23 + 69*s13*s23^2 + 80*s23^3) + 
              s12^2*(-10*s13^4 + 39*s13^3*s23 - 3*s13^2*s23^2 + 
                32*s13*s23^3 - 20*s23^4))) - 
          p1q^2*(p3q^2*(-2*s12^6*s13 + 2*s13^3*s23^2*(s13 + s23)^2 + 
              s12^5*(-6*s13^2 + 82*s13*s23 + 200*s23^2) + 2*s12*s13^2*s23*(
                2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
              s12^4*(-2*s13^3 + 233*s13^2*s23 + 201*s13*s23^2 + 40*s23^3) + 
              s12^3*(6*s13^4 + 214*s13^3*s23 - 63*s13^2*s23^2 + 
                157*s13*s23^3 - 160*s23^4) + s12^2*s13*(4*s13^4 + 
                67*s13^3*s23 - 60*s13^2*s23^2 + 83*s13*s23^3 - 92*s23^4)) + 
            p2q*p3q*(-2*s12^6*s13 + s12^5*(-4*s13^2 + 157*s13*s23 + 
                300*s23^2) + 2*s13^3*s23*(-2*s13^3 + s13^2*s23 + 
                7*s13*s23^2 + 4*s23^3) + s12^4*(4*s13^3 + 433*s13^2*s23 + 
                266*s13*s23^2 + 120*s23^3) + s12^3*(8*s13^4 + 383*s13^3*s23 - 
                152*s13^2*s23^2 + 315*s13*s23^3 - 180*s23^4) + 
              s12^2*s13*(-2*s13^4 + 107*s13^3*s23 - 112*s13^2*s23^2 + 
                151*s13*s23^3 - 132*s23^4) + 2*s12*s13^2*(-2*s13^4 - 
                2*s13^3*s23 + 6*s13^2*s23^2 + 9*s13*s23^3 + 4*s23^4)) + 
            p2q^2*(-6*s13^3*(s13 - s23)*s23*(s13 + s23)^2 + s12^5*(2*s13^2 + 
                79*s13*s23 + 100*s23^2) + s12^4*(6*s13^3 + 216*s13^2*s23 + 
                67*s13*s23^2 + 80*s23^3) + s12^3*(2*s13^4 + 187*s13^3*s23 - 
                81*s13^2*s23^2 + 156*s13*s23^3 - 20*s23^4) - 2*s12*s13^2*(
                2*s13^4 + 7*s13^3*s23 + 2*s13^2*s23^2 - 6*s13*s23^3 - 
                3*s23^4) - 2*s12^2*s13*(3*s13^4 - 21*s13^3*s23 + 
                24*s13^2*s23^2 - 33*s13*s23^3 + 20*s23^4)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)*
         s23*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (2*p1q^4*(p2q + p3q)*s23^2*(20*s13^2*s23^2*(s13 + s23) + 
           s12*s13^2*s23*(43*s13 + 63*s23) + s12^3*(234*s13^2 - 7*s13*s23 + 
             6*s23^2) + s12^2*(234*s13^3 + 270*s13^2*s23 - s13*s23^2 + 
             6*s23^3)) + (p2q + p3q)^2*(-2*p3q^3*s12^2*(6*s12^4*s23 + 
             s12^3*(-234*s13^2 + 39*s13*s23 + 6*s23^2) + s12*s13*s23*
              (-37*s13^2 - 106*s13*s23 + 20*s23^2) + s13^2*s23*
              (137*s13^2 - 31*s13*s23 + 20*s23^2) - s12^2*s13*
              (234*s13^2 + 135*s13*s23 + 73*s23^2)) - p2q^3*s13^2*s23*
            (-39*s12^4 + 40*s13^2*s23*(s13 + s23) + s12^3*(-78*s13 + 48*
                s23) + 2*s12*s13*s23*(83*s13 + 63*s23) + 
             s12^2*(-39*s13^2 + 174*s13*s23 + 87*s23^2)) - 
           2*p2q*p3q^2*s12*s13*(27*s12^4*s23 - 40*s13^3*s23*(s13 + s23) + 
             2*s12^3*(234*s13^2 + 103*s13*s23 - 81*s23^2) + 
             s12*s13*s23*(274*s13^2 + s13*s23 + 63*s23^2) + 
             s12^2*(468*s13^3 + 481*s13^2*s23 - 119*s13*s23^2 + 63*s23^3)) - 
           p2q^2*p3q*s13*(39*s12^5*s23 + 6*s12^4*(41*s13 - 21*s23)*s23 + 
             40*s13^3*s23*(s13 + s23)^2 - 6*s12*s13^2*s23*(s13^2 - 20*s13*
                s23 - 21*s23^2) + s12^3*(-468*s13^3 + 17*s13^2*s23 + 44*s13*
                s23^2 + 87*s23^3) + 2*s12^2*s13*(-234*s13^3 - 112*s13^2*s23 + 
               107*s13*s23^2 + 87*s23^3))) - p1q^3*s23*
          (p2q^2*(3*s12^4*(156*s13^2 - 5*s13*s23 + 4*s23^2) + 
             s12^2*s13*(936*s13^3 + 519*s13^2*s23 - 422*s13*s23^2 - 77*
                s23^3) + 40*s13*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - 
               s23^3) + 2*s12^3*(462*s13^3 + 34*s13^2*s23 + 43*s13*s23^2 + 6*
                s23^3) + 2*s12*s13*s23*(86*s13^3 + 123*s13^2*s23 + 20*s13*
                s23^2 + 23*s23^3)) + p3q^2*(s12^4*(936*s13^2 - 29*s13*s23 + 
               36*s23^2) + 40*s13*s23^2*(s13^3 - 2*s13*s23^2 - s23^3) + 
             2*s12^3*(462*s13^3 + 77*s13^2*s23 + 24*s13*s23^2 + 12*s23^3) + 
             2*s12*s13*s23*(43*s13^3 + 40*s13^2*s23 + 23*s23^3) + 
             s12^2*(468*s13^4 - 403*s13^3*s23 - 838*s13^2*s23^2 - 137*s13*
                s23^3 - 12*s23^4)) + 2*p2q*p3q*(s12^4*(474*s13^2 - 22*s13*
                s23 + 24*s23^2) + 20*s13*s23^2*(4*s13^3 + 3*s13^2*s23 - 3*s13*
                s23^2 - 2*s23^3) + s12^3*(468*s13^3 - 345*s13^2*s23 + 67*s13*
                s23^2 + 18*s23^3) + s12*s13*s23*(129*s13^3 + 163*s13^2*s23 + 
               20*s13*s23^2 + 46*s23^3) + s12^2*(474*s13^4 - 398*s13^3*s23 - 
               858*s13^2*s23^2 - 107*s13*s23^3 - 6*s23^4))) - 
         p1q^2*(p3q^3*(40*s13^2*s23^3*(s13 + s23)^2 - 
             3*s12^5*(156*s13^2 - 5*s13*s23 + 12*s23^2) - 4*s12^4*s13*
              (117*s13^2 - 331*s13*s23 + 26*s23^2) + 2*s12^2*s13*s23*
              (511*s13^3 + 99*s13^2*s23 - 93*s13*s23^2 - 119*s23^3) + 
             s12^3*s23*(1359*s13^3 + 1396*s13^2*s23 + 351*s13*s23^2 + 36*
                s23^3) + 2*s12*s13*s23^2*(43*s13^3 + 40*s13^2*s23 + 57*s13*
                s23^2 + 60*s23^3)) + p2q^3*s13*(3*s12^4*(151*s13 - 26*s23)*
              s23 - 120*s13*(s13 - s23)*s23^2*(s13 + s23)^2 + 
             s12^3*(-468*s13^3 + 536*s13^2*s23 + 292*s13*s23^2 + 126*s23^3) + 
             s12^2*(-468*s13^4 + 489*s13^3*s23 + 644*s13^2*s23^2 - 211*s13*
                s23^3 - 174*s23^4) + 2*s12*s23*(-43*s13^4 - 57*s13^3*s23 - 40*
                s13^2*s23^2 + 37*s13*s23^3 + 63*s23^4)) + 
           p2q*p3q^2*(-6*s12^5*(78*s13^2 - 5*s13*s23 + 10*s23^2) + 
             s12^2*s13*s23*(3025*s13^3 + 504*s13^2*s23 - 1323*s13*s23^2 - 664*
                s23^3) + s12^4*(468*s13^3 + 2657*s13^2*s23 - 298*s13*s23^2 - 
               12*s23^3) + 40*s13^2*s23^2*(-2*s13^3 + 2*s13^2*s23 + 9*s13*
                s23^2 + 5*s23^3) + 2*s12^3*(468*s13^4 + 1651*s13^3*s23 + 754*
                s13^2*s23^2 + 383*s13*s23^3 + 24*s23^4) + 2*s12*s13*s23*
              (-43*s13^4 + 89*s13^3*s23 + 77*s13^2*s23^2 + 108*s13*s23^3 + 
               183*s23^4)) + p2q^2*p3q*(3*s12^5*(5*s13 - 8*s23)*s23 - 
             40*s13^2*s23^2*(5*s13^3 + 2*s13^2*s23 - 10*s13*s23^2 - 7*
                s23^3) + 2*s12^4*(468*s13^3 + 1121*s13^2*s23 - 136*s13*
                s23^2 - 6*s23^3) - 2*s12*s13*s23*(86*s13^4 + 11*s13^3*s23 + 3*
                s13^2*s23^2 - 88*s13*s23^3 - 186*s23^4) + 
             s12^3*(468*s13^4 + 3391*s13^3*s23 + 1316*s13^2*s23^2 + 541*s13*
                s23^3 + 12*s23^4) - 2*s12^2*s13*(234*s13^4 - 1474*s13^3*s23 - 
               931*s13^2*s23^2 + 446*s13*s23^3 + 300*s23^4))) + 
         p1q*(-2*p3q^4*s12*(6*s12^5*s23 - 40*s13^2*s23^3*(s13 + s23) - 
             3*s12^4*(156*s13^2 - 9*s13*s23 + 4*s23^2) + s12^2*s13*s23*
              (161*s13^2 + 249*s13*s23 + 169*s23^2) + s12*s13*s23*
              (414*s13^3 + 39*s13^2*s23 + 89*s13*s23^2 - 60*s23^3) - 
             2*s12^3*(234*s13^3 - 10*s13^2*s23 + 73*s13*s23^2 + 9*s23^3)) - 
           2*p2q*p3q^3*(12*s12^6*s23 - 40*s13^3*s23^2*(s13 + s23)^2 - 
             9*s12^5*(78*s13^2 - 9*s13*s23 + 2*s23^2) + 2*s12^2*s13*s23*
              (803*s13^3 + 296*s13^2*s23 + 124*s13*s23^2 - 123*s23^3) + 
             3*s12^4*(78*s13^3 + 244*s13^2*s23 - 127*s13*s23^2 - 10*s23^3) - 
             s12*s13^2*s23*(83*s13^3 + 37*s13^2*s23 + 157*s13*s23^2 + 203*
                s23^3) + 2*s12^3*s13*(468*s13^3 + 795*s13^2*s23 + 391*s13*
                s23^2 + 297*s23^3)) - 2*p2q^3*p3q*s13*(27*s12^5*s23 + 
             s12^4*(468*s13^2 + 620*s13*s23 - 153*s23^2) + 20*s13^2*s23*
              (2*s13^3 - s13^2*s23 - 11*s13*s23^2 - 8*s23^3) + 
             s12^3*(-234*s13^3 + 766*s13^2*s23 + 559*s13*s23^2 + 363*s23^3) - 
             s12*s13*s23*(89*s13^3 + 14*s13^2*s23 + 360*s13*s23^2 + 375*
                s23^3) + s12^2*(-702*s13^4 + 314*s13^3*s23 + 854*s13^2*
                s23^2 + 74*s13*s23^3 - 213*s23^4)) + p2q^4*s13*
            (3*s12^4*s23*(-56*s13 + 13*s23) + 2*s12^3*(234*s13^3 + 11*s13^2*
                s23 - 148*s13*s23^2 - 63*s23^3) - 40*s13^2*s23*
              (s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             2*s12*s13*s23*(3*s13^3 - 20*s13^2*s23 + 143*s13*s23^2 + 126*
                s23^3) + s12^2*(468*s13^4 + 224*s13^3*s23 - 339*s13^2*s23^2 + 
               87*s23^4)) + p2q^2*p3q^2*(-12*s12^6*s23 + 
             6*s12^5*(78*s13^2 - 27*s13*s23 + 2*s23^2) - 40*s13^3*s23*
              (s13^3 - 4*s13^2*s23 - 12*s13*s23^2 - 7*s23^3) + 
             s12^4*(-2340*s13^3 - 2496*s13^2*s23 + 737*s13*s23^2 + 24*
                s23^3) + 2*s12*s13^2*s23*(169*s13^3 + 71*s13^2*s23 + 334*s13*
                s23^2 + 412*s23^3) - 2*s12^3*s13*(936*s13^3 + 2206*s13^2*
                s23 + 944*s13*s23^2 + 725*s23^3) + s12^2*s13*
              (936*s13^4 - 3236*s13^3*s23 - 2475*s13^2*s23^2 - 466*s13*
                s23^3 + 711*s23^4))))/(54*ep*(p1q + p3q)*(p2q + p3q)^2*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       (ep*(2*p1q^4*(p2q + p3q)*(s12 + s13)*s23^2*
           (19*s13^3*s23^2*(s13 + s23) + 3*s12^4*(8*s13^2 - 13*s13*s23 + 
              2*s23^2) - s12*s13^2*s23*(2*s13^2 + 2*s13*s23 + 19*s23^2) + 
            s12^2*s13*(24*s13^3 - 31*s13^2*s23 - 78*s13*s23^2 - 6*s23^3) + 
            s12^3*(48*s13^3 - 68*s13^2*s23 - 39*s13*s23^2 + 6*s23^3)) + 
          (p2q + p3q)^2*(s12 + s13)*(2*p2q^3*s13^2*(s12 + s13)*s23*
             (s12^4 - 19*s13^2*s23*(s13 + s23) + s12^3*(19*s13 + 53*s23) + 
              s12*s13*(17*s13^2 + 2*s13*s23 + 4*s23^2) + s12^2*(35*s13^2 + 
                74*s13*s23 + 52*s23^2)) - p3q^3*s12^2*(92*s12^5*s23 + 
              s12*s13^2*s23*(543*s13^2 - 989*s13*s23 - 116*s23^2) + 
              2*s13^3*s23*(111*s13^2 - 259*s13*s23 - 47*s23^2) + 
              s12^4*(-48*s13^2 + 421*s13*s23 + 172*s23^2) + s12^2*s13*(
                -48*s13^3 + 705*s13^2*s23 - 472*s13*s23^2 + 38*s23^3) + 
              s12^3*(-96*s13^3 + 713*s13^2*s23 + 171*s13*s23^2 + 80*s23^3)) + 
            p2q^2*p3q*s13*(78*s12^6*s23 - 38*s13^4*s23*(s13 + s23)^2 + 
              s12^5*s23*(5*s13 + 218*s23) - 2*s12*s13^3*s23*(48*s13^2 + 
                61*s13*s23 + 13*s23^2) + s12^4*(48*s13^3 - 583*s13^2*s23 + 
                591*s13*s23^2 - 136*s23^3) + s12^3*s13*(96*s13^3 - 
                937*s13^2*s23 + 706*s13*s23^2 - 26*s23^3) + s12^2*s13^2*(
                48*s13^3 - 485*s13^2*s23 + 287*s13*s23^2 + 142*s23^3)) - 
            p2q*p3q^2*s12*(80*s12^6*s23 + 5*s12^5*s23*(45*s13 + 32*s23) + 
              s12*s13^3*s23*(673*s13^2 - 763*s13*s23 - 128*s23^2) + 
              4*s13^4*s23*(3*s13^2 + 2*s13*s23 - s23^2) + s12^2*s13^2*(
                96*s13^3 + 1420*s13^2*s23 - 1659*s13*s23^2 + 6*s23^3) + 
              s12^4*(96*s13^3 + 416*s13^2*s23 - 157*s13*s23^2 + 80*s23^3) + 
              s12^3*s13*(192*s13^3 + 1030*s13^2*s23 - 1205*s13*s23^2 + 
                170*s23^3))) + p1q*(p2q^3*p3q*(s12^7*s23*(-23*s13 + 40*s23) + 
              38*s13^5*s23*(-2*s13^3 + s13^2*s23 + 11*s13*s23^2 + 8*s23^3) + 
              s12^6*(-96*s13^3 - 767*s13^2*s23 + 1920*s13*s23^2 + 80*s23^3) + 
              2*s12*s13^4*s23*(-176*s13^3 + 51*s13^2*s23 + 516*s13*s23^2 + 
                232*s23^3) + s12^2*s13^3*(144*s13^4 - 2311*s13^3*s23 + 
                2341*s13^2*s23^2 + 244*s13*s23^3 - 600*s23^4) + 
              3*s12^3*s13^2*(112*s13^4 - 1997*s13^3*s23 + 2481*s13^2*s23^2 - 
                353*s13*s23^3 - 350*s23^4) + s12^4*s13*(144*s13^4 - 
                6798*s13^3*s23 + 9969*s13^2*s23^2 - 752*s13*s23^3 - 
                270*s23^4) + s12^5*(-144*s13^4 - 3586*s13^3*s23 + 
                6683*s13^2*s23^2 + 17*s13*s23^3 + 40*s23^4)) + 
            p3q^4*s12*(-12*s12^7*s23 + 4*s13^4*s23^2*(s13^2 - 2*s13*s23 - 
                3*s23^2) + s12^6*(96*s13^2 - 227*s13*s23 + 144*s23^2) - 
              s12^2*s13^2*s23*(747*s13^3 - 3884*s13^2*s23 + 664*s13*s23^2 + 
                92*s23^3) - s12*s13^3*s23*(266*s13^3 - 1263*s13^2*s23 + 
                537*s13*s23^2 + 112*s23^3) + s12^5*(288*s13^3 - 702*s13^2*
                 s23 + 1327*s13*s23^2 + 276*s23^3) + 2*s12^4*(144*s13^4 - 
                493*s13^3*s23 + 1820*s13^2*s23^2 + 393*s13*s23^3 + 
                60*s23^4) + s12^3*s13*(96*s13^4 - 980*s13^3*s23 + 
                5082*s13^2*s23^2 + 375*s13*s23^3 + 108*s23^4)) + 
            p2q^2*p3q^2*(-12*s12^8*s23 + s12^7*(48*s13^2 - 273*s13*s23 + 
                212*s23^2) - 38*s13^5*s23*(s13^3 - 4*s13^2*s23 - 
                12*s13*s23^2 - 7*s23^3) + 2*s12*s13^4*s23*(-100*s13^3 + 
                255*s13^2*s23 + 577*s13*s23^2 + 203*s23^3) + 
              s12^6*(-144*s13^3 - 1573*s13^2*s23 + 3967*s13*s23^2 + 
                424*s23^3) - s12^4*s13^2*(528*s13^3 + 8816*s13^2*s23 - 
                19583*s13*s23^2 + 567*s23^3) - s12^3*s13^2*s23*(7713*s13^3 - 
                15453*s13^2*s23 + 2124*s13*s23^2 + 968*s23^3) + 
              s12^2*s13^3*(96*s13^4 - 2761*s13^3*s23 + 5430*s13^2*s23^2 - 
                391*s13*s23^3 - 688*s23^4) + s12^5*(-624*s13^4 - 
                5014*s13^3*s23 + 12957*s13^2*s23^2 + 892*s13*s23^3 + 
                200*s23^4)) - p2q^4*s13*(s12 + s13)*(s12^5*(237*s13 - 
                362*s23)*s23 + 2*s12*s13^2*s23*(65*s13^3 + 51*s13^2*s23 - 
                80*s13*s23^2 - 28*s23^3) + 38*s13^3*s23*(s13^3 + s13^2*s23 - 
                3*s13*s23^2 - 3*s23^3) + s12^4*(-48*s13^3 + 875*s13^2*s23 - 
                879*s13*s23^2 + 58*s23^3) + s12^3*(-96*s13^4 + 1141*s13^3*
                 s23 - 794*s13^2*s23^2 + 204*s13*s23^3 + 144*s23^4) + 
              s12^2*s13*(-48*s13^4 + 595*s13^3*s23 - 213*s13^2*s23^2 + 
                80*s13*s23^3 + 264*s23^4)) + p2q*p3q^3*(-24*s12^8*s23 + 
              76*s13^5*s23^2*(s13 + s23)^2 + s12^7*(144*s13^2 - 477*s13*s23 + 
                316*s23^2) - 4*s12*s13^4*s23*(4*s13^3 - 68*s13^2*s23 - 
                97*s13*s23^2 - 25*s23^3) - s12^2*s13^3*s23*(1441*s13^3 - 
                4463*s13^2*s23 + 1092*s13*s23^2 + 408*s23^3) + 
              s12^6*(240*s13^3 - 1745*s13^2*s23 + 3736*s13*s23^2 + 
                620*s23^3) + s12^4*s13*(-432*s13^4 - 5014*s13^3*s23 + 
                16369*s13^2*s23^2 + 298*s13*s23^3 + 234*s23^4) + 
              s12^5*(-144*s13^4 - 3526*s13^3*s23 + 11155*s13^2*s23^2 + 
                1603*s13*s23^3 + 280*s23^4) - s12^3*s13^2*(192*s13^4 + 
                4205*s13^3*s23 - 12901*s13^2*s23^2 + 2013*s13*s23^3 + 
                418*s23^4))) - p1q^3*s23*
           (p2q^2*(2*s12^6*(24*s13^2 - 41*s13*s23 + 6*s23^2) + 
              38*s13^3*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - s23^3) + 
              s12^5*(192*s13^3 - 262*s13^2*s23 + 245*s13*s23^2 + 52*s23^3) - 
              2*s12*s13^2*s23*(4*s13^4 - 118*s13^3*s23 - 36*s13^2*s23^2 + 
                65*s13*s23^3 + 17*s23^4) + s12^4*(336*s13^4 - 394*s13^3*s23 + 
                377*s13^2*s23^2 + 3*s13*s23^3 + 80*s23^4) + 
              s12^3*(288*s13^5 - 386*s13^4*s23 + 299*s13^3*s23^2 - 
                530*s13^2*s23^3 + 8*s13*s23^4 + 40*s23^5) + s12^2*s13*(
                96*s13^5 - 180*s13^4*s23 + 277*s13^3*s23^2 - 483*s13^2*
                 s23^3 - 184*s13*s23^4 + 44*s23^5)) + 2*p2q*p3q*
             (s12^6*(48*s13^2 - 121*s13*s23 + 24*s23^2) + 19*s13^3*s23^2*(
                4*s13^3 + 3*s13^2*s23 - 3*s13*s23^2 - 2*s23^3) + 
              2*s12^5*(72*s13^3 - 201*s13^2*s23 + 152*s13*s23^2 + 29*s23^3) + 
              s12*s13^2*s23*(-6*s13^4 + 158*s13^3*s23 + 11*s13^2*s23^2 - 
                130*s13*s23^3 - 34*s23^4) + s12^4*(192*s13^4 - 602*s13^3*
                 s23 + 492*s13^2*s23^2 + 83*s13*s23^3 + 74*s23^4) + 
              s12^3*(144*s13^5 - 536*s13^4*s23 + 422*s13^3*s23^2 - 
                375*s13^2*s23^3 + 8*s13*s23^4 + 40*s23^5) + s12^2*s13*(
                48*s13^5 - 221*s13^4*s23 + 292*s13^3*s23^2 - 406*s13^2*
                 s23^3 - 159*s13*s23^4 + 44*s23^5)) + 
            p3q^2*(4*s12^6*(24*s13^2 - 40*s13*s23 + 9*s23^2) + 
              38*s13^3*s23^2*(s13^3 - 2*s13*s23^2 - s23^3) + 
              s12^5*(288*s13^3 - 446*s13^2*s23 + 363*s13*s23^2 + 64*s23^3) - 
              2*s12*s13^2*s23*(2*s13^4 - 40*s13^3*s23 + 25*s13^2*s23^2 + 
                65*s13*s23^3 + 17*s23^4) + s12^4*(336*s13^4 - 522*s13^3*s23 + 
                655*s13^2*s23^2 + 163*s13*s23^3 + 68*s23^4) + 
              s12^3*(192*s13^5 - 398*s13^4*s23 + 641*s13^3*s23^2 - 
                220*s13^2*s23^3 + 8*s13*s23^4 + 40*s23^5) + s12^2*s13*(
                48*s13^5 - 166*s13^4*s23 + 355*s13^3*s23^2 - 329*s13^2*
                 s23^3 - 134*s13*s23^4 + 44*s23^5))) + 
          p1q^2*(p3q^3*(-38*s13^4*s23^3*(s13 + s23)^2 + s12^7*(48*s13^2 - 
                82*s13*s23 + 36*s23^2) + 16*s12^6*s13*(9*s13^2 - 21*s13*s23 + 
                41*s23^2) + 2*s12*s13^3*s23^2*(4*s13^3 - 65*s13^2*s23 - 
                99*s13*s23^2 - 30*s23^3) + s12^4*s13*(48*s13^4 - 
                340*s13^3*s23 + 2549*s13^2*s23^2 - 1988*s13*s23^3 - 
                435*s23^4) + s12^5*(144*s13^4 - 464*s13^3*s23 + 1839*s13^2*
                 s23^2 - 651*s13*s23^3 - 36*s23^4) + s12^2*s13^2*s23*(
                -92*s13^4 + 807*s13^3*s23 - 1276*s13^2*s23^2 - 137*s13*
                 s23^3 + 52*s23^4) + s12^3*s13*s23*(-222*s13^4 + 
                2129*s13^3*s23 - 2521*s13^2*s23^2 - 354*s13*s23^3 + 
                54*s23^4)) - p2q^2*p3q*(2*s12^7*(41*s13 - 12*s23)*s23 + 
              s12^6*(96*s13^3 + 268*s13^2*s23 - 998*s13*s23^2 - 92*s23^3) - 
              38*s13^4*s23^2*(5*s13^3 + 2*s13^2*s23 - 10*s13*s23^2 - 
                7*s23^3) + s12^5*(240*s13^4 + 464*s13^3*s23 - 3587*s13^2*
                 s23^2 + 1519*s13*s23^3 - 148*s23^4) + 2*s12*s13^3*s23*(
                4*s13^4 - 317*s13^3*s23 + 7*s13^2*s23^2 + 475*s13*s23^3 + 
                166*s23^4) + s12^3*s13*(-48*s13^5 + 1174*s13^4*s23 - 
                6367*s13^3*s23^2 + 6189*s13^2*s23^3 + 490*s13*s23^4 - 
                518*s23^5) + s12^2*s13^2*(-48*s13^5 + 512*s13^4*s23 - 
                3019*s13^3*s23^2 + 2714*s13^2*s23^3 + 899*s13*s23^4 - 
                392*s23^5) + s12^4*(144*s13^5 + 948*s13^4*s23 - 6405*s13^3*
                 s23^2 + 5176*s13^2*s23^3 + 113*s13*s23^4 - 80*s23^5)) + 
            p2q*p3q^2*(4*s12^7*(12*s13^2 - 41*s13*s23 + 15*s23^2) + 
              38*s13^4*s23^2*(2*s13^3 - 2*s13^2*s23 - 9*s13*s23^2 - 
                5*s23^3) + s12^6*(48*s13^3 - 590*s13^2*s23 + 1391*s13*s23^2 + 
                52*s23^3) - 2*s12^2*s13^2*s23*(197*s13^4 - 1380*s13^3*s23 + 
                1630*s13^2*s23^2 + 327*s13*s23^3 - 137*s23^4) + 
              s12^5*(-144*s13^4 - 784*s13^3*s23 + 4433*s13^2*s23^2 - 
                1759*s13*s23^3 + 32*s23^4) - 2*s12*s13^3*s23*(2*s13^4 - 
                136*s13^3*s23 + 161*s13^2*s23^2 + 408*s13*s23^3 + 
                128*s23^4) - s12^3*s13*(96*s13^5 + 872*s13^4*s23 - 
                6599*s13^3*s23^2 + 6781*s13^2*s23^3 + 730*s13*s23^4 - 
                340*s23^5) - s12^4*(240*s13^5 + 840*s13^4*s23 - 7137*s13^3*
                 s23^2 + 5578*s13^2*s23^3 + 658*s13*s23^4 - 40*s23^5)) + 
            p2q^3*(114*s13^4*(s13 - s23)*s23^2*(s13 + s23)^2 + 
              s12^6*s23*(34*s13^2 + 263*s13*s23 + 40*s23^2) - 
              2*s12*s13^3*s23*(2*s13^4 - 185*s13^3*s23 - 89*s13^2*s23^2 + 
                166*s13*s23^3 + 68*s23^4) + s12^5*(48*s13^4 + 48*s13^3*s23 + 
                1089*s13^2*s23^2 - 411*s13*s23^3 + 80*s23^4) + 
              s12^4*(144*s13^5 - 160*s13^4*s23 + 2105*s13^3*s23^2 - 
                1538*s13^2*s23^3 + 110*s13*s23^4 + 40*s23^5) + 
              2*s12^2*s13^2*(24*s13^5 - 81*s13^4*s23 + 581*s13^3*s23^2 - 
                341*s13^2*s23^3 - 191*s13*s23^4 + 85*s23^5) + 
              s12^3*s13*(144*s13^5 - 332*s13^4*s23 + 2185*s13^3*s23^2 - 
                1833*s13^2*s23^3 - 114*s13*s23^4 + 232*s23^5)))))/
        (108*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*
         (s12 + s13)^2*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) + (-2*p1q^4*(p2q + p3q)*s23^2*
          (122*s13^4*s23^2*(s13 + s23) + 9*s12^5*(104*s13^2 - 5*s13*s23 + 
             4*s23^2) + 2*s12*s13^3*s23*(172*s13^2 + 315*s13*s23 + 
             82*s23^2) + 3*s12^2*s13^2*(312*s13^3 + 505*s13^2*s23 + 
             111*s13*s23^2 - 22*s23^3) + s12^4*(2808*s13^3 + 737*s13^2*s23 + 
             39*s13*s23^2 + 36*s23^3) + s12^3*s13*(2808*s13^3 + 
             1953*s13^2*s23 - 172*s13*s23^2 + 48*s23^3)) - 
         (p2q + p3q)^2*(s12 + s13)*(2*p2q^3*s13^2*(s12 + s13)*s23*
            (147*s12^4 + 3*s12^3*(98*s13 - 57*s23) - 122*s13^2*s23*
              (s13 + s23) - 2*s12*s13*s23*(254*s13 + 193*s23) + 
             s12^2*(147*s13^2 - 557*s13*s23 - 318*s23^2)) + 
           p3q^3*s12^2*(-72*s12^5*s23 + 3*s12^4*(624*s13^2 - 223*s13*s23 - 24*
                s23^2) + 6*s13^3*s23*(-282*s13^2 + 281*s13*s23 + 14*s23^2) + 
             s12*s13^2*s23*(-1509*s13^2 + 3865*s13*s23 + 290*s23^2) + 
             3*s12^3*s13*(1248*s13^2 - 245*s13*s23 + 503*s23^2) + 
             s12^2*s13*(1872*s13^3 + 45*s13^2*s23 + 3520*s13*s23^2 + 246*
                s23^3)) - p2q*p3q^2*s12*s13*(549*s12^5*s23 + 
             s12^4*(3744*s13^2 + 3794*s13*s23 - 2793*s23^2) - 
             12*s13^3*s23*(33*s13^2 + 14*s13*s23 - 19*s23^2) + 
             s12*s13^2*s23*(4343*s13^2 - 599*s13*s23 + 1022*s23^2) + 
             s12^3*(7488*s13^3 + 8100*s13^2*s23 - 5113*s13*s23^2 + 378*
                s23^3) + s12^2*s13*(3744*s13^3 + 9594*s13^2*s23 - 3231*s13*
                s23^2 + 1252*s23^3)) - p2q^2*p3q*s13*(294*s12^6*s23 + 
             s12^5*(1801*s13 - 930*s23)*s23 + 244*s13^4*s23*(s13 + s23)^2 - 
             4*s12*s13^3*s23*(6*s13^2 - 305*s13*s23 - 311*s23^2) + 
             s12^4*(-1872*s13^3 + 2247*s13^2*s23 - 649*s13*s23^2 + 636*
                s23^3) + s12^3*s13*(-3744*s13^3 + 1243*s13^2*s23 + 2160*s13*
                s23^2 + 2202*s23^3) + s12^2*s13^2*(-1872*s13^3 + 235*s13^2*
                s23 + 2851*s13*s23^2 + 2526*s23^3))) + 
         p1q*(p2q^2*p3q^2*(72*s12^8*s23 - 3*s12^7*(624*s13^2 - 365*s13*s23 + 
               24*s23^2) + s12^3*s13^2*s23*(61847*s13^3 + 21197*s13^2*s23 + 
               20628*s13*s23^2 - 11000*s23^3) + s12^6*(5616*s13^3 + 16249*
                s13^2*s23 - 7389*s13*s23^2 - 144*s23^3) + 244*s13^5*s23*
              (s13^3 - 4*s13^2*s23 - 12*s13*s23^2 - 7*s23^3) - 
             4*s12*s13^4*s23*(487*s13^3 + 457*s13^2*s23 + 2070*s13*s23^2 + 
               2039*s23^3) + s12^5*s13*(24336*s13^3 + 48302*s13^2*s23 - 8869*
                s13*s23^2 + 11254*s23^3) + s12^2*s13^3*(-3744*s13^4 + 18113*
                s13^3*s23 + 6314*s13^2*s23^2 - 2477*s13*s23^3 - 14530*
                s23^4) + s12^4*s13*(20592*s13^4 + 74618*s13^3*s23 + 12479*
                s13^2*s23^2 + 28431*s13*s23^3 - 2798*s23^4)) + 
           p2q^3*p3q*s13*(273*s12^7*s23 + s12^6*(3744*s13^2 + 7693*s13*s23 - 
               2888*s23^2) + 244*s13^4*s23*(2*s13^3 - s13^2*s23 - 11*s13*
                s23^2 - 8*s23^3) - 4*s12*s13^3*s23*(161*s13^3 + 89*s13^2*
                s23 + 2149*s13*s23^2 + 2038*s23^3) + 
             s12^5*(5616*s13^3 + 23330*s13^2*s23 - 119*s13*s23^2 + 5521*
                s23^3) + s12^2*s13^2*(-5616*s13^4 + 6677*s13^3*s23 + 9289*
                s13^2*s23^2 - 7174*s13*s23^3 - 13142*s23^4) + 
             s12^3*s13*(-13104*s13^4 + 26001*s13^3*s23 + 24279*s13^2*s23^2 + 
               7105*s13*s23^3 - 9460*s23^4) + s12^4*(-5616*s13^4 + 34102*
                s13^3*s23 + 17647*s13^2*s23^2 + 13648*s13*s23^3 - 2478*
                s23^4)) + p2q*p3q^3*(144*s12^8*s23 - 488*s13^5*s23^2*
              (s13 + s23)^2 - 3*s12^7*(1872*s13^2 - 457*s13*s23 + 72*s23^2) + 
             s12^2*s13^3*s23*(16175*s13^3 - 1557*s13^2*s23 + 3574*s13*s23^2 - 
               6402*s23^3) - 3*s12^6*(3120*s13^3 - 4077*s13^2*s23 + 2564*s13*
                s23^2 + 120*s23^3) - 4*s12*s13^4*s23*(271*s13^3 + 168*s13^2*
                s23 + 709*s13*s23^2 + 812*s23^3) + s12^5*s13*
              (5616*s13^3 + 32294*s13^2*s23 - 12013*s13*s23^2 + 9335*s23^3) + 
             s12^3*s13^2*(7488*s13^4 + 46971*s13^3*s23 + 1449*s13^2*s23^2 + 
               21151*s13*s23^3 - 4468*s23^4) + s12^4*s13*(16848*s13^4 + 51002*
                s13^3*s23 - 1715*s13^2*s23^2 + 24692*s13*s23^3 - 706*
                s23^4)) + p2q^4*s13*(s12 + s13)*(s12^5*(1195*s13 - 294*s23)*
              s23 + 244*s13^3*s23*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*
                s23^3) + 3*s12^4*(-624*s13^3 + 731*s13^2*s23 + 633*s13*
                s23^2 + 310*s23^3) - 4*s12*s13^2*s23*(6*s13^3 - 82*s13^2*
                s23 + 563*s13*s23^2 + 529*s23^3) + s12^2*s13*
              (-1872*s13^4 + 511*s13^3*s23 + 3075*s13^2*s23^2 - 1070*s13*
                s23^3 - 2076*s23^4) + s12^3*(-3744*s13^4 + 1777*s13^3*s23 + 
               4944*s13^2*s23^2 + 1420*s13*s23^3 - 636*s23^4)) + 
           p3q^4*s12*(72*s12^7*s23 + 12*s13^4*s23^2*(19*s13^2 - 14*s13*s23 - 
               33*s23^2) - 9*s12^6*(416*s13^2 - 61*s13*s23 + 16*s23^2) + 
             s12*s13^3*s23*(4252*s13^3 - 1985*s13^2*s23 + 2199*s13*s23^2 - 
               822*s23^3) + s12^2*s13^2*s23*(8837*s13^3 - 3488*s13^2*s23 + 
               7278*s13*s23^2 - 216*s23^3) - s12^5*(11232*s13^3 - 2480*s13^2*
                s23 + 2897*s13*s23^2 + 216*s23^3) + 2*s12^4*s13*
              (-5616*s13^3 + 1967*s13^2*s23 - 2434*s13*s23^2 + 1336*s23^3) + 
             s12^3*s13*(-3744*s13^4 + 6516*s13^3*s23 - 3390*s13^2*s23^2 + 
               7559*s13*s23^3 + 250*s23^4))) + p1q^3*s23*
          (p2q^2*(6*s12^6*(312*s13^2 - 17*s13*s23 + 12*s23^2) + 
             3*s12^4*s13*(4304*s13^3 + 578*s13^2*s23 - 507*s13*s23^2 - 215*
                s23^3) + 244*s13^3*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - 
               s23^3) + s12^5*(7392*s13^3 - 446*s13^2*s23 + 653*s13*s23^2 + 
               72*s23^3) + 4*s12*s13^2*s23*(344*s13^4 + 685*s13^3*s23 + 307*
                s13^2*s23^2 + 6*s13*s23^3 - 82*s23^4) + s12^3*s13*
              (11136*s13^4 + 4142*s13^3*s23 - 3517*s13^2*s23^2 - 1422*s13*
                s23^3 + 488*s23^4) + s12^2*s13*(3744*s13^5 + 3440*s13^4*s23 + 
               113*s13^3*s23^2 - 369*s13^2*s23^3 + 796*s13*s23^4 - 44*
                s23^5)) + 2*p2q*p3q*(3*s12^6*(640*s13^2 - 49*s13*s23 + 48*
                s23^2) + 122*s13^3*s23^2*(4*s13^3 + 3*s13^2*s23 - 3*s13*
                s23^2 - 2*s23^3) + 2*s12^5*(2856*s13^3 - 1188*s13^2*s23 + 383*
                s13*s23^2 + 54*s23^3) + 2*s12*s13^2*s23*(516*s13^4 + 832*
                s13^3*s23 + 227*s13^2*s23^2 - 70*s13*s23^3 - 164*s23^4) + 
             s12^4*(7584*s13^4 - 5186*s13^3*s23 - 3236*s13^2*s23^2 - 643*s13*
                s23^3 - 36*s23^4) + 2*s12^3*s13*(2856*s13^4 - 2216*s13^3*
                s23 - 3265*s13^2*s23^2 - 636*s13*s23^3 + 220*s23^4) + 
             s12^2*s13*(1920*s13^5 - 443*s13^4*s23 - 1976*s13^3*s23^2 - 353*
                s13^2*s23^3 + 862*s13*s23^4 - 44*s23^5)) + 
           p3q^2*(24*s12^6*(156*s13^2 - 8*s13*s23 + 9*s23^2) + 
             244*s13^3*s23^2*(s13^3 - 2*s13*s23^2 - s23^3) + 
             s12^5*(11136*s13^3 - 754*s13^2*s23 + 879*s13*s23^2 + 144*
                s23^3) + 4*s12*s13^2*s23*(172*s13^4 + 147*s13^3*s23 - 80*
                s13^2*s23^2 - 76*s13*s23^3 - 82*s23^4) + 
             s12^4*(12912*s13^4 - 1450*s13^3*s23 - 3175*s13^2*s23^2 - 641*s13*
                s23^3 - 72*s23^4) + s12^3*s13*(7392*s13^4 - 2350*s13^3*s23 - 
               5991*s13^2*s23^2 - 1122*s13*s23^3 + 392*s23^4) + 
             s12^2*s13*(1872*s13^5 - 774*s13^4*s23 - 2289*s13^3*s23^2 - 337*
                s13^2*s23^3 + 928*s13*s23^4 - 44*s23^5))) + 
         p1q^2*(p3q^3*(244*s13^4*s23^3*(s13 + s23)^2 - 
             6*s12^7*(312*s13^2 - 17*s13*s23 + 36*s23^2) - 
             2*s12^6*s13*(2808*s13^2 - 2998*s13*s23 + 675*s23^2) + 
             4*s12*s13^3*s23^2*(229*s13^3 + 227*s13^2*s23 + 240*s13*s23^2 + 
               242*s23^3) + s12^4*s13*(-1872*s13^4 + 19140*s13^3*s23 + 8617*
                s13^2*s23^2 + 3770*s13*s23^3 - 1627*s23^4) + 
             s12^3*s13*s23*(13322*s13^4 + 5181*s13^3*s23 + 2561*s13^2*s23^2 - 
               4166*s13*s23^3 + 40*s23^4) + s12^5*(-5616*s13^4 + 16144*s13^3*
                s23 + 2035*s13^2*s23^2 + 2893*s13*s23^3 + 216*s23^4) + 
             s12^2*s13^2*s23*(4432*s13^4 + 649*s13^3*s23 + 1628*s13^2*s23^2 - 
               1491*s13*s23^3 + 844*s23^4)) + p2q^3*s13*
            (s12^6*(1770*s13 - 481*s23)*s23 - 732*s13^3*(s13 - s23)*s23^2*
              (s13 + s23)^2 + s12^5*(-1872*s13^3 + 5140*s13^2*s23 - 425*s13*
                s23^2 + 1175*s23^3) + s12^4*(-5616*s13^4 + 7808*s13^3*s23 + 
               2775*s13^2*s23^2 + 706*s13*s23^3 - 1396*s23^4) - 
             4*s12*s13^2*s23*(172*s13^4 + 425*s13^3*s23 + 368*s13^2*s23^2 - 
               364*s13*s23^3 - 479*s23^4) - 2*s12^2*s13*(936*s13^5 - 731*
                s13^4*s23 - 33*s13^3*s23^2 + 1436*s13^2*s23^3 + 432*s13*
                s23^4 - 906*s23^5) + s12^3*(-5616*s13^5 + 6588*s13^4*s23 + 
               3753*s13^3*s23^2 - 2361*s13^2*s23^3 - 3024*s13*s23^4 + 668*
                s23^5)) + p2q*p3q^2*(-12*s12^7*(156*s13^2 - 17*s13*s23 + 30*
                s23^2) - 244*s13^4*s23^2*(2*s13^3 - 2*s13^2*s23 - 9*s13*
                s23^2 - 5*s23^3) - s12^6*(1872*s13^3 - 12082*s13^2*s23 + 2985*
                s13*s23^2 + 72*s23^3) + s12^4*s13*(9360*s13^4 + 47240*s13^3*
                s23 + 6249*s13^2*s23^2 + 5500*s13*s23^3 - 5028*s23^4) + 
             s12^5*(5616*s13^4 + 34452*s13^3*s23 - 1603*s13^2*s23^2 + 6563*
                s13*s23^3 + 288*s23^4) + 4*s12*s13^3*s23*(-172*s13^4 + 298*
                s13^3*s23 + 484*s13^2*s23^2 + 916*s13*s23^3 + 963*s23^4) + 
             2*s12^2*s13^2*s23*(6195*s13^4 - 106*s13^3*s23 - 1453*s13^2*
                s23^2 - 2420*s13*s23^3 + 1750*s23^4) + s12^3*s13*
              (3744*s13^5 + 37744*s13^4*s23 + 3335*s13^3*s23^2 - 3809*s13^2*
                s23^3 - 11904*s13*s23^4 + 748*s23^5)) + 
           p2q^2*p3q*(6*s12^7*(17*s13 - 24*s23)*s23 + 
             4*s12^6*(936*s13^3 + 2408*s13^2*s23 - 529*s13*s23^2 - 18*
                s23^3) - 244*s13^4*s23^2*(5*s13^3 + 2*s13^2*s23 - 10*s13*
                s23^2 - 7*s23^3) + s12^4*s13*(5616*s13^4 + 46564*s13^3*s23 + 
               11063*s13^2*s23^2 + 4212*s13*s23^3 - 4797*s23^4) - 
             4*s12*s13^3*s23*(344*s13^4 + 356*s13^3*s23 + 111*s13^2*s23^2 - 
               1040*s13*s23^3 - 1200*s23^4) + s12^5*(9360*s13^4 + 30552*s13^3*
                s23 - 511*s13^2*s23^2 + 4845*s13*s23^3 + 72*s23^4) + 
             s12^3*s13*(-1872*s13^5 + 38114*s13^4*s23 + 12563*s13^3*s23^2 - 
               5179*s13^2*s23^3 - 10762*s13*s23^4 + 1376*s23^5) + 
             s12^2*s13^2*(-1872*s13^5 + 11196*s13^4*s23 + 2757*s13^3*s23^2 - 
               5630*s13^2*s23^3 - 4213*s13*s23^4 + 4468*s23^5))))/
        (216*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*
         (s12 + s13)^2*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) + ((-2*p1q^3*(p2q + p3q)*s23*(s12 + s13 + s23)*
           (24*s13 + s23) + p1q^2*(p2q^2*(48*s13^3 + 2*s13^2*s23 - 
              s23^2*(7*s12 + 3*s23) - 5*s13*s23*(10*s12 + 11*s23)) + 
            p3q^2*(2*s12^2*(24*s13 + s23) - s12*s23*(50*s13 + 17*s23) - 
              3*s23*(32*s13^2 + 39*s13*s23 + 5*s23^2)) + 
            2*p2q*p3q*(s12^2*s23 - 2*s12*(24*s13^2 + 49*s13*s23 + 6*s23^2) - 
              s23*(95*s13^2 + 110*s13*s23 + 9*s23^2))) - 
          (p2q + p3q)*(2*p2q^3*s13*s23*(s12 + s13 + s23) + 
            p2q^2*p3q*(-48*s13^3 - 45*s13^2*s23 + 2*s12*s23*(-s12 + s23) + 
              s13*s23*(5*s12 + 9*s23)) - p3q^3*(6*s13*s23*(2*s13 + s23) + 
              15*s12*s23*(5*s13 + s23) + s12^2*(48*s13 + 19*s23)) - 
            p2q*p3q^2*(19*s12^2*s23 + 3*s13*(3*s13 - s23)*s23 + 
              s12*(-96*s13^2 + 20*s13*s23 + 11*s23^2))) + 
          p1q*(p2q^3*(48*s13^3 + 57*s13^2*s23 + 2*s23^2*(-s12 + s23) + 
              5*s13*s23*(s12 + s23)) + p3q^3*(s12*(71*s13 - 4*s23)*s23 + 
              s12^2*(96*s13 + 19*s23) - 3*s23*(12*s13^2 + 21*s13*s23 + 
                5*s23^2)) + p2q^2*p3q*(96*s13^3 + 7*s12^2*s23 + 
              70*s13^2*s23 - 59*s13*s23^2 - 9*s23^3 - s12*(96*s13^2 + 
                35*s13*s23 + 18*s23^2)) + p2q*p3q^2*(s12^2*(48*s13 + 
                26*s23) - s12*(192*s13^2 + 65*s13*s23 + 20*s23^2) - 
              s23*(119*s13^2 + 175*s13*s23 + 26*s23^2))))*den[-3 + 2*ep])/
        (24*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23^2) + 
       nl*(-1/9*(ep^2*(p2q*s13*(s12 + s13 - s23) + p1q*s23*(s12 - s13 + 
               s23) - p3q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))/
           ((p1q + p2q + p3q)*s13*s23) + 
         (ep*(-2*p2q^3*s13*(s12 + s13 + s23) - 2*p1q^3*s23*(s12 + s13 + 
              s23) + p2q*p3q^2*(7*s12^2 + 20*s12*s13 + 21*s13^2 - s12*s23 - 
              7*s13*s23) + p2q^2*p3q*(2*s12^2 + 7*s12*s13 + 9*s13^2 - 
              2*s12*s23 - 5*s13*s23) + p3q^3*(7*s12^2 + 2*s13*(6*s13 - s23) + 
              3*s12*(5*s13 + s23)) + p1q^2*(p3q*(2*s12^2 - 2*s12*s13 - 
                5*s12*s23 - 17*s13*s23 - 3*s23^2) + p2q*(-2*s12*s13 + 
                2*s13^2 - 3*s12*s23 - 11*s13*s23 + s23^2)) + 
            p1q*(p3q^2*(7*s12^2 + 11*s12*s13 + 12*s13^2 - 4*s12*s23 - 
                19*s13*s23 - 3*s23^2) + p2q*p3q*(3*s12^2 + 16*s12*s13 + 
                25*s13^2 - 8*s12*s23 - 16*s13*s23 + s23^2) + 
              p2q^2*(9*s12*s13 + 13*s13^2 - 2*s12*s23 + s13*s23 + 2*s23^2))))/
          (18*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) + 
         (-2*p1q^3*(p2q + p3q)*(24*s13 - s23)*s23*(s12 + s13 + s23) - 
           p1q*(p2q^3*(-48*s13^3 - 35*s13^2*s23 + 2*s23^2*(-s12 + s23) + s13*
                s23*(9*s12 + s23)) + p2q^2*p3q*(-96*s13^3 + 3*s12^2*s23 - 2*
                s13^2*s23 + 49*s13*s23^2 + 11*s23^3 + s12*(96*s13^2 + 
                 81*s13*s23 - 2*s23^2)) + p2q*p3q^2*(s12^2*(-48*s13 + 
                 2*s23) + s12*(192*s13^2 + 123*s13*s23 - 4*s23^2) + 7*s23*
                (27*s13^2 + 19*s13*s23 + 2*s23^2)) - 
             p3q^3*(s12^2*(96*s13 + s23) + s12*s23*(45*s13 + 4*s23) - s23*
                (60*s13^2 + 37*s13*s23 + 5*s23^2))) + 
           p1q^2*(p2q^2*(48*s13^3 - 2*s13^2*s23 + (3*s12 - s23)*s23^2 - s13*
                s23*(46*s12 + 37*s23)) - 2*p2q*p3q*(s12^2*s23 + 2*s12*s13*
                (24*s13 + 47*s23) + s23*(97*s13^2 + 86*s13*s23 + 3*s23^2)) + 
             p3q^2*(s12^2*(48*s13 - 2*s23) - s12*s23*(46*s13 + 3*s23) - s23*
                (96*s13^2 + 87*s13*s23 + 5*s23^2))) + (p2q + p3q)*
            (2*p2q^3*s13*s23*(s12 + s13 + s23) + p2q^2*p3q*(48*s13^3 + 31*
                s13^2*s23 + 2*s12*s23*(-s12 + s23) - 3*s13*s23*(5*s12 + 
                 s23)) + p3q^3*(2*s13*s23*(-6*s13 + s23) + s12^2*
                (48*s13 + s23) + s12*s23*(41*s13 + 5*s23)) + 
             p2q*p3q^2*(s12^2*s23 - s13*s23*(29*s13 + s23) + s12*
                (-96*s13^2 - 20*s13*s23 + 9*s23^2))))/(36*(p1q + p3q)*
           (p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23^2) + 
         ((-2*p1q^3*(p2q + p3q)*s23*(s12 + s13 + s23)*(24*s13 + s23) + 
            p1q^2*(p2q^2*(48*s13^3 + 2*s13^2*s23 - s23^2*(7*s12 + 3*s23) - 
                5*s13*s23*(10*s12 + 11*s23)) + p3q^2*(2*s12^2*(24*s13 + 
                  s23) - s12*s23*(50*s13 + 17*s23) - 3*s23*(32*s13^2 + 
                  39*s13*s23 + 5*s23^2)) + 2*p2q*p3q*(s12^2*s23 - 
                2*s12*(24*s13^2 + 49*s13*s23 + 6*s23^2) - s23*(95*s13^2 + 
                  110*s13*s23 + 9*s23^2))) - (p2q + p3q)*
             (2*p2q^3*s13*s23*(s12 + s13 + s23) + p2q^2*p3q*(-48*s13^3 - 
                45*s13^2*s23 + 2*s12*s23*(-s12 + s23) + s13*s23*(5*s12 + 
                  9*s23)) - p3q^3*(6*s13*s23*(2*s13 + s23) + 15*s12*s23*
                 (5*s13 + s23) + s12^2*(48*s13 + 19*s23)) - p2q*p3q^2*(
                19*s12^2*s23 + 3*s13*(3*s13 - s23)*s23 + s12*(-96*s13^2 + 
                  20*s13*s23 + 11*s23^2))) + p1q*(p2q^3*(48*s13^3 + 
                57*s13^2*s23 + 2*s23^2*(-s12 + s23) + 5*s13*s23*
                 (s12 + s23)) + p3q^3*(s12*(71*s13 - 4*s23)*s23 + 
                s12^2*(96*s13 + 19*s23) - 3*s23*(12*s13^2 + 21*s13*s23 + 
                  5*s23^2)) + p2q^2*p3q*(96*s13^3 + 7*s12^2*s23 + 
                70*s13^2*s23 - 59*s13*s23^2 - 9*s23^3 - s12*(96*s13^2 + 
                  35*s13*s23 + 18*s23^2)) + p2q*p3q^2*(s12^2*(48*s13 + 
                  26*s23) - s12*(192*s13^2 + 65*s13*s23 + 20*s23^2) - 
                s23*(119*s13^2 + 175*s13*s23 + 26*s23^2))))*den[-3 + 2*ep])/
          (36*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23^2)))*
      Int[DS[k]*DS[k + p2 + p3]] + 
     ((2*ep^3*(p1q*s23*(s12^2*s23*(-4*s13^3 + 21*s13^2*s23 + 5*s13*s23^2 - 
              20*s23^3) - 10*s12^3*(s13^3 - s13^2*s23 + s23^3) + 
            s13*s23*(5*s13^4 - 9*s13^3*s23 + 9*s13*s23^3 - 5*s23^4) + 
            s12*(10*s13^5 - 9*s13^4*s23 + s13^3*s23^2 + 20*s13^2*s23^3 - 
              10*s23^5)) + p3q*(10*s12^4*(s13^3 + s23^3) + 
            2*s13^2*s23^2*(5*s13^3 + s13^2*s23 + s13*s23^2 + 5*s23^3) + 
            5*s12^3*(4*s13^4 + 3*s13^3*s23 + 2*s13^2*s23^2 + 3*s13*s23^3 + 
              4*s23^4) + s12*s13*s23*(25*s13^4 + 22*s13^3*s23 + 
              14*s13^2*s23^2 + 22*s13*s23^3 + 25*s23^4) + 
            2*s12^2*(5*s13^5 + 20*s13^4*s23 + 11*s13^3*s23^2 + 
              11*s13^2*s23^3 + 20*s13*s23^4 + 5*s23^5)) + 
          p2q*s13*(s12^2*s13*(-20*s13^3 + 5*s13^2*s23 + 21*s13*s23^2 - 
              4*s23^3) - 10*s12^3*(s13^3 - s13*s23^2 + s23^3) + 
            s13*s23*(-5*s13^4 + 9*s13^3*s23 - 9*s13*s23^3 + 5*s23^4) + 
            s12*(-10*s13^5 + 20*s13^3*s23^2 + s13^2*s23^3 - 9*s13*s23^4 + 
              10*s23^5))))/(27*(p1q + p2q + p3q)*s13^2*(s12 + s13)*s23^2*
         (s12 + s23)*(s13 + s23)) + 
       (-(p1q^5*s23^2*(20*s13^2*s23^3*(s13 + s23) + s12*s13^2*s23^2*
             (63*s13 + 83*s23) + s12^4*(12*s13^2 + 11*s13*s23 + 6*s23^2) + 
            s12^2*s23*(56*s13^3 + 130*s13^2*s23 + 17*s13*s23^2 + 6*s23^3) + 
            s12^3*(12*s13^3 + 79*s13^2*s23 + 28*s13*s23^2 + 12*s23^3))) + 
         p1q^4*s23*(p3q*(3*s12^5*(8*s13^2 + 7*s13*s23 + 6*s23^2) + 
             2*s12^2*s13*s23*(28*s13^3 + 9*s13^2*s23 - 98*s13*s23^2 - 23*
                s23^3) + 20*s13*s23^3*(s13^3 - s13^2*s23 - 3*s13*s23^2 - s23^
                3) + s12*s13*s23^2*(63*s13^3 - 23*s13^2*s23 - 123*s13*s23^2 + 
               3*s23^3) + s12^4*(12*s13^3 + 107*s13^2*s23 + 22*s13*s23^2 + 24*
                s23^3) + 2*s12^3*(6*s13^4 + 18*s13^3*s23 - 23*s13^2*s23^2 - 
               28*s13*s23^3 + 3*s23^4)) + 
           p2q*(2*s12^5*(6*s13^2 + 5*s13*s23 + 3*s23^2) + 20*s13*s23^3*
              (4*s13^3 + 4*s13^2*s23 - s13*s23^2 - s23^3) + 
             3*s12*s13*s23^2*(63*s13^3 + 82*s13^2*s23 + s23^3) + 
             s12^4*(12*s13^3 + 63*s13^2*s23 + 23*s13*s23^2 + 12*s23^3) + 
             s12^2*s23*(124*s13^4 + 258*s13^3*s23 - 26*s13^2*s23^2 + 7*s13*
                s23^3 + 12*s23^4) + s12^3*(24*s13^4 + 95*s13^3*s23 + 3*s13^2*
                s23^2 + 9*s13*s23^3 + 18*s23^4))) - (p2q + p3q)*
          (2*p3q^4*s12^2*(-2*s12^4*s13*s23 - 3*s12^5*(s13 + s23) + 
             s13^2*s23^2*(-13*s13^2 + 14*s13*s23 - 13*s23^2) + 
             6*s12^2*s13*s23*(5*s13^2 + 13*s13*s23 + 5*s23^2) + 
             s12*s13*s23*(-13*s13^3 + 37*s13^2*s23 + 37*s13*s23^2 - 13*
                s23^3) + s12^3*(3*s13^3 + 38*s13^2*s23 + 38*s13*s23^2 + 3*
                s23^3)) + p2q^4*s13^2*(20*s13^3*s23^2*(s13 + s23) + 
             s12*s13^2*s23^2*(83*s13 + 63*s23) + s12^4*(6*s13^2 + 11*s13*
                s23 + 12*s23^2) + s12^3*(12*s13^3 + 28*s13^2*s23 + 79*s13*
                s23^2 + 12*s23^3) + s12^2*s13*(6*s13^3 + 17*s13^2*s23 + 130*
                s13*s23^2 + 56*s23^3)) + p2q*p3q^3*s12*(-6*s12^6*s13 + 
             40*s13^4*s23^2*(s13 + s23) + s12^5*(6*s13^2 + 26*s13*s23 + 24*
                s23^2) + s12*s13^2*s23*(66*s13^3 - 49*s13^2*s23 + 4*s13*
                s23^2 - 81*s23^3) - 2*s12^3*s13*(9*s13^3 + 68*s13^2*s23 + 4*
                s13*s23^2 - 39*s23^3) + s12^4*(-6*s13^3 + 55*s13^2*s23 + 143*
                s13*s23^2 + 24*s23^3) - s12^2*s13*s23*(135*s13^3 + 180*s13^2*
                s23 - 14*s13*s23^2 + 81*s23^3)) + p2q^2*p3q^2*
            (-20*s13^4*s23^2*(s13 + s23)^2 + 2*s12^6*(9*s13^2 + 5*s13*s23 + 6*
                s23^2) + 2*s12^2*s13^2*s23*(39*s13^3 - 25*s13^2*s23 - 63*s13*
                s23^2 - 56*s23^3) + 2*s12^4*s13*(9*s13^3 - 48*s13^2*s23 - 126*
                s13*s23^2 - 2*s23^3) + s12^5*(18*s13^3 - 15*s13^2*s23 + 14*
                s13*s23^2 + 12*s23^3) - s12*s13^3*s23*(60*s13^3 + 77*s13^2*
                s23 + 80*s13*s23^2 + 63*s23^3) + s12^3*s13*(18*s13^4 + 31*
                s13^3*s23 - 235*s13^2*s23^2 - 99*s13*s23^3 - 68*s23^4)) - 
           p2q^3*p3q*s13*(3*s12^5*(6*s13^2 + 7*s13*s23 + 8*s23^2) - 
             20*s13^3*s23*(s13^3 + 2*s13^2*s23 - s23^3) + 
             s12^4*(30*s13^3 + 33*s13^2*s23 + 119*s13*s23^2 + 12*s23^3) + 
             s12*s13^2*s23*(3*s13^3 - 40*s13^2*s23 + 40*s13*s23^2 + 63*
                s23^3) + s12^3*(18*s13^4 - 28*s13^3*s23 + 33*s13^2*s23^2 + 48*
                s13*s23^3 + 12*s23^4) + s12^2*s13*(6*s13^4 - 29*s13^3*s23 - 
               66*s13^2*s23^2 + 74*s13*s23^3 + 56*s23^4))) + 
         p1q*(p3q^4*s12*(-40*s13^2*s23^4*(s13 + s23) + 
             6*s12^6*(s13 + 2*s23) - 2*s12^5*(12*s13^2 + 11*s13*s23 + 3*
                s23^2) - s12^4*s13*(30*s13^2 + 219*s13*s23 + 131*s23^2) + 
             s12*s13*s23^2*(107*s13^3 - 32*s13^2*s23 + 75*s13*s23^2 - 66*
                s23^3) + 2*s12^3*s23*(-69*s13^3 - 74*s13^2*s23 + 38*s13*
                s23^2 + 9*s23^3) + s12^2*s13*s23*(107*s13^3 - 88*s13^2*s23 + 
               106*s13*s23^2 + 161*s23^3)) + p2q*p3q^3*
            (12*s12^7*(s13 + s23) - 40*s13^3*s23^3*(s13 + s23)^2 - 
             4*s12^6*(3*s13^2 + 17*s13*s23 + 3*s23^2) + 
             s12^5*(60*s13^3 - 217*s13^2*s23 - 217*s13*s23^2 + 60*s23^3) - 
             s12*s13^2*s23^2*(163*s13^3 + 117*s13^2*s23 + 117*s13*s23^2 + 163*
                s23^3) + s12^3*s13*s23*(383*s13^3 + 314*s13^2*s23 + 314*s13*
                s23^2 + 383*s23^3) - 4*s12^2*s13*s23*(51*s13^4 - 40*s13^3*
                s23 - 25*s13^2*s23^2 - 40*s13*s23^3 + 51*s23^4) + 
             s12^4*(84*s13^4 + 258*s13^3*s23 + 220*s13^2*s23^2 + 258*s13*
                s23^3 + 84*s23^4)) + p2q^4*s13*
            (2*s12^5*(3*s13^2 + 5*s13*s23 + 6*s23^2) - 20*s13^3*s23*
              (s13^3 + s13^2*s23 - 4*s13*s23^2 - 4*s23^3) + 
             s12^4*(12*s13^3 + 23*s13^2*s23 + 63*s13*s23^2 + 12*s23^3) + 
             3*s12*s13^2*s23*(s13^3 + 82*s13*s23^2 + 63*s23^3) + 
             s12^3*(18*s13^4 + 9*s13^3*s23 + 3*s13^2*s23^2 + 95*s13*s23^3 + 
               24*s23^4) + s12^2*s13*(12*s13^4 + 7*s13^3*s23 - 26*s13^2*
                s23^2 + 258*s13*s23^3 + 124*s23^4)) + p2q^2*p3q^2*
            (6*s12^7*s13 - 4*s12^6*(3*s13^2 + 14*s13*s23 + 3*s23^2) + 
             20*s13^3*s23^2*(4*s13^3 + 4*s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
             s12^5*(24*s13^3 - 17*s13^2*s23 - 67*s13*s23^2 + 72*s23^3) + 
             s12*s13^2*s23*(123*s13^4 - 92*s13^3*s23 - 37*s13^2*s23^2 - 91*
                s13*s23^3 - 249*s23^4) + s12^2*s13*s23*(-333*s13^4 - 101*
                s13^3*s23 + 366*s13^2*s23^2 + 215*s13*s23^3 - 194*s23^4) + 
             s12^4*(-36*s13^4 + 347*s13^3*s23 + 671*s13^2*s23^2 + 270*s13*
                s23^3 + 84*s23^4) + s12^3*s13*(-78*s13^4 + 68*s13^3*s23 + 443*
                s13^2*s23^2 + 388*s13*s23^3 + 345*s23^4)) + 
           p2q^3*p3q*(-2*s12^6*s13*(6*s13 + 5*s23) + s12^5*(-12*s13^3 + 27*
                s13^2*s23 + 44*s13*s23^2 + 24*s23^3) + 2*s12*s13^2*s23*
              (63*s13^4 + 54*s13^3*s23 + 180*s13^2*s23^2 + 86*s13*s23^3 - 63*
                s23^4) - 20*s13^3*s23*(s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 
               4*s13*s23^3 + 3*s23^4) + s12^4*(-36*s13^4 + 82*s13^3*s23 + 394*
                s13^2*s23^2 + 114*s13*s23^3 + 24*s23^4) + 
             s12^3*s13*(-12*s13^4 - 91*s13^3*s23 + 82*s13^2*s23^2 + 257*s13*
                s23^3 + 148*s23^4) + 2*s12^2*s13*(12*s13^5 - 43*s13^4*s23 - 
               73*s13^3*s23^2 + 233*s13^2*s23^3 + 119*s13*s23^4 - 28*
                s23^5))) + p1q^3*(p3q^2*(-2*s12^6*(6*s13^2 + 5*s13*s23 + 9*
                s23^2) + 2*s12^5*s13*(-6*s13^2 + 5*s13*s23 + 18*s23^2) + 
             s12^3*s13*s23*(80*s13^3 + 147*s13^2*s23 + 268*s13*s23^2 - 59*
                s23^3) + 20*s13*s23^4*(2*s13^3 + 2*s13^2*s23 - s13*s23^2 - 
               s23^3) + s12^4*s23*(16*s13^3 + 371*s13^2*s23 + 129*s13*s23^2 + 
               12*s23^3) + s12*s13*s23^3*(126*s13^3 + 120*s13^2*s23 + 37*s13*
                s23^2 + 63*s23^3) + s12^2*s23^2*(168*s13^4 + 200*s13^3*s23 - 
               16*s13^2*s23^2 - 107*s13*s23^3 + 6*s23^4)) + 
           p2q^2*(2*s12^5*s13*s23*(11*s13 + 4*s23) - 40*s13^2*s23^3*
              (3*s13^3 + 3*s13^2*s23 - 2*s13*s23^2 - 2*s23^3) + 
             s12^3*s13*(-12*s13^4 - 16*s13^3*s23 + 62*s13^2*s23^2 + 3*s13*
                s23^3 - 55*s23^4) + s12^4*(-12*s13^4 + 26*s13^3*s23 + 143*
                s13^2*s23^2 - 6*s13*s23^3 - 12*s23^4) + s12*s13*s23^2*
              (-189*s13^4 - 240*s13^3*s23 + 74*s13*s23^3 + 63*s23^4) - 
             2*s12^2*s23*(40*s13^5 + 57*s13^4*s23 - 49*s13^3*s23^2 + 28*s13^2*
                s23^3 + 13*s13*s23^4 - 6*s23^5)) + 
           p2q*p3q*(-2*s12^6*s23*(5*s13 + 6*s23) + s12^5*(24*s13^3 + 44*s13^2*
                s23 + 27*s13*s23^2 - 12*s23^3) + 2*s12^4*(12*s13^4 + 57*s13^3*
                s23 + 197*s13^2*s23^2 + 41*s13*s23^3 - 18*s23^4) + 
             s12^3*s23*(148*s13^4 + 257*s13^3*s23 + 82*s13^2*s23^2 - 91*s13*
                s23^3 - 12*s23^4) - 20*s13*s23^3*(3*s13^4 - 4*s13^3*s23 - 12*
                s13^2*s23^2 - 4*s13*s23^3 + s23^4) + 2*s12*s13*s23^2*
              (-63*s13^4 + 86*s13^3*s23 + 180*s13^2*s23^2 + 54*s13*s23^3 + 63*
                s23^4) + 2*s12^2*s23*(-28*s13^5 + 119*s13^4*s23 + 233*s13^3*
                s23^2 - 73*s13^2*s23^3 - 43*s13*s23^4 + 12*s23^5))) + 
         p1q^2*(p2q*p3q^2*(6*s12^7*s23 - 4*s12^6*(3*s13^2 + 14*s13*s23 + 3*
                s23^2) - 20*s13^2*s23^3*(5*s13^3 + 5*s13^2*s23 - 4*s13*
                s23^2 - 4*s23^3) + s12^5*(72*s13^3 - 67*s13^2*s23 - 17*s13*
                s23^2 + 24*s23^3) + s12^2*s13*s23*(-194*s13^4 + 215*s13^3*
                s23 + 366*s13^2*s23^2 - 101*s13*s23^3 - 333*s23^4) - 
             s12*s13*s23^2*(249*s13^4 + 91*s13^3*s23 + 37*s13^2*s23^2 + 92*
                s13*s23^3 - 123*s23^4) + s12^3*s23*(345*s13^4 + 388*s13^3*
                s23 + 443*s13^2*s23^2 + 68*s13*s23^3 - 78*s23^4) + 
             s12^4*(84*s13^4 + 270*s13^3*s23 + 671*s13^2*s23^2 + 347*s13*
                s23^3 - 36*s23^4)) + p3q^3*(6*s12^7*s23 + 20*s13^2*s23^4*
              (s13 + s23)^2 - 12*s12^6*(3*s13^2 + 3*s13*s23 + 2*s23^2) + 
             2*s12^4*s13*s23*(-37*s13^2 + 130*s13*s23 + 116*s23^2) + 
             s12^2*s13*s23^2*(193*s13^3 + 122*s13^2*s23 + 99*s13*s23^2 - 144*
                s23^3) - s12^5*(36*s13^3 + 157*s13^2*s23 + 40*s13*s23^2 + 12*
                s23^3) + s12*s13*s23^3*(63*s13^3 + 40*s13^2*s23 + 37*s13*
                s23^2 + 60*s23^3) + s12^3*s23*(149*s13^4 + 85*s13^3*s23 + 415*
                s13^2*s23^2 + 104*s13*s23^3 - 18*s23^4)) + 
           p2q^3*(2*s12^5*s13*s23*(4*s13 + 11*s23) + 40*s13^3*s23^2*
              (2*s13^3 + 2*s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             s12*s13^2*s23*(63*s13^4 + 74*s13^3*s23 - 240*s13*s23^3 - 189*
                s23^4) + s12^3*s23*(-55*s13^4 + 3*s13^3*s23 + 62*s13^2*
                s23^2 - 16*s13*s23^3 - 12*s23^4) + s12^4*(-12*s13^4 - 6*s13^3*
                s23 + 143*s13^2*s23^2 + 26*s13*s23^3 - 12*s23^4) + 
             2*s12^2*s13*(6*s13^5 - 13*s13^4*s23 - 28*s13^3*s23^2 + 49*s13^2*
                s23^3 - 57*s13*s23^4 - 40*s23^5)) - p2q^2*p3q*
            (20*s12^6*s13*s23 - 60*s13^2*s23^2*(s13 + s23)^2*(s13^2 - 4*s13*
                s23 + s23^2) - 2*s12^5*(12*s13^3 + 19*s13^2*s23 + 19*s13*
                s23^2 + 12*s23^3) + 2*s12^4*(18*s13^4 - 79*s13^3*s23 - 295*
                s13^2*s23^2 - 79*s13*s23^3 + 18*s23^4) + 8*s12^2*s13*s23*
              (35*s13^4 + 23*s13^3*s23 - 48*s13^2*s23^2 + 23*s13*s23^3 + 35*
                s23^4) + s12*s13*s23*(-63*s13^5 + 275*s13^4*s23 + 348*s13^3*
                s23^2 + 348*s13^2*s23^3 + 275*s13*s23^4 - 63*s23^5) + 
             3*s12^3*(20*s13^5 + 13*s13^4*s23 - 89*s13^3*s23^2 - 89*s13^2*
                s23^3 + 13*s13*s23^4 + 20*s23^5))))/(27*ep*(p1q + p3q)*
         (p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*s23^2*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) + 
       (ep^2*(-(p1q^6*s13*s23^3*(s12 + s23)*(s13 + s23)*
            (5*s12^5*(s13 - s23) + s13^2*s23^2*(s13 + s23)^2 + 
             10*s12^4*(s13^2 - s23^2) + 4*s12^2*s13*s23*(2*s13^2 + s13*s23 - 
               s23^2) + s12*s13^2*s23*(2*s13^2 + 5*s13*s23 + 3*s23^2) + 
             s12^3*(5*s13^3 + 11*s13^2*s23 - 9*s13*s23^2 - 5*s23^3))) + 
          p1q^5*s23^2*(p2q*(s13 + s23)*(5*s12^7*s13*(s13 - s23) + 
              s13^2*s23^3*(s13 + s23)^2*(4*s13^2 - s13*s23 - s23^2) - 
              2*s12^6*(20*s13^3 + 62*s13^2*s23 + 57*s13*s23^2 + 25*s23^3) + 
              s12*s13^2*s23^2*(9*s13^4 + 20*s13^3*s23 + 7*s13^2*s23^2 - 
                6*s13*s23^3 - 2*s23^4) - s12^5*(15*s13^4 + 213*s13^3*s23 + 
                401*s13^2*s23^2 + 293*s13*s23^3 + 140*s23^4) + 
              s12^4*(20*s13^5 - 32*s13^4*s23 - 351*s13^3*s23^2 - 
                428*s13^2*s23^3 - 269*s13*s23^4 - 120*s23^5) + 
              s12^2*s23*(-6*s13^6 + 39*s13^5*s23 + 15*s13^4*s23^2 - 
                38*s13^3*s23^3 - 23*s13^2*s23^4 - 5*s13*s23^5 + 10*s23^6) - 
              s12^3*(10*s13^6 - 46*s13^5*s23 + 9*s13^4*s23^2 + 213*s13^3*
                 s23^3 + 178*s13^2*s23^4 + 90*s13*s23^5 + 20*s23^6)) + 
            p3q*(5*s12^7*s13*(2*s13^2 + s13*s23 - 3*s23^2) + 
              s13^2*s23^3*(s13 + s23)^3*(s13^2 - 2*s13*s23 - s23^2) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(3*s13^3 - s13^2*s23 - 
                7*s13*s23^2 - 2*s23^3) - s12^6*(45*s13^4 + 149*s13^3*s23 + 
                228*s13^2*s23^2 + 184*s13*s23^3 + 50*s23^4) - 
              s12^5*(30*s13^5 + 246*s13^4*s23 + 569*s13^3*s23^2 + 
                656*s13^2*s23^3 + 433*s13*s23^4 + 140*s23^5) + 
              s12^4*(25*s13^6 - 33*s13^5*s23 - 369*s13^4*s23^2 - 
                674*s13^3*s23^3 - 622*s13^2*s23^4 - 369*s13*s23^5 - 
                120*s23^6) - s12^3*s23*(-51*s13^6 - 31*s13^5*s23 + 
                175*s13^4*s23^2 + 292*s13^3*s23^3 + 217*s13^2*s23^4 + 
                100*s13*s23^5 + 20*s23^6) + s12^2*s23*(2*s13^7 + 
                30*s13^6*s23 + 32*s13^5*s23^2 - 16*s13^4*s23^3 - 
                34*s13^3*s23^4 - 19*s13^2*s23^5 + 5*s13*s23^6 + 10*s23^7))) + 
          (s12 + s13)*(-(p2q^6*s13^3*s23*(s13 + s23)*(-5*s12^5*(s13 - s23) + 
               s13^2*s23^2*(s13 + s23)^2 - 10*s12^4*(s13^2 - s23^2) + 4*s12^2*
                s13*s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*s13*s23^2*
                (3*s13^2 + 5*s13*s23 + 2*s23^2) + s12^3*(-5*s13^3 - 
                 9*s13^2*s23 + 11*s13*s23^2 + 5*s23^3))) + 
            p3q^6*s12^3*(-3*s13^2*s23^3*(5*s13^3 - 9*s13^2*s23 - 
                9*s13*s23^2 + 5*s23^3) + s12^5*(60*s13^3 + 26*s13^2*s23 + 
                26*s13*s23^2 + 60*s23^3) + s12*s13*s23^2*(33*s13^4 + 
                28*s13^3*s23 + 53*s13^2*s23^2 - 14*s13*s23^3 + 48*s23^4) + 
              2*s12^4*(60*s13^4 + 68*s13^3*s23 + 29*s13^2*s23^2 + 
                51*s13*s23^3 + 90*s23^4) + s12^2*s23*(108*s13^5 + 
                99*s13^4*s23 + 44*s13^3*s23^2 + 19*s13^2*s23^3 + 
                146*s13*s23^4 + 60*s23^5) + 2*s12^3*(30*s13^5 + 109*s13^4*
                 s23 + 47*s13^3*s23^2 + 25*s13^2*s23^3 + 87*s13*s23^4 + 
                90*s23^5)) - p2q^5*p3q*s13^2*(s13^2*s23^2*(s13 + s23)^3*(
                s13^2 + 2*s13*s23 - s23^2) - 5*s12^6*s23*(-3*s13^2 + 
                s13*s23 + 2*s23^2) + s12^5*(s13 + s23)^2*(50*s13^2 + 
                69*s13*s23 + 45*s23^2) + s12*s13*s23^2*(s13 + s23)^2*(s13^3 + 
                4*s13^2*s23 - 2*s23^3) + s12^4*(90*s13^5 + 264*s13^4*s23 + 
                423*s13^3*s23^2 + 410*s13^2*s23^3 + 201*s13*s23^4 + 
                30*s23^5) + s12^2*s13*(-10*s13^6 - 5*s13^5*s23 + 
                18*s13^4*s23^2 + 28*s13^3*s23^3 + 7*s13^2*s23^4 - 
                34*s13*s23^5 - 26*s23^6) + s12^3*(30*s13^6 + 105*s13^5*s23 + 
                199*s13^4*s23^2 + 264*s13^3*s23^3 + 168*s13^2*s23^4 + 
                3*s13*s23^5 - 25*s23^6)) + p2q*p3q^5*s12^2*
             (s13^2*s23^3*(s13 + s23)^2*(15*s13^2 - 22*s13*s23 - 5*s23^2) + 
              2*s12^6*(55*s13^3 + 16*s13^2*s23 + 31*s13*s23^2 + 60*s23^3) + 
              s12^5*(30*s13^4 - 35*s13^3*s23 - 87*s13^2*s23^2 - 2*s13*s23^3 + 
                300*s23^4) - s12^4*(270*s13^5 + 308*s13^4*s23 + 473*s13^3*
                 s23^2 + 399*s13^2*s23^3 + 224*s13*s23^4 - 180*s23^5) - 
              s12*s13*s23^2*(52*s13^5 + 133*s13^4*s23 - 26*s13^3*s23^2 - 
                27*s13^2*s23^3 + 148*s13*s23^4 + 68*s23^5) - 
              s12^2*s23*(262*s13^6 + 370*s13^5*s23 + 219*s13^4*s23^2 - 
                7*s13^3*s23^3 + 412*s13^2*s23^4 + 170*s13*s23^5 + 60*s23^6) - 
              s12^3*(190*s13^6 + 503*s13^5*s23 + 622*s13^4*s23^2 + 
                376*s13^3*s23^3 + 549*s13^2*s23^4 + 262*s13*s23^5 + 
                60*s23^6)) + p2q^2*p3q^4*s12*(-(s13^4*s23^3*(s13 + s23)^3) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(18*s13^3 + 71*s13^2*s23 - 
                42*s13*s23^2 - 26*s23^3) + s12^7*(50*s13^3 + s13^2*s23 + 
                41*s13*s23^2 + 60*s23^3) - s12^6*(240*s13^4 + 337*s13^3*s23 + 
                322*s13^2*s23^2 + 335*s13*s23^3 - 60*s23^4) - 
              s12^5*(420*s13^5 + 526*s13^4*s23 + 564*s13^3*s23^2 + 
                613*s13^2*s23^3 + 885*s13*s23^4 + 180*s23^5) + 
              s12^4*(80*s13^6 - 77*s13^5*s23 - 12*s13^4*s23^2 + 256*s13^3*
                 s23^3 - 516*s13^2*s23^4 - 757*s13*s23^5 - 300*s23^6) + 
              2*s12^2*s13*s23*(100*s13^6 + 185*s13^5*s23 + 143*s13^4*s23^2 + 
                176*s13^3*s23^3 + 100*s13^2*s23^4 - 96*s13*s23^5 - 
                78*s23^6) + s12^3*(210*s13^7 + 311*s13^6*s23 + 501*s13^5*
                 s23^2 + 693*s13^4*s23^3 + 705*s13^3*s23^4 - 392*s13^2*
                 s23^5 - 404*s13*s23^6 - 120*s23^7)) + p2q^3*p3q^3*
             (5*s12^8*s13*s23*(-s13 + s23) + s13^4*s23^3*(s13 + s23)^4 + 
              s12*s13^3*s23^2*(s13 + s23)^2*(2*s13^3 + 3*s13^2*s23 + 
                2*s13*s23^2 + 2*s23^3) - s12^7*(150*s13^4 + 151*s13^3*s23 + 
                187*s13^2*s23^2 + 236*s13*s23^3 + 60*s23^4) + 
              s12^6*(60*s13^5 + 324*s13^4*s23 + 367*s13^3*s23^2 + 
                171*s13^2*s23^3 - 372*s13*s23^4 - 180*s23^5) + 
              2*s12^5*(240*s13^6 + 474*s13^5*s23 + 622*s13^4*s23^2 + 
                696*s13^3*s23^3 + 341*s13^2*s23^4 - 62*s13*s23^5 - 
                90*s23^6) + s12^2*s13^2*s23*(-46*s13^6 - 99*s13^5*s23 + 
                19*s13^4*s23^2 + 160*s13^3*s23^3 + 61*s13^2*s23^4 - 
                64*s13*s23^5 - 37*s23^6) + s12^3*s13*(-90*s13^7 + 
                15*s13^6*s23 + 167*s13^5*s23^2 + 201*s13^4*s23^3 + 
                433*s13^3*s23^4 + 435*s13^2*s23^5 + 33*s13*s23^6 - 
                108*s23^7) + s12^4*(180*s13^7 + 539*s13^6*s23 + 913*s13^5*
                 s23^2 + 1197*s13^4*s23^3 + 1333*s13^3*s23^4 + 399*s13^2*
                 s23^5 - 101*s13*s23^6 - 60*s23^7)) + p2q^4*p3q^2*s13*
             (-(s13^3*s23^2*(s13 + s23)^3*(s13^2 - 2*s23^2)) - 
              5*s12^7*s23*(-3*s13^2 + 2*s13*s23 + s23^2) + s12*s13^2*s23^
                2*(s13 + s23)^2*(s13^3 + 3*s13^2*s23 + 5*s13*s23^2 + 
                4*s23^3) + s12^6*(150*s13^4 + 309*s13^3*s23 + 369*s13^2*
                 s23^2 + 345*s13*s23^3 + 115*s23^4) + s12^5*(160*s13^5 + 
                240*s13^4*s23 + 302*s13^3*s23^2 + 562*s13^2*s23^3 + 
                585*s13*s23^4 + 225*s23^5) + s12^4*(-120*s13^6 - 
                308*s13^5*s23 - 424*s13^4*s23^2 - 143*s13^3*s23^3 + 
                391*s13^2*s23^4 + 363*s13*s23^5 + 85*s23^6) + 
              s12^2*s13*(10*s13^7 - 41*s13^6*s23 - 139*s13^5*s23^2 - 
                101*s13^4*s23^3 + 55*s13^3*s23^4 + 108*s13^2*s23^5 + 
                24*s13*s23^6 - 16*s23^7) - s12^3*(120*s13^7 + 295*s13^6*s23 + 
                468*s13^5*s23^2 + 465*s13^4*s23^3 + 72*s13^3*s23^4 - 
                237*s13^2*s23^5 - 117*s13*s23^6 + 20*s23^7))) + 
          p1q^4*s23*(p2q^2*(s13 + s23)*(-(s13^2*s23^3*(s13 + s23)^2*
                (6*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3)) + 
              s12^7*(55*s13^3 + 126*s13^2*s23 + 101*s13*s23^2 + 50*s23^3) + 
              s12^6*(35*s13^4 + 206*s13^3*s23 + 248*s13^2*s23^2 + 
                177*s13*s23^3 + 90*s23^4) + s12^5*(-75*s13^5 + 87*s13^4*s23 + 
                276*s13^3*s23^2 + 132*s13^2*s23^3 + 88*s13*s23^4 - 
                20*s23^5) + s12*s13^2*s23^2*(-9*s13^5 - 18*s13^4*s23 + 
                5*s13^3*s23^2 + 24*s13^2*s23^3 + 11*s13*s23^4 + s23^5) + 
              s12^4*(-35*s13^6 - 106*s13^5*s23 + 162*s13^4*s23^2 + 
                120*s13^3*s23^3 + 11*s13^2*s23^4 + 14*s13*s23^5 - 
                100*s23^6) + s12^3*(20*s13^7 - 85*s13^6*s23 - 36*s13^5*
                 s23^2 + 158*s13^4*s23^3 + 19*s13^3*s23^4 - 3*s13^2*s23^5 - 
                33*s13*s23^6 - 30*s23^7) + s12^2*s23*(28*s13^7 - 
                54*s13^6*s23 - 21*s13^5*s23^2 + 55*s13^4*s23^3 + 
                37*s13^3*s23^4 - 2*s13^2*s23^5 - 35*s13*s23^6 + 10*s23^7)) + 
            p3q^2*(s12 + s23)*(-5*s12^7*s13*(s13^2 + 2*s13*s23 - 3*s23^2) + 
              s13^2*s23^3*(s13 + s23)^3*(2*s13^2 - s23^2) + s12*s13^2*s23^
                2*(s13 + s23)^2*(4*s13^3 + 5*s13^2*s23 + 3*s13*s23^2 + 
                s23^3) + s12^6*(115*s13^4 + 345*s13^3*s23 + 369*s13^2*s23^2 + 
                309*s13*s23^3 + 150*s23^4) + s12^5*(225*s13^5 + 585*s13^4*
                 s23 + 562*s13^3*s23^2 + 302*s13^2*s23^3 + 240*s13*s23^4 + 
                160*s23^5) + s12^4*(85*s13^6 + 363*s13^5*s23 + 391*s13^4*
                 s23^2 - 143*s13^3*s23^3 - 424*s13^2*s23^4 - 308*s13*s23^5 - 
                120*s23^6) + s12^2*s23*(-16*s13^7 + 24*s13^6*s23 + 
                108*s13^5*s23^2 + 55*s13^4*s23^3 - 101*s13^3*s23^4 - 
                139*s13^2*s23^5 - 41*s13*s23^6 + 10*s23^7) - 
              s12^3*(20*s13^7 - 117*s13^6*s23 - 237*s13^5*s23^2 + 
                72*s13^4*s23^3 + 465*s13^3*s23^4 + 468*s13^2*s23^5 + 
                295*s13*s23^6 + 120*s23^7)) + p2q*p3q*
             (-5*s12^8*s13*(s13^2 + s13*s23 - 2*s23^2) - s13^2*s23^3*
               (s13 + s23)^3*(3*s13^3 - 8*s13^2*s23 - 3*s13*s23^2 + 
                2*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(6*s13^4 - 
                7*s13^3*s23 - 21*s13^2*s23^2 - 6*s13*s23^3 - s23^4) + 
              s12^7*(160*s13^4 + 486*s13^3*s23 + 581*s13^2*s23^2 + 
                485*s13*s23^3 + 200*s23^4) + s12^6*(220*s13^5 + 800*s13^4*
                 s23 + 1211*s13^3*s23^2 + 1107*s13^2*s23^3 + 876*s13*s23^4 + 
                400*s23^5) + s12^5*(-50*s13^6 + 387*s13^5*s23 + 961*s13^4*
                 s23^2 + 603*s13^3*s23^3 + 159*s13^2*s23^4 + 70*s13*s23^5 + 
                20*s23^6) - s12^4*(95*s13^7 + 127*s13^6*s23 - 254*s13^5*
                 s23^2 - 130*s13^4*s23^3 + 666*s13^3*s23^4 + 824*s13^2*
                 s23^5 + 664*s13*s23^6 + 340*s23^7) + s12^3*(10*s13^8 - 
                197*s13^7*s23 - 220*s13^6*s23^2 + 110*s13^5*s23^3 - 
                156*s13^4*s23^4 - 661*s13^3*s23^5 - 641*s13^2*s23^6 - 
                399*s13*s23^7 - 140*s23^8) + s12^2*s23*(8*s13^8 - 
                101*s13^7*s23 - 134*s13^6*s23^2 + 41*s13^5*s23^3 + 
                59*s13^4*s23^4 - 97*s13^3*s23^5 - 176*s13^2*s23^6 - 
                66*s13*s23^7 + 20*s23^8))) + 
          p1q*(-(p2q^5*s13^2*(s13 + s23)*(5*s12^7*(s13 - s23)*s23 + s13^3*
                s23^2*(s13 + s23)^2*(s13^2 + s13*s23 - 4*s23^2) + 2*s12^6*
                (25*s13^3 + 57*s13^2*s23 + 62*s13*s23^2 + 20*s23^3) + s12*
                s13^2*s23^2*(2*s13^4 + 6*s13^3*s23 - 7*s13^2*s23^2 - 
                 20*s13*s23^3 - 9*s23^4) + s12^5*(140*s13^4 + 293*s13^3*s23 + 
                 401*s13^2*s23^2 + 213*s13*s23^3 + 15*s23^4) + s12^4*
                (120*s13^5 + 269*s13^4*s23 + 428*s13^3*s23^2 + 351*s13^2*
                  s23^3 + 32*s13*s23^4 - 20*s23^5) + s12^2*s13*(-10*s13^6 + 
                 5*s13^5*s23 + 23*s13^4*s23^2 + 38*s13^3*s23^3 - 
                 15*s13^2*s23^4 - 39*s13*s23^5 + 6*s23^6) + s12^3*
                (20*s13^6 + 90*s13^5*s23 + 178*s13^4*s23^2 + 213*s13^3*
                  s23^3 + 9*s13^2*s23^4 - 46*s13*s23^5 + 10*s23^6))) + 
            p3q^5*s12^2*(-(s13^3*s23^3*(s13 + s23)^2*(5*s13^2 + 22*s13*s23 - 
                 15*s23^2)) + 2*s12^7*(60*s13^3 + 31*s13^2*s23 + 
                16*s13*s23^2 + 55*s23^3) + s12^6*(300*s13^4 + 118*s13^3*s23 - 
                25*s13^2*s23^2 - 3*s13*s23^3 + 140*s23^4) + 
              s12^5*(180*s13^5 + 76*s13^4*s23 - 401*s13^3*s23^2 - 
                560*s13^2*s23^3 - 343*s13*s23^4 - 240*s23^5) - 
              s12*s13^2*s23^2*(73*s13^5 + 180*s13^4*s23 + 7*s13^3*s23^2 - 
                34*s13^2*s23^3 + 118*s13*s23^4 + 52*s23^5) - s12^2*s13*s23*(
                128*s13^6 + 318*s13^5*s23 + 385*s13^4*s23^2 - 33*s13^3*
                 s23^3 + 352*s13^2*s23^4 + 422*s13*s23^5 + 262*s23^6) - 
              s12^4*(60*s13^6 + 82*s13^5*s23 + 773*s13^4*s23^2 + 
                775*s13^3*s23^3 + 1095*s13^2*s23^4 + 811*s13*s23^5 + 
                460*s23^6) - s12^3*(60*s13^7 + 230*s13^6*s23 + 674*s13^5*
                 s23^2 + 542*s13^4*s23^3 + 595*s13^3*s23^4 + 992*s13^2*
                 s23^5 + 765*s13*s23^6 + 190*s23^7)) + p2q^4*p3q*s13*
             (-5*s12^8*s23*(-2*s13^2 + s13*s23 + s23^2) - s13^3*s23^2*
               (s13 + s23)^3*(2*s13^3 - 3*s13^2*s23 - 8*s13*s23^2 + 
                3*s23^3) + s12*s13^2*s23^2*(s13 + s23)^2*(s13^4 + 
                6*s13^3*s23 + 21*s13^2*s23^2 + 7*s13*s23^3 - 6*s23^4) + 
              s12^7*(200*s13^4 + 485*s13^3*s23 + 581*s13^2*s23^2 + 
                486*s13*s23^3 + 160*s23^4) + s12^6*(400*s13^5 + 876*s13^4*
                 s23 + 1107*s13^3*s23^2 + 1211*s13^2*s23^3 + 800*s13*s23^4 + 
                220*s23^5) + s12^5*(20*s13^6 + 70*s13^5*s23 + 159*s13^4*
                 s23^2 + 603*s13^3*s23^3 + 961*s13^2*s23^4 + 387*s13*s23^5 - 
                50*s23^6) - s12^4*(340*s13^7 + 664*s13^6*s23 + 824*s13^5*
                 s23^2 + 666*s13^4*s23^3 - 130*s13^3*s23^4 - 254*s13^2*
                 s23^5 + 127*s13*s23^6 + 95*s23^7) - s12^3*(140*s13^8 + 
                399*s13^7*s23 + 641*s13^6*s23^2 + 661*s13^5*s23^3 + 
                156*s13^4*s23^4 - 110*s13^3*s23^5 + 220*s13^2*s23^6 + 
                197*s13*s23^7 - 10*s23^8) + s12^2*s13*(20*s13^8 - 
                66*s13^7*s23 - 176*s13^6*s23^2 - 97*s13^5*s23^3 + 
                59*s13^4*s23^4 + 41*s13^3*s23^5 - 134*s13^2*s23^6 - 
                101*s13*s23^7 + 8*s23^8)) + p2q*p3q^4*s12*
             (2*s13^4*s23^4*(s13 + s23)^3 + 4*s12^8*(55*s13^3 + 
                21*s13^2*s23 + 21*s13*s23^2 + 55*s23^3) + 3*s12*s13^2*s23^
                2*(s13 + s23)^2*(13*s13^4 + 17*s13^3*s23 - 38*s13^2*s23^2 + 
                17*s13*s23^3 + 13*s23^4) + s12^7*(230*s13^4 - 304*s13^3*s23 - 
                348*s13^2*s23^2 - 304*s13*s23^3 + 230*s23^4) - 
              s12^6*(500*s13^5 + 1005*s13^4*s23 + 1391*s13^3*s23^2 + 
                1391*s13^2*s23^3 + 1005*s13*s23^4 + 500*s23^5) - 
              s12^5*(680*s13^6 + 1089*s13^5*s23 + 1491*s13^4*s23^2 + 
                284*s13^3*s23^3 + 1491*s13^2*s23^4 + 1089*s13*s23^5 + 
                680*s23^6) - s12^4*(40*s13^7 + 625*s13^6*s23 + 500*s13^5*
                 s23^2 - 1403*s13^4*s23^3 - 1403*s13^3*s23^4 + 500*s13^2*
                 s23^5 + 625*s13*s23^6 + 40*s23^7) + 3*s12^2*s13*s23*(
                58*s13^7 + 65*s13^6*s23 + 40*s13^5*s23^2 + 205*s13^4*s23^3 + 
                205*s13^3*s23^4 + 40*s13^2*s23^5 + 65*s13*s23^6 + 58*s23^7) + 
              s12^3*(130*s13^8 + 21*s13^7*s23 + 188*s13^6*s23^2 + 
                827*s13^5*s23^3 + 2220*s13^4*s23^4 + 827*s13^3*s23^5 + 
                188*s13^2*s23^6 + 21*s13*s23^7 + 130*s23^8)) + 
            p2q^3*p3q^2*(5*s12^9*s13*s23*(-s13 + s23) - s13^4*s23^2*
               (s13 + s23)^3*(s13^3 - 4*s13^2*s23 - 2*s13*s23^2 + 5*s23^3) + 
              s12*s13^3*s23^2*(s13 + s23)^2*(4*s13^4 + 3*s13^3*s23 + 
                s13^2*s23^2 - 6*s13*s23^3 - 10*s23^4) - 2*s12^8*(125*s13^4 + 
                169*s13^3*s23 + 145*s13^2*s23^2 + 186*s13*s23^3 + 55*s23^4) + 
              s12^7*(-160*s13^5 + 253*s13^4*s23 + 686*s13^3*s23^2 + 
                456*s13^2*s23^3 - 347*s13*s23^4 - 260*s23^5) + 
              s12^6*(790*s13^6 + 1939*s13^5*s23 + 3081*s13^4*s23^2 + 
                3672*s13^3*s23^3 + 1597*s13^2*s23^4 + 117*s13*s23^5 - 
                120*s23^6) + s12^5*(840*s13^7 + 1919*s13^6*s23 + 
                3391*s13^5*s23^2 + 4920*s13^4*s23^3 + 4163*s13^3*s23^4 + 
                1105*s13^2*s23^5 - 90*s13*s23^6 + 100*s23^7) + 
              s12^2*s13^2*(10*s13^8 - 107*s13^7*s23 - 119*s13^6*s23^2 + 
                240*s13^5*s23^3 + 344*s13^4*s23^4 - 93*s13^3*s23^5 - 
                311*s13^2*s23^6 - 48*s13*s23^7 + 68*s23^8) + 
              s12^4*(-70*s13^8 + 586*s13^7*s23 + 1649*s13^6*s23^2 + 
                2451*s13^5*s23^3 + 2992*s13^4*s23^4 + 1314*s13^3*s23^5 + 
                s13^2*s23^6 - 29*s13*s23^7 + 70*s23^8) + s12^3*s13*(
                -200*s13^8 - 87*s13^7*s23 + 234*s13^6*s23^2 + 589*s13^5*
                 s23^3 + 1019*s13^4*s23^4 + 538*s13^3*s23^5 - 341*s13^2*
                 s23^6 - 180*s13*s23^7 + 148*s23^8)) + p2q^2*p3q^3*
             (s13^4*(s13 - 2*s23)*s23^3*(s13 + s23)^4 + s12^9*(100*s13^3 + 
                17*s13^2*s23 + 57*s13*s23^2 + 110*s23^3) + s12*s13^3*s23^
                2*(s13 + s23)^2*(s13^4 - 4*s13^3*s23 - 4*s13^2*s23^2 - 
                2*s13*s23^3 - 4*s23^4) - s12^8*(320*s13^4 + 780*s13^3*s23 + 
                623*s13^2*s23^2 + 663*s13*s23^3 + 20*s23^4) - 
              s12^7*(1040*s13^5 + 1378*s13^4*s23 + 1011*s13^3*s23^2 + 
                892*s13^2*s23^3 + 1149*s13*s23^4 + 520*s23^5) + 
              s12^6*(-280*s13^6 - 258*s13^5*s23 + 613*s13^4*s23^2 + 
                2483*s13^3*s23^3 + 351*s13^2*s23^4 - 351*s13*s23^5 - 
                340*s23^6) + s12^2*s13^2*s23*(-46*s13^7 + 17*s13^6*s23 + 
                301*s13^5*s23^2 + 199*s13^4*s23^3 - 241*s13^3*s23^4 - 
                138*s13^2*s23^5 + 163*s13*s23^6 + 99*s23^7) + 
              s12^5*(700*s13^7 + 821*s13^6*s23 + 2052*s13^5*s23^2 + 
                4887*s13^4*s23^3 + 4697*s13^3*s23^4 + 1231*s13^2*s23^5 + 
                120*s13*s23^6 + 250*s23^7) + s12^4*(280*s13^8 + 860*s13^7*
                 s23 + 1697*s13^6*s23^2 + 2662*s13^5*s23^3 + 4098*s13^4*
                 s23^4 + 2140*s13^3*s23^5 + 791*s13^2*s23^6 + 354*s13*s23^7 + 
                200*s23^8) + s12^3*s13*(-80*s13^8 + 316*s13^7*s23 + 
                605*s13^6*s23^2 + 657*s13^5*s23^3 + 1125*s13^4*s23^4 + 
                881*s13^3*s23^5 + 154*s13^2*s23^6 + 262*s13*s23^7 + 
                312*s23^8))) + p1q^2*(p2q^4*s13*(s13 + s23)*
             (-(s13^3*s23^2*(s13 + s23)^2*(s13^3 - 4*s13^2*s23 - 
                 4*s13*s23^2 + 6*s23^3)) + s12^7*(50*s13^3 + 101*s13^2*s23 + 
                126*s13*s23^2 + 55*s23^3) + s12^6*(90*s13^4 + 177*s13^3*s23 + 
                248*s13^2*s23^2 + 206*s13*s23^3 + 35*s23^4) + 
              s12^5*(-20*s13^5 + 88*s13^4*s23 + 132*s13^3*s23^2 + 
                276*s13^2*s23^3 + 87*s13*s23^4 - 75*s23^5) + s12*s13^2*s23^2*(
                s13^5 + 11*s13^4*s23 + 24*s13^3*s23^2 + 5*s13^2*s23^3 - 
                18*s13*s23^4 - 9*s23^5) + s12^4*(-100*s13^6 + 14*s13^5*s23 + 
                11*s13^4*s23^2 + 120*s13^3*s23^3 + 162*s13^2*s23^4 - 
                106*s13*s23^5 - 35*s23^6) - s12^3*(30*s13^7 + 33*s13^6*s23 + 
                3*s13^5*s23^2 - 19*s13^4*s23^3 - 158*s13^3*s23^4 + 
                36*s13^2*s23^5 + 85*s13*s23^6 - 20*s23^7) + s12^2*s13*(
                10*s13^7 - 35*s13^6*s23 - 2*s13^5*s23^2 + 37*s13^4*s23^3 + 
                55*s13^3*s23^4 - 21*s13^2*s23^5 - 54*s13*s23^6 + 28*s23^7)) + 
            p3q^4*s12*(s12 + s23)*(-(s13^3*s23^4*(s13 + s23)^3) - 
              s12*s13^2*s23^2*(s13 + s23)^2*(26*s13^3 + 42*s13^2*s23 - 
                71*s13*s23^2 - 18*s23^3) + s12^7*(60*s13^3 + 41*s13^2*s23 + 
                s13*s23^2 + 50*s23^3) + s12^6*(60*s13^4 - 335*s13^3*s23 - 
                322*s13^2*s23^2 - 337*s13*s23^3 - 240*s23^4) - 
              s12^5*(180*s13^5 + 885*s13^4*s23 + 613*s13^3*s23^2 + 
                564*s13^2*s23^3 + 526*s13*s23^4 + 420*s23^5) - 
              s12^4*(300*s13^6 + 757*s13^5*s23 + 516*s13^4*s23^2 - 
                256*s13^3*s23^3 + 12*s13^2*s23^4 + 77*s13*s23^5 - 80*s23^6) + 
              2*s12^2*s13*s23*(-78*s13^6 - 96*s13^5*s23 + 100*s13^4*s23^2 + 
                176*s13^3*s23^3 + 143*s13^2*s23^4 + 185*s13*s23^5 + 
                100*s23^6) + s12^3*(-120*s13^7 - 404*s13^6*s23 - 
                392*s13^5*s23^2 + 705*s13^4*s23^3 + 693*s13^3*s23^4 + 
                501*s13^2*s23^5 + 311*s13*s23^6 + 210*s23^7)) + 
            p2q*p3q^3*(-(s13^3*(2*s13 - s23)*s23^4*(s13 + s23)^4) + 
              s12^9*(110*s13^3 + 57*s13^2*s23 + 17*s13*s23^2 + 100*s23^3) - 
              s12*s13^2*s23^3*(s13 + s23)^2*(4*s13^4 + 2*s13^3*s23 + 
                4*s13^2*s23^2 + 4*s13*s23^3 - s23^4) - s12^8*(20*s13^4 + 
                663*s13^3*s23 + 623*s13^2*s23^2 + 780*s13*s23^3 + 
                320*s23^4) - s12^7*(520*s13^5 + 1149*s13^4*s23 + 
                892*s13^3*s23^2 + 1011*s13^2*s23^3 + 1378*s13*s23^4 + 
                1040*s23^5) + s12^6*(-340*s13^6 - 351*s13^5*s23 + 
                351*s13^4*s23^2 + 2483*s13^3*s23^3 + 613*s13^2*s23^4 - 
                258*s13*s23^5 - 280*s23^6) + s12^2*s13*s23^2*(99*s13^7 + 
                163*s13^6*s23 - 138*s13^5*s23^2 - 241*s13^4*s23^3 + 
                199*s13^3*s23^4 + 301*s13^2*s23^5 + 17*s13*s23^6 - 
                46*s23^7) + s12^5*(250*s13^7 + 120*s13^6*s23 + 1231*s13^5*
                 s23^2 + 4697*s13^4*s23^3 + 4887*s13^3*s23^4 + 2052*s13^2*
                 s23^5 + 821*s13*s23^6 + 700*s23^7) + s12^3*s23*(312*s13^8 + 
                262*s13^7*s23 + 154*s13^6*s23^2 + 881*s13^5*s23^3 + 
                1125*s13^4*s23^4 + 657*s13^3*s23^5 + 605*s13^2*s23^6 + 
                316*s13*s23^7 - 80*s23^8) + s12^4*(200*s13^8 + 354*s13^7*
                 s23 + 791*s13^6*s23^2 + 2140*s13^5*s23^3 + 4098*s13^4*
                 s23^4 + 2662*s13^3*s23^5 + 1697*s13^2*s23^6 + 860*s13*
                 s23^7 + 280*s23^8)) + p2q^2*p3q^2*(s13^3*s23^3*(s13 + s23)^
                4*(4*s13^2 - 9*s13*s23 + 4*s23^2) + 2*s12^9*(25*s13^3 + 
                8*s13^2*s23 + 8*s13*s23^2 + 25*s23^3) + s12*s13^2*s23^2*
               (s13 + s23)^3*(4*s13^4 - 9*s13^3*s23 + 3*s13^2*s23^2 - 
                9*s13*s23^3 + 4*s23^4) - 5*s12^8*(36*s13^4 + 115*s13^3*s23 + 
                102*s13^2*s23^2 + 115*s13*s23^3 + 36*s23^4) - 
              2*s12^7*(205*s13^5 + 127*s13^4*s23 - 240*s13^3*s23^2 - 
                240*s13^2*s23^3 + 127*s13*s23^4 + 205*s23^5) - 
              2*s12^2*s13*s23*(s13 + s23)^2*(33*s13^6 - 120*s13^5*s23 + 
                26*s13^4*s23^2 + 74*s13^3*s23^3 + 26*s13^2*s23^4 - 
                120*s13*s23^5 + 33*s23^6) + s12^6*(260*s13^6 + 1247*s13^5*
                 s23 + 3141*s13^4*s23^2 + 5188*s13^3*s23^3 + 3141*s13^2*
                 s23^4 + 1247*s13*s23^5 + 260*s23^6) + s12^5*(690*s13^7 + 
                1369*s13^6*s23 + 3503*s13^5*s23^2 + 7060*s13^4*s23^3 + 
                7060*s13^3*s23^4 + 3503*s13^2*s23^5 + 1369*s13*s23^6 + 
                690*s23^7) + s12^4*(160*s13^8 + 886*s13^7*s23 + 1871*s13^6*
                 s23^2 + 3247*s13^5*s23^3 + 4804*s13^4*s23^4 + 3247*s13^3*
                 s23^5 + 1871*s13^2*s23^6 + 886*s13*s23^7 + 160*s23^8) + 
              s12^3*(-90*s13^9 + 361*s13^8*s23 + 607*s13^7*s23^2 + 
                555*s13^6*s23^3 + 1073*s13^5*s23^4 + 1073*s13^4*s23^5 + 
                555*s13^3*s23^6 + 607*s13^2*s23^7 + 361*s13*s23^8 - 
                90*s23^9)) + p2q^3*p3q*(-(s13^3*s23^2*(s13 + s23)^3*
                (s13^4 - 8*s13^3*s23 + 2*s13^2*s23^2 + 12*s13*s23^3 - 
                 3*s23^4)) - s12^8*(100*s13^4 + 167*s13^3*s23 + 133*s13^2*
                 s23^2 + 146*s13*s23^3 + 50*s23^4) + s12^7*(-20*s13^5 + 
                321*s13^4*s23 + 868*s13^3*s23^2 + 863*s13^2*s23^3 + 
                266*s13*s23^4 - 30*s23^5) + s12*s13^2*s23^2*(s13 + s23)^2*(
                5*s13^5 + 5*s13^4*s23 - 4*s13^3*s23^2 - 20*s13^2*s23^3 - 
                11*s13*s23^4 + 3*s23^5) + 2*s12^6*(195*s13^6 + 564*s13^5*
                 s23 + 1176*s13^4*s23^2 + 1643*s13^3*s23^3 + 1122*s13^2*
                 s23^4 + 441*s13*s23^5 + 100*s23^6) + s12^5*(300*s13^7 + 
                813*s13^6*s23 + 2025*s13^5*s23^2 + 3870*s13^4*s23^3 + 
                3973*s13^3*s23^4 + 1987*s13^2*s23^5 + 692*s13*s23^6 + 
                280*s23^7) + s12^4*(-140*s13^8 + 270*s13^7*s23 + 
                972*s13^6*s23^2 + 1863*s13^5*s23^3 + 2774*s13^4*s23^4 + 
                1930*s13^3*s23^5 + 959*s13^2*s23^6 + 512*s13*s23^7 + 
                90*s23^8) + s12^2*s13*(10*s13^9 - 91*s13^8*s23 - 
                8*s13^7*s23^2 + 266*s13^6*s23^3 + 194*s13^5*s23^4 - 
                103*s13^4*s23^5 - 120*s13^3*s23^6 + 166*s13^2*s23^7 + 
                142*s13*s23^8 - 20*s23^9) + s12^3*(-120*s13^9 + 6*s13^8*s23 + 
                284*s13^7*s23^2 + 492*s13^6*s23^3 + 962*s13^5*s23^4 + 
                853*s13^4*s23^5 + 304*s13^3*s23^6 + 359*s13^2*s23^7 + 
                270*s13*s23^8 - 10*s23^9))) + 
          p1q^3*(p3q^3*(s12 + s23)*(5*s12^8*s13*(s13 - s23)*s23 + 
              s13^3*s23^4*(s13 + s23)^4 + s12*s13^2*s23^3*(s13 + s23)^2*(
                2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) - 
              s12^7*(60*s13^4 + 236*s13^3*s23 + 187*s13^2*s23^2 + 
                151*s13*s23^3 + 150*s23^4) + s12^6*(-180*s13^5 - 
                372*s13^4*s23 + 171*s13^3*s23^2 + 367*s13^2*s23^3 + 
                324*s13*s23^4 + 60*s23^5) + s12^2*s13*s23^2*(-37*s13^6 - 
                64*s13^5*s23 + 61*s13^4*s23^2 + 160*s13^3*s23^3 + 
                19*s13^2*s23^4 - 99*s13*s23^5 - 46*s23^6) + 
              2*s12^5*(-90*s13^6 - 62*s13^5*s23 + 341*s13^4*s23^2 + 
                696*s13^3*s23^3 + 622*s13^2*s23^4 + 474*s13*s23^5 + 
                240*s23^6) + s12^3*s23*(-108*s13^7 + 33*s13^6*s23 + 
                435*s13^5*s23^2 + 433*s13^4*s23^3 + 201*s13^3*s23^4 + 
                167*s13^2*s23^5 + 15*s13*s23^6 - 90*s23^7) + 
              s12^4*(-60*s13^7 - 101*s13^6*s23 + 399*s13^5*s23^2 + 
                1333*s13^4*s23^3 + 1197*s13^3*s23^4 + 913*s13^2*s23^5 + 
                539*s13*s23^6 + 180*s23^7)) + p2q^3*(s13 + s23)*
             (2*s13^3*s23^3*(s13 + s23)^3*(2*s13^2 - 5*s13*s23 + 2*s23^2) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(3*s13^4 - 2*s13^3*s23 - 
                16*s13^2*s23^2 - 2*s13*s23^3 + 3*s23^4) + s12^7*(50*s13^4 + 
                161*s13^3*s23 + 242*s13^2*s23^2 + 161*s13*s23^3 + 50*s23^4) + 
              s12^6*(140*s13^5 + 331*s13^4*s23 + 613*s13^3*s23^2 + 
                613*s13^2*s23^3 + 331*s13*s23^4 + 140*s23^5) + 
              s12^5*(120*s13^6 + 321*s13^5*s23 + 630*s13^4*s23^2 + 
                958*s13^3*s23^3 + 630*s13^2*s23^4 + 321*s13*s23^5 + 
                120*s23^6) + s12^2*s13*s23*(-30*s13^7 + 53*s13^6*s23 + 
                20*s13^5*s23^2 - 35*s13^4*s23^3 - 35*s13^3*s23^4 + 
                20*s13^2*s23^5 + 53*s13*s23^6 - 30*s23^7) + s12^4*(20*s13^7 + 
                263*s13^6*s23 + 322*s13^5*s23^2 + 639*s13^4*s23^3 + 
                639*s13^3*s23^4 + 322*s13^2*s23^5 + 263*s13*s23^6 + 
                20*s23^7) + s12^3*(-10*s13^8 + 82*s13^7*s23 + 113*s13^6*
                 s23^2 + 135*s13^5*s23^3 + 308*s13^4*s23^4 + 135*s13^3*
                 s23^5 + 113*s13^2*s23^6 + 82*s13*s23^7 - 10*s23^8)) + 
            p2q*p3q^2*(5*s12^9*s13*(s13 - s23)*s23 - s13^2*s23^4*(s13 + s23)^
                3*(5*s13^3 - 2*s13^2*s23 - 4*s13*s23^2 + s23^3) - 
              s12*s13^2*s23^3*(s13 + s23)^2*(10*s13^4 + 6*s13^3*s23 - 
                s13^2*s23^2 - 3*s13*s23^3 - 4*s23^4) - 2*s12^8*(55*s13^4 + 
                186*s13^3*s23 + 145*s13^2*s23^2 + 169*s13*s23^3 + 
                125*s23^4) + s12^7*(-260*s13^5 - 347*s13^4*s23 + 
                456*s13^3*s23^2 + 686*s13^2*s23^3 + 253*s13*s23^4 - 
                160*s23^5) + s12^6*(-120*s13^6 + 117*s13^5*s23 + 
                1597*s13^4*s23^2 + 3672*s13^3*s23^3 + 3081*s13^2*s23^4 + 
                1939*s13*s23^5 + 790*s23^6) + s12^5*(100*s13^7 - 
                90*s13^6*s23 + 1105*s13^5*s23^2 + 4163*s13^4*s23^3 + 
                4920*s13^3*s23^4 + 3391*s13^2*s23^5 + 1919*s13*s23^6 + 
                840*s23^7) + s12^3*s23*(148*s13^8 - 180*s13^7*s23 - 
                341*s13^6*s23^2 + 538*s13^5*s23^3 + 1019*s13^4*s23^4 + 
                589*s13^3*s23^5 + 234*s13^2*s23^6 - 87*s13*s23^7 - 
                200*s23^8) + s12^4*(70*s13^8 - 29*s13^7*s23 + s13^6*s23^2 + 
                1314*s13^5*s23^3 + 2992*s13^4*s23^4 + 2451*s13^3*s23^5 + 
                1649*s13^2*s23^6 + 586*s13*s23^7 - 70*s23^8) + 
              s12^2*s23^2*(68*s13^8 - 48*s13^7*s23 - 311*s13^6*s23^2 - 
                93*s13^5*s23^3 + 344*s13^4*s23^4 + 240*s13^3*s23^5 - 
                119*s13^2*s23^6 - 107*s13*s23^7 + 10*s23^8)) + 
            p2q^2*p3q*(s13^2*s23^3*(s13 + s23)^3*(3*s13^4 - 12*s13^3*s23 - 
                2*s13^2*s23^2 + 8*s13*s23^3 - s23^4) - s12^8*(50*s13^4 + 
                146*s13^3*s23 + 133*s13^2*s23^2 + 167*s13*s23^3 + 
                100*s23^4) + s12^7*(-30*s13^5 + 266*s13^4*s23 + 863*s13^3*
                 s23^2 + 868*s13^2*s23^3 + 321*s13*s23^4 - 20*s23^5) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(3*s13^5 - 11*s13^4*s23 - 
                20*s13^3*s23^2 - 4*s13^2*s23^3 + 5*s13*s23^4 + 5*s23^5) + 
              2*s12^6*(100*s13^6 + 441*s13^5*s23 + 1122*s13^4*s23^2 + 
                1643*s13^3*s23^3 + 1176*s13^2*s23^4 + 564*s13*s23^5 + 
                195*s23^6) + s12^5*(280*s13^7 + 692*s13^6*s23 + 1987*s13^5*
                 s23^2 + 3973*s13^4*s23^3 + 3870*s13^3*s23^4 + 2025*s13^2*
                 s23^5 + 813*s13*s23^6 + 300*s23^7) + s12^4*(90*s13^8 + 
                512*s13^7*s23 + 959*s13^6*s23^2 + 1930*s13^5*s23^3 + 
                2774*s13^4*s23^4 + 1863*s13^3*s23^5 + 972*s13^2*s23^6 + 
                270*s13*s23^7 - 140*s23^8) + s12^3*(-10*s13^9 + 270*s13^8*
                 s23 + 359*s13^7*s23^2 + 304*s13^6*s23^3 + 853*s13^5*s23^4 + 
                962*s13^4*s23^5 + 492*s13^3*s23^6 + 284*s13^2*s23^7 + 
                6*s13*s23^8 - 120*s23^9) + s12^2*s23*(-20*s13^9 + 
                142*s13^8*s23 + 166*s13^7*s23^2 - 120*s13^6*s23^3 - 
                103*s13^5*s23^4 + 194*s13^4*s23^5 + 266*s13^3*s23^6 - 
                8*s13^2*s23^7 - 91*s13*s23^8 + 10*s23^9)))))/
        (27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)*
         s23^2*(s12 + s23)*(s13 + s23)*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - 
       (-(p1q^6*s23^2*(s12 + s23)^2*(s13 + s23)^2*
           (61*s13^4*s23^3*(s13 + s23) + 6*s12^6*(8*s13^2 + 5*s13*s23 + 
              3*s23^2) + s12*s13^3*s23^2*(193*s13^2 + 336*s13*s23 + 
              82*s23^2) + s12^2*s13^2*s23*(210*s13^3 + 575*s13^2*s23 + 
              221*s13*s23^2 - 33*s23^3) + 6*s12^5*(24*s13^3 + 24*s13^2*s23 + 
              17*s13*s23^2 + 6*s23^3) + 3*s12^4*(48*s13^4 + 136*s13^3*s23 + 
              25*s13^2*s23^2 + 32*s13*s23^3 + 6*s23^4) + 
            s12^3*s13*(48*s13^4 + 504*s13^3*s23 + 373*s13^2*s23^2 - 
              54*s13*s23^3 + 24*s23^4))) + p1q^5*s23*(s12 + s23)*(s13 + s23)*
          (p3q*(61*s13^3*s23^4*(s13 + s23)^2*(s13^2 - 2*s13*s23 - s23^2) + 
             6*s12^8*(16*s13^3 + 33*s13^2*s23 + 21*s13*s23^2 + 12*s23^3) + 
             s12^7*(240*s13^4 + 570*s13^3*s23 + 519*s13^2*s23^2 + 451*s13*
                s23^3 + 180*s23^4) + s12*s13^2*s23^3*(254*s13^5 + 147*s13^4*
                s23 - 687*s13^3*s23^2 - 820*s13^2*s23^3 - 322*s13*s23^4 - 82*
                s23^5) + s12^6*(240*s13^5 + 960*s13^4*s23 + 470*s13^3*s23^2 - 
               231*s13^2*s23^3 + 532*s13*s23^4 + 156*s23^5) + 
             s12^2*s13*s23^2*(403*s13^6 + 411*s13^5*s23 - 1090*s13^4*s23^2 - 
               1507*s13^3*s23^3 - 241*s13^2*s23^4 + 218*s13*s23^5 - 11*
                s23^6) + s12^5*(144*s13^6 + 852*s13^5*s23 + 629*s13^4*s23^2 - 
               1219*s13^3*s23^3 - 1329*s13^2*s23^4 + 29*s13*s23^5 + 60*
                s23^6) + 2*s12^3*s13*s23*(129*s13^6 + 316*s13^5*s23 - 264*
                s13^4*s23^2 - 992*s13^3*s23^3 - 547*s13^2*s23^4 + 148*s13*
                s23^5 + 94*s23^6) + s12^4*(48*s13^7 + 522*s13^6*s23 + 661*
                s13^5*s23^2 - 1094*s13^4*s23^3 - 2259*s13^3*s23^4 - 841*s13^2*
                s23^5 + 21*s13*s23^6 + 12*s23^7)) + 
           p2q*(61*s13^3*s23^4*(s13 + s23)^2*(4*s13^2 - s13*s23 - s23^2) + 
             6*s12^8*(8*s13^3 + 12*s13^2*s23 + 7*s13*s23^2 + 3*s23^3) + 
             s12^7*(144*s13^4 + 216*s13^3*s23 + 131*s13^2*s23^2 + 147*s13*
                s23^3 + 36*s23^4) + s12*s13^2*s23^3*(783*s13^5 + 1796*s13^4*
                s23 + 923*s13^3*s23^2 - 248*s13^2*s23^3 - 240*s13*s23^4 - 82*
                s23^5) + 2*s12^6*(120*s13^5 + 324*s13^4*s23 - 93*s13^3*
                s23^2 - 202*s13^2*s23^3 + 119*s13*s23^4 + 24*s23^5) + 
             s12^2*s13*s23^2*(1021*s13^6 + 2731*s13^5*s23 + 1366*s13^4*
                s23^2 - 802*s13^3*s23^3 - 262*s13^2*s23^4 + 185*s13*s23^5 - 
               11*s23^6) + s12^5*(240*s13^6 + 1092*s13^5*s23 + 27*s13^4*
                s23^2 - 1839*s13^3*s23^3 - 929*s13^2*s23^4 + 41*s13*s23^5 + 
               60*s23^6) + s12^3*s13*s23*(564*s13^6 + 2278*s13^5*s23 + 1175*
                s13^4*s23^2 - 2323*s13^3*s23^3 - 1646*s13^2*s23^4 + 298*s13*
                s23^5 + 212*s23^6) + s12^4*(96*s13^7 + 1152*s13^6*s23 + 1439*
                s13^5*s23^2 - 1999*s13^4*s23^3 - 2978*s13^3*s23^4 - 495*s13^2*
                s23^5 + 131*s13*s23^6 + 30*s23^7))) - 
         (s12 + s13)*(p3q^6*s12^3*(s12 + s23)*(6*s12^7*(3*s13^2 + 2*s13*s23 + 
               3*s23^2) - s12^5*(s13 + s23)^2*(42*s13^2 + 235*s13*s23 + 42*
                s23^2) + 10*s13^3*s23^3*(s13^3 - 47*s13^2*s23 - 47*s13*
                s23^2 + s23^3) + s12^6*(6*s13^3 - 26*s13^2*s23 - 26*s13*
                s23^2 + 6*s23^3) - s12*s13^2*s23^2*(s13^4 + 1200*s13^3*s23 + 
               2350*s13^2*s23^2 + 1200*s13*s23^3 + s23^4) - 
             s12^3*s13*s23*(669*s13^4 + 2339*s13^3*s23 + 3268*s13^2*s23^2 + 
               2339*s13*s23^3 + 669*s23^4) - s12^2*s13*s23*(21*s13^5 + 1299*
                s13^4*s23 + 3382*s13^3*s23^2 + 3382*s13^2*s23^3 + 1299*s13*
                s23^4 + 21*s23^5) - s12^4*(30*s13^5 + 929*s13^4*s23 + 1491*
                s13^3*s23^2 + 1491*s13^2*s23^3 + 929*s13*s23^4 + 30*s23^5)) + 
           p2q^6*s13^2*(s13 + s23)^2*(61*s13^4*s23^4*(s13 + s23) + 
             6*s12^7*(3*s13^2 + 5*s13*s23 + 8*s23^2) + s12*s13^3*s23^3*
              (82*s13^2 + 397*s13*s23 + 254*s23^2) + 6*s12^6*(9*s13^3 + 22*
                s13^2*s23 + 32*s13*s23^2 + 24*s23^3) + s12^2*s13^2*s23^2*
              (-33*s13^3 + 303*s13^2*s23 + 911*s13*s23^2 + 403*s23^3) + 
             3*s12^5*(18*s13^4 + 66*s13^3*s23 + 73*s13^2*s23^2 + 184*s13*
                s23^3 + 48*s23^4) + s12^3*s13*s23*(24*s13^4 - 87*s13^3*s23 + 
               594*s13^2*s23^2 + 1079*s13*s23^3 + 258*s23^4) + 
             s12^4*(18*s13^5 + 120*s13^4*s23 + 21*s13^3*s23^2 + 781*s13^2*
                s23^3 + 648*s13*s23^4 + 48*s23^5)) + p2q*p3q^5*s12^2*
            (-(s13^3*s23^4*(s13 + s23)^2*(109*s13^2 - 523*s13*s23 - 
                4*s23^2)) + 18*s12^9*(2*s13^2 + s13*s23 + s23^2) - 
             2*s12^8*(6*s13^3 + 26*s13^2*s23 + 107*s13*s23^2 + 45*s23^3) - 
             2*s12^7*(6*s13^4 + 168*s13^3*s23 + 505*s13^2*s23^2 + 553*s13*
                s23^3 + 174*s23^4) + s12^6*(156*s13^5 - 315*s13^4*s23 - 187*
                s13^3*s23^2 - 2169*s13^2*s23^3 - 2777*s13*s23^4 - 324*
                s23^5) + s12*s13^2*s23^3*(-255*s13^5 + 2014*s13^4*s23 + 4415*
                s13^3*s23^2 + 3741*s13^2*s23^3 + 1624*s13*s23^4 + 29*s23^5) + 
             s12^5*(120*s13^6 + 2103*s13^5*s23 + 2340*s13^4*s23^2 + 336*s13^3*
                s23^3 - 2549*s13^2*s23^4 - 2330*s13*s23^5 - 54*s23^6) + 
             s12^4*s23*(2195*s13^6 + 7214*s13^5*s23 + 7594*s13^4*s23^2 + 2081*
                s13^3*s23^3 - 316*s13^2*s23^4 + 460*s13*s23^5 + 30*s23^6) + 
             s12^2*s13*s23^2*(-113*s13^6 + 4756*s13^5*s23 + 9803*s13^4*
                s23^2 + 8170*s13^3*s23^3 + 4978*s13^2*s23^4 + 1945*s13*
                s23^5 + 35*s23^6) + s12^3*s13*s23*(43*s13^6 + 5052*s13^5*
                s23 + 11646*s13^4*s23^2 + 9981*s13^3*s23^3 + 5180*s13^2*
                s23^4 + 2902*s13*s23^5 + 922*s23^6)) - p2q^5*p3q*s13*
            (s13 + s23)*(-61*s13^4*s23^3*(s13 + s23)^2*(s13^2 + 2*s13*s23 - 
               s23^2) + 6*s12^8*(12*s13^3 + 21*s13^2*s23 + 33*s13*s23^2 + 16*
                s23^3) + s12^7*(180*s13^4 + 451*s13^3*s23 + 519*s13^2*s23^2 + 
               570*s13*s23^3 + 240*s23^4) - s12*s13^3*s23^2*(82*s13^5 + 322*
                s13^4*s23 + 820*s13^3*s23^2 + 687*s13^2*s23^3 - 147*s13*
                s23^4 - 254*s23^5) + s12^6*(156*s13^5 + 532*s13^4*s23 - 231*
                s13^3*s23^2 + 470*s13^2*s23^3 + 960*s13*s23^4 + 240*s23^5) + 
             2*s12^3*s13*s23*(94*s13^6 + 148*s13^5*s23 - 547*s13^4*s23^2 - 
               992*s13^3*s23^3 - 264*s13^2*s23^4 + 316*s13*s23^5 + 129*
                s23^6) + s12^5*(60*s13^6 + 29*s13^5*s23 - 1329*s13^4*s23^2 - 
               1219*s13^3*s23^3 + 629*s13^2*s23^4 + 852*s13*s23^5 + 144*
                s23^6) + s12^2*s13^2*s23*(-11*s13^6 + 218*s13^5*s23 - 241*
                s13^4*s23^2 - 1507*s13^3*s23^3 - 1090*s13^2*s23^4 + 411*s13*
                s23^5 + 403*s23^6) + s12^4*(12*s13^7 + 21*s13^6*s23 - 841*
                s13^5*s23^2 - 2259*s13^4*s23^3 - 1094*s13^3*s23^4 + 661*s13^2*
                s23^5 + 522*s13*s23^6 + 48*s23^7)) + p2q^2*p3q^4*s12*
            (s13^4*(160*s13 - 57*s23)*s23^4*(s13 + s23)^3 + 
             6*s12^10*s13*(3*s13 + s23) + s12*s13^3*s23^3*(s13 + s23)^2*
              (488*s13^3 - 646*s13^2*s23 + 944*s13*s23^2 - 307*s23^3) - 
             2*s12^9*(45*s13^3 + 61*s13^2*s23 + 139*s13*s23^2 + 81*s23^3) - 
             s12^8*(78*s13^4 + 188*s13^3*s23 + 177*s13^2*s23^2 + 559*s13*
                s23^3 + 360*s23^4) + s12^7*(6*s13^5 + 410*s13^4*s23 + 3059*
                s13^3*s23^2 + 2213*s13^2*s23^3 - 598*s13*s23^4 - 108*s23^5) + 
             s12^2*s13^2*s23^2*(346*s13^6 - 2473*s13^5*s23 - 3287*s13^4*
                s23^2 + 2256*s13^3*s23^3 + 4999*s13^2*s23^4 + 1861*s13*
                s23^5 - 414*s23^6) + s12^6*(-204*s13^6 + 2346*s13^5*s23 + 
               5245*s13^4*s23^2 + 8571*s13^3*s23^3 + 6856*s13^2*s23^4 + 1496*
                s13*s23^5 + 216*s23^6) + s12^4*s13*s23*(-2504*s13^6 - 4386*
                s13^5*s23 + 3219*s13^4*s23^2 + 14749*s13^3*s23^3 + 16596*
                s13^2*s23^4 + 8993*s13*s23^5 + 1889*s23^6) + 
             s12^3*s13*s23*(-12*s13^7 - 4724*s13^6*s23 - 6712*s13^5*s23^2 + 
               3018*s13^4*s23^3 + 11657*s13^3*s23^4 + 9650*s13^2*s23^5 + 3093*
                s13*s23^6 - 134*s23^7) + s12^5*(-180*s13^7 - 616*s13^6*s23 + 
               3571*s13^5*s23^2 + 12111*s13^4*s23^3 + 14828*s13^3*s23^4 + 
               10092*s13^2*s23^5 + 3842*s13*s23^6 + 126*s23^7)) - 
           p2q^3*p3q^3*(61*s13^5*s23^4*(s13 + s23)^4 - s12^9*s13*s23*
              (39*s13^2 + 529*s13*s23 + 418*s23^2) + 6*s12^10*
              (12*s13^3 + 13*s13^2*s23 + 13*s13*s23^2 + 8*s23^3) + 
             s12*s13^4*s23^3*(s13 + s23)^2*(303*s13^3 + 223*s13^2*s23 + 227*
                s13*s23^2 + 368*s23^3) - s12^8*(72*s13^5 + 408*s13^4*s23 + 
               1951*s13^3*s23^2 + 2792*s13^2*s23^3 + 1393*s13*s23^4 + 288*
                s23^5) + s12^7*(24*s13^6 - 443*s13^5*s23 + 1213*s13^4*s23^2 - 
               1553*s13^3*s23^3 - 5509*s13^2*s23^4 - 2804*s13*s23^5 - 384*
                s23^6) + s12^2*s13^3*s23^2*(293*s13^6 - 150*s13^5*s23 + 223*
                s13^4*s23^2 + 2358*s13^3*s23^3 + 3078*s13^2*s23^4 + 2421*s13*
                s23^5 + 1035*s23^6) + s12^5*s13*(-120*s13^7 + 1381*s13^6*
                s23 + 8149*s13^5*s23^2 + 15137*s13^4*s23^3 + 10596*s13^3*
                s23^4 + 98*s13^2*s23^5 - 2811*s13*s23^6 - 730*s23^7) - 
             s12^6*(96*s13^7 - 2480*s13^6*s23 - 7201*s13^5*s23^2 - 6468*s13^4*
                s23^3 + 763*s13^3*s23^4 + 5310*s13^2*s23^5 + 3064*s13*s23^6 + 
               144*s23^7) + s12^4*s13*s23*(-1230*s13^7 + 587*s13^6*s23 + 9408*
                s13^5*s23^2 + 14630*s13^4*s23^3 + 8977*s13^3*s23^4 + 1991*
                s13^2*s23^5 + 360*s13*s23^6 + 427*s23^7) + s12^3*s13^2*s23*
              (21*s13^7 - 2025*s13^6*s23 - 1067*s13^5*s23^2 + 6022*s13^4*
                s23^3 + 8521*s13^3*s23^4 + 4711*s13^2*s23^5 + 2418*s13*
                s23^6 + 1185*s23^7)) + p2q^4*p3q^2*
            (61*s13^5*s23^3*(s13 + s23)^3*(s13^2 - 2*s23^2) + 
             s12*s13^4*s23^2*(s13 + s23)^2*(82*s13^4 - 145*s13^3*s23 - 200*
                s13^2*s23^2 - 477*s13*s23^3 - 565*s23^4) + 
             12*s12^9*(9*s13^4 + 17*s13^3*s23 + 23*s13^2*s23^2 + 18*s13*
                s23^3 + 4*s23^4) + s12^8*(180*s13^5 + 456*s13^4*s23 + 191*
                s13^3*s23^2 + 161*s13^2*s23^3 + 366*s13*s23^4 + 144*s23^5) + 
             2*s12^7*(51*s13^6 + 101*s13^5*s23 - 973*s13^4*s23^2 - 1569*s13^3*
                s23^3 - 462*s13^2*s23^4 + 168*s13*s23^5 + 72*s23^6) + 
             s12^2*s13^3*s23*(11*s13^7 - 467*s13^6*s23 - 552*s13^5*s23^2 - 
               398*s13^4*s23^3 - 2124*s13^3*s23^4 - 4110*s13^2*s23^5 - 3437*
                s13*s23^6 - 1127*s23^7) + s12^5*s13*(6*s13^7 + 771*s13^6*
                s23 + 1942*s13^5*s23^2 - 2851*s13^4*s23^3 - 10509*s13^3*
                s23^4 - 9253*s13^2*s23^5 - 3120*s13*s23^6 - 360*s23^7) + 
             s12^6*(66*s13^7 - 576*s13^6*s23 - 2401*s13^5*s23^2 - 6163*s13^4*
                s23^3 - 7244*s13^3*s23^4 - 2804*s13^2*s23^5 + 132*s13*s23^6 + 
               48*s23^7) - s12^3*s13^2*s23*(233*s13^7 - 1234*s13^6*s23 - 3639*
                s13^5*s23^2 - 167*s13^4*s23^3 + 6390*s13^3*s23^4 + 7198*s13^2*
                s23^5 + 3813*s13*s23^6 + 1000*s23^7) - s12^4*s13*
              (30*s13^8 - 1053*s13^7*s23 - 4565*s13^6*s23^2 - 4208*s13^5*
                s23^3 + 5053*s13^4*s23^4 + 11336*s13^3*s23^5 + 7400*s13^2*
                s23^6 + 2125*s13*s23^7 + 306*s23^8))) + 
         p1q*(-(p3q^5*s12^2*(s12 + s23)*(s13^4*s23^3*(s13 + s23)^2*(4*s13^2 + 
                523*s13*s23 - 109*s23^2) + 18*s12^9*(s13^2 + s13*s23 + 
                2*s23^2) - 2*s12^8*(45*s13^3 + 107*s13^2*s23 + 26*s13*s23^2 + 
                6*s23^3) - 2*s12^7*(174*s13^4 + 553*s13^3*s23 + 505*s13^2*
                 s23^2 + 168*s13*s23^3 + 6*s23^4) + s12*s13^3*s23^2*(
                29*s13^5 + 1624*s13^4*s23 + 3741*s13^3*s23^2 + 4415*s13^2*
                 s23^3 + 2014*s13*s23^4 - 255*s23^5) - s12^6*(324*s13^5 + 
                2777*s13^4*s23 + 2169*s13^3*s23^2 + 187*s13^2*s23^3 + 
                315*s13*s23^4 - 156*s23^5) + s12^2*s13^2*s23*(35*s13^6 + 
                1945*s13^5*s23 + 4978*s13^4*s23^2 + 8170*s13^3*s23^3 + 
                9803*s13^2*s23^4 + 4756*s13*s23^5 - 113*s23^6) + 
              s12^3*s13*s23*(922*s13^6 + 2902*s13^5*s23 + 5180*s13^4*s23^2 + 
                9981*s13^3*s23^3 + 11646*s13^2*s23^4 + 5052*s13*s23^5 + 
                43*s23^6) + s12^5*(-54*s13^6 - 2330*s13^5*s23 - 2549*s13^4*
                 s23^2 + 336*s13^3*s23^3 + 2340*s13^2*s23^4 + 2103*s13*
                 s23^5 + 120*s23^6) + s12^4*s13*(30*s13^6 + 460*s13^5*s23 - 
                316*s13^4*s23^2 + 2081*s13^3*s23^3 + 7594*s13^2*s23^4 + 
                7214*s13*s23^5 + 2195*s23^6))) + p2q^5*s13*(s12 + s13)*
            (s13 + s23)*(-61*s13^4*s23^3*(s13 + s23)^2*(s13^2 + s13*s23 - 4*
                s23^2) + 6*s12^8*(3*s13^3 + 7*s13^2*s23 + 12*s13*s23^2 + 8*
                s23^3) + s12^7*(36*s13^4 + 147*s13^3*s23 + 131*s13^2*s23^2 + 
               216*s13*s23^3 + 144*s23^4) + 2*s12^6*(24*s13^5 + 119*s13^4*
                s23 - 202*s13^3*s23^2 - 93*s13^2*s23^3 + 324*s13*s23^4 + 120*
                s23^5) + s12*s13^3*s23^2*(-82*s13^5 - 240*s13^4*s23 - 248*
                s13^3*s23^2 + 923*s13^2*s23^3 + 1796*s13*s23^4 + 783*s23^5) + 
             s12^5*(60*s13^6 + 41*s13^5*s23 - 929*s13^4*s23^2 - 1839*s13^3*
                s23^3 + 27*s13^2*s23^4 + 1092*s13*s23^5 + 240*s23^6) + 
             s12^3*s13*s23*(212*s13^6 + 298*s13^5*s23 - 1646*s13^4*s23^2 - 
               2323*s13^3*s23^3 + 1175*s13^2*s23^4 + 2278*s13*s23^5 + 564*
                s23^6) + s12^2*s13^2*s23*(-11*s13^6 + 185*s13^5*s23 - 262*
                s13^4*s23^2 - 802*s13^3*s23^3 + 1366*s13^2*s23^4 + 2731*s13*
                s23^5 + 1021*s23^6) + s12^4*(30*s13^7 + 131*s13^6*s23 - 495*
                s13^5*s23^2 - 2978*s13^4*s23^3 - 1999*s13^3*s23^4 + 1439*
                s13^2*s23^5 + 1152*s13*s23^6 + 96*s23^7)) - 
           p2q*p3q^4*s12*(12*s12^11*(3*s13^2 + 2*s13*s23 + 3*s23^2) + 
             s13^4*s23^4*(s13 + s23)^3*(99*s13^2 - 236*s13*s23 + 99*s23^2) - 
             2*s12^10*(21*s13^3 + 113*s13^2*s23 + 113*s13*s23^2 + 21*s23^3) + 
             s12^9*(198*s13^4 - 181*s13^3*s23 - 710*s13^2*s23^2 - 181*s13*
                s23^3 + 198*s23^4) + s12*s13^3*s23^3*(s13 + s23)^2*
              (232*s13^4 - 1605*s13^3*s23 + 1180*s13^2*s23^2 - 1605*s13*
                s23^3 + 232*s23^4) + 2*s12^8*(558*s13^5 + 662*s13^4*s23 + 
               2341*s13^3*s23^2 + 2341*s13^2*s23^3 + 662*s13*s23^4 + 558*
                s23^5) + s12^7*(1200*s13^6 + 7862*s13^5*s23 + 15281*s13^4*
                s23^2 + 17958*s13^3*s23^3 + 15281*s13^2*s23^4 + 7862*s13*
                s23^5 + 1200*s23^6) + s12^2*s13^2*s23^2*(107*s13^7 - 4189*
                s13^6*s23 - 5024*s13^5*s23^2 + 882*s13^4*s23^3 + 882*s13^3*
                s23^4 - 5024*s13^2*s23^5 - 4189*s13*s23^6 + 107*s23^7) + 
             s12^6*(270*s13^7 + 10334*s13^6*s23 + 24983*s13^5*s23^2 + 35181*
                s13^4*s23^3 + 35181*s13^3*s23^4 + 24983*s13^2*s23^5 + 10334*
                s13*s23^6 + 270*s23^7) - 2*s12^4*s13*s23*(1020*s13^7 + s13^6*
                s23 - 8340*s13^5*s23^2 - 16126*s13^4*s23^3 - 16126*s13^3*
                s23^4 - 8340*s13^2*s23^5 + s13*s23^6 + 1020*s23^7) + 
             s12^5*(-90*s13^8 + 1723*s13^7*s23 + 19824*s13^6*s23^2 + 38926*
                s13^5*s23^3 + 42934*s13^4*s23^4 + 38926*s13^3*s23^5 + 19824*
                s13^2*s23^6 + 1723*s13*s23^7 - 90*s23^8) - 3*s12^3*s13*s23*
              (12*s13^8 + 1629*s13^7*s23 + 1621*s13^6*s23^2 - 2320*s13^5*
                s23^3 - 4808*s13^4*s23^4 - 2320*s13^3*s23^5 + 1621*s13^2*
                s23^6 + 1629*s13*s23^7 + 12*s23^8)) + p2q^2*p3q^3*
            (61*s13^5*(s13 - 2*s23)*s23^4*(s13 + s23)^4 - 6*s12^12*s13*
              (3*s13 + s23) + 6*s12^11*(9*s13^3 + 25*s13^2*s23 + 38*s13*
                s23^2 + 14*s23^3) + s12*s13^4*s23^3*(s13 + s23)^2*
              (242*s13^4 - 673*s13^3*s23 - 326*s13^2*s23^2 - 63*s13*s23^3 - 
               713*s23^4) - s12^10*(102*s13^4 + 254*s13^3*s23 + 765*s13^2*
                s23^2 + 817*s13*s23^3 + 324*s23^4) - s12^9*(54*s13^5 + 815*
                s13^4*s23 + 7117*s13^3*s23^2 + 8364*s13^2*s23^3 + 3136*s13*
                s23^4 + 1128*s23^5) + s12^8*(1170*s13^6 - 2311*s13^5*s23 - 
               8786*s13^4*s23^2 - 15131*s13^3*s23^3 - 15876*s13^2*s23^4 - 
               7406*s13*s23^5 - 600*s23^6) + s12^2*s13^3*s23^2*
              (211*s13^7 - 2073*s13^6*s23 - 2902*s13^5*s23^2 - 15*s13^4*
                s23^3 + 1989*s13^3*s23^4 + 2525*s13^2*s23^5 - 321*s13*s23^6 - 
               1460*s23^7) + s12^7*(1626*s13^7 + 3570*s13^6*s23 + 3281*s13^5*
                s23^2 - 7427*s13^4*s23^3 - 16299*s13^3*s23^4 - 13117*s13^2*
                s23^5 - 5258*s13*s23^6 + 468*s23^7) + s12^3*s13^2*s23*
              (10*s13^8 - 3247*s13^7*s23 + 349*s13^6*s23^2 + 12029*s13^5*
                s23^3 + 15181*s13^4*s23^4 + 14083*s13^3*s23^5 + 13843*s13^2*
                s23^6 + 5325*s13*s23^7 - 1193*s23^8) + s12^4*s13*s23*
              (-1465*s13^8 + 5476*s13^7*s23 + 26211*s13^6*s23^2 + 38092*s13^5*
                s23^3 + 32326*s13^4*s23^4 + 26754*s13^3*s23^5 + 21152*s13^2*
                s23^6 + 8078*s13*s23^7 - 304*s23^8) + 
             s12^6*(486*s13^8 + 11540*s13^7*s23 + 22200*s13^6*s23^2 + 20462*
                s13^5*s23^3 + 10853*s13^4*s23^4 - 951*s13^3*s23^5 + 409*s13^2*
                s23^6 + 4349*s13*s23^7 + 348*s23^8) + s12^5*s13*
              (-90*s13^8 + 4589*s13^7*s23 + 25191*s13^6*s23^2 + 43408*s13^5*
                s23^3 + 37919*s13^4*s23^4 + 24990*s13^3*s23^5 + 20433*s13^2*
                s23^6 + 14352*s13*s23^7 + 3982*s23^8)) + 
           p2q^3*p3q^2*(6*s12^11*s13*(9*s13^2 + 12*s13*s23 + 5*s23^2) - 
             61*s13^5*s23^3*(s13 + s23)^3*(s13^3 - 4*s13^2*s23 - 2*s13*
                s23^2 + 5*s23^3) + s12^10*(54*s13^4 + 11*s13^3*s23 - 683*
                s13^2*s23^2 - 784*s13*s23^3 - 192*s23^4) + 
             s12^9*(234*s13^5 + 362*s13^4*s23 - 1576*s13^3*s23^2 - 2637*s13^2*
                s23^3 - 1101*s13*s23^4 - 240*s23^5) - s12*s13^4*s23^2*
              (s13 + s23)^2*(82*s13^5 - 805*s13^4*s23 - 5*s13^3*s23^2 - 216*
                s13^2*s23^3 + 106*s13*s23^4 + 1326*s23^5) + 
             s12^8*(450*s13^6 + 601*s13^5*s23 + 5183*s13^4*s23^2 + 5895*s13^3*
                s23^3 + 197*s13^2*s23^4 - 522*s13*s23^5 + 432*s23^6) + 
             s12^7*(-294*s13^7 + 3599*s13^6*s23 + 17907*s13^5*s23^2 + 28629*
                s13^4*s23^3 + 23023*s13^3*s23^4 + 10248*s13^2*s23^5 + 2476*
                s13*s23^6 + 816*s23^7) + s12^3*s13^2*s23*(399*s13^8 - 4109*
                s13^7*s23 - 10627*s13^6*s23^2 - 3489*s13^5*s23^3 + 12513*
                s13^4*s23^4 + 19193*s13^3*s23^5 + 12609*s13^2*s23^6 + 1433*
                s13*s23^7 - 1866*s23^8) + s12^6*(-918*s13^8 + 3254*s13^7*
                s23 + 19142*s13^6*s23^2 + 47708*s13^5*s23^3 + 61266*s13^4*
                s23^4 + 40277*s13^3*s23^5 + 16645*s13^2*s23^6 + 5664*s13*
                s23^7 + 336*s23^8) - s12^2*s13^3*s23*(11*s13^8 - 1049*s13^7*
                s23 + 470*s13^6*s23^2 + 4107*s13^5*s23^3 + 1965*s13^4*s23^4 - 
               3334*s13^3*s23^5 - 2285*s13^2*s23^6 + 2764*s13*s23^7 + 2327*
                s23^8) + s12^5*s13*(-378*s13^8 - 3712*s13^7*s23 + 2246*s13^6*
                s23^2 + 34382*s13^5*s23^3 + 67398*s13^4*s23^4 + 65114*s13^3*
                s23^5 + 38762*s13^2*s23^6 + 14551*s13*s23^7 + 2403*s23^8) + 
             s12^4*s13*(30*s13^9 - 3135*s13^8*s23 - 10275*s13^7*s23^2 - 1660*
                s13^6*s23^3 + 29979*s13^5*s23^4 + 49805*s13^4*s23^5 + 39869*
                s13^3*s23^6 + 19160*s13^2*s23^7 + 4209*s13*s23^8 - 550*
                s23^9)) + p2q^4*p3q*(-61*s13^5*s23^3*(s13 + s23)^3*
              (2*s13^3 - 3*s13^2*s23 - 8*s13*s23^2 + 3*s23^3) - 
             18*s12^10*s13*(3*s13^3 + 7*s13^2*s23 + 8*s13*s23^2 + 4*s23^3) + 
             s12^9*(-126*s13^5 - 380*s13^4*s23 + 123*s13^3*s23^2 + 731*s13^2*
                s23^3 + 474*s13*s23^4 + 96*s23^5) - s12*s13^4*s23^2*
              (s13 + s23)^2*(164*s13^5 - 426*s13^4*s23 - 746*s13^3*s23^2 - 
               2204*s13^2*s23^3 - 1153*s13*s23^4 + 712*s23^5) + 
             s12^8*(-240*s13^6 - 785*s13^5*s23 + 2171*s13^4*s23^2 + 5880*
                s13^3*s23^3 + 4418*s13^2*s23^4 + 1518*s13*s23^5 + 288*
                s23^6) + s12^7*(-396*s13^7 - 550*s13^6*s23 + 2538*s13^5*
                s23^2 + 11181*s13^4*s23^3 + 16097*s13^3*s23^4 + 9732*s13^2*
                s23^5 + 2364*s13*s23^6 + 288*s23^7) + s12^2*s13^3*s23*
              (-22*s13^8 + 989*s13^7*s23 + 1412*s13^6*s23^2 - 523*s13^5*
                s23^3 + 2538*s13^4*s23^4 + 9876*s13^3*s23^5 + 7792*s13^2*
                s23^6 + 279*s13*s23^7 - 1099*s23^8) + s12^3*s13^2*s23*
              (686*s13^8 + 412*s13^7*s23 - 6714*s13^6*s23^2 - 13046*s13^5*
                s23^3 - 1804*s13^4*s23^4 + 13730*s13^3*s23^5 + 11237*s13^2*
                s23^6 + 1529*s13*s23^7 - 780*s23^8) + 
             s12^6*(-198*s13^8 - 1422*s13^7*s23 - 4213*s13^6*s23^2 + 4924*
                s13^5*s23^3 + 23430*s13^4*s23^4 + 23911*s13^3*s23^5 + 10470*
                s13^2*s23^6 + 2220*s13*s23^7 + 96*s23^8) + 
             s12^5*s13*(138*s13^8 - 2460*s13^7*s23 - 11085*s13^6*s23^2 - 
               12708*s13^5*s23^3 + 7157*s13^4*s23^4 + 26342*s13^3*s23^5 + 
               20983*s13^2*s23^6 + 6613*s13*s23^7 + 618*s23^8) + 
             s12^4*s13*(108*s13^9 - 349*s13^8*s23 - 6979*s13^7*s23^2 - 19374*
                s13^6*s23^3 - 15036*s13^5*s23^4 + 9730*s13^4*s23^5 + 21062*
                s13^3*s23^6 + 10886*s13^2*s23^7 + 1552*s13*s23^8 - 210*
                s23^9))) - p1q^4*(p3q^2*(s12 + s23)*
            (-61*s13^3*s23^5*(s13 + s23)^3*(2*s13^2 - s23^2) - 
             s12*s13^2*s23^4*(s13 + s23)^2*(565*s13^4 + 477*s13^3*s23 + 200*
                s13^2*s23^2 + 145*s13*s23^3 - 82*s23^4) + 
             12*s12^9*(4*s13^4 + 18*s13^3*s23 + 23*s13^2*s23^2 + 17*s13*
                s23^3 + 9*s23^4) + s12^8*(144*s13^5 + 366*s13^4*s23 + 161*
                s13^3*s23^2 + 191*s13^2*s23^3 + 456*s13*s23^4 + 180*s23^5) + 
             2*s12^7*(72*s13^6 + 168*s13^5*s23 - 462*s13^4*s23^2 - 1569*s13^3*
                s23^3 - 973*s13^2*s23^4 + 101*s13*s23^5 + 51*s23^6) - 
             s12^2*s13*s23^3*(1127*s13^7 + 3437*s13^6*s23 + 4110*s13^5*
                s23^2 + 2124*s13^4*s23^3 + 398*s13^3*s23^4 + 552*s13^2*
                s23^5 + 467*s13*s23^6 - 11*s23^7) + s12^5*s23*
              (-360*s13^7 - 3120*s13^6*s23 - 9253*s13^5*s23^2 - 10509*s13^4*
                s23^3 - 2851*s13^3*s23^4 + 1942*s13^2*s23^5 + 771*s13*s23^6 + 
               6*s23^7) + s12^6*(48*s13^7 + 132*s13^6*s23 - 2804*s13^5*
                s23^2 - 7244*s13^4*s23^3 - 6163*s13^3*s23^4 - 2401*s13^2*
                s23^5 - 576*s13*s23^6 + 66*s23^7) - s12^3*s13*s23^2*
              (1000*s13^7 + 3813*s13^6*s23 + 7198*s13^5*s23^2 + 6390*s13^4*
                s23^3 - 167*s13^3*s23^4 - 3639*s13^2*s23^5 - 1234*s13*s23^6 + 
               233*s23^7) - s12^4*s23*(306*s13^8 + 2125*s13^7*s23 + 7400*
                s13^6*s23^2 + 11336*s13^5*s23^3 + 5053*s13^4*s23^4 - 4208*
                s13^3*s23^5 - 4565*s13^2*s23^6 - 1053*s13*s23^7 + 30*
                s23^8)) - p2q^2*(s13 + s23)*(-61*s13^3*s23^5*(s13 + s23)^2*
              (6*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
             2*s12^9*s23*(60*s13^3 + 102*s13^2*s23 + 25*s13*s23^2 + 9*
                s23^3) + s12^8*(-48*s13^5 + 126*s13^4*s23 + 1163*s13^3*
                s23^2 + 966*s13^2*s23^3 + 105*s13*s23^4 + 24*s23^5) + 
             s12*s13^2*s23^4*(-1191*s13^6 - 1949*s13^5*s23 + 589*s13^4*
                s23^2 + 2462*s13^3*s23^3 + 1539*s13^2*s23^4 + 342*s13*s23^5 - 
               82*s23^6) + s12^7*(-144*s13^6 + 2553*s13^4*s23^2 + 3192*s13^3*
                s23^3 + 873*s13^2*s23^4 + 462*s13*s23^5 + 60*s23^6) + 
             s12^2*s13*s23^3*(-1648*s13^7 - 2599*s13^6*s23 + 1671*s13^5*
                s23^2 + 3963*s13^4*s23^3 + 1712*s13^3*s23^4 + 964*s13^2*
                s23^5 + 582*s13*s23^6 - 11*s23^7) + s12^6*(-144*s13^7 - 300*
                s13^6*s23 + 2496*s13^5*s23^2 + 7253*s13^4*s23^3 + 3108*s13^3*
                s23^4 - 1068*s13^2*s23^5 + 433*s13*s23^6 + 216*s23^7) + 
             s12^3*s13*s23^2*(-1187*s13^7 - 1833*s13^6*s23 + 3795*s13^5*
                s23^2 + 6825*s13^4*s23^3 + 179*s13^3*s23^4 - 1924*s13^2*
                s23^5 + 561*s13*s23^6 + 488*s23^7) + s12^4*s23*
              (-402*s13^8 - 1267*s13^7*s23 + 3385*s13^6*s23^2 + 10412*s13^5*
                s23^3 + 2929*s13^4*s23^4 - 5242*s13^3*s23^5 - 1576*s13^2*
                s23^6 + 633*s13*s23^7 + 96*s23^8) + s12^5*(-48*s13^8 - 696*
                s13^7*s23 + 822*s13^6*s23^2 + 8247*s13^5*s23^3 + 7941*s13^4*
                s23^4 - 1858*s13^3*s23^5 - 2652*s13^2*s23^6 + 160*s13*s23^7 + 
               258*s23^8)) + p2q*p3q*(61*s13^3*s23^5*(s13 + s23)^3*
              (3*s13^3 - 8*s13^2*s23 - 3*s13*s23^2 + 2*s23^3) + 
             18*s12^10*s23*(4*s13^3 + 8*s13^2*s23 + 7*s13*s23^2 + 3*s23^3) - 
             s12^9*(96*s13^5 + 474*s13^4*s23 + 731*s13^3*s23^2 + 123*s13^2*
                s23^3 - 380*s13*s23^4 - 126*s23^5) + s12*s13^2*s23^4*
              (s13 + s23)^2*(712*s13^5 - 1153*s13^4*s23 - 2204*s13^3*s23^2 - 
               746*s13^2*s23^3 - 426*s13*s23^4 + 164*s23^5) - 
             s12^8*(288*s13^6 + 1518*s13^5*s23 + 4418*s13^4*s23^2 + 5880*
                s13^3*s23^3 + 2171*s13^2*s23^4 - 785*s13*s23^5 - 240*s23^6) - 
             s12^7*(288*s13^7 + 2364*s13^6*s23 + 9732*s13^5*s23^2 + 16097*
                s13^4*s23^3 + 11181*s13^3*s23^4 + 2538*s13^2*s23^5 - 550*s13*
                s23^6 - 396*s23^7) + s12^3*s13*s23^2*(780*s13^8 - 1529*s13^7*
                s23 - 11237*s13^6*s23^2 - 13730*s13^5*s23^3 + 1804*s13^4*
                s23^4 + 13046*s13^3*s23^5 + 6714*s13^2*s23^6 - 412*s13*
                s23^7 - 686*s23^8) - s12^6*(96*s13^8 + 2220*s13^7*s23 + 10470*
                s13^6*s23^2 + 23911*s13^5*s23^3 + 23430*s13^4*s23^4 + 4924*
                s13^3*s23^5 - 4213*s13^2*s23^6 - 1422*s13*s23^7 - 198*
                s23^8) + s12^2*s13*s23^3*(1099*s13^8 - 279*s13^7*s23 - 7792*
                s13^6*s23^2 - 9876*s13^5*s23^3 - 2538*s13^4*s23^4 + 523*s13^3*
                s23^5 - 1412*s13^2*s23^6 - 989*s13*s23^7 + 22*s23^8) - 
             s12^5*s23*(618*s13^8 + 6613*s13^7*s23 + 20983*s13^6*s23^2 + 
               26342*s13^5*s23^3 + 7157*s13^4*s23^4 - 12708*s13^3*s23^5 - 
               11085*s13^2*s23^6 - 2460*s13*s23^7 + 138*s23^8) + 
             s12^4*s23*(210*s13^9 - 1552*s13^8*s23 - 10886*s13^7*s23^2 - 
               21062*s13^6*s23^3 - 9730*s13^5*s23^4 + 15036*s13^4*s23^5 + 
               19374*s13^3*s23^6 + 6979*s13^2*s23^7 + 349*s13*s23^8 - 108*
                s23^9))) + p1q^2*(-(p3q^4*s12*(s12 + s23)*
             (-(s13^4*(57*s13 - 160*s23)*s23^4*(s13 + s23)^3) + 
              6*s12^10*s23*(s13 + 3*s23) - s12*s13^3*s23^3*(s13 + s23)^2*(
                307*s13^3 - 944*s13^2*s23 + 646*s13*s23^2 - 488*s23^3) - 
              2*s12^9*(81*s13^3 + 139*s13^2*s23 + 61*s13*s23^2 + 45*s23^3) - 
              s12^8*(360*s13^4 + 559*s13^3*s23 + 177*s13^2*s23^2 + 
                188*s13*s23^3 + 78*s23^4) + s12^7*(-108*s13^5 - 598*s13^4*
                 s23 + 2213*s13^3*s23^2 + 3059*s13^2*s23^3 + 410*s13*s23^4 + 
                6*s23^5) + s12^4*s13*s23*(1889*s13^6 + 8993*s13^5*s23 + 
                16596*s13^4*s23^2 + 14749*s13^3*s23^3 + 3219*s13^2*s23^4 - 
                4386*s13*s23^5 - 2504*s23^6) + s12^6*(216*s13^6 + 
                1496*s13^5*s23 + 6856*s13^4*s23^2 + 8571*s13^3*s23^3 + 
                5245*s13^2*s23^4 + 2346*s13*s23^5 - 204*s23^6) + 
              s12^2*s13^2*s23^2*(-414*s13^6 + 1861*s13^5*s23 + 4999*s13^4*
                 s23^2 + 2256*s13^3*s23^3 - 3287*s13^2*s23^4 - 2473*s13*
                 s23^5 + 346*s23^6) + s12^5*(126*s13^7 + 3842*s13^6*s23 + 
                10092*s13^5*s23^2 + 14828*s13^4*s23^3 + 12111*s13^3*s23^4 + 
                3571*s13^2*s23^5 - 616*s13*s23^6 - 180*s23^7) + 
              s12^3*s13*s23*(-134*s13^7 + 3093*s13^6*s23 + 9650*s13^5*s23^2 + 
                11657*s13^4*s23^3 + 3018*s13^3*s23^4 - 6712*s13^2*s23^5 - 
                4724*s13*s23^6 - 12*s23^7))) + p2q^4*(s13 + s23)*
            (-61*s13^5*s23^3*(s13 + s23)^2*(s13^3 - 4*s13^2*s23 - 4*s13*
                s23^2 + 6*s23^3) + 2*s12^9*s13*(9*s13^3 + 25*s13^2*s23 + 102*
                s13*s23^2 + 60*s23^3) + s12^8*(24*s13^5 + 105*s13^4*s23 + 966*
                s13^3*s23^2 + 1163*s13^2*s23^3 + 126*s13*s23^4 - 48*s23^5) + 
             s12*s13^4*s23^2*(-82*s13^6 + 342*s13^5*s23 + 1539*s13^4*s23^2 + 
               2462*s13^3*s23^3 + 589*s13^2*s23^4 - 1949*s13*s23^5 - 1191*
                s23^6) + 3*s12^7*(20*s13^6 + 154*s13^5*s23 + 291*s13^4*
                s23^2 + 1064*s13^3*s23^3 + 851*s13^2*s23^4 - 48*s23^6) + 
             s12^2*s13^3*s23*(-11*s13^7 + 582*s13^6*s23 + 964*s13^5*s23^2 + 
               1712*s13^4*s23^3 + 3963*s13^3*s23^4 + 1671*s13^2*s23^5 - 2599*
                s13*s23^6 - 1648*s23^7) + s12^3*s13^2*s23*(488*s13^7 + 561*
                s13^6*s23 - 1924*s13^5*s23^2 + 179*s13^4*s23^3 + 6825*s13^3*
                s23^4 + 3795*s13^2*s23^5 - 1833*s13*s23^6 - 1187*s23^7) + 
             s12^6*(216*s13^7 + 433*s13^6*s23 - 1068*s13^5*s23^2 + 3108*s13^4*
                s23^3 + 7253*s13^3*s23^4 + 2496*s13^2*s23^5 - 300*s13*s23^6 - 
               144*s23^7) + s12^4*s13*(96*s13^8 + 633*s13^7*s23 - 1576*s13^6*
                s23^2 - 5242*s13^5*s23^3 + 2929*s13^4*s23^4 + 10412*s13^3*
                s23^5 + 3385*s13^2*s23^6 - 1267*s13*s23^7 - 402*s23^8) + 
             s12^5*(258*s13^8 + 160*s13^7*s23 - 2652*s13^6*s23^2 - 1858*s13^5*
                s23^3 + 7941*s13^4*s23^4 + 8247*s13^3*s23^5 + 822*s13^2*
                s23^6 - 696*s13*s23^7 - 48*s23^8)) + p2q*p3q^3*
            (-61*s13^4*(2*s13 - s23)*s23^5*(s13 + s23)^4 - 6*s12^12*s23*
              (s13 + 3*s23) + 6*s12^11*(14*s13^3 + 38*s13^2*s23 + 25*s13*
                s23^2 + 9*s23^3) - s12*s13^3*s23^4*(s13 + s23)^2*
              (713*s13^4 + 63*s13^3*s23 + 326*s13^2*s23^2 + 673*s13*s23^3 - 
               242*s23^4) - s12^10*(324*s13^4 + 817*s13^3*s23 + 765*s13^2*
                s23^2 + 254*s13*s23^3 + 102*s23^4) - s12^9*(1128*s13^5 + 3136*
                s13^4*s23 + 8364*s13^3*s23^2 + 7117*s13^2*s23^3 + 815*s13*
                s23^4 + 54*s23^5) - s12^8*(600*s13^6 + 7406*s13^5*s23 + 15876*
                s13^4*s23^2 + 15131*s13^3*s23^3 + 8786*s13^2*s23^4 + 2311*s13*
                s23^5 - 1170*s23^6) - s12^2*s13^2*s23^3*(1460*s13^7 + 321*
                s13^6*s23 - 2525*s13^5*s23^2 - 1989*s13^4*s23^3 + 15*s13^3*
                s23^4 + 2902*s13^2*s23^5 + 2073*s13*s23^6 - 211*s23^7) + 
             s12^7*(468*s13^7 - 5258*s13^6*s23 - 13117*s13^5*s23^2 - 16299*
                s13^4*s23^3 - 7427*s13^3*s23^4 + 3281*s13^2*s23^5 + 3570*s13*
                s23^6 + 1626*s23^7) + s12^4*s13*s23*(-304*s13^8 + 8078*s13^7*
                s23 + 21152*s13^6*s23^2 + 26754*s13^5*s23^3 + 32326*s13^4*
                s23^4 + 38092*s13^3*s23^5 + 26211*s13^2*s23^6 + 5476*s13*
                s23^7 - 1465*s23^8) + s12^5*s23*(3982*s13^8 + 14352*s13^7*
                s23 + 20433*s13^6*s23^2 + 24990*s13^5*s23^3 + 37919*s13^4*
                s23^4 + 43408*s13^3*s23^5 + 25191*s13^2*s23^6 + 4589*s13*
                s23^7 - 90*s23^8) + s12^3*s13*s23^2*(-1193*s13^8 + 5325*s13^7*
                s23 + 13843*s13^6*s23^2 + 14083*s13^5*s23^3 + 15181*s13^4*
                s23^4 + 12029*s13^3*s23^5 + 349*s13^2*s23^6 - 3247*s13*
                s23^7 + 10*s23^8) + s12^6*(348*s13^8 + 4349*s13^7*s23 + 409*
                s13^6*s23^2 - 951*s13^5*s23^3 + 10853*s13^4*s23^4 + 20462*
                s13^3*s23^5 + 22200*s13^2*s23^6 + 11540*s13*s23^7 + 486*
                s23^8)) + p2q^3*p3q*(-6*s12^10*s13*(6*s13^3 + 18*s13^2*s23 + 
               37*s13*s23^2 + 21*s23^3) - 61*s13^4*s23^3*(s13 + s23)^3*
              (s13^4 - 8*s13^3*s23 + 2*s13^2*s23^2 + 12*s13*s23^3 - 3*
                s23^4) + s12^9*(36*s13^5 + 235*s13^4*s23 + 441*s13^3*s23^2 + 
               830*s13^2*s23^3 + 852*s13*s23^4 + 240*s23^5) - 
             s12*s13^3*s23^2*(s13 + s23)^2*(82*s13^6 - 1145*s13^5*s23 - 72*
                s13^4*s23^2 + 445*s13^3*s23^3 + 1857*s13^2*s23^4 + 1966*s13*
                s23^5 - 479*s23^6) + s12^8*(-120*s13^6 - 260*s13^5*s23 + 5212*
                s13^4*s23^2 + 10895*s13^3*s23^3 + 7075*s13^2*s23^4 + 1892*s13*
                s23^5 + 480*s23^6) + s12^7*s13*(-840*s13^6 - 311*s13^5*s23 + 
               9796*s13^4*s23^2 + 27161*s13^3*s23^3 + 30919*s13^2*s23^4 + 
               15816*s13*s23^5 + 2743*s23^6) + s12^6*(-900*s13^8 - 1677*s13^7*
                s23 + 3859*s13^6*s23^2 + 32924*s13^5*s23^3 + 62396*s13^4*
                s23^4 + 47689*s13^3*s23^5 + 15815*s13^2*s23^6 + 1922*s13*
                s23^7 - 480*s23^8) + s12^4*s13*(96*s13^9 - 1952*s13^8*s23 - 
               12168*s13^7*s23^2 - 16599*s13^6*s23^3 + 17763*s13^5*s23^4 + 
               61355*s13^4*s23^5 + 51053*s13^3*s23^6 + 12027*s13^2*s23^7 - 
               3433*s13*s23^8 - 1592*s23^9) - s12^2*s13^2*s23*
              (11*s13^9 - 1235*s13^8*s23 + 453*s13^7*s23^2 + 6269*s13^6*
                s23^3 + 3083*s13^5*s23^4 - 4385*s13^4*s23^5 + 1040*s13^3*
                s23^6 + 7098*s13^2*s23^7 + 2707*s13*s23^8 - 453*s23^9) + 
             s12^5*(-156*s13^9 - 4597*s13^8*s23 - 9039*s13^7*s23^2 + 11957*
                s13^6*s23^3 + 59205*s13^5*s23^4 + 75545*s13^4*s23^5 + 40641*
                s13^3*s23^6 + 6296*s13^2*s23^7 - 1666*s13*s23^8 - 240*
                s23^9) + s12^3*s13*s23*(665*s13^9 - 3200*s13^8*s23 - 14829*
                s13^7*s23^2 - 11786*s13^6*s23^3 + 17427*s13^5*s23^4 + 31019*
                s13^4*s23^5 + 10487*s13^3*s23^6 - 5704*s13^2*s23^7 - 3254*s13*
                s23^8 + 167*s23^9)) + p2q^2*p3q^2*
            (61*s13^4*s23^4*(s13 + s23)^4*(4*s13^2 - 9*s13*s23 + 4*s23^2) + 
             2*s12^11*(9*s13^3 + 23*s13^2*s23 + 23*s13*s23^2 + 9*s23^3) - 
             2*s12^10*(72*s13^4 + 295*s13^3*s23 + 506*s13^2*s23^2 + 295*s13*
                s23^3 + 72*s23^4) + s12*s13^3*s23^3*(s13 + s23)^3*
              (721*s13^4 - 1937*s13^3*s23 + 1493*s13^2*s23^2 - 1937*s13*
                s23^3 + 721*s23^4) + s12^9*(222*s13^5 + 201*s13^4*s23 - 3227*
                s13^3*s23^2 - 3227*s13^2*s23^3 + 201*s13*s23^4 + 222*s23^5) + 
             s12^2*s13^2*s23^2*(s13 + s23)^2*(664*s13^6 - 4156*s13^5*s23 + 
               1731*s13^4*s23^2 + 2114*s13^3*s23^3 + 1731*s13^2*s23^4 - 4156*
                s13*s23^5 + 664*s23^6) + s12^8*(1392*s13^6 + 1753*s13^5*s23 + 
               4647*s13^4*s23^2 + 7996*s13^3*s23^3 + 4647*s13^2*s23^4 + 1753*
                s13*s23^5 + 1392*s23^6) + s12^7*(1134*s13^7 + 7087*s13^6*
                s23 + 23114*s13^5*s23^2 + 37335*s13^4*s23^3 + 37335*s13^3*
                s23^4 + 23114*s13^2*s23^5 + 7087*s13*s23^6 + 1134*s23^7) + 
             s12^4*s13*s23*(-2697*s13^8 - 831*s13^7*s23 + 23024*s13^6*s23^2 + 
               62242*s13^5*s23^3 + 81832*s13^4*s23^4 + 62242*s13^3*s23^5 + 
               23024*s13^2*s23^6 - 831*s13*s23^7 - 2697*s23^8) + 
             s12^6*(-192*s13^8 + 9894*s13^7*s23 + 32768*s13^6*s23^2 + 67374*
                s13^5*s23^3 + 88592*s13^4*s23^4 + 67374*s13^3*s23^5 + 32768*
                s13^2*s23^6 + 9894*s13*s23^7 - 192*s23^8) + 
             s12^5*(-318*s13^9 + 849*s13^8*s23 + 21279*s13^7*s23^2 + 64641*
                s13^6*s23^3 + 100421*s13^5*s23^4 + 100421*s13^4*s23^5 + 64641*
                s13^3*s23^6 + 21279*s13^2*s23^7 + 849*s13*s23^8 - 318*
                s23^9) + s12^3*s13*s23*(177*s13^9 - 4976*s13^8*s23 - 5592*
                s13^7*s23^2 + 12501*s13^6*s23^3 + 32884*s13^5*s23^4 + 32884*
                s13^4*s23^5 + 12501*s13^3*s23^6 - 5592*s13^2*s23^7 - 4976*s13*
                s23^8 + 177*s23^9))) + p1q^3*(p3q^3*(s12 + s23)*
            (61*s13^4*s23^5*(s13 + s23)^4 - s12^9*s13*s23*(418*s13^2 + 529*
                s13*s23 + 39*s23^2) + 6*s12^10*(8*s13^3 + 13*s13^2*s23 + 13*
                s13*s23^2 + 12*s23^3) + s12*s13^3*s23^4*(s13 + s23)^2*
              (368*s13^3 + 227*s13^2*s23 + 223*s13*s23^2 + 303*s23^3) - 
             s12^8*(288*s13^5 + 1393*s13^4*s23 + 2792*s13^3*s23^2 + 1951*
                s13^2*s23^3 + 408*s13*s23^4 + 72*s23^5) - 
             s12^7*(384*s13^6 + 2804*s13^5*s23 + 5509*s13^4*s23^2 + 1553*
                s13^3*s23^3 - 1213*s13^2*s23^4 + 443*s13*s23^5 - 24*s23^6) + 
             s12^2*s13^2*s23^3*(1035*s13^6 + 2421*s13^5*s23 + 3078*s13^4*
                s23^2 + 2358*s13^3*s23^3 + 223*s13^2*s23^4 - 150*s13*s23^5 + 
               293*s23^6) + s12^4*s13*s23*(427*s13^7 + 360*s13^6*s23 + 1991*
                s13^5*s23^2 + 8977*s13^4*s23^3 + 14630*s13^3*s23^4 + 9408*
                s13^2*s23^5 + 587*s13*s23^6 - 1230*s23^7) + 
             s12^5*s23*(-730*s13^7 - 2811*s13^6*s23 + 98*s13^5*s23^2 + 10596*
                s13^4*s23^3 + 15137*s13^3*s23^4 + 8149*s13^2*s23^5 + 1381*s13*
                s23^6 - 120*s23^7) + s12^3*s13*s23^2*(1185*s13^7 + 2418*s13^6*
                s23 + 4711*s13^5*s23^2 + 8521*s13^4*s23^3 + 6022*s13^3*
                s23^4 - 1067*s13^2*s23^5 - 2025*s13*s23^6 + 21*s23^7) - 
             s12^6*(144*s13^7 + 3064*s13^6*s23 + 5310*s13^5*s23^2 + 763*s13^4*
                s23^3 - 6468*s13^3*s23^4 - 7201*s13^2*s23^5 - 2480*s13*
                s23^6 + 96*s23^7)) + p2q*p3q^2*(6*s12^11*s23*(5*s13^2 + 12*
                s13*s23 + 9*s23^2) - 61*s13^3*s23^5*(s13 + s23)^3*
              (5*s13^3 - 2*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
             s12^10*(-192*s13^4 - 784*s13^3*s23 - 683*s13^2*s23^2 + 11*s13*
                s23^3 + 54*s23^4) - s12^9*(240*s13^5 + 1101*s13^4*s23 + 2637*
                s13^3*s23^2 + 1576*s13^2*s23^3 - 362*s13*s23^4 - 234*s23^5) - 
             s12*s13^2*s23^4*(s13 + s23)^2*(1326*s13^5 + 106*s13^4*s23 - 216*
                s13^3*s23^2 - 5*s13^2*s23^3 - 805*s13*s23^4 + 82*s23^5) + 
             s12^8*(432*s13^6 - 522*s13^5*s23 + 197*s13^4*s23^2 + 5895*s13^3*
                s23^3 + 5183*s13^2*s23^4 + 601*s13*s23^5 + 450*s23^6) + 
             s12^7*(816*s13^7 + 2476*s13^6*s23 + 10248*s13^5*s23^2 + 23023*
                s13^4*s23^3 + 28629*s13^3*s23^4 + 17907*s13^2*s23^5 + 3599*
                s13*s23^6 - 294*s23^7) + s12^6*(336*s13^8 + 5664*s13^7*s23 + 
               16645*s13^6*s23^2 + 40277*s13^5*s23^3 + 61266*s13^4*s23^4 + 
               47708*s13^3*s23^5 + 19142*s13^2*s23^6 + 3254*s13*s23^7 - 918*
                s23^8) + s12^5*s23*(2403*s13^8 + 14551*s13^7*s23 + 38762*
                s13^6*s23^2 + 65114*s13^5*s23^3 + 67398*s13^4*s23^4 + 34382*
                s13^3*s23^5 + 2246*s13^2*s23^6 - 3712*s13*s23^7 - 378*
                s23^8) - s12^2*s13*s23^3*(2327*s13^8 + 2764*s13^7*s23 - 2285*
                s13^6*s23^2 - 3334*s13^5*s23^3 + 1965*s13^4*s23^4 + 4107*
                s13^3*s23^5 + 470*s13^2*s23^6 - 1049*s13*s23^7 + 11*s23^8) + 
             s12^3*s13*s23^2*(-1866*s13^8 + 1433*s13^7*s23 + 12609*s13^6*
                s23^2 + 19193*s13^5*s23^3 + 12513*s13^4*s23^4 - 3489*s13^3*
                s23^5 - 10627*s13^2*s23^6 - 4109*s13*s23^7 + 399*s23^8) + 
             s12^4*s23*(-550*s13^9 + 4209*s13^8*s23 + 19160*s13^7*s23^2 + 
               39869*s13^6*s23^3 + 49805*s13^5*s23^4 + 29979*s13^4*s23^5 - 
               1660*s13^3*s23^6 - 10275*s13^2*s23^7 - 3135*s13*s23^8 + 30*
                s23^9)) + p2q^3*(s13 + s23)*(122*s13^4*s23^4*(s13 + s23)^3*
              (2*s13^2 - 5*s13*s23 + 2*s23^2) + 8*s12^9*s13*s23*
              (10*s13^2 + 33*s13*s23 + 10*s23^2) + s12*s13^3*s23^3*
              (s13 + s23)^2*(561*s13^4 - 883*s13^3*s23 - 1066*s13^2*s23^2 - 
               883*s13*s23^3 + 561*s23^4) - 6*s12^8*(16*s13^5 + 25*s13^4*
                s23 - 256*s13^3*s23^2 - 256*s13^2*s23^3 + 25*s13*s23^4 + 16*
                s23^5) + s12^7*(-240*s13^6 - 397*s13^5*s23 + 2361*s13^4*
                s23^2 + 5556*s13^3*s23^3 + 2361*s13^2*s23^4 - 397*s13*s23^5 - 
               240*s23^6) - 4*s12^6*(36*s13^7 + 206*s13^6*s23 - 136*s13^5*
                s23^2 - 2441*s13^4*s23^3 - 2441*s13^3*s23^4 - 136*s13^2*
                s23^5 + 206*s13*s23^6 + 36*s23^7) + 2*s12^2*s13^2*s23^2*
              (256*s13^7 - 267*s13^6*s23 - 1667*s13^5*s23^2 - 1902*s13^4*
                s23^3 - 1902*s13^3*s23^4 - 1667*s13^2*s23^5 - 267*s13*s23^6 + 
               256*s23^7) + 2*s12^5*(24*s13^8 - 597*s13^7*s23 - 1202*s13^6*
                s23^2 + 3131*s13^5*s23^3 + 7788*s13^4*s23^4 + 3131*s13^3*
                s23^5 - 1202*s13^2*s23^6 - 597*s13*s23^7 + 24*s23^8) + 
             s12^3*s13*s23*(263*s13^8 - 1013*s13^7*s23 - 4211*s13^6*s23^2 - 
               1458*s13^5*s23^3 + 3266*s13^4*s23^4 - 1458*s13^3*s23^5 - 4211*
                s13^2*s23^6 - 1013*s13*s23^7 + 263*s23^8) + 
             s12^4*(48*s13^9 - 274*s13^8*s23 - 3384*s13^7*s23^2 - 2278*s13^6*
                s23^3 + 9914*s13^5*s23^4 + 9914*s13^4*s23^5 - 2278*s13^3*
                s23^6 - 3384*s13^2*s23^7 - 274*s13*s23^8 + 48*s23^9)) + 
           p2q^2*p3q*(-6*s12^10*s23*(21*s13^3 + 37*s13^2*s23 + 18*s13*s23^2 + 
               6*s23^3) + 61*s13^3*s23^4*(s13 + s23)^3*(3*s13^4 - 12*s13^3*
                s23 - 2*s13^2*s23^2 + 8*s13*s23^3 - s23^4) + 
             s12^9*(240*s13^5 + 852*s13^4*s23 + 830*s13^3*s23^2 + 441*s13^2*
                s23^3 + 235*s13*s23^4 + 36*s23^5) + s12^7*s23*
              (2743*s13^6 + 15816*s13^5*s23 + 30919*s13^4*s23^2 + 27161*s13^3*
                s23^3 + 9796*s13^2*s23^4 - 311*s13*s23^5 - 840*s23^6) + 
             s12^8*(480*s13^6 + 1892*s13^5*s23 + 7075*s13^4*s23^2 + 10895*
                s13^3*s23^3 + 5212*s13^2*s23^4 - 260*s13*s23^5 - 120*s23^6) + 
             s12*s13^2*s23^3*(s13 + s23)^2*(479*s13^6 - 1966*s13^5*s23 - 1857*
                s13^4*s23^2 - 445*s13^3*s23^3 + 72*s13^2*s23^4 + 1145*s13*
                s23^5 - 82*s23^6) + s12^6*(-480*s13^8 + 1922*s13^7*s23 + 
               15815*s13^6*s23^2 + 47689*s13^5*s23^3 + 62396*s13^4*s23^4 + 
               32924*s13^3*s23^5 + 3859*s13^2*s23^6 - 1677*s13*s23^7 - 900*
                s23^8) + s12^5*(-240*s13^9 - 1666*s13^8*s23 + 6296*s13^7*
                s23^2 + 40641*s13^6*s23^3 + 75545*s13^5*s23^4 + 59205*s13^4*
                s23^5 + 11957*s13^3*s23^6 - 9039*s13^2*s23^7 - 4597*s13*
                s23^8 - 156*s23^9) + s12^2*s13*s23^2*(453*s13^9 - 2707*s13^8*
                s23 - 7098*s13^7*s23^2 - 1040*s13^6*s23^3 + 4385*s13^5*
                s23^4 - 3083*s13^4*s23^5 - 6269*s13^3*s23^6 - 453*s13^2*
                s23^7 + 1235*s13*s23^8 - 11*s23^9) + s12^4*s23*
              (-1592*s13^9 - 3433*s13^8*s23 + 12027*s13^7*s23^2 + 51053*s13^6*
                s23^3 + 61355*s13^5*s23^4 + 17763*s13^4*s23^5 - 16599*s13^3*
                s23^6 - 12168*s13^2*s23^7 - 1952*s13*s23^8 + 96*s23^9) + 
             s12^3*s13*s23*(167*s13^9 - 3254*s13^8*s23 - 5704*s13^7*s23^2 + 
               10487*s13^6*s23^3 + 31019*s13^5*s23^4 + 17427*s13^4*s23^5 - 
               11786*s13^3*s23^6 - 14829*s13^2*s23^7 - 3200*s13*s23^8 + 665*
                s23^9))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*
         s13^2*(s12 + s13)^2*s23^2*(s12 + s23)^2*(s13 + s23)*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - 
       (ep*(p1q^6*(s12 + s13)*s23^3*(s12 + s23)^2*(s13 + s23)*
           (19*s13^3*s23^2*(s13 + s23)^2 + 2*s12^5*(7*s13^2 + 3*s13*s23 + 
              3*s23^2) + 2*s12^4*(13*s13^3 + 13*s13^2*s23 + 6*s13*s23^2 + 
              6*s23^3) - s12*s13^2*s23*(4*s13^3 + 8*s13^2*s23 + 
              23*s13*s23^2 + 19*s23^3) + s12^3*(-38*s13^4 - 12*s13^3*s23 + 
              6*s13^2*s23^2 + 6*s23^4) - s12^2*s13*(50*s13^4 + 84*s13^3*s23 + 
              53*s13^2*s23^2 + 25*s13*s23^3 + 6*s23^4)) - 
          p1q^5*s23^2*(s12 + s23)*(p2q*(s13 + s23)*
             (19*s13^3*s23^3*(s13 + s23)^2*(4*s13^2 - s13*s23 - s23^2) + 
              2*s12^8*(5*s13^2 + s13*s23 + 3*s23^2) + s12^7*(280*s13^3 + 
                276*s13^2*s23 + 230*s13*s23^2 + 32*s23^3) + 
              s12^6*(484*s13^4 + 1025*s13^3*s23 + 854*s13^2*s23^2 + 
                375*s13*s23^3 + 20*s23^4) + s12*s13^2*s23^2*(43*s13^5 + 
                212*s13^4*s23 + 154*s13^3*s23^2 - 97*s13^2*s23^3 - 
                99*s13*s23^4 - 17*s23^5) + s12^5*(144*s13^5 + 1327*s13^4*
                 s23 + 1296*s13^3*s23^2 + 562*s13^2*s23^3 + 19*s13*s23^4 - 
                12*s23^5) - s12^2*s13*s23*(184*s13^6 + 17*s13^5*s23 - 
                424*s13^4*s23^2 + 80*s13^3*s23^3 + 466*s13^2*s23^4 + 
                107*s13*s23^5 - 22*s23^6) + s12^4*(-190*s13^6 + 433*s13^5*
                 s23 + 1303*s13^4*s23^2 + 362*s13^3*s23^3 - 495*s13^2*s23^4 - 
                191*s13*s23^5 + 14*s23^6) - s12^3*(120*s13^7 + 327*s13^6*
                 s23 - 557*s13^5*s23^2 - 461*s13^4*s23^3 + 585*s13^3*s23^4 + 
                559*s13^2*s23^5 + 41*s13*s23^6 - 20*s23^7)) + 
            p3q*(19*s13^3*s23^3*(s13 + s23)^3*(s13^2 - 2*s13*s23 - s23^2) + 
              s12^8*(64*s13^3 + 86*s13^2*s23 + 32*s13*s23^2 + 24*s23^3) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(15*s13^4 + 25*s13^3*s23 - 
                74*s13^2*s23^2 - 82*s13*s23^3 - 17*s23^4) + 
              s12^7*(366*s13^4 + 792*s13^3*s23 + 702*s13^2*s23^2 + 
                356*s13*s23^3 + 80*s23^4) + s12^6*(392*s13^5 + 1411*s13^4*
                 s23 + 1973*s13^3*s23^2 + 1373*s13^2*s23^3 + 503*s13*s23^4 + 
                56*s23^5) + s12^5*(-12*s13^6 + 835*s13^5*s23 + 1823*s13^4*
                 s23^2 + 1449*s13^3*s23^3 + 522*s13^2*s23^4 + 37*s13*s23^5 - 
                12*s23^6) + s12^4*(-152*s13^7 + 65*s13^6*s23 + 954*s13^5*
                 s23^2 + 729*s13^4*s23^3 - 620*s13^3*s23^4 - 791*s13^2*
                 s23^5 - 185*s13*s23^6 + 8*s23^7) + s12^2*s13*s23*(
                -54*s13^7 + 79*s13^6*s23 + 468*s13^5*s23^2 + 179*s13^4*
                 s23^3 - 583*s13^3*s23^4 - 509*s13^2*s23^5 - 60*s13*s23^6 + 
                22*s23^7) - s12^3*(50*s13^8 + 119*s13^7*s23 - 478*s13^6*
                 s23^2 - 763*s13^5*s23^3 + 472*s13^4*s23^4 + 1246*s13^3*
                 s23^5 + 599*s13^2*s23^6 + 21*s13*s23^7 - 20*s23^8))) + 
          (s12 + s13)*(p2q^6*s13^3*(s12 + s23)*(s13 + s23)*
             (19*s13^3*s23^3*(s13 + s23)^2 + 2*s12^6*(3*s13^2 + 3*s13*s23 + 
                7*s23^2) + 2*s12^5*(9*s13^3 + 9*s13^2*s23 + 20*s13*s23^2 + 
                13*s23^3) + s12*s13^2*s23^2*(-19*s13^3 - 4*s13^2*s23 + 
                30*s13*s23^2 + 15*s23^3) + 2*s12^4*(9*s13^4 + 6*s13^3*s23 + 
                16*s13^2*s23^2 + 7*s13*s23^3 - 19*s23^4) - 2*s12^2*s13*s23*(
                3*s13^4 + 22*s13^3*s23 + 38*s13^2*s23^2 + 46*s13*s23^3 + 
                27*s23^4) + s12^3*(6*s13^5 - 6*s13^4*s23 - 19*s13^3*s23^2 - 
                65*s13^2*s23^3 - 122*s13*s23^4 - 50*s23^5)) + 
            p3q^6*s12^3*(s12 + s23)*(46*s12^7*(s13^2 + s23^2) - 
              s13^3*s23^3*(111*s13^3 + 373*s13^2*s23 + 373*s13*s23^2 + 
                111*s23^3) + s12^6*(238*s13^3 + 244*s13^2*s23 + 
                244*s13*s23^2 + 238*s23^3) - s12*s13^2*s23^2*(168*s13^4 + 
                893*s13^3*s23 + 1218*s13^2*s23^2 + 893*s13*s23^3 + 
                168*s23^4) + s12^5*(378*s13^4 + 701*s13^3*s23 + 694*s13^2*
                 s23^2 + 701*s13*s23^3 + 378*s23^4) - s12^2*s13*s23*(
                27*s13^5 + 541*s13^4*s23 + 1302*s13^3*s23^2 + 1302*s13^2*
                 s23^3 + 541*s13*s23^4 + 27*s23^5) + s12^4*(226*s13^5 + 
                679*s13^4*s23 + 703*s13^3*s23^2 + 703*s13^2*s23^3 + 
                679*s13*s23^4 + 226*s23^5) + s12^3*(40*s13^6 + 195*s13^5*
                 s23 - 166*s13^4*s23^2 - 270*s13^3*s23^3 - 166*s13^2*s23^4 + 
                195*s13*s23^5 + 40*s23^6)) + p2q*p3q^5*s12^2*
             (s12^9*(52*s13^2 + 86*s23^2) + s13^3*s23^4*(s13 + s23)^2*(
                117*s13^2 + 252*s13*s23 + 119*s23^2) + 2*s12^8*(66*s13^3 + 
                152*s13^2*s23 + 160*s13*s23^2 + 249*s23^3) + 
              s12^7*(-316*s13^4 - 366*s13^3*s23 + 134*s13^2*s23^2 + 
                672*s13*s23^3 + 912*s23^4) - s12^6*(920*s13^5 + 2833*s13^4*
                 s23 + 3538*s13^3*s23^2 + 2042*s13^2*s23^3 - 39*s13*s23^4 - 
                568*s23^5) + s12*s13^2*s23^3*(381*s13^5 + 1747*s13^4*s23 + 
                2362*s13^3*s23^2 + 1723*s13^2*s23^3 + 911*s13*s23^4 + 
                184*s23^5) + s12^2*s13*s23^2*(333*s13^6 + 1785*s13^5*s23 + 
                1907*s13^4*s23^2 + 1357*s13^3*s23^3 + 466*s13^2*s23^4 + 
                411*s13*s23^5 + 35*s23^6) - s12^5*(624*s13^6 + 3553*s13^5*
                 s23 + 7763*s13^4*s23^2 + 7773*s13^3*s23^3 + 5067*s13^2*
                 s23^4 + 944*s13*s23^5 + 78*s23^6) - s12^3*s23*(21*s13^7 + 
                273*s13^6*s23 + 2023*s13^5*s23^2 + 3654*s13^4*s23^3 + 
                3638*s13^3*s23^4 + 1231*s13^2*s23^5 + 216*s13*s23^6 + 
                40*s23^7) - s12^4*(100*s13^7 + 1411*s13^6*s23 + 4931*s13^5*
                 s23^2 + 9034*s13^4*s23^3 + 8045*s13^3*s23^4 + 4601*s13^2*
                 s23^5 + 882*s13*s23^6 + 186*s23^7)) + p2q^2*p3q^4*s12*
             (s13^4*s23^4*(s13 + s23)^3*(13*s13 + 2*s23) + s12^10*(6*s13^2 + 
                40*s23^2) - s12*s13^3*s23^3*(s13 + s23)^2*(72*s13^3 + 
                24*s13^2*s23 - 550*s13*s23^2 - 333*s23^3) - 
              2*s12^9*(65*s13^3 - 3*s13^2*s23 + 27*s13*s23^2 - 87*s23^3) - 
              s12^8*(670*s13^4 + 1617*s13^3*s23 + 1508*s13^2*s23^2 + 
                1225*s13*s23^3 - 36*s23^4) - s12^7*(510*s13^5 + 2599*s13^4*
                 s23 + 4981*s13^3*s23^2 + 5088*s13^2*s23^3 + 3156*s13*s23^4 + 
                616*s23^5) + s12^6*(500*s13^6 + 940*s13^5*s23 - 1946*s13^4*
                 s23^2 - 5087*s13^3*s23^3 - 6485*s13^2*s23^4 - 3170*s13*
                 s23^5 - 924*s23^6) + s12^2*s13^2*s23^2*(-164*s13^6 - 
                100*s13^5*s23 + 2891*s13^4*s23^2 + 5784*s13^3*s23^3 + 
                5228*s13^2*s23^4 + 2716*s13*s23^5 + 445*s23^6) + 
              s12^5*(536*s13^7 + 3520*s13^6*s23 + 7429*s13^5*s23^2 + 
                4811*s13^4*s23^3 + 486*s13^3*s23^4 - 2612*s13^2*s23^5 - 
                1438*s13*s23^6 - 486*s23^7) + s12^3*s13*s23*(-19*s13^7 + 
                1108*s13^6*s23 + 6616*s13^5*s23^2 + 11418*s13^4*s23^3 + 
                11141*s13^3*s23^4 + 5882*s13^2*s23^5 + 1806*s13*s23^6 + 
                64*s23^7) + s12^4*(60*s13^8 + 1585*s13^7*s23 + 7080*s13^6*
                 s23^2 + 12953*s13^5*s23^3 + 12005*s13^4*s23^4 + 
                5578*s13^3*s23^5 + 1654*s13^2*s23^6 - 189*s13*s23^7 - 
                80*s23^8)) - p2q^5*p3q*s13^2*(-19*s13^3*s23^3*(s13 + s23)^3*(
                s13^2 + 2*s13*s23 - s23^2) + s12^8*(24*s13^3 + 32*s13^2*s23 + 
                86*s13*s23^2 + 64*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(
                17*s13^4 + 82*s13^3*s23 + 74*s13^2*s23^2 - 25*s13*s23^3 - 
                15*s23^4) + s12^7*(80*s13^4 + 356*s13^3*s23 + 702*s13^2*
                 s23^2 + 792*s13*s23^3 + 366*s23^4) + s12^6*(56*s13^5 + 
                503*s13^4*s23 + 1373*s13^3*s23^2 + 1973*s13^2*s23^3 + 
                1411*s13*s23^4 + 392*s23^5) + s12^5*(-12*s13^6 + 
                37*s13^5*s23 + 522*s13^4*s23^2 + 1449*s13^3*s23^3 + 
                1823*s13^2*s23^4 + 835*s13*s23^5 - 12*s23^6) + 
              s12^4*(8*s13^7 - 185*s13^6*s23 - 791*s13^5*s23^2 - 
                620*s13^4*s23^3 + 729*s13^3*s23^4 + 954*s13^2*s23^5 + 
                65*s13*s23^6 - 152*s23^7) + s12^2*s13*s23*(22*s13^7 - 
                60*s13^6*s23 - 509*s13^5*s23^2 - 583*s13^4*s23^3 + 
                179*s13^3*s23^4 + 468*s13^2*s23^5 + 79*s13*s23^6 - 
                54*s23^7) + s12^3*(20*s13^8 - 21*s13^7*s23 - 599*s13^6*
                 s23^2 - 1246*s13^5*s23^3 - 472*s13^4*s23^4 + 763*s13^3*
                 s23^5 + 478*s13^2*s23^6 - 119*s13*s23^7 - 50*s23^8)) + 
            p2q^3*p3q^3*(-19*s13^5*s23^4*(s13 + s23)^4 - s12*s13^4*s23^3*
               (s13 + s23)^2*(49*s13^3 + 122*s13^2*s23 + 65*s13*s23^2 + 
                11*s23^3) - 2*s12^10*(12*s13^3 + 4*s13^2*s23 + 65*s13*s23^2 + 
                20*s23^3) + s12^9*(60*s13^4 - 284*s13^3*s23 - 548*s13^2*
                 s23^2 - 862*s13*s23^3 - 260*s23^4) + s12^8*(740*s13^5 + 
                1915*s13^4*s23 + 1195*s13^3*s23^2 - 199*s13^2*s23^3 - 
                1237*s13*s23^4 - 580*s23^5) + s12^7*(1040*s13^6 + 
                5135*s13^5*s23 + 8292*s13^4*s23^2 + 6892*s13^3*s23^3 + 
                2155*s13^2*s23^4 - 324*s13*s23^5 - 580*s23^6) + 
              s12^2*s13^3*s23^2*(9*s13^6 - 245*s13^5*s23 - 1325*s13^4*s23^2 - 
                1623*s13^3*s23^3 + 44*s13^2*s23^4 + 955*s13*s23^5 + 
                359*s23^6) + s12^6*(240*s13^7 + 3048*s13^6*s23 + 
                10285*s13^5*s23^2 + 14117*s13^4*s23^3 + 11465*s13^3*s23^4 + 
                4175*s13^2*s23^5 + 284*s13*s23^6 - 260*s23^7) + 
              s12^3*s13^2*s23*(49*s13^7 - 600*s13^6*s23 - 3098*s13^5*s23^2 - 
                2961*s13^4*s23^3 + 735*s13^3*s23^4 + 3285*s13^2*s23^5 + 
                2418*s13*s23^6 + 380*s23^7) + s12^5*(-124*s13^8 - 
                588*s13^7*s23 + 1280*s13^6*s23^2 + 8707*s13^5*s23^3 + 
                13610*s13^4*s23^4 + 9852*s13^3*s23^5 + 3765*s13^2*s23^6 + 
                122*s13*s23^7 - 40*s23^8) + s12^4*s13*(20*s13^8 - 
                643*s13^7*s23 - 2935*s13^6*s23^2 - 2143*s13^5*s23^3 + 
                3520*s13^4*s23^4 + 8159*s13^3*s23^5 + 5883*s13^2*s23^6 + 
                1784*s13*s23^7 + 19*s23^8)) + p2q^4*p3q^2*s13*
             (19*s13^4*s23^3*(s13 + s23)^3*(s13^2 - 2*s23^2) + 
              2*s12^9*(18*s13^3 + 14*s13^2*s23 + 78*s13*s23^2 + 45*s23^3) + 
              s12*s13^3*s23^2*(s13 + s23)^2*(17*s13^4 + 33*s13^3*s23 - 
                95*s13^2*s23^2 - 120*s13*s23^3 - 28*s23^4) + 
              2*s12^8*(40*s13^4 + 296*s13^3*s23 + 574*s13^2*s23^2 + 
                693*s13*s23^3 + 289*s23^4) + s12^7*(-210*s13^5 - 
                147*s13^4*s23 + 1240*s13^3*s23^2 + 2967*s13^2*s23^3 + 
                2670*s13*s23^4 + 1028*s23^5) + s12^6*(-470*s13^6 - 
                2441*s13^5*s23 - 3172*s13^4*s23^2 - 319*s13^3*s23^3 + 
                3055*s13^2*s23^4 + 2501*s13*s23^5 + 672*s23^6) - 
              s12^5*(190*s13^7 + 2279*s13^6*s23 + 6480*s13^5*s23^2 + 
                6388*s13^4*s23^3 + 1394*s13^3*s23^4 - 2008*s13^2*s23^5 - 
                1601*s13*s23^6 - 122*s23^7) + s12^2*s13^2*s23*(-22*s13^7 + 
                94*s13^6*s23 + 409*s13^5*s23^2 - 363*s13^4*s23^3 - 
                1623*s13^3*s23^4 - 962*s13^2*s23^5 + 204*s13*s23^6 + 
                199*s23^7) + s12^4*(6*s13^8 - 457*s13^7*s23 - 2924*s13^6*
                 s23^2 - 6035*s13^5*s23^3 - 5313*s13^4*s23^4 - 792*s13^3*
                 s23^5 + 1494*s13^2*s23^6 + 709*s13*s23^7 - 10*s23^8) + 
              s12^3*s13*(-20*s13^8 + 70*s13^7*s23 + 213*s13^6*s23^2 - 
                1226*s13^5*s23^3 - 3270*s13^4*s23^4 - 2744*s13^3*s23^5 - 
                99*s13^2*s23^6 + 893*s13*s23^7 + 169*s23^8))) + 
          p1q^4*s23*(p3q^2*(s12 + s23)*(-19*s13^3*s23^4*(s13 + s23)^3*(
                2*s13^2 - s23^2) + 2*s12^9*(45*s13^3 + 78*s13^2*s23 + 
                14*s13*s23^2 + 18*s23^3) - s12*s13^2*s23^3*(s13 + s23)^2*(
                28*s13^4 + 120*s13^3*s23 + 95*s13^2*s23^2 - 33*s13*s23^3 - 
                17*s23^4) + 2*s12^8*(289*s13^4 + 693*s13^3*s23 + 
                574*s13^2*s23^2 + 296*s13*s23^3 + 40*s23^4) + 
              s12^7*(1028*s13^5 + 2670*s13^4*s23 + 2967*s13^3*s23^2 + 
                1240*s13^2*s23^3 - 147*s13*s23^4 - 210*s23^5) + 
              s12^6*(672*s13^6 + 2501*s13^5*s23 + 3055*s13^4*s23^2 - 
                319*s13^3*s23^3 - 3172*s13^2*s23^4 - 2441*s13*s23^5 - 
                470*s23^6) + s12^5*(122*s13^7 + 1601*s13^6*s23 + 
                2008*s13^5*s23^2 - 1394*s13^4*s23^3 - 6388*s13^3*s23^4 - 
                6480*s13^2*s23^5 - 2279*s13*s23^6 - 190*s23^7) + 
              s12^2*s13*s23^2*(199*s13^7 + 204*s13^6*s23 - 962*s13^5*s23^2 - 
                1623*s13^4*s23^3 - 363*s13^3*s23^4 + 409*s13^2*s23^5 + 
                94*s13*s23^6 - 22*s23^7) + s12^3*s23*(169*s13^8 + 
                893*s13^7*s23 - 99*s13^6*s23^2 - 2744*s13^5*s23^3 - 
                3270*s13^4*s23^4 - 1226*s13^3*s23^5 + 213*s13^2*s23^6 + 
                70*s13*s23^7 - 20*s23^8) - s12^4*(10*s13^8 - 709*s13^7*s23 - 
                1494*s13^6*s23^2 + 792*s13^5*s23^3 + 5313*s13^4*s23^4 + 
                6035*s13^3*s23^5 + 2924*s13^2*s23^6 + 457*s13*s23^7 - 
                6*s23^8)) + p2q^2*(s13 + s23)*(19*s13^3*s23^4*(s13 + s23)^2*(
                6*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
              2*s12^9*(115*s13^3 + 102*s13^2*s23 + 88*s13*s23^2 + 7*s23^3) + 
              s12^8*(662*s13^4 + 863*s13^3*s23 + 472*s13^2*s23^2 - 
                67*s13*s23^3 - 4*s23^4) + s12^7*(672*s13^5 + 2393*s13^4*s23 + 
                829*s13^3*s23^2 - 989*s13^2*s23^3 - 1267*s13*s23^4 - 
                56*s23^5) + s12^6*(188*s13^6 + 3135*s13^5*s23 + 3344*s13^4*
                 s23^2 - 1401*s13^3*s23^3 - 4088*s13^2*s23^4 - 1646*s13*
                 s23^5 - 24*s23^6) + s12*s13^2*s23^3*(153*s13^6 + 
                496*s13^5*s23 + 83*s13^4*s23^2 - 616*s13^3*s23^3 - 
                340*s13^2*s23^4 + 33*s13*s23^5 + 17*s23^6) + s12^2*s13*s23^2*(
                -187*s13^7 + 686*s13^6*s23 + 1543*s13^5*s23^2 - 691*s13^4*
                 s23^3 - 1536*s13^3*s23^4 + 103*s13^2*s23^5 + 256*s13*s23^6 - 
                22*s23^7) + s12^5*(-142*s13^7 + 1435*s13^6*s23 + 
                5759*s13^5*s23^2 + 1401*s13^4*s23^3 - 4790*s13^3*s23^4 - 
                4127*s13^2*s23^5 - 440*s13*s23^6 + 14*s23^7) + 
              s12^3*s23*(-316*s13^8 + 192*s13^7*s23 + 3436*s13^6*s23^2 + 
                1277*s13^5*s23^3 - 2981*s13^4*s23^4 - 1604*s13^3*s23^5 + 
                639*s13^2*s23^6 + 155*s13*s23^7 - 20*s23^8) - 
              s12^4*(90*s13^8 + 282*s13^7*s23 - 3327*s13^6*s23^2 - 
                4847*s13^5*s23^3 + 1949*s13^4*s23^4 + 4886*s13^3*s23^5 + 
                896*s13^2*s23^6 - 359*s13*s23^7 + 20*s23^8)) + 
            p2q*p3q*(19*s13^3*s23^4*(s13 + s23)^3*(3*s13^3 - 8*s13^2*s23 - 
                3*s13*s23^2 + 2*s23^3) + 2*s12^10*(25*s13^3 + 31*s13^2*s23 + 
                8*s13*s23^2 + 9*s23^3) + 2*s12^9*(284*s13^4 + 707*s13^3*s23 + 
                674*s13^2*s23^2 + 371*s13*s23^3 + 41*s23^4) + 
              s12^8*(1150*s13^5 + 3273*s13^4*s23 + 4222*s13^3*s23^2 + 
                2335*s13^2*s23^3 + 310*s13*s23^4 - 140*s23^5) + 
              s12*s13^2*s23^3*(s13 + s23)^2*(85*s13^5 - 2*s13^4*s23 - 
                563*s13^3*s23^2 - 385*s13^2*s23^3 + 68*s13*s23^4 + 
                34*s23^5) + s12^7*(784*s13^6 + 3774*s13^5*s23 + 4852*s13^4*
                 s23^2 + 298*s13^3*s23^3 - 4389*s13^2*s23^4 - 3781*s13*
                 s23^5 - 640*s23^6) + s12^6*(70*s13^7 + 2798*s13^6*s23 + 
                3987*s13^5*s23^2 - 2955*s13^4*s23^3 - 14337*s13^3*s23^4 - 
                15283*s13^2*s23^5 - 6116*s13*s23^6 - 570*s23^7) + 
              s12^2*s13*s23^2*(-102*s13^8 + 611*s13^7*s23 + 1358*s13^6*
                 s23^2 - 1838*s13^5*s23^3 - 4897*s13^4*s23^4 - 2050*s13^3*
                 s23^5 + 728*s13^2*s23^6 + 320*s13*s23^7 - 44*s23^8) - 
              s12^5*(152*s13^8 - 1020*s13^7*s23 - 4477*s13^6*s23^2 + 
                1238*s13^5*s23^3 + 16635*s13^4*s23^4 + 23041*s13^3*s23^5 + 
                13977*s13^2*s23^6 + 2992*s13*s23^7 + 122*s23^8) + 
              s12^3*s23*(-200*s13^9 + 479*s13^8*s23 + 3581*s13^7*s23^2 + 
                279*s13^6*s23^3 - 9293*s13^5*s23^4 - 9760*s13^4*s23^5 - 
                2361*s13^3*s23^6 + 952*s13^2*s23^7 + 183*s13*s23^8 - 
                40*s23^9) - s12^4*(70*s13^9 + 125*s13^8*s23 - 3033*s13^7*
                 s23^2 - 3579*s13^6*s23^3 + 8053*s13^5*s23^4 + 19505*s13^4*
                 s23^5 + 14255*s13^3*s23^6 + 3466*s13^2*s23^7 + 
                14*s13*s23^8 + 28*s23^9))) - 
          p1q*(p2q^5*s13^2*(s12 + s13)*(s13 + s23)*(-19*s13^3*s23^3*
               (s13 + s23)^2*(s13^2 + s13*s23 - 4*s23^2) + 2*s12^8*(3*s13^2 + 
                s13*s23 + 5*s23^2) + s12^7*(32*s13^3 + 230*s13^2*s23 + 
                276*s13*s23^2 + 280*s23^3) + s12^6*(20*s13^4 + 375*s13^3*
                 s23 + 854*s13^2*s23^2 + 1025*s13*s23^3 + 484*s23^4) + 
              s12*s13^2*s23^2*(-17*s13^5 - 99*s13^4*s23 - 97*s13^3*s23^2 + 
                154*s13^2*s23^3 + 212*s13*s23^4 + 43*s23^5) + 
              s12^5*(-12*s13^5 + 19*s13^4*s23 + 562*s13^3*s23^2 + 
                1296*s13^2*s23^3 + 1327*s13*s23^4 + 144*s23^5) + 
              s12^4*(14*s13^6 - 191*s13^5*s23 - 495*s13^4*s23^2 + 
                362*s13^3*s23^3 + 1303*s13^2*s23^4 + 433*s13*s23^5 - 
                190*s23^6) + s12^2*s13*s23*(22*s13^6 - 107*s13^5*s23 - 
                466*s13^4*s23^2 - 80*s13^3*s23^3 + 424*s13^2*s23^4 - 
                17*s13*s23^5 - 184*s23^6) + s12^3*(20*s13^7 - 41*s13^6*s23 - 
                559*s13^5*s23^2 - 585*s13^4*s23^3 + 461*s13^3*s23^4 + 
                557*s13^2*s23^5 - 327*s13*s23^6 - 120*s23^7)) - 
            p3q^5*s12^2*(s12 + s23)*(s12^9*(86*s13^2 + 52*s23^2) + 
              s13^4*s23^3*(s13 + s23)^2*(119*s13^2 + 252*s13*s23 + 
                117*s23^2) + 2*s12^8*(249*s13^3 + 160*s13^2*s23 + 
                152*s13*s23^2 + 66*s23^3) + 2*s12^7*(456*s13^4 + 
                336*s13^3*s23 + 67*s13^2*s23^2 - 183*s13*s23^3 - 158*s23^4) + 
              s12^6*(568*s13^5 + 39*s13^4*s23 - 2042*s13^3*s23^2 - 
                3538*s13^2*s23^3 - 2833*s13*s23^4 - 920*s23^5) + 
              s12*s13^3*s23^2*(184*s13^5 + 911*s13^4*s23 + 1723*s13^3*s23^2 + 
                2362*s13^2*s23^3 + 1747*s13*s23^4 + 381*s23^5) + 
              s12^2*s13^2*s23*(35*s13^6 + 411*s13^5*s23 + 466*s13^4*s23^2 + 
                1357*s13^3*s23^3 + 1907*s13^2*s23^4 + 1785*s13*s23^5 + 
                333*s23^6) - s12^5*(78*s13^6 + 944*s13^5*s23 + 5067*s13^4*
                 s23^2 + 7773*s13^3*s23^3 + 7763*s13^2*s23^4 + 3553*s13*
                 s23^5 + 624*s23^6) - s12^3*s13*(40*s13^7 + 216*s13^6*s23 + 
                1231*s13^5*s23^2 + 3638*s13^4*s23^3 + 3654*s13^3*s23^4 + 
                2023*s13^2*s23^5 + 273*s13*s23^6 + 21*s23^7) - 
              s12^4*(186*s13^7 + 882*s13^6*s23 + 4601*s13^5*s23^2 + 
                8045*s13^4*s23^3 + 9034*s13^3*s23^4 + 4931*s13^2*s23^5 + 
                1411*s13*s23^6 + 100*s23^7)) - p2q*p3q^4*s12*
             (92*s12^11*(s13^2 + s23^2) - 2*s13^4*s23^4*(s13 + s23)^3*(
                3*s13^2 + 17*s13*s23 + 3*s23^2) + s12^10*(338*s13^3 + 
                444*s13^2*s23 + 444*s13*s23^2 + 338*s23^3) - s12*s13^3*s23^
                3*(s13 + s23)^2*(110*s13^4 - 157*s13^3*s23 - 864*s13^2*
                 s23^2 - 157*s13*s23^3 + 110*s23^4) - 2*s12^9*(145*s13^4 + 
                456*s13^3*s23 + 386*s13^2*s23^2 + 456*s13*s23^3 + 
                145*s23^4) - s12^8*(1860*s13^5 + 5705*s13^4*s23 + 
                8101*s13^3*s23^2 + 8101*s13^2*s23^3 + 5705*s13*s23^4 + 
                1860*s23^5) - 4*s12^7*(445*s13^6 + 1818*s13^5*s23 + 
                3760*s13^4*s23^2 + 3806*s13^3*s23^3 + 3760*s13^2*s23^4 + 
                1818*s13*s23^5 + 445*s23^6) + 2*s12^3*s13^2*s23^2*(
                650*s13^6 + 4722*s13^5*s23 + 9627*s13^4*s23^2 + 12298*s13^3*
                 s23^3 + 9627*s13^2*s23^4 + 4722*s13*s23^5 + 650*s23^6) + 
              s12^2*s13^2*s23^2*(-154*s13^7 + 574*s13^6*s23 + 5529*s13^5*
                 s23^2 + 9655*s13^4*s23^3 + 9655*s13^3*s23^4 + 5529*s13^2*
                 s23^5 + 574*s13*s23^6 - 154*s23^7) - 2*s12^6*(109*s13^7 + 
                1137*s13^6*s23 + 3261*s13^5*s23^2 + 4490*s13^4*s23^3 + 
                4490*s13^3*s23^4 + 3261*s13^2*s23^5 + 1137*s13*s23^6 + 
                109*s23^7) + 2*s12^5*(149*s13^8 + 836*s13^7*s23 + 
                3508*s13^6*s23^2 + 4970*s13^5*s23^3 + 7094*s13^4*s23^4 + 
                4970*s13^3*s23^5 + 3508*s13^2*s23^6 + 836*s13*s23^7 + 
                149*s23^8) + s12^4*(60*s13^9 + 1023*s13^8*s23 + 6929*s13^7*
                 s23^2 + 19307*s13^6*s23^3 + 27171*s13^5*s23^4 + 
                27171*s13^4*s23^5 + 19307*s13^3*s23^6 + 6929*s13^2*s23^7 + 
                1023*s13*s23^8 + 60*s23^9)) - p2q^2*p3q^3*
             (-19*s13^5*(s13 - 2*s23)*s23^4*(s13 + s23)^4 + s12^12*(6*s13^2 + 
                40*s23^2) - 2*s12^11*(89*s13^3 + 5*s13^2*s23 - 25*s13*s23^2 - 
                54*s23^3) - s12*s13^4*s23^3*(s13 + s23)^2*(30*s13^4 + 
                9*s13^3*s23 - 137*s13^2*s23^2 - 153*s13*s23^3 - 56*s23^4) - 
              2*s12^10*(589*s13^4 + 1440*s13^3*s23 + 1192*s13^2*s23^2 + 
                909*s13*s23^3 + 188*s23^4) - s12^9*(1570*s13^5 + 
                5683*s13^4*s23 + 7951*s13^3*s23^2 + 6380*s13^2*s23^3 + 
                3618*s13*s23^4 + 1044*s23^5) + s12^8*(410*s13^6 + 
                1016*s13^5*s23 - 1969*s13^4*s23^2 - 163*s13^3*s23^3 - 
                1251*s13^2*s23^4 + 209*s13*s23^5 - 316*s23^6) + 
              s12^2*s13^3*s23^2*(26*s13^7 - 396*s13^6*s23 - 1205*s13^5*
                 s23^2 + 1133*s13^4*s23^3 + 4791*s13^3*s23^4 + 3238*s13^2*
                 s23^5 + 83*s13*s23^6 - 280*s23^7) + s12^7*(1666*s13^7 + 
                9375*s13^6*s23 + 20979*s13^5*s23^2 + 25376*s13^4*s23^3 + 
                23699*s13^3*s23^4 + 15367*s13^2*s23^5 + 5292*s13*s23^6 + 
                776*s23^7) + s12^3*s13^2*s23*(27*s13^8 - 995*s13^7*s23 - 
                2912*s13^6*s23^2 + 3939*s13^5*s23^3 + 14263*s13^4*s23^4 + 
                16827*s13^3*s23^5 + 9114*s13^2*s23^6 + 294*s13*s23^7 - 
                427*s23^8) + s12^4*s13*s23*(-768*s13^8 - 2151*s13^7*s23 + 
                7731*s13^6*s23^2 + 28197*s13^5*s23^3 + 40956*s13^4*s23^4 + 
                31554*s13^3*s23^5 + 13475*s13^2*s23^6 + 1195*s13*s23^7 - 
                69*s23^8) + s12^6*(602*s13^8 + 6488*s13^7*s23 + 27702*s13^6*
                 s23^2 + 48034*s13^5*s23^3 + 55686*s13^4*s23^4 + 
                41508*s13^3*s23^5 + 22186*s13^2*s23^6 + 4806*s13*s23^7 + 
                572*s23^8) + s12^5*(-78*s13^9 + 147*s13^8*s23 + 9181*s13^7*
                 s23^2 + 37226*s13^6*s23^3 + 57021*s13^5*s23^4 + 
                55153*s13^4*s23^5 + 35796*s13^3*s23^6 + 11202*s13^2*s23^7 + 
                1404*s13*s23^8 + 80*s23^9)) + p2q^4*p3q*s13*
             (-19*s13^4*s23^3*(s13 + s23)^3*(2*s13^3 - 3*s13^2*s23 - 
                8*s13*s23^2 + 3*s23^3) - 2*s12^10*(9*s13^3 + 8*s13^2*s23 + 
                31*s13*s23^2 + 25*s23^3) - 2*s12^9*(41*s13^4 + 371*s13^3*
                 s23 + 674*s13^2*s23^2 + 707*s13*s23^3 + 284*s23^4) + 
              s12^8*(140*s13^5 - 310*s13^4*s23 - 2335*s13^3*s23^2 - 
                4222*s13^2*s23^3 - 3273*s13*s23^4 - 1150*s23^5) - 
              s12*s13^3*s23^2*(s13 + s23)^2*(34*s13^5 + 68*s13^4*s23 - 
                385*s13^3*s23^2 - 563*s13^2*s23^3 - 2*s13*s23^4 + 85*s23^5) + 
              s12^7*(640*s13^6 + 3781*s13^5*s23 + 4389*s13^4*s23^2 - 
                298*s13^3*s23^3 - 4852*s13^2*s23^4 - 3774*s13*s23^5 - 
                784*s23^6) + s12^6*(570*s13^7 + 6116*s13^6*s23 + 
                15283*s13^5*s23^2 + 14337*s13^4*s23^3 + 2955*s13^3*s23^4 - 
                3987*s13^2*s23^5 - 2798*s13*s23^6 - 70*s23^7) + 
              s12^2*s13^2*s23*(44*s13^8 - 320*s13^7*s23 - 728*s13^6*s23^2 + 
                2050*s13^5*s23^3 + 4897*s13^4*s23^4 + 1838*s13^3*s23^5 - 
                1358*s13^2*s23^6 - 611*s13*s23^7 + 102*s23^8) + 
              s12^5*(122*s13^8 + 2992*s13^7*s23 + 13977*s13^6*s23^2 + 
                23041*s13^5*s23^3 + 16635*s13^4*s23^4 + 1238*s13^3*s23^5 - 
                4477*s13^2*s23^6 - 1020*s13*s23^7 + 152*s23^8) + 
              s12^4*(28*s13^9 + 14*s13^8*s23 + 3466*s13^7*s23^2 + 
                14255*s13^6*s23^3 + 19505*s13^5*s23^4 + 8053*s13^4*s23^5 - 
                3579*s13^3*s23^6 - 3033*s13^2*s23^7 + 125*s13*s23^8 + 
                70*s23^9) + s12^3*s13*(40*s13^9 - 183*s13^8*s23 - 
                952*s13^7*s23^2 + 2361*s13^6*s23^3 + 9760*s13^5*s23^4 + 
                9293*s13^4*s23^5 - 279*s13^3*s23^6 - 3581*s13^2*s23^7 - 
                479*s13*s23^8 + 200*s23^9)) + p2q^3*p3q^2*
             (-19*s13^5*s23^3*(s13 + s23)^3*(s13^3 - 4*s13^2*s23 - 
                2*s13*s23^2 + 5*s23^3) + 2*s12^11*(9*s13^3 + 4*s13^2*s23 + 
                45*s13*s23^2 + 20*s23^3) + s12^10*(-42*s13^4 + 462*s13^3*
                 s23 + 832*s13^2*s23^2 + 884*s13*s23^3 + 240*s23^4) - 
              s12^9*(946*s13^5 + 2783*s13^4*s23 + 2020*s13^3*s23^2 + 
                575*s13^2*s23^3 - 392*s13*s23^4 - 360*s23^5) - 
              s12*s13^4*s23^2*(s13 + s23)^2*(17*s13^5 - 46*s13^4*s23 - 
                310*s13^3*s23^2 - 6*s13^2*s23^3 + 350*s13*s23^4 + 
                147*s23^5) - s12^8*(2010*s13^6 + 10372*s13^5*s23 + 
                16418*s13^4*s23^2 + 14833*s13^3*s23^3 + 7526*s13^2*s23^4 + 
                2513*s13*s23^5 - 20*s23^6) - s12^7*(1110*s13^7 + 
                9465*s13^6*s23 + 27930*s13^5*s23^2 + 36032*s13^4*s23^3 + 
                29118*s13^3*s23^4 + 14951*s13^2*s23^5 + 3618*s13*s23^6 + 
                300*s23^7) + 2*s12^6*(149*s13^8 + 130*s13^7*s23 - 
                6365*s13^6*s23^2 - 17672*s13^5*s23^3 - 22361*s13^4*s23^4 - 
                15736*s13^3*s23^5 - 6856*s13^2*s23^6 - 935*s13*s23^7 - 
                90*s23^8) + s12^2*s13^3*s23*(22*s13^8 - 222*s13^7*s23 + 
                146*s13^6*s23^2 + 3063*s13^5*s23^3 + 2552*s13^4*s23^4 - 
                3476*s13^3*s23^5 - 4376*s13^2*s23^6 - 749*s13*s23^7 + 
                272*s23^8) + s12^5*(258*s13^9 + 3823*s13^8*s23 + 
                7971*s13^7*s23^2 - 7851*s13^6*s23^3 - 30401*s13^5*s23^4 - 
                36587*s13^4*s23^5 - 23046*s13^3*s23^6 - 5351*s13^2*s23^7 - 
                224*s13*s23^8 - 20*s23^9) + s12^4*s13*(-6*s13^9 + 
                1020*s13^8*s23 + 7234*s13^7*s23^2 + 11058*s13^6*s23^3 - 
                2464*s13^5*s23^4 - 22252*s13^4*s23^5 - 22520*s13^3*s23^6 - 
                8863*s13^2*s23^7 + 10*s13*s23^8 + 139*s23^9) + 
              s12^3*s13^2*(20*s13^9 - 191*s13^8*s23 + 602*s13^7*s23^2 + 
                6298*s13^6*s23^3 + 7392*s13^5*s23^4 - 2990*s13^4*s23^5 - 
                12838*s13^3*s23^6 - 8682*s13^2*s23^7 - 268*s13*s23^8 + 
                473*s23^9))) + p1q^3*(-(p3q^3*(s12 + s23)*(19*s13^4*s23^5*
                (s13 + s23)^4 + 2*s12^10*(20*s13^3 + 65*s13^2*s23 + 
                 4*s13*s23^2 + 12*s23^3) + s12*s13^3*s23^4*(s13 + s23)^2*
                (11*s13^3 + 65*s13^2*s23 + 122*s13*s23^2 + 49*s23^3) + s12^9*
                (260*s13^4 + 862*s13^3*s23 + 548*s13^2*s23^2 + 284*s13*
                  s23^3 - 60*s23^4) + s12^8*(580*s13^5 + 1237*s13^4*s23 + 
                 199*s13^3*s23^2 - 1195*s13^2*s23^3 - 1915*s13*s23^4 - 
                 740*s23^5) + s12^7*(580*s13^6 + 324*s13^5*s23 - 2155*s13^4*
                  s23^2 - 6892*s13^3*s23^3 - 8292*s13^2*s23^4 - 5135*s13*
                  s23^5 - 1040*s23^6) + s12^2*s13^2*s23^3*(-359*s13^6 - 
                 955*s13^5*s23 - 44*s13^4*s23^2 + 1623*s13^3*s23^3 + 
                 1325*s13^2*s23^4 + 245*s13*s23^5 - 9*s23^6) + s12^6*
                (260*s13^7 - 284*s13^6*s23 - 4175*s13^5*s23^2 - 11465*s13^4*
                  s23^3 - 14117*s13^3*s23^4 - 10285*s13^2*s23^5 - 
                 3048*s13*s23^6 - 240*s23^7) - s12^3*s13*s23^2*(380*s13^7 + 
                 2418*s13^6*s23 + 3285*s13^5*s23^2 + 735*s13^4*s23^3 - 
                 2961*s13^3*s23^4 - 3098*s13^2*s23^5 - 600*s13*s23^6 + 
                 49*s23^7) - s12^4*s23*(19*s13^8 + 1784*s13^7*s23 + 
                 5883*s13^6*s23^2 + 8159*s13^5*s23^3 + 3520*s13^4*s23^4 - 
                 2143*s13^3*s23^5 - 2935*s13^2*s23^6 - 643*s13*s23^7 + 
                 20*s23^8) + s12^5*(40*s13^8 - 122*s13^7*s23 - 3765*s13^6*
                  s23^2 - 9852*s13^5*s23^3 - 13610*s13^4*s23^4 - 8707*s13^3*
                  s23^5 - 1280*s13^2*s23^6 + 588*s13*s23^7 + 124*s23^8))) + 
            p2q*p3q^2*(19*s13^3*s23^5*(s13 + s23)^3*(5*s13^3 - 2*s13^2*s23 - 
                4*s13*s23^2 + s23^3) - 2*s12^11*(20*s13^3 + 45*s13^2*s23 + 
                4*s13*s23^2 + 9*s23^3) - 2*s12^10*(120*s13^4 + 442*s13^3*
                 s23 + 416*s13^2*s23^2 + 231*s13*s23^3 - 21*s23^4) + 
              s12*s13^2*s23^4*(s13 + s23)^2*(147*s13^5 + 350*s13^4*s23 - 
                6*s13^3*s23^2 - 310*s13^2*s23^3 - 46*s13*s23^4 + 17*s23^5) + 
              s12^9*(-360*s13^5 - 392*s13^4*s23 + 575*s13^3*s23^2 + 
                2020*s13^2*s23^3 + 2783*s13*s23^4 + 946*s23^5) + 
              s12^8*(-20*s13^6 + 2513*s13^5*s23 + 7526*s13^4*s23^2 + 
                14833*s13^3*s23^3 + 16418*s13^2*s23^4 + 10372*s13*s23^5 + 
                2010*s23^6) + s12^7*(300*s13^7 + 3618*s13^6*s23 + 
                14951*s13^5*s23^2 + 29118*s13^4*s23^3 + 36032*s13^3*s23^4 + 
                27930*s13^2*s23^5 + 9465*s13*s23^6 + 1110*s23^7) + 
              2*s12^6*(90*s13^8 + 935*s13^7*s23 + 6856*s13^6*s23^2 + 
                15736*s13^5*s23^3 + 22361*s13^4*s23^4 + 17672*s13^3*s23^5 + 
                6365*s13^2*s23^6 - 130*s13*s23^7 - 149*s23^8) + 
              s12^2*s13*s23^3*(-272*s13^8 + 749*s13^7*s23 + 4376*s13^6*
                 s23^2 + 3476*s13^5*s23^3 - 2552*s13^4*s23^4 - 3063*s13^3*
                 s23^5 - 146*s13^2*s23^6 + 222*s13*s23^7 - 22*s23^8) + 
              s12^5*(20*s13^9 + 224*s13^8*s23 + 5351*s13^7*s23^2 + 
                23046*s13^6*s23^3 + 36587*s13^5*s23^4 + 30401*s13^4*s23^5 + 
                7851*s13^3*s23^6 - 7971*s13^2*s23^7 - 3823*s13*s23^8 - 
                258*s23^9) + s12^3*s23^2*(-473*s13^9 + 268*s13^8*s23 + 
                8682*s13^7*s23^2 + 12838*s13^6*s23^3 + 2990*s13^5*s23^4 - 
                7392*s13^4*s23^5 - 6298*s13^3*s23^6 - 602*s13^2*s23^7 + 
                191*s13*s23^8 - 20*s23^9) + s12^4*s23*(-139*s13^9 - 
                10*s13^8*s23 + 8863*s13^7*s23^2 + 22520*s13^6*s23^3 + 
                22252*s13^5*s23^4 + 2464*s13^4*s23^5 - 11058*s13^3*s23^6 - 
                7234*s13^2*s23^7 - 1020*s13*s23^8 + 6*s23^9)) + 
            p2q^3*(s13 + s23)*(-38*s13^4*s23^4*(s13 + s23)^3*(2*s13^2 - 
                5*s13*s23 + 2*s23^2) + 4*s12^9*(5*s13^4 + 102*s13^3*s23 + 
                107*s13^2*s23^2 + 102*s13*s23^3 + 5*s23^4) - s12*s13^3*s23^
                3*(s13 + s23)^2*(85*s13^4 + 118*s13^3*s23 - 580*s13^2*s23^2 + 
                118*s13*s23^3 + 85*s23^4) + s12^8*(40*s13^5 + 833*s13^4*s23 + 
                1915*s13^3*s23^2 + 1915*s13^2*s23^3 + 833*s13*s23^4 + 
                40*s23^5) + s12^7*(20*s13^6 + 40*s13^5*s23 + 3078*s13^4*
                 s23^2 + 4348*s13^3*s23^3 + 3078*s13^2*s23^4 + 40*s13*s23^5 + 
                20*s23^6) + s12^6*(20*s13^7 - 1010*s13^6*s23 + 703*s13^5*
                 s23^2 + 6157*s13^4*s23^3 + 6157*s13^3*s23^4 + 703*s13^2*
                 s23^5 - 1010*s13*s23^6 + 20*s23^7) + s12^2*s13^2*s23^2*(
                107*s13^7 - 697*s13^6*s23 - 1180*s13^5*s23^2 + 1558*s13^4*
                 s23^3 + 1558*s13^3*s23^4 - 1180*s13^2*s23^5 - 697*s13*
                 s23^6 + 107*s23^7) + s12^5*(40*s13^8 - 712*s13^7*s23 - 
                2772*s13^6*s23^2 + 3137*s13^5*s23^3 + 7822*s13^4*s23^4 + 
                3137*s13^3*s23^5 - 2772*s13^2*s23^6 - 712*s13*s23^7 + 
                40*s23^8) + s12^3*s13*s23*(136*s13^8 - 418*s13^7*s23 - 
                2910*s13^6*s23^2 + 185*s13^5*s23^3 + 4010*s13^4*s23^4 + 
                185*s13^3*s23^5 - 2910*s13^2*s23^6 - 418*s13*s23^7 + 
                136*s23^8) + s12^4*(20*s13^9 + 49*s13^8*s23 - 2409*s13^7*
                 s23^2 - 2477*s13^6*s23^3 + 5123*s13^5*s23^4 + 5123*s13^4*
                 s23^5 - 2477*s13^3*s23^6 - 2409*s13^2*s23^7 + 49*s13*s23^8 + 
                20*s23^9)) + p2q^2*p3q*(-19*s13^3*s23^4*(s13 + s23)^3*(
                3*s13^4 - 12*s13^3*s23 - 2*s13^2*s23^2 + 8*s13*s23^3 - 
                s23^4) + 2*s12^10*(10*s13^4 - 91*s13^3*s23 - 115*s13^2*
                 s23^2 - 87*s13*s23^3 + 6*s23^4) + s12^9*(240*s13^5 + 
                1273*s13^4*s23 + 2064*s13^3*s23^2 + 2309*s13^2*s23^3 + 
                1678*s13*s23^4 + 256*s23^5) - s12*s13^2*s23^3*(s13 + s23)^2*(
                68*s13^6 - 56*s13^5*s23 - 835*s13^4*s23^2 - 284*s13^3*s23^3 + 
                488*s13^2*s23^4 + 82*s13*s23^5 - 17*s23^6) + 
              s12^8*(600*s13^6 + 4510*s13^5*s23 + 9090*s13^4*s23^2 + 
                12079*s13^3*s23^3 + 10228*s13^2*s23^4 + 4577*s13*s23^5 + 
                444*s23^6) + s12^7*(580*s13^7 + 4834*s13^6*s23 + 
                15916*s13^5*s23^2 + 23944*s13^4*s23^3 + 23385*s13^3*s23^4 + 
                13267*s13^2*s23^5 + 1852*s13*s23^6 - 24*s23^7) + 
              s12^6*(240*s13^8 + 1818*s13^7*s23 + 13166*s13^6*s23^2 + 
                29009*s13^5*s23^3 + 34240*s13^4*s23^4 + 20012*s13^3*s23^5 + 
                1271*s13^2*s23^6 - 3432*s13*s23^7 - 376*s23^8) + 
              s12^4*s13*(20*s13^9 - 90*s13^8*s23 - 1847*s13^7*s23^2 + 
                4482*s13^6*s23^3 + 22952*s13^5*s23^4 + 26932*s13^4*s23^5 + 
                4238*s13^3*s23^6 - 11162*s13^2*s23^7 - 6054*s13*s23^8 - 
                365*s23^9) + s12^5*(60*s13^9 - 167*s13^8*s23 + 3045*s13^7*
                 s23^2 + 21090*s13^6*s23^3 + 35543*s13^5*s23^4 + 
                25568*s13^4*s23^5 + 1263*s13^3*s23^6 - 9816*s13^2*s23^7 - 
                3224*s13*s23^8 - 132*s23^9) + s12^2*s13*s23^2*(85*s13^9 - 
                778*s13^8*s23 - 819*s13^7*s23^2 + 4676*s13^6*s23^3 + 
                6520*s13^5*s23^4 - 1036*s13^4*s23^5 - 3669*s13^3*s23^6 - 
                378*s13^2*s23^7 + 345*s13*s23^8 - 22*s23^9) + 
              s12^3*s23*(116*s13^10 - 761*s13^9*s23 - 2657*s13^8*s23^2 + 
                5860*s13^7*s23^3 + 16454*s13^6*s23^4 + 8169*s13^5*s23^5 - 
                6406*s13^4*s23^6 - 6276*s13^3*s23^7 - 217*s13^2*s23^8 + 
                278*s13*s23^9 - 20*s23^10))) + 
          p1q^2*(p3q^4*s12*(s12 + s23)*(s13^4*s23^4*(s13 + s23)^3*(2*s13 + 
                13*s23) + s12^10*(40*s13^2 + 6*s23^2) + s12*s13^3*s23^3*
               (s13 + s23)^2*(333*s13^3 + 550*s13^2*s23 - 24*s13*s23^2 - 
                72*s23^3) + 2*s12^9*(87*s13^3 - 27*s13^2*s23 + 3*s13*s23^2 - 
                65*s23^3) + s12^8*(36*s13^4 - 1225*s13^3*s23 - 1508*s13^2*
                 s23^2 - 1617*s13*s23^3 - 670*s23^4) - s12^7*(616*s13^5 + 
                3156*s13^4*s23 + 5088*s13^3*s23^2 + 4981*s13^2*s23^3 + 
                2599*s13*s23^4 + 510*s23^5) - s12^6*(924*s13^6 + 
                3170*s13^5*s23 + 6485*s13^4*s23^2 + 5087*s13^3*s23^3 + 
                1946*s13^2*s23^4 - 940*s13*s23^5 - 500*s23^6) + 
              s12^2*s13^2*s23^2*(445*s13^6 + 2716*s13^5*s23 + 5228*s13^4*
                 s23^2 + 5784*s13^3*s23^3 + 2891*s13^2*s23^4 - 100*s13*
                 s23^5 - 164*s23^6) + s12^3*s13*s23*(64*s13^7 + 1806*s13^6*
                 s23 + 5882*s13^5*s23^2 + 11141*s13^4*s23^3 + 11418*s13^3*
                 s23^4 + 6616*s13^2*s23^5 + 1108*s13*s23^6 - 19*s23^7) + 
              s12^5*(-486*s13^7 - 1438*s13^6*s23 - 2612*s13^5*s23^2 + 
                486*s13^4*s23^3 + 4811*s13^3*s23^4 + 7429*s13^2*s23^5 + 
                3520*s13*s23^6 + 536*s23^7) + s12^4*(-80*s13^8 - 
                189*s13^7*s23 + 1654*s13^6*s23^2 + 5578*s13^5*s23^3 + 
                12005*s13^4*s23^4 + 12953*s13^3*s23^5 + 7080*s13^2*s23^6 + 
                1585*s13*s23^7 + 60*s23^8)) + p2q^4*s13*(s13 + s23)*
             (19*s13^4*s23^3*(s13 + s23)^2*(s13^3 - 4*s13^2*s23 - 
                4*s13*s23^2 + 6*s23^3) + 2*s12^9*(7*s13^3 + 88*s13^2*s23 + 
                102*s13*s23^2 + 115*s23^3) + s12^8*(-4*s13^4 - 67*s13^3*s23 + 
                472*s13^2*s23^2 + 863*s13*s23^3 + 662*s23^4) + 
              s12^7*(-56*s13^5 - 1267*s13^4*s23 - 989*s13^3*s23^2 + 
                829*s13^2*s23^3 + 2393*s13*s23^4 + 672*s23^5) + 
              s12*s13^3*s23^2*(17*s13^6 + 33*s13^5*s23 - 340*s13^4*s23^2 - 
                616*s13^3*s23^3 + 83*s13^2*s23^4 + 496*s13*s23^5 + 
                153*s23^6) + s12^6*(-24*s13^6 - 1646*s13^5*s23 - 
                4088*s13^4*s23^2 - 1401*s13^3*s23^3 + 3344*s13^2*s23^4 + 
                3135*s13*s23^5 + 188*s23^6) + s12^2*s13^2*s23*(-22*s13^7 + 
                256*s13^6*s23 + 103*s13^5*s23^2 - 1536*s13^4*s23^3 - 
                691*s13^3*s23^4 + 1543*s13^2*s23^5 + 686*s13*s23^6 - 
                187*s23^7) + s12^5*(14*s13^7 - 440*s13^6*s23 - 4127*s13^5*
                 s23^2 - 4790*s13^4*s23^3 + 1401*s13^3*s23^4 + 5759*s13^2*
                 s23^5 + 1435*s13*s23^6 - 142*s23^7) + s12^3*s13*(-20*s13^8 + 
                155*s13^7*s23 + 639*s13^6*s23^2 - 1604*s13^5*s23^3 - 
                2981*s13^4*s23^4 + 1277*s13^3*s23^5 + 3436*s13^2*s23^6 + 
                192*s13*s23^7 - 316*s23^8) - s12^4*(20*s13^8 - 359*s13^7*
                 s23 + 896*s13^6*s23^2 + 4886*s13^5*s23^3 + 1949*s13^4*
                 s23^4 - 4847*s13^3*s23^5 - 3327*s13^2*s23^6 + 282*s13*
                 s23^7 + 90*s23^8)) + p2q*p3q^3*(19*s13^4*(2*s13 - s23)*s23^
                5*(s13 + s23)^4 + s12^12*(40*s13^2 + 6*s23^2) + 
              2*s12^11*(54*s13^3 + 25*s13^2*s23 - 5*s13*s23^2 - 89*s23^3) + 
              s12*s13^3*s23^4*(s13 + s23)^2*(56*s13^4 + 153*s13^3*s23 + 
                137*s13^2*s23^2 - 9*s13*s23^3 - 30*s23^4) - 
              2*s12^10*(188*s13^4 + 909*s13^3*s23 + 1192*s13^2*s23^2 + 
                1440*s13*s23^3 + 589*s23^4) - s12^9*(1044*s13^5 + 
                3618*s13^4*s23 + 6380*s13^3*s23^2 + 7951*s13^2*s23^3 + 
                5683*s13*s23^4 + 1570*s23^5) + s12^8*(-316*s13^6 + 
                209*s13^5*s23 - 1251*s13^4*s23^2 - 163*s13^3*s23^3 - 
                1969*s13^2*s23^4 + 1016*s13*s23^5 + 410*s23^6) + 
              s12^2*s13^2*s23^3*(-280*s13^7 + 83*s13^6*s23 + 3238*s13^5*
                 s23^2 + 4791*s13^4*s23^3 + 1133*s13^3*s23^4 - 1205*s13^2*
                 s23^5 - 396*s13*s23^6 + 26*s23^7) + s12^7*(776*s13^7 + 
                5292*s13^6*s23 + 15367*s13^5*s23^2 + 23699*s13^4*s23^3 + 
                25376*s13^3*s23^4 + 20979*s13^2*s23^5 + 9375*s13*s23^6 + 
                1666*s23^7) + s12^4*s13*s23*(-69*s13^8 + 1195*s13^7*s23 + 
                13475*s13^6*s23^2 + 31554*s13^5*s23^3 + 40956*s13^4*s23^4 + 
                28197*s13^3*s23^5 + 7731*s13^2*s23^6 - 2151*s13*s23^7 - 
                768*s23^8) + s12^3*s13*s23^2*(-427*s13^8 + 294*s13^7*s23 + 
                9114*s13^6*s23^2 + 16827*s13^5*s23^3 + 14263*s13^4*s23^4 + 
                3939*s13^3*s23^5 - 2912*s13^2*s23^6 - 995*s13*s23^7 + 
                27*s23^8) + s12^6*(572*s13^8 + 4806*s13^7*s23 + 22186*s13^6*
                 s23^2 + 41508*s13^5*s23^3 + 55686*s13^4*s23^4 + 
                48034*s13^3*s23^5 + 27702*s13^2*s23^6 + 6488*s13*s23^7 + 
                602*s23^8) + s12^5*(80*s13^9 + 1404*s13^8*s23 + 11202*s13^7*
                 s23^2 + 35796*s13^6*s23^3 + 55153*s13^5*s23^4 + 
                57021*s13^4*s23^5 + 37226*s13^3*s23^6 + 9181*s13^2*s23^7 + 
                147*s13*s23^8 - 78*s23^9)) + p2q^2*p3q^2*
             (-19*s13^4*s23^4*(s13 + s23)^4*(4*s13^2 - 9*s13*s23 + 4*s23^2) - 
              2*s12^11*(33*s13^3 + 8*s13^2*s23 + 8*s13*s23^2 + 33*s23^3) - 
              s12*s13^3*s23^3*(s13 + s23)^3*(98*s13^4 + 65*s13^3*s23 - 
                405*s13^2*s23^2 + 65*s13*s23^3 + 98*s23^4) - 
              s12^10*(400*s13^4 + 1501*s13^3*s23 + 1486*s13^2*s23^2 + 
                1501*s13*s23^3 + 400*s23^4) - 2*s12^9*(93*s13^5 + 
                285*s13^4*s23 + 488*s13^3*s23^2 + 488*s13^2*s23^3 + 
                285*s13*s23^4 + 93*s23^5) + s12^2*s13^2*s23^2*(s13 + s23)^2*(
                111*s13^6 - 1171*s13^5*s23 - 513*s13^4*s23^2 + 3852*s13^3*
                 s23^3 - 513*s13^2*s23^4 - 1171*s13*s23^5 + 111*s23^6) + 
              s12^8*(1056*s13^6 + 6443*s13^5*s23 + 10839*s13^4*s23^2 + 
                14296*s13^3*s23^3 + 10839*s13^2*s23^4 + 6443*s13*s23^5 + 
                1056*s23^6) + s12^7*(1294*s13^7 + 9229*s13^6*s23 + 
                27014*s13^5*s23^2 + 38085*s13^4*s23^3 + 38085*s13^3*s23^4 + 
                27014*s13^2*s23^5 + 9229*s13*s23^6 + 1294*s23^7) + 
              s12^6*(300*s13^8 + 3239*s13^7*s23 + 22513*s13^6*s23^2 + 
                46397*s13^5*s23^3 + 58282*s13^4*s23^4 + 46397*s13^3*s23^5 + 
                22513*s13^2*s23^6 + 3239*s13*s23^7 + 300*s23^8) + 
              s12^5*(-66*s13^9 - 1338*s13^8*s23 + 2614*s13^7*s23^2 + 
                28364*s13^6*s23^3 + 50232*s13^5*s23^4 + 50232*s13^4*s23^5 + 
                28364*s13^3*s23^6 + 2614*s13^2*s23^7 - 1338*s13*s23^8 - 
                66*s23^9) + s12^3*s13*s23*(143*s13^9 - 1300*s13^8*s23 - 
                5581*s13^7*s23^2 + 1762*s13^6*s23^3 + 15638*s13^5*s23^4 + 
                15638*s13^4*s23^5 + 1762*s13^3*s23^6 - 5581*s13^2*s23^7 - 
                1300*s13*s23^8 + 143*s23^9) + s12^4*(20*s13^10 - 
                733*s13^9*s23 - 4641*s13^8*s23^2 + 1485*s13^7*s23^3 + 
                23429*s13^6*s23^4 + 38072*s13^5*s23^5 + 23429*s13^4*s23^6 + 
                1485*s13^3*s23^7 - 4641*s13^2*s23^8 - 733*s13*s23^9 + 
                20*s23^10)) + p2q^3*p3q*(19*s13^4*s23^3*(s13 + s23)^3*(
                s13^4 - 8*s13^3*s23 + 2*s13^2*s23^2 + 12*s13*s23^3 - 
                3*s23^4) + 2*s12^10*(6*s13^4 - 87*s13^3*s23 - 115*s13^2*
                 s23^2 - 91*s13*s23^3 + 10*s23^4) + s12^9*(256*s13^5 + 
                1678*s13^4*s23 + 2309*s13^3*s23^2 + 2064*s13^2*s23^3 + 
                1273*s13*s23^4 + 240*s23^5) + s12*s13^3*s23^2*(s13 + s23)^2*(
                17*s13^6 - 82*s13^5*s23 - 488*s13^4*s23^2 + 284*s13^3*s23^3 + 
                835*s13^2*s23^4 + 56*s13*s23^5 - 68*s23^6) + 
              s12^8*(444*s13^6 + 4577*s13^5*s23 + 10228*s13^4*s23^2 + 
                12079*s13^3*s23^3 + 9090*s13^2*s23^4 + 4510*s13*s23^5 + 
                600*s23^6) + s12^7*(-24*s13^7 + 1852*s13^6*s23 + 
                13267*s13^5*s23^2 + 23385*s13^4*s23^3 + 23944*s13^3*s23^4 + 
                15916*s13^2*s23^5 + 4834*s13*s23^6 + 580*s23^7) + 
              s12^6*(-376*s13^8 - 3432*s13^7*s23 + 1271*s13^6*s23^2 + 
                20012*s13^5*s23^3 + 34240*s13^4*s23^4 + 29009*s13^3*s23^5 + 
                13166*s13^2*s23^6 + 1818*s13*s23^7 + 240*s23^8) - 
              s12^2*s13^2*s23*(22*s13^9 - 345*s13^8*s23 + 378*s13^7*s23^2 + 
                3669*s13^6*s23^3 + 1036*s13^5*s23^4 - 6520*s13^4*s23^5 - 
                4676*s13^3*s23^6 + 819*s13^2*s23^7 + 778*s13*s23^8 - 
                85*s23^9) + s12^4*s23*(-365*s13^9 - 6054*s13^8*s23 - 
                11162*s13^7*s23^2 + 4238*s13^6*s23^3 + 26932*s13^5*s23^4 + 
                22952*s13^4*s23^5 + 4482*s13^3*s23^6 - 1847*s13^2*s23^7 - 
                90*s13*s23^8 + 20*s23^9) + s12^5*(-132*s13^9 - 3224*s13^8*
                 s23 - 9816*s13^7*s23^2 + 1263*s13^6*s23^3 + 25568*s13^5*
                 s23^4 + 35543*s13^4*s23^5 + 21090*s13^3*s23^6 + 
                3045*s13^2*s23^7 - 167*s13*s23^8 + 60*s23^9) + 
              s12^3*s13*(-20*s13^10 + 278*s13^9*s23 - 217*s13^8*s23^2 - 
                6276*s13^7*s23^3 - 6406*s13^6*s23^4 + 8169*s13^5*s23^5 + 
                16454*s13^4*s23^6 + 5860*s13^3*s23^7 - 2657*s13^2*s23^8 - 
                761*s13*s23^9 + 116*s23^10)))))/(54*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)^2*s23^2*(s12 + s23)^2*
         (s13 + s23)*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((-5*ep^3*s12*s23*(-(p2q*s13*(s12 + s13 - s23)) - 
          p1q*s23*(s12 - s13 + s23) + p3q*(s12^2 + 2*s13*s23 + 
            s12*(s13 + s23))))/(27*(p1q + p2q + p3q)*s13^2) + 
       (5*ep^2*(-(p2q^2*s13^2*s23*(s12 + s13 + s23)) - 2*p2q*p3q*s12*s13*
           (s13^2 + s12*(s13 - 4*s23) - 3*s13*s23 + 2*s23^2) + 
          p3q^2*s12*(s12^2*(2*s13 - 7*s23) + 4*s13*(s13 - 2*s23)*s23 + 
            s12*(2*s13^2 - s13*s23 - 7*s23^2)) - p1q^2*s23*
           (s23^2*(s13 + s23) - 2*s12^2*(s13 + 3*s23) + 
            s12*(-2*s13^2 + 4*s13*s23 - 5*s23^2)) + 
          2*p1q*(p2q*s13*(-(s12^2*(s13 - 3*s23)) + s23^2*(s13 + s23) - 
              s12*(s13^2 - 2*s13*s23 + 2*s23^2)) + p3q*s12*
             (s12^2*(s13 - 3*s23) + s12*(s13^2 + s13*s23 + s23^2) + 
              s23*(3*s13^2 - 5*s13*s23 + 4*s23^2)))))/
        (54*(p1q + p3q)*(p1q + p2q + p3q)*s13^2) - 
       (ep*(3*p1q^4*(s12 - s13)*s23^3*(s12 + s13 + s23) - 
          (p2q + p3q)*(5*p2q^3*(s12 - 3*s13)*s13^2*s23*(s12 + s13 + s23) - 
            p2q^2*p3q*s13*(20*s12^4 + s12^3*(59*s13 + 50*s23) + 
              s12*s13*(-15*s13^2 + 18*s13*s23 - 95*s23^2) + s12^2*(21*s13^2 + 
                10*s13*s23 - 50*s23^2) + 3*s13^2*(s13^2 + 6*s13*s23 + 
                5*s23^2)) + p3q^3*s12*(23*s12^4 + s12^3*(109*s13 + 8*s23) + 
              s12*s13*(71*s13^2 - 44*s13*s23 - 15*s23^2) + s12^2*(133*s13^2 - 
                24*s13*s23 - 15*s23^2) + 4*s13^2*(6*s13^2 - 13*s13*s23 + 
                10*s23^2)) + p2q*p3q^2*s12*(20*s12^4 + 5*s12^3*(12*s13 + 
                s23) + s12^2*(8*s13^2 - 120*s13*s23 - 15*s23^2) + 
              s12*s13*(-4*s13^2 - 139*s13*s23 + 15*s23^2) + 
              2*s13^2*(14*s13^2 - 47*s13*s23 + 55*s23^2))) + 
          p1q^3*s23*(p2q*(s12^3*(20*s13 - 3*s23) + s12^2*(-40*s13^2 - 
                23*s13*s23 + 17*s23^2) + 3*s23*(3*s13^3 + 3*s13^2*s23 - 
                5*s13*s23^2 - 5*s23^3) + s12*(20*s13^3 - 47*s13^2*s23 + 
                60*s13*s23^2 + 5*s23^3)) + p3q*(s12^3*(20*s13 - 9*s23) + 
              s12^2*(-40*s13^2 - 29*s13*s23 + 14*s23^2) + 3*s23*(s13^3 - 
                6*s13*s23^2 - 5*s23^3) + s12*(20*s13^3 - 53*s13^2*s23 + 
                60*s13*s23^2 + 8*s23^3))) - 
          p1q*(p2q^2*p3q*(-3*s13^5 + 20*s12^4*(s13 - 2*s23) + 6*s13^4*s23 + 
              84*s13^3*s23^2 + 75*s13^2*s23^3 - s12^3*(11*s13^2 + 
                340*s13*s23 + 10*s23^2) + s12*s13^2*(103*s13^2 - 
                244*s13*s23 + 296*s23^2) + 5*s12^2*(15*s13^3 - 62*s13^2*s23 + 
                22*s13*s23^2 + 6*s23^3)) + p2q^3*s13*(s12^3*(s13 - 60*s23) + 
              s12^2*(39*s13^2 - 55*s13*s23 + 30*s23^2) - 3*s13*(s13^3 + 
                s13^2*s23 - 15*s13*s23^2 - 15*s23^3) + s12*(35*s13^3 - 
                38*s13^2*s23 + 95*s13*s23^2 + 10*s23^3)) + 
            p3q^3*s12*(3*s12^4 + s12^3*(69*s13 - 66*s23) + s12^2*(73*s13^2 - 
                252*s13*s23 - 24*s23^2) + 2*s13*(12*s13^3 - 86*s13^2*s23 + 
                91*s13*s23^2 + 15*s23^3) + s12*(31*s13^3 - 198*s13^2*s23 + 
                66*s13*s23^2 + 45*s23^3)) + p2q*p3q^2*(3*s12^5 + 
              s12^4*(89*s13 - 103*s23) + s12^3*(61*s13^2 - 526*s13*s23 - 
                31*s23^2) + 6*s13^2*s23*(s13^2 + 6*s13*s23 + 5*s23^2) + 
              4*s12*s13*(23*s13^3 - 96*s13^2*s23 + 95*s13*s23^2 + 5*s23^3) + 
              s12^2*(67*s13^3 - 453*s13^2*s23 + 149*s13*s23^2 + 75*s23^3))) + 
          p1q^2*(p3q^2*(2*s12^3*(49*s13 - 30*s23)*s23 + s12^4*(-20*s13 + 
                9*s23) + 3*s13*s23^2*(s13^2 + 6*s13*s23 + 5*s23^2) + 
              s12^2*(20*s13^3 + 9*s13^2*s23 - 200*s13*s23^2 - 24*s23^3) + 
              15*s12*s23*(8*s13^3 - 15*s13^2*s23 + 4*s13*s23^2 + 3*s23^3)) + 
            p2q^2*(s12^2*s23*(31*s13^2 - 100*s13*s23 - 5*s23^2) + 
              20*s12^3*(s13^2 + 3*s13*s23 - s23^2) - 9*s13*s23*(s13^3 + 
                s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + s12*(-20*s13^4 + 
                82*s13^3*s23 - 101*s13^2*s23^2 + 80*s13*s23^3 + 15*s23^4)) + 
            p2q*p3q*(s12^4*(-20*s13 + 6*s23) + s12^3*(20*s13^2 + 
                152*s13*s23 - 77*s23^2) + s12^2*(20*s13^3 + 40*s13^2*s23 - 
                297*s13*s23^2 - 23*s23^3) + 3*s13*s23*(-2*s13^3 + s13^2*s23 + 
                23*s13*s23^2 + 20*s23^3) + s12*(-20*s13^4 + 208*s13^3*s23 - 
                317*s13^2*s23^2 + 140*s13*s23^3 + 60*s23^4)))))/
        (108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) - 
       (-3*p1q^4*s23^2*(s13*s23^2*(s13 + s23) + s12^2*(32*s13^2 + 
             16*s13*s23 + 5*s23^2) + s12*(32*s13^3 + 48*s13^2*s23 + 
             22*s13*s23^2 + 5*s23^3)) - (p2q + p3q)*
          (5*p2q^3*s13^2*s23*(12*s12^3 - 3*s13*s23*(s13 + s23) + 
             s12^2*(24*s13 + s23) + s12*(12*s13^2 - 2*s13*s23 - 11*s23^2)) + 
           p3q^3*s12*(5*s12^4*s23 - 48*s13^4*s23 + s12^3*(96*s13^2 - 25*s13*
                s23 - 10*s23^2) - 3*s12*s13*s23*(s13^2 + 6*s13*s23 + 5*
                s23^2) + s12^2*(96*s13^3 - 81*s13^2*s23 + 100*s13*s23^2 - 15*
                s23^3)) + p2q^2*p3q*s13*(-80*s12^4*s23 + 
             s12^3*s23*(-123*s13 + 70*s23) - 3*s13^2*s23*(s13^2 + 6*s13*s23 + 
               5*s23^2) + s12*s13*(96*s13^3 + 95*s13^2*s23 - 30*s13*s23^2 - 
               65*s23^3) + s12^2*(96*s13^3 + 151*s13^2*s23 + 26*s13*s23^2 - 
               10*s23^3)) + p2q*p3q^2*s12*(20*s12^4*s23 + 5*s12^3*s23*
              (-10*s13 + s23) + 6*s13^2*s23*(-15*s13^2 + 6*s13*s23 + 5*
                s23^2) - s12^2*(192*s13^3 + 282*s13^2*s23 - 250*s13*s23^2 + 
               15*s23^3) + s12*s13*(-192*s13^3 - 110*s13^2*s23 + 121*s13*
                s23^2 + 15*s23^3))) + p1q^3*s23*
          (p3q*(s12^3*(192*s13^2 + 56*s13*s23 + 45*s23^2) + 
             3*s23^2*(s13^3 - 6*s13*s23^2 - 5*s23^3) + 
             s12^2*(96*s13^3 + 80*s13^2*s23 + 69*s13*s23^2 + 50*s23^3) + 
             s12*(96*s13^4 - 136*s13^3*s23 - 373*s13^2*s23^2 - 190*s13*
                s23^3 - 10*s23^4)) + p2q*(s12^3*(96*s13^2 + 8*s13*s23 + 15*
                s23^2) + 3*s23^2*(3*s13^3 + 3*s13^2*s23 - 5*s13*s23^2 - 5*
                s23^3) + s12^2*(96*s13^3 + 80*s13^2*s23 + 63*s13*s23^2 + 35*
                s23^3) + s12*(192*s13^4 + 104*s13^3*s23 - 151*s13^2*s23^2 - 
               100*s13*s23^3 + 5*s23^4))) + 
         p1q*(p3q^3*s12*(15*s12^4*s23 + s12^3*(-192*s13^2 + 17*s13*s23 + 30*
                s23^2) + s12*s23*(-77*s13^3 + 174*s13^2*s23 + 182*s13*s23^2 - 
               45*s23^3) + 6*s13*s23*(24*s13^3 - s13^2*s23 - 6*s13*s23^2 - 5*
                s23^3) - s12^2*(192*s13^3 - 165*s13^2*s23 + 206*s13*s23^2 + 
               30*s23^3)) + p2q^2*p3q*(10*s12^4*s23*(5*s13 + 4*s23) + 
             s12^2*s23*(-89*s13^3 + 782*s13^2*s23 + 488*s13*s23^2 - 30*
                s23^3) + 3*s13^2*s23*(s13^3 - 2*s13^2*s23 - 28*s13*s23^2 - 25*
                s23^3) + s12^3*(192*s13^3 + 349*s13^2*s23 - 92*s13*s23^2 + 10*
                s23^3) + s12*s13*(-192*s13^4 + 191*s13^3*s23 + 716*s13^2*
                s23^2 + 410*s13*s23^3 - 100*s23^4)) + 
           p2q*p3q^2*(15*s12^5*s23 - 6*s13^2*s23^2*(s13^2 + 6*s13*s23 + 5*
                s23^2) + s12^4*(-96*s13^2 + 67*s13*s23 + 85*s23^2) + 
             2*s12*s13*s23*(301*s13^3 + 324*s13^2*s23 + 149*s13*s23^2 - 30*
                s23^3) + s12^3*(288*s13^3 + 723*s13^2*s23 - 298*s13*s23^2 - 5*
                s23^3) + s12^2*(384*s13^4 + 409*s13^3*s23 + 847*s13^2*s23^2 + 
               565*s13*s23^3 - 75*s23^4)) - p2q^3*s13*(17*s12^3*s13*s23 + 
             s12^2*(96*s13^3 + 191*s13^2*s23 - 259*s13*s23^2 - 90*s23^3) - 
             3*s13*s23*(s13^3 + s13^2*s23 - 15*s13*s23^2 - 15*s23^3) + 
             s12*(96*s13^4 + 75*s13^3*s23 - 230*s13^2*s23^2 - 145*s13*s23^3 + 
               70*s23^4))) + p1q^2*(p3q^2*(3*s13*s23^3*(s13^2 + 6*s13*s23 + 5*
                s23^2) - s12^4*(96*s13^2 + 8*s13*s23 + 45*s23^2) - 
             4*s12^3*(24*s13^3 - 84*s13^2*s23 + 5*s13*s23^2 + 15*s23^3) + 
             s12^2*s23*(56*s13^3 + 467*s13^2*s23 + 374*s13*s23^2 + 30*
                s23^3) + s12*s23*(192*s13^4 - 6*s13^3*s23 - 175*s13^2*s23^2 - 
               64*s13*s23^3 + 45*s23^4)) + p2q*p3q*
            (-2*s12^4*s23*(4*s13 + 15*s23) + s12^3*(192*s13^3 + 536*s13^2*
                s23 - 130*s13*s23^2 - 95*s23^3) + 3*s13*s23^2*
              (-2*s13^3 + s13^2*s23 + 23*s13*s23^2 + 20*s23^3) + 
             s12^2*(192*s13^4 + 392*s13^3*s23 + 760*s13^2*s23^2 + 323*s13*
                s23^3 - 5*s23^4) + s12*s23*(616*s13^4 + 598*s13^3*s23 - 83*
                s13^2*s23^2 - 200*s13*s23^3 + 60*s23^4)) + 
           p2q^2*(-2*s12^3*s23*(-52*s13^2 + 31*s13*s23 + 10*s23^2) - 
             9*s13*s23^2*(s13^3 + s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
             s12^2*(-96*s13^4 - 48*s13^3*s23 + 239*s13^2*s23^2 + 18*s13*
                s23^3 - 5*s23^4) + s12*(-96*s13^5 + 136*s13^4*s23 + 292*s13^3*
                s23^2 - 55*s13^2*s23^3 - 160*s13*s23^4 + 15*s23^5))))/
        (216*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       ((s12 + s13 + s23)*(3*p1q^3*(3*s12 - s13)*s23^2 + 
          (p3q*s12 - p2q*s13)^2*(29*p3q*s12 + 5*p2q*(4*s12 - 3*s23) - 
            3*p3q*(s13 + 5*s23)) + p1q^2*s23*(p2q*(-18*s12*s13 + 6*s13^2 + 
              20*s12*s23 - 15*s23^2) + p3q*(-18*s12^2 - 3*s23*(s13 + 5*s23) + 
              s12*(6*s13 + 29*s23))) + p1q*(p2q^2*s13*(9*s12*s13 - 3*s13^2 - 
              40*s12*s23 + 30*s23^2) + p3q^2*s12*(9*s12^2 + 6*s23*(s13 + 
                5*s23) - s12*(3*s13 + 58*s23)) + 2*p2q*p3q*
             (3*s13*s23*(s13 + 5*s23) - s12^2*(9*s13 + 20*s23) + 
              s12*(3*s13^2 - 29*s13*s23 + 15*s23^2))))*den[-1 + 2*ep])/
        (216*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]] + 
     ((-5*ep^3*s12*s13*(-(p2q*s13*(s12 + s13 - s23)) - 
          p1q*s23*(s12 - s13 + s23) + p3q*(s12^2 + 2*s13*s23 + 
            s12*(s13 + s23))))/(27*(p1q + p2q + p3q)*s23^2) - 
       (5*ep^2*(p1q^2*s13*s23^2*(s12 + s13 + s23) + 2*p1q*p3q*s12*s23*
           (2*s13^2 - 3*s13*s23 + s23^2 + s12*(-4*s13 + s23)) + 
          p3q^2*s12*(s12^2*(7*s13 - 2*s23) + 4*s13*(2*s13 - s23)*s23 + 
            s12*(7*s13^2 + s13*s23 - 2*s23^2)) + p2q^2*s13*
           (s13^2*(s13 + s23) - 2*s12^2*(3*s13 + s23) + 
            s12*(-5*s13^2 + 4*s13*s23 - 2*s23^2)) + 
          2*p2q*(p1q*s23*(s12^2*(-3*s13 + s23) - s13^2*(s13 + s23) + 
              s12*(2*s13^2 - 2*s13*s23 + s23^2)) + p3q*s12*
             (s12^2*(3*s13 - s23) + s13*(-4*s13^2 + 5*s13*s23 - 3*s23^2) - 
              s12*(s13^2 + s13*s23 + s23^2)))))/(54*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2) + 
       (ep*(-3*p2q^4*s13^3*(s12 - s23)*(s12 + s13 + s23) + 
          5*p1q^4*s13*(s12 - 3*s23)*s23^2*(s12 + s13 + s23) + 
          p3q^4*s12*(23*s12^4 + s12^3*(8*s13 + 109*s23) + 
            4*s23^2*(10*s13^2 - 13*s13*s23 + 6*s23^2) + 
            s12*s23*(-15*s13^2 - 44*s13*s23 + 71*s23^2) + 
            s12^2*(-15*s13^2 - 24*s13*s23 + 133*s23^2)) + 
          p2q^3*p3q*s13*(s12^3*(9*s13 - 20*s23) + s12^2*(-14*s13^2 + 
              29*s13*s23 + 40*s23^2) + 3*s13*(5*s13^3 + 6*s13^2*s23 - 
              s23^3) - s12*(8*s13^3 + 60*s13^2*s23 - 53*s13*s23^2 + 
              20*s23^3)) - p2q^2*p3q^2*(s12^4*(9*s13 - 20*s23) + 
            s12^3*(-60*s13^2 + 98*s13*s23) + 3*s13^2*s23*(5*s13^2 + 
              6*s13*s23 + s23^2) + 15*s12*s13*(3*s13^3 + 4*s13^2*s23 - 
              15*s13*s23^2 + 8*s23^3) + s12^2*(-24*s13^3 - 200*s13^2*s23 + 
              9*s13*s23^2 + 20*s23^3)) + p2q*p3q^3*s12*
           (3*s12^4 + s12^3*(-66*s13 + 69*s23) + s12^2*(-24*s13^2 - 
              252*s13*s23 + 73*s23^2) + 2*s23*(15*s13^3 + 91*s13^2*s23 - 
              86*s13*s23^2 + 12*s23^3) + s12*(45*s13^3 + 66*s13^2*s23 - 
              198*s13*s23^2 + 31*s23^3)) - p1q^3*s23*
           (p3q*(20*s12^4 + s12^3*(50*s13 + 59*s23) + s12*s23*(-100*s13^2 + 
                28*s13*s23 - 15*s23^2) + 3*s23^2*(10*s13^2 + 11*s13*s23 + 
                s23^2) + s12^2*(-50*s13^2 + 5*s13*s23 + 21*s23^2)) + 
            p2q*(s12^3*(60*s13 - s23) + s12^2*(-30*s13^2 + 55*s13*s23 - 
                39*s23^2) + 3*s23*(-15*s13^3 - 15*s13^2*s23 + s13*s23^2 + 
                s23^3) - s12*(10*s13^3 + 95*s13^2*s23 - 38*s13*s23^2 + 
                35*s23^3))) + p1q*(p3q^3*s12*(43*s12^4 + 13*s12^3*(s13 + 
                13*s23) + s12*s23^2*(-183*s13 + 67*s23) - 3*s12^2*(10*s13^2 + 
                48*s13*s23 - 47*s23^2) + 2*s23^2*(75*s13^2 - 73*s13*s23 + 
                26*s23^2)) + p2q^3*s13*(s12^3*(3*s13 - 20*s23) + 
              s12^2*(-17*s13^2 + 23*s13*s23 + 40*s23^2) + 3*s13*(5*s13^3 + 
                5*s13^2*s23 - 3*s13*s23^2 - 3*s23^3) - s12*(5*s13^3 + 
                60*s13^2*s23 - 47*s13*s23^2 + 20*s23^3)) + 
            p2q*p3q^2*(3*s12^5 + s12^4*(-103*s13 + 89*s23) + 6*s13*s23^2*(
                5*s13^2 + 6*s13*s23 + s23^2) + s12^3*(-31*s13^2 - 
                526*s13*s23 + 61*s23^2) + 4*s12*s23*(5*s13^3 + 95*s13^2*s23 - 
                96*s13*s23^2 + 23*s23^3) + s12^2*(75*s13^3 + 149*s13^2*s23 - 
                453*s13*s23^2 + 67*s23^3)) - p2q^2*p3q*
             (s12^4*(6*s13 - 20*s23) + s12^3*(-77*s13^2 + 152*s13*s23 + 
                20*s23^2) + 3*s13*s23*(20*s13^3 + 23*s13^2*s23 + s13*s23^2 - 
                2*s23^3) + s12^2*(-23*s13^3 - 297*s13^2*s23 + 40*s13*s23^2 + 
                20*s23^3) + s12*(60*s13^4 + 140*s13^3*s23 - 317*s13^2*s23^2 + 
                208*s13*s23^3 - 20*s23^4))) + 
          p1q^2*(p3q^2*(20*s12^5 + 5*s12^4*(s13 + 8*s23) + s12^2*s23*(
                65*s13^2 - 149*s13*s23 - 25*s23^2) - 3*s23^3*(5*s13^2 + 
                6*s13*s23 + s23^2) + s12*s23^2*(205*s13^2 - 112*s13*s23 + 
                43*s23^2) - s12^3*(15*s13^2 + 170*s13*s23 + 51*s23^2)) + 
            p2q*p3q*(20*s12^4*(-2*s13 + s23) - s12^3*(10*s13^2 + 
                340*s13*s23 + 11*s23^2) + s12*s23^2*(296*s13^2 - 
                244*s13*s23 + 103*s23^2) + 3*s23^2*(25*s13^3 + 28*s13^2*s23 + 
                2*s13*s23^2 - s23^3) + 5*s12^2*(6*s13^3 + 22*s13^2*s23 - 
                62*s13*s23^2 + 15*s23^3)) + p2q^2*(s12^2*s13*(5*s13^2 + 
                100*s13*s23 - 31*s23^2) + 20*s12^3*(s13^2 - 3*s13*s23 - 
                s23^2) + 9*s13*s23*(-5*s13^3 - 5*s13^2*s23 + s13*s23^2 + 
                s23^3) + s12*(-15*s13^4 - 80*s13^3*s23 + 101*s13^2*s23^2 - 
                82*s13*s23^3 + 20*s23^4)))))/(108*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (5*p1q^4*s13*s23^2*(12*s12^3 - 
           3*s13*s23*(s13 + s23) + s12^2*(s13 + 24*s23) + 
           s12*(-11*s13^2 - 2*s13*s23 + 12*s23^2)) + 3*p2q^4*s13^2*
          (s13^2*s23*(s13 + s23) + s12^2*(5*s13^2 + 16*s13*s23 + 32*s23^2) + 
           s12*(5*s13^3 + 22*s13^2*s23 + 48*s13*s23^2 + 32*s23^3)) + 
         p3q^4*s12*(5*s12^4*s13 - 48*s13*s23^4 - 3*s12*s13*s23*
            (5*s13^2 + 6*s13*s23 + s23^2) + s12^3*(-10*s13^2 - 25*s13*s23 + 
             96*s23^2) + s12^2*(-15*s13^3 + 100*s13^2*s23 - 81*s13*s23^2 + 
             96*s23^3)) + p2q*p3q^3*s12*(-15*s12^4*s13 + 
           s12^3*(-30*s13^2 - 17*s13*s23 + 192*s23^2) + 
           6*s13*s23*(5*s13^3 + 6*s13^2*s23 + s13*s23^2 - 24*s23^3) + 
           s12*s13*(45*s13^3 - 182*s13^2*s23 - 174*s13*s23^2 + 77*s23^3) + 
           s12^2*(30*s13^3 + 206*s13^2*s23 - 165*s13*s23^2 + 192*s23^3)) + 
         p2q^2*p3q^2*(-3*s13^3*s23*(5*s13^2 + 6*s13*s23 + s23^2) + 
           s12^4*(45*s13^2 + 8*s13*s23 + 96*s23^2) + 
           4*s12^3*(15*s13^3 + 5*s13^2*s23 - 84*s13*s23^2 + 24*s23^3) - 
           s12^2*s13*(30*s13^3 + 374*s13^2*s23 + 467*s13*s23^2 + 56*s23^3) + 
           s12*s13*(-45*s13^4 + 64*s13^3*s23 + 175*s13^2*s23^2 + 
             6*s13*s23^3 - 192*s23^4)) - p2q^3*p3q*s13*
          (s12^3*(45*s13^2 + 56*s13*s23 + 192*s23^2) + 
           3*s13^2*(-5*s13^3 - 6*s13^2*s23 + s23^3) + 
           s12^2*(50*s13^3 + 69*s13^2*s23 + 80*s13*s23^2 + 96*s23^3) - 
           s12*(10*s13^4 + 190*s13^3*s23 + 373*s13^2*s23^2 + 136*s13*s23^3 - 
             96*s23^4)) + p1q^3*s23*
          (-(p3q*(80*s12^4*s13 + 7*s12^3*s13*(-10*s13 + 9*s23) + 
              3*s13*s23^2*(10*s13^2 + 11*s13*s23 + s23^2) + s12^2*(10*s13^3 - 
                31*s13^2*s23 - 271*s13*s23^2 - 96*s23^3) + 
              s12*s23*(120*s13^3 + 40*s13^2*s23 - 155*s13*s23^2 - 
                96*s23^3))) + p2q*(17*s12^3*s13*s23 + 3*s13*s23*
              (15*s13^3 + 15*s13^2*s23 - s13*s23^2 - s23^3) + 
             s12^2*(-90*s13^3 - 259*s13^2*s23 + 191*s13*s23^2 + 96*s23^3) + 
             s12*(70*s13^4 - 145*s13^3*s23 - 230*s13^2*s23^2 + 75*s13*s23^3 + 
               96*s23^4))) - p1q*(p3q^3*s12*(-25*s12^4*s13 + 
             s12^3*(5*s13^2 + 75*s13*s23 - 96*s23^2) - 6*s13*s23^2*
              (5*s13^2 + 6*s13*s23 - 23*s23^2) + s12*s23^2*(-103*s13^2 + 113*
                s13*s23 + 192*s23^2) + s12^2*(30*s13^3 - 350*s13^2*s23 + 363*
                s13*s23^2 + 96*s23^3)) + p2q^3*s13*
            (s12^3*(15*s13^2 + 8*s13*s23 + 96*s23^2) + 
             3*s13^2*(-5*s13^3 - 5*s13^2*s23 + 3*s13*s23^2 + 3*s23^3) + 
             s12^2*(35*s13^3 + 63*s13^2*s23 + 80*s13*s23^2 + 96*s23^3) + 
             s12*(5*s13^4 - 100*s13^3*s23 - 151*s13^2*s23^2 + 104*s13*s23^3 + 
               192*s23^4)) + p2q*p3q^2*(15*s12^5*s13 + 
             s12^4*(85*s13^2 + 67*s13*s23 - 96*s23^2) - 6*s13^2*s23^2*
              (5*s13^2 + 6*s13*s23 + s23^2) + s12^3*(-5*s13^3 - 298*s13^2*
                s23 + 723*s13*s23^2 + 288*s23^3) + 2*s12*s13*s23*
              (-30*s13^3 + 149*s13^2*s23 + 324*s13*s23^2 + 301*s23^3) + 
             s12^2*(-75*s13^4 + 565*s13^3*s23 + 847*s13^2*s23^2 + 409*s13*
                s23^3 + 384*s23^4)) + p2q^2*p3q*
            (-2*s12^4*s13*(15*s13 + 4*s23) + 3*s13^2*s23*(20*s13^3 + 23*s13^2*
                s23 + s13*s23^2 - 2*s23^3) + s12^3*(-95*s13^3 - 130*s13^2*
                s23 + 536*s13*s23^2 + 192*s23^3) + s12^2*(-5*s13^4 + 323*
                s13^3*s23 + 760*s13^2*s23^2 + 392*s13*s23^3 + 192*s23^4) + 
             s12*s13*(60*s13^4 - 200*s13^3*s23 - 83*s13^2*s23^2 + 598*s13*
                s23^3 + 616*s23^4))) + 
         p1q^2*(p3q^2*(20*s12^5*s13 + 5*s12^4*s13*(s13 - 26*s23) - 
             3*s13*s23^3*(5*s13^2 + 6*s13*s23 + s23^2) + 
             s12^2*s23*(5*s13^3 + 147*s13^2*s23 + 41*s13*s23^2 - 96*s23^3) + 
             s12*s23^2*(-35*s13^3 + 6*s13^2*s23 + 5*s13*s23^2 + 96*s23^3) - 
             s12^3*(15*s13^3 - 320*s13^2*s23 + 405*s13*s23^2 + 192*s23^3)) - 
           p2q*p3q*(10*s12^4*s13*(4*s13 + 5*s23) + s12^2*s13*(-30*s13^3 + 488*
                s13^2*s23 + 782*s13*s23^2 - 89*s23^3) + 3*s13*s23^2*
              (-25*s13^3 - 28*s13^2*s23 - 2*s13*s23^2 + s23^3) + 
             s12^3*(10*s13^3 - 92*s13^2*s23 + 349*s13*s23^2 + 192*s23^3) + 
             s12*s23*(-100*s13^4 + 410*s13^3*s23 + 716*s13^2*s23^2 + 191*s13*
                s23^3 - 192*s23^4)) + p2q^2*(2*s12^3*s13*(10*s13^2 + 31*s13*
                s23 - 52*s23^2) + 9*s13^2*s23*(-5*s13^3 - 5*s13^2*s23 + s13*
                s23^2 + s23^3) + s12^2*(5*s13^4 - 18*s13^3*s23 - 239*s13^2*
                s23^2 + 48*s13*s23^3 + 96*s23^4) + s12*(-15*s13^5 + 160*s13^4*
                s23 + 55*s13^3*s23^2 - 292*s13^2*s23^3 - 136*s13*s23^4 + 96*
                s23^5))))/(216*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*
         s23^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((s12 + s13 + s23)*(5*p1q^3*(4*s12 - 3*s13)*s23^2 + 
          (p3q*s12 - p2q*s13)^2*(29*p3q*s12 + p2q*(9*s12 - 3*s23) - 
            3*p3q*(5*s13 + s23)) + p1q^2*s23*(p2q*(-40*s12*s13 + 30*s13^2 + 
              9*s12*s23 - 3*s23^2) + p3q*(-40*s12^2 - 3*s23*(5*s13 + s23) + 
              s12*(30*s13 + 29*s23))) + 
          p1q*(p2q^2*s13*(20*s12*s13 - 15*s13^2 - 18*s12*s23 + 6*s23^2) + 
            p3q^2*s12*(20*s12^2 + 6*s23*(5*s13 + s23) - s12*(15*s13 + 
                58*s23)) + 2*p2q*p3q*(3*s13*s23*(5*s13 + s23) - 
              s12^2*(20*s13 + 9*s23) + s12*(15*s13^2 - 29*s13*s23 + 
                3*s23^2))))*den[-1 + 2*ep])/(216*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + 
     ((ep^2*(p2q^3*s13*(2*s12 + s13)*s23*(s12 + s13 + s23) + 
          p1q^3*s13*s23*(2*s12 + s23)*(s12 + s13 + s23) + 
          p2q*p3q^2*s12^2*(-4*s12^2 - 4*s12*s13 + 8*s13^2 - 11*s12*s23 - 
            7*s13*s23 + s23^2) - p3q^3*s12^2*(4*s12^2 + s13^2 + 10*s13*s23 + 
            s23^2 + 9*s12*(s13 + s23)) + p2q^2*p3q*(s12^3*(4*s13 - 2*s23) + 
            s13^2*(s13 + s23)^2 + 2*s12^2*(4*s13^2 + 2*s13*s23 + s23^2) + 
            s12*s13*(s13^2 + 3*s13*s23 + 2*s23^2)) + 
          p1q^2*(p3q*(-2*s12^3*(s13 - 2*s23) + s23^2*(s13 + s23)^2 + 
              s12*s23*(2*s13^2 + 3*s13*s23 + s23^2) + 2*s12^2*(s13^2 + 
                2*s13*s23 + 4*s23^2)) + p2q*(4*s12^3*s23 + 2*s12^2*(s13^2 + 
                2*s13*s23 + 4*s23^2) + s12*(-2*s13^3 - 4*s13^2*s23 + s23^3) + 
              s23*(-2*s13^3 - 2*s13^2*s23 + s13*s23^2 + s23^3))) + 
          p1q*(p3q^2*s12^2*(-4*s12^2 - 11*s12*s13 + s13^2 - 4*s12*s23 - 
              7*s13*s23 + 8*s23^2) + p2q^2*(4*s12^3*s13 + 2*s12^2*(4*s13^2 + 
                2*s13*s23 + s23^2) + s12*(s13^3 - 4*s13*s23^2 - 2*s23^3) + 
              s13*(s13^3 + s13^2*s23 - 2*s13*s23^2 - 2*s23^3)) - 
            2*p2q*p3q*(2*s12^4 + 2*s12^3*(s13 + s23) + s13*s23*(s13 + s23)^
                2 - 5*s12^2*(s13^2 + s23^2) + s12*(s13^3 + 2*s13^2*s23 + 
                2*s13*s23^2 + s23^3)))))/(108*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2) + 
       (ep*(p1q^5*s23^2*(4*s12^4 - 9*s12^3*s23 + 20*s13*s23^2*(s13 + s23) + 
            s12^2*(-4*s13^2 + 3*s13*s23 - 30*s23^2) + 
            s12*s23*(20*s13^2 + 23*s13*s23 - 17*s23^2)) + 
          p1q^4*s23*(p3q*(-12*s12^5 + s12^4*(12*s13 + 211*s23) + 
              s12^3*(-4*s13^2 - 258*s13*s23 + 429*s23^2) + 20*s23^2*(-s13^3 + 
                s13^2*s23 + 3*s13*s23^2 + s23^3) + 5*s12*s23*(-4*s13^3 - 
                s13^2*s23 + 18*s13*s23^2 + 7*s23^3) + s12^2*(4*s13^3 - 
                49*s13^2*s23 - 232*s13*s23^2 + 221*s23^3)) + 
            p2q*(-8*s12^5 + s12^4*(8*s13 + 173*s23) + s12^3*(-8*s13^2 - 
                318*s13*s23 + 375*s23^2) + 20*s23^2*(-4*s13^3 - 4*s13^2*s23 + 
                s13*s23^2 + s23^3) + 3*s12*s23*(-20*s13^3 - 46*s13^2*s23 + 
                17*s13*s23^2 + 23*s23^3) + s12^2*(8*s13^3 - 95*s13^2*s23 - 
                287*s13*s23^2 + 243*s23^3))) + (p2q + p3q)*
           (p2q^4*s13^2*(4*s12^4 - 9*s12^3*s13 + 20*s13^2*s23*(s13 + s23) + 
              s12^2*(-30*s13^2 + 3*s13*s23 - 4*s23^2) + s12*s13*(-17*s13^2 + 
                23*s13*s23 + 20*s23^2)) + p2q^2*p3q^2*(8*s12^6 - 
              20*s13^3*s23*(s13 + s23)^2 - s12^5*(239*s13 + 4*s23) + 
              s12^4*(-100*s13^2 + 227*s13*s23 - 8*s23^2) + s12^3*(463*s13^3 - 
                451*s13^2*s23 + 412*s13*s23^2 + 4*s23^3) - 2*s12*s13^2*(
                7*s13^3 + 44*s13^2*s23 + 46*s13*s23^2 + 9*s23^3) + 
              2*s12^2*s13*(151*s13^3 - 363*s13^2*s23 + 166*s13*s23^2 + 
                9*s23^3)) + 2*p3q^4*s12^2*(29*s12^4 - 21*s12^3*(s13 + s23) + 
              s12^2*(-117*s13^2 + 31*s13*s23 - 117*s23^2) + 
              s13*s23*(-63*s13^2 + 94*s13*s23 - 63*s23^2) - s12*(67*s13^3 + 
                15*s13^2*s23 + 15*s13*s23^2 + 67*s23^3)) + 
            p2q*p3q^3*s12*(41*s12^5 - 2*s12^4*(183*s13 + 50*s23) + 
              s12^3*(-655*s13^2 + 121*s13*s23 - 275*s23^2) + 2*s13^2*s23*(
                -3*s13^2 - 2*s13*s23 + s23^2) + 2*s12*s13*(64*s13^3 - 
                265*s13^2*s23 + 277*s13*s23^2 - 58*s23^3) - 
              s12^2*(120*s13^3 + 327*s13^2*s23 - 323*s13*s23^2 + 
                134*s23^3)) + p2q^3*p3q*s13*(-12*s12^5 + 3*s12^4*(69*s13 + 
                4*s23) + s12^3*(438*s13^2 - 258*s13*s23 - 4*s23^2) + 
              s12*s13*(52*s13^3 + 67*s13^2*s23 - 25*s13*s23^2 - 20*s23^3) + 
              s12^2*(251*s13^3 - 235*s13^2*s23 - 45*s13*s23^2 + 4*s23^3) + 
              20*(s13^5 + 2*s13^4*s23 - s13^2*s23^3))) - 
          p1q*(p2q^4*s13*(8*s12^5 - s12^4*(173*s13 + 8*s23) + 
              s12^3*(-375*s13^2 + 318*s13*s23 + 8*s23^2) + 
              s12^2*(-243*s13^3 + 287*s13^2*s23 + 95*s13*s23^2 - 8*s23^3) - 
              20*s13^2*(s13^3 + s13^2*s23 - 4*s13*s23^2 - 4*s23^3) + 
              3*s12*s13*(-23*s13^3 - 17*s13^2*s23 + 46*s13*s23^2 + 
                20*s23^3)) + p3q^4*s12*(-99*s12^5 + 2*s12^4*(71*s13 + 
                204*s23) - 2*s13*s23^2*(s13^2 - 2*s13*s23 - 3*s23^2) + 
              s12^3*(509*s13^2 - 183*s13*s23 + 889*s23^2) + 2*s12*s23*(
                121*s13^3 - 371*s13^2*s23 + 328*s13*s23^2 - 64*s23^3) + 
              s12^2*(268*s13^3 - 293*s13^2*s23 + 357*s13*s23^2 + 
                254*s23^3)) + p2q^3*p3q*(-8*s12^6 + 2*s12^5*(199*s13 + 
                6*s23) + s12^4*(268*s13^2 - 622*s13*s23 + 4*s23^2) - 
              s12^3*(541*s13^3 - 1177*s13^2*s23 + 960*s13*s23^2 + 12*s23^3) + 
              s12*s13*(-35*s13^4 + 277*s13^3*s23 + 387*s13^2*s23^2 - 
                45*s13*s23^3 - 40*s23^4) - 2*s12^2*(209*s13^4 - 964*s13^3*
                 s23 + 503*s13^2*s23^2 + 78*s13*s23^3 - 2*s23^4) - 
              20*s13^2*(s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 4*s13*s23^3 + 
                3*s23^4)) + p2q^2*p3q^2*(-57*s12^6 + s12^5*(1095*s13 + 
                472*s23) + s12^4*(1716*s13^2 - 1351*s13*s23 + 941*s23^2) + 
              20*s13^2*s23*(4*s13^3 + 4*s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
              s12^3*(241*s13^3 + 903*s13^2*s23 - 1530*s13*s23^2 + 
                430*s23^3) + s12*s13*(34*s13^4 + 239*s13^3*s23 - 
                21*s13^2*s23^2 - 318*s13*s23^3 - 72*s23^4) + 
              s12^2*(-289*s13^4 + 2693*s13^3*s23 - 3245*s13^2*s23^2 + 
                556*s13*s23^3 + 18*s23^4)) - p2q*p3q^3*(148*s12^6 - 
              847*s12^5*(s13 + s23) + 40*s13^2*s23^2*(s13 + s23)^2 - 
              4*s12^4*(446*s13^2 - 245*s13*s23 + 446*s23^2) + 
              s12^3*(-675*s13^3 + 283*s13^2*s23 + 283*s13*s23^2 - 
                675*s23^3) + 2*s12*s13*s23*(13*s13^3 + 93*s13^2*s23 + 
                93*s13*s23^2 + 13*s23^3) + 2*s12^2*(57*s13^4 - 671*s13^3*
                 s23 + 1438*s13^2*s23^2 - 671*s13*s23^3 + 57*s23^4))) - 
          p1q^2*(p3q^3*(-49*s12^6 + 20*s13*s23^3*(s13 + s23)^2 + 
              s12^5*(104*s13 + 605*s23) + s12^4*(283*s13^2 - 348*s13*s23 + 
                755*s23^2) + s12^3*(130*s13^3 - 735*s13^2*s23 + 
                778*s13*s23^2 - 343*s23^3) + 2*s12^2*s23*(49*s13^3 - 
                443*s13^2*s23 + 628*s13*s23^2 - 215*s23^3) + 2*s12*s23^2*(
                8*s13^3 + 48*s13^2*s23 + 47*s13*s23^2 + 7*s23^3)) + 
            p2q^3*(8*s12^5*(22*s13 + s23) + s12^4*(353*s13^2 - 348*s13*s23 - 
                4*s23^2) + s12^3*(246*s13^3 + 375*s13^2*s23 - 573*s13*s23^2 - 
                8*s23^3) + 40*s13^2*s23*(2*s13^3 + 2*s13^2*s23 - 
                3*s13*s23^2 - 3*s23^3) + 2*s12*s13*(10*s13^4 + 115*s13^3*
                 s23 + 17*s13^2*s23^2 - 138*s13*s23^3 - 30*s23^4) + 
              s12^2*(89*s13^4 + 833*s13^3*s23 - 907*s13^2*s23^2 - 
                181*s13*s23^3 + 4*s23^4)) + p2q*p3q^2*(-57*s12^6 + 
              s12^5*(472*s13 + 1095*s23) + s12^4*(941*s13^2 - 1351*s13*s23 + 
                1716*s23^2) - 20*s13*s23^2*(5*s13^3 + 5*s13^2*s23 - 
                4*s13*s23^2 - 4*s23^3) + s12^3*(430*s13^3 - 1530*s13^2*s23 + 
                903*s13*s23^2 + 241*s23^3) + s12^2*(18*s13^4 + 556*s13^3*
                 s23 - 3245*s13^2*s23^2 + 2693*s13*s23^3 - 289*s23^4) + 
              s12*s23*(-72*s13^4 - 318*s13^3*s23 - 21*s13^2*s23^2 + 
                239*s13*s23^3 + 34*s23^4)) + p2q^2*p3q*(-8*s12^6 + 
              544*s12^5*(s13 + s23) + 60*s13*s23*(s13 + s23)^2*(s13^2 - 
                4*s13*s23 + s23^2) + s12^4*(1011*s13^2 - 1252*s13*s23 + 
                1011*s23^2) + 13*s12^3*(42*s13^3 - 31*s13^2*s23 - 
                31*s13*s23^2 + 42*s23^3) + s12^2*(107*s13^4 + 1192*s13^3*
                 s23 - 3414*s13^2*s23^2 + 1192*s13*s23^3 + 107*s23^4) + 
              s12*(20*s13^5 + 75*s13^4*s23 - 539*s13^3*s23^2 - 539*s13^2*
                 s23^3 + 75*s13*s23^4 + 20*s23^5))) + 
          p1q^3*(p3q^2*(8*s12^6 - s12^5*(4*s13 + 251*s23) + s12^4*(-8*s13^2 + 
                239*s13*s23 + 107*s23^2) + 20*s23^3*(-2*s13^3 - 2*s13^2*s23 + 
                s13*s23^2 + s23^3) + s12*s23^2*(-38*s13^3 - 117*s13^2*s23 - 
                21*s13*s23^2 + 38*s23^3) + s12^2*s23*(22*s13^3 + 
                287*s13^2*s23 - 961*s13*s23^2 + 553*s23^3) + s12^3*(4*s13^3 + 
                408*s13^2*s23 - 709*s13*s23^2 + 901*s23^3)) + 
            p2q*p3q*(8*s12^6 - 2*s12^5*(6*s13 + 199*s23) + s12^4*(-4*s13^2 + 
                622*s13*s23 - 268*s23^2) + s12^3*(12*s13^3 + 960*s13^2*s23 - 
                1177*s13*s23^2 + 541*s23^3) - 2*s12^2*(2*s13^4 - 
                78*s13^3*s23 - 503*s13^2*s23^2 + 964*s13*s23^3 - 209*s23^4) + 
              20*s23^2*(3*s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 
                4*s13*s23^3 + s23^4) + s12*s23*(40*s13^4 + 45*s13^3*s23 - 
                387*s13^2*s23^2 - 277*s13*s23^3 + 35*s23^4)) - 
            p2q^2*(8*s12^5*(s13 + 22*s23) + s12^4*(-4*s13^2 - 348*s13*s23 + 
                353*s23^2) - 40*s13*s23^2*(3*s13^3 + 3*s13^2*s23 - 
                2*s13*s23^2 - 2*s23^3) + s12^3*(-8*s13^3 - 573*s13^2*s23 + 
                375*s13*s23^2 + 246*s23^3) + s12^2*(4*s13^4 - 181*s13^3*s23 - 
                907*s13^2*s23^2 + 833*s13*s23^3 + 89*s23^4) + 
              s12*(-60*s13^4*s23 - 276*s13^3*s23^2 + 34*s13^2*s23^3 + 
                230*s13*s23^4 + 20*s23^5)))))/(216*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*(p1q^2*s23*(s12 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p2q*s13 - p3q*(s12 + s23)) - 
          p1q*(p3q*(s12 + s13 - s23)*(s12 + s23) + p2q*(s12^2 + 2*s13*s23 + 
              s12*(s13 + s23))))) + 
       (-(p1q^5*s13*s23^2*(102*s13*s23^3*(s13 + s23) + 
            8*s12^4*(84*s13 + s23) + 3*s12^2*s23*(336*s13^2 + 493*s13*s23 + 
              14*s23^2) + s12*s23^2*(446*s13^2 + 565*s13*s23 + 17*s23^2) + 
            s12^3*(672*s13^2 + 1688*s13*s23 + 33*s23^2))) + 
         p1q^4*s23*(p2q*(16*s12^5*s13*(42*s13 + s23) + s12^4*s13*
              (672*s13^2 + 664*s13*s23 - 311*s23^2) + 102*s13*s23^3*
              (4*s13^3 + 4*s13^2*s23 - s13*s23^2 - s23^3) + 
             3*s12*s13*s23^2*(446*s13^3 + 524*s13^2*s23 + 17*s13*s23^2 + 41*
                s23^3) + s12^2*s23*(2688*s13^4 + 2539*s13^3*s23 - 669*s13^2*
                s23^2 - 95*s13*s23^3 + 672*s23^4) + s12^3*(1344*s13^4 + 2040*
                s13^3*s23 - 478*s13^2*s23^2 + 25*s13*s23^3 + 672*s23^4)) + 
           p3q*(24*s12^5*s13*(56*s13 + s23) + s12^4*s13*(672*s13^2 + 1000*s13*
                s23 - 269*s23^2) + 102*s13*s23^3*(s13^3 - s13^2*s23 - 3*s13*
                s23^2 - s23^3) + s12*s13*s23^2*(446*s13^3 - 341*s13^2*s23 - 
               902*s13*s23^2 + 89*s23^3) + s12^2*s23*(1008*s13^4 - 1543*s13^3*
                s23 - 2902*s13^2*s23^2 - 137*s13*s23^3 + 672*s23^4) + 
             s12^3*(672*s13^4 - 656*s13^3*s23 - 2298*s13^2*s23^2 + 51*s13*
                s23^3 + 672*s23^4))) - (p2q + p3q)*
          (p2q^4*s13^2*s23*(102*s13^3*s23*(s13 + s23) + 
             8*s12^4*(s13 + 84*s23) + 3*s12^2*s13*(14*s13^2 + 493*s13*s23 + 
               336*s23^2) + s12*s13^2*(17*s13^2 + 565*s13*s23 + 446*s23^2) + 
             s12^3*(33*s13^2 + 1688*s13*s23 + 672*s23^2)) + 
           2*p3q^4*s12^2*(s13^2*s23^2*(-219*s13^2 + 554*s13*s23 - 219*
                s23^2) + s12^4*(336*s13^2 - s13*s23 + 336*s23^2) + 
             s12^2*s13*s23*(721*s13^2 + 769*s13*s23 + 721*s23^2) + 
             s12*s13*s23*(-219*s13^3 + 779*s13^2*s23 + 779*s13*s23^2 - 219*
                s23^3) + s12^3*(336*s13^3 + 603*s13^2*s23 + 603*s13*s23^2 + 
               336*s23^3)) + p2q*p3q^3*s12*(3*s12^5*s23*(5*s13 + 448*s23) + 
             4*s13^3*s23^2*(51*s13^2 + 22*s13*s23 - 29*s23^2) - 
             s12^3*s13*(2016*s13^3 + 2947*s13^2*s23 + 1507*s13*s23^2 - 2419*
                s23^3) + 2*s12*s13^2*s23*(321*s13^3 - 1124*s13^2*s23 + 586*
                s13*s23^2 - 785*s23^3) - 4*s12^4*(504*s13^3 + 161*s13^2*s23 - 
               300*s13*s23^2 - 336*s23^3) - s12^2*s13*s23*(3662*s13^3 + 2183*
                s13^2*s23 - 2191*s13*s23^2 + 1454*s23^3)) + 
           p2q^2*p3q^2*(-102*s13^4*s23^2*(s13 + s23)^2 + 16*s12^6*s23*
              (s13 + 42*s23) + 3*s12^5*s23*(-103*s13^2 - 448*s13*s23 + 224*
                s23^2) + 2*s12^2*s13^2*s23*(1163*s13^3 - 225*s13^2*s23 - 23*
                s13*s23^2 - 1066*s23^3) - 2*s12*s13^3*s23*(153*s13^3 + 93*
                s13^2*s23 + 221*s13*s23^2 + 281*s23^3) + 
             s12^4*s13*(2016*s13^3 + 688*s13^2*s23 - 4249*s13*s23^2 + 320*
                s23^3) + s12^3*s13*(2016*s13^4 + 1629*s13^3*s23 - 2311*s13^2*
                s23^2 + 200*s13*s23^3 - 1680*s23^4)) - p2q^3*p3q*s13*
            (24*s12^5*s23*(s13 + 56*s23) + s12^4*s23*(-261*s13^2 + 1672*s13*
                s23 + 672*s23^2) - 102*s13^3*s23*(s13^3 + 2*s13^2*s23 - s23^
                3) + s12*s13^2*s23*(106*s13^3 - 337*s13^2*s23 + 105*s13*
                s23^2 + 446*s23^3) + 2*s12^3*(336*s13^4 + 42*s13^3*s23 - 305*
                s13^2*s23^2 + 8*s13*s23^3 + 336*s23^4) + 
             s12^2*s13*(672*s13^4 - 95*s13^3*s23 - 1423*s13^2*s23^2 - 535*s13*
                s23^3 + 1008*s23^4))) + 
         p1q*(-(p3q^4*s12*(4*s13^2*s23^3*(-29*s13^2 + 22*s13*s23 + 
                51*s23^2) + s12^5*(2016*s13^2 + 13*s13*s23 + 672*s23^2) + 
              s12^3*s23*(3861*s13^3 + 31*s13^2*s23 - 1505*s13*s23^2 - 
                2016*s23^3) + 2*s12^4*(1008*s13^3 + 1203*s13^2*s23 + 
                281*s13*s23^2 - 672*s23^3) + 2*s12*s13*s23^2*(-1004*s13^3 + 
                1140*s13^2*s23 - 1343*s13*s23^2 + 321*s23^3) - 
              s12^2*s13*s23*(1892*s13^3 - 3749*s13^2*s23 + 625*s13*s23^2 + 
                4100*s23^3))) + p2q*p3q^3*(-204*s13^3*s23^3*(s13 + s23)^2 - 
             12*s12^6*(112*s13^2 + 5*s13*s23 + 112*s23^2) - 8*s12*s13^2*s23^2*
              (134*s13^3 + 53*s13^2*s23 + 53*s13*s23^2 + 134*s23^3) + 
             7*s12^5*(576*s13^3 + 227*s13^2*s23 + 227*s13*s23^2 + 576*
                s23^3) + s12^3*s13*s23*(12433*s13^3 + 3949*s13^2*s23 + 3949*
                s13*s23^2 + 12433*s23^3) + 16*s12^4*(336*s13^4 + 346*s13^3*
                s23 + 559*s13^2*s23^2 + 346*s13*s23^3 + 336*s23^4) - 
             2*s12^2*s13*s23*(1103*s13^4 - 4329*s13^3*s23 + 534*s13^2*s23^2 - 
               4329*s13*s23^3 + 1103*s23^4)) + p2q^4*s13*
            (16*s12^5*s23*(s13 + 42*s23) + s12^4*s23*(-311*s13^2 + 664*s13*
                s23 + 672*s23^2) - 102*s13^3*s23*(s13^3 + s13^2*s23 - 4*s13*
                s23^2 - 4*s23^3) + 3*s12*s13^2*s23*(41*s13^3 + 17*s13^2*s23 + 
               524*s13*s23^2 + 446*s23^3) + s12^3*(672*s13^4 + 25*s13^3*s23 - 
               478*s13^2*s23^2 + 2040*s13*s23^3 + 1344*s23^4) + 
             s12^2*s13*(672*s13^4 - 95*s13^3*s23 - 669*s13^2*s23^2 + 2539*s13*
                s23^3 + 2688*s23^4)) + p2q^2*p3q^2*
            (-21*s12^6*s23*(3*s13 + 32*s23) + 102*s13^3*s23^2*
              (4*s13^3 + 4*s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
             s12^5*(3360*s13^3 + 2673*s13^2*s23 + 5518*s13*s23^2 + 4032*
                s23^3) + s12^2*s13*s23*(-8337*s13^4 + 3905*s13^3*s23 + 2689*
                s13^2*s23^2 + 10722*s13*s23^3 - 2572*s23^4) + 
             s12*s13^2*s23*(752*s13^4 - 965*s13^3*s23 + 151*s13^2*s23^2 + 6*
                s13*s23^3 - 1760*s23^4) + s12^4*(-1344*s13^4 + 2030*s13^3*
                s23 + 12509*s13^2*s23^2 + 7053*s13*s23^3 + 4704*s23^4) + 
             s12^3*s13*(-4704*s13^4 + 2301*s13^3*s23 + 5213*s13^2*s23^2 + 
               5310*s13*s23^3 + 13684*s23^4)) + p2q^3*p3q*
            (-16*s12^6*s13*s23 + 2*s12^5*s23*(355*s13^2 + 2024*s13*s23 + 672*
                s23^2) + s12*s13^2*s23*(875*s13^4 + 239*s13^3*s23 + 2221*
                s13^2*s23^2 + 1557*s13*s23^3 - 892*s23^4) - 
             102*s13^3*s23*(s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 4*s13*
                s23^3 + 3*s23^4) + s12^4*(-2688*s13^4 - 1630*s13^3*s23 + 6688*
                s13^2*s23^2 + 3712*s13*s23^3 + 1344*s23^4) + 
             s12^3*s13*(-1344*s13^4 - 2167*s13^3*s23 + 1867*s13^2*s23^2 + 
               5628*s13*s23^3 + 6704*s23^4) + 2*s12^2*s13*(672*s13^5 - 2105*
                s13^4*s23 - 543*s13^3*s23^2 + 2677*s13^2*s23^3 + 3947*s13*
                s23^4 - 504*s23^5))) + 
         p1q^3*(p3q^2*(-16*s12^6*s13*(42*s13 + s23) + 3*s12^5*s13*
              (-224*s13^2 + 896*s13*s23 + 111*s23^2) + s12^4*s23*
              (352*s13^3 + 5921*s13^2*s23 - 949*s13*s23^2 - 2016*s23^3) + 
             102*s13*s23^4*(2*s13^3 + 2*s13^2*s23 - s13*s23^2 - s23^3) + 
             s12*s13*s23^3*(1008*s13^3 + 547*s13^2*s23 - 151*s13*s23^2 + 412*
                s23^3) + s12^3*s23*(2352*s13^4 - 184*s13^3*s23 + 1701*s13^2*
                s23^2 - 1545*s13*s23^3 - 1344*s23^4) + s12^2*s23^2*
              (3140*s13^4 - 489*s13^3*s23 - 973*s13^2*s23^2 - 2421*s13*
                s23^3 + 672*s23^4)) + p2q*p3q*(-16*s12^6*s13*s23 + 
             2*s12^5*s13*(672*s13^2 + 2024*s13*s23 + 355*s23^2) + 
             s12^3*s23*(6704*s13^4 + 5628*s13^3*s23 + 1867*s13^2*s23^2 - 2167*
                s13*s23^3 - 1344*s23^4) + 2*s12^4*(672*s13^4 + 1856*s13^3*
                s23 + 3344*s13^2*s23^2 - 815*s13*s23^3 - 1344*s23^4) - 
             102*s13*s23^3*(3*s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 4*s13*
                s23^3 + s23^4) + s12*s13*s23^2*(-892*s13^4 + 1557*s13^3*s23 + 
               2221*s13^2*s23^2 + 239*s13*s23^3 + 875*s23^4) + 
             2*s12^2*s23*(-504*s13^5 + 3947*s13^4*s23 + 2677*s13^3*s23^2 - 
               543*s13^2*s23^3 - 2105*s13*s23^4 + 672*s23^5)) + 
           p2q^2*(16*s12^5*s13*s23*(43*s13 + 23*s23) - 204*s13^2*s23^3*
              (3*s13^3 + 3*s13^2*s23 - 2*s13*s23^2 - 2*s23^3) - 
             2*s12*s13*s23^2*(669*s13^4 + 663*s13^3*s23 + 17*s13^2*s23^2 - 98*
                s13*s23^3 - 223*s23^4) - s12^3*s13*(672*s13^4 + 352*s13^3*
                s23 - 367*s13^2*s23^2 + 25*s13*s23^3 + 528*s23^4) - 
             s12^4*(672*s13^4 + 672*s13^3*s23 - 934*s13^2*s23^2 + 639*s13*
                s23^3 + 672*s23^4) + s12^2*s23*(-2352*s13^5 + 31*s13^4*s23 + 
               1369*s13^3*s23^2 - 563*s13^2*s23^3 - 1763*s13*s23^4 + 672*
                s23^5))) + p1q^2*(p3q^3*(102*s13^2*s23^4*(s13 + s23)^2 - 
             s12^6*s13*(2016*s13 + 31*s23) + s12^4*s13*s23*(-2739*s13^2 + 
               5756*s13*s23 + 2259*s23^2) + 2*s12^2*s13*s23^2*
              (1851*s13^3 - 563*s13^2*s23 + 1349*s13*s23^2 - 1484*s23^3) + 
             6*s12*s13*s23^3*(113*s13^3 + 59*s13^2*s23 - 3*s13*s23^2 + 51*
                s23^3) + s12^5*(-2016*s13^3 + 144*s13^2*s23 + 953*s13*s23^2 + 
               2016*s23^3) + s12^3*s23*(3134*s13^4 - 2391*s13^3*s23 + 4494*
                s13^2*s23^2 + 2033*s13*s23^3 - 2016*s23^4)) + 
           p2q*p3q^2*(-21*s12^6*s13*(32*s13 + 3*s23) - 102*s13^2*s23^3*
              (5*s13^3 + 5*s13^2*s23 - 4*s13*s23^2 - 4*s23^3) + 
             s12^5*(4032*s13^3 + 5518*s13^2*s23 + 2673*s13*s23^2 + 3360*
                s23^3) + s12^2*s13*s23*(-2572*s13^4 + 10722*s13^3*s23 + 2689*
                s13^2*s23^2 + 3905*s13*s23^3 - 8337*s23^4) + 
             s12^3*s23*(13684*s13^4 + 5310*s13^3*s23 + 5213*s13^2*s23^2 + 
               2301*s13*s23^3 - 4704*s23^4) + s12^4*(4704*s13^4 + 7053*s13^3*
                s23 + 12509*s13^2*s23^2 + 2030*s13*s23^3 - 1344*s23^4) + 
             s12*s13*s23^2*(-1760*s13^4 + 6*s13^3*s23 + 151*s13^2*s23^2 - 965*
                s13*s23^3 + 752*s23^4)) + p2q^3*(16*s12^5*s13*s23*
              (23*s13 + 43*s23) + 204*s13^3*s23^2*(2*s13^3 + 2*s13^2*s23 - 3*
                s13*s23^2 - 3*s23^3) + 2*s12*s13^2*s23*(223*s13^4 + 98*s13^3*
                s23 - 17*s13^2*s23^2 - 663*s13*s23^3 - 669*s23^4) - 
             s12^3*s23*(528*s13^4 + 25*s13^3*s23 - 367*s13^2*s23^2 + 352*s13*
                s23^3 + 672*s23^4) - s12^4*(672*s13^4 + 639*s13^3*s23 - 934*
                s13^2*s23^2 + 672*s13*s23^3 + 672*s23^4) + 
             s12^2*s13*(672*s13^5 - 1763*s13^4*s23 - 563*s13^3*s23^2 + 1369*
                s13^2*s23^3 + 31*s13*s23^4 - 2352*s23^5)) - 
           p2q^2*p3q*(32*s12^6*s13*s23 - 306*s13^2*s23^2*(s13 + s23)^2*
              (s13^2 - 4*s13*s23 + s23^2) - 6*s12^5*(224*s13^3 + 397*s13^2*
                s23 + 397*s13*s23^2 + 224*s23^3) + 9*s12^4*(224*s13^4 + 103*
                s13^3*s23 - 484*s13^2*s23^2 + 103*s13*s23^3 + 224*s23^4) + 
             s12^2*s13*s23*(7695*s13^4 - 1086*s13^3*s23 - 2446*s13^2*s23^2 - 
               1086*s13*s23^3 + 7695*s23^4) + s12*s13*s23*(-446*s13^5 + 2091*
                s13^4*s23 + 1647*s13^3*s23^2 + 1647*s13^2*s23^3 + 2091*s13*
                s23^4 - 446*s23^5) + s12^3*(3360*s13^5 + 58*s13^4*s23 + 575*
                s13^3*s23^2 + 575*s13^2*s23^3 + 58*s13*s23^4 + 3360*s23^5))))/
        (432*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13*s23*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       ((s12 + s13 + s23)*(p1q^3*(17*s12 - 58*s13)*s23^2 + 
          (p3q*s12 - p2q*s13)^2*(34*p3q*s12 + p2q*(17*s12 - 58*s23) - 
            58*p3q*(s13 + s23)) + p1q^2*s23*(-34*p3q*s12^2 + 
            17*p2q*s12*(-2*s13 + s23) - 58*p3q*s23*(s13 + s23) + 
            2*p3q*s12*(58*s13 + 17*s23) + 58*p2q*(2*s13^2 - s23^2)) + 
          p1q*(p3q^2*s12*(17*s12^2 + 116*s23*(s13 + s23) - 2*s12*(29*s13 + 
                34*s23)) - 2*p2q*p3q*(17*s12^2*(s13 + s23) - 
              58*s13*s23*(s13 + s23) + s12*(-58*s13^2 + 34*s13*s23 - 
                58*s23^2)) + p2q^2*s13*(17*s12*(s13 - 2*s23) - 
              58*(s13^2 - 2*s23^2))))*den[-1 + 2*ep])/(432*(p1q + p3q)*
         (p2q + p3q)*(p1q + p2q + p3q)*s12^2))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]] + 
     ((ep^2*p1q*(s12 + s13 + s23)*(p2q*s13 + p3q*(s12 + 2*s13) - p1q*s23))/
        (54*(p1q + p2q + p3q)*s23) - 
       (ep*p1q*(-4*p2q^4*s13^2*(s12 + s13 + s23) + 2*p1q^4*s23*
           (s12 + s13 + s23)^2 + p2q^3*p3q*s13*(6*s12^2 + 19*s12*s13 + 
            13*s13^2 + 8*s12*s23 + 15*s13*s23 + 2*s23^2) + 
          p3q^4*(15*s12^3 + s12^2*(15*s13 + 118*s23) + 
            s12*s23*(107*s13 + 187*s23) + 4*s23*(s13^2 + 22*s13*s23 + 
              21*s23^2)) - p2q^2*p3q^2*(2*s12^3 + 30*s12^2*s13 + 
            s12*(13*s13^2 + 125*s13*s23 - 2*s23^2) + 
            3*s13*(-5*s13^2 + 28*s13*s23 + 33*s23^2)) - 
          p1q^3*(s12 + s13 + s23)*(p3q*(2*s12^2 - 2*s12*s13 - 69*s12*s23 - 
              10*s13*s23 - 67*s23^2) - p2q*(2*s12*s13 - 2*s13^2 + 
              65*s12*s23 + 2*s13*s23 + 61*s23^2)) + 
          p2q*p3q^3*(15*s12^3 + s12^2*(-15*s13 + 122*s23) + 
            s23*(-95*s13^2 - 11*s13*s23 + 84*s23^2) + 
            s12*(-30*s13^2 - 18*s13*s23 + 191*s23^2)) + 
          p1q^2*(s12 + s13 + s23)*(-(p2q^2*(23*s12*s13 + 4*s13^2 - 2*s12*
                s23 + 82*s13*s23 + 2*s23^2)) + p2q*p3q*(19*s12^2 - 
              17*s12*s13 - 6*s13^2 + 241*s12*s23 - 74*s13*s23 + 206*s23^2) + 
            p3q^2*(13*s12^2 + 2*s12*s13 + 239*s12*s23 + 16*s13*s23 + 
              214*s23^2)) + p1q*(s12 + s13 + s23)*
           (p2q^3*s13*(2*s12 + 21*s13 + 6*s23) - p2q^2*p3q*
             (2*s12^2 + 59*s12*s13 - 15*s13^2 - 4*s12*s23 + 181*s13*s23 + 
              2*s23^2) + p2q*p3q^2*(34*s12^2 - 53*s12*s13 - 4*s13^2 + 
              283*s12*s23 - 175*s13*s23 + 229*s23^2) + 
            p3q^3*(30*s12^2 + 275*s12*s23 + s23*(12*s13 + 233*s23)))))/
        (108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p1q*(p1q^5*s13*s23*(s12 + s13 + s23)^2 - p1q^4*(s12 + s13 + s23)*
           (p2q*(s13^3 - s13^2*s23 + 84*s23^3 - s12*s13*(s13 + 44*s23)) + 
            p3q*(s12^2*s13 - s12*s13*(s13 + 45*s23) - 2*s23*(2*s13^2 + 
                s13*s23 - 42*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p2q^2*(-2*s13^3 + 3*s13^2*s23 + 125*s13*s23^2 - 84*s23^3 + 
              s12*s13*(2*s13 + 85*s23)) - 2*p2q*p3q*(s12^2*s13 + s13^3 - 
              3*s13^2*s23 - 83*s13*s23^2 + 126*s23^3 - 3*s12*(s13^2 + 
                36*s13*s23 + 28*s23^2)) + p3q^2*(-4*s12^2*s13 + 
              s23*(5*s13^2 + 43*s13*s23 - 168*s23^2) + s12*(2*s13^2 + 
                131*s13*s23 + 168*s23^2))) - 
          p3q*(2*p2q^4*s13^2*(s12 + s13 + s23)*(s13 + 42*s23) + 
            p2q^3*p3q*s13*(3*s13^3 + 128*s13^2*s23 + 41*s13*s23^2 - 
              84*s23^3 - 3*s12^2*(s13 + 56*s23) - 2*s12*s23*(23*s13 + 
                126*s23)) + 2*p3q^4*(-21*s12*s13*s23^2 - 21*s13*s23^2*(s13 + 
                s23) + s12^3*(s13 + 42*s23) + s12^2*(s13^2 + 43*s13*s23 + 
                42*s23^2)) + 2*p2q*p3q^3*(-63*s13*s23^2*(s13 + s23) + 
              s12^3*(s13 + 84*s23) + s12^2*(-s13^2 + 21*s13*s23 + 84*s23^2) - 
              s12*s13*(2*s13^2 + 66*s13*s23 + 127*s23^2)) + 
            p2q^2*p3q^2*(s12^3*(s13 + 84*s23) + s12^2*(-4*s13^2 - 
                210*s13*s23 + 84*s23^2) - s12*s13*(3*s13^2 + 258*s13*s23 + 
                463*s23^2) + 2*s13*(s13^3 + 22*s13^2*s23 - 63*s13*s23^2 - 
                84*s23^3))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*s13*(s12*(s13 + 84*s23) - 3*(s13^2 + 13*s13*s23 - 
                56*s23^2)) + p3q^3*(-7*s12^2*(s13 + 12*s23) + 
              2*s23*(s13^2 + 63*s13*s23 - 42*s23^2) + s12*(s13^2 + 
                131*s13*s23 + 336*s23^2)) - p2q*p3q^2*(s13^3 + 77*s13^2*s23 - 
              374*s13*s23^2 + 168*s23^3 + 6*s12^2*(s13 + 14*s23) - 
              s12*(11*s13^2 + 344*s13*s23 + 504*s23^2)) + 
            p2q^2*p3q*(-(s12^2*s13) + 3*s12*(3*s13^2 + 99*s13*s23 + 
                56*s23^2) - 2*(2*s13^3 + 58*s13^2*s23 - 209*s13*s23^2 + 
                42*s23^3))) + p1q*(-2*p2q^4*s13^2*(s12 + s13 + s23)*
             (s13 + 42*s23) - 2*p2q^3*p3q*s13*(3*s13^3 + 169*s13^2*s23 + 
              124*s13*s23^2 - 42*s23^3 - 2*s12^2*(s13 + 21*s23) + 
              s12*(s13^2 + 122*s13*s23 - 84*s23^2)) - 
            2*p3q^4*(-63*s13*s23^2*(s13 + s23) + 3*s12^3*(s13 + 28*s23) + 
              s12^2*s13*(3*s13 + 65*s23) - s12*s23*(22*s13^2 + 169*s13*s23 + 
                84*s23^2)) + p2q^2*p3q^2*(-2*s12^3*(s13 + 42*s23) + 
              s12^2*(10*s13^2 + 253*s13*s23 + 84*s23^2) - s13*(4*s13^3 + 
                333*s13^2*s23 + 36*s13*s23^2 - 293*s23^3) + 2*s12*(4*s13^3 + 
                11*s13^2*s23 + 400*s13*s23^2 + 84*s23^3)) + 
            2*p2q*p3q^3*(-3*s12^3*(s13 + 42*s23) + s12^2*(2*s13^2 + 
                21*s13*s23 + 42*s23^2) + s13*s23*(-41*s13^2 + 126*s13*s23 + 
                167*s23^2) + s12*(5*s13^3 + 114*s13^2*s23 + 485*s13*s23^2 + 
                168*s23^3)))))/(54*(p1q + p3q)^2*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k]] + 
     ((-5*ep^2*p3q*(s12 + s13 + s23)*(p3q*s12*(s12 + s13) - 
          p2q*s13*(s12 + s13) + p1q*(-s12 + s13)*s23))/(27*(p1q + p2q + p3q)*
         s12*s23) - (ep*p3q*(s12 + s13 + s23)*(20*p2q^4*s12*s13^2 - 
          10*p1q^4*s12*s23*(s12 + s13 + s23) + p2q^3*p3q*s13*
           (-30*s12^2 + 60*s12*s13 + 10*s13^2 - 10*s12*s23 + 3*s13*s23) + 
          p3q^4*s12*(30*s12^2 - 10*s12*s13 + 19*s12*s23 - 30*s13*s23 + 
            9*s23^2) + p2q*p3q^3*(30*s12^3 - s12^2*(90*s13 + s23) - 
            s13*s23*(10*s13 + 3*s23) + s12*s23*(-92*s13 + 9*s23)) + 
          p2q^2*p3q^2*(10*s12^3 + 2*s12*s13*(25*s13 - 31*s23) - 
            10*s12^2*(9*s13 + s23) + s13*(10*s13^2 - 7*s13*s23 - 3*s23^2)) + 
          p1q^3*(p3q*(10*s12^3 - 5*s12*s23*(8*s13 + s23) + s23^2*(10*s13 + 
                3*s23) - 2*s12^2*(5*s13 + 9*s23)) + 
            p2q*(2*s12^2*(-5*s13 + s23) + s23^2*(10*s13 + 3*s23) + 
              5*s12*(2*s13^2 + 5*s23^2))) + 
          p1q*(p2q^3*s13*(-10*s12^2 + 20*s12*s13 + 10*s13^2 - 30*s12*s23 + 
              3*s13*s23) + p3q^3*(60*s12^3 - 20*s12^2*(s13 - s23) + 
              s23^2*(10*s13 + 3*s23) + s12*s23*(-70*s13 + 23*s23)) + 
            p2q^2*p3q*(10*s12^3 - 20*s12^2*(3*s13 + s23) + s13*(10*s13^2 - 
                27*s13*s23 - 9*s23^2) + s12*(40*s13^2 - 107*s13*s23 + 
                10*s23^2)) + p2q*p3q^2*(40*s12^3 - 10*s12^2*(11*s13 + 
                2*s23) + s23*(-30*s13^2 + s13*s23 + 3*s23^2) + 
              s12*(10*s13^2 - 147*s13*s23 + 43*s23^2))) + 
          p1q^2*(p3q^2*(40*s12^3 + 2*s23^2*(10*s13 + 3*s23) - 
              s12^2*(20*s13 + 7*s23) + s12*s23*(-70*s13 + 19*s23)) - 
            p2q^2*(10*s12^2*(s13 + s23) + 2*s13*s23*(10*s13 + 3*s23) - 
              5*s12*(2*s13^2 - 9*s13*s23 + 2*s23^2)) + 
            p2q*p3q*(10*s12^3 - s12^2*(50*s13 + 17*s23) + 2*s23*(-10*s13^2 + 
                7*s13*s23 + 3*s23^2) + s12*(20*s13^2 - 75*s13*s23 + 
                59*s23^2)))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p3q*(-5*p1q^5*s13*s23*(s12 + s13 + s23)^2 + p1q^4*(s12 + s13 + s23)*
           (-(p2q*(-5*s13^3 + 5*s13^2*s23 + 12*s23^3 + s12*s13*(5*s13 + 
                 4*s23))) + p3q*(5*s12^2*s13 - s12*s13*(5*s13 + 9*s23) - 
              2*s23*(10*s13^2 + 5*s13*s23 + 6*s23^2))) - 
          p1q^3*(s12 + s13 + s23)*(-2*p2q*p3q*(5*s12^2*s13 - 15*s12*s13^2 + 
              5*s13^3 - 15*s13^2*s23 + 12*s12*s23^2 + 17*s13*s23^2 - 
              18*s23^3) + p2q^2*(-10*s13^3 + s12*s13*(10*s13 - 7*s23) + 
              15*s13^2*s23 - 23*s13*s23^2 + 12*s23^3) + 
            p3q^2*(-20*s12^2*s13 + s12*(10*s13^2 + 7*s13*s23 - 24*s23^2) + 
              s23*(25*s13^2 - s13*s23 + 24*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*s13*(-5*s12*s13 + 15*s13^2 + 12*s12*s23 - 21*s13*s23 + 
              24*s23^2) + p2q^2*p3q*(5*s12^2*s13 + 20*s13^3 - 68*s13^2*s23 + 
              70*s13*s23^2 - 12*s23^3 + s12*(-45*s13^2 + 27*s13*s23 + 
                24*s23^2)) + p3q^3*(s12^2*(35*s13 - 12*s23) - 
              2*s23*(5*s13^2 - 9*s13*s23 + 6*s23^2) + s12*(-5*s13^2 - 
                7*s13*s23 + 48*s23^2)) + p2q*p3q^2*(5*s13^3 + 
              6*s12^2*(5*s13 - 2*s23) - 47*s13^2*s23 + 74*s13*s23^2 - 
              24*s23^3 + s12*(-55*s13^2 + 8*s13*s23 + 72*s23^2))) + 
          p3q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*(s12 + s13 + s23) + 
            p2q^3*p3q*s13*(15*s13^3 - 3*s12^2*(5*s13 - 8*s23) - 8*s13^2*s23 - 
              11*s13*s23^2 + 12*s23^3 + 2*s12*s23*(-7*s13 + 18*s23)) + 
            2*p3q^4*(s12^3*(5*s13 - 6*s23) + 3*s12*s13*s23^2 + 
              3*s13*s23^2*(s13 + s23) + s12^2*(5*s13^2 - s13*s23 - 
                6*s23^2)) + 2*p2q*p3q^3*(s12^3*(5*s13 - 12*s23) + 
              9*s13*s23^2*(s13 + s23) - s12^2*(5*s13^2 + 3*s13*s23 + 
                12*s23^2) + s12*s13*(-10*s13^2 - 6*s13*s23 + 13*s23^2)) + 
            p2q^2*p3q^2*(s12^3*(5*s13 - 12*s23) - 2*s12^2*(10*s13^2 - 
                15*s13*s23 + 6*s23^2) + s12*s13*(-15*s13^2 + 6*s13*s23 + 
                61*s23^2) + 2*s13*(5*s13^3 + 2*s13^2*s23 + 9*s13*s23^2 + 
                12*s23^3))) + p1q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*
             (s12 + s13 + s23) + 2*p2q^3*p3q*s13*(15*s13^3 - 19*s13^2*s23 - 
              28*s13*s23^2 + 6*s23^3 + s12^2*(-10*s13 + 6*s23) + 
              s12*(5*s13^2 - 38*s13*s23 + 12*s23^2)) + 
            2*p3q^4*(3*s12^3*(5*s13 - 4*s23) + 9*s13*s23^2*(s13 + s23) + 
              s12^2*s13*(15*s13 + s23) + s12*s23*(-2*s13^2 + 19*s13*s23 + 
                12*s23^2)) + 2*p2q*p3q^3*(3*s12^3*(5*s13 - 6*s23) + 
              s12^2*(-10*s13^2 + 3*s13*s23 + 6*s23^2) + s13*s23*(-11*s13^2 + 
                18*s13*s23 + 29*s23^2) + s12*(-25*s13^3 - 30*s13^2*s23 + 
                59*s13*s23^2 + 24*s23^3)) + p2q^2*p3q^2*
             (2*s12^3*(5*s13 - 6*s23) + s12^2*(-50*s13^2 + 31*s13*s23 + 
                12*s23^2) - 2*s12*(20*s13^3 + 55*s13^2*s23 - 52*s13*s23^2 - 
                12*s23^3) + s13*(20*s13^3 - 63*s13^2*s23 - 36*s13*s23^2 + 
                47*s23^3)))))/(27*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(-(p2q*s13) + p1q*s23 + p3q*(s12 + 2*s23)))/
        (54*(p1q + p2q + p3q)*s13) - 
       (ep*p2q*(-4*p1q^4*s23^2*(s12 + s13 + s23) + p1q^3*s23*
           (s12 + s13 + s23)*(p3q*(6*s12 + 2*s13 + 13*s23) + 
            p2q*(2*s12 + 6*s13 + 21*s23)) + p1q*(s12 + s13 + s23)*
           (p3q^3*(15*s12^2 + 107*s12*s13 + 84*s13^2 - 30*s12*s23 - 
              95*s13*s23) + p2q^2*p3q*(19*s12^2 + 241*s12*s13 + 206*s13^2 - 
              17*s12*s23 - 74*s13*s23 - 6*s23^2) + p2q*p3q^2*
             (34*s12^2 + 283*s12*s13 + 229*s13^2 - 53*s12*s23 - 175*s13*s23 - 
              4*s23^2) + p2q^3*(65*s12*s13 + 61*s13^2 + 2*s12*s23 + 
              2*s13*s23 - 2*s23^2)) - p1q^2*(s12 + s13 + s23)*
           (p3q^2*(2*s12^2 - 2*s12*s13 + 28*s12*s23 + 99*s13*s23 - 
              15*s23^2) + p2q*p3q*(2*s12^2 - 4*s12*s13 + 2*s13^2 + 
              59*s12*s23 + 181*s13*s23 - 15*s23^2) + 
            p2q^2*(-2*s12*s13 + 2*s13^2 + 23*s12*s23 + 82*s13*s23 + 
              4*s23^2)) + (p2q + p3q)*(2*p2q^3*s13*(s12 + s13 + s23)^2 + 
            p3q^3*(15*s12^3 + s12^2*(118*s13 + 15*s23) + s12*s13*(187*s13 + 
                107*s23) + 4*s13*(21*s13^2 + 22*s13*s23 + s23^2)) + 
            p2q^2*p3q*(-2*s12^3 + 65*s12^2*s13 + s12*(132*s13^2 + 
                77*s13*s23 + 2*s23^2) + s13*(65*s13^2 + 73*s13*s23 + 
                8*s23^2)) + p2q*p3q^2*(15*s12^3 + s12^2*(187*s13 + 15*s23) + 
              3*s12*s13*(107*s13 + 60*s23) + s13*(149*s13^2 + 157*s13*s23 + 
                8*s23^2)))))/(108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (p2q*(s12 + s13 + s23)*(-2*p1q^4*(p2q + p3q)*s23^2*(42*s13 + s23) + 
          p1q^3*s23*(2*p2q*p3q*(42*s13^2 - 166*s13*s23 - 3*s23^2 + 
              2*s12*(21*s13 + s23)) + p3q^2*(84*s13^2 - 125*s13*s23 - 
              3*s23^2 + 3*s12*(56*s13 + s23)) + p2q^2*(168*s13^2 - 
              39*s13*s23 - 3*s23^2 + s12*(84*s13 + s23))) - 
          (p2q + p3q)^2*(-(p2q^3*s13*s23*(s12 + s13 + s23)) + 
            2*p3q^3*(-21*s13^2*s23 + s12^2*(42*s13 + s23)) + 
            p2q^2*p3q*(84*s13^3 + s12*(s12 - s23)*s23 - s13*s23*(43*s12 + 
                2*s23)) + 2*p2q*p3q^2*(s12^2*s23 - 21*s13^2*s23 - 
              2*s12*s13*(42*s13 + 11*s23))) + p1q*(p2q + p3q)*
           (p2q^3*(-84*s13^3 + (s12 - s23)*s23^2 + s13*s23*(44*s12 + s23)) + 
            2*p3q^3*(63*s13^2*s23 + 2*s12*s23*(32*s13 + s23) - 
              s12^2*(84*s13 + s23)) + 2*p2q*p3q^2*(s13*(104*s13 - 41*s23)*
               s23 - 2*s12^2*(21*s13 + s23) + s12*(168*s13^2 + 86*s13*s23 + 
                3*s23^2)) + p2q^2*p3q*(-168*s13^3 - 2*s12^2*s23 + 
              166*s13^2*s23 + 5*s13*s23^2 - s23^3 + s12*(168*s13^2 + 
                172*s13*s23 + 5*s23^2))) + 
          p1q^2*(p2q^3*(-84*s13^3 + 125*s13^2*s23 + 2*(s12 - s23)*s23^2 + 
              s13*s23*(85*s12 + 3*s23)) - p3q^3*(-5*s12*s23*(59*s13 + s23) + 
              s12^2*(84*s13 + s23) + 2*s23*(-84*s13^2 + 21*s13*s23 + 
                s23^2)) + p2q*p3q^2*(-2*s12^2*(42*s13 + s23) + 
              s23*(293*s13^2 - 329*s13*s23 - 4*s23^2) + 3*s12*(56*s13^2 + 
                113*s13*s23 + 4*s23^2)) + p2q^2*p3q*(-(s12^2*s23) + 
              3*s12*(56*s13^2 + 99*s13*s23 + 3*s23^2) - 2*(42*s13^3 - 
                209*s13^2*s23 + 58*s13*s23^2 + 2*s23^3)))))/
        (54*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*Eik[k]] + 
     ((-5*ep^2*p3q*(s12 + s13 + s23)*(p2q*s13*(-s12 + s23) + 
          p3q*s12*(s12 + s23) - p1q*s23*(s12 + s23)))/(27*(p1q + p2q + p3q)*
         s12*s13) - (ep*p3q*(s12 + s13 + s23)*(20*p1q^4*s12*s23^2 + 
          p1q^3*s23*(p2q*(-10*s12^2 - 30*s12*s13 + 20*s12*s23 + 3*s13*s23 + 
              10*s23^2) + p3q*(-30*s12^2 - 10*s12*s13 + 60*s12*s23 + 
              3*s13*s23 + 10*s23^2)) - (p2q + p3q)*
           (10*p2q^3*s12*s13*(s12 + s13 + s23) + p3q^3*s12*(-30*s12^2 - 
              19*s12*s13 - 9*s13^2 + 10*s12*s23 + 30*s13*s23) + 
            p2q^2*p3q*(-10*s12^3 - 5*s12*s13*(s13 - 6*s23) + 2*s12^2*(4*s13 + 
                5*s23) - s13^2*(3*s13 + 10*s23)) - p2q*p3q^2*
             (30*s12^3 + 2*s12*s13*(7*s13 - 20*s23) + s12^2*(s13 - 10*s23) + 
              s13^2*(3*s13 + 10*s23))) - 
          p1q^2*(p3q^2*(-10*s12^3 + 2*s12*(31*s13 - 25*s23)*s23 + 
              10*s12^2*(s13 + 9*s23) + s23*(3*s13^2 + 7*s13*s23 - 
                10*s23^2)) + p2q*p3q*(-10*s12^3 + 20*s12^2*(s13 + 3*s23) + 
              s12*(-10*s13^2 + 107*s13*s23 - 40*s23^2) + s23*(9*s13^2 + 
                27*s13*s23 - 10*s23^2)) + p2q^2*(10*s12^2*(s13 + s23) + 
              2*s13*s23*(3*s13 + 10*s23) - 5*s12*(2*s13^2 - 9*s13*s23 + 
                2*s23^2))) + p1q*(p3q^3*(30*s12^3 + s12*s13*(9*s13 - 
                92*s23) - s13*s23*(3*s13 + 10*s23) - s12^2*(s13 + 90*s23)) + 
            p2q^3*(2*s12^2*(s13 - 5*s23) + s13^2*(3*s13 + 10*s23) + 
              5*s12*(5*s13^2 + 2*s23^2)) + p2q*p3q^2*(40*s12^3 - 
              10*s12^2*(2*s13 + 11*s23) + s13*(3*s13^2 + s13*s23 - 
                30*s23^2) + s12*(43*s13^2 - 147*s13*s23 + 10*s23^2)) + 
            p2q^2*p3q*(10*s12^3 - s12^2*(17*s13 + 50*s23) + 2*s13*(3*s13^2 + 
                7*s13*s23 - 10*s23^2) + s12*(59*s13^2 - 75*s13*s23 + 
                20*s23^2)))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) - 
       (p3q*(s12 + s13 + s23)*(2*p1q^4*(p2q + p3q)*(6*s13 - 5*s23)*s23^2 - 
          p1q^3*s23*(2*p2q*p3q*(6*s12*s13 + 6*s13^2 - 10*s12*s23 - 
              34*s13*s23 + 15*s23^2) + p3q^2*(12*s13^2 + 3*s12*(8*s13 - 
                5*s23) - 23*s13*s23 + 15*s23^2) + p2q^2*(12*s12*s13 + 
              24*s13^2 - 5*s12*s23 - 21*s13*s23 + 15*s23^2)) + 
          (p2q + p3q)^2*(5*p2q^3*s13*s23*(s12 + s13 + s23) + 
            2*p3q^3*(s12^2*(6*s13 - 5*s23) - 3*s13^2*s23) - 
            2*p2q*p3q^2*(2*s12*s13*(6*s13 - s23) + 5*s12^2*s23 + 
              3*s13^2*s23) + p2q^2*p3q*(12*s13^3 + 5*s12*s23*(-s12 + s23) + 
              s13*s23*(-s12 + 10*s23))) - 
          p1q^2*(p2q^3*(-12*s13^3 + 23*s13^2*s23 + s13*(7*s12 - 15*s23)*s23 + 
              10*s23^2*(-s12 + s23)) + p2q^2*p3q*(-12*s13^3 + 5*s12^2*s23 + 
              70*s13^2*s23 - 68*s13*s23^2 + 20*s23^3 + 3*s12*(8*s13^2 + 
                9*s13*s23 - 15*s23^2)) + p3q^3*(s12*(37*s13 - 25*s23)*s23 + 
              s12^2*(-12*s13 + 5*s23) + 2*s23*(12*s13^2 - 3*s13*s23 + 
                5*s23^2)) + p2q*p3q^2*(-2*s12^2*(6*s13 - 5*s23) + 
              3*s12*(8*s13^2 + 11*s13*s23 - 20*s23^2) + s23*(47*s13^2 - 
                83*s13*s23 + 20*s23^2))) + p1q*(p2q + p3q)*
           (p2q^3*(12*s13^3 + 5*(s12 - s23)*s23^2 + s13*s23*(4*s12 + 
                5*s23)) + 2*p3q^3*(s12^2*(12*s13 - 5*s23) - 9*s13^2*s23 + 
              2*s12*s23*(-2*s13 + 5*s23)) + 2*p2q*p3q^2*
             (2*s12^2*(3*s13 - 5*s23) + s13*s23*(-20*s13 + 11*s23) + 
              s12*(-24*s13^2 - 2*s13*s23 + 15*s23^2)) + 
            p2q^2*p3q*(24*s13^3 - 10*s12^2*s23 - 34*s13^2*s23 + 
              25*s13*s23^2 - 5*s23^3 + s12*(-24*s13^2 - 4*s13*s23 + 
                25*s23^2)))))/(27*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*
         s13*s23*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k]] + 
     ((ep^2*p1q*(s12 + s13 + s23)*(-2*p1q^2*s23^2*(s12 - 3*s13 + s23) - 
          p1q*p3q*s23*(-3*s12^2 + 4*s12*s13 + 7*s13^2 - 2*s12*s23 - 
            8*s13*s23 + s23^2) + p2q^2*s13*(3*s12^2 + 6*s12*s13 + 3*s13^2 - 
            4*s12*s23 - 4*s13*s23 + s23^2) + 
          p3q^2*(-s12^3 + 2*s13*(s13 - s23)^2 + s12*(3*s13^2 - 4*s13*s23 + 
              s23^2)) + p2q*(p1q*s23*(s12^2 - 8*s12*s13 - (-3*s13 + s23)^2) + 
            p3q*(-s12^3 + 3*s12^2*s13 + s12*(9*s13^2 - 8*s13*s23 + s23^2) + 
              s13*(5*s13^2 - 8*s13*s23 + 3*s23^2)))))/(54*(p1q + p2q + p3q)*
         s13*s23*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (ep*p1q*(s12 + s13 + s23)*(2*p1q^5*s23^2*(s12^2 - s13^2 + 2*s12*s23 + 
            s23^2) - 2*p1q^4*s23*(p3q*(3*s12^3 - s13^3 + 6*s13^2*s23 + 
              31*s13*s23^2 - 40*s23^3 - s12^2*(3*s13 + 40*s23) + 
              s12*(s13^2 + 30*s13*s23 - 83*s23^2)) + 
            p2q*(2*s12^3 - 2*s13^3 + 5*s13^2*s23 + 34*s13*s23^2 - 37*s23^3 - 
              s12^2*(2*s13 + 39*s23) + 2*s12*(s13^2 + 17*s13*s23 - 
                39*s23^2))) + (p2q + p3q)*(2*p2q^4*s13^2*(s12^2 + 2*s12*s13 + 
              s13^2 - s23^2) + p2q^3*p3q*s13*(-6*s12^3 + 5*s13^3 - 
              112*s13^2*s23 + 13*s13*s23^2 + 2*s23^3 + s12^2*(5*s13 + 
                6*s23) + 2*s12*(8*s13^2 - 55*s13*s23 - s23^2)) + 
            p3q^4*(31*s12^4 + s12^3*(62*s13 - 11*s23) + s12^2*(43*s13^2 + 
                92*s13*s23 - 103*s23^2) + 16*s13*s23*(s13^2 + 4*s13*s23 - 
                5*s23^2) + s12*(12*s13^3 + 115*s13^2*s23 - 54*s13*s23^2 - 
                61*s23^3)) + p2q^2*p3q^2*(4*s12^4 - 2*s12^3*(20*s13 + s23) + 
              s12^2*(-61*s13^2 + 161*s13*s23 - 4*s23^2) - 2*s12*(11*s13^3 + 
                9*s13^2*s23 - 75*s13*s23^2 - s23^3) - s13*(5*s13^3 + 
                169*s13^2*s23 - 205*s13*s23^2 + 15*s23^3)) + 
            p2q*p3q^3*(31*s12^4 + s12^3*(12*s13 - 23*s23) + 
              s12^2*(-45*s13^2 + 217*s13*s23 - 115*s23^2) + s12*(-38*s13^3 + 
                177*s13^2*s23 + 82*s13*s23^2 - 61*s23^3) - 3*s13*(4*s13^3 + 
                17*s13^2*s23 - 82*s13*s23^2 + 33*s23^3))) - 
          p1q*(-(p2q^4*s13*(-4*s12^3 + s13^3 - 118*s13^2*s23 + 13*s13*s23^2 + 
               4*s23^3 + s12^2*(5*s13 + 4*s23) + 2*s12*(5*s13^2 - 
                 59*s13*s23 - 2*s23^2))) + p2q^3*p3q*(-4*s12^4 + 16*s13^4 + 
              357*s13^3*s23 - 516*s13^2*s23^2 + 41*s13*s23^3 + 2*s23^4 + 
              s12^3*(55*s13 + 6*s23) + s12^2*(66*s13^2 - 345*s13*s23 + 
                2*s23^2) + s12*(23*s13^3 + 46*s13^2*s23 - 271*s13*s23^2 - 
                6*s23^3)) - p3q^4*(62*s12^4 + s12^3*(112*s13 - 145*s23) + 
              s12^2*(74*s13^2 + 90*s13*s23 - 367*s23^2) + 3*s12*(8*s13^3 + 
                81*s13^2*s23 - 128*s13*s23^2 - 33*s23^3) + s23*(36*s13^3 + 
                141*s13^2*s23 - 346*s13*s23^2 + 61*s23^3)) + 
            p2q^2*p3q^2*(-58*s12^4 + 33*s13^4 + 292*s13^3*s23 - 
              1160*s13^2*s23^2 + 484*s13*s23^3 - 17*s23^4 + 5*s12^3*(4*s13 + 
                27*s23) + s12^2*(103*s13^2 - 844*s13*s23 + 331*s23^2) + 
              s12*(58*s13^3 - 591*s13^2*s23 - 236*s13*s23^2 + 121*s23^3)) + 
            p2q*p3q^3*(-116*s12^4 + 16*s13^4 + 15*s13^3*s23 - 
              802*s13^2*s23^2 + 783*s13*s23^3 - 80*s23^4 + s12^3*(-143*s13 + 
                272*s23) + s12^2*(-42*s13^2 - 599*s13*s23 + 692*s23^2) + 
              s12*(s13^3 - 768*s13^2*s23 + 415*s13*s23^2 + 224*s23^3))) + 
          p1q^3*(p2q^2*(-2*s13^4 + 20*s13^3*s23 + 131*s13^2*s23^2 - 
              262*s13*s23^3 + 13*s23^4 - s12^3*(4*s13 + 65*s23) + 
              s12^2*(2*s13^2 + 26*s13*s23 - 93*s23^2) + s12*(4*s13^3 + 
                75*s13^2*s23 - 256*s13*s23^2 - 15*s23^3)) + 
            2*p2q*p3q*(2*s12^4 - s13^4 + 14*s13^3*s23 + 64*s13^2*s23^2 - 
              286*s13*s23^3 + 113*s23^4 - s12^3*(3*s13 + 89*s23) - 
              s12^2*(s13^2 + 12*s13*s23 + 35*s23^2) + s12*(3*s13^3 + 
                47*s13^2*s23 - 315*s13*s23^2 + 169*s23^3)) + 
            p3q^2*(4*s12^4 - s12^3*(2*s13 + 119*s23) + s12^2*(-4*s13^2 - 
                52*s13*s23 + 17*s23^2) + s23*(10*s13^3 + 3*s13^2*s23 - 
                300*s13*s23^2 + 219*s23^3) + s12*(2*s13^3 + 25*s13^2*s23 - 
                366*s13*s23^2 + 359*s23^3))) + 
          p1q^2*(p2q^2*p3q*(23*s12^4 - 16*s13^4 - 50*s13^3*s23 + 
              842*s13^2*s23^2 - 630*s13*s23^3 + 30*s23^4 - s12^3*(2*s13 + 
                175*s23) + s12^2*(-5*s13^2 + 482*s13*s23 - 305*s23^2) + 
              s12*(4*s13^3 + 499*s13^2*s23 - 254*s13*s23^2 - 77*s23^3)) + 
            p2q*p3q^2*(58*s12^4 - 6*s13^4 + s12^3*(61*s13 - 412*s23) + 
              42*s13^3*s23 + 626*s13^2*s23^2 - 1110*s13*s23^3 + 232*s23^4 + 
              s12^2*(38*s13^2 + 256*s13*s23 - 622*s23^2) + s12*(29*s13^3 + 
                566*s13^2*s23 - 1011*s13*s23^2 + 80*s23^3)) + 
            p3q^3*(35*s12^4 + s12^3*(48*s13 - 247*s23) + s12^2*(27*s13^2 - 
                60*s13*s23 - 325*s23^2) + 2*s23*(14*s13^3 + 45*s13^2*s23 - 
                252*s13*s23^2 + 101*s23^3) + s12*(14*s13^3 + 155*s13^2*s23 - 
                636*s13*s23^2 + 159*s23^3)) - p2q^3*(s12^3*(15*s13 + 4*s23) + 
              2*s12^2*(8*s13^2 - 88*s13*s23 - s23^2) + s12*(11*s13^3 - 
                90*s13^2*s23 - 129*s13*s23^2 - 4*s23^3) + 2*(5*s13^4 + 
                33*s13^3*s23 - 152*s13^2*s23^2 + 13*s13*s23^3 + s23^4)))))/
        (108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       (p1q*(s12 + s13 + s23)*(p1q^5*s13*s23^2*(s12^2*(12*s13 - s23) + 
            2*s12*(6*s13^2 + 12*s13*s23 - s23^2) + 
            s23*(13*s13^2 + 12*s13*s23 - s23^2)) + p1q^4*s23*
           (p3q*(3*s12^3*s13*(-8*s13 + s23) - s12^2*s13*(12*s13^2 + 
                9*s13*s23 + 40*s23^2) + s23*(-13*s13^4 + 34*s13^3*s23 + 
                37*s13^2*s23^2 + 2*s13*s23^3 + 84*s23^4) + s12*(-12*s13^4 + 
                19*s13^3*s23 + 96*s13^2*s23^2 + 43*s13*s23^3 + 84*s23^4)) + 
            p2q*(2*s12^3*s13*(-6*s13 + s23) - s12^2*s13*(12*s13^2 + 
                8*s13*s23 + 41*s23^2) + s23*(-38*s13^4 - 13*s13^3*s23 + 
                16*s13^2*s23^2 + 3*s13*s23^3 + 84*s23^4) + s12*(-24*s13^4 - 
                28*s13^3*s23 + 64*s13^2*s23^2 + 44*s13*s23^3 + 84*s23^4))) - 
          (p2q + p3q)*(p2q^4*s13^2*s23*(s12^2*(s13 + 84*s23) + 
              2*s12*(s13^2 + 84*s13*s23 + 42*s23^2) + s13*(s13^2 + 
                84*s13*s23 + 83*s23^2)) - 2*p3q^4*(s12^4*(6*s13^2 - 
                2*s13*s23 - 42*s23^2) + 2*s12^2*s13*s23*(5*s13^2 - s13*s23 - 
                31*s23^2) - 3*s13^2*s23^2*(s13^2 + 6*s13*s23 - 7*s23^2) + 
              s12^3*(6*s13^3 + 5*s13^2*s23 - 43*s13*s23^2 - 42*s23^3) - 
              3*s12*s13*s23*(s13^3 - 2*s13^2*s23 + 14*s13*s23^2 - 7*s23^3)) + 
            2*p2q*p3q^3*(2*s12^4*s23*(s13 + 42*s23) + s12*s13*s23*(26*s13^3 - 
                18*s13^2*s23 + 100*s13*s23^2 - 63*s23^3) - 3*s13^2*s23*(
                s13^3 - 4*s13^2*s23 - 20*s13*s23^2 + 21*s23^3) + 
              s12^3*(18*s13^3 + 6*s13^2*s23 + 19*s13*s23^2 + 84*s23^3) + 
              s12^2*s13*(18*s13^3 + 15*s13^2*s23 - 77*s13*s23^2 + 
                122*s23^3)) + p2q^3*p3q*s13*(-3*s12^3*s23*(s13 + 56*s23) - 
              3*s12^2*s23*(3*s13^2 + 41*s13*s23 + 28*s23^2) + 
              s12*(12*s13^4 + 3*s13^3*s23 + 168*s13^2*s23^2 + 41*s13*s23^3 - 
                84*s23^4) + s13*(12*s13^4 - 3*s13^3*s23 + 119*s13^2*s23^2 + 
                123*s13*s23^3 - 83*s23^4)) + p2q^2*p3q^2*
             (2*s12^4*s23*(s13 + 42*s23) + s12^3*s23*(3*s13^2 - 211*s13*s23 + 
                84*s23^2) + 2*s13^2*s23*(-16*s13^3 + 23*s13^2*s23 + 
                64*s13*s23^2 - 83*s23^3) - 2*s12^2*s13*(18*s13^3 + 
                10*s13^2*s23 + 181*s13*s23^2 - 20*s23^3) - 
              s12*s13*(36*s13^4 + 17*s13^3*s23 + 33*s13^2*s23^2 - 
                81*s13*s23^3 + 167*s23^4))) + 
          p1q^3*(p3q^2*(2*s12^4*s13*(6*s13 - s23) + s12^3*s13*(12*s13^2 - 
                53*s13*s23 + 48*s23^2) - s12^2*s23*(4*s13^3 + 91*s13^2*s23 + 
                211*s13*s23^2 + 252*s23^3) + s23^2*(-39*s13^4 + 
                37*s13^3*s23 + 75*s13^2*s23^2 - 205*s13*s23^3 + 84*s23^4) - 
              s12*s23*(37*s13^4 + 26*s13^3*s23 - 57*s13^2*s23^2 + 
                130*s13*s23^3 + 168*s23^4)) - p2q*p3q*(2*s12^4*s13*s23 + 
              3*s12^3*s13*(8*s13^2 + 25*s13*s23 - 31*s23^2) + 
              s12*s23*(117*s13^4 + 183*s13^3*s23 - 85*s13^2*s23^2 + 
                169*s13*s23^3 + 168*s23^4) + s12^2*(24*s13^4 + 59*s13^3*s23 + 
                112*s13^2*s23^2 + 337*s13*s23^3 + 336*s23^4) + 
              s23*(-13*s13^5 + 130*s13^4*s23 + 52*s13^3*s23^2 - 
                18*s13^2*s23^3 + 409*s13*s23^4 - 168*s23^5)) - 
            p2q^2*(2*s12^3*s13*(5*s13 - 23*s23)*s23 - 2*s12*s13*(6*s13^4 + 
                2*s13^3*s23 - 29*s13^2*s23^2 + 26*s13*s23^3 - 20*s23^4) + 
              s12^2*(-12*s13^4 - 17*s13^3*s23 + 14*s13^2*s23^2 + 
                125*s13*s23^3 + 84*s23^4) + s23*(-37*s13^5 + 22*s13^4*s23 + 
                26*s13^3*s23^2 + 40*s13^2*s23^3 + 205*s13*s23^4 - 
                84*s23^5))) + p1q*(2*p3q^4*(2*s12^4*(9*s13^2 - 2*s13*s23 - 
                21*s23^2) - 3*s13*s23^2*(4*s13^3 + 10*s13^2*s23 - 
                35*s13*s23^2 + 7*s23^3) + s12^3*(18*s13^3 + 10*s13^2*s23 + 
                23*s13*s23^2 + 84*s23^3) + s12^2*s23*(32*s13^3 + 
                27*s13^2*s23 + 67*s13*s23^2 + 126*s23^3) + s12*s13*s23*(
                -12*s13^3 + 2*s13^2*s23 - 24*s13*s23^2 + 187*s23^3)) + 
            p2q^4*s13*(2*s12^3*s23*(s13 + 42*s23) + s12^2*s23*(7*s13^2 + 
                40*s13*s23 + 84*s23^2) - 4*s12*(3*s13^4 + s13^3*s23 + 
                20*s13^2*s23^2 - 53*s13*s23^3 - 42*s23^4) + s13*(-12*s13^4 + 
                3*s13^3*s23 - 32*s13^2*s23^2 + 131*s13*s23^3 + 250*s23^4)) + 
            2*p2q*p3q^3*(4*s12^4*(3*s13^2 - 2*s13*s23 - 21*s23^2) - 
              4*s12^3*(9*s13^3 + 7*s13^2*s23 - 59*s13*s23^2 - 63*s23^3) + 
              6*s12*s13*s23*(-17*s13^3 + 6*s13^2*s23 + 18*s13*s23^2 + 
                107*s23^3) + s13*s23*(9*s13^4 - 22*s13^3*s23 - 26*s13^2*
                 s23^2 + 410*s13*s23^3 - 63*s23^4) + s12^2*(-48*s13^4 - 
                35*s13^3*s23 + 266*s13^2*s23^2 + 277*s13*s23^3 + 
                336*s23^4)) + p2q^2*p3q^2*(-2*s12^4*s23*(5*s13 + 42*s23) + 
              s12^3*(-60*s13^3 - 45*s13^2*s23 + 892*s13*s23^2 + 504*s23^3) + 
              s13*s23*(122*s13^4 + 79*s13^3*s23 + 247*s13^2*s23^2 + 
                1203*s13*s23^3 - 167*s23^4) + s12^2*(24*s13^4 + 
                14*s13^3*s23 + 1049*s13^2*s23^2 + 759*s13*s23^3 + 
                588*s23^4) + s12*s13*(84*s13^4 - 45*s13^3*s23 + 284*s13^2*
                 s23^2 + 773*s13*s23^3 + 1538*s23^4)) + 
            p2q^3*p3q*(-2*s12^4*s13*s23 + 3*s12^3*s23*(-s13^2 + 183*s13*s23 + 
                56*s23^2) + s12^2*(48*s13^4 + 47*s13^3*s23 + 560*s13^2*
                 s23^2 + 421*s13*s23^3 + 168*s23^4) + s12*s13*(24*s13^4 + 
                23*s13^3*s23 + 37*s13^2*s23^2 + 681*s13*s23^3 + 795*s23^4) + 
              s13*(-24*s13^5 + 71*s13^4*s23 + 18*s13^3*s23^2 + 332*s13^2*
                 s23^3 + 830*s13*s23^4 - 83*s23^5))) - 
          p1q^2*(p3q^3*(6*s12^4*s13*(-6*s13 + s23) - 2*s12^2*s13*s23*(
                26*s13^2 - 6*s13*s23 + 43*s23^2) + 2*s13*s23^2*(22*s13^3 + 
                4*s13^2*s23 - 109*s13*s23^2 + 125*s23^3) - s12^3*(36*s13^3 - 
                19*s13^2*s23 + 177*s13*s23^2 + 252*s23^3) + 
              s12*s23*(43*s13^4 + 41*s13^3*s23 - 21*s13^2*s23^2 - 
                157*s13*s23^3 + 252*s23^4)) + p2q*p3q^2*
             (-2*s12^4*s13*(6*s13 - 5*s23) + s12^3*(72*s13^3 + 116*s13^2*
                 s23 - 435*s13*s23^2 - 420*s23^3) + s12^2*(84*s13^4 + 
                105*s13^3*s23 + 55*s13^2*s23^2 + 130*s13*s23^3 + 168*s23^4) + 
              s12*s23*(238*s13^4 + 379*s13^3*s23 + 148*s13^2*s23^2 - 
                147*s13*s23^3 + 588*s23^4) + s13*s23*(-25*s13^4 + 
                189*s13^3*s23 + 185*s13^2*s23^2 - 319*s13*s23^3 + 
                790*s23^4)) + p2q^3*(2*s12^3*s13*(s13 - 43*s23)*s23 + 
              s12^2*(-12*s13^4 - 19*s13^3*s23 + 14*s13^2*s23^2 + 
                127*s13*s23^3 + 84*s23^4) + s12*(-8*s13^4*s23 + 
                92*s13^3*s23^2 - 38*s13^2*s23^3 + 44*s13*s23^4 + 84*s23^5) + 
              s13*(12*s13^5 - 35*s13^4*s23 - 8*s13^3*s23^2 - 70*s13^2*s23^3 - 
                74*s13*s23^4 + 251*s23^5)) + p2q^2*p3q*(4*s12^4*s13*s23 + 
              3*s12^3*(8*s13^3 + 13*s13^2*s23 - 115*s13*s23^2 - 56*s23^3) - 
              2*s12^2*(18*s13^4 + 21*s13^3*s23 + 7*s13^2*s23^2 - 
                171*s13*s23^3 - 126*s23^4) + 4*s13*s23*(-30*s13^4 + 
                11*s13^3*s23 + 10*s13^2*s23^2 - 49*s13*s23^3 + 198*s23^4) + 
              s12*(-60*s13^5 + 7*s13^4*s23 + 267*s13^3*s23^2 + 75*s13^2*
                 s23^3 + 55*s13*s23^4 + 420*s23^5)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23^2*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(2*p2q^2*s13^2*(s12 + s13 - 3*s23) - 
          p1q^2*s23*(3*s12^2 - 4*s12*s13 + s13^2 + 6*s12*s23 - 4*s13*s23 + 
            3*s23^2) + p2q*p3q*s13*(-3*s12^2 - 2*s12*s13 + s13^2 + 
            4*s12*s23 - 8*s13*s23 + 7*s23^2) + 
          p3q^2*(s12^3 - 2*(s13 - s23)^2*s23 - s12*(s13^2 - 4*s13*s23 + 
              3*s23^2)) + p1q*(p2q*s13*(-s12^2 + (s13 - 3*s23)^2 + 
              8*s12*s23) + p3q*(s12^3 - 3*s12^2*s23 + s23*(-3*s13^2 + 
                8*s13*s23 - 5*s23^2) - s12*(s13^2 - 8*s13*s23 + 9*s23^2)))))/
        (54*(p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - (ep*p2q*(s12 + s13 + s23)*
         (2*p1q^5*s23^2*(s12^2 - s13^2 + 2*s12*s23 + s23^2) + 
          p1q^4*s23*(p3q*(-6*s12^3 + 2*s13^3 + 11*s13^2*s23 - 112*s13*s23^2 + 
              7*s23^3 + s12^2*(6*s13 + 7*s23) - 2*s12*(s13^2 + 55*s13*s23 - 
                10*s23^2)) + p2q*(-4*s12^3 + 4*s13^3 + 13*s13^2*s23 - 
              118*s13*s23^2 + s23^3 + s12^2*(4*s13 + 5*s23) - 
              2*s12*(2*s13^2 + 59*s13*s23 - 5*s23^2))) + 
          (p2q + p3q)*(2*p2q^4*s13^2*(s12^2 + 2*s12*s13 + s13^2 - s23^2) + 
            2*p2q^3*p3q*s13*(-3*s12^3 + 39*s13^3 - 31*s13^2*s23 - 
              5*s13*s23^2 + s23^3 + 3*s12^2*(13*s13 + s23) + s12*(81*s13^2 - 
                30*s13*s23 - s23^2)) + p2q^2*p3q^2*(4*s12^4 - 
              s12^3*(113*s13 + 2*s23) - s12^2*(61*s13^2 + 58*s13*s23 + 
                4*s23^2) + s12*(197*s13^3 - 306*s13^2*s23 + 27*s13*s23^2 + 
                2*s23^3) + s13*(141*s13^3 - 238*s13^2*s23 + 13*s13*s23^2 + 
                8*s23^3)) + p3q^4*(31*s12^4 + s12^3*(-11*s13 + 62*s23) + 
              16*s13*s23*(-5*s13^2 + 4*s13*s23 + s23^2) + s12^2*(-103*s13^2 + 
                92*s13*s23 + 43*s23^2) + s12*(-61*s13^3 - 54*s13^2*s23 + 
                115*s13*s23^2 + 12*s23^3)) + p2q*p3q^3*(31*s12^4 + 
              s12^3*(-134*s13 + 50*s23) + s12^2*(-264*s13^2 - 2*s13*s23 + 
                31*s23^2) - 2*s12*(19*s13^3 + 165*s13^2*s23 - 64*s13*s23^2 - 
                6*s23^3) + s13*(61*s13^3 - 266*s13^2*s23 + 77*s13*s23^2 + 
                20*s23^3))) + p1q*(2*p2q^4*s13*(-2*s12^3 + 37*s13^3 - 
              34*s13^2*s23 - 5*s13*s23^2 + 2*s23^3 + s12^2*(39*s13 + 2*s23) + 
              s12*(78*s13^2 - 34*s13*s23 - 2*s23^2)) + p2q*p3q^3*
             (116*s12^4 + 80*s13^4 - 783*s13^3*s23 + 802*s13^2*s23^2 - 
              15*s13*s23^3 - 16*s23^4 + s12^3*(-272*s13 + 143*s23) + 
              s12^2*(-692*s13^2 + 599*s13*s23 + 42*s23^2) - s12*(224*s13^3 + 
                415*s13^2*s23 - 768*s13*s23^2 + s23^3)) + 
            2*p2q^3*p3q*(2*s12^4 + 113*s13^4 - 286*s13^3*s23 + 
              64*s13^2*s23^2 + 14*s13*s23^3 - s23^4 - s12^3*(89*s13 + 
                3*s23) - s12^2*(35*s13^2 + 12*s13*s23 + s23^2) + 
              s12*(169*s13^3 - 315*s13^2*s23 + 47*s13*s23^2 + 3*s23^3)) + 
            p3q^4*(62*s12^4 + s12^3*(-34*s13 + 74*s23) + s12^2*(-218*s13^2 + 
                309*s13*s23 - 2*s23^2) + s12*(-122*s13^3 + 28*s13^2*s23 + 
                292*s13*s23^2 - 26*s23^3) - s23*(179*s13^3 - 310*s13^2*s23 + 
                35*s13*s23^2 + 12*s23^3)) + p2q^2*p3q^2*(58*s12^4 + 
              232*s13^4 - 1110*s13^3*s23 + 626*s13^2*s23^2 + 42*s13*s23^3 - 
              6*s23^4 + s12^3*(-412*s13 + 61*s23) + s12^2*(-622*s13^2 + 
                256*s13*s23 + 38*s23^2) + s12*(80*s13^3 - 1011*s13^2*s23 + 
                566*s13*s23^2 + 29*s23^3))) - 
          p1q^2*(p2q^2*p3q*(-23*s12^4 - 30*s13^4 + 630*s13^3*s23 - 
              842*s13^2*s23^2 + 50*s13*s23^3 + 16*s23^4 + s12^3*(175*s13 + 
                2*s23) + s12^2*(305*s13^2 - 482*s13*s23 + 5*s23^2) + 
              s12*(77*s13^3 + 254*s13^2*s23 - 499*s13*s23^2 - 4*s23^3)) + 
            p2q^3*(-13*s13^4 + 262*s13^3*s23 - 131*s13^2*s23^2 - 
              20*s13*s23^3 + 2*s23^4 + s12^3*(65*s13 + 4*s23) + 
              s12^2*(93*s13^2 - 26*s13*s23 - 2*s23^2) + s12*(15*s13^3 + 
                256*s13^2*s23 - 75*s13*s23^2 - 4*s23^3)) + 
            p2q*p3q^2*(-58*s12^4 - 17*s13^4 + 484*s13^3*s23 - 
              1160*s13^2*s23^2 + 292*s13*s23^3 + 33*s23^4 + 5*s12^3*(27*s13 + 
                4*s23) + s12^2*(331*s13^2 - 844*s13*s23 + 103*s23^2) + 
              s12*(121*s13^3 - 236*s13^2*s23 - 591*s13*s23^2 + 58*s23^3)) + 
            p3q^3*(-35*s12^4 + s12^3*(25*s13 + 28*s23) + s12^2*(119*s13^2 - 
                378*s13*s23 + 106*s23^2) + s23*(114*s13^3 - 451*s13^2*s23 + 
                220*s13*s23^2 + 17*s23^3) + s12*(59*s13^3 - 232*s13^2*s23 - 
                159*s13*s23^2 + 60*s23^3))) - 
          p1q^3*(p3q^2*(-4*s12^4 + 2*s12^3*(s13 + 23*s23) + s12^2*(4*s13^2 - 
                167*s13*s23 + 56*s23^2) + s13*s23*(13*s13^2 - 218*s13*s23 + 
                281*s23^2) - 2*s12*(s13^3 + 74*s13^2*s23 - 64*s13*s23^2 - 
                3*s23^3)) + p2q*p3q*(-4*s12^4 + 2*s13^4 + 41*s13^3*s23 - 
              516*s13^2*s23^2 + 357*s13*s23^3 + 16*s23^4 + s12^3*(6*s13 + 
                55*s23) + s12^2*(2*s13^2 - 345*s13*s23 + 66*s23^2) + 
              s12*(-6*s13^3 - 271*s13^2*s23 + 46*s13*s23^2 + 23*s23^3)) + 
            p2q^2*(s12^3*(4*s13 + 15*s23) - 2*s12^2*(s13^2 + 88*s13*s23 - 
                8*s23^2) - s12*(4*s13^3 + 129*s13^2*s23 + 90*s13*s23^2 - 
                11*s23^3) + 2*(s13^4 + 13*s13^3*s23 - 152*s13^2*s23^2 + 
                33*s13*s23^3 + 5*s23^4)))))/(108*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23*(p1q^2*s23*(s12 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p2q*s13 - p3q*(s12 + s23)) - 
          p1q*(p3q*(s12 + s13 - s23)*(s12 + s23) + p2q*(s12^2 + 2*s13*s23 + 
              s12*(s13 + s23))))) + (p2q*(s12 + s13 + s23)*
         (p1q^5*s13*s23^2*(s12^2*(84*s13 + s23) + 2*s12*(42*s13^2 + 
              84*s13*s23 + s23^2) + s23*(83*s13^2 + 84*s13*s23 + s23^2)) - 
          p1q^4*s23*(p3q*(3*s12^3*s13*(56*s13 + s23) + s12^2*s13*(84*s13^2 + 
                39*s13*s23 + 8*s23^2) + s12*(84*s13^4 - 125*s13^3*s23 - 
                336*s13^2*s23^2 - 5*s13*s23^3 - 12*s23^4) + s23*(83*s13^4 - 
                206*s13^3*s23 - 203*s13^2*s23^2 + 2*s13*s23^3 - 12*s23^4)) + 
            p2q*(2*s12^3*s13*(42*s13 + s23) + s12^2*s13*(84*s13^2 + 
                40*s13*s23 + 7*s23^2) + s23*(250*s13^4 + 131*s13^3*s23 - 
                32*s13^2*s23^2 + 3*s13*s23^3 - 12*s23^4) + 4*s12*(42*s13^4 + 
                53*s13^3*s23 - 20*s13^2*s23^2 - s13*s23^3 - 3*s23^4))) + 
          (p2q + p3q)*(p2q^4*s13^2*s23*(s12^2*(s13 - 12*s23) + 
              s13*(s13^2 - 12*s13*s23 - 13*s23^2) + 2*s12*(s13^2 - 
                12*s13*s23 - 6*s23^2)) + 2*p3q^4*(2*s12^2*s13*s23*(31*s13^2 + 
                s13*s23 - 5*s23^2) + 2*s12^4*(21*s13^2 + s13*s23 - 3*s23^2) + 
              3*s13^2*s23^2*(-7*s13^2 + 6*s13*s23 + s23^2) + 
              s12^3*(42*s13^3 + 43*s13^2*s23 - 5*s13*s23^2 - 6*s23^3) + 
              3*s12*s13*s23*(-7*s13^3 + 14*s13^2*s23 - 2*s13*s23^2 + 
                s23^3)) + 2*p2q*p3q^3*(2*s12^4*(s13 - 6*s23)*s23 + 
              3*s13^2*s23*(7*s13^3 - 28*s13^2*s23 + 4*s13*s23^2 + 3*s23^3) + 
              s12*s13*s23*(-166*s13^3 - 18*s13^2*s23 + 4*s13*s23^2 + 
                9*s23^3) - s12^3*(126*s13^3 + 66*s13^2*s23 + 5*s13*s23^2 + 
                12*s23^3) - s12^2*s13*(126*s13^3 + 129*s13^2*s23 + 
                29*s13*s23^2 + 22*s23^3)) - p2q^3*p3q*s13*
             (3*s12^3*(s13 - 8*s23)*s23 - 3*s12^2*s23*(13*s13^2 + 7*s13*s23 + 
                4*s23^2) + s13*(84*s13^4 + 3*s13^3*s23 + 25*s13^2*s23^2 + 
                21*s13*s23^3 - 13*s23^4) + s12*(84*s13^4 + 45*s13^3*s23 + 
                72*s13^2*s23^2 + 7*s13*s23^3 - 12*s23^4)) + 
            p2q^2*p3q^2*(2*s12^4*(s13 - 6*s23)*s23 + s12^3*s23*(-45*s13^2 + 
                29*s13*s23 - 12*s23^2) + 2*s12^2*s13*(126*s13^3 + 
                86*s13^2*s23 + 35*s13*s23^2 - 4*s23^3) + 2*s13^2*s23*(
                104*s13^3 - 25*s13^2*s23 - 8*s13*s23^2 + 13*s23^3) + 
              s12*s13*(252*s13^4 + 175*s13^3*s23 + 15*s13^2*s23^2 + 
                33*s13*s23^3 + 25*s23^4))) + 
          p1q^2*(p3q^3*(6*s12^4*s13*(42*s13 + s23) + 2*s12^2*s13*s23*(
                142*s13^2 - 258*s13*s23 + 5*s23^2) + 2*s13*s23^2*(
                -146*s13^3 + 124*s13^2*s23 + 35*s13*s23^2 - 19*s23^3) + 
              s12^3*(252*s13^3 - 173*s13^2*s23 + 15*s13*s23^2 + 36*s23^3) + 
              s12*s23*(-293*s13^4 + 281*s13^3*s23 - 69*s13^2*s23^2 + 
                35*s13*s23^3 - 36*s23^4)) + p2q*p3q^2*
             (2*s12^4*s13*(42*s13 + 5*s23) + s12^3*(-504*s13^3 - 
                892*s13^2*s23 + 45*s13*s23^2 + 60*s23^3) + 
              s13*s23*(167*s13^4 - 1203*s13^3*s23 - 247*s13^2*s23^2 - 
                79*s13*s23^3 - 122*s23^4) - s12^2*(588*s13^4 + 759*s13^3*
                 s23 + 1049*s13^2*s23^2 + 14*s13*s23^3 + 24*s23^4) - 
              s12*s23*(1538*s13^4 + 773*s13^3*s23 + 284*s13^2*s23^2 - 
                45*s13*s23^3 + 84*s23^4)) + p2q^2*p3q*(4*s12^4*s13*s23 - 
              3*s12^3*(56*s13^3 + 115*s13^2*s23 - 13*s13*s23^2 - 8*s23^3) + 
              4*s13*s23*(198*s13^4 - 49*s13^3*s23 + 10*s13^2*s23^2 + 
                11*s13*s23^3 - 30*s23^4) + 2*s12^2*(126*s13^4 + 171*s13^3*
                 s23 - 7*s13^2*s23^2 - 21*s13*s23^3 - 18*s23^4) + 
              s12*(420*s13^5 + 55*s13^4*s23 + 75*s13^3*s23^2 + 267*s13^2*
                 s23^3 + 7*s13*s23^4 - 60*s23^5)) + 
            p2q^3*(2*s12^3*s13*s23*(-23*s13 + 5*s23) + s12^2*(84*s13^4 + 
                125*s13^3*s23 + 14*s13^2*s23^2 - 17*s13*s23^3 - 12*s23^4) - 
              2*s12*s23*(-20*s13^4 + 26*s13^3*s23 - 29*s13^2*s23^2 + 
                2*s13*s23^3 + 6*s23^4) + s13*(-84*s13^5 + 205*s13^4*s23 + 
                40*s13^3*s23^2 + 26*s13^2*s23^3 + 22*s13*s23^4 - 
                37*s23^5))) + p1q*(2*p3q^4*(2*s12^4*(63*s13^2 + 2*s13*s23 - 
                3*s23^2) - 3*s13*s23^2*(28*s13^3 - 26*s13^2*s23 - 
                5*s13*s23^2 + s23^3) + s12^3*(126*s13^3 + 62*s13^2*s23 + 
                s13*s23^2 + 12*s23^3) + s12^2*s23*(184*s13^3 - 75*s13^2*s23 + 
                5*s13*s23^2 + 18*s23^3) + s12*s13*s23*(-84*s13^3 + 
                142*s13^2*s23 - 24*s13*s23^2 + 29*s23^3)) + 
            p2q^4*s13*(-2*s12^3*(s13 - 6*s23)*s23 + s12^2*s23*(41*s13^2 + 
                8*s13*s23 + 12*s23^2) - 4*s12*(21*s13^4 + 11*s13^3*s23 + 
                16*s13^2*s23^2 - 7*s13*s23^3 - 6*s23^4) + s13*(-84*s13^4 - 
                3*s13^3*s23 - 16*s13^2*s23^2 + 13*s13*s23^3 + 38*s23^4)) + 
            2*p2q*p3q^3*(4*s12^4*(21*s13^2 + 2*s13*s23 - 3*s23^2) - 
              6*s12*s13*s23*(107*s13^3 + 18*s13^2*s23 + 6*s13*s23^2 - 
                17*s23^3) - 4*s12^3*(63*s13^3 + 59*s13^2*s23 - 7*s13*s23^2 - 
                9*s23^3) + s13*s23*(63*s13^4 - 410*s13^3*s23 + 26*s13^2*
                 s23^2 + 22*s13*s23^3 - 9*s23^4) + s12^2*(-336*s13^4 - 
                277*s13^3*s23 - 266*s13^2*s23^2 + 35*s13*s23^3 + 48*s23^4)) + 
            p2q^2*p3q^2*(2*s12^4*(5*s13 - 6*s23)*s23 + s12^3*(-420*s13^3 - 
                435*s13^2*s23 + 116*s13*s23^2 + 72*s23^3) + 
              s13*s23*(790*s13^4 - 319*s13^3*s23 + 185*s13^2*s23^2 + 
                189*s13*s23^3 - 25*s23^4) + s12^2*(168*s13^4 + 130*s13^3*
                 s23 + 55*s13^2*s23^2 + 105*s13*s23^3 + 84*s23^4) + 
              s12*s13*(588*s13^4 - 147*s13^3*s23 + 148*s13^2*s23^2 + 
                379*s13*s23^3 + 238*s23^4)) + p2q^3*p3q*(2*s12^4*s13*s23 + 
              3*s12^3*s23*(-31*s13^2 + 25*s13*s23 + 8*s23^2) + 
              s12^2*(336*s13^4 + 337*s13^3*s23 + 112*s13^2*s23^2 + 
                59*s13*s23^3 + 24*s23^4) + s12*s13*(168*s13^4 + 169*s13^3*
                 s23 - 85*s13^2*s23^2 + 183*s13*s23^3 + 117*s23^4) + 
              s13*(-168*s13^5 + 409*s13^4*s23 - 18*s13^3*s23^2 + 
                52*s13^2*s23^3 + 130*s13*s23^4 - 13*s23^5))) + 
          p1q^3*(p3q^2*(s12^3*s13^2*(84*s13 - 379*s23) + 2*s12^4*s13*(
                42*s13 + s23) - s12^2*s23*(44*s13^3 + 485*s13^2*s23 + 
                29*s13*s23^2 + 36*s23^3) + s12*s23*(-251*s13^4 + 
                122*s13^3*s23 + 135*s13^2*s23^2 - 14*s13*s23^3 - 24*s23^4) + 
              s23^2*(-249*s13^4 + 251*s13^3*s23 + 165*s13^2*s23^2 - 
                35*s13*s23^3 + 12*s23^4)) + p2q^2*(2*s12^3*s13*s23*(-43*s13 + 
                s23) + s12^2*(84*s13^4 + 127*s13^3*s23 + 14*s13^2*s23^2 - 
                19*s13*s23^3 - 12*s23^4) + 2*s12*s13*(42*s13^4 + 
                22*s13^3*s23 - 19*s13^2*s23^2 + 46*s13*s23^3 - 4*s23^4) + 
              s23*(251*s13^5 - 74*s13^4*s23 - 70*s13^3*s23^2 - 8*s13^2*
                 s23^3 - 35*s13*s23^4 + 12*s23^5)) + 
            p2q*p3q*(2*s12^4*s13*s23 - 3*s12^3*s13*(56*s13^2 + 183*s13*s23 - 
                s23^2) - s12*s23*(795*s13^4 + 681*s13^3*s23 + 37*s13^2*
                 s23^2 + 23*s13*s23^3 + 24*s23^4) - s12^2*(168*s13^4 + 
                421*s13^3*s23 + 560*s13^2*s23^2 + 47*s13*s23^3 + 48*s23^4) + 
              s23*(83*s13^5 - 830*s13^4*s23 - 332*s13^3*s23^2 - 
                18*s13^2*s23^3 - 71*s13*s23^4 + 24*s23^5)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23^2*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-5*ep^2*p3q*(s12 + s13 + s23)*(2*p3q^2*s12^2*((s13 - s23)^2 + 
            s12*(s13 + s23)) + p1q^2*s23*(4*s12*s13*(s13 + s23) - 
            (s13 - s23)*(s13 + s23)^2 - s12^2*(3*s13 + s23)) + 
          p2q^2*s13*(4*s12*s23*(s13 + s23) + (s13 - s23)*(s13 + s23)^2 - 
            s12^2*(s13 + 3*s23)) + p2q*p3q*s12*(-3*s13^3 + s13^2*s23 + 
            3*s13*s23^2 - s23^3 + s12^2*(s13 + s23) - 2*s12*s13*
             (s13 + 5*s23)) + p1q*(p3q*s12*(-s13^3 + 3*s13^2*s23 + 
              s13*s23^2 - 3*s23^3 + s12^2*(s13 + s23) - 2*s12*s23*(5*s13 + 
                s23)) + p2q*(8*s12*s13*s23*(s13 + s23) + (s13^2 - s23^2)^2 - 
              s12^2*(s13^2 + 6*s13*s23 + s23^2)))))/(27*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (p3q*(s12 + s13 + s23)*(-(p1q^5*s13*s23^2*(s12^2*(12*s13 - 5*s23) + 
             2*s12*(6*s13^2 + 12*s13*s23 - 5*s23^2) + 
             s23*(17*s13^2 + 12*s13*s23 - 5*s23^2))) + 
          p1q^4*s23*(p2q*(2*s12^3*s13*(6*s13 - 5*s23) + s12^2*s13*(12*s13^2 + 
                16*s13*s23 - 11*s23^2) + 4*s12*(6*s13^4 + 5*s13^3*s23 - 
                14*s13^2*s23^2 - s13*s23^3 + 3*s23^4) + s23*(46*s13^4 - 
                7*s13^3*s23 - 56*s13^2*s23^2 - 15*s13*s23^3 + 12*s23^4)) + 
            p3q*(3*s12^3*s13*(8*s13 - 5*s23) + s12^2*s13*(12*s13^2 + 
                21*s13*s23 - 16*s23^2) + s23*(17*s13^4 - 50*s13^3*s23 - 
                65*s13^2*s23^2 - 10*s13*s23^3 + 12*s23^4) + s12*(12*s13^4 - 
                23*s13^3*s23 - 72*s13^2*s23^2 + s13*s23^3 + 12*s23^4))) + 
          (p2q + p3q)*(p2q^4*s13^2*s23*(s12^2*(5*s13 - 12*s23) + 
              s13*(5*s13^2 - 12*s13*s23 - 17*s23^2) + 2*s12*(5*s13^2 - 
                12*s13*s23 - 6*s23^2)) - 2*p3q^4*(-3*s13^2*(s13 - s23)^2*s23^
                2 + 2*s12^4*(3*s13^2 - 5*s13*s23 + 3*s23^2) + 
              2*s12^2*s13*s23*(7*s13^2 - 5*s13*s23 + 7*s23^2) - 
              3*s12*s13*s23*(s13^3 - 2*s13^2*s23 - 2*s13*s23^2 + s23^3) + 
              s12^3*(6*s13^3 + s13^2*s23 + s13*s23^2 + 6*s23^3)) + 
            2*p2q*p3q^3*(2*s12^4*(5*s13 - 6*s23)*s23 + s12^2*s13*(18*s13^3 + 
                3*s13^2*s23 + 23*s13*s23^2 - 38*s23^3) + s12^3*(18*s13^3 - 
                6*s13^2*s23 - 13*s13*s23^2 - 12*s23^3) - 3*s13^2*s23*(s13^3 - 
                4*s13^2*s23 + 4*s13*s23^2 - 3*s23^3) + s12*s13*s23*(
                34*s13^3 + 6*s13^2*s23 - 28*s13*s23^2 + 9*s23^3)) + 
            p2q^3*p3q*s13*(-3*s12^3*(5*s13 - 8*s23)*s23 + 3*s12^2*s23*(
                -7*s13^2 + 11*s13*s23 + 4*s23^2) + s12*(12*s13^4 - 
                9*s13^3*s23 - 48*s13^2*s23^2 - 11*s13*s23^3 + 12*s23^4) + 
              s13*(12*s13^4 - 15*s13^3*s23 - 53*s13^2*s23^2 - 33*s13*s23^3 + 
                17*s23^4)) + p2q^2*p3q^2*(2*s12^4*(5*s13 - 6*s23)*s23 + 
              s12^3*s23*(-9*s13^2 + 25*s13*s23 - 12*s23^2) - 2*s13^2*s23*(
                20*s13^3 + 5*s13^2*s23 + 4*s13*s23^2 - 17*s23^3) - 
              2*s12^2*s13*(18*s13^3 + 2*s13^2*s23 - 67*s13*s23^2 + 8*s23^3) + 
              s12*s13*(-36*s13^4 + 11*s13^3*s23 + 51*s13^2*s23^2 - 
                3*s13*s23^3 + 29*s23^4))) + 
          p1q*(-2*p3q^4*(2*s12^4*(9*s13^2 - 10*s13*s23 + 3*s23^2) + 
              s12*s13*s23*(-12*s13^3 + 34*s13^2*s23 - 37*s23^3) + 
              s12^2*s23*(52*s13^3 - 33*s13^2*s23 + 11*s13*s23^2 - 18*s23^3) + 
              s12^3*(18*s13^3 + 14*s13^2*s23 + 7*s13*s23^2 - 12*s23^3) + 
              3*s13*s23^2*(-4*s13^3 + 6*s13^2*s23 - 5*s13*s23^2 + s23^3)) + 
            p2q^4*s13*(-2*s12^3*(5*s13 - 6*s23)*s23 + s12^2*s23*(-11*s13^2 + 
                16*s13*s23 + 12*s23^2) + 4*s12*(3*s13^4 - s13^3*s23 - 
                14*s13^2*s23^2 + 5*s13*s23^3 + 6*s23^4) + s13*(12*s13^4 - 
                15*s13^3*s23 - 56*s13^2*s23^2 - 7*s13*s23^3 + 46*s23^4)) + 
            2*p2q*p3q^3*(-4*s12^4*(3*s13^2 - 10*s13*s23 + 3*s23^2) + 
              4*s12^3*(9*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 9*s23^3) + 
              6*s12*s13*s23*(23*s13^3 + 12*s13^2*s23 + 12*s13*s23^2 + 
                23*s23^3) + s13*s23*(-9*s13^4 + 86*s13^3*s23 + 34*s13^2*
                 s23^2 + 86*s13*s23^3 - 9*s23^4) + s12^2*(48*s13^4 + 
                19*s13^3*s23 + 206*s13^2*s23^2 + 19*s13*s23^3 + 48*s23^4)) + 
            p2q^2*p3q^2*(2*s12^4*(25*s13 - 6*s23)*s23 + s12^3*(60*s13^3 - 
                15*s13^2*s23 + 76*s13*s23^2 + 72*s23^3) + s13*s23*(
                -154*s13^4 + 61*s13^3*s23 + 133*s13^2*s23^2 + 249*s13*s23^3 - 
                29*s23^4) + s12^2*(-24*s13^4 + 2*s13^3*s23 + 491*s13^2*
                 s23^2 + 93*s13*s23^3 + 84*s23^4) + s12*s13*(-84*s13^4 + 
                129*s13^3*s23 + 140*s13^2*s23^2 + 167*s13*s23^3 + 
                302*s23^4)) + p2q^3*p3q*(10*s12^4*s13*s23 + 3*s12^3*s23*(
                -11*s13^2 + 21*s13*s23 + 8*s23^2) + s12^2*(-48*s13^4 - 
                43*s13^3*s23 + 224*s13^2*s23^2 + 55*s13*s23^3 + 24*s23^4) + 
              s12*s13*(-24*s13^4 - 19*s13^3*s23 - 17*s13^2*s23^2 + 
                99*s13*s23^3 + 129*s23^4) + s13*(24*s13^5 - 115*s13^4*s23 - 
                90*s13^3*s23^2 + 68*s13^2*s23^3 + 170*s13*s23^4 - 
                17*s23^5))) - p1q^3*(p3q^2*(2*s12^4*s13*(6*s13 - 5*s23) + 
              s12^3*s13*(12*s13^2 - 49*s13*s23 + 24*s23^2) + 
              s12^2*s23*(4*s13^3 - 167*s13^2*s23 + 25*s13*s23^2 + 36*s23^3) + 
              s23^2*(-51*s13^4 + 41*s13^3*s23 + 63*s13^2*s23^2 + 
                55*s13*s23^3 - 12*s23^4) + s12*s23*(-41*s13^4 + 
                14*s13^3*s23 - 3*s13^2*s23^2 - 2*s13*s23^3 + 24*s23^4)) + 
            p2q^2*(-2*s12^3*s13*(s13 - 7*s23)*s23 + 2*s12*s13*(6*s13^4 - 
                2*s13^3*s23 - 25*s13^2*s23^2 - 2*s13*s23^3 + 8*s23^4) + 
              s12^2*(12*s13^4 + 13*s13^3*s23 - 70*s13^2*s23^2 + 
                23*s13*s23^3 + 12*s23^4) + s23*(41*s13^5 - 62*s13^4*s23 - 
                82*s13^3*s23^2 + 16*s13^2*s23^3 + 55*s13*s23^4 - 12*s23^5)) - 
            p2q*p3q*(10*s12^4*s13*s23 + 3*s12^3*s13*(8*s13^2 + 21*s13*s23 - 
                11*s23^2) + s12^2*(24*s13^4 + 55*s13^3*s23 + 224*s13^2*
                 s23^2 - 43*s13*s23^3 - 48*s23^4) + s12*s23*(129*s13^4 + 
                99*s13^3*s23 - 17*s13^2*s23^2 - 19*s13*s23^3 - 24*s23^4) + 
              s23*(-17*s13^5 + 170*s13^4*s23 + 68*s13^3*s23^2 - 
                90*s13^2*s23^3 - 115*s13*s23^4 + 24*s23^5))) + 
          p1q^2*(p3q^3*(-6*s12^4*s13*(6*s13 - 5*s23) + 2*s12^2*s13*s23*(
                -46*s13^2 + 90*s13*s23 + s23^2) - s12^3*(36*s13^3 + 
                s13^2*s23 + 21*s13*s23^2 - 36*s23^3) + 2*s13*s23^2*(
                26*s13^3 - 16*s13^2*s23 + 7*s13*s23^2 - 23*s23^3) + 
              s12*s23*(47*s13^4 - 59*s13^3*s23 + 63*s13^2*s23^2 + 
                79*s13*s23^3 - 36*s23^4)) + p2q*p3q^2*
             (2*s12^4*s13*(-6*s13 + 25*s23) + s12^3*(72*s13^3 + 
                76*s13^2*s23 - 15*s13*s23^2 + 60*s23^3) + s13*s23*(
                -29*s13^4 + 249*s13^3*s23 + 133*s13^2*s23^2 + 61*s13*s23^3 - 
                154*s23^4) + s12*s23*(302*s13^4 + 167*s13^3*s23 + 
                140*s13^2*s23^2 + 129*s13*s23^3 - 84*s23^4) + 
              s12^2*(84*s13^4 + 93*s13^3*s23 + 491*s13^2*s23^2 + 
                2*s13*s23^3 - 24*s23^4)) + p2q^2*p3q*(20*s12^4*s13*s23 + 
              3*s12^3*(8*s13^3 + s13^2*s23 + s13*s23^2 + 8*s23^3) - 
              2*s12^2*(18*s13^4 + 9*s13^3*s23 - 157*s13^2*s23^2 + 
                9*s13*s23^3 + 18*s23^4) - 4*s13*s23*(36*s13^4 - 
                25*s13^3*s23 - 50*s13^2*s23^2 - 25*s13*s23^3 + 36*s23^4) + 
              s12*(-60*s13^5 + 59*s13^4*s23 + 87*s13^3*s23^2 + 87*s13^2*
                 s23^3 + 59*s13*s23^4 - 60*s23^5)) - 
            p2q^3*(2*s12^3*s13*(7*s13 - s23)*s23 + 2*s12*s23*(8*s13^4 - 
                2*s13^3*s23 - 25*s13^2*s23^2 - 2*s13*s23^3 + 6*s23^4) + 
              s12^2*(12*s13^4 + 23*s13^3*s23 - 70*s13^2*s23^2 + 
                13*s13*s23^3 + 12*s23^4) + s13*(-12*s13^5 + 55*s13^4*s23 + 
                16*s13^3*s23^2 - 82*s13^2*s23^3 - 62*s13*s23^4 + 
                41*s23^5)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23^2*(p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       (ep*p3q*(s12 + s13 + s23)*(-10*p1q^6*s12*s23^2*(s13 + s23)*
           (s12^2 - s13^2 + 2*s12*s23 + s23^2) - (p2q + p3q)*
           (10*p2q^5*s12*s13^2*(s13 + s23)*(s12^2 + 2*s12*s13 + s13^2 - 
              s23^2) - 4*p3q^5*s12^2*(10*s12^4 + 8*s13*(s13 - s23)^2*s23 + 
              8*s12^3*(s13 + s23) + s12^2*(s13^2 + s23^2) + s12*(3*s13^3 - 
                5*s13^2*s23 - 5*s13*s23^2 + 3*s23^3)) - p2q^4*p3q*s13*
             (7*s13^2*(s13 - s23)*(s13 + s23)^2 + 10*s12^4*(4*s13 + 3*s23) + 
              s12^3*(69*s13^2 + 5*s13*s23 - 30*s23^2) + s12^2*(85*s13^3 + 
                11*s13^2*s23 - 50*s13*s23^2 + 10*s23^3) + s12*(63*s13^4 + 
                23*s13^3*s23 + 3*s13^2*s23^2 + 33*s13*s23^3 - 10*s23^4)) + 
            p2q*p3q^4*s12*(-40*s12^5 + s12^4*(69*s13 + 75*s23) + 
              s12^3*(35*s13^2 + 160*s13*s23 + 109*s23^2) + s12^2*(-57*s13^3 - 
                44*s13^2*s23 + 160*s13*s23^2 + 13*s23^3) + 
              s13*s23*(25*s13^3 - 39*s13^2*s23 - 25*s13*s23^2 + 39*s23^3) + 
              s12*(17*s13^4 - 184*s13^3*s23 + 132*s13^2*s23^2 - 
                32*s13*s23^3 + 19*s23^4)) - p2q^2*p3q^3*(20*s12^6 - 
              7*s13^2*(s13 - s23)*s23*(s13 + s23)^2 - 3*s12^5*(17*s13 + 
                19*s23) + s12^4*(83*s13^2 + 162*s13*s23 - 13*s23^2) + 
              s12^3*(37*s13^3 + 381*s13^2*s23 + 121*s13*s23^2 + 45*s23^3) + 
              s12^2*(-119*s13^4 + 125*s13^3*s23 + 49*s13^2*s23^2 + 
                156*s13*s23^3 - 19*s23^4) - 2*s12*s13*(s13^4 + 82*s13^3*s23 - 
                19*s13^2*s23^2 - 74*s13*s23^3 + 26*s23^4)) + 
            p2q^3*p3q^2*(10*s12^5*(5*s13 + 2*s23) + 2*s12^4*(19*s13^2 - 
                36*s13*s23 - 5*s23^2) - 7*(s13^3 - s13*s23^2)^2 + 
              s12^3*(129*s13^3 + 88*s13^2*s23 + 39*s13*s23^2 - 20*s23^3) + 
              s12^2*(97*s13^4 + 276*s13^3*s23 + 203*s13^2*s23^2 - 
                66*s13*s23^3 + 10*s23^4) + s12*s13*(-51*s13^4 + 176*s13^3*
                 s23 + 98*s13^2*s23^2 - 96*s13*s23^3 + 33*s23^4))) + 
          p1q^5*s23*(p3q*(-7*(s13 - s23)*s23^2*(s13 + s23)^2 + 
              10*s12^4*(3*s13 + 4*s23) + s12^3*(-30*s13^2 - 5*s13*s23 + 
                59*s23^2) + s12^2*(10*s13^3 - 50*s13^2*s23 - 9*s13*s23^2 + 
                65*s23^3) + s12*(-10*s13^4 + 43*s13^3*s23 + 13*s13^2*s23^2 + 
                13*s13*s23^3 + 53*s23^4)) + p2q*(20*s12^4*(s13 + s23) - 
              7*(s13 - s23)*s23^2*(s13 + s23)^2 + s12^3*(-20*s13^2 + 
                5*s13*s23 + 39*s23^2) + s12^2*(20*s13^3 + 10*s13^2*s23 + 
                61*s13*s23^2 + 85*s23^3) + s12*(-20*s13^4 + 33*s13^3*s23 + 
                43*s13^2*s23^2 + 63*s13*s23^3 + 73*s23^4))) + 
          p1q*(p2q^5*s13*(20*s12^4*(s13 + s23) + 7*s13^2*(s13 - s23)*
               (s13 + s23)^2 + s12^3*(39*s13^2 + 5*s13*s23 - 20*s23^2) + 
              s12^2*(85*s13^3 + 61*s13^2*s23 + 10*s13*s23^2 + 20*s23^3) + 
              s12*(73*s13^4 + 63*s13^3*s23 + 43*s13^2*s23^2 + 33*s13*s23^3 - 
                20*s23^4)) + p3q^5*s12*(80*s12^5 - s12^4*(43*s13 + 37*s23) - 
              s12^3*(105*s13^2 + 160*s13*s23 + 31*s23^2) - s12^2*(s13^3 + 
                180*s13^2*s23 - 24*s13*s23^2 - 69*s23^3) + 
              s13*s23*(-39*s13^3 + 25*s13^2*s23 + 39*s13*s23^2 - 25*s23^3) + 
              s12*(-19*s13^4 + 64*s13^3*s23 - 196*s13^2*s23^2 + 
                216*s13*s23^3 - 17*s23^4)) - p2q^4*p3q*
             (20*s12^5*(2*s13 + s23) + s12^4*(7*s13^2 - 127*s13*s23 - 
                30*s23^2) - 7*s13^2*(s13 + s23)^2*(3*s13^2 - 7*s13*s23 + 
                4*s23^2) + s12^3*(176*s13^3 + 273*s13^2*s23 + 145*s13*s23^2 - 
                10*s23^3) + s12^2*(-10*s13^4 + 386*s13^3*s23 + 227*s13^2*
                 s23^2 - 169*s13*s23^3 + 30*s23^4) + s12*(-240*s13^5 + 
                213*s13^4*s23 + 65*s13^3*s23^2 - 259*s13^2*s23^3 + 
                119*s13*s23^4 - 10*s23^5)) + p2q*p3q^4*(120*s12^6 - 
              308*s12^5*(s13 + s23) - 7*s13*s23*(s13^2 - s23^2)^2 - 
              8*s12^4*(11*s13^2 + 43*s13*s23 + 11*s23^2) + 
              4*s12^3*(55*s13^3 + 13*s13^2*s23 + 13*s13*s23^2 + 55*s23^3) + 
              s12^2*(-108*s13^4 + 489*s13^3*s23 - 442*s13^2*s23^2 + 
                489*s13*s23^3 - 108*s23^4) + 2*s12*(6*s13^5 - 133*s13^4*s23 + 
                111*s13^3*s23^2 + 111*s13^2*s23^3 - 133*s13*s23^4 + 
                6*s23^5)) + p2q^3*p3q^2*(20*s12^6 - 4*s12^5*(23*s13 + 
                31*s23) + s12^4*(288*s13^2 + 617*s13*s23 + 135*s23^2) + 
              7*s13*(s13 + s23)^2*(3*s13^3 - 11*s13^2*s23 + 10*s13*s23^2 - 
                2*s23^3) + s12^3*(-187*s13^3 + 299*s13^2*s23 + 91*s13*s23^2 + 
                85*s23^3) - s12^2*(365*s13^4 + 432*s13^3*s23 + 189*s13^2*
                 s23^2 - 421*s13*s23^3 + 171*s23^4) + s12*(243*s13^5 - 
                785*s13^4*s23 + 56*s13^3*s23^2 + 666*s13^2*s23^3 - 
                395*s13*s23^4 + 23*s23^5)) + p2q^2*p3q^3*(60*s12^6 - 
              s12^5*(317*s13 + 385*s23) + 2*s12^4*(166*s13^2 + 143*s13*s23 + 
                9*s23^2) + 7*s13*(s13 + s23)^2*(s13^3 - 6*s13^2*s23 + 
                8*s13*s23^2 - 3*s23^3) + s12^3*(249*s13^3 + 749*s13^2*s23 + 
                154*s13*s23^2 + 196*s23^3) + s12^2*(-379*s13^4 + 
                400*s13^3*s23 - 288*s13^2*s23^2 + 485*s13*s23^3 - 
                242*s23^4) + s12*(88*s13^5 - 746*s13^4*s23 + 331*s13^3*
                 s23^2 + 593*s13^2*s23^3 - 547*s13*s23^4 + 25*s23^5))) + 
          p1q^4*(-(p3q^2*(10*s12^5*(2*s13 + 5*s23) - 2*s12^4*(5*s13^2 + 
                 51*s13*s23 + s23^2) - 7*s23^2*(s13 + s23)^2*(s13^2 - 
                 3*s13*s23 + 2*s23^2) + s12^3*(-20*s13^3 + 69*s13^2*s23 + 
                 83*s13*s23^2 + 60*s23^3) + s12*s23*(43*s13^4 - 129*s13^3*
                  s23 + 95*s13^2*s23^2 + 153*s13*s23^3 - 114*s23^4) + s12^2*
                (10*s13^4 - 76*s13^3*s23 + 253*s13^2*s23^2 + 265*s13*s23^3 + 
                 12*s23^4))) - p2q*p3q*(20*s12^5*(s13 + 2*s23) - 
              7*s23^2*(s13 + s23)^2*(4*s13^2 - 7*s13*s23 + 3*s23^2) + 
              s12^4*(-30*s13^2 - 127*s13*s23 + 7*s23^2) + s12^3*(-10*s13^3 + 
                145*s13^2*s23 + 273*s13*s23^2 + 176*s23^3) + 
              s12^2*(30*s13^4 - 169*s13^3*s23 + 227*s13^2*s23^2 + 
                386*s13*s23^3 - 10*s23^4) + s12*(-10*s13^5 + 119*s13^4*s23 - 
                259*s13^3*s23^2 + 65*s13^2*s23^3 + 213*s13*s23^4 - 
                240*s23^5)) + p2q^2*(7*s23^2*(s13 + s23)^2*(3*s13^2 - 
                4*s13*s23 + s23^2) + s12^4*(20*s13^2 + 55*s13*s23 + 
                21*s23^2) - 2*s12^3*(5*s13^3 + 23*s13^2*s23 + 45*s13*s23^2 + 
                13*s23^3) + s12^2*(-20*s13^4 + 63*s13^3*s23 - 4*s13^2*s23^2 - 
                71*s13*s23^3 + 72*s23^4) + 2*s12*(5*s13^5 - 48*s13^4*s23 + 
                35*s13^3*s23^2 - 15*s13^2*s23^3 - 40*s13*s23^4 + 
                63*s23^5))) + p1q^2*(p3q^4*(60*s12^6 + 7*s13*(s13 - s23)*s23^
                2*(s13 + s23)^2 - 12*s12^5*(11*s13 + 10*s23) + 
              s12^4*(-122*s13^2 + 2*s13*s23 + 48*s23^2) + s12^3*(32*s13^3 - 
                39*s13^2*s23 + 425*s13*s23^2 + 94*s23^3) + s12^2*(-38*s13^4 + 
                188*s13^3*s23 - 83*s13^2*s23^2 + 309*s13*s23^3 - 136*s23^4) + 
              s12*s23*(-91*s13^4 + 173*s13^3*s23 + 77*s13^2*s23^2 - 
                189*s13*s23^3 - 2*s23^4)) + p2q^4*(7*s13^2*(s13 + s23)^2*(
                s13^2 - 4*s13*s23 + 3*s23^2) + s12^4*(21*s13^2 + 55*s13*s23 + 
                20*s23^2) - 2*s12^3*(13*s13^3 + 45*s13^2*s23 + 23*s13*s23^2 + 
                5*s23^3) + s12^2*(72*s13^4 - 71*s13^3*s23 - 4*s13^2*s23^2 + 
                63*s13*s23^3 - 20*s23^4) + 2*s12*(63*s13^5 - 40*s13^4*s23 - 
                15*s13^3*s23^2 + 35*s13^2*s23^3 - 48*s13*s23^4 + 5*s23^5)) - 
            p2q^3*p3q*(s12^5*(21*s13 + 47*s23) - s12^4*(234*s13^2 + 
                443*s13*s23 + 159*s23^2) - 7*s13*(s13 + s23)^2*(2*s13^3 - 
                11*s13^2*s23 + 14*s13*s23^2 - 5*s23^3) + s12^3*(130*s13^3 + 
                25*s13^2*s23 + 52*s13*s23^2 + 65*s23^3) + s12^2*(132*s13^4 + 
                220*s13^3*s23 - 87*s13^2*s23^2 - 140*s13*s23^3 + 195*s23^4) - 
              s12*(267*s13^5 - 614*s13^4*s23 + 160*s13^3*s23^2 + 
                426*s13^2*s23^3 - 539*s13*s23^4 + 76*s23^5)) + 
            p2q^2*p3q^2*(-274*s12^5*(s13 + s23) + 7*(s13^2 - s23^2)^2*(
                s13^2 - 8*s13*s23 + s23^2) + s12^4*(353*s13^2 + 602*s13*s23 + 
                353*s23^2) + 12*s12^3*(5*s13^3 + 19*s13^2*s23 + 
                19*s13*s23^2 + 5*s23^3) - 2*s12^2*(204*s13^4 - 89*s13^3*s23 + 
                42*s13^2*s23^2 - 89*s13*s23^3 + 204*s23^4) + 
              2*s12*(83*s13^5 - 485*s13^4*s23 + 330*s13^3*s23^2 + 
                330*s13^2*s23^3 - 485*s13*s23^4 + 83*s23^5)) + 
            p2q*p3q^3*(60*s12^6 - s12^5*(385*s13 + 317*s23) + 
              2*s12^4*(9*s13^2 + 143*s13*s23 + 166*s23^2) + 7*s23*(s13 + s23)^
                2*(-3*s13^3 + 8*s13^2*s23 - 6*s13*s23^2 + s23^3) + 
              s12^3*(196*s13^3 + 154*s13^2*s23 + 749*s13*s23^2 + 249*s23^3) + 
              s12^2*(-242*s13^4 + 485*s13^3*s23 - 288*s13^2*s23^2 + 
                400*s13*s23^3 - 379*s23^4) + s12*(25*s13^5 - 547*s13^4*s23 + 
                593*s13^3*s23^2 + 331*s13^2*s23^3 - 746*s13*s23^4 + 
                88*s23^5))) + p1q^3*(p3q^3*(20*s12^6 - s12^5*(77*s13 + 
                101*s23) - 3*s12^4*(s13^2 - 78*s13*s23 - 15*s23^2) + 
              7*s23^2*(s13 + s23)^2*(2*s13^2 - 3*s13*s23 + s23^2) + 
              s12^3*(65*s13^3 + 82*s13^2*s23 + 293*s13*s23^2 - 92*s23^3) + 
              s12*s23*(-85*s13^4 + 244*s13^3*s23 - 60*s13^2*s23^2 - 
                340*s13*s23^3 + 49*s23^4) - s12^2*(29*s13^4 - 222*s13^3*s23 + 
                154*s13^2*s23^2 + 151*s13*s23^3 + 216*s23^4)) + 
            p2q^3*(-21*s13*s23*(s13^2 - s23^2)^2 + 7*s12^4*(3*s13^2 + 
                10*s13*s23 + 3*s23^2) - s12^3*(85*s13^3 + 131*s13^2*s23 + 
                131*s13*s23^2 + 85*s23^3) - s12^2*(53*s13^4 + 109*s13^3*s23 + 
                28*s13^2*s23^2 + 109*s13*s23^3 + 53*s23^4) + s12*(53*s13^5 - 
                229*s13^4*s23 - 16*s13^3*s23^2 - 16*s13^2*s23^3 - 
                229*s13*s23^4 + 53*s23^5)) + p2q*p3q^2*(20*s12^6 - 
              4*s12^5*(31*s13 + 23*s23) + s12^4*(135*s13^2 + 617*s13*s23 + 
                288*s23^2) + s12^3*(85*s13^3 + 91*s13^2*s23 + 299*s13*s23^2 - 
                187*s23^3) + 7*s23*(s13 + s23)^2*(-2*s13^3 + 10*s13^2*s23 - 
                11*s13*s23^2 + 3*s23^3) - s12^2*(171*s13^4 - 421*s13^3*s23 + 
                189*s13^2*s23^2 + 432*s13*s23^3 + 365*s23^4) + 
              s12*(23*s13^5 - 395*s13^4*s23 + 666*s13^3*s23^2 + 
                56*s13^2*s23^3 - 785*s13*s23^4 + 243*s23^5)) - 
            p2q^2*p3q*(s12^5*(47*s13 + 21*s23) - s12^4*(159*s13^2 + 
                443*s13*s23 + 234*s23^2) + 7*s23*(s13 + s23)^2*(5*s13^3 - 
                14*s13^2*s23 + 11*s13*s23^2 - 2*s23^3) + s12^3*(65*s13^3 + 
                52*s13^2*s23 + 25*s13*s23^2 + 130*s23^3) + s12^2*(195*s13^4 - 
                140*s13^3*s23 - 87*s13^2*s23^2 + 220*s13*s23^3 + 132*s23^4) - 
              s12*(76*s13^5 - 539*s13^4*s23 + 426*s13^3*s23^2 + 160*s13^2*
                 s23^3 - 614*s13*s23^4 + 267*s23^5)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p3]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     (-1/108*(ep*(s12 + s13 + s23)*(p1q^2*s23*(s12 + s23)*(15*s12 + 20*s13 + 
             6*s23) + p2q^2*s13^2*(43*s12 + 20*s13 + 6*s23) + 
           p1q*p3q*(s12 + s23)*(39*s12^2 + 16*s12*s13 + 63*s12*s23 + 
             20*s13*s23 + 6*s23^2) - p2q*p3q*s13*(82*s12^2 + 36*s12*s13 + 
             97*s12*s23 + 20*s13*s23 + 6*s23^2) - p1q*p2q*s13*
            (43*s12^2 + 20*s12*s13 + 64*s12*s23 + 40*s13*s23 + 12*s23^2) + 
           p3q^2*s12*(s12 + s23)*(39*s12 + 16*(s13 + 3*s23))))/
         ((p1q + p2q + p3q)*s12*s13*s23) + (ep^2*(s12 + s13 + s23)*
         (p1q^2*(9*s12 - 10*s13)*s23*(s12 + s23) - 
          (p3q*s12*(9*s12 + 8*s13) - p2q*s13*(11*s12 + 10*s13))*
           (-(p2q*s13) + p3q*(s12 + s23)) + 
          p1q*(-(p3q*(s12 + s23)*(9*s12^2 + 8*s12*s13 - 9*s12*s23 + 10*s13*
                s23)) + p2q*s13*(11*s12^2 + 20*s13*s23 + 2*s12*(5*s13 + 
                s23)))))/(54*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (-1/108*(ep*(s12 + s13 + s23)*(p2q^2*s13*(s12 + s13)*(15*s12 + 6*s13 + 
             20*s23) + p1q^2*s23^2*(43*s12 + 6*s13 + 20*s23) + 
           p2q*p3q*(s12 + s13)*(39*s12^2 + 63*s12*s13 + 6*s13^2 + 
             16*s12*s23 + 20*s13*s23) - p1q*p3q*s23*(82*s12^2 + 97*s12*s13 + 
             6*s13^2 + 36*s12*s23 + 20*s13*s23) - p1q*p2q*s23*
            (43*s12^2 + 64*s12*s13 + 12*s13^2 + 20*s12*s23 + 40*s13*s23) + 
           p3q^2*s12*(s12 + s13)*(39*s12 + 16*(3*s13 + s23))))/
         ((p1q + p2q + p3q)*s12*s13*s23) + (ep^2*(s12 + s13 + s23)*
         (p2q^2*s13*(s12 + s13)*(9*s12 - 10*s23) - 
          (p3q*(s12 + s13) - p1q*s23)*(p3q*s12*(9*s12 + 8*s23) - 
            p1q*s23*(11*s12 + 10*s23)) + 
          p2q*(-(p3q*(s12 + s13)*(9*s12^2 - 9*s12*s13 + 8*s12*s23 + 10*s13*
                s23)) + p1q*s23*(11*s12^2 + 20*s13*s23 + 2*s12*(s13 + 
                5*s23)))))/(54*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep^2*(p2q + p3q)^2*(s12 + s13 + s23)*(p2q*s13*(3*s12 + 3*s13 - s23) + 
          p1q*s23*(s12 - 3*s13 + s23) - p3q*(s12^2 + s12*(-s13 + s23) + 
            2*s13*(-s13 + s23))))/(54*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       ((s12 + s13 + s23)*(-2*p1q^4*(p2q + p3q)*(6*s13 - s23)*s23^2 + 
          p1q^3*s23*(2*p2q*p3q*(6*s12*s13 + 6*s13^2 - 2*s12*s23 - 
              26*s13*s23 + 3*s23^2) + p3q^2*(24*s12*s13 + 12*s13^2 - 
              3*s12*s23 - 19*s13*s23 + 3*s23^2) + p2q^2*(12*s12*s13 + 
              24*s13^2 - s12*s23 - 9*s13*s23 + 3*s23^2)) - 
          (p2q + p3q)^2*(p2q^3*s13*s23*(s12 + s13 + s23) + 
            2*p3q^3*(s12^2*(6*s13 - s23) - 3*s13^2*s23) - 
            2*p2q*p3q^2*(s12^2*s23 + 3*s13^2*s23 + 2*s12*s13*(6*s13 + s23)) + 
            p2q^2*p3q*(12*s13^3 + s12*s23*(-s12 + s23) + s13*s23*(-5*s12 + 
                2*s23))) + p1q*(p2q + p3q)*
           (p2q^3*(-12*s13^3 + s13*(4*s12 - s23)*s23 + s23^2*(-s12 + s23)) + 
            2*p3q^3*(9*s13^2*s23 + 2*s12*(4*s13 - s23)*s23 + s12^2*(-12*s13 + 
                s23)) + p2q^2*p3q*(-24*s13^3 + 2*s12^2*s23 + 26*s13^2*s23 - 
              5*s13*s23^2 + s23^3 + s12*(24*s13^2 + 20*s13*s23 - 5*s23^2)) + 
            2*p2q*p3q^2*(s13*(16*s13 - 7*s23)*s23 + s12^2*(-6*s13 + 2*s23) + 
              s12*(24*s13^2 + 10*s13*s23 - 3*s23^2))) + 
          p1q^2*(p2q^3*(-12*s13^3 + 19*s13^2*s23 + s13*(11*s12 - 3*s23)*s23 + 
              2*s23^2*(-s12 + s23)) + p2q^2*p3q*(-12*s13^3 + s12^2*s23 + 
              62*s13^2*s23 - 28*s13*s23^2 + 4*s23^3 + 3*s12*(8*s13^2 + 
                13*s13*s23 - 3*s23^2)) + p3q^3*(s12*(41*s13 - 5*s23)*s23 + 
              s12^2*(-12*s13 + s23) + 2*s23*(12*s13^2 - 3*s13*s23 + s23^2)) + 
            p2q*p3q^2*(2*s12^2*(-6*s13 + s23) + 3*s12*(8*s13^2 + 15*s13*s23 - 
                4*s23^2) + s23*(43*s13^2 - 55*s13*s23 + 4*s23^2)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (ep*(2*p1q^3*(p3q*(3*s12 + s13 - 5*s23) + p2q*(s12 + 3*s13 - s23))*s23*
           (s12 + s13 + s23) - 4*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q*(s12 + s13 + s23)*(-(p2q*p3q^2*(50*s12^2 + 5*s13^2 + 5*s12*
                (7*s13 - 4*s23) + 117*s13*s23 - 38*s23^2)) - 
            p3q^3*(27*s12^2 + 27*s12*s13 + 8*s13^2 - 16*s12*s23 + 
              45*s13*s23 - 19*s23^2) + p2q^3*(15*s12*s13 + 11*s13^2 + 
              2*s12*s23 - 21*s13*s23 - 2*s23^2) + p2q^2*p3q*
             (-23*s12^2 + 7*s12*s13 + 14*s13^2 + 10*s12*s23 - 89*s13*s23 + 
              17*s23^2)) + p1q^2*(s12 + s13 + s23)*
           (p3q^2*(-2*s12^2 + 2*s12*s13 + 37*s12*s23 - 7*s13*s23 + 
              11*s23^2) + p2q^2*(2*s12*s13 - 2*s13^2 + 23*s12*s23 - 
              9*s13*s23 + 19*s23^2) - 2*p2q*p3q*(s12^2 + s13^2 + 8*s13*s23 - 
              17*s23^2 - 2*s12*(s13 + 13*s23))) + (p2q + p3q)*
           (2*p2q^3*s13*(s12 + s13 + s23)^2 - p3q^3*(27*s12^3 + 
              s12^2*(58*s13 + 46*s23) + 2*s13*(4*s13^2 + 23*s13*s23 + 
                19*s23^2) + s12*(39*s13^2 + 88*s13*s23 + 19*s23^2)) - 
            p2q*p3q^2*(27*s12^3 + s12^2*(39*s13 + 46*s23) + s12*(5*s13^2 + 
                88*s13*s23 + 19*s23^2) + s13*(-7*s13^2 + 50*s13*s23 + 
                57*s23^2)) + p2q^2*p3q*(-2*s12^3 + 15*s12^2*s13 + 
              2*s12*(16*s13^2 + 2*s13*s23 + s23^2) + 15*(s13^3 - 
                s13*s23^2)))))/(108*(p1q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p2 + p3]*Eik[k - p1]] + 
     ((ep*(2*p2q^4*s13^2*(s12 + s13 + s23) - p1q^4*s23*(s12 + s13 + s23)^2 + 
          p2q^3*p3q*s13*(-3*s12^2 + 5*s13^2 + 2*s12*(s13 - 2*s23) + 
            4*s13*s23 - s23^2) + p2q^2*p3q^2*(s12^3 - 6*s12^2*s13 - 
            s12*(s13^2 - 9*s13*s23 + s23^2) + s13*(6*s13^2 + 23*s13*s23 + 
              17*s23^2)) + p2q*p3q^3*(2*s12^3 + 2*s13^3 + 15*s13^2*s23 - 
            8*s13*s23^2 - 21*s23^3 - 3*s12^2*(2*s13 + 7*s23) - 
            2*s12*(3*s13^2 + 9*s13*s23 + 22*s23^2)) + 
          p3q^4*(2*s12^3 - 19*s12^2*s23 - s23*(4*s13^2 + 25*s13*s23 + 
              21*s23^2) - s12*(2*s13^2 + 27*s13*s23 + 42*s23^2)) - 
          p1q*(s12 + s13 + s23)*(p2q^3*s13*(s12 - s13 + 3*s23) - 
            p2q^2*p3q*(s12^2 - 3*s12*s13 + 6*s13^2 - 2*s12*s23 + 35*s13*s23 + 
              s23^2) + p2q*p3q^2*(-2*s12^2 + 10*s12*s13 - 4*s13^2 + 
              69*s12*s23 - 28*s13*s23 + 61*s23^2) + 
            p3q^3*(-4*s12^2 + 4*s12*s13 + 65*s12*s23 + 10*s13*s23 + 
              63*s23^2)) + p1q^3*(s12 + s13 + s23)*
           (-(p2q*(-s13^2 + s13*s23 + 19*s23^2 + s12*(s13 + 21*s23))) + 
            p3q*(s12^2 - s23*(5*s13 + 22*s23) - s12*(s13 + 23*s23))) + 
          p1q^2*(s12 + s13 + s23)*(p2q*p3q*(-5*s12*s13 + 3*s13^2 - 
              67*s12*s23 + 12*s13*s23 - 59*s23^2) + 
            p2q^2*(2*s13^2 + 18*s13*s23 + s23*(-s12 + s23)) + 
            p3q^2*(3*s12^2 - 3*s12*(s13 + 22*s23) - s23*(10*s13 + 63*s23)))))/
        (54*(p2q + p3q)*(p1q + p2q + p3q)*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (p1q^5*s13*s23*(s12 + s13 + s23)^2 - 
         p1q^4*(s12 + s13 + s23)*(p2q*(s13^3 - s13^2*s23 + 84*s23^3 - 
             s12*s13*(s13 + 44*s23)) + p3q*(s12^2*s13 - 
             s12*s13*(s13 + 45*s23) - 2*s23*(2*s13^2 + s13*s23 - 42*
                s23^2))) + p1q^3*(s12 + s13 + s23)*
          (p2q^2*(-2*s13^3 + 3*s13^2*s23 + 125*s13*s23^2 - 84*s23^3 + 
             s12*s13*(2*s13 + 85*s23)) - 2*p2q*p3q*(s12^2*s13 + s13^3 - 
             3*s13^2*s23 - 83*s13*s23^2 + 126*s23^3 - 
             3*s12*(s13^2 + 36*s13*s23 + 28*s23^2)) + 
           p3q^2*(-4*s12^2*s13 + s23*(5*s13^2 + 43*s13*s23 - 168*s23^2) + 
             s12*(2*s13^2 + 131*s13*s23 + 168*s23^2))) - 
         p3q*(2*p2q^4*s13^2*(s12 + s13 + s23)*(s13 + 42*s23) + 
           p2q^3*p3q*s13*(3*s13^3 + 128*s13^2*s23 + 41*s13*s23^2 - 84*s23^3 - 
             3*s12^2*(s13 + 56*s23) - 2*s12*s23*(23*s13 + 126*s23)) + 
           2*p3q^4*(-21*s12*s13*s23^2 - 21*s13*s23^2*(s13 + s23) + 
             s12^3*(s13 + 42*s23) + s12^2*(s13^2 + 43*s13*s23 + 42*s23^2)) + 
           2*p2q*p3q^3*(-63*s13*s23^2*(s13 + s23) + s12^3*(s13 + 84*s23) + 
             s12^2*(-s13^2 + 21*s13*s23 + 84*s23^2) - 
             s12*s13*(2*s13^2 + 66*s13*s23 + 127*s23^2)) + 
           p2q^2*p3q^2*(s12^3*(s13 + 84*s23) + s12^2*(-4*s13^2 - 210*s13*
                s23 + 84*s23^2) - s12*s13*(3*s13^2 + 258*s13*s23 + 463*
                s23^2) + 2*s13*(s13^3 + 22*s13^2*s23 - 63*s13*s23^2 - 84*
                s23^3))) + p1q^2*(s12 + s13 + s23)*
          (p2q^3*s13*(s12*(s13 + 84*s23) - 3*(s13^2 + 13*s13*s23 - 56*
                s23^2)) + p3q^3*(-7*s12^2*(s13 + 12*s23) + 
             2*s23*(s13^2 + 63*s13*s23 - 42*s23^2) + s12*(s13^2 + 131*s13*
                s23 + 336*s23^2)) - p2q*p3q^2*(s13^3 + 77*s13^2*s23 - 
             374*s13*s23^2 + 168*s23^3 + 6*s12^2*(s13 + 14*s23) - 
             s12*(11*s13^2 + 344*s13*s23 + 504*s23^2)) + 
           p2q^2*p3q*(-(s12^2*s13) + 3*s12*(3*s13^2 + 99*s13*s23 + 56*
                s23^2) - 2*(2*s13^3 + 58*s13^2*s23 - 209*s13*s23^2 + 42*
                s23^3))) + p1q*(-2*p2q^4*s13^2*(s12 + s13 + s23)*
            (s13 + 42*s23) - 2*p2q^3*p3q*s13*(3*s13^3 + 169*s13^2*s23 + 
             124*s13*s23^2 - 42*s23^3 - 2*s12^2*(s13 + 21*s23) + 
             s12*(s13^2 + 122*s13*s23 - 84*s23^2)) - 
           2*p3q^4*(-63*s13*s23^2*(s13 + s23) + 3*s12^3*(s13 + 28*s23) + 
             s12^2*s13*(3*s13 + 65*s23) - s12*s23*(22*s13^2 + 169*s13*s23 + 
               84*s23^2)) + p2q^2*p3q^2*(-2*s12^3*(s13 + 42*s23) + 
             s12^2*(10*s13^2 + 253*s13*s23 + 84*s23^2) - 
             s13*(4*s13^3 + 333*s13^2*s23 + 36*s13*s23^2 - 293*s23^3) + 
             2*s12*(4*s13^3 + 11*s13^2*s23 + 400*s13*s23^2 + 84*s23^3)) + 
           2*p2q*p3q^3*(-3*s12^3*(s13 + 42*s23) + s12^2*(2*s13^2 + 21*s13*
                s23 + 42*s23^2) + s13*s23*(-41*s13^2 + 126*s13*s23 + 167*
                s23^2) + s12*(5*s13^3 + 114*s13^2*s23 + 485*s13*s23^2 + 168*
                s23^3))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k - p1]] + 
     ((ep^2*(p1q + p3q)^2*(s12 + s13 + s23)*(-(p2q*s13*(s12 + s13 - 3*s23)) + 
          p1q*(-3*s12 + s13 - 3*s23)*s23 + p3q*(s12^2 + s12*(s13 - s23) + 
            2*(s13 - s23)*s23)))/(54*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(4*p2q^4*s13^2*(s12 + s13 + s23) - 2*p1q^4*s23*(s12 + s13 + s23)^
            2 - 2*p2q^3*p3q*s13*(3*s12^2 - 2*s12*s13 - 5*s13^2 + 4*s12*s23 - 
            4*s13*s23 + s23^2) + p1q^3*(s12 + s13 + s23)*
           (p3q*(2*s12^2 - 2*s12*s13 - 19*s12*s23 + 13*s13*s23 - 17*s23^2) + 
            p2q*(-2*s12*s13 + 2*s13^2 - 15*s12*s23 + 21*s13*s23 - 
              11*s23^2)) + p2q*p3q^3*(27*s12^3 - 19*s13^3 + 26*s13^2*s23 + 
            53*s13*s23^2 + 8*s23^3 + s12^2*(11*s13 + 54*s23) - 
            7*s12*(5*s13^2 - 8*s13*s23 - 5*s23^2)) + p1q^2*(s12 + s13 + s23)*
           (p3q^2*(29*s12^2 + 17*s12*s13 - 5*s12*s23 + 72*s13*s23 - 
              22*s23^2) + p2q*p3q*(23*s12^2 - 10*s12*s13 - 17*s13^2 - 
              7*s12*s23 + 89*s13*s23 - 14*s23^2) + p2q^2*(-23*s12*s13 - 
              19*s13^2 - 2*s12*s23 + 9*s13*s23 + 2*s23^2)) + 
          p2q^2*p3q^2*(2*s12^3 - 35*s12^2*s13 - 2*s12*(24*s13^2 + 
              16*s13*s23 + s23^2) + s13*(-11*s13^2 - 4*s13*s23 + 7*s23^2)) + 
          p3q^4*(27*s12^3 + s12^2*(46*s13 + 58*s23) + 
            2*s23*(19*s13^2 + 23*s13*s23 + 4*s23^2) + 
            s12*(19*s13^2 + 88*s13*s23 + 39*s23^2)) + p1q*(s12 + s13 + s23)*
           (2*p2q^3*s13*(-s12 + s13 - 3*s23) + p3q^3*(54*s12^2 + 38*s12*s13 + 
              43*s12*s23 + 95*s13*s23 + s23^2) + p2q*p3q^2*
             (50*s12^2 - 20*s12*s13 - 38*s13^2 + 35*s12*s23 + 117*s13*s23 + 
              5*s23^2) + 2*p2q^2*p3q*(s12^2 - 17*s13^2 + 8*s13*s23 + s23^2 - 
              2*s12*(13*s13 + s23)))))/(108*(p2q + p3q)*(p1q + p2q + p3q)*s13*
         s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (-(p1q^5*s13*s23*(s12 + s13 + s23)^2) + p1q^4*(s12 + s13 + s23)*
          (p2q*(s13^3 - s12*s13*(s13 - 4*s23) - s13^2*s23 - 12*s23^3) + 
           p3q*(s12^2*s13 - s12*s13*(s13 - 3*s23) - 2*s23*(2*s13^2 + s13*
                s23 + 6*s23^2))) + p1q^3*(s12 + s13 + s23)*
          (p2q^2*(2*s13^3 - 3*s13^2*s23 + 19*s13*s23^2 - 12*s23^3 + 
             s12*s13*(-2*s13 + 11*s23)) + 2*p2q*p3q*(s12^2*s13 + s13^3 - 
             3*s13^2*s23 + 13*s13*s23^2 - 18*s23^3 - 3*s12*(s13^2 - 4*s13*
                s23 - 4*s23^2)) + p3q^2*(4*s12^2*s13 + 
             s23*(-5*s13^2 + 5*s13*s23 - 24*s23^2) + s12*(-2*s13^2 + 13*s13*
                s23 + 24*s23^2))) + p1q^2*(s12 + s13 + s23)*
          (p2q^3*s13*(-(s12*s13) + 3*s13^2 + 12*s12*s23 - 9*s13*s23 + 
             24*s23^2) + p2q^2*p3q*(s12^2*s13 + 4*s13^3 - 28*s13^2*s23 + 
             62*s13*s23^2 - 12*s23^3 + s12*(-9*s13^2 + 39*s13*s23 + 24*
                s23^2)) + p3q^3*(s12^2*(7*s13 - 12*s23) - 
             2*s23*(s13^2 - 9*s13*s23 + 6*s23^2) + s12*(-s13^2 + 13*s13*s23 + 
               48*s23^2)) + p2q*p3q^2*(s13^3 + 6*s12^2*(s13 - 2*s23) - 
             19*s13^2*s23 + 58*s13*s23^2 - 24*s23^3 + 
             s12*(-11*s13^2 + 40*s13*s23 + 72*s23^2))) + 
         p3q*(2*p2q^4*s13^2*(s13 - 6*s23)*(s12 + s13 + s23) + 
           p2q^3*p3q*s13*(3*s13^3 - 3*s12^2*(s13 - 8*s23) - 16*s13^2*s23 - 
             7*s13*s23^2 + 12*s23^3 + 2*s12*s23*(s13 + 18*s23)) + 
           2*p3q^4*(s12^3*(s13 - 6*s23) + 3*s12*s13*s23^2 + 
             3*s13*s23^2*(s13 + s23) + s12^2*(s13^2 - 5*s13*s23 - 6*s23^2)) + 
           2*p2q*p3q^3*(s12^3*(s13 - 12*s23) + 9*s13*s23^2*(s13 + s23) - 
             s12^2*(s13^2 + 3*s13*s23 + 12*s23^2) + s12*s13*(-2*s13^2 + 6*s13*
                s23 + 17*s23^2)) + p2q^2*p3q^2*(s12^3*(s13 - 12*s23) - 
             2*s12^2*(2*s13^2 - 15*s13*s23 + 6*s23^2) + 
             s12*s13*(-3*s13^2 + 30*s13*s23 + 65*s23^2) + 
             2*s13*(s13^3 - 2*s13^2*s23 + 9*s13*s23^2 + 12*s23^3))) + 
         p1q*(2*p2q^4*s13^2*(s13 - 6*s23)*(s12 + s13 + s23) + 
           2*p2q^3*p3q*s13*(3*s13^3 - 2*s12^2*(s13 - 3*s23) - 23*s13^2*s23 - 
             20*s13*s23^2 + 6*s23^3 + s12*(s13^2 - 22*s13*s23 + 12*s23^2)) + 
           2*p3q^4*(s12^2*s13*(3*s13 - 7*s23) + 3*s12^3*(s13 - 4*s23) + 
             9*s13*s23^2*(s13 + s23) + s12*s23*(2*s13^2 + 23*s13*s23 + 12*
                s23^2)) + 2*p2q*p3q^3*(3*s12^3*(s13 - 6*s23) + 
             s12^2*(-2*s13^2 + 3*s13*s23 + 6*s23^2) + 
             s13*s23*(-7*s13^2 + 18*s13*s23 + 25*s23^2) + 
             s12*(-5*s13^3 + 6*s13^2*s23 + 67*s13*s23^2 + 24*s23^3)) + 
           p2q^2*p3q^2*(2*s12^3*(s13 - 6*s23) + s12^2*(-10*s13^2 + 35*s13*
                s23 + 12*s23^2) + s12*(-8*s13^3 - 22*s13^2*s23 + 112*s13*
                s23^2 + 24*s23^3) + s13*(4*s13^3 - 51*s13^2*s23 - 12*s13*
                s23^2 + 43*s23^3))))/(54*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((ep*(p1q^3*(p3q*(3*s12 + s13 - 5*s23) + p2q*(s12 + 3*s13 - s23))*s23*
           (s12 + s13 + s23) - 2*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q*(s12 + s13 + s23)*(p2q*p3q^2*(-2*s12^2 + 69*s12*s13 + 
              61*s13^2 + 10*s12*s23 - 28*s13*s23 - 4*s23^2) + 
            p2q^2*p3q*(67*s12*s13 + 59*s13^2 + 5*s12*s23 - 12*s13*s23 - 
              3*s23^2) + p3q^3*(-2*s12^2 + 23*s12*s13 + 21*s13^2 + 
              8*s12*s23 - 13*s13*s23 - 2*s23^2) + p2q^3*(19*s13^2 + s13*s23 - 
              s23^2 + s12*(21*s13 + s23))) - p1q^2*(s12 + s13 + s23)*
           (p2q^2*(-(s12*s13) + s13^2 + 18*s13*s23 + 2*s23^2) + 
            p2q*p3q*(s12^2 - 2*s12*s13 + s13^2 - 3*s12*s23 + 35*s13*s23 + 
              6*s23^2) + p3q^2*(s12^2 + s23*(17*s13 + 6*s23) - 
              s12*(s13 + 7*s23))) + (p2q + p3q)*
           (p2q^3*s13*(s12 + s13 + s23)^2 + 2*p2q*p3q^2*(-s12^3 + 
              21*s12^2*s13 + 3*s13*(7*s13^2 + 8*s13*s23 + s23^2) + 
              s12*(43*s13^2 + 26*s13*s23 + s23^2)) + p2q^2*p3q*
             (-s12^3 + 21*s12^2*s13 + s12*(43*s13^2 + 27*s13*s23 + s23^2) + 
              s13*(21*s13^2 + 25*s13*s23 + 4*s23^2)) + 
            p3q^3*(-2*s12^3 + 19*s12^2*s13 + s12*(42*s13^2 + 27*s13*s23 + 
                2*s23^2) + s13*(21*s13^2 + 25*s13*s23 + 4*s23^2)))))/
        (54*(p1q + p3q)*(p1q + p2q + p3q)*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) - 
       ((s12 + s13 + s23)*(2*p1q^4*(p2q + p3q)*s23^2*(42*s13 + s23) - 
          p1q^3*s23*(2*p2q*p3q*(42*s13^2 - 166*s13*s23 - 3*s23^2 + 
              2*s12*(21*s13 + s23)) + p3q^2*(84*s13^2 - 125*s13*s23 - 
              3*s23^2 + 3*s12*(56*s13 + s23)) + p2q^2*(168*s13^2 - 
              39*s13*s23 - 3*s23^2 + s12*(84*s13 + s23))) + 
          (p2q + p3q)^2*(-(p2q^3*s13*s23*(s12 + s13 + s23)) + 
            2*p3q^3*(-21*s13^2*s23 + s12^2*(42*s13 + s23)) + 
            p2q^2*p3q*(84*s13^3 + s12*(s12 - s23)*s23 - s13*s23*(43*s12 + 
                2*s23)) + 2*p2q*p3q^2*(s12^2*s23 - 21*s13^2*s23 - 
              2*s12*s13*(42*s13 + 11*s23))) - p1q*(p2q + p3q)*
           (p2q^3*(-84*s13^3 + (s12 - s23)*s23^2 + s13*s23*(44*s12 + s23)) + 
            2*p3q^3*(63*s13^2*s23 + 2*s12*s23*(32*s13 + s23) - 
              s12^2*(84*s13 + s23)) + 2*p2q*p3q^2*(s13*(104*s13 - 41*s23)*
               s23 - 2*s12^2*(21*s13 + s23) + s12*(168*s13^2 + 86*s13*s23 + 
                3*s23^2)) + p2q^2*p3q*(-168*s13^3 - 2*s12^2*s23 + 
              166*s13^2*s23 + 5*s13*s23^2 - s23^3 + s12*(168*s13^2 + 
                172*s13*s23 + 5*s23^2))) - 
          p1q^2*(p2q^3*(-84*s13^3 + 125*s13^2*s23 + 2*(s12 - s23)*s23^2 + 
              s13*s23*(85*s12 + 3*s23)) - p3q^3*(-5*s12*s23*(59*s13 + s23) + 
              s12^2*(84*s13 + s23) + 2*s23*(-84*s13^2 + 21*s13*s23 + 
                s23^2)) + p2q*p3q^2*(-2*s12^2*(42*s13 + s23) + 
              s23*(293*s13^2 - 329*s13*s23 - 4*s23^2) + 3*s12*(56*s13^2 + 
                113*s13*s23 + 4*s23^2)) + p2q^2*p3q*(-(s12^2*s23) + 
              3*s12*(56*s13^2 + 99*s13*s23 + 3*s23^2) - 2*(42*s13^3 - 
                209*s13^2*s23 + 58*s13*s23^2 + 2*s23^3)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((-7*ep*(p1q + p2q)^2*(s12 + s13 + s23)*
         (p2q*s13*(s12*s13 + s13^2 + 3*s12*s23 - s23^2) + 
          p1q*s23*(3*s12*s13 - s13^2 + s12*s23 + s23^2) - 
          p3q*s12*((s13 - s23)^2 + s12*(s13 + s23))))/(54*(p1q + p2q + p3q)*
         s12*s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (5*ep^2*(p1q + p2q)^2*(s12 + s13 + s23)*
         (p2q*s13*(s12*s13 + s13^2 + 3*s12*s23 - s23^2) + 
          p1q*s23*(3*s12*s13 - s13^2 + s12*s23 + s23^2) - 
          p3q*s12*((s13 - s23)^2 + s12*(s13 + s23))))/(27*(p1q + p2q + p3q)*
         s12*s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep*s12*(-10*p2q^4*s13^2*(s12 + s13 + s23) + 5*p1q^4*s23*
           (s12 + s13 + s23)^2 + 5*p2q^3*p3q*s13*(3*s12^2 - 2*s12*s13 - 
            5*s13^2 + 4*s12*s23 - 4*s13*s23 + s23^2) + 
          p3q^4*(-10*s12^3 - 13*s12^2*s23 + s12*(10*s13^2 + 27*s13*s23 - 
              6*s23^2) + s23*(20*s13^2 + 17*s13*s23 - 3*s23^2)) + 
          p2q*p3q^3*(-10*s12^3 - 10*s13^3 + s12^2*(30*s13 - 3*s23) + 
            33*s13^2*s23 + 40*s13*s23^2 - 3*s23^3 + 
            s12*(30*s13^2 + 90*s13*s23 + 4*s23^2)) - p1q^3*(s12 + s13 + s23)*
           (p3q*(5*s12^2 - 5*s12*s13 - 7*s12*s23 - 25*s13*s23 - 2*s23^2) + 
            p2q*(-5*s12*s13 + 5*s13^2 + 3*s12*s23 - 5*s13*s23 + 13*s23^2)) + 
          p2q^2*p3q^2*(-5*s12^3 + 30*s12^2*s13 + s12*(5*s13^2 + 63*s13*s23 + 
              5*s23^2) + s13*(-30*s13^2 - 7*s13*s23 + 23*s23^2)) + 
          p1q*(s12 + s13 + s23)*(5*p2q^3*s13*(s12 - s13 + 3*s23) + 
            p2q*p3q^2*(-10*s12^2 + 50*s12*s13 - 20*s13^2 + 21*s12*s23 + 
              76*s13*s23 - 19*s23^2) + p3q^3*(-20*s12^2 + (50*s13 - 9*s23)*
               s23 + s12*(20*s13 + s23)) + p2q^2*p3q*(-5*s12^2 - 30*s13^2 + 
              41*s13*s23 - 5*s23^2 + 5*s12*(3*s13 + 2*s23))) - 
          p1q^2*(s12 + s13 + s23)*(p2q*p3q*(-25*s12*s13 + 15*s13^2 - 
              11*s12*s23 - 48*s13*s23 + 29*s23^2) + 
            p2q^2*(10*s13^2 - 18*s13*s23 + 5*s23*(-s12 + s23)) + 
            p3q^2*(15*s12^2 - 3*s12*(5*s13 + 2*s23) + s23*(-50*s13 + 
                9*s23)))))/(27*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (s12*(-5*p1q^5*s13*s23*(s12 + s13 + s23)^2 + p1q^4*(s12 + s13 + s23)*
           (-(p2q*(-5*s13^3 + 5*s13^2*s23 + 12*s23^3 + s12*s13*(5*s13 + 
                 4*s23))) + p3q*(5*s12^2*s13 - s12*s13*(5*s13 + 9*s23) - 
              2*s23*(10*s13^2 + 5*s13*s23 + 6*s23^2))) - 
          p1q^3*(s12 + s13 + s23)*(-2*p2q*p3q*(5*s12^2*s13 - 15*s12*s13^2 + 
              5*s13^3 - 15*s13^2*s23 + 12*s12*s23^2 + 17*s13*s23^2 - 
              18*s23^3) + p2q^2*(-10*s13^3 + s12*s13*(10*s13 - 7*s23) + 
              15*s13^2*s23 - 23*s13*s23^2 + 12*s23^3) + 
            p3q^2*(-20*s12^2*s13 + s12*(10*s13^2 + 7*s13*s23 - 24*s23^2) + 
              s23*(25*s13^2 - s13*s23 + 24*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*s13*(-5*s12*s13 + 15*s13^2 + 12*s12*s23 - 21*s13*s23 + 
              24*s23^2) + p2q^2*p3q*(5*s12^2*s13 + 20*s13^3 - 68*s13^2*s23 + 
              70*s13*s23^2 - 12*s23^3 + s12*(-45*s13^2 + 27*s13*s23 + 
                24*s23^2)) + p3q^3*(s12^2*(35*s13 - 12*s23) - 
              2*s23*(5*s13^2 - 9*s13*s23 + 6*s23^2) + s12*(-5*s13^2 - 
                7*s13*s23 + 48*s23^2)) + p2q*p3q^2*(5*s13^3 + 
              6*s12^2*(5*s13 - 2*s23) - 47*s13^2*s23 + 74*s13*s23^2 - 
              24*s23^3 + s12*(-55*s13^2 + 8*s13*s23 + 72*s23^2))) + 
          p3q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*(s12 + s13 + s23) + 
            p2q^3*p3q*s13*(15*s13^3 - 3*s12^2*(5*s13 - 8*s23) - 8*s13^2*s23 - 
              11*s13*s23^2 + 12*s23^3 + 2*s12*s23*(-7*s13 + 18*s23)) + 
            2*p3q^4*(s12^3*(5*s13 - 6*s23) + 3*s12*s13*s23^2 + 
              3*s13*s23^2*(s13 + s23) + s12^2*(5*s13^2 - s13*s23 - 
                6*s23^2)) + 2*p2q*p3q^3*(s12^3*(5*s13 - 12*s23) + 
              9*s13*s23^2*(s13 + s23) - s12^2*(5*s13^2 + 3*s13*s23 + 
                12*s23^2) + s12*s13*(-10*s13^2 - 6*s13*s23 + 13*s23^2)) + 
            p2q^2*p3q^2*(s12^3*(5*s13 - 12*s23) - 2*s12^2*(10*s13^2 - 
                15*s13*s23 + 6*s23^2) + s12*s13*(-15*s13^2 + 6*s13*s23 + 
                61*s23^2) + 2*s13*(5*s13^3 + 2*s13^2*s23 + 9*s13*s23^2 + 
                12*s23^3))) + p1q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*
             (s12 + s13 + s23) + 2*p2q^3*p3q*s13*(15*s13^3 - 19*s13^2*s23 - 
              28*s13*s23^2 + 6*s23^3 + s12^2*(-10*s13 + 6*s23) + 
              s12*(5*s13^2 - 38*s13*s23 + 12*s23^2)) + 
            2*p3q^4*(3*s12^3*(5*s13 - 4*s23) + 9*s13*s23^2*(s13 + s23) + 
              s12^2*s13*(15*s13 + s23) + s12*s23*(-2*s13^2 + 19*s13*s23 + 
                12*s23^2)) + 2*p2q*p3q^3*(3*s12^3*(5*s13 - 6*s23) + 
              s12^2*(-10*s13^2 + 3*s13*s23 + 6*s23^2) + s13*s23*(-11*s13^2 + 
                18*s13*s23 + 29*s23^2) + s12*(-25*s13^3 - 30*s13^2*s23 + 
                59*s13*s23^2 + 24*s23^3)) + p2q^2*p3q^2*
             (2*s12^3*(5*s13 - 6*s23) + s12^2*(-50*s13^2 + 31*s13*s23 + 
                12*s23^2) - 2*s12*(20*s13^3 + 55*s13^2*s23 - 52*s13*s23^2 - 
                12*s23^3) + s13*(20*s13^3 - 63*s13^2*s23 - 36*s13*s23^2 + 
                47*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep*s12*(-5*p1q^3*(p3q*(3*s12 + s13 - 5*s23) + p2q*(s12 + 3*s13 - s23))*
           s23*(s12 + s13 + s23) + 10*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q*(s12 + s13 + s23)*(p2q^3*(3*s12*s13 + 13*s13^2 - 5*s12*s23 - 
              5*s13*s23 + 5*s23^2) + p3q^3*(10*s12^2 - 7*s12*s13 + 3*s13^2 - 
              40*s12*s23 - 43*s13*s23 + 10*s23^2) + p2q^2*p3q*
             (-11*s12*s13 + 29*s13^2 - 25*s12*s23 - 48*s13*s23 + 15*s23^2) + 
            p2q*p3q^2*(10*s12^2 - 21*s12*s13 + 19*s13^2 - 50*s12*s23 - 
              76*s13*s23 + 20*s23^2)) - p1q^2*(s12 + s13 + s23)*
           (p2q^2*(5*s12*s13 - 5*s13^2 + 18*s13*s23 - 10*s23^2) + 
            p2q*p3q*(-5*s12^2 - 5*s13^2 + 41*s13*s23 - 30*s23^2 + 
              5*s12*(2*s13 + 3*s23)) + p3q^2*(-5*s12^2 + (23*s13 - 30*s23)*
               s23 + 5*s12*(s13 + 7*s23))) - (p2q + p3q)*
           (5*p2q^3*s13*(s12 + s13 + s23)^2 - 2*p2q*p3q^2*
             (5*s12^3 + 3*s12^2*s13 + s12*(s13^2 - 22*s13*s23 - 5*s23^2) + 
              3*s13*(s13^2 - 4*s13*s23 - 5*s23^2)) + p2q^2*p3q*
             (-5*s12^3 - 3*s12^2*s13 + s12*(-s13^2 + 27*s13*s23 + 5*s23^2) + 
              s13*(-3*s13^2 + 17*s13*s23 + 20*s23^2)) + 
            p3q^3*(-10*s12^3 - 13*s12^2*s13 + s12*(-6*s13^2 + 27*s13*s23 + 
                10*s23^2) + s13*(-3*s13^2 + 17*s13*s23 + 20*s23^2)))))/
        (27*(p1q + p3q)*(p1q + p2q + p3q)*s13*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) - (s12*(s12 + s13 + s23)*
         (2*p1q^4*(p2q + p3q)*(6*s13 - 5*s23)*s23^2 - 
          p1q^3*s23*(2*p2q*p3q*(6*s12*s13 + 6*s13^2 - 10*s12*s23 - 
              34*s13*s23 + 15*s23^2) + p3q^2*(12*s13^2 + 3*s12*(8*s13 - 
                5*s23) - 23*s13*s23 + 15*s23^2) + p2q^2*(12*s12*s13 + 
              24*s13^2 - 5*s12*s23 - 21*s13*s23 + 15*s23^2)) + 
          (p2q + p3q)^2*(5*p2q^3*s13*s23*(s12 + s13 + s23) + 
            2*p3q^3*(s12^2*(6*s13 - 5*s23) - 3*s13^2*s23) - 
            2*p2q*p3q^2*(2*s12*s13*(6*s13 - s23) + 5*s12^2*s23 + 
              3*s13^2*s23) + p2q^2*p3q*(12*s13^3 + 5*s12*s23*(-s12 + s23) + 
              s13*s23*(-s12 + 10*s23))) - 
          p1q^2*(p2q^3*(-12*s13^3 + 23*s13^2*s23 + s13*(7*s12 - 15*s23)*s23 + 
              10*s23^2*(-s12 + s23)) + p2q^2*p3q*(-12*s13^3 + 5*s12^2*s23 + 
              70*s13^2*s23 - 68*s13*s23^2 + 20*s23^3 + 3*s12*(8*s13^2 + 
                9*s13*s23 - 15*s23^2)) + p3q^3*(s12*(37*s13 - 25*s23)*s23 + 
              s12^2*(-12*s13 + 5*s23) + 2*s23*(12*s13^2 - 3*s13*s23 + 
                5*s23^2)) + p2q*p3q^2*(-2*s12^2*(6*s13 - 5*s23) + 
              3*s12*(8*s13^2 + 11*s13*s23 - 20*s23^2) + s23*(47*s13^2 - 
                83*s13*s23 + 20*s23^2))) + p1q*(p2q + p3q)*
           (p2q^3*(12*s13^3 + 5*(s12 - s23)*s23^2 + s13*s23*(4*s12 + 
                5*s23)) + 2*p3q^3*(s12^2*(12*s13 - 5*s23) - 9*s13^2*s23 + 
              2*s12*s23*(-2*s13 + 5*s23)) + 2*p2q*p3q^2*
             (2*s12^2*(3*s13 - 5*s23) + s13*s23*(-20*s13 + 11*s23) + 
              s12*(-24*s13^2 - 2*s13*s23 + 15*s23^2)) + 
            p2q^2*p3q*(24*s13^3 - 10*s12^2*s23 - 34*s13^2*s23 + 
              25*s13*s23^2 - 5*s23^3 + s12*(-24*s13^2 - 4*s13*s23 + 
                25*s23^2)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep^2*(s12 + s13 + s23)*(2*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q^3*s23*(p2q*(-4*s12*s13 - 4*s13^2 + 21*s12*s23 - 4*s13*s23 + 
              17*s23^2) + p3q*(-4*s12^2 - 4*s12*s13 + 21*s12*s23 + 
              4*s13*s23 + 21*s23^2)) + (p3q*s12 - p2q*s13)^2*
           (p2q^2*(2*s12 - 19*s13 - 2*s23) + p3q^2*(25*s12 + 4*s13 + 
              21*s23) + p2q*p3q*(25*s12 + 17*(-s13 + s23))) + 
          p1q^2*(p3q^2*(2*s12^3 + 2*s12^2*(s13 - 24*s23) - s12*s23*(8*s13 + 
                17*s23) + s23^2*(4*s13 + 21*s23)) + 
            p2q^2*(2*s13^3 + 2*s13^2*s23 - 53*s13*s23^2 - 2*s23^3 + 
              2*s12*(s13^2 - 21*s13*s23 + s23^2)) - 
            p2q*p3q*(s12^2*(4*s13 + 42*s23) + s23*(8*s13^2 + 59*s13*s23 - 
                17*s23^2) + s12*(4*s13^2 + 54*s13*s23 + 9*s23^2))) + 
          p1q*(p3q^3*s12*(s12 - 2*s23)*(25*s12 + 4*s13 + 21*s23) + 
            p2q^3*s13*(21*s12*s13 - 4*s12*s23 + 55*s13*s23 + 4*s23^2) + 
            p2q^2*p3q*(-2*s12^2*(21*s13 + 2*s23) + s13*(4*s13^2 + 
                55*s13*s23 - 34*s23^2) + s12*(25*s13^2 - 46*s13*s23 + 
                4*s23^2)) + p2q*p3q^2*(21*s12^3 - 2*s13*s23*(4*s13 + 
                21*s23) - s12^2*(50*s13 + 33*s23) - 2*s12*(4*s13^2 + 
                29*s13*s23 + 17*s23^2)))))/(54*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(p1q^5*s13*s23^2*(s12 + s13 + s23)^2 + p3q*(p3q*s12 - p2q*s13)^2*
           (s12 + s13 + s23)*(2*p3q^2*(21*s13*s23 + s12*(s13 + 42*s23)) + 
            p2q^2*(-(s13*(s13 - 41*s23)) + s12*(s13 + 84*s23)) + 
            2*p2q*p3q*(-(s13*(s13 - 41*s23)) + s12*(s13 + 84*s23))) - 
          p1q^4*s23*(s12 + s13 + s23)*(2*p2q*(s13^3 + s12*s13*(s13 - s23) + 
              s13^2*s23 + 21*s13*s23^2 + 42*s23^3) + 
            p3q*(2*s12^2*s13 + s12*s13*(2*s13 - s23) + s23*(-s13^2 + 
                41*s13*s23 + 84*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p2q^2*(s13^4 + s13^3*s23 + 83*s13^2*s23^2 + 125*s13*s23^3 - 
              84*s23^4 + s12*s13*(s13^2 - 4*s13*s23 + s23^2)) + 
            p3q^2*(s12^3*s13 + s12^2*s13*(s13 - 5*s23) - 84*s23^4 + 
              2*s12*s23*(-s13^2 + 43*s13*s23 + 126*s23^2)) - 
            2*p2q*p3q*(s12^2*s13*(s13 + 2*s23) + s12*(s13^3 + 4*s13^2*s23 - 
                44*s13*s23^2 - 126*s23^3) + s23*(s13^3 - 40*s13^2*s23 - 
                62*s13*s23^2 + 84*s23^3))) - 
          p1q*(p2q^4*s13^2*(-(s12^2*s13) + s13^3 + 44*s13^2*s23 + 
              127*s13*s23^2 + 84*s23^3 + 42*s12*s23*(s13 + 2*s23)) + 
            2*p2q^3*p3q*s13^2*(s12^3 + s13^3 + 22*s13^2*s23 + 146*s13*s23^2 + 
              125*s23^3 - s12^2*(2*s13 + 83*s23) + s12*(-2*s13^2 - 
                66*s13*s23 + 41*s23^2)) + 4*p3q^4*s12*
             (21*s13*s23^2*(s13 + s23) - s12^3*(s13 + 21*s23) - 
              s12^2*(s13^2 + 21*s13*s23 - 42*s23^2) + s12*s23*(s13^2 + 
                85*s13*s23 + 63*s23^2)) + 2*p2q*p3q^3*
             (42*s13^2*s23^2*(s13 + s23) - 2*s12^4*(s13 + 21*s23) + 
              2*s12*s13*s23^2*(62*s13 + 41*s23) + s12^3*(3*s13^2 + 
                64*s13*s23 + 210*s23^2) + s12^2*(5*s13^3 + 113*s13^2*s23 + 
                442*s13*s23^2 + 252*s23^3)) + p2q^2*p3q^2*(-(s12^4*s13) - 
              4*s13^2*s23*(s13^2 - 61*s13*s23 - 62*s23^2) + 
              4*s12^3*(2*s13^2 + 53*s13*s23 + 63*s23^2) - 2*s12*s13*(
                4*s13^3 + 91*s13^2*s23 - 80*s13*s23^2 - 41*s23^3) + 
              s12^2*(s13^3 + 52*s13^2*s23 + 547*s13*s23^2 + 252*s23^3))) + 
          p1q^2*(s12 + s13 + s23)*(p3q^3*(3*s12^3*s13 + 42*s13*s23^3 + 
              2*s12*s23^2*(s13 + 126*s23) + s12^2*(s13^2 - 49*s13*s23 - 
                252*s23^2)) + 2*p2q^3*s13*(s12*s13*(s13 - s23) + 
              s23*(-20*s13^2 + s13*s23 + 84*s23^2)) + 2*p2q*p3q^2*
             (s12^3*s13 - s13*(s13 - 125*s23)*s23^2 - s12^2*(3*s13^2 + 
                25*s13*s23 + 126*s23^2) + s12*(-s13^3 + 39*s13^2*s23 + 
                45*s13*s23^2 + 252*s23^3)) + p2q^2*p3q*
             (-2*s12^2*s13*(2*s13 + s23) + 3*s12*(s13^3 + 26*s13^2*s23 + 
                29*s13*s23^2 + 84*s23^3) + s13*(s13^3 - 37*s13^2*s23 + 
                3*s13*s23^2 + 377*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((10*ep^3*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(27*(p1q + p2q + p3q)*s12*s23) + 
       (ep^2*(s12 + s13 + s23)*(10*p1q^4*s12*s23^2*(s12 + s13 + s23) + 
          (p3q*s12 - p2q*s13)^2*(p2q*p3q*(20*s12^2 + 30*s12*s13 - 10*s13^2 - 
              17*s12*s23 + 7*s13*s23 + 3*s23^2) + p2q^2*(10*s12^2 + 
              10*s12*(s13 - s23) - s13*(10*s13 + 3*s23)) + 
            p3q^2*(20*s12^2 + 3*s12*(10*s13 + s23) + s23*(10*s13 + 3*s23))) + 
          p1q^3*s23*(p3q*(-20*s12^3 - 20*s12^2*s13 + 3*s12*s23*(10*s13 + 
                s23) + s23^2*(10*s13 + 3*s23)) - p2q*(20*s12^2*s13 - 
              s23^2*(10*s13 + 3*s23) + s12*(20*s13^2 + 10*s13*s23 + 
                17*s23^2))) + p1q*(p3q^3*s12*(s12 - 2*s23)*
             (20*s12^2 + 3*s12*(10*s13 + s23) + s23*(10*s13 + 3*s23)) - 
            p2q*p3q^2*(2*s13*s23^2*(10*s13 + 3*s23) + s12^3*(30*s13 + 
                57*s23) + s12^2*(60*s13^2 + 96*s13*s23 - 37*s23^2) + 
              2*s12*s23*(30*s13^2 + 13*s13*s23 + 3*s23^2)) + 
            p2q^3*s13*(-20*s12^2*s23 + 3*s13*s23*(10*s13 + 3*s23) + 
              s12*(10*s13^2 - 37*s13*s23 + 20*s23^2)) + 
            p2q^2*p3q*(-20*s12^3*s23 + s13*s23*(30*s13^2 - 11*s13*s23 - 
                6*s23^2) + s12^2*(-26*s13*s23 + 20*s23^2) + 
              s12*s13*(30*s13^2 - 57*s13*s23 + 34*s23^2))) + 
          p1q^2*(p3q^2*(10*s12^4 + 10*s12^3*(s13 - 3*s23) + s12*(10*s13 - 
                3*s23)*s23^2 + s23^3*(10*s13 + 3*s23) + 2*s12^2*s23*(
                -30*s13 + 7*s23)) + p2q*p3q*(-20*s12^3*s13 + 
              s12*s23*(-60*s13^2 + 4*s13*s23 - 23*s23^2) + s23^2*(-30*s13^2 + 
                s13*s23 + 3*s23^2) + s12^2*(-20*s13^2 - 80*s13*s23 + 
                54*s23^2)) + p2q^2*(-3*s13*s23^2*(10*s13 + 3*s23) + 
              10*s12^2*(s13^2 + s23^2) + 2*s12*(5*s13^3 - 5*s13^2*s23 + 
                22*s13*s23^2 - 5*s23^3)))))/(27*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (2*ep*(5*p1q^5*s13*s23^2*(s12 + s13 + s23)^2 + 
          p3q*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
           (p2q^2*(5*s12*s13 - 5*s13^2 - 12*s12*s23 - 11*s13*s23) + 
            2*p2q*p3q*(5*s12*s13 - 5*s13^2 - 12*s12*s23 - 11*s13*s23) + 
            2*p3q^2*(5*s12*s13 - 6*s12*s23 - 3*s13*s23)) - 
          p1q^4*s23*(s12 + s13 + s23)*(2*p2q*(5*s13^3 + 5*s12*s13*(s13 - 
                s23) + 5*s13^2*s23 - 3*s13*s23^2 - 6*s23^3) + 
            p3q*(10*s12^2*s13 + 5*s12*s13*(2*s13 - s23) - s23*(5*s13^2 + 
                11*s13*s23 + 12*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p2q^2*(5*s13^4 + 5*s13^3*s23 - 17*s13^2*s23^2 - 23*s13*s23^3 + 
              12*s23^4 + 5*s12*s13*(s13^2 - 4*s13*s23 + s23^2)) + 
            p3q^2*(5*s12^3*s13 + 5*s12^2*s13*(s13 - 5*s23) + 12*s23^4 - 
              2*s12*s23*(5*s13^2 + s13*s23 + 18*s23^2)) - 
            2*p2q*p3q*(5*s12^2*s13*(s13 + 2*s23) + s23*(5*s13^3 + 
                16*s13^2*s23 + 14*s13*s23^2 - 12*s23^3) + s12*(5*s13^3 + 
                20*s13^2*s23 - 4*s13*s23^2 + 18*s23^3))) + 
          p1q^2*(s12 + s13 + s23)*(2*p2q^3*s13*(5*s12*s13*(s13 - s23) + 
              s23*(8*s13^2 + 5*s13*s23 - 12*s23^2)) + 
            p3q^3*(15*s12^3*s13 + 2*s12*(5*s13 - 18*s23)*s23^2 - 
              6*s13*s23^3 + s12^2*(5*s13^2 - 29*s13*s23 + 36*s23^2)) + 
            p2q^2*p3q*(-10*s12^2*s13*(2*s13 + s23) + s13*(5*s13^3 + 
                31*s13^2*s23 + 15*s13*s23^2 - 59*s23^3) + 3*s12*(5*s13^3 - 
                14*s13^2*s23 + s13*s23^2 - 12*s23^3)) + 2*p2q*p3q^2*
             (5*s12^3*s13 - s13*s23^2*(5*s13 + 23*s23) + s12^2*(-15*s13^2 - 
                17*s13*s23 + 18*s23^2) - s12*(5*s13^3 + 21*s13^2*s23 - 
                9*s13*s23^2 + 36*s23^3))) + 
          p1q*(p2q^4*s13^2*(5*s12^2*s13 - 5*s13^3 - 4*s13^2*s23 + 
              13*s13*s23^2 + 12*s23^3 + 6*s12*s23*(s13 + 2*s23)) + 
            4*p3q^4*s12*(s12^3*(5*s13 - 3*s23) + 3*s13*s23^2*(s13 + s23) + 
              s12^2*(5*s13^2 - 3*s13*s23 + 6*s23^2) + s12*s23*(-5*s13^2 + 
                7*s13*s23 + 9*s23^2)) + 2*p2q^3*p3q*s13^2*(-5*s12^3 - 
              5*s13^3 + s12^2*(10*s13 - 17*s23) - 2*s13^2*s23 + 
              26*s13*s23^2 + 23*s23^3 + s12*(10*s13^2 + 6*s13*s23 + 
                11*s23^2)) + 2*p2q*p3q^3*(2*s12^4*(5*s13 - 3*s23) + 
              6*s13^2*s23^2*(s13 + s23) + 2*s12*s13*s23^2*(14*s13 + 11*s23) + 
              s12^3*(-15*s13^2 + 4*s13*s23 + 30*s23^2) + s12^2*(-25*s13^3 - 
                25*s13^2*s23 + 58*s13*s23^2 + 36*s23^3)) + 
            p2q^2*p3q^2*(5*s12^4*s13 + 4*s13^2*s23*(5*s13^2 + 19*s13*s23 + 
                14*s23^2) + s12^3*(-40*s13^2 + 20*s13*s23 + 36*s23^2) + 
              2*s12*s13*(20*s13^3 + 23*s13^2*s23 + 32*s13*s23^2 + 11*s23^3) + 
              s12^2*(-5*s13^3 - 44*s13^2*s23 + 73*s13*s23^2 + 36*s23^3)))))/
        (27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + 
     ((ep^2*(s12 + s13 + s23)*(p1q^4*s23^2*(-2*s12 + 2*s13 + 19*s23) - 
          (p3q*s12 - p2q*s13)^2*(2*p2q^2*(s12 + s13 + s23) + 
            p2q*p3q*(25*s12 + 21*s13 + 4*s23) + p3q^2*(25*s12 + 21*s13 + 
              4*s23)) + p1q^3*s23*(p2q*(4*s12*s13 - 4*s13^2 - 21*s12*s23 - 
              55*s13*s23) + p3q*(4*s12^2 + 17*s23*(-s13 + s23) - 
              s12*(4*s13 + 63*s23))) + 
          p1q*(p2q^3*s13*(-21*s12*s13 - 17*s13^2 + 4*s12*s23 + 4*s13*s23 + 
              4*s23^2) + p3q^3*s12*(-25*s12^2 - 17*s12*s13 + 67*s12*s23 + 
              42*s13*s23 + 8*s23^2) + p2q*p3q^2*(-21*s12^3 + 
              2*s13*s23*(21*s13 + 4*s23) + s12^2*(33*s13 + 50*s23) + 
              s12*(34*s13^2 + 58*s13*s23 + 8*s23^2)) + p2q^2*p3q*
             (s12^2*(42*s13 + 4*s23) + s12*(9*s13^2 + 54*s13*s23 + 4*s23^2) + 
              s13*(-17*s13^2 + 59*s13*s23 + 8*s23^2))) - 
          p1q^2*(p3q^2*(2*s12^3 + s23^2*(21*s13 + 4*s23) + s12*s23*(-34*s13 + 
                59*s23) - s12^2*(2*s13 + 69*s23)) + 
            p2q^2*(-2*s13^3 - 53*s13^2*s23 + 2*s13*s23^2 + 2*s23^3 + 
              2*s12*(s13^2 - 21*s13*s23 + s23^2)) + 
            p2q*p3q*(-2*s12^2*(2*s13 + 21*s23) + s23*(-34*s13^2 + 
                55*s13*s23 + 4*s23^2) + s12*(4*s13^2 - 46*s13*s23 + 
                25*s23^2)))))/(54*(p1q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (ep*(s12 + s13 + s23)*((p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (p2q^2*s23*(s12 + s13 + s23) + 2*p2q*p3q*(-42*s13^2 + s12*s23 - 
              21*s13*s23) + 2*p3q^2*(21*s13*s23 + s12*(42*s13 + s23))) + 
          p1q^4*s23^2*(-(p2q*(84*s13^2 + 43*s13*s23 + s23*(-s12 + s23))) + 
            p3q*((41*s13 - s23)*s23 + s12*(84*s13 + s23))) - 
          2*p1q^3*s23*(p2q*p3q*s23*(s12^2 + 125*s13^2 + 21*s13*s23 + s23^2 - 
              3*s12*(28*s13 + s23)) + p3q^2*(s12 - s23)*((41*s13 - s23)*s23 + 
              s12*(84*s13 + s23)) - p2q^2*(84*s13^3 + s13^2*s23 + s12*s23^2 - 
              s13*s23*(s12 + 20*s23))) + 
          2*p1q*(-(p2q^4*s13*(42*s13^3 + 21*s13^2*s23 + s13*s23*
                (-s12 + s23) + s23^2*(s12 + s23))) + p3q^4*s12*
             (-42*s13*s23^2 + s12^2*(84*s13 + s23) - s12*s23*(43*s13 + 
                3*s23)) + p2q*p3q^3*(-82*s12*s13^2*s23 - 42*s13^2*s23^2 + 
              2*s12^3*(21*s13 + s23) - s12^2*(252*s13^2 + 108*s13*s23 + 
                5*s23^2)) + p2q^2*p3q^2*(s12^3*s23 + s13^2*(125*s13 - s23)*
               s23 - s12^2*(126*s13^2 + 25*s13*s23 + 3*s23^2) + 
              s12*(252*s13^3 + 45*s13^2*s23 + 39*s13*s23^2 - s23^3)) - 
            p2q^3*p3q*(s12^2*s23*(2*s13 + s23) + s13*(84*s13^3 - 
                62*s13^2*s23 - 40*s13*s23^2 + s23^3) + s12*(-126*s13^3 - 
                44*s13^2*s23 + 4*s13*s23^2 + s23^3))) + 
          p1q^2*(p2q^3*(-84*s13^4 + 125*s13^3*s23 + s13*s23^2*(-4*s12 + 
                s23) + s23^3*(s12 + s23) + s13^2*s23*(s12 + 83*s23)) + 
            p2q*p3q^2*(s12^3*s23 + 4*s13*s23^2*(-62*s13 + s23) - 
              3*s12^2*(84*s13^2 + 71*s13*s23 + 3*s23^2) + 2*s12*s23*(
                -41*s13^2 + 85*s13*s23 + 4*s23^2)) + p2q^2*p3q*
             (-2*s12^2*s23*(s13 + 2*s23) + s23*(377*s13^3 + 3*s13^2*s23 - 
                37*s13*s23^2 + s23^3) + 3*s12*(84*s13^3 + 29*s13^2*s23 + 
                26*s13*s23^2 + s23^3)) + p3q^3*(42*s13*s23^3 - 
              5*s12^2*s23*(59*s13 + s23) + s12^3*(84*s13 + s23) + 
              s12*(-80*s13*s23^2 + 6*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((10*ep^3*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(27*(p1q + p2q + p3q)*s12*s13) - 
       (ep^2*(s12 + s13 + s23)*(p1q^4*s23^2*(10*s12^2 - 10*s12*(s13 - s23) - 
            s23*(3*s13 + 10*s23)) + (p3q*s12 - p2q*s13)^2*
           (10*p2q^2*s12*(s12 + s13 + s23) + p2q*p3q*(20*s12^2 + 3*s12*s13 + 
              3*s13^2 + 30*s12*s23 + 10*s13*s23) + 
            p3q^2*(20*s12^2 + 3*s12*s13 + 3*s13^2 + 30*s12*s23 + 
              10*s13*s23)) + p1q^3*s23*(p3q*(-20*s12^3 + 20*s12^2*s13 + 
              s12*s23*(-11*s13 + 50*s23) + s23*(3*s13^2 + 7*s13*s23 - 
                10*s23^2)) + p2q*(-20*s12^2*s13 + 3*s13*s23*(3*s13 + 
                10*s23) + s12*(20*s13^2 - 37*s13*s23 + 10*s23^2))) + 
          p1q*(p3q^3*s12*(20*s12^3 - 2*s13*s23*(3*s13 + 10*s23) - 
              s12^2*(17*s13 + 10*s23) + s12*(3*s13^2 + s13*s23 - 70*s23^2)) + 
            p2q^2*p3q*(-20*s12^3*s23 + s12*s13*(-23*s13^2 + 4*s13*s23 - 
                60*s23^2) + s13^2*(3*s13^2 + s13*s23 - 30*s23^2) + 
              s12^2*(54*s13^2 - 80*s13*s23 - 20*s23^2)) + 
            p2q^3*s13*(-20*s12^2*s23 + s13^2*(3*s13 + 10*s23) - 
              s12*(17*s13^2 + 10*s13*s23 + 20*s23^2)) - 
            p2q*p3q^2*(2*s13^2*s23*(3*s13 + 10*s23) + s12^3*(57*s13 + 
                30*s23) + 2*s12*s13*(3*s13^2 + 13*s13*s23 + 30*s23^2) + 
              s12^2*(-37*s13^2 + 96*s13*s23 + 60*s23^2))) + 
          p1q^2*(p2q*p3q*(-20*s12^3*s13 + 2*s12^2*s13*(10*s13 - 13*s23) + 
              s12*s23*(34*s13^2 - 57*s13*s23 + 30*s23^2) + 
              s13*s23*(-6*s13^2 - 11*s13*s23 + 30*s23^2)) + 
            p3q^2*(10*s12^4 + s12^2*(31*s13 - 50*s23)*s23 - 10*s12^3*(s13 + 
                3*s23) + s13*s23^2*(3*s13 + 10*s23) + s12*s23*(-6*s13^2 - 
                11*s13*s23 + 50*s23^2)) + p2q^2*(-3*s13^2*s23*(3*s13 + 
                10*s23) + 10*s12^2*(s13^2 + s23^2) - 2*s12*(5*s13^3 - 
                22*s13^2*s23 + 5*s13*s23^2 - 5*s23^3)))))/
        (27*(p1q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + (2*ep*(s12 + s13 + s23)*
         (-((p2q + p3q)*(p3q*s12 - p2q*s13)^2*(5*p2q^2*s23*(s12 + s13 + 
               s23) - 2*p3q^2*(6*s12*s13 - 5*s12*s23 + 3*s13*s23) + 
             2*p2q*p3q*(6*s13^2 + 5*s12*s23 + 3*s13*s23))) + 
          p1q^4*s23^2*(-(p2q*(12*s13^2 + s13*s23 + 5*(s12 - s23)*s23)) + 
            p3q*(12*s12*s13 - 5*s12*s23 + 11*s13*s23 + 5*s23^2)) + 
          2*p1q^3*s23*(p3q^2*(s12 - s23)*(-12*s12*s13 + 5*s12*s23 - 
              11*s13*s23 - 5*s23^2) + p2q*p3q*s23*(5*s12^2 - 23*s13^2 + 
              3*s12*(4*s13 - 5*s23) - 3*s13*s23 + 5*s23^2) + 
            p2q^2*(12*s13^3 - 5*s13^2*s23 + s13*(5*s12 - 8*s23)*s23 - 
              5*s12*s23^2)) - 2*p1q*(p2q^4*s13*(6*s13^3 + 3*s13^2*s23 + 
              5*s13*(s12 - s23)*s23 - 5*s23^2*(s12 + s23)) + 
            p3q^4*s12*(s12*(s13 - 15*s23)*s23 + 6*s13*s23^2 + 
              s12^2*(-12*s13 + 5*s23)) + p2q*p3q^3*(22*s12*s13^2*s23 + 
              6*s13^2*s23^2 + s12^3*(-6*s13 + 10*s23) + s12^2*(36*s13^2 - 
                25*s23^2)) - p2q^3*p3q*(5*s12^2*s23*(2*s13 + s23) + 
              s13*(-12*s13^3 + 14*s13^2*s23 + 16*s13*s23^2 + 5*s23^3) + 
              s12*(18*s13^3 - 4*s13^2*s23 + 20*s13*s23^2 + 5*s23^3)) + 
            p2q^2*p3q^2*(5*s12^3*s23 - s13^2*s23*(23*s13 + 5*s23) + 
              s12^2*(18*s13^2 - 17*s13*s23 - 15*s23^2) - s12*(36*s13^3 - 
                9*s13^2*s23 + 21*s13*s23^2 + 5*s23^3))) + 
          p1q^2*(-(p2q^3*(12*s13^4 - 23*s13^3*s23 + s13^2*(5*s12 - 17*s23)*
                s23 + 5*s13*s23^2*(-4*s12 + s23) + 5*s23^3*(s12 + s23))) + 
            p3q^3*(s12^3*(12*s13 - 5*s23) + 6*s13*s23^3 - 2*s12*s23^2*(
                16*s13 + 15*s23) + s12^2*s23*(-37*s13 + 25*s23)) - 
            p2q*p3q^2*(5*s12^3*s23 + 4*s13*s23^2*(14*s13 + 5*s23) + 
              3*s12^2*(12*s13^2 + 5*s13*s23 - 15*s23^2) + 2*s12*s23*(
                11*s13^2 - 7*s13*s23 + 20*s23^2)) + p2q^2*p3q*
             (10*s12^2*s23*(s13 + 2*s23) + 3*s12*(12*s13^3 - s13^2*s23 + 
                14*s13*s23^2 - 5*s23^3) - s23*(-59*s13^3 + 15*s13^2*s23 + 
                31*s13*s23^2 + 5*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23)))*Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep]
 
P1Avg = ((10*ep^3*(p2q*s13*(2*s13^4 - s13^3*s23 + s13*s23^3 - 2*s23^4 + 
            s12*(2*s13^3 + s13^2*s23 - s13*s23^2 + 2*s23^3)) + 
          p1q*s23*(-2*s13^4 + s13^3*s23 - s13*s23^3 + 2*s23^4 + 
            s12*(2*s13^3 - s13^2*s23 + s13*s23^2 + 2*s23^3)) - 
          p3q*(4*s13*s23*(s13^3 + s13^2*s23 + s13*s23^2 + s23^3) + 
            s12^2*(2*s13^3 + s13^2*s23 + s13*s23^2 + 2*s23^3) + 
            s12*(2*s13^4 + 3*s13^3*s23 + 6*s13^2*s23^2 + 3*s13*s23^3 + 
              2*s23^4))))/(27*(p1q + p2q + p3q)*s13^2*s23^2*(s13 + s23)) + 
       (2*(p1q^3*s23^2*(s12 + s13 + s23)*(2*s13 + s23) + 
          p2q^3*s13^2*(s12 + s13 + s23)*(s13 + 2*s23) + 
          p3q^3*(s12^2*(s13 - s23)^2 + 4*s13^2*s23^2 + s12^3*(s13 + s23)) + 
          p1q*p3q^2*s23*(s12^3 + 8*s13^2*s23 - s12^2*(5*s13 + s23) + 
            2*s12*(s13^2 - s23^2)) + p1q^2*p3q*s23*(-2*s12^2*(s13 + s23) + 
            s12*(2*s13^2 + s13*s23 - s23^2) + s23*(5*s13^2 + 2*s13*s23 + 
              s23^2)) + p2q*s13*(-4*p1q*p3q*s23*(s12^2 + s13^2 - s13*s23 + 
              s23^2 - s12*(s13 + s23)) + p1q^2*s23*(-2*s13^2 - s13*s23 - 
              3*s23^2 + s12*(2*s13 + s23)) + p3q^2*(s12^3 + 8*s13*s23^2 - 
              s12^2*(s13 + 5*s23) - 2*s12*(s13^2 - s23^2))) + 
          p2q^2*s13*(p1q*s23*(-3*s13^2 - s13*s23 - 2*s23^2 + 
              s12*(s13 + 2*s23)) + p3q*(-2*s12^2*(s13 + s23) + 
              s12*(-s13^2 + s13*s23 + 2*s23^2) + s13*(s13^2 + 2*s13*s23 + 
                5*s23^2)))))/(9*ep*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23^2) + (10*ep^2*(-(p1q^4*s13^2*s23^2*(s13 + s23)*
            (-s12^2 + (s13 + s23)^2)) - p2q^4*s13^2*s23^2*(s13 + s23)*
           (-s12^2 + (s13 + s23)^2) + p3q^4*s12^2*
           (4*s13*s23*(s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + s23^3) + 
            s12^2*(6*s13^3 + 5*s13^2*s23 + 5*s13*s23^2 + 6*s23^3) + 
            3*s12*(2*s13^4 + s13^3*s23 + 2*s13^2*s23^2 + s13*s23^3 + 
              2*s23^4)) - p2q^3*p3q*s13*(s13^2*(s13 + s23)^4 + 
            s12^3*s23^2*(2*s13 + s23) - s12*(s13 + s23)^2*
             (4*s13^3 - 5*s13^2*s23 + 3*s13*s23^2 - 3*s23^3) - 
            s12^2*(5*s13^4 + 13*s13^3*s23 + 17*s13^2*s23^2 + 17*s13*s23^3 + 
              8*s23^4)) + p2q^2*p3q^2*(s12^4*s13*s23^2 - s13^2*(s13 - s23)*
             s23*(s13 + s23)^3 + s12*s13*(s13 + s23)^2*(8*s13^3 - 
              5*s13^2*s23 - s13*s23^2 - 8*s23^3) - 
            s12^3*(10*s13^4 + 16*s13^3*s23 + 17*s13^2*s23^2 + 21*s13*s23^3 + 
              6*s23^4) - 2*s12^2*(s13^5 - 7*s13^4*s23 - 10*s13^3*s23^2 - 
              5*s13^2*s23^3 + 3*s23^5)) + p2q*p3q^3*s12*
           (-(s13*s23*(s13 + s23)^2*(3*s13^2 + 4*s13*s23 + 5*s23^2)) + 
            s12^3*(5*s13^3 + 3*s13^2*s23 + 6*s13*s23^2 + 6*s23^3) - 
            s12^2*s13*(8*s13^3 + 22*s13^2*s23 + 13*s13*s23^2 + 17*s23^3) - 
            s12*(13*s13^5 + 10*s13^4*s23 - s13^3*s23^2 + 4*s13*s23^4 + 
              6*s23^5)) - p1q^3*s23*(-(p2q*(s13 + s23)^2*(2*s13^4 + 2*s13^3*
                s23 - s13^2*s23^2 - 2*s13*s23^3 - s23^4 + s12^2*(6*s13^2 + 
                 3*s13*s23 + 5*s23^2) + s12*(-4*s13^3 + s13^2*s23 - 
                 5*s13*s23^2 + 4*s23^3))) + p3q*(s23^2*(s13 + s23)^4 + 
              s12^3*s13^2*(s13 + 2*s23) + s12*(s13 + s23)^2*(3*s13^3 - 
                3*s13^2*s23 + 5*s13*s23^2 - 4*s23^3) - s12^2*(8*s13^4 + 
                17*s13^3*s23 + 17*s13^2*s23^2 + 13*s13*s23^3 + 5*s23^4))) + 
          p1q^2*(-(p2q^2*(s13 + s23)*((s13 + s23)^2*(s13^4 - s13^3*s23 - 
                 2*s13^2*s23^2 - s13*s23^3 + s23^4) - s12^2*(5*s13^4 + 
                 14*s13^3*s23 + 16*s13^2*s23^2 + 14*s13*s23^3 + 5*s23^4) + 
               s12*(-4*s13^5 + 5*s13^4*s23 + 7*s13^3*s23^2 + 7*s13^2*s23^3 + 
                 5*s13*s23^4 - 4*s23^5))) + p3q^2*(s12^4*s13^2*s23 + 
              s13*(s13 - s23)*s23^2*(s13 + s23)^3 - s12*s23*(s13 + s23)^2*(
                8*s13^3 + s13^2*s23 + 5*s13*s23^2 - 8*s23^3) - 
              s12^3*(6*s13^4 + 21*s13^3*s23 + 17*s13^2*s23^2 + 16*s13*s23^3 + 
                10*s23^4) - 2*s12^2*(3*s13^5 - 5*s13^3*s23^2 - 10*s13^2*
                 s23^3 - 7*s13*s23^4 + s23^5)) + p2q*p3q*
             (s23*(s13 + s23)^4*(s13^2 + s13*s23 - s23^2) - s12^3*(5*s13^4 + 
                16*s13^3*s23 + 14*s13^2*s23^2 + 16*s13*s23^3 + 10*s23^4) + 
              s12*(s13 + s23)^2*(7*s13^4 - 16*s13^3*s23 - 14*s13*s23^3 + 
                12*s23^4) + s12^2*(2*s13^5 + 29*s13^4*s23 + 51*s13^3*s23^2 + 
                54*s13^2*s23^3 + 33*s13*s23^4 + 3*s23^5))) + 
          p1q*(p2q^3*s13*(s13 + s23)^2*(-s13^4 - 2*s13^3*s23 - s13^2*s23^2 + 
              2*s13*s23^3 + 2*s23^4 + s12^2*(5*s13^2 + 3*s13*s23 + 6*s23^2) + 
              s12*(4*s13^3 - 5*s13^2*s23 + s13*s23^2 - 4*s23^3)) + 
            p2q*p3q^2*(-(s13*(s13 - s23)^2*s23*(s13 + s23)^3) + 
              s12^4*(5*s13^3 + 3*s13^2*s23 + 3*s13*s23^2 + 5*s23^3) + 
              s12*(s13 + s23)^2*(7*s13^4 - 15*s13^3*s23 - 4*s13^2*s23^2 - 
                15*s13*s23^3 + 7*s23^4) - s12^3*(13*s13^4 + 38*s13^3*s23 + 
                30*s13^2*s23^2 + 38*s13*s23^3 + 13*s23^4) + 
              s12^2*(-11*s13^5 + 13*s13^4*s23 + 38*s13^3*s23^2 + 
                38*s13^2*s23^3 + 13*s13*s23^4 - 11*s23^5)) + 
            p2q^2*p3q*(-(s13*(s13 + s23)^4*(s13^2 - s13*s23 - s23^2)) - 
              s12^3*(10*s13^4 + 16*s13^3*s23 + 14*s13^2*s23^2 + 
                16*s13*s23^3 + 5*s23^4) + s12*(s13 + s23)^2*(12*s13^4 - 
                14*s13^3*s23 - 16*s13*s23^3 + 7*s23^4) + s12^2*(3*s13^5 + 
                33*s13^4*s23 + 54*s13^3*s23^2 + 51*s13^2*s23^3 + 
                29*s13*s23^4 + 2*s23^5)) + p3q^3*s12*(-(s13*s23*(s13 + s23)^2*
                (5*s13^2 + 4*s13*s23 + 3*s23^2)) + s12^3*(6*s13^3 + 
                6*s13^2*s23 + 3*s13*s23^2 + 5*s23^3) - s12^2*s23*(17*s13^3 + 
                13*s13^2*s23 + 22*s13*s23^2 + 8*s23^3) - s12*(6*s13^5 + 
                4*s13^4*s23 - s13^2*s23^3 + 10*s13*s23^4 + 13*s23^5)))))/
        (27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23^2*
         (s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (ep*(p1q^4*s23^2*(s13 + s23)*(3*s12*(2*s13 - s23)*(s13 + s23)^2 + 
            s13*(s13 + s23)^2*(10*s13 + 3*s23) - s12^2*(4*s13^2 + 3*s23^2)) + 
          p2q^4*s13^2*(s13 + s23)*(-3*s12*(s13 - 2*s23)*(s13 + s23)^2 + 
            s23*(s13 + s23)^2*(3*s13 + 10*s23) - s12^2*(3*s13^2 + 4*s23^2)) + 
          p3q^4*s12^2*(4*s13*(s13 - s23)^2*s23*(s13 + s23) + 
            23*s12^3*(s13^2 + s23^2) + s12^2*(43*s13^3 + 52*s13^2*s23 + 
              52*s13*s23^2 + 43*s23^3) + s12*(20*s13^4 - 39*s13^3*s23 - 
              2*s13^2*s23^2 - 39*s13*s23^3 + 20*s23^4)) + 
          p2q^3*p3q*s13*(2*s13*(s13 + s23)^3*(5*s13^2 + 4*s13*s23 + 
              4*s23^2) + s12*(s13 + s23)^2*(17*s13^3 - 6*s13^2*s23 - 
              14*s13*s23^2 - 50*s23^3) + s12^3*(9*s13^3 + 6*s13^2*s23 + 
              28*s13*s23^2 + 24*s23^3) + 2*s12^2*(8*s13^4 + 50*s13^3*s23 + 
              71*s13^2*s23^2 + 62*s13*s23^3 + 33*s23^4)) - 
          p2q^2*p3q^2*(-2*s13^2*(s13 - s23)*s23*(s13 + s23)^3 + 
            s12*s13*s23*(s13 + s23)^2*(31*s13^2 + 15*s13*s23 + 52*s23^2) + 
            s12^4*(9*s13^3 + 3*s13^2*s23 + 44*s13*s23^2 + 20*s23^3) + 
            s12^3*s23*(103*s13^3 + 117*s13^2*s23 + 126*s13*s23^2 + 
              40*s23^3) - s12^2*(9*s13^5 + 161*s13^4*s23 + 225*s13^3*s23^2 + 
              235*s13^2*s23^3 + 142*s13*s23^4 - 20*s23^5)) - 
          p2q*p3q^3*s12*(2*s13*s23*(s13 + s23)^2*(3*s13^2 - 4*s13*s23 + 
              s23^2) - s12^4*(3*s13^2 + 20*s23^2) + 
            s12^3*(36*s13^3 - 6*s13^2*s23 + s13*s23^2 - 17*s23^3) + 
            s12^2*(69*s13^4 + 244*s13^3*s23 + 179*s13^2*s23^2 + 
              201*s13*s23^3 + 23*s23^4) + s12*(30*s13^5 - 32*s13^4*s23 - 
              65*s13^3*s23^2 - 100*s13^2*s23^3 - 77*s13*s23^4 + 20*s23^5)) + 
          p1q^3*s23*(p3q*(2*s23*(s13 + s23)^3*(4*s13^2 + 4*s13*s23 + 
                5*s23^2) - s12*(s13 + s23)^2*(50*s13^3 + 14*s13^2*s23 + 
                6*s13*s23^2 - 17*s23^3) + s12^3*(24*s13^3 + 28*s13^2*s23 + 
                6*s13*s23^2 + 9*s23^3) + 2*s12^2*(33*s13^4 + 62*s13^3*s23 + 
                71*s13^2*s23^2 + 50*s13*s23^3 + 8*s23^4)) + 
            p2q*(s13 + s23)*(-2*(s13 + s23)^2*(10*s13^3 - s13^2*s23 - 
                4*s13*s23^2 - 5*s23^3) + s12^2*(86*s13^3 + 70*s13^2*s23 + 
                81*s13*s23^2 + 7*s23^3) + s12*(-26*s13^4 - 6*s13^3*s23 + 
                17*s13^2*s23^2 + 14*s13*s23^3 + 17*s23^4))) - 
          p1q^2*(p3q^2*(2*s13*(s13 - s23)*s23^2*(s13 + s23)^3 + 
              s12*s13*s23*(s13 + s23)^2*(52*s13^2 + 15*s13*s23 + 31*s23^2) + 
              s12^4*(20*s13^3 + 44*s13^2*s23 + 3*s13*s23^2 + 9*s23^3) + 
              s12^3*s13*(40*s13^3 + 126*s13^2*s23 + 117*s13*s23^2 + 
                103*s23^3) + s12^2*(20*s13^5 - 142*s13^4*s23 - 235*s13^3*
                 s23^2 - 225*s13^2*s23^3 - 161*s13*s23^4 - 9*s23^5)) - 
            p2q^2*(s13 + s23)*((s13 + s23)^2*(10*s13^4 - 15*s13^3*s23 - 
                16*s13^2*s23^2 - 15*s13*s23^3 + 10*s23^4) + s12^2*(10*s13^4 + 
                167*s13^3*s23 + 148*s13^2*s23^2 + 167*s13*s23^3 + 10*s23^4) + 
              4*s12*(5*s13^5 - 3*s13^4*s23 - s13^3*s23^2 - s13^2*s23^3 - 
                3*s13*s23^4 + 5*s23^5)) + p2q*p3q*(2*s23*(s13 + s23)^3*(
                9*s13^3 + 4*s13^2*s23 + 5*s13*s23^2 - 5*s23^3) + 
              s12^3*(-10*s13^4 + 73*s13^3*s23 + 98*s13^2*s23^2 + 
                88*s13*s23^3 - 6*s23^4) - s12*(s13 + s23)^2*(10*s13^4 - 
                77*s13^3*s23 + 32*s13^2*s23^2 - 57*s13*s23^3 + 17*s23^4) - 
              s12^2*(20*s13^5 + 348*s13^4*s23 + 530*s13^3*s23^2 + 
                527*s13^2*s23^3 + 338*s13*s23^4 + 13*s23^5))) - 
          p1q*(-(p2q^3*s13*(s13 + s23)*(2*(s13 + s23)^2*(5*s13^3 + 
                 4*s13^2*s23 + s13*s23^2 - 10*s23^3) + s12^2*(7*s13^3 + 
                 81*s13^2*s23 + 70*s13*s23^2 + 86*s23^3) + s12*(17*s13^4 + 
                 14*s13^3*s23 + 17*s13^2*s23^2 - 6*s13*s23^3 - 26*s23^4))) + 
            p2q*p3q^2*(-2*s13*(s13 - s23)^2*s23*(s13 + s23)^3 + 
              33*s12^4*(s13^3 + s23^3) - s12*(s13 + s23)^2*(10*s13^4 - 
                57*s13^3*s23 + 2*s13^2*s23^2 - 57*s13*s23^3 + 10*s23^4) + 
              s12^3*(47*s13^4 + 308*s13^3*s23 + 262*s13^2*s23^2 + 
                308*s13*s23^3 + 47*s23^4) + s12^2*(4*s13^5 - 306*s13^4*s23 - 
                418*s13^3*s23^2 - 418*s13^2*s23^3 - 306*s13*s23^4 + 
                4*s23^5)) + p2q^2*p3q*(-2*s13*(s13 + s23)^3*(5*s13^3 - 
                5*s13^2*s23 - 4*s13*s23^2 - 9*s23^3) + s12^3*(-6*s13^4 + 
                88*s13^3*s23 + 98*s13^2*s23^2 + 73*s13*s23^3 - 10*s23^4) - 
              s12*(s13 + s23)^2*(17*s13^4 - 57*s13^3*s23 + 32*s13^2*s23^2 - 
                77*s13*s23^3 + 10*s23^4) - s12^2*(13*s13^5 + 338*s13^4*s23 + 
                527*s13^3*s23^2 + 530*s13^2*s23^3 + 348*s13*s23^4 + 
                20*s23^5)) + p3q^3*s12*(-(s12^4*(20*s13^2 + 3*s23^2)) + 
              2*s13*s23*(s13 + s23)^2*(s13^2 - 4*s13*s23 + 3*s23^2) + 
              s12^3*(-17*s13^3 + s13^2*s23 - 6*s13*s23^2 + 36*s23^3) + 
              s12^2*(23*s13^4 + 201*s13^3*s23 + 179*s13^2*s23^2 + 
                244*s13*s23^3 + 69*s23^4) + s12*(20*s13^5 - 77*s13^4*s23 - 
                100*s13^3*s23^2 - 65*s13^2*s23^3 - 32*s13*s23^4 + 
                30*s23^5)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13^2*s23^2*(s13 + s23)*(-(p3q*s12) + (p1q + p2q)*
           (s13 + s23))) + (-18*p1q^4*s12*s23^2*(s13 + s23)^2*
          (s12 + s13 + s23)*(2*s13 + s23) - 18*p2q^4*s12*s13^2*(s13 + s23)^2*
          (s12 + s13 + s23)*(s13 + 2*s23) + 2*p3q^4*s12^2*
          (s12^3*(9*s13^2 + 6*s13*s23 + 9*s23^2) - s12*s13*s23*
            (13*s13^2 + 2*s13*s23 + 13*s23^2) + s13*s23*(-13*s13^3 + 
             21*s13^2*s23 + 21*s13*s23^2 - 13*s23^3) + 
           3*s12^2*(3*s13^3 - 7*s13^2*s23 - 7*s13*s23^2 + 3*s23^3)) + 
         p1q^3*p3q*s23*(s13 + s23)*(-7*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
           6*s12^3*(6*s13^2 + 16*s13*s23 + 9*s23^2) - 
           2*s12*s23*(45*s13^3 + 37*s13^2*s23 + s13*s23^2 + 9*s23^3) + 
           s12^2*(-36*s13^3 - 23*s13^2*s23 + 87*s13*s23^2 + 36*s23^3)) + 
         p1q*p3q^3*s12*(6*s12^4*s23*(s13 + 3*s23) + s13*s23*(s13 + s23)^2*
            (33*s13^2 - 68*s13*s23 + 19*s23^2) + 2*s12*s13*s23*
            (7*s13^3 + 78*s13^2*s23 + 51*s13*s23^2 - 20*s23^3) - 
           6*s12^3*(3*s13^3 + 20*s13^2*s23 + 19*s13*s23^2 + 6*s23^3) + 
           s12^2*(-18*s13^4 + 53*s13^3*s23 + 162*s13^2*s23^2 - 35*s13*s23^3 - 
             54*s23^4)) + p1q^2*p3q^2*s23*(-7*s13*(s13 - s23)*s23*
            (s13 + s23)^3 - 6*s12^4*(7*s13^2 + 14*s13*s23 + 9*s23^2) + 
           s12*s13*(s13 + s23)^2*(33*s13^2 - 152*s13*s23 + 59*s23^2) + 
           s12^3*s13*(133*s13^2 + 226*s13*s23 + 69*s23^2) + 
           s12^2*(-8*s13^4 - 17*s13^3*s23 + 34*s13^2*s23^2 + 97*s13*s23^3 + 
             54*s23^4)) + p2q^2*s13*(p1q^2*s23*(s13 + s23)*
            (7*(s13^2 - s23^2)^2 - s12^2*(21*s13^2 + 118*s13*s23 + 21*
                s23^2) + 2*s12*(65*s13^3 + 71*s13^2*s23 + 71*s13*s23^2 + 65*
                s23^3)) + p1q*p3q*(7*s23*(s13 + s23)^3*(2*s13^2 - 3*s13*s23 + 
               s23^2) - s12*(s13 + s23)^2*(18*s13^3 - 135*s13^2*s23 + 206*s13*
                s23^2 - 133*s23^3) + s12^3*(36*s13^3 + 117*s13^2*s23 + 220*
                s13*s23^2 + 115*s23^3) + s12^2*(18*s13^4 - 104*s13^3*s23 - 
               447*s13^2*s23^2 - 444*s13*s23^3 - 119*s23^4)) + 
           p3q^2*(7*s13*(s13 - s23)*s23*(s13 + s23)^3 - 
             6*s12^4*(9*s13^2 + 14*s13*s23 + 7*s23^2) + s12*s23*(s13 + s23)^2*
              (59*s13^2 - 152*s13*s23 + 33*s23^2) + s12^3*s23*
              (69*s13^2 + 226*s13*s23 + 133*s23^2) + s12^2*(54*s13^4 + 97*
                s13^3*s23 + 34*s13^2*s23^2 - 17*s13*s23^3 - 8*s23^4))) + 
         p2q^3*s13*(s13 + s23)*(p3q*(7*s13*(s13 - s23)*s23*(s13 + s23)^2 + 
             6*s12^3*(9*s13^2 + 16*s13*s23 + 6*s23^2) + 
             s12^2*(36*s13^3 + 87*s13^2*s23 - 23*s13*s23^2 - 36*s23^3) - 
             2*s12*s13*(9*s13^3 + s13^2*s23 + 37*s13*s23^2 + 45*s23^3)) + 
           p1q*(7*s13*(s13 - s23)*s23*(s13 + s23)^2 - 
             s12^2*(18*s13^3 + 39*s13^2*s23 + 95*s13*s23^2 + 36*s23^3) + 
             s12*(-18*s13^4 + 22*s13^3*s23 + 10*s13^2*s23^2 + 6*s13*s23^3 + 
               36*s23^4))) + p2q*(p3q^3*s12*(6*s12^4*s13*(3*s13 + s23) + 
             s13*s23*(s13 + s23)^2*(19*s13^2 - 68*s13*s23 + 33*s23^2) - 
             6*s12^3*(6*s13^3 + 19*s13^2*s23 + 20*s13*s23^2 + 3*s23^3) + 
             2*s12*s13*s23*(-20*s13^3 + 51*s13^2*s23 + 78*s13*s23^2 + 7*
                s23^3) + s12^2*(-54*s13^4 - 35*s13^3*s23 + 162*s13^2*s23^2 + 
               53*s13*s23^3 - 18*s23^4)) + p1q^2*p3q*s23*
            (7*s13*(s13 + s23)^3*(s13^2 - 3*s13*s23 + 2*s23^2) + 
             s12*(s13 + s23)^2*(133*s13^3 - 206*s13^2*s23 + 135*s13*s23^2 - 
               18*s23^3) + s12^3*(115*s13^3 + 220*s13^2*s23 + 117*s13*s23^2 + 
               36*s23^3) - s12^2*(119*s13^4 + 444*s13^3*s23 + 447*s13^2*
                s23^2 + 104*s13*s23^3 - 18*s23^4)) - p1q^3*s23*(s13 + s23)*
            (7*s13*(s13 - s23)*s23*(s13 + s23)^2 + s12^2*(36*s13^3 + 95*s13^2*
                s23 + 39*s13*s23^2 + 18*s23^3) - 2*s12*(18*s13^4 + 3*s13^3*
                s23 + 5*s13^2*s23^2 + 11*s13*s23^3 - 9*s23^4)) + 
           p1q*p3q^2*(7*s13*(s13 - s23)^2*s23*(s13 + s23)^3 + 
             4*s12*s13*s23*(s13 + s23)^2*(23*s13^2 - 76*s13*s23 + 23*s23^2) - 
             6*s12^4*(3*s13^3 + 11*s13^2*s23 + 11*s13*s23^2 + 3*s23^3) + 
             2*s12^3*(9*s13^4 + 130*s13^3*s23 + 290*s13^2*s23^2 + 130*s13*
                s23^3 + 9*s23^4) + s12^2*(36*s13^5 - 39*s13^4*s23 - 157*s13^3*
                s23^2 - 157*s13^2*s23^3 - 39*s13*s23^4 + 36*s23^5))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13^2*s23^2*
         (s13 + s23)*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]] + 
     ((ep^3*(p2q*s13*(s12*s13*(20*s13 - 9*s23) + s12^2*(20*s13 + s23) - 
            s23*(-10*s13^2 + 7*s13*s23 + s23^2)) + 
          p1q*s23*(s12^2*(20*s13 + s23) + s23*(-10*s13^2 + 7*s13*s23 + 
              s23^2) + s12*(-20*s13^2 + 27*s13*s23 + 2*s23^2)) - 
          p3q*(4*s13*s23^2*(5*s13 + s23) + s12^3*(20*s13 + s23) + 
            s12*s23*(50*s13^2 + 15*s13*s23 + s23^2) + 
            s12^2*(20*s13^2 + 31*s13*s23 + 2*s23^2))))/(27*(p1q + p2q + p3q)*
         s13*s23^2*(s12 + s23)) + 
       (ep^2*(2*p1q^4*s23^2*(s12 + s23)*(s12^4 + s13*s23^2*(s13 + s23) + 
            s12^2*s23*(3*s13 + s23) + s12^3*(s13 + 2*s23) + 
            s12*s13*s23*(2*s13 + 3*s23)) - 2*p2q^4*s13^2*s23*
           (s12^4 + s13*s23^2*(s13 + s23) + s12*s23^2*(3*s13 + 2*s23) + 
            s12^3*(s13 + 4*s23) + s12^2*s23*(3*s13 + 5*s23)) - 
          p3q^4*s12^2*(s12 + s23)*(3*s12^3*(40*s13 + s23) + 
            2*s23^2*(33*s13^2 - 7*s13*s23 + 9*s23^2) + 
            3*s12^2*(40*s13^2 + 51*s13*s23 + 10*s23^2) + 
            s12*s23*(194*s13^2 + 21*s13*s23 + 45*s23^2)) + 
          p2q*p3q^3*s12^2*(-(s12^4*(100*s13 + 3*s23)) + 
            s12^3*(160*s13^2 - 129*s13*s23 - 33*s23^2) + 
            s12^2*(260*s13^3 + 148*s13^2*s23 + 121*s13*s23^2 - 71*s23^3) + 
            s12*s23*(406*s13^3 - 79*s13^2*s23 + 225*s13*s23^2 - 55*s23^3) + 
            s23^2*(136*s13^3 - 69*s13^2*s23 + 75*s13*s23^2 - 14*s23^3)) + 
          p2q^2*p3q^2*(-2*s12^6*s23 + 2*s13^2*s23^3*(s13 + s23)^2 + 
            s12^5*(200*s13^2 + 82*s13*s23 - 6*s23^2) + 
            s12^4*(40*s13^3 + 201*s13^2*s23 + 233*s13*s23^2 - 2*s23^3) + 
            2*s12*s13*s23^2*(s13^3 + 3*s13^2*s23 + 4*s13*s23^2 + 2*s23^3) + 
            s12^2*s23*(-92*s13^4 + 83*s13^3*s23 - 60*s13^2*s23^2 + 
              67*s13*s23^3 + 4*s23^4) + s12^3*(-160*s13^4 + 157*s13^3*s23 - 
              63*s13^2*s23^2 + 214*s13*s23^3 + 6*s23^4)) + 
          p2q^3*p3q*s13*(4*s12^5*s23 + s12^4*(-100*s13^2 - 77*s13*s23 + 
              14*s23^2) - s12^3*(80*s13^3 + 69*s13^2*s23 + 118*s13*s23^2 - 
              16*s23^3) - 2*s12*s23^2*(s13^3 + 2*s13^2*s23 - 2*s13*s23^2 - 
              2*s23^3) - 2*s13*s23^2*(s13^3 + 2*s13^2*s23 - s23^3) + 
            s12^2*(20*s13^4 - 32*s13^3*s23 + 3*s13^2*s23^2 - 39*s13*s23^3 + 
              10*s23^4)) + p1q^3*s23*(-(p3q*(s12 + s23)*(2*s12^5 + s12^4*
                (-122*s13 + 15*s23) - 2*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) - 
               2*s12*s23^2*(4*s13^2 + 6*s13*s23 + s23^2) + s12^2*s23*
                (30*s13^2 - 69*s13*s23 + 7*s23^2) + s12^3*(40*s13^2 - 
                 183*s13*s23 + 20*s23^2))) + p2q*(17*s12^5*(6*s13 - s23) + 
              s12^4*(-42*s13^2 + 239*s13*s23 - 47*s23^2) + s12^3*(20*s13^3 - 
                76*s13^2*s23 + 172*s13*s23^2 - 43*s23^3) + s12^2*s23*(
                16*s13^3 - 46*s13^2*s23 + 35*s13*s23^2 - 11*s23^3) + 
              2*s23^3*(-3*s13^3 - 3*s13^2*s23 + s13*s23^2 + s23^3) + 
              2*s12*s23^2*(-6*s13^3 - 9*s13^2*s23 + s13*s23^2 + 2*s23^3))) + 
          p1q^2*(-(p3q^2*(s12 + s23)*(-2*s23^4*(s13 + s23)^2 + 5*s12^5*
                (24*s13 + s23) - 2*s12*s23^3*(2*s13^2 + 3*s13*s23 + s23^2) + 
               2*s12^2*s23^2*(63*s13^2 - 71*s13*s23 + 15*s23^2) + s12^4*
                (120*s13^2 - 93*s13*s23 + 56*s23^2) + s12^3*s23*(274*s13^2 - 
                 347*s13*s23 + 81*s23^2))) - p2q*p3q*(s12^6*(100*s13 - s23) + 
              2*s12*s13*s23^3*(10*s13^2 + 17*s13*s23 + 6*s23^2) + 
              s12^5*(-40*s13^2 - 78*s13*s23 + 47*s23^2) + 2*s23^4*(5*s13^3 + 
                8*s13^2*s23 + 2*s13*s23^2 - s23^3) + 2*s12^2*s23^2*(
                -67*s13^3 + 98*s13^2*s23 - 69*s13*s23^2 + 20*s23^3) + 
              s12^3*s23*(-294*s13^3 + 425*s13^2*s23 - 574*s13*s23^2 + 
                121*s23^3) + s12^4*(-140*s13^3 + 209*s13^2*s23 - 
                606*s13*s23^2 + 131*s23^3)) + p2q^2*(6*s13*(s13 - s23)*s23^
                3*(s13 + s23)^2 + s12^5*(100*s13^2 + 79*s13*s23 + 2*s23^2) + 
              s12^4*(80*s13^3 + 67*s13^2*s23 + 216*s13*s23^2 + 6*s23^3) - 
              2*s12*s23^2*(-3*s13^4 - 6*s13^3*s23 + 2*s13^2*s23^2 + 
                7*s13*s23^3 + 2*s23^4) + s12^3*(-20*s13^4 + 156*s13^3*s23 - 
                81*s13^2*s23^2 + 187*s13*s23^3 + 2*s23^4) - 2*s12^2*s23*(
                20*s13^4 - 33*s13^3*s23 + 24*s13^2*s23^2 - 21*s13*s23^3 + 
                3*s23^4))) + p1q*(-(p3q^3*s12^2*(s12 + s23)*
              (6*s12^3*(40*s13 + s23) + 3*s23^2*(54*s13^2 - 31*s13*s23 + 
                 13*s23^2) + s12^2*(240*s13^2 + 182*s13*s23 + 69*s23^2) + s12*
                s23*(428*s13^2 - 145*s13*s23 + 102*s23^2))) - 
            p2q*p3q^2*(4*s13*s23^4*(s13 + s23)^2 + 2*s12^6*(100*s13 + s23) + 
              s12^5*(-200*s13^2 + 155*s13*s23 + 63*s23^2) + 4*s12*s23^3*(
                2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
              s12^2*s23^2*(-254*s13^3 + 227*s13^2*s23 - 170*s13*s23^2 + 
                43*s23^3) + s12^3*s23*(-680*s13^3 + 436*s13^2*s23 - 
                611*s13*s23^2 + 133*s23^3) + s12^4*(-400*s13^3 + 
                21*s13^2*s23 - 478*s13*s23^2 + 155*s23^3)) + 
            p2q^2*p3q*(-2*s12^6*s23 + s12^5*(300*s13^2 + 157*s13*s23 - 
                4*s23^2) + 2*s13*s23^3*(4*s13^3 + 7*s13^2*s23 + s13*s23^2 - 
                2*s23^3) + s12^4*(120*s13^3 + 266*s13^2*s23 + 433*s13*s23^2 + 
                4*s23^3) + 2*s12*s23^2*(4*s13^4 + 9*s13^3*s23 + 
                6*s13^2*s23^2 - 2*s13*s23^3 - 2*s23^4) + s12^2*s23*(
                -132*s13^4 + 151*s13^3*s23 - 112*s13^2*s23^2 + 107*s13*
                 s23^3 - 2*s23^4) + s12^3*(-180*s13^4 + 315*s13^3*s23 - 
                152*s13^2*s23^2 + 383*s13*s23^3 + 8*s23^4)) + 
            p2q^3*s13*(2*s12^5*s23 + s12^4*(-100*s13^2 - 75*s13*s23 + 
                8*s23^2) - s12^3*(80*s13^3 + 65*s13^2*s23 + 110*s13*s23^2 - 
                14*s23^3) - 2*s13*s23^2*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 
                3*s23^3) + 2*s12*s23^2*(-s13^3 + s13^2*s23 + 8*s13*s23^2 + 
                4*s23^3) + s12^2*(20*s13^4 - 32*s13^3*s23 + 11*s13^2*s23^2 - 
                25*s13*s23^3 + 16*s23^4)))))/(54*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13*s23^2*(s12 + s23)*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p1q^5*s13*s23^2*(-39*s12^4 + 6*s12^3*(8*s13 - 13*s23) + 
           40*s13*s23^2*(s13 + s23) + 2*s12*s13*s23*(63*s13 + 83*s23) + 
           3*s12^2*(29*s13^2 + 58*s13*s23 - 13*s23^2)) + 
         p3q*(2*p3q^4*s12^2*(6*s12^4*s13 + 3*s12^3*(2*s13^2 + 13*s13*s23 - 78*
                s23^2) + s12*s13*s23*(20*s13^2 - 106*s13*s23 - 37*s23^2) + 
             s13*s23^2*(20*s13^2 - 31*s13*s23 + 137*s23^2) - 
             s12^2*s23*(73*s13^2 + 135*s13*s23 + 234*s23^2)) - 
           2*p2q^4*s13^2*(20*s13^2*s23^2*(s13 + s23) + s12*s13*s23^2*
              (63*s13 + 43*s23) + s12^3*(6*s13^2 - 7*s13*s23 + 234*s23^2) + 
             s12^2*(6*s13^3 - s13^2*s23 + 270*s13*s23^2 + 234*s23^3)) + 
           2*p2q*p3q^3*s12*(6*s12^5*s13 - 40*s13^3*s23^2*(s13 + s23) - 
             3*s12^4*(4*s13^2 - 9*s13*s23 + 156*s23^2) + s12^2*s13*s23*
              (169*s13^2 + 249*s13*s23 + 161*s23^2) - 
             2*s12^3*(9*s13^3 + 73*s13^2*s23 - 10*s13*s23^2 + 234*s23^3) + 
             s12*s13*s23*(-60*s13^3 + 89*s13^2*s23 + 39*s13*s23^2 + 414*
                s23^3)) + p2q^2*p3q^2*(40*s13^3*s23^2*(s13 + s23)^2 - 
             4*s12^4*s23*(26*s13^2 - 331*s13*s23 + 117*s23^2) - 
             3*s12^5*(12*s13^2 - 5*s13*s23 + 156*s23^2) - 2*s12^2*s13*s23*
              (119*s13^3 + 93*s13^2*s23 - 99*s13*s23^2 - 511*s23^3) + 
             2*s12*s13^2*s23*(60*s13^3 + 57*s13^2*s23 + 40*s13*s23^2 + 43*
                s23^3) + s12^3*s13*(36*s13^3 + 351*s13^2*s23 + 1396*s13*
                s23^2 + 1359*s23^3)) + p2q^3*p3q*s13*
            (s12^4*(36*s13^2 - 29*s13*s23 + 936*s23^2) - 40*s13^2*s23*
              (s13^3 + 2*s13^2*s23 - s23^3) + 2*s12*s13*s23*(23*s13^3 + 40*
                s13*s23^2 + 43*s23^3) + 2*s12^3*(12*s13^3 + 24*s13^2*s23 + 77*
                s13*s23^2 + 462*s23^3) - s12^2*(12*s13^4 + 137*s13^3*s23 + 
               838*s13^2*s23^2 + 403*s13*s23^3 - 468*s23^4))) + 
         p1q^3*s23*(p3q^2*(132*s12^5*s13 + 2*s12*s13*s23^2*(189*s13^2 + 163*
                s13*s23 - 46*s23^2) + 40*s13*s23^3*(3*s13^2 + 5*s13*s23 + 2*
                s23^2) + 6*s12^3*s13*(50*s13^2 - 17*s13*s23 + 153*s23^2) + 
             s12^4*(-576*s13^2 + 865*s13*s23 + 936*s23^2) + 
             s12^2*s23*(561*s13^3 + 604*s13^2*s23 + 61*s13*s23^2 - 936*
                s23^3)) + 2*p2q*p3q*(27*s12^5*s13 + s12^4*(-153*s13^2 + 620*
                s13*s23 + 468*s23^2) + s12^3*(363*s13^3 + 559*s13^2*s23 + 766*
                s13*s23^2 - 234*s23^3) - 20*s13*s23^2*(8*s13^3 + 11*s13^2*
                s23 + s13*s23^2 - 2*s23^3) - s12*s13*s23*(375*s13^3 + 360*
                s13^2*s23 + 14*s13*s23^2 + 89*s23^3) + 
             s12^2*(-213*s13^4 + 74*s13^3*s23 + 854*s13^2*s23^2 + 314*s13*
                s23^3 - 702*s23^4)) + p2q^2*(120*s13^2*(s13 - s23)*s23*
              (s13 + s23)^2 + s12^4*(-78*s13^2 + 453*s13*s23) + 
             2*s12^3*(63*s13^3 + 146*s13^2*s23 + 268*s13*s23^2 - 234*s23^3) + 
             s12^2*(-174*s13^4 - 211*s13^3*s23 + 644*s13^2*s23^2 + 489*s13*
                s23^3 - 468*s23^4) + 2*s12*s13*(63*s13^4 + 37*s13^3*s23 - 40*
                s13^2*s23^2 - 57*s13*s23^3 - 43*s23^4))) + 
         p1q^4*s23*(p3q*(39*s12^5*s13 - 42*s12^4*s13*(3*s13 - 4*s23) + 
             2*s12*s13*s23^2*(189*s13^2 + 226*s13*s23 - 3*s23^2) + 
             40*s13*s23^3*(3*s13^2 + 4*s13*s23 + s23^2) + 
             s12^3*(87*s13^3 + 140*s13^2*s23 - 139*s13*s23^2 - 468*s23^3) + 
             2*s12^2*s23*(174*s13^3 + 281*s13^2*s23 - 151*s13*s23^2 - 234*
                s23^3)) - p2q*(3*s12^4*s13*(13*s13 - 56*s23) + 
             40*s13*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - s23^3) + 
             2*s12*s13*s23*(126*s13^3 + 143*s13^2*s23 - 20*s13*s23^2 + 3*
                s23^3) + s12^3*(-126*s13^3 - 296*s13^2*s23 + 22*s13*s23^2 + 
               468*s23^3) + s12^2*(87*s13^4 - 339*s13^2*s23^2 + 224*s13*
                s23^3 + 468*s23^4))) + 
         p1q*(-2*p2q^4*s13^2*(20*s13^2*s23^2*(s13 + s23) + s12*s13*s23^2*
              (63*s13 + 43*s23) + s12^3*(6*s13^2 - 7*s13*s23 + 234*s23^2) + 
             s12^2*(6*s13^3 - s13^2*s23 + 270*s13*s23^2 + 234*s23^3)) + 
           2*p3q^4*s12*(12*s12^5*s13 - 40*s13*s23^4*(s13 + s23) - 
             4*s12^3*s13*s23*(77*s13 + 16*s23) + 3*s12^4*(4*s13^2 + 35*s13*
                s23 - 156*s23^2) + s12*s13*s23^2*(103*s13^2 - 61*s13*s23 + 
               548*s23^2) + s12^2*s23*(103*s13^3 - 331*s13^2*s23 + 407*s13*
                s23^2 + 468*s23^3)) + 2*p2q*p3q^3*(12*s12^6*s13 - 
             40*s13^2*s23^3*(s13 + s23)^2 - 9*s12^5*(2*s13^2 - 9*s13*s23 + 78*
                s23^2) - s12*s13*s23^2*(203*s13^3 + 157*s13^2*s23 + 37*s13*
                s23^2 + 83*s23^3) + s12^4*(-30*s13^3 - 381*s13^2*s23 + 732*
                s13*s23^2 + 234*s23^3) + 2*s12^3*s23*(297*s13^3 + 391*s13^2*
                s23 + 795*s13*s23^2 + 468*s23^3) + 2*s12^2*s13*s23*
              (-123*s13^3 + 124*s13^2*s23 + 296*s13*s23^2 + 803*s23^3)) + 
           2*p2q^3*p3q*s13*(s12^4*(24*s13^2 - 22*s13*s23 + 474*s23^2) + 
             20*s13^2*s23*(-2*s13^3 - 3*s13^2*s23 + 3*s13*s23^2 + 4*s23^3) + 
             s12*s13*s23*(46*s13^3 + 20*s13^2*s23 + 163*s13*s23^2 + 129*
                s23^3) + s12^3*(18*s13^3 + 67*s13^2*s23 - 345*s13*s23^2 + 468*
                s23^3) - s12^2*(6*s13^4 + 107*s13^3*s23 + 858*s13^2*s23^2 + 
               398*s13*s23^3 - 474*s23^4)) + p2q^2*p3q^2*
            (-6*s12^5*(10*s13^2 - 5*s13*s23 + 78*s23^2) + 40*s13^2*s23^2*
              (5*s13^3 + 9*s13^2*s23 + 2*s13*s23^2 - 2*s23^3) + 
             s12^4*(-12*s13^3 - 298*s13^2*s23 + 2657*s13*s23^2 + 468*s23^3) + 
             s12^2*s13*s23*(-664*s13^3 - 1323*s13^2*s23 + 504*s13*s23^2 + 
               3025*s23^3) + 2*s12*s13*s23*(183*s13^4 + 108*s13^3*s23 + 77*
                s13^2*s23^2 + 89*s13*s23^3 - 43*s23^4) + 
             2*s12^3*(24*s13^4 + 383*s13^3*s23 + 754*s13^2*s23^2 + 1651*s13*
                s23^3 + 468*s23^4))) + 
         p1q^2*(p2q^3*s13*(3*s12^4*(4*s13^2 - 5*s13*s23 + 156*s23^2) - 
             40*s13^2*s23*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             2*s12*s13*s23*(23*s13^3 + 20*s13^2*s23 + 123*s13*s23^2 + 86*
                s23^3) + 2*s12^3*(6*s13^3 + 43*s13^2*s23 + 34*s13*s23^2 + 462*
                s23^3) + s12^2*s23*(-77*s13^3 - 422*s13^2*s23 + 519*s13*
                s23^2 + 936*s23^3)) + p3q^3*(12*s12^6*s13 + 
             40*s13*s23^4*(s13 + s23)^2 + 3*s12^5*(4*s13^2 + 75*s13*s23 - 156*
                s23^2) + 2*s12*s13*s23^3*(63*s13^2 - 20*s13*s23 - 83*s23^2) + 
             4*s12^4*s23*(-230*s13^2 + 200*s13*s23 + 351*s23^2) + 
             2*s12^2*s23^2*(233*s13^3 + 78*s13^2*s23 + 573*s13*s23^2 - 234*
                s23^3) + s12^3*s23*(379*s13^3 - 644*s13^2*s23 + 1867*s13*
                s23^2 + 1404*s23^3)) + p2q*p3q^2*(12*s12^6*s13 - 
             6*s12^5*(2*s13^2 - 27*s13*s23 + 78*s23^2) - 40*s13*s23^3*
              (7*s13^3 + 12*s13^2*s23 + 4*s13*s23^2 - s23^3) - 
             2*s12*s13*s23^2*(412*s13^3 + 334*s13^2*s23 + 71*s13*s23^2 + 169*
                s23^3) + 2*s12^3*s23*(725*s13^3 + 944*s13^2*s23 + 2206*s13*
                s23^2 + 936*s23^3) + s12^4*(-24*s13^3 - 737*s13^2*s23 + 2496*
                s13*s23^2 + 2340*s23^3) + s12^2*s23*(-711*s13^4 + 466*s13^3*
                s23 + 2475*s13^2*s23^2 + 3236*s13*s23^3 - 936*s23^4)) + 
           p2q^2*p3q*(-3*s12^5*s13*(8*s13 - 5*s23) + 40*s13^2*s23^2*
              (7*s13^3 + 10*s13^2*s23 - 2*s13*s23^2 - 5*s23^3) + 
             s12^4*(-12*s13^3 - 272*s13^2*s23 + 2242*s13*s23^2 + 936*s23^3) + 
             2*s12*s13*s23*(186*s13^4 + 88*s13^3*s23 - 3*s13^2*s23^2 - 11*s13*
                s23^3 - 86*s23^4) - 2*s12^2*s23*(300*s13^4 + 446*s13^3*s23 - 
               931*s13^2*s23^2 - 1474*s13*s23^3 + 234*s23^4) + 
             s12^3*(12*s13^4 + 541*s13^3*s23 + 1316*s13^2*s23^2 + 3391*s13*
                s23^3 + 468*s23^4))))/(54*ep*(p1q + p3q)^2*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (ep*(-2*p1q^5*s13*s23^2*(s12 + s23)^2*
           (s12^4 - 19*s13*s23^2*(s13 + s23) + s12^3*(53*s13 + 19*s23) + 
            s12*s23*(4*s13^2 + 2*s13*s23 + 17*s23^2) + 
            s12^2*(52*s13^2 + 74*s13*s23 + 35*s23^2)) - p1q^4*s23*(s12 + s23)*
           (p3q*(78*s12^6*s13 + s12^5*s13*(218*s13 + 9*s23) - 
              38*s13*s23^4*(3*s13^2 + 4*s13*s23 + s23^2) - 2*s12*s13*s23^3*(
                43*s13^2 + 95*s13*s23 + 14*s23^2) + s12^4*(-136*s13^3 + 
                803*s13^2*s23 - 503*s13*s23^2 + 48*s23^3) + s12^2*s23^2*(
                366*s13^3 + 591*s13^2*s23 - 277*s13*s23^2 + 48*s23^3) + 
              s12^3*s23*(182*s13^3 + 1214*s13^2*s23 - 721*s13*s23^2 + 
                96*s23^3)) + p2q*(s12^5*s13*(362*s13 - 237*s23) + 
              2*s12*s13*s23^2*(28*s13^3 + 80*s13^2*s23 - 51*s13*s23^2 - 
                65*s23^3) + 38*s13*s23^3*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - 
                s23^3) + s12^4*(-58*s13^3 + 879*s13^2*s23 - 875*s13*s23^2 + 
                48*s23^3) + s12^2*s23*(-264*s13^4 - 80*s13^3*s23 + 
                213*s13^2*s23^2 - 595*s13*s23^3 + 48*s23^4) + 
              s12^3*(-144*s13^4 - 204*s13^3*s23 + 794*s13^2*s23^2 - 
                1141*s13*s23^3 + 96*s23^4))) + 
          p1q^3*(p3q^2*(s12 + s23)*(80*s12^7*s13 + s12^6*s13*(160*s13 + 
                69*s23) + 38*s13*s23^5*(3*s13^2 + 5*s13*s23 + 2*s23^2) + 
              2*s12*s13*s23^4*(39*s13^2 + 143*s13*s23 + 85*s23^2) - 
              s12^3*s23^2*(46*s13^3 + 3325*s13^2*s23 - 3186*s13*s23^2 + 
                96*s23^3) - s12^2*s23^3*(524*s13^3 + 1489*s13^2*s23 - 
                1539*s13*s23^2 + 96*s23^3) + s12^5*(80*s13^3 - 593*s13^2*
                 s23 + 404*s13*s23^2 + 96*s23^3) + s12^4*s23*(442*s13^3 - 
                2493*s13^2*s23 + 2156*s13*s23^2 + 96*s23^3)) - 
            p2q*p3q*(s12^7*s13*(40*s13 - 23*s23) + 2*s12*s13*s23^4*(
                232*s13^3 + 516*s13^2*s23 + 51*s13*s23^2 - 176*s23^3) + 
              s12^6*(80*s13^3 + 1920*s13^2*s23 - 767*s13*s23^2 - 96*s23^3) + 
              38*s13*s23^5*(8*s13^3 + 11*s13^2*s23 + s13*s23^2 - 2*s23^3) + 
              s12^5*(40*s13^4 + 17*s13^3*s23 + 6683*s13^2*s23^2 - 
                3586*s13*s23^3 - 144*s23^4) + 3*s12^3*s23^2*(-350*s13^4 - 
                353*s13^3*s23 + 2481*s13^2*s23^2 - 1997*s13*s23^3 + 
                112*s23^4) + s12^4*s23*(-270*s13^4 - 752*s13^3*s23 + 
                9969*s13^2*s23^2 - 6798*s13*s23^3 + 144*s23^4) + 
              s12^2*s23^3*(-600*s13^4 + 244*s13^3*s23 + 2341*s13^2*s23^2 - 
                2311*s13*s23^3 + 144*s23^4)) - 
            p2q^2*(-114*s13^2*(s13 - s23)*s23^4*(s13 + s23)^2 + 
              s12^6*s13*(40*s13^2 + 263*s13*s23 + 34*s23^2) - 
              2*s12*s13*s23^3*(68*s13^4 + 166*s13^3*s23 - 89*s13^2*s23^2 - 
                185*s13*s23^3 + 2*s23^4) + s12^5*(80*s13^4 - 411*s13^3*s23 + 
                1089*s13^2*s23^2 + 48*s13*s23^3 + 48*s23^4) + 
              2*s12^2*s23^2*(85*s13^5 - 191*s13^4*s23 - 341*s13^3*s23^2 + 
                581*s13^2*s23^3 - 81*s13*s23^4 + 24*s23^5) + 
              s12^3*s23*(232*s13^5 - 114*s13^4*s23 - 1833*s13^3*s23^2 + 
                2185*s13^2*s23^3 - 332*s13*s23^4 + 144*s23^5) + 
              s12^4*(40*s13^5 + 110*s13^4*s23 - 1538*s13^3*s23^2 + 
                2105*s13^2*s23^3 - 160*s13*s23^4 + 144*s23^5))) + 
          p3q*(p3q^4*s12^2*(s12 + s23)*(92*s12^5*s13 - 2*s13*s23^3*(
                47*s13^2 + 259*s13*s23 - 111*s23^2) + s12^4*(172*s13^2 + 
                421*s13*s23 - 48*s23^2) + s12*s13*s23^2*(-116*s13^2 - 
                989*s13*s23 + 543*s23^2) + s12^3*(80*s13^3 + 171*s13^2*s23 + 
                713*s13*s23^2 - 96*s23^3) + s12^2*s23*(38*s13^3 - 
                472*s13^2*s23 + 705*s13*s23^2 - 48*s23^3)) - 
            2*p2q^4*s13^2*(s12 + s23)*(19*s13^2*s23^3*(s13 + s23) - 
              s12*s13*s23^2*(19*s13^2 + 2*s13*s23 + 2*s23^2) + 
              3*s12^4*(2*s13^2 - 13*s13*s23 + 8*s23^2) + s12^2*s23*(
                -6*s13^3 - 78*s13^2*s23 - 31*s13*s23^2 + 24*s23^3) + 
              s12^3*(6*s13^3 - 39*s13^2*s23 - 68*s13*s23^2 + 48*s23^3)) + 
            p2q*p3q^3*s12*(12*s12^7*s13 + s12^6*(-144*s13^2 + 227*s13*s23 - 
                96*s23^2) + 4*s13^2*s23^4*(3*s13^2 + 2*s13*s23 - s23^2) + 
              s12*s13*s23^3*(112*s13^3 + 537*s13^2*s23 - 1263*s13*s23^2 + 
                266*s23^3) - s12^5*(276*s13^3 + 1327*s13^2*s23 - 
                702*s13*s23^2 + 288*s23^3) + s12^2*s13*s23^2*(92*s13^3 + 
                664*s13^2*s23 - 3884*s13*s23^2 + 747*s23^3) - 
              s12^3*s23*(108*s13^4 + 375*s13^3*s23 + 5082*s13^2*s23^2 - 
                980*s13*s23^3 + 96*s23^4) - 2*s12^4*(60*s13^4 + 393*s13^3*
                 s23 + 1820*s13^2*s23^2 - 493*s13*s23^3 + 144*s23^4)) + 
            p2q^2*p3q^2*(38*s13^3*s23^4*(s13 + s23)^2 + s12^7*(-36*s13^2 + 
                82*s13*s23 - 48*s23^2) - 16*s12^6*s23*(41*s13^2 - 
                21*s13*s23 + 9*s23^2) + 2*s12*s13^2*s23^3*(30*s13^3 + 
                99*s13^2*s23 + 65*s13*s23^2 - 4*s23^3) + s12^5*(36*s13^4 + 
                651*s13^3*s23 - 1839*s13^2*s23^2 + 464*s13*s23^3 - 
                144*s23^4) + s12^4*s23*(435*s13^4 + 1988*s13^3*s23 - 
                2549*s13^2*s23^2 + 340*s13*s23^3 - 48*s23^4) + 
              s12^2*s13*s23^2*(-52*s13^4 + 137*s13^3*s23 + 1276*s13^2*s23^2 - 
                807*s13*s23^3 + 92*s23^4) + s12^3*s13*s23*(-54*s13^4 + 
                354*s13^3*s23 + 2521*s13^2*s23^2 - 2129*s13*s23^3 + 
                222*s23^4)) + p2q^3*p3q*s13*(4*s12^6*(9*s13^2 - 40*s13*s23 + 
                24*s23^2) - 38*s13^2*s23^3*(s13^3 + 2*s13^2*s23 - s23^3) + 
              s12^5*(64*s13^3 + 363*s13^2*s23 - 446*s13*s23^2 + 288*s23^3) - 
              2*s12*s13*s23^2*(17*s13^4 + 65*s13^3*s23 + 25*s13^2*s23^2 - 
                40*s13*s23^3 + 2*s23^4) + s12^4*(68*s13^4 + 163*s13^3*s23 + 
                655*s13^2*s23^2 - 522*s13*s23^3 + 336*s23^4) + 
              s12^2*s23*(44*s13^5 - 134*s13^4*s23 - 329*s13^3*s23^2 + 
                355*s13^2*s23^3 - 166*s13*s23^4 + 48*s23^5) + 
              s12^3*(40*s13^5 + 8*s13^4*s23 - 220*s13^3*s23^2 + 641*s13^2*
                 s23^3 - 398*s13*s23^4 + 192*s23^5))) + 
          p1q*(-2*p2q^4*s13^2*(s12 + s23)*(19*s13^2*s23^3*(s13 + s23) - 
              s12*s13*s23^2*(19*s13^2 + 2*s13*s23 + 2*s23^2) + 
              3*s12^4*(2*s13^2 - 13*s13*s23 + 8*s23^2) + s12^2*s23*(
                -6*s13^3 - 78*s13^2*s23 - 31*s13*s23^2 + 24*s23^3) + 
              s12^3*(6*s13^3 - 39*s13^2*s23 - 68*s13*s23^2 + 48*s23^3)) + 
            p3q^4*s12*(s12 + s23)*(264*s12^6*s13 + s12^5*(504*s13^2 + 
                1067*s13*s23 - 96*s23^2) - 4*s13*s23^4*(s13^2 - 2*s13*s23 - 
                3*s23^2) + s12*s13*s23^3*(-316*s13^2 - 1799*s13*s23 + 
                1117*s23^2) + s12^4*(240*s13^3 + 185*s13^2*s23 + 
                1842*s13*s23^2 - 96*s23^3) + s12^3*s23*(246*s13^3 - 
                2149*s13^2*s23 + 2440*s13*s23^2 + 96*s23^3) + 
              s12^2*s23^2*(-226*s13^3 - 3637*s13^2*s23 + 2506*s13*s23^2 + 
                96*s23^3)) + p2q*p3q^3*(24*s12^8*s13 - 76*s13^2*s23^5*
               (s13 + s23)^2 + s12^7*(-316*s13^2 + 477*s13*s23 - 144*s23^2) - 
              4*s12*s13*s23^4*(25*s13^3 + 97*s13^2*s23 + 68*s13*s23^2 - 
                4*s23^3) - s12^6*(620*s13^3 + 3736*s13^2*s23 - 1745*s13*
                 s23^2 + 240*s23^3) + s12^2*s13*s23^3*(408*s13^3 + 
                1092*s13^2*s23 - 4463*s13*s23^2 + 1441*s23^3) + 
              s12^5*(-280*s13^4 - 1603*s13^3*s23 - 11155*s13^2*s23^2 + 
                3526*s13*s23^3 + 144*s23^4) + s12^3*s23^2*(418*s13^4 + 
                2013*s13^3*s23 - 12901*s13^2*s23^2 + 4205*s13*s23^3 + 
                192*s23^4) + s12^4*s23*(-234*s13^4 - 298*s13^3*s23 - 
                16369*s13^2*s23^2 + 5014*s13*s23^3 + 432*s23^4)) + 
            2*p2q^3*p3q*s13*(s12^6*(24*s13^2 - 121*s13*s23 + 48*s23^2) + 
              19*s13^2*s23^3*(-2*s13^3 - 3*s13^2*s23 + 3*s13*s23^2 + 
                4*s23^3) + 2*s12^5*(29*s13^3 + 152*s13^2*s23 - 201*s13*
                 s23^2 + 72*s23^3) + s12*s13*s23^2*(-34*s13^4 - 130*s13^3*
                 s23 + 11*s13^2*s23^2 + 158*s13*s23^3 - 6*s23^4) + 
              s12^4*(74*s13^4 + 83*s13^3*s23 + 492*s13^2*s23^2 - 
                602*s13*s23^3 + 192*s23^4) + s12^2*s23*(44*s13^5 - 
                159*s13^4*s23 - 406*s13^3*s23^2 + 292*s13^2*s23^3 - 
                221*s13*s23^4 + 48*s23^5) + s12^3*(40*s13^5 + 8*s13^4*s23 - 
                375*s13^3*s23^2 + 422*s13^2*s23^3 - 536*s13*s23^4 + 
                144*s23^5)) + p2q^2*p3q^2*(-4*s12^7*(15*s13^2 - 41*s13*s23 + 
                12*s23^2) + 38*s13^2*s23^4*(5*s13^3 + 9*s13^2*s23 + 
                2*s13*s23^2 - 2*s23^3) - s12^6*(52*s13^3 + 1391*s13^2*s23 - 
                590*s13*s23^2 + 48*s23^3) + 2*s12*s13*s23^3*(128*s13^4 + 
                408*s13^3*s23 + 161*s13^2*s23^2 - 136*s13*s23^3 + 2*s23^4) + 
              s12^5*(-32*s13^4 + 1759*s13^3*s23 - 4433*s13^2*s23^2 + 
                784*s13*s23^3 + 144*s23^4) + 2*s12^2*s13*s23^2*(-137*s13^4 + 
                327*s13^3*s23 + 1630*s13^2*s23^2 - 1380*s13*s23^3 + 
                197*s23^4) + s12^3*s23*(-340*s13^5 + 730*s13^4*s23 + 
                6781*s13^3*s23^2 - 6599*s13^2*s23^3 + 872*s13*s23^4 + 
                96*s23^5) + s12^4*(-40*s13^5 + 658*s13^4*s23 + 5578*s13^3*
                 s23^2 - 7137*s13^2*s23^3 + 840*s13*s23^4 + 240*s23^5))) + 
          p1q^2*(p2q*p3q^2*(12*s12^8*s13 + s12^7*(-212*s13^2 + 273*s13*s23 - 
                48*s23^2) - 2*s12*s13*s23^4*(203*s13^3 + 577*s13^2*s23 + 
                255*s13*s23^2 - 100*s23^3) - 38*s13*s23^5*(7*s13^3 + 
                12*s13^2*s23 + 4*s13*s23^2 - s23^3) + s12^6*(-424*s13^3 - 
                3967*s13^2*s23 + 1573*s13*s23^2 + 144*s23^3) + 
              s12^4*s23^2*(567*s13^3 - 19583*s13^2*s23 + 8816*s13*s23^2 + 
                528*s23^3) + s12^3*s13*s23^2*(968*s13^3 + 2124*s13^2*s23 - 
                15453*s13*s23^2 + 7713*s23^3) + s12^2*s23^3*(688*s13^4 + 
                391*s13^3*s23 - 5430*s13^2*s23^2 + 2761*s13*s23^3 - 
                96*s23^4) + s12^5*(-200*s13^4 - 892*s13^3*s23 - 12957*s13^2*
                 s23^2 + 5014*s13*s23^3 + 624*s23^4)) + p3q^3*(s12 + s23)*
             (252*s12^7*s13 + 38*s13*s23^5*(s13 + s23)^2 + s12^6*(492*s13^2 + 
                793*s13*s23 - 48*s23^2) + 6*s12*s13*s23^4*(3*s13^2 + 
                23*s13*s23 + 20*s23^2) - s12^2*s23^3*(492*s13^3 + 
                2331*s13^2*s23 - 2053*s13*s23^2 + 48*s23^3) + 
              s12^5*(240*s13^3 - 361*s13^2*s23 + 1540*s13*s23^2 + 96*s23^3) + 
              s12^4*s23*(514*s13^3 - 3473*s13^2*s23 + 3348*s13*s23^2 + 
                288*s23^3) + s12^3*(-78*s13^3*s23^2 - 5013*s13^2*s23^3 + 
                4320*s13*s23^4 + 96*s23^5)) + p2q^2*p3q*
             (s12^7*(-24*s13^2 + 82*s13*s23) + 38*s13^2*s23^4*(7*s13^3 + 
                10*s13^2*s23 - 2*s13*s23^2 - 5*s23^3) + s12^6*(-92*s13^3 - 
                998*s13^2*s23 + 268*s13*s23^2 + 96*s23^3) + 2*s12*s13*s23^3*(
                166*s13^4 + 475*s13^3*s23 + 7*s13^2*s23^2 - 317*s13*s23^3 + 
                4*s23^4) + s12^5*(-148*s13^4 + 1519*s13^3*s23 - 3587*s13^2*
                 s23^2 + 464*s13*s23^3 + 240*s23^4) + s12^2*s23^2*(
                -392*s13^5 + 899*s13^4*s23 + 2714*s13^3*s23^2 - 3019*s13^2*
                 s23^3 + 512*s13*s23^4 - 48*s23^5) + s12^3*s23*(-518*s13^5 + 
                490*s13^4*s23 + 6189*s13^3*s23^2 - 6367*s13^2*s23^3 + 
                1174*s13*s23^4 - 48*s23^5) + s12^4*(-80*s13^5 + 113*s13^4*
                 s23 + 5176*s13^3*s23^2 - 6405*s13^2*s23^3 + 948*s13*s23^4 + 
                144*s23^5)) + p2q^3*s13*(2*s12^6*(6*s13^2 - 41*s13*s23 + 
                24*s23^2) - 38*s13^2*s23^3*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 
                3*s23^3) + s12^5*(52*s13^3 + 245*s13^2*s23 - 262*s13*s23^2 + 
                192*s23^3) - 2*s12*s13*s23^2*(17*s13^4 + 65*s13^3*s23 - 
                36*s13^2*s23^2 - 118*s13*s23^3 + 4*s23^4) + s12^4*(80*s13^4 + 
                3*s13^3*s23 + 377*s13^2*s23^2 - 394*s13*s23^3 + 336*s23^4) + 
              s12^2*s23*(44*s13^5 - 184*s13^4*s23 - 483*s13^3*s23^2 + 
                277*s13^2*s23^3 - 180*s13*s23^4 + 96*s23^5) + 
              s12^3*(40*s13^5 + 8*s13^4*s23 - 530*s13^3*s23^2 + 299*s13^2*
                 s23^3 - 386*s13*s23^4 + 288*s23^5)))))/
        (108*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*s23^2*
         (s12 + s23)^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (2*p1q^5*s13*s23^2*(s12 + s23)^2*(147*s12^4 - 
           3*s12^3*(57*s13 - 98*s23) - 122*s13*s23^2*(s13 + s23) - 
           2*s12*s13*s23*(193*s13 + 254*s23) + s12^2*(-318*s13^2 - 
             557*s13*s23 + 147*s23^2)) - p1q^4*s23*(s12 + s23)*
          (p3q*(294*s12^6*s13 + s12^5*s13*(-930*s13 + 1213*s23) + 
             4*s12*s13*s23^3*(819*s13^2 + 935*s13*s23 - 6*s23^2) + 
             244*s13*s23^4*(3*s13^2 + 4*s13*s23 + s23^2) + 
             s12^3*s23*(3474*s13^3 + 5072*s13^2*s23 - 521*s13*s23^2 - 3744*
                s23^3) + s12^2*s23^2*(5342*s13^3 + 7111*s13^2*s23 - 353*s13*
                s23^2 - 1872*s23^3) + s12^4*(636*s13^3 + 35*s13^2*s23 + 483*
                s13*s23^2 - 1872*s23^3)) + 
           p2q*(s12^5*s13*(-294*s13 + 1195*s23) + 3*s12^4*(310*s13^3 + 633*
                s13^2*s23 + 731*s13*s23^2 - 624*s23^3) - 244*s13*s23^3*
              (3*s13^3 + 3*s13^2*s23 - s13*s23^2 - s23^3) - 
             4*s12*s13*s23^2*(529*s13^3 + 563*s13^2*s23 - 82*s13*s23^2 + 6*
                s23^3) + s12^3*(-636*s13^4 + 1420*s13^3*s23 + 4944*s13^2*
                s23^2 + 1777*s13*s23^3 - 3744*s23^4) + s12^2*s23*
              (-2076*s13^4 - 1070*s13^3*s23 + 3075*s13^2*s23^2 + 511*s13*
                s23^3 - 1872*s23^4))) + 
         p3q*(-(p3q^4*s12^2*(s12 + s23)*(72*s12^5*s13 + 3*s12^4*(24*s13^2 + 
                223*s13*s23 - 624*s23^2) - 6*s13*s23^3*(14*s13^2 + 
                281*s13*s23 - 282*s23^2) - 3*s12^3*s23*(503*s13^2 - 
                245*s13*s23 + 1248*s23^2) + s12*s13*s23^2*(-290*s13^2 - 
                3865*s13*s23 + 1509*s23^2) - s12^2*s23*(246*s13^3 + 
                3520*s13^2*s23 + 45*s13*s23^2 + 1872*s23^3))) + 
           2*p2q^4*s13^2*(122*s13^2*s23^4*(s13 + s23) + 
             9*s12^5*(4*s13^2 - 5*s13*s23 + 104*s23^2) + 2*s12*s13*s23^3*
              (82*s13^2 + 315*s13*s23 + 172*s23^2) + 3*s12^2*s23^2*
              (-22*s13^3 + 111*s13^2*s23 + 505*s13*s23^2 + 312*s23^3) + 
             s12^4*(36*s13^3 + 39*s13^2*s23 + 737*s13*s23^2 + 2808*s23^3) + 
             s12^3*s23*(48*s13^3 - 172*s13^2*s23 + 1953*s13*s23^2 + 2808*
                s23^3)) + p2q*p3q^3*s12*(-72*s12^7*s13 + 12*s13^2*s23^4*
              (33*s13^2 + 14*s13*s23 - 19*s23^2) + 9*s12^6*(16*s13^2 - 61*s13*
                s23 + 416*s23^2) + s12^2*s13*s23^2*(216*s13^3 - 7278*s13^2*
                s23 + 3488*s13*s23^2 - 8837*s23^3) + s12*s13*s23^3*
              (822*s13^3 - 2199*s13^2*s23 + 1985*s13*s23^2 - 4252*s23^3) + 
             2*s12^4*s23*(-1336*s13^3 + 2434*s13^2*s23 - 1967*s13*s23^2 + 
               5616*s23^3) + s12^5*(216*s13^3 + 2897*s13^2*s23 - 2480*s13*
                s23^2 + 11232*s23^3) + s12^3*s23*(-250*s13^4 - 7559*s13^3*
                s23 + 3390*s13^2*s23^2 - 6516*s13*s23^3 + 3744*s23^4)) + 
           p2q^2*p3q^2*(-244*s13^3*s23^4*(s13 + s23)^2 + 
             6*s12^7*(36*s13^2 - 17*s13*s23 + 312*s23^2) + 
             2*s12^6*s23*(675*s13^2 - 2998*s13*s23 + 2808*s23^2) - 
             4*s12*s13^2*s23^3*(242*s13^3 + 240*s13^2*s23 + 227*s13*s23^2 + 
               229*s23^3) - s12^5*(216*s13^4 + 2893*s13^3*s23 + 2035*s13^2*
                s23^2 + 16144*s13*s23^3 - 5616*s23^4) + s12^4*s23*
              (1627*s13^4 - 3770*s13^3*s23 - 8617*s13^2*s23^2 - 19140*s13*
                s23^3 + 1872*s23^4) - s12^2*s13*s23^2*(844*s13^4 - 1491*s13^3*
                s23 + 1628*s13^2*s23^2 + 649*s13*s23^3 + 4432*s23^4) - 
             s12^3*s13*s23*(40*s13^4 - 4166*s13^3*s23 + 2561*s13^2*s23^2 + 
               5181*s13*s23^3 + 13322*s23^4)) + p2q^3*p3q*s13*
            (-24*s12^6*(9*s13^2 - 8*s13*s23 + 156*s23^2) + 244*s13^2*s23^3*
              (s13^3 + 2*s13^2*s23 - s23^3) - s12^5*(144*s13^3 + 879*s13^2*
                s23 - 754*s13*s23^2 + 11136*s23^3) + s12^4*(72*s13^4 + 641*
                s13^3*s23 + 3175*s13^2*s23^2 + 1450*s13*s23^3 - 12912*
                s23^4) + s12^3*s23*(-392*s13^4 + 1122*s13^3*s23 + 5991*s13^2*
                s23^2 + 2350*s13*s23^3 - 7392*s23^4) + 4*s12*s13*s23^2*
              (82*s13^4 + 76*s13^3*s23 + 80*s13^2*s23^2 - 147*s13*s23^3 - 172*
                s23^4) + s12^2*s23*(44*s13^5 - 928*s13^4*s23 + 337*s13^3*
                s23^2 + 2289*s13^2*s23^3 + 774*s13*s23^4 - 1872*s23^5))) - 
         p1q^3*s23*(p3q^2*(s12 + s23)*(1137*s12^6*s13 + 4*s12*s13*s23^3*
              (933*s13^2 + 883*s13*s23 - 111*s23^2) + 244*s13*s23^4*
              (3*s13^2 + 5*s13*s23 + 2*s23^2) + s12^5*(-4653*s13^2 + 7102*s13*
                s23 + 3744*s23^2) + s12^2*s23^2*(7482*s13^3 + 7233*s13^2*
                s23 + 4519*s13*s23^2 - 3744*s23^3) + s12^3*s23*
              (6292*s13^3 + 2545*s13^2*s23 + 11198*s13*s23^2 - 3744*s23^3) + 
             3*s12^4*(550*s13^3 - 2023*s13^2*s23 + 3904*s13*s23^2 + 1248*
                s23^3)) + p2q*p3q*(273*s12^7*s13 + s12^6*(-2888*s13^2 + 7693*
                s13*s23 + 3744*s23^2) - 244*s13*s23^4*(8*s13^3 + 11*s13^2*
                s23 + s13*s23^2 - 2*s23^3) - 4*s12*s13*s23^3*
              (2038*s13^3 + 2149*s13^2*s23 + 89*s13*s23^2 + 161*s23^3) + 
             s12^5*(5521*s13^3 - 119*s13^2*s23 + 23330*s13*s23^2 + 5616*
                s23^3) + s12^3*s23*(-9460*s13^4 + 7105*s13^3*s23 + 24279*
                s13^2*s23^2 + 26001*s13*s23^3 - 13104*s23^4) + 
             s12^2*s23^2*(-13142*s13^4 - 7174*s13^3*s23 + 9289*s13^2*s23^2 + 
               6677*s13*s23^3 - 5616*s23^4) + s12^4*(-2478*s13^4 + 13648*
                s13^3*s23 + 17647*s13^2*s23^2 + 34102*s13*s23^3 - 5616*
                s23^4)) + p2q^2*(732*s13^2*(s13 - s23)*s23^3*(s13 + s23)^2 + 
             s12^6*s13*(-481*s13 + 1770*s23) + s12^5*(1175*s13^3 - 425*s13^2*
                s23 + 5140*s13*s23^2 - 1872*s23^3) + s12^4*(-1396*s13^4 + 706*
                s13^3*s23 + 2775*s13^2*s23^2 + 7808*s13*s23^3 - 5616*s23^4) + 
             4*s12*s13*s23^2*(479*s13^4 + 364*s13^3*s23 - 368*s13^2*s23^2 - 
               425*s13*s23^3 - 172*s23^4) + s12^3*(668*s13^5 - 3024*s13^4*
                s23 - 2361*s13^3*s23^2 + 3753*s13^2*s23^3 + 6588*s13*s23^4 - 
               5616*s23^5) + 2*s12^2*s23*(906*s13^5 - 432*s13^4*s23 - 1436*
                s13^3*s23^2 + 33*s13^2*s23^3 + 731*s13*s23^4 - 936*s23^5))) - 
         p1q^2*(p3q^3*(s12 + s23)*(72*s12^7*s13 + 244*s13*s23^5*
              (s13 + s23)^2 + 9*s12^6*(8*s13^2 + 229*s13*s23 - 208*s23^2) + 
             68*s12*s13*s23^4*(25*s13^2 + 13*s13*s23 - 12*s23^2) + 
             s12^5*s23*(-8025*s13^2 + 10124*s13*s23 + 3744*s23^2) + 
             s12^2*s23^3*(4486*s13^3 - 33*s13^2*s23 + 10613*s13*s23^2 - 1872*
                s23^3) + s12^3*s23^2*(4416*s13^3 - 8167*s13^2*s23 + 21940*s13*
                s23^2 + 3744*s23^3) + s12^4*s23*(1146*s13^3 - 14395*s13^2*
                s23 + 18402*s13*s23^2 + 11232*s23^3)) + 
           p2q*p3q^2*(72*s12^8*s13 - 3*s12^7*(24*s13^2 - 365*s13*s23 + 624*
                s23^2) - 244*s13*s23^5*(7*s13^3 + 12*s13^2*s23 + 4*s13*
                s23^2 - s23^3) - 4*s12*s13*s23^4*(2039*s13^3 + 2070*s13^2*
                s23 + 457*s13*s23^2 + 487*s23^3) + s12^6*(-144*s13^3 - 7389*
                s13^2*s23 + 16249*s13*s23^2 + 5616*s23^3) + 
             s12^5*s23*(11254*s13^3 - 8869*s13^2*s23 + 48302*s13*s23^2 + 
               24336*s23^3) + s12^3*s13*s23^2*(-11000*s13^3 + 20628*s13^2*
                s23 + 21197*s13*s23^2 + 61847*s23^3) + s12^2*s23^3*
              (-14530*s13^4 - 2477*s13^3*s23 + 6314*s13^2*s23^2 + 18113*s13*
                s23^3 - 3744*s23^4) + s12^4*s23*(-2798*s13^4 + 28431*s13^3*
                s23 + 12479*s13^2*s23^2 + 74618*s13*s23^3 + 20592*s23^4)) + 
           p2q^2*p3q*(-6*s12^7*s13*(24*s13 - 17*s23) - 
             4*s12^6*(18*s13^3 + 529*s13^2*s23 - 2408*s13*s23^2 - 936*
                s23^3) + 244*s13^2*s23^4*(7*s13^3 + 10*s13^2*s23 - 2*s13*
                s23^2 - 5*s23^3) + 4*s12*s13*s23^3*(1200*s13^4 + 1040*s13^3*
                s23 - 111*s13^2*s23^2 - 356*s13*s23^3 - 344*s23^4) + 
             s12^4*s23*(-4797*s13^4 + 4212*s13^3*s23 + 11063*s13^2*s23^2 + 
               46564*s13*s23^3 + 5616*s23^4) + s12^5*(72*s13^4 + 4845*s13^3*
                s23 - 511*s13^2*s23^2 + 30552*s13*s23^3 + 9360*s23^4) + 
             s12^2*s23^2*(4468*s13^5 - 4213*s13^4*s23 - 5630*s13^3*s23^2 + 
               2757*s13^2*s23^3 + 11196*s13*s23^4 - 1872*s23^5) + 
             s12^3*s23*(1376*s13^5 - 10762*s13^4*s23 - 5179*s13^3*s23^2 + 
               12563*s13^2*s23^3 + 38114*s13*s23^4 - 1872*s23^5)) + 
           p2q^3*s13*(6*s12^6*(12*s13^2 - 17*s13*s23 + 312*s23^2) - 
             244*s13^2*s23^3*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             3*s12^4*s23*(-215*s13^3 - 507*s13^2*s23 + 578*s13*s23^2 + 4304*
                s23^3) + s12^5*(72*s13^3 + 653*s13^2*s23 - 446*s13*s23^2 + 
               7392*s23^3) - 4*s12*s13*s23^2*(82*s13^4 - 6*s13^3*s23 - 307*
                s13^2*s23^2 - 685*s13*s23^3 - 344*s23^4) + 
             s12^3*s23*(488*s13^4 - 1422*s13^3*s23 - 3517*s13^2*s23^2 + 4142*
                s13*s23^3 + 11136*s23^4) + s12^2*s23*(-44*s13^5 + 796*s13^4*
                s23 - 369*s13^3*s23^2 + 113*s13^2*s23^3 + 3440*s13*s23^4 + 
               3744*s23^5))) + p1q*(2*p2q^4*s13^2*
            (122*s13^2*s23^4*(s13 + s23) + 9*s12^5*(4*s13^2 - 5*s13*s23 + 104*
                s23^2) + 2*s12*s13*s23^3*(82*s13^2 + 315*s13*s23 + 172*
                s23^2) + 3*s12^2*s23^2*(-22*s13^3 + 111*s13^2*s23 + 505*s13*
                s23^2 + 312*s23^3) + s12^4*(36*s13^3 + 39*s13^2*s23 + 737*s13*
                s23^2 + 2808*s23^3) + s12^3*s23*(48*s13^3 - 172*s13^2*s23 + 
               1953*s13*s23^2 + 2808*s23^3)) - p3q^4*s12*(s12 + s23)*
            (144*s12^6*s13 + s12^4*s23*(-5811*s13^2 + 5264*s13*s23 - 3744*
                s23^2) + 3*s12^5*(48*s13^2 + 629*s13*s23 - 1248*s23^2) + 
             12*s13*s23^4*(19*s13^2 - 14*s13*s23 - 33*s23^2) + 
             s12*s13*s23^3*(854*s13^2 - 3971*s13*s23 + 7727*s23^2) + 
             3*s12^3*s23*(-38*s13^3 - 4051*s13^2*s23 + 2670*s13*s23^2 + 1248*
                s23^3) + s12^2*s23^2*(672*s13^3 - 10961*s13^2*s23 + 12612*s13*
                s23^2 + 3744*s23^3)) + p2q*p3q^3*(-144*s12^8*s13 + 
             488*s13^2*s23^5*(s13 + s23)^2 + 3*s12^7*(72*s13^2 - 457*s13*
                s23 + 1872*s23^2) + s12^2*s13*s23^3*(6402*s13^3 - 3574*s13^2*
                s23 + 1557*s13*s23^2 - 16175*s23^3) + 4*s12*s13*s23^4*
              (812*s13^3 + 709*s13^2*s23 + 168*s13*s23^2 + 271*s23^3) + 
             3*s12^6*(120*s13^3 + 2564*s13^2*s23 - 4077*s13*s23^2 + 3120*
                s23^3) - s12^5*s23*(9335*s13^3 - 12013*s13^2*s23 + 32294*s13*
                s23^2 + 5616*s23^3) + s12^4*s23*(706*s13^4 - 24692*s13^3*
                s23 + 1715*s13^2*s23^2 - 51002*s13*s23^3 - 16848*s23^4) - 
             s12^3*s23^2*(-4468*s13^4 + 21151*s13^3*s23 + 1449*s13^2*s23^2 + 
               46971*s13*s23^3 + 7488*s23^4)) + 2*p2q^3*p3q*s13*
            (-3*s12^6*(48*s13^2 - 49*s13*s23 + 640*s23^2) + 
             122*s13^2*s23^3*(2*s13^3 + 3*s13^2*s23 - 3*s13*s23^2 - 4*
                s23^3) - 2*s12^5*(54*s13^3 + 383*s13^2*s23 - 1188*s13*s23^2 + 
               2856*s23^3) + s12^4*(36*s13^4 + 643*s13^3*s23 + 3236*s13^2*
                s23^2 + 5186*s13*s23^3 - 7584*s23^4) + 2*s12^3*s23*
              (-220*s13^4 + 636*s13^3*s23 + 3265*s13^2*s23^2 + 2216*s13*
                s23^3 - 2856*s23^4) + 2*s12*s13*s23^2*(164*s13^4 + 70*s13^3*
                s23 - 227*s13^2*s23^2 - 832*s13*s23^3 - 516*s23^4) + 
             s12^2*s23*(44*s13^5 - 862*s13^4*s23 + 353*s13^3*s23^2 + 1976*
                s13^2*s23^3 + 443*s13*s23^4 - 1920*s23^5)) + 
           p2q^2*p3q^2*(12*s12^7*(30*s13^2 - 17*s13*s23 + 156*s23^2) - 
             244*s13^2*s23^4*(5*s13^3 + 9*s13^2*s23 + 2*s13*s23^2 - 2*
                s23^3) + s12^6*(72*s13^3 + 2985*s13^2*s23 - 12082*s13*s23^2 + 
               1872*s23^3) + 2*s12^2*s13*s23^2*(-1750*s13^4 + 2420*s13^3*
                s23 + 1453*s13^2*s23^2 + 106*s13*s23^3 - 6195*s23^4) - 
             4*s12*s13*s23^3*(963*s13^4 + 916*s13^3*s23 + 484*s13^2*s23^2 + 
               298*s13*s23^3 - 172*s23^4) - s12^5*(288*s13^4 + 6563*s13^3*
                s23 - 1603*s13^2*s23^2 + 34452*s13*s23^3 + 5616*s23^4) - 
             s12^4*s23*(-5028*s13^4 + 5500*s13^3*s23 + 6249*s13^2*s23^2 + 
               47240*s13*s23^3 + 9360*s23^4) - s12^3*s23*(748*s13^5 - 11904*
                s13^4*s23 - 3809*s13^3*s23^2 + 3335*s13^2*s23^3 + 37744*s13*
                s23^4 + 3744*s23^5))))/(216*(p1q + p3q)^2*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(s12 + s23)^2*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((-2*p1q^4*s13*s23*(s12 + s13 + s23) + 
          p3q*(-2*p2q^3*s13*(s12 + s13 + s23)*(s13 + 24*s23) + 
            p3q^3*(6*s13*s23*(s13 + 2*s23) + 15*s12*s13*(s13 + 5*s23) + 
              s12^2*(19*s13 + 48*s23)) + p2q*p3q^2*(s12*s13*(-4*s13 + 
                71*s23) + s12^2*(19*s13 + 96*s23) - 3*s13*(5*s13^2 + 
                21*s13*s23 + 12*s23^2)) + p2q^2*p3q*(2*s12^2*(s13 + 24*s23) - 
              s12*s13*(17*s13 + 50*s23) - 3*s13*(5*s13^2 + 39*s13*s23 + 
                32*s23^2))) + p1q^3*(p2q*(2*s13^3 + 5*s13^2*s23 + 
              57*s13*s23^2 + 48*s23^3 + s12*s13*(-2*s13 + 5*s23)) + 
            p3q*(2*s12^2*s13 - s12*s13*(2*s13 + 7*s23) + s23*(-11*s13^2 + 
                43*s13*s23 + 48*s23^2))) + 
          p1q^2*(-(p2q^2*(3*s13^3 + 55*s13^2*s23 - 2*s13*s23^2 - 48*s23^3 + 
               s12*s13*(7*s13 + 50*s23))) + 3*p3q^2*(7*s12^2*s13 + 
              s12*(3*s13^2 + 5*s13*s23 - 32*s23^2) + 2*s23*(-2*s13^2 + 
                9*s13*s23 + 8*s23^2)) + p2q*p3q*(7*s12^2*s13 - 9*s13^3 - 
              59*s13^2*s23 + 70*s13*s23^2 + 96*s23^3 - s12*(18*s13^2 + 
                35*s13*s23 + 96*s23^2))) - p1q*(2*p2q^3*s13*(s12 + s13 + s23)*
             (s13 + 24*s23) - p3q^3*(3*s13*s23*(s13 + 7*s23) + 
              s12^2*(38*s13 + 48*s23) + s12*(26*s13^2 + 95*s13*s23 - 
                96*s23^2)) + 2*p2q^2*p3q*(-(s12^2*s13) + 2*s12*(6*s13^2 + 
                49*s13*s23 + 24*s23^2) + s13*(9*s13^2 + 110*s13*s23 + 
                95*s23^2)) + p2q*p3q^2*(-2*s12^2*(13*s13 + 24*s23) + 
              s13*(26*s13^2 + 175*s13*s23 + 119*s23^2) + s12*(20*s13^2 + 
                65*s13*s23 + 192*s23^2))))*den[-3 + 2*ep])/
        (24*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23) + 
       nl*(-1/9*(ep^2*(p2q*s13*(s12 + s13 - s23) + p1q*s23*(s12 - s13 + 
               s23) - p3q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))/
           ((p1q + p2q + p3q)*s13*s23) + 
         (ep*(-2*p2q^3*s13*(s12 + s13 + s23) - 2*p1q^3*s23*(s12 + s13 + 
              s23) + p2q^2*p3q*(2*s12^2 - 5*s12*s13 - 3*s13^2 - 2*s12*s23 - 
              17*s13*s23) + p2q*p3q^2*(7*s12^2 - 4*s12*s13 - 3*s13^2 + 
              11*s12*s23 - 19*s13*s23 + 12*s23^2) + 
            p3q^3*(7*s12^2 + 3*s12*(s13 + 5*s23) + 2*s23*(-s13 + 6*s23)) + 
            p1q^2*(p3q*(2*s12^2 - 2*s12*s13 + 7*s12*s23 - 5*s13*s23 + 
                9*s23^2) + p2q*(-2*s12*s13 + 2*s13^2 + 9*s12*s23 + s13*s23 + 
                13*s23^2)) + p1q*(p2q^2*(-3*s12*s13 + s13^2 - 2*s12*s23 - 
                11*s13*s23 + 2*s23^2) + p3q^2*(7*s12^2 - s12*s13 + 
                20*s12*s23 - 7*s13*s23 + 21*s23^2) + p2q*p3q*(3*s12^2 - 
                8*s12*s13 + s13^2 + 16*s12*s23 - 16*s13*s23 + 25*s23^2))))/
          (18*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) + 
         (2*p1q^4*s13*s23*(s12 + s13 + s23) - 
           p1q^3*(p2q*(2*s13^3 + s13^2*s23 - 35*s13*s23^2 - 48*s23^3 + s12*
                s13*(-2*s13 + 9*s23)) + p3q*(2*s12^2*s13 + s12*s13*
                (-2*s13 + 13*s23) + s23*(s13^2 - 33*s13*s23 - 48*s23^2))) + 
           p1q^2*(-(p2q^2*(s13^3 + 37*s13^2*s23 + 2*s13*s23^2 - 48*s23^3 + 
                s12*s13*(-3*s13 + 46*s23))) - p3q^2*(s12^2*s13 - 2*s23*
                (-2*s13^2 + s13*s23 + 24*s23^2) + s12*(-11*s13^2 + 
                 35*s13*s23 + 96*s23^2)) - p2q*p3q*(3*s12^2*s13 + 11*s13^3 + 
               49*s13^2*s23 - 2*s13*s23^2 - 96*s23^3 + s12*(-2*s13^2 + 
                 81*s13*s23 + 96*s23^2))) + p3q*(2*p2q^3*s13*(s13 - 24*s23)*
              (s12 + s13 + s23) + p3q^3*(2*s13*(s13 - 6*s23)*s23 + s12*s13*
                (5*s13 + 41*s23) + s12^2*(s13 + 48*s23)) + 
             p2q*p3q^2*(s12*s13*(4*s13 + 45*s23) + s12^2*(s13 + 96*s23) - s13*
                (5*s13^2 + 37*s13*s23 + 60*s23^2)) - p2q^2*p3q*
              (2*s12^2*(s13 - 24*s23) + s12*s13*(3*s13 + 46*s23) + s13*
                (5*s13^2 + 87*s13*s23 + 96*s23^2))) + 
           p1q*(2*p2q^3*s13*(s13 - 24*s23)*(s12 + s13 + s23) + 
             p3q^3*(s13*(s13 - 41*s23)*s23 + 2*s12^2*(s13 + 24*s23) + s12*
                (14*s13^2 + 21*s13*s23 - 96*s23^2)) - 2*p2q^2*p3q*
              (s12^2*s13 + 2*s12*s23*(47*s13 + 24*s23) + s13*(3*s13^2 + 
                 86*s13*s23 + 97*s23^2)) - p2q*p3q^2*(2*s12^2*(s13 - 
                 24*s23) + 7*s13*(2*s13^2 + 19*s13*s23 + 27*s23^2) + s12*
                (-4*s13^2 + 123*s13*s23 + 192*s23^2))))/(36*(p1q + p3q)^2*
           (p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23) + 
         ((-2*p1q^4*s13*s23*(s12 + s13 + s23) + 
            p3q*(-2*p2q^3*s13*(s12 + s13 + s23)*(s13 + 24*s23) + 
              p3q^3*(6*s13*s23*(s13 + 2*s23) + 15*s12*s13*(s13 + 5*s23) + 
                s12^2*(19*s13 + 48*s23)) + p2q*p3q^2*(s12*s13*(-4*s13 + 
                  71*s23) + s12^2*(19*s13 + 96*s23) - 3*s13*(5*s13^2 + 
                  21*s13*s23 + 12*s23^2)) + p2q^2*p3q*(2*s12^2*(s13 + 
                  24*s23) - s12*s13*(17*s13 + 50*s23) - 3*s13*(5*s13^2 + 
                  39*s13*s23 + 32*s23^2))) + p1q^3*(p2q*(2*s13^3 + 
                5*s13^2*s23 + 57*s13*s23^2 + 48*s23^3 + s12*s13*(-2*s13 + 
                  5*s23)) + p3q*(2*s12^2*s13 - s12*s13*(2*s13 + 7*s23) + 
                s23*(-11*s13^2 + 43*s13*s23 + 48*s23^2))) + 
            p1q^2*(-(p2q^2*(3*s13^3 + 55*s13^2*s23 - 2*s13*s23^2 - 48*s23^3 + 
                 s12*s13*(7*s13 + 50*s23))) + 3*p3q^2*(7*s12^2*s13 + 
                s12*(3*s13^2 + 5*s13*s23 - 32*s23^2) + 2*s23*(-2*s13^2 + 
                  9*s13*s23 + 8*s23^2)) + p2q*p3q*(7*s12^2*s13 - 9*s13^3 - 
                59*s13^2*s23 + 70*s13*s23^2 + 96*s23^3 - s12*(18*s13^2 + 
                  35*s13*s23 + 96*s23^2))) - p1q*(2*p2q^3*s13*(s12 + s13 + 
                s23)*(s13 + 24*s23) - p3q^3*(3*s13*s23*(s13 + 7*s23) + 
                s12^2*(38*s13 + 48*s23) + s12*(26*s13^2 + 95*s13*s23 - 
                  96*s23^2)) + 2*p2q^2*p3q*(-(s12^2*s13) + 2*s12*(6*s13^2 + 
                  49*s13*s23 + 24*s23^2) + s13*(9*s13^2 + 110*s13*s23 + 
                  95*s23^2)) + p2q*p3q^2*(-2*s12^2*(13*s13 + 24*s23) + 
                s13*(26*s13^2 + 175*s13*s23 + 119*s23^2) + s12*(20*s13^2 + 
                  65*s13*s23 + 192*s23^2))))*den[-3 + 2*ep])/
          (36*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23)))*
      Int[DS[k]*DS[k + p1 + p3]] + 
     ((ep^3*(p1q*s23*(s12*s23*(-9*s13 + 20*s23) + s12^2*(s13 + 20*s23) - 
            s13*(s13^2 + 7*s13*s23 - 10*s23^2)) + 
          p2q*s13*(s12^2*(s13 + 20*s23) + s12*(2*s13^2 + 27*s13*s23 - 
              20*s23^2) + s13*(s13^2 + 7*s13*s23 - 10*s23^2)) - 
          p3q*(4*s13^2*s23*(s13 + 5*s23) + s12^3*(s13 + 20*s23) + 
            s12^2*(2*s13^2 + 31*s13*s23 + 20*s23^2) + 
            s12*s13*(s13^2 + 15*s13*s23 + 50*s23^2))))/(27*(p1q + p2q + p3q)*
         s13^2*(s12 + s13)*s23) - 
       (ep^2*(2*p1q^4*s13*s23^2*(s12^4 + s13^2*s23*(s13 + s23) + 
            s12^3*(4*s13 + s23) + s12*s13^2*(2*s13 + 3*s23) + 
            s12^2*s13*(5*s13 + 3*s23)) - (p2q + p3q)*(s12 + s13)*
           (2*p2q^3*s13^2*(s12^4 + s13^2*s23*(s13 + s23) + s12^3*(2*s13 + 
                s23) + s12*s13*s23*(3*s13 + 2*s23) + s12^2*s13*(s13 + 
                3*s23)) + p2q^2*p3q*s13*(-2*s12^5 + 2*s13^3*(s13 + s23)^2 + 
              s12^4*(-17*s13 + 122*s23) + s12^3*(-24*s13^2 + 181*s13*s23 - 
                40*s23^2) + 2*s12*s13^2*(s13^2 + 3*s13*s23 + 2*s23^2) - 
              3*s12^2*s13*(3*s13^2 - 21*s13*s23 + 10*s23^2)) - 
            p3q^3*s12^2*(3*s12^3*(s13 + 40*s23) + 2*s13^2*(9*s13^2 - 
                7*s13*s23 + 33*s23^2) + 3*s12^2*(10*s13^2 + 51*s13*s23 + 
                40*s23^2) + s12*s13*(45*s13^2 + 21*s13*s23 + 194*s23^2)) - 
            p2q*p3q^2*s12^2*(3*s12^3*(s13 + 40*s23) + s13^2*(21*s13^2 - 
                79*s13*s23 + 96*s23^2) + s12^2*(39*s13^2 + 29*s13*s23 + 
                120*s23^2) + s12*s13*(57*s13^2 - 166*s13*s23 + 234*s23^2))) + 
          p1q*(p3q^3*s12^2*(s12^4*(3*s13 + 100*s23) + s12^3*(33*s13^2 + 
                129*s13*s23 - 160*s23^2) + s12*s13*(55*s13^3 - 225*s13^2*
                 s23 + 79*s13*s23^2 - 406*s23^3) + s12^2*(71*s13^3 - 
                121*s13^2*s23 - 148*s13*s23^2 - 260*s23^3) + 
              s13^2*(14*s13^3 - 75*s13^2*s23 + 69*s13*s23^2 - 136*s23^3)) + 
            p2q^3*s13*(17*s12^5*(s13 - 6*s23) + s12^4*(47*s13^2 - 
                239*s13*s23 + 42*s23^2) + s12^3*(43*s13^3 - 172*s13^2*s23 + 
                76*s13*s23^2 - 20*s23^3) + s12^2*s13*(11*s13^3 - 
                35*s13^2*s23 + 46*s13*s23^2 - 16*s23^3) - 2*s12*s13^2*(
                2*s13^3 + s13^2*s23 - 9*s13*s23^2 - 6*s23^3) - 
              2*s13^3*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3)) + 
            p2q*p3q^2*(4*s13^4*s23*(s13 + s23)^2 + 2*s12^6*(s13 + 100*s23) + 
              s12^5*(63*s13^2 + 155*s13*s23 - 200*s23^2) + s12^3*s13*(
                133*s13^3 - 611*s13^2*s23 + 436*s13*s23^2 - 680*s23^3) + 
              s12^4*(155*s13^3 - 478*s13^2*s23 + 21*s13*s23^2 - 400*s23^3) + 
              s12^2*s13^2*(43*s13^3 - 170*s13^2*s23 + 227*s13*s23^2 - 
                254*s23^3) + 4*s12*s13^3*(s13^3 + 3*s13^2*s23 + 4*s13*s23^2 + 
                2*s23^3)) + p2q^2*p3q*(-(s12^6*(s13 - 100*s23)) + 
              s12^5*(47*s13^2 - 78*s13*s23 - 40*s23^2) + 2*s12*s13^3*s23*(
                6*s13^2 + 17*s13*s23 + 10*s23^2) + s12^3*s13*(121*s13^3 - 
                574*s13^2*s23 + 425*s13*s23^2 - 294*s23^3) + 
              s12^4*(131*s13^3 - 606*s13^2*s23 + 209*s13*s23^2 - 140*s23^3) + 
              2*s12^2*s13^2*(20*s13^3 - 69*s13^2*s23 + 98*s13*s23^2 - 
                67*s23^3) + 2*s13^4*(-s13^3 + 2*s13^2*s23 + 8*s13*s23^2 + 
                5*s23^3))) + p1q^3*s23*(p2q*(-2*s12^5*s13 + s12^4*(-8*s13^2 + 
                75*s13*s23 + 100*s23^2) - 2*s12*s13^2*(4*s13^3 + 
                8*s13^2*s23 + s13*s23^2 - s23^3) + 2*s13^2*s23*(-3*s13^3 - 
                3*s13^2*s23 + s13*s23^2 + s23^3) + s12^3*(-14*s13^3 + 
                110*s13^2*s23 + 65*s13*s23^2 + 80*s23^3) + s12^2*(-16*s13^4 + 
                25*s13^3*s23 - 11*s13^2*s23^2 + 32*s13*s23^3 - 20*s23^4)) + 
            p3q*(-4*s12^5*s13 + s12^4*(-14*s13^2 + 77*s13*s23 + 100*s23^2) + 
              2*s13^2*s23*(-s13^3 + 2*s13*s23^2 + s23^3) + 2*s12*s13^2*(
                -2*s13^3 - 2*s13^2*s23 + 2*s13*s23^2 + s23^3) + 
              s12^3*(-16*s13^3 + 118*s13^2*s23 + 69*s13*s23^2 + 80*s23^3) + 
              s12^2*(-10*s13^4 + 39*s13^3*s23 - 3*s13^2*s23^2 + 
                32*s13*s23^3 - 20*s23^4))) - 
          p1q^2*(p3q^2*(-2*s12^6*s13 + 2*s13^3*s23^2*(s13 + s23)^2 + 
              s12^5*(-6*s13^2 + 82*s13*s23 + 200*s23^2) + 2*s12*s13^2*s23*(
                2*s13^3 + 4*s13^2*s23 + 3*s13*s23^2 + s23^3) + 
              s12^4*(-2*s13^3 + 233*s13^2*s23 + 201*s13*s23^2 + 40*s23^3) + 
              s12^3*(6*s13^4 + 214*s13^3*s23 - 63*s13^2*s23^2 + 
                157*s13*s23^3 - 160*s23^4) + s12^2*s13*(4*s13^4 + 
                67*s13^3*s23 - 60*s13^2*s23^2 + 83*s13*s23^3 - 92*s23^4)) + 
            p2q*p3q*(-2*s12^6*s13 + s12^5*(-4*s13^2 + 157*s13*s23 + 
                300*s23^2) + 2*s13^3*s23*(-2*s13^3 + s13^2*s23 + 
                7*s13*s23^2 + 4*s23^3) + s12^4*(4*s13^3 + 433*s13^2*s23 + 
                266*s13*s23^2 + 120*s23^3) + s12^3*(8*s13^4 + 383*s13^3*s23 - 
                152*s13^2*s23^2 + 315*s13*s23^3 - 180*s23^4) + 
              s12^2*s13*(-2*s13^4 + 107*s13^3*s23 - 112*s13^2*s23^2 + 
                151*s13*s23^3 - 132*s23^4) + 2*s12*s13^2*(-2*s13^4 - 
                2*s13^3*s23 + 6*s13^2*s23^2 + 9*s13*s23^3 + 4*s23^4)) + 
            p2q^2*(-6*s13^3*(s13 - s23)*s23*(s13 + s23)^2 + s12^5*(2*s13^2 + 
                79*s13*s23 + 100*s23^2) + s12^4*(6*s13^3 + 216*s13^2*s23 + 
                67*s13*s23^2 + 80*s23^3) + s12^3*(2*s13^4 + 187*s13^3*s23 - 
                81*s13^2*s23^2 + 156*s13*s23^3 - 20*s23^4) - 2*s12*s13^2*(
                2*s13^4 + 7*s13^3*s23 + 2*s13^2*s23^2 - 6*s13*s23^3 - 
                3*s23^4) - 2*s12^2*s13*(3*s13^4 - 21*s13^3*s23 + 
                24*s13^2*s23^2 - 33*s13*s23^3 + 20*s23^4)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)*
         s23*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (2*p1q^4*(p2q + p3q)*s23^2*(20*s13^2*s23^2*(s13 + s23) + 
           s12*s13^2*s23*(43*s13 + 63*s23) + s12^3*(234*s13^2 - 7*s13*s23 + 
             6*s23^2) + s12^2*(234*s13^3 + 270*s13^2*s23 - s13*s23^2 + 
             6*s23^3)) + (p2q + p3q)^2*(-2*p3q^3*s12^2*(6*s12^4*s23 + 
             s12^3*(-234*s13^2 + 39*s13*s23 + 6*s23^2) + s12*s13*s23*
              (-37*s13^2 - 106*s13*s23 + 20*s23^2) + s13^2*s23*
              (137*s13^2 - 31*s13*s23 + 20*s23^2) - s12^2*s13*
              (234*s13^2 + 135*s13*s23 + 73*s23^2)) - p2q^3*s13^2*s23*
            (-39*s12^4 + 40*s13^2*s23*(s13 + s23) + s12^3*(-78*s13 + 48*
                s23) + 2*s12*s13*s23*(83*s13 + 63*s23) + 
             s12^2*(-39*s13^2 + 174*s13*s23 + 87*s23^2)) - 
           2*p2q*p3q^2*s12*s13*(27*s12^4*s23 - 40*s13^3*s23*(s13 + s23) + 
             2*s12^3*(234*s13^2 + 103*s13*s23 - 81*s23^2) + 
             s12*s13*s23*(274*s13^2 + s13*s23 + 63*s23^2) + 
             s12^2*(468*s13^3 + 481*s13^2*s23 - 119*s13*s23^2 + 63*s23^3)) - 
           p2q^2*p3q*s13*(39*s12^5*s23 + 6*s12^4*(41*s13 - 21*s23)*s23 + 
             40*s13^3*s23*(s13 + s23)^2 - 6*s12*s13^2*s23*(s13^2 - 20*s13*
                s23 - 21*s23^2) + s12^3*(-468*s13^3 + 17*s13^2*s23 + 44*s13*
                s23^2 + 87*s23^3) + 2*s12^2*s13*(-234*s13^3 - 112*s13^2*s23 + 
               107*s13*s23^2 + 87*s23^3))) - p1q^3*s23*
          (p2q^2*(3*s12^4*(156*s13^2 - 5*s13*s23 + 4*s23^2) + 
             s12^2*s13*(936*s13^3 + 519*s13^2*s23 - 422*s13*s23^2 - 77*
                s23^3) + 40*s13*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - 
               s23^3) + 2*s12^3*(462*s13^3 + 34*s13^2*s23 + 43*s13*s23^2 + 6*
                s23^3) + 2*s12*s13*s23*(86*s13^3 + 123*s13^2*s23 + 20*s13*
                s23^2 + 23*s23^3)) + p3q^2*(s12^4*(936*s13^2 - 29*s13*s23 + 
               36*s23^2) + 40*s13*s23^2*(s13^3 - 2*s13*s23^2 - s23^3) + 
             2*s12^3*(462*s13^3 + 77*s13^2*s23 + 24*s13*s23^2 + 12*s23^3) + 
             2*s12*s13*s23*(43*s13^3 + 40*s13^2*s23 + 23*s23^3) + 
             s12^2*(468*s13^4 - 403*s13^3*s23 - 838*s13^2*s23^2 - 137*s13*
                s23^3 - 12*s23^4)) + 2*p2q*p3q*(s12^4*(474*s13^2 - 22*s13*
                s23 + 24*s23^2) + 20*s13*s23^2*(4*s13^3 + 3*s13^2*s23 - 3*s13*
                s23^2 - 2*s23^3) + s12^3*(468*s13^3 - 345*s13^2*s23 + 67*s13*
                s23^2 + 18*s23^3) + s12*s13*s23*(129*s13^3 + 163*s13^2*s23 + 
               20*s13*s23^2 + 46*s23^3) + s12^2*(474*s13^4 - 398*s13^3*s23 - 
               858*s13^2*s23^2 - 107*s13*s23^3 - 6*s23^4))) - 
         p1q^2*(p3q^3*(40*s13^2*s23^3*(s13 + s23)^2 - 
             3*s12^5*(156*s13^2 - 5*s13*s23 + 12*s23^2) - 4*s12^4*s13*
              (117*s13^2 - 331*s13*s23 + 26*s23^2) + 2*s12^2*s13*s23*
              (511*s13^3 + 99*s13^2*s23 - 93*s13*s23^2 - 119*s23^3) + 
             s12^3*s23*(1359*s13^3 + 1396*s13^2*s23 + 351*s13*s23^2 + 36*
                s23^3) + 2*s12*s13*s23^2*(43*s13^3 + 40*s13^2*s23 + 57*s13*
                s23^2 + 60*s23^3)) + p2q^3*s13*(3*s12^4*(151*s13 - 26*s23)*
              s23 - 120*s13*(s13 - s23)*s23^2*(s13 + s23)^2 + 
             s12^3*(-468*s13^3 + 536*s13^2*s23 + 292*s13*s23^2 + 126*s23^3) + 
             s12^2*(-468*s13^4 + 489*s13^3*s23 + 644*s13^2*s23^2 - 211*s13*
                s23^3 - 174*s23^4) + 2*s12*s23*(-43*s13^4 - 57*s13^3*s23 - 40*
                s13^2*s23^2 + 37*s13*s23^3 + 63*s23^4)) + 
           p2q*p3q^2*(-6*s12^5*(78*s13^2 - 5*s13*s23 + 10*s23^2) + 
             s12^2*s13*s23*(3025*s13^3 + 504*s13^2*s23 - 1323*s13*s23^2 - 664*
                s23^3) + s12^4*(468*s13^3 + 2657*s13^2*s23 - 298*s13*s23^2 - 
               12*s23^3) + 40*s13^2*s23^2*(-2*s13^3 + 2*s13^2*s23 + 9*s13*
                s23^2 + 5*s23^3) + 2*s12^3*(468*s13^4 + 1651*s13^3*s23 + 754*
                s13^2*s23^2 + 383*s13*s23^3 + 24*s23^4) + 2*s12*s13*s23*
              (-43*s13^4 + 89*s13^3*s23 + 77*s13^2*s23^2 + 108*s13*s23^3 + 
               183*s23^4)) + p2q^2*p3q*(3*s12^5*(5*s13 - 8*s23)*s23 - 
             40*s13^2*s23^2*(5*s13^3 + 2*s13^2*s23 - 10*s13*s23^2 - 7*
                s23^3) + 2*s12^4*(468*s13^3 + 1121*s13^2*s23 - 136*s13*
                s23^2 - 6*s23^3) - 2*s12*s13*s23*(86*s13^4 + 11*s13^3*s23 + 3*
                s13^2*s23^2 - 88*s13*s23^3 - 186*s23^4) + 
             s12^3*(468*s13^4 + 3391*s13^3*s23 + 1316*s13^2*s23^2 + 541*s13*
                s23^3 + 12*s23^4) - 2*s12^2*s13*(234*s13^4 - 1474*s13^3*s23 - 
               931*s13^2*s23^2 + 446*s13*s23^3 + 300*s23^4))) + 
         p1q*(-2*p3q^4*s12*(6*s12^5*s23 - 40*s13^2*s23^3*(s13 + s23) - 
             3*s12^4*(156*s13^2 - 9*s13*s23 + 4*s23^2) + s12^2*s13*s23*
              (161*s13^2 + 249*s13*s23 + 169*s23^2) + s12*s13*s23*
              (414*s13^3 + 39*s13^2*s23 + 89*s13*s23^2 - 60*s23^3) - 
             2*s12^3*(234*s13^3 - 10*s13^2*s23 + 73*s13*s23^2 + 9*s23^3)) - 
           2*p2q*p3q^3*(12*s12^6*s23 - 40*s13^3*s23^2*(s13 + s23)^2 - 
             9*s12^5*(78*s13^2 - 9*s13*s23 + 2*s23^2) + 2*s12^2*s13*s23*
              (803*s13^3 + 296*s13^2*s23 + 124*s13*s23^2 - 123*s23^3) + 
             3*s12^4*(78*s13^3 + 244*s13^2*s23 - 127*s13*s23^2 - 10*s23^3) - 
             s12*s13^2*s23*(83*s13^3 + 37*s13^2*s23 + 157*s13*s23^2 + 203*
                s23^3) + 2*s12^3*s13*(468*s13^3 + 795*s13^2*s23 + 391*s13*
                s23^2 + 297*s23^3)) - 2*p2q^3*p3q*s13*(27*s12^5*s23 + 
             s12^4*(468*s13^2 + 620*s13*s23 - 153*s23^2) + 20*s13^2*s23*
              (2*s13^3 - s13^2*s23 - 11*s13*s23^2 - 8*s23^3) + 
             s12^3*(-234*s13^3 + 766*s13^2*s23 + 559*s13*s23^2 + 363*s23^3) - 
             s12*s13*s23*(89*s13^3 + 14*s13^2*s23 + 360*s13*s23^2 + 375*
                s23^3) + s12^2*(-702*s13^4 + 314*s13^3*s23 + 854*s13^2*
                s23^2 + 74*s13*s23^3 - 213*s23^4)) + p2q^4*s13*
            (3*s12^4*s23*(-56*s13 + 13*s23) + 2*s12^3*(234*s13^3 + 11*s13^2*
                s23 - 148*s13*s23^2 - 63*s23^3) - 40*s13^2*s23*
              (s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             2*s12*s13*s23*(3*s13^3 - 20*s13^2*s23 + 143*s13*s23^2 + 126*
                s23^3) + s12^2*(468*s13^4 + 224*s13^3*s23 - 339*s13^2*s23^2 + 
               87*s23^4)) + p2q^2*p3q^2*(-12*s12^6*s23 + 
             6*s12^5*(78*s13^2 - 27*s13*s23 + 2*s23^2) - 40*s13^3*s23*
              (s13^3 - 4*s13^2*s23 - 12*s13*s23^2 - 7*s23^3) + 
             s12^4*(-2340*s13^3 - 2496*s13^2*s23 + 737*s13*s23^2 + 24*
                s23^3) + 2*s12*s13^2*s23*(169*s13^3 + 71*s13^2*s23 + 334*s13*
                s23^2 + 412*s23^3) - 2*s12^3*s13*(936*s13^3 + 2206*s13^2*
                s23 + 944*s13*s23^2 + 725*s23^3) + s12^2*s13*
              (936*s13^4 - 3236*s13^3*s23 - 2475*s13^2*s23^2 - 466*s13*
                s23^3 + 711*s23^4))))/(54*ep*(p1q + p3q)*(p2q + p3q)^2*
         (p1q + p2q + p3q)*s12^2*s13^2*s23^2*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + 
       (ep*(2*p1q^4*(p2q + p3q)*(s12 + s13)*s23^2*
           (19*s13^3*s23^2*(s13 + s23) + 3*s12^4*(8*s13^2 - 13*s13*s23 + 
              2*s23^2) - s12*s13^2*s23*(2*s13^2 + 2*s13*s23 + 19*s23^2) + 
            s12^2*s13*(24*s13^3 - 31*s13^2*s23 - 78*s13*s23^2 - 6*s23^3) + 
            s12^3*(48*s13^3 - 68*s13^2*s23 - 39*s13*s23^2 + 6*s23^3)) + 
          (p2q + p3q)^2*(s12 + s13)*(2*p2q^3*s13^2*(s12 + s13)*s23*
             (s12^4 - 19*s13^2*s23*(s13 + s23) + s12^3*(19*s13 + 53*s23) + 
              s12*s13*(17*s13^2 + 2*s13*s23 + 4*s23^2) + s12^2*(35*s13^2 + 
                74*s13*s23 + 52*s23^2)) - p3q^3*s12^2*(92*s12^5*s23 + 
              s12*s13^2*s23*(543*s13^2 - 989*s13*s23 - 116*s23^2) + 
              2*s13^3*s23*(111*s13^2 - 259*s13*s23 - 47*s23^2) + 
              s12^4*(-48*s13^2 + 421*s13*s23 + 172*s23^2) + s12^2*s13*(
                -48*s13^3 + 705*s13^2*s23 - 472*s13*s23^2 + 38*s23^3) + 
              s12^3*(-96*s13^3 + 713*s13^2*s23 + 171*s13*s23^2 + 80*s23^3)) + 
            p2q^2*p3q*s13*(78*s12^6*s23 - 38*s13^4*s23*(s13 + s23)^2 + 
              s12^5*s23*(5*s13 + 218*s23) - 2*s12*s13^3*s23*(48*s13^2 + 
                61*s13*s23 + 13*s23^2) + s12^4*(48*s13^3 - 583*s13^2*s23 + 
                591*s13*s23^2 - 136*s23^3) + s12^3*s13*(96*s13^3 - 
                937*s13^2*s23 + 706*s13*s23^2 - 26*s23^3) + s12^2*s13^2*(
                48*s13^3 - 485*s13^2*s23 + 287*s13*s23^2 + 142*s23^3)) - 
            p2q*p3q^2*s12*(80*s12^6*s23 + 5*s12^5*s23*(45*s13 + 32*s23) + 
              s12*s13^3*s23*(673*s13^2 - 763*s13*s23 - 128*s23^2) + 
              4*s13^4*s23*(3*s13^2 + 2*s13*s23 - s23^2) + s12^2*s13^2*(
                96*s13^3 + 1420*s13^2*s23 - 1659*s13*s23^2 + 6*s23^3) + 
              s12^4*(96*s13^3 + 416*s13^2*s23 - 157*s13*s23^2 + 80*s23^3) + 
              s12^3*s13*(192*s13^3 + 1030*s13^2*s23 - 1205*s13*s23^2 + 
                170*s23^3))) + p1q*(p2q^3*p3q*(s12^7*s23*(-23*s13 + 40*s23) + 
              38*s13^5*s23*(-2*s13^3 + s13^2*s23 + 11*s13*s23^2 + 8*s23^3) + 
              s12^6*(-96*s13^3 - 767*s13^2*s23 + 1920*s13*s23^2 + 80*s23^3) + 
              2*s12*s13^4*s23*(-176*s13^3 + 51*s13^2*s23 + 516*s13*s23^2 + 
                232*s23^3) + s12^2*s13^3*(144*s13^4 - 2311*s13^3*s23 + 
                2341*s13^2*s23^2 + 244*s13*s23^3 - 600*s23^4) + 
              3*s12^3*s13^2*(112*s13^4 - 1997*s13^3*s23 + 2481*s13^2*s23^2 - 
                353*s13*s23^3 - 350*s23^4) + s12^4*s13*(144*s13^4 - 
                6798*s13^3*s23 + 9969*s13^2*s23^2 - 752*s13*s23^3 - 
                270*s23^4) + s12^5*(-144*s13^4 - 3586*s13^3*s23 + 
                6683*s13^2*s23^2 + 17*s13*s23^3 + 40*s23^4)) + 
            p3q^4*s12*(-12*s12^7*s23 + 4*s13^4*s23^2*(s13^2 - 2*s13*s23 - 
                3*s23^2) + s12^6*(96*s13^2 - 227*s13*s23 + 144*s23^2) - 
              s12^2*s13^2*s23*(747*s13^3 - 3884*s13^2*s23 + 664*s13*s23^2 + 
                92*s23^3) - s12*s13^3*s23*(266*s13^3 - 1263*s13^2*s23 + 
                537*s13*s23^2 + 112*s23^3) + s12^5*(288*s13^3 - 702*s13^2*
                 s23 + 1327*s13*s23^2 + 276*s23^3) + 2*s12^4*(144*s13^4 - 
                493*s13^3*s23 + 1820*s13^2*s23^2 + 393*s13*s23^3 + 
                60*s23^4) + s12^3*s13*(96*s13^4 - 980*s13^3*s23 + 
                5082*s13^2*s23^2 + 375*s13*s23^3 + 108*s23^4)) + 
            p2q^2*p3q^2*(-12*s12^8*s23 + s12^7*(48*s13^2 - 273*s13*s23 + 
                212*s23^2) - 38*s13^5*s23*(s13^3 - 4*s13^2*s23 - 
                12*s13*s23^2 - 7*s23^3) + 2*s12*s13^4*s23*(-100*s13^3 + 
                255*s13^2*s23 + 577*s13*s23^2 + 203*s23^3) + 
              s12^6*(-144*s13^3 - 1573*s13^2*s23 + 3967*s13*s23^2 + 
                424*s23^3) - s12^4*s13^2*(528*s13^3 + 8816*s13^2*s23 - 
                19583*s13*s23^2 + 567*s23^3) - s12^3*s13^2*s23*(7713*s13^3 - 
                15453*s13^2*s23 + 2124*s13*s23^2 + 968*s23^3) + 
              s12^2*s13^3*(96*s13^4 - 2761*s13^3*s23 + 5430*s13^2*s23^2 - 
                391*s13*s23^3 - 688*s23^4) + s12^5*(-624*s13^4 - 
                5014*s13^3*s23 + 12957*s13^2*s23^2 + 892*s13*s23^3 + 
                200*s23^4)) - p2q^4*s13*(s12 + s13)*(s12^5*(237*s13 - 
                362*s23)*s23 + 2*s12*s13^2*s23*(65*s13^3 + 51*s13^2*s23 - 
                80*s13*s23^2 - 28*s23^3) + 38*s13^3*s23*(s13^3 + s13^2*s23 - 
                3*s13*s23^2 - 3*s23^3) + s12^4*(-48*s13^3 + 875*s13^2*s23 - 
                879*s13*s23^2 + 58*s23^3) + s12^3*(-96*s13^4 + 1141*s13^3*
                 s23 - 794*s13^2*s23^2 + 204*s13*s23^3 + 144*s23^4) + 
              s12^2*s13*(-48*s13^4 + 595*s13^3*s23 - 213*s13^2*s23^2 + 
                80*s13*s23^3 + 264*s23^4)) + p2q*p3q^3*(-24*s12^8*s23 + 
              76*s13^5*s23^2*(s13 + s23)^2 + s12^7*(144*s13^2 - 477*s13*s23 + 
                316*s23^2) - 4*s12*s13^4*s23*(4*s13^3 - 68*s13^2*s23 - 
                97*s13*s23^2 - 25*s23^3) - s12^2*s13^3*s23*(1441*s13^3 - 
                4463*s13^2*s23 + 1092*s13*s23^2 + 408*s23^3) + 
              s12^6*(240*s13^3 - 1745*s13^2*s23 + 3736*s13*s23^2 + 
                620*s23^3) + s12^4*s13*(-432*s13^4 - 5014*s13^3*s23 + 
                16369*s13^2*s23^2 + 298*s13*s23^3 + 234*s23^4) + 
              s12^5*(-144*s13^4 - 3526*s13^3*s23 + 11155*s13^2*s23^2 + 
                1603*s13*s23^3 + 280*s23^4) - s12^3*s13^2*(192*s13^4 + 
                4205*s13^3*s23 - 12901*s13^2*s23^2 + 2013*s13*s23^3 + 
                418*s23^4))) - p1q^3*s23*
           (p2q^2*(2*s12^6*(24*s13^2 - 41*s13*s23 + 6*s23^2) + 
              38*s13^3*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - s23^3) + 
              s12^5*(192*s13^3 - 262*s13^2*s23 + 245*s13*s23^2 + 52*s23^3) - 
              2*s12*s13^2*s23*(4*s13^4 - 118*s13^3*s23 - 36*s13^2*s23^2 + 
                65*s13*s23^3 + 17*s23^4) + s12^4*(336*s13^4 - 394*s13^3*s23 + 
                377*s13^2*s23^2 + 3*s13*s23^3 + 80*s23^4) + 
              s12^3*(288*s13^5 - 386*s13^4*s23 + 299*s13^3*s23^2 - 
                530*s13^2*s23^3 + 8*s13*s23^4 + 40*s23^5) + s12^2*s13*(
                96*s13^5 - 180*s13^4*s23 + 277*s13^3*s23^2 - 483*s13^2*
                 s23^3 - 184*s13*s23^4 + 44*s23^5)) + 2*p2q*p3q*
             (s12^6*(48*s13^2 - 121*s13*s23 + 24*s23^2) + 19*s13^3*s23^2*(
                4*s13^3 + 3*s13^2*s23 - 3*s13*s23^2 - 2*s23^3) + 
              2*s12^5*(72*s13^3 - 201*s13^2*s23 + 152*s13*s23^2 + 29*s23^3) + 
              s12*s13^2*s23*(-6*s13^4 + 158*s13^3*s23 + 11*s13^2*s23^2 - 
                130*s13*s23^3 - 34*s23^4) + s12^4*(192*s13^4 - 602*s13^3*
                 s23 + 492*s13^2*s23^2 + 83*s13*s23^3 + 74*s23^4) + 
              s12^3*(144*s13^5 - 536*s13^4*s23 + 422*s13^3*s23^2 - 
                375*s13^2*s23^3 + 8*s13*s23^4 + 40*s23^5) + s12^2*s13*(
                48*s13^5 - 221*s13^4*s23 + 292*s13^3*s23^2 - 406*s13^2*
                 s23^3 - 159*s13*s23^4 + 44*s23^5)) + 
            p3q^2*(4*s12^6*(24*s13^2 - 40*s13*s23 + 9*s23^2) + 
              38*s13^3*s23^2*(s13^3 - 2*s13*s23^2 - s23^3) + 
              s12^5*(288*s13^3 - 446*s13^2*s23 + 363*s13*s23^2 + 64*s23^3) - 
              2*s12*s13^2*s23*(2*s13^4 - 40*s13^3*s23 + 25*s13^2*s23^2 + 
                65*s13*s23^3 + 17*s23^4) + s12^4*(336*s13^4 - 522*s13^3*s23 + 
                655*s13^2*s23^2 + 163*s13*s23^3 + 68*s23^4) + 
              s12^3*(192*s13^5 - 398*s13^4*s23 + 641*s13^3*s23^2 - 
                220*s13^2*s23^3 + 8*s13*s23^4 + 40*s23^5) + s12^2*s13*(
                48*s13^5 - 166*s13^4*s23 + 355*s13^3*s23^2 - 329*s13^2*
                 s23^3 - 134*s13*s23^4 + 44*s23^5))) + 
          p1q^2*(p3q^3*(-38*s13^4*s23^3*(s13 + s23)^2 + s12^7*(48*s13^2 - 
                82*s13*s23 + 36*s23^2) + 16*s12^6*s13*(9*s13^2 - 21*s13*s23 + 
                41*s23^2) + 2*s12*s13^3*s23^2*(4*s13^3 - 65*s13^2*s23 - 
                99*s13*s23^2 - 30*s23^3) + s12^4*s13*(48*s13^4 - 
                340*s13^3*s23 + 2549*s13^2*s23^2 - 1988*s13*s23^3 - 
                435*s23^4) + s12^5*(144*s13^4 - 464*s13^3*s23 + 1839*s13^2*
                 s23^2 - 651*s13*s23^3 - 36*s23^4) + s12^2*s13^2*s23*(
                -92*s13^4 + 807*s13^3*s23 - 1276*s13^2*s23^2 - 137*s13*
                 s23^3 + 52*s23^4) + s12^3*s13*s23*(-222*s13^4 + 
                2129*s13^3*s23 - 2521*s13^2*s23^2 - 354*s13*s23^3 + 
                54*s23^4)) - p2q^2*p3q*(2*s12^7*(41*s13 - 12*s23)*s23 + 
              s12^6*(96*s13^3 + 268*s13^2*s23 - 998*s13*s23^2 - 92*s23^3) - 
              38*s13^4*s23^2*(5*s13^3 + 2*s13^2*s23 - 10*s13*s23^2 - 
                7*s23^3) + s12^5*(240*s13^4 + 464*s13^3*s23 - 3587*s13^2*
                 s23^2 + 1519*s13*s23^3 - 148*s23^4) + 2*s12*s13^3*s23*(
                4*s13^4 - 317*s13^3*s23 + 7*s13^2*s23^2 + 475*s13*s23^3 + 
                166*s23^4) + s12^3*s13*(-48*s13^5 + 1174*s13^4*s23 - 
                6367*s13^3*s23^2 + 6189*s13^2*s23^3 + 490*s13*s23^4 - 
                518*s23^5) + s12^2*s13^2*(-48*s13^5 + 512*s13^4*s23 - 
                3019*s13^3*s23^2 + 2714*s13^2*s23^3 + 899*s13*s23^4 - 
                392*s23^5) + s12^4*(144*s13^5 + 948*s13^4*s23 - 6405*s13^3*
                 s23^2 + 5176*s13^2*s23^3 + 113*s13*s23^4 - 80*s23^5)) + 
            p2q*p3q^2*(4*s12^7*(12*s13^2 - 41*s13*s23 + 15*s23^2) + 
              38*s13^4*s23^2*(2*s13^3 - 2*s13^2*s23 - 9*s13*s23^2 - 
                5*s23^3) + s12^6*(48*s13^3 - 590*s13^2*s23 + 1391*s13*s23^2 + 
                52*s23^3) - 2*s12^2*s13^2*s23*(197*s13^4 - 1380*s13^3*s23 + 
                1630*s13^2*s23^2 + 327*s13*s23^3 - 137*s23^4) + 
              s12^5*(-144*s13^4 - 784*s13^3*s23 + 4433*s13^2*s23^2 - 
                1759*s13*s23^3 + 32*s23^4) - 2*s12*s13^3*s23*(2*s13^4 - 
                136*s13^3*s23 + 161*s13^2*s23^2 + 408*s13*s23^3 + 
                128*s23^4) - s12^3*s13*(96*s13^5 + 872*s13^4*s23 - 
                6599*s13^3*s23^2 + 6781*s13^2*s23^3 + 730*s13*s23^4 - 
                340*s23^5) - s12^4*(240*s13^5 + 840*s13^4*s23 - 7137*s13^3*
                 s23^2 + 5578*s13^2*s23^3 + 658*s13*s23^4 - 40*s23^5)) + 
            p2q^3*(114*s13^4*(s13 - s23)*s23^2*(s13 + s23)^2 + 
              s12^6*s23*(34*s13^2 + 263*s13*s23 + 40*s23^2) - 
              2*s12*s13^3*s23*(2*s13^4 - 185*s13^3*s23 - 89*s13^2*s23^2 + 
                166*s13*s23^3 + 68*s23^4) + s12^5*(48*s13^4 + 48*s13^3*s23 + 
                1089*s13^2*s23^2 - 411*s13*s23^3 + 80*s23^4) + 
              s12^4*(144*s13^5 - 160*s13^4*s23 + 2105*s13^3*s23^2 - 
                1538*s13^2*s23^3 + 110*s13*s23^4 + 40*s23^5) + 
              2*s12^2*s13^2*(24*s13^5 - 81*s13^4*s23 + 581*s13^3*s23^2 - 
                341*s13^2*s23^3 - 191*s13*s23^4 + 85*s23^5) + 
              s12^3*s13*(144*s13^5 - 332*s13^4*s23 + 2185*s13^3*s23^2 - 
                1833*s13^2*s23^3 - 114*s13*s23^4 + 232*s23^5)))))/
        (108*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*
         (s12 + s13)^2*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) + (-2*p1q^4*(p2q + p3q)*s23^2*
          (122*s13^4*s23^2*(s13 + s23) + 9*s12^5*(104*s13^2 - 5*s13*s23 + 
             4*s23^2) + 2*s12*s13^3*s23*(172*s13^2 + 315*s13*s23 + 
             82*s23^2) + 3*s12^2*s13^2*(312*s13^3 + 505*s13^2*s23 + 
             111*s13*s23^2 - 22*s23^3) + s12^4*(2808*s13^3 + 737*s13^2*s23 + 
             39*s13*s23^2 + 36*s23^3) + s12^3*s13*(2808*s13^3 + 
             1953*s13^2*s23 - 172*s13*s23^2 + 48*s23^3)) - 
         (p2q + p3q)^2*(s12 + s13)*(2*p2q^3*s13^2*(s12 + s13)*s23*
            (147*s12^4 + 3*s12^3*(98*s13 - 57*s23) - 122*s13^2*s23*
              (s13 + s23) - 2*s12*s13*s23*(254*s13 + 193*s23) + 
             s12^2*(147*s13^2 - 557*s13*s23 - 318*s23^2)) + 
           p3q^3*s12^2*(-72*s12^5*s23 + 3*s12^4*(624*s13^2 - 223*s13*s23 - 24*
                s23^2) + 6*s13^3*s23*(-282*s13^2 + 281*s13*s23 + 14*s23^2) + 
             s12*s13^2*s23*(-1509*s13^2 + 3865*s13*s23 + 290*s23^2) + 
             3*s12^3*s13*(1248*s13^2 - 245*s13*s23 + 503*s23^2) + 
             s12^2*s13*(1872*s13^3 + 45*s13^2*s23 + 3520*s13*s23^2 + 246*
                s23^3)) - p2q*p3q^2*s12*s13*(549*s12^5*s23 + 
             s12^4*(3744*s13^2 + 3794*s13*s23 - 2793*s23^2) - 
             12*s13^3*s23*(33*s13^2 + 14*s13*s23 - 19*s23^2) + 
             s12*s13^2*s23*(4343*s13^2 - 599*s13*s23 + 1022*s23^2) + 
             s12^3*(7488*s13^3 + 8100*s13^2*s23 - 5113*s13*s23^2 + 378*
                s23^3) + s12^2*s13*(3744*s13^3 + 9594*s13^2*s23 - 3231*s13*
                s23^2 + 1252*s23^3)) - p2q^2*p3q*s13*(294*s12^6*s23 + 
             s12^5*(1801*s13 - 930*s23)*s23 + 244*s13^4*s23*(s13 + s23)^2 - 
             4*s12*s13^3*s23*(6*s13^2 - 305*s13*s23 - 311*s23^2) + 
             s12^4*(-1872*s13^3 + 2247*s13^2*s23 - 649*s13*s23^2 + 636*
                s23^3) + s12^3*s13*(-3744*s13^3 + 1243*s13^2*s23 + 2160*s13*
                s23^2 + 2202*s23^3) + s12^2*s13^2*(-1872*s13^3 + 235*s13^2*
                s23 + 2851*s13*s23^2 + 2526*s23^3))) + 
         p1q*(p2q^2*p3q^2*(72*s12^8*s23 - 3*s12^7*(624*s13^2 - 365*s13*s23 + 
               24*s23^2) + s12^3*s13^2*s23*(61847*s13^3 + 21197*s13^2*s23 + 
               20628*s13*s23^2 - 11000*s23^3) + s12^6*(5616*s13^3 + 16249*
                s13^2*s23 - 7389*s13*s23^2 - 144*s23^3) + 244*s13^5*s23*
              (s13^3 - 4*s13^2*s23 - 12*s13*s23^2 - 7*s23^3) - 
             4*s12*s13^4*s23*(487*s13^3 + 457*s13^2*s23 + 2070*s13*s23^2 + 
               2039*s23^3) + s12^5*s13*(24336*s13^3 + 48302*s13^2*s23 - 8869*
                s13*s23^2 + 11254*s23^3) + s12^2*s13^3*(-3744*s13^4 + 18113*
                s13^3*s23 + 6314*s13^2*s23^2 - 2477*s13*s23^3 - 14530*
                s23^4) + s12^4*s13*(20592*s13^4 + 74618*s13^3*s23 + 12479*
                s13^2*s23^2 + 28431*s13*s23^3 - 2798*s23^4)) + 
           p2q^3*p3q*s13*(273*s12^7*s23 + s12^6*(3744*s13^2 + 7693*s13*s23 - 
               2888*s23^2) + 244*s13^4*s23*(2*s13^3 - s13^2*s23 - 11*s13*
                s23^2 - 8*s23^3) - 4*s12*s13^3*s23*(161*s13^3 + 89*s13^2*
                s23 + 2149*s13*s23^2 + 2038*s23^3) + 
             s12^5*(5616*s13^3 + 23330*s13^2*s23 - 119*s13*s23^2 + 5521*
                s23^3) + s12^2*s13^2*(-5616*s13^4 + 6677*s13^3*s23 + 9289*
                s13^2*s23^2 - 7174*s13*s23^3 - 13142*s23^4) + 
             s12^3*s13*(-13104*s13^4 + 26001*s13^3*s23 + 24279*s13^2*s23^2 + 
               7105*s13*s23^3 - 9460*s23^4) + s12^4*(-5616*s13^4 + 34102*
                s13^3*s23 + 17647*s13^2*s23^2 + 13648*s13*s23^3 - 2478*
                s23^4)) + p2q*p3q^3*(144*s12^8*s23 - 488*s13^5*s23^2*
              (s13 + s23)^2 - 3*s12^7*(1872*s13^2 - 457*s13*s23 + 72*s23^2) + 
             s12^2*s13^3*s23*(16175*s13^3 - 1557*s13^2*s23 + 3574*s13*s23^2 - 
               6402*s23^3) - 3*s12^6*(3120*s13^3 - 4077*s13^2*s23 + 2564*s13*
                s23^2 + 120*s23^3) - 4*s12*s13^4*s23*(271*s13^3 + 168*s13^2*
                s23 + 709*s13*s23^2 + 812*s23^3) + s12^5*s13*
              (5616*s13^3 + 32294*s13^2*s23 - 12013*s13*s23^2 + 9335*s23^3) + 
             s12^3*s13^2*(7488*s13^4 + 46971*s13^3*s23 + 1449*s13^2*s23^2 + 
               21151*s13*s23^3 - 4468*s23^4) + s12^4*s13*(16848*s13^4 + 51002*
                s13^3*s23 - 1715*s13^2*s23^2 + 24692*s13*s23^3 - 706*
                s23^4)) + p2q^4*s13*(s12 + s13)*(s12^5*(1195*s13 - 294*s23)*
              s23 + 244*s13^3*s23*(s13^3 + s13^2*s23 - 3*s13*s23^2 - 3*
                s23^3) + 3*s12^4*(-624*s13^3 + 731*s13^2*s23 + 633*s13*
                s23^2 + 310*s23^3) - 4*s12*s13^2*s23*(6*s13^3 - 82*s13^2*
                s23 + 563*s13*s23^2 + 529*s23^3) + s12^2*s13*
              (-1872*s13^4 + 511*s13^3*s23 + 3075*s13^2*s23^2 - 1070*s13*
                s23^3 - 2076*s23^4) + s12^3*(-3744*s13^4 + 1777*s13^3*s23 + 
               4944*s13^2*s23^2 + 1420*s13*s23^3 - 636*s23^4)) + 
           p3q^4*s12*(72*s12^7*s23 + 12*s13^4*s23^2*(19*s13^2 - 14*s13*s23 - 
               33*s23^2) - 9*s12^6*(416*s13^2 - 61*s13*s23 + 16*s23^2) + 
             s12*s13^3*s23*(4252*s13^3 - 1985*s13^2*s23 + 2199*s13*s23^2 - 
               822*s23^3) + s12^2*s13^2*s23*(8837*s13^3 - 3488*s13^2*s23 + 
               7278*s13*s23^2 - 216*s23^3) - s12^5*(11232*s13^3 - 2480*s13^2*
                s23 + 2897*s13*s23^2 + 216*s23^3) + 2*s12^4*s13*
              (-5616*s13^3 + 1967*s13^2*s23 - 2434*s13*s23^2 + 1336*s23^3) + 
             s12^3*s13*(-3744*s13^4 + 6516*s13^3*s23 - 3390*s13^2*s23^2 + 
               7559*s13*s23^3 + 250*s23^4))) + p1q^3*s23*
          (p2q^2*(6*s12^6*(312*s13^2 - 17*s13*s23 + 12*s23^2) + 
             3*s12^4*s13*(4304*s13^3 + 578*s13^2*s23 - 507*s13*s23^2 - 215*
                s23^3) + 244*s13^3*s23^2*(3*s13^3 + 3*s13^2*s23 - s13*s23^2 - 
               s23^3) + s12^5*(7392*s13^3 - 446*s13^2*s23 + 653*s13*s23^2 + 
               72*s23^3) + 4*s12*s13^2*s23*(344*s13^4 + 685*s13^3*s23 + 307*
                s13^2*s23^2 + 6*s13*s23^3 - 82*s23^4) + s12^3*s13*
              (11136*s13^4 + 4142*s13^3*s23 - 3517*s13^2*s23^2 - 1422*s13*
                s23^3 + 488*s23^4) + s12^2*s13*(3744*s13^5 + 3440*s13^4*s23 + 
               113*s13^3*s23^2 - 369*s13^2*s23^3 + 796*s13*s23^4 - 44*
                s23^5)) + 2*p2q*p3q*(3*s12^6*(640*s13^2 - 49*s13*s23 + 48*
                s23^2) + 122*s13^3*s23^2*(4*s13^3 + 3*s13^2*s23 - 3*s13*
                s23^2 - 2*s23^3) + 2*s12^5*(2856*s13^3 - 1188*s13^2*s23 + 383*
                s13*s23^2 + 54*s23^3) + 2*s12*s13^2*s23*(516*s13^4 + 832*
                s13^3*s23 + 227*s13^2*s23^2 - 70*s13*s23^3 - 164*s23^4) + 
             s12^4*(7584*s13^4 - 5186*s13^3*s23 - 3236*s13^2*s23^2 - 643*s13*
                s23^3 - 36*s23^4) + 2*s12^3*s13*(2856*s13^4 - 2216*s13^3*
                s23 - 3265*s13^2*s23^2 - 636*s13*s23^3 + 220*s23^4) + 
             s12^2*s13*(1920*s13^5 - 443*s13^4*s23 - 1976*s13^3*s23^2 - 353*
                s13^2*s23^3 + 862*s13*s23^4 - 44*s23^5)) + 
           p3q^2*(24*s12^6*(156*s13^2 - 8*s13*s23 + 9*s23^2) + 
             244*s13^3*s23^2*(s13^3 - 2*s13*s23^2 - s23^3) + 
             s12^5*(11136*s13^3 - 754*s13^2*s23 + 879*s13*s23^2 + 144*
                s23^3) + 4*s12*s13^2*s23*(172*s13^4 + 147*s13^3*s23 - 80*
                s13^2*s23^2 - 76*s13*s23^3 - 82*s23^4) + 
             s12^4*(12912*s13^4 - 1450*s13^3*s23 - 3175*s13^2*s23^2 - 641*s13*
                s23^3 - 72*s23^4) + s12^3*s13*(7392*s13^4 - 2350*s13^3*s23 - 
               5991*s13^2*s23^2 - 1122*s13*s23^3 + 392*s23^4) + 
             s12^2*s13*(1872*s13^5 - 774*s13^4*s23 - 2289*s13^3*s23^2 - 337*
                s13^2*s23^3 + 928*s13*s23^4 - 44*s23^5))) + 
         p1q^2*(p3q^3*(244*s13^4*s23^3*(s13 + s23)^2 - 
             6*s12^7*(312*s13^2 - 17*s13*s23 + 36*s23^2) - 
             2*s12^6*s13*(2808*s13^2 - 2998*s13*s23 + 675*s23^2) + 
             4*s12*s13^3*s23^2*(229*s13^3 + 227*s13^2*s23 + 240*s13*s23^2 + 
               242*s23^3) + s12^4*s13*(-1872*s13^4 + 19140*s13^3*s23 + 8617*
                s13^2*s23^2 + 3770*s13*s23^3 - 1627*s23^4) + 
             s12^3*s13*s23*(13322*s13^4 + 5181*s13^3*s23 + 2561*s13^2*s23^2 - 
               4166*s13*s23^3 + 40*s23^4) + s12^5*(-5616*s13^4 + 16144*s13^3*
                s23 + 2035*s13^2*s23^2 + 2893*s13*s23^3 + 216*s23^4) + 
             s12^2*s13^2*s23*(4432*s13^4 + 649*s13^3*s23 + 1628*s13^2*s23^2 - 
               1491*s13*s23^3 + 844*s23^4)) + p2q^3*s13*
            (s12^6*(1770*s13 - 481*s23)*s23 - 732*s13^3*(s13 - s23)*s23^2*
              (s13 + s23)^2 + s12^5*(-1872*s13^3 + 5140*s13^2*s23 - 425*s13*
                s23^2 + 1175*s23^3) + s12^4*(-5616*s13^4 + 7808*s13^3*s23 + 
               2775*s13^2*s23^2 + 706*s13*s23^3 - 1396*s23^4) - 
             4*s12*s13^2*s23*(172*s13^4 + 425*s13^3*s23 + 368*s13^2*s23^2 - 
               364*s13*s23^3 - 479*s23^4) - 2*s12^2*s13*(936*s13^5 - 731*
                s13^4*s23 - 33*s13^3*s23^2 + 1436*s13^2*s23^3 + 432*s13*
                s23^4 - 906*s23^5) + s12^3*(-5616*s13^5 + 6588*s13^4*s23 + 
               3753*s13^3*s23^2 - 2361*s13^2*s23^3 - 3024*s13*s23^4 + 668*
                s23^5)) + p2q*p3q^2*(-12*s12^7*(156*s13^2 - 17*s13*s23 + 30*
                s23^2) - 244*s13^4*s23^2*(2*s13^3 - 2*s13^2*s23 - 9*s13*
                s23^2 - 5*s23^3) - s12^6*(1872*s13^3 - 12082*s13^2*s23 + 2985*
                s13*s23^2 + 72*s23^3) + s12^4*s13*(9360*s13^4 + 47240*s13^3*
                s23 + 6249*s13^2*s23^2 + 5500*s13*s23^3 - 5028*s23^4) + 
             s12^5*(5616*s13^4 + 34452*s13^3*s23 - 1603*s13^2*s23^2 + 6563*
                s13*s23^3 + 288*s23^4) + 4*s12*s13^3*s23*(-172*s13^4 + 298*
                s13^3*s23 + 484*s13^2*s23^2 + 916*s13*s23^3 + 963*s23^4) + 
             2*s12^2*s13^2*s23*(6195*s13^4 - 106*s13^3*s23 - 1453*s13^2*
                s23^2 - 2420*s13*s23^3 + 1750*s23^4) + s12^3*s13*
              (3744*s13^5 + 37744*s13^4*s23 + 3335*s13^3*s23^2 - 3809*s13^2*
                s23^3 - 11904*s13*s23^4 + 748*s23^5)) + 
           p2q^2*p3q*(6*s12^7*(17*s13 - 24*s23)*s23 + 
             4*s12^6*(936*s13^3 + 2408*s13^2*s23 - 529*s13*s23^2 - 18*
                s23^3) - 244*s13^4*s23^2*(5*s13^3 + 2*s13^2*s23 - 10*s13*
                s23^2 - 7*s23^3) + s12^4*s13*(5616*s13^4 + 46564*s13^3*s23 + 
               11063*s13^2*s23^2 + 4212*s13*s23^3 - 4797*s23^4) - 
             4*s12*s13^3*s23*(344*s13^4 + 356*s13^3*s23 + 111*s13^2*s23^2 - 
               1040*s13*s23^3 - 1200*s23^4) + s12^5*(9360*s13^4 + 30552*s13^3*
                s23 - 511*s13^2*s23^2 + 4845*s13*s23^3 + 72*s23^4) + 
             s12^3*s13*(-1872*s13^5 + 38114*s13^4*s23 + 12563*s13^3*s23^2 - 
               5179*s13^2*s23^3 - 10762*s13*s23^4 + 1376*s23^5) + 
             s12^2*s13^2*(-1872*s13^5 + 11196*s13^4*s23 + 2757*s13^3*s23^2 - 
               5630*s13^2*s23^3 - 4213*s13*s23^4 + 4468*s23^5))))/
        (216*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s12^2*s13^2*
         (s12 + s13)^2*s23^2*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + 
          p1q*s23)) + ((-2*p1q^3*(p2q + p3q)*s23*(s12 + s13 + s23)*
           (24*s13 + s23) + p1q^2*(p2q^2*(48*s13^3 + 2*s13^2*s23 - 
              s23^2*(7*s12 + 3*s23) - 5*s13*s23*(10*s12 + 11*s23)) + 
            p3q^2*(2*s12^2*(24*s13 + s23) - s12*s23*(50*s13 + 17*s23) - 
              3*s23*(32*s13^2 + 39*s13*s23 + 5*s23^2)) + 
            2*p2q*p3q*(s12^2*s23 - 2*s12*(24*s13^2 + 49*s13*s23 + 6*s23^2) - 
              s23*(95*s13^2 + 110*s13*s23 + 9*s23^2))) - 
          (p2q + p3q)*(2*p2q^3*s13*s23*(s12 + s13 + s23) + 
            p2q^2*p3q*(-48*s13^3 - 45*s13^2*s23 + 2*s12*s23*(-s12 + s23) + 
              s13*s23*(5*s12 + 9*s23)) - p3q^3*(6*s13*s23*(2*s13 + s23) + 
              15*s12*s23*(5*s13 + s23) + s12^2*(48*s13 + 19*s23)) - 
            p2q*p3q^2*(19*s12^2*s23 + 3*s13*(3*s13 - s23)*s23 + 
              s12*(-96*s13^2 + 20*s13*s23 + 11*s23^2))) + 
          p1q*(p2q^3*(48*s13^3 + 57*s13^2*s23 + 2*s23^2*(-s12 + s23) + 
              5*s13*s23*(s12 + s23)) + p3q^3*(s12*(71*s13 - 4*s23)*s23 + 
              s12^2*(96*s13 + 19*s23) - 3*s23*(12*s13^2 + 21*s13*s23 + 
                5*s23^2)) + p2q^2*p3q*(96*s13^3 + 7*s12^2*s23 + 
              70*s13^2*s23 - 59*s13*s23^2 - 9*s23^3 - s12*(96*s13^2 + 
                35*s13*s23 + 18*s23^2)) + p2q*p3q^2*(s12^2*(48*s13 + 
                26*s23) - s12*(192*s13^2 + 65*s13*s23 + 20*s23^2) - 
              s23*(119*s13^2 + 175*s13*s23 + 26*s23^2))))*den[-3 + 2*ep])/
        (24*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23^2) + 
       nl*(-1/9*(ep^2*(p2q*s13*(s12 + s13 - s23) + p1q*s23*(s12 - s13 + 
               s23) - p3q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))/
           ((p1q + p2q + p3q)*s13*s23) + 
         (ep*(-2*p2q^3*s13*(s12 + s13 + s23) - 2*p1q^3*s23*(s12 + s13 + 
              s23) + p2q*p3q^2*(7*s12^2 + 20*s12*s13 + 21*s13^2 - s12*s23 - 
              7*s13*s23) + p2q^2*p3q*(2*s12^2 + 7*s12*s13 + 9*s13^2 - 
              2*s12*s23 - 5*s13*s23) + p3q^3*(7*s12^2 + 2*s13*(6*s13 - s23) + 
              3*s12*(5*s13 + s23)) + p1q^2*(p3q*(2*s12^2 - 2*s12*s13 - 
                5*s12*s23 - 17*s13*s23 - 3*s23^2) + p2q*(-2*s12*s13 + 
                2*s13^2 - 3*s12*s23 - 11*s13*s23 + s23^2)) + 
            p1q*(p3q^2*(7*s12^2 + 11*s12*s13 + 12*s13^2 - 4*s12*s23 - 
                19*s13*s23 - 3*s23^2) + p2q*p3q*(3*s12^2 + 16*s12*s13 + 
                25*s13^2 - 8*s12*s23 - 16*s13*s23 + s23^2) + 
              p2q^2*(9*s12*s13 + 13*s13^2 - 2*s12*s23 + s13*s23 + 2*s23^2))))/
          (18*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23) + 
         (-2*p1q^3*(p2q + p3q)*(24*s13 - s23)*s23*(s12 + s13 + s23) - 
           p1q*(p2q^3*(-48*s13^3 - 35*s13^2*s23 + 2*s23^2*(-s12 + s23) + s13*
                s23*(9*s12 + s23)) + p2q^2*p3q*(-96*s13^3 + 3*s12^2*s23 - 2*
                s13^2*s23 + 49*s13*s23^2 + 11*s23^3 + s12*(96*s13^2 + 
                 81*s13*s23 - 2*s23^2)) + p2q*p3q^2*(s12^2*(-48*s13 + 
                 2*s23) + s12*(192*s13^2 + 123*s13*s23 - 4*s23^2) + 7*s23*
                (27*s13^2 + 19*s13*s23 + 2*s23^2)) - 
             p3q^3*(s12^2*(96*s13 + s23) + s12*s23*(45*s13 + 4*s23) - s23*
                (60*s13^2 + 37*s13*s23 + 5*s23^2))) + 
           p1q^2*(p2q^2*(48*s13^3 - 2*s13^2*s23 + (3*s12 - s23)*s23^2 - s13*
                s23*(46*s12 + 37*s23)) - 2*p2q*p3q*(s12^2*s23 + 2*s12*s13*
                (24*s13 + 47*s23) + s23*(97*s13^2 + 86*s13*s23 + 3*s23^2)) + 
             p3q^2*(s12^2*(48*s13 - 2*s23) - s12*s23*(46*s13 + 3*s23) - s23*
                (96*s13^2 + 87*s13*s23 + 5*s23^2))) + (p2q + p3q)*
            (2*p2q^3*s13*s23*(s12 + s13 + s23) + p2q^2*p3q*(48*s13^3 + 31*
                s13^2*s23 + 2*s12*s23*(-s12 + s23) - 3*s13*s23*(5*s12 + 
                 s23)) + p3q^3*(2*s13*s23*(-6*s13 + s23) + s12^2*
                (48*s13 + s23) + s12*s23*(41*s13 + 5*s23)) + 
             p2q*p3q^2*(s12^2*s23 - s13*s23*(29*s13 + s23) + s12*
                (-96*s13^2 - 20*s13*s23 + 9*s23^2))))/(36*(p1q + p3q)*
           (p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23^2) + 
         ((-2*p1q^3*(p2q + p3q)*s23*(s12 + s13 + s23)*(24*s13 + s23) + 
            p1q^2*(p2q^2*(48*s13^3 + 2*s13^2*s23 - s23^2*(7*s12 + 3*s23) - 
                5*s13*s23*(10*s12 + 11*s23)) + p3q^2*(2*s12^2*(24*s13 + 
                  s23) - s12*s23*(50*s13 + 17*s23) - 3*s23*(32*s13^2 + 
                  39*s13*s23 + 5*s23^2)) + 2*p2q*p3q*(s12^2*s23 - 
                2*s12*(24*s13^2 + 49*s13*s23 + 6*s23^2) - s23*(95*s13^2 + 
                  110*s13*s23 + 9*s23^2))) - (p2q + p3q)*
             (2*p2q^3*s13*s23*(s12 + s13 + s23) + p2q^2*p3q*(-48*s13^3 - 
                45*s13^2*s23 + 2*s12*s23*(-s12 + s23) + s13*s23*(5*s12 + 
                  9*s23)) - p3q^3*(6*s13*s23*(2*s13 + s23) + 15*s12*s23*
                 (5*s13 + s23) + s12^2*(48*s13 + 19*s23)) - p2q*p3q^2*(
                19*s12^2*s23 + 3*s13*(3*s13 - s23)*s23 + s12*(-96*s13^2 + 
                  20*s13*s23 + 11*s23^2))) + p1q*(p2q^3*(48*s13^3 + 
                57*s13^2*s23 + 2*s23^2*(-s12 + s23) + 5*s13*s23*
                 (s12 + s23)) + p3q^3*(s12*(71*s13 - 4*s23)*s23 + 
                s12^2*(96*s13 + 19*s23) - 3*s23*(12*s13^2 + 21*s13*s23 + 
                  5*s23^2)) + p2q^2*p3q*(96*s13^3 + 7*s12^2*s23 + 
                70*s13^2*s23 - 59*s13*s23^2 - 9*s23^3 - s12*(96*s13^2 + 
                  35*s13*s23 + 18*s23^2)) + p2q*p3q^2*(s12^2*(48*s13 + 
                  26*s23) - s12*(192*s13^2 + 65*s13*s23 + 20*s23^2) - 
                s23*(119*s13^2 + 175*s13*s23 + 26*s23^2))))*den[-3 + 2*ep])/
          (36*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23^2)))*
      Int[DS[k]*DS[k + p2 + p3]] + 
     ((2*ep^3*(p1q*s23*(s12^2*s23*(-4*s13^3 + 21*s13^2*s23 + 5*s13*s23^2 - 
              20*s23^3) - 10*s12^3*(s13^3 - s13^2*s23 + s23^3) + 
            s13*s23*(5*s13^4 - 9*s13^3*s23 + 9*s13*s23^3 - 5*s23^4) + 
            s12*(10*s13^5 - 9*s13^4*s23 + s13^3*s23^2 + 20*s13^2*s23^3 - 
              10*s23^5)) + p3q*(10*s12^4*(s13^3 + s23^3) + 
            2*s13^2*s23^2*(5*s13^3 + s13^2*s23 + s13*s23^2 + 5*s23^3) + 
            5*s12^3*(4*s13^4 + 3*s13^3*s23 + 2*s13^2*s23^2 + 3*s13*s23^3 + 
              4*s23^4) + s12*s13*s23*(25*s13^4 + 22*s13^3*s23 + 
              14*s13^2*s23^2 + 22*s13*s23^3 + 25*s23^4) + 
            2*s12^2*(5*s13^5 + 20*s13^4*s23 + 11*s13^3*s23^2 + 
              11*s13^2*s23^3 + 20*s13*s23^4 + 5*s23^5)) + 
          p2q*s13*(s12^2*s13*(-20*s13^3 + 5*s13^2*s23 + 21*s13*s23^2 - 
              4*s23^3) - 10*s12^3*(s13^3 - s13*s23^2 + s23^3) + 
            s13*s23*(-5*s13^4 + 9*s13^3*s23 - 9*s13*s23^3 + 5*s23^4) + 
            s12*(-10*s13^5 + 20*s13^3*s23^2 + s13^2*s23^3 - 9*s13*s23^4 + 
              10*s23^5))))/(27*(p1q + p2q + p3q)*s13^2*(s12 + s13)*s23^2*
         (s12 + s23)*(s13 + s23)) + 
       (-(p1q^5*s23^2*(20*s13^2*s23^3*(s13 + s23) + s12*s13^2*s23^2*
             (63*s13 + 83*s23) + s12^4*(12*s13^2 + 11*s13*s23 + 6*s23^2) + 
            s12^2*s23*(56*s13^3 + 130*s13^2*s23 + 17*s13*s23^2 + 6*s23^3) + 
            s12^3*(12*s13^3 + 79*s13^2*s23 + 28*s13*s23^2 + 12*s23^3))) + 
         p1q^4*s23*(p3q*(3*s12^5*(8*s13^2 + 7*s13*s23 + 6*s23^2) + 
             2*s12^2*s13*s23*(28*s13^3 + 9*s13^2*s23 - 98*s13*s23^2 - 23*
                s23^3) + 20*s13*s23^3*(s13^3 - s13^2*s23 - 3*s13*s23^2 - s23^
                3) + s12*s13*s23^2*(63*s13^3 - 23*s13^2*s23 - 123*s13*s23^2 + 
               3*s23^3) + s12^4*(12*s13^3 + 107*s13^2*s23 + 22*s13*s23^2 + 24*
                s23^3) + 2*s12^3*(6*s13^4 + 18*s13^3*s23 - 23*s13^2*s23^2 - 
               28*s13*s23^3 + 3*s23^4)) + 
           p2q*(2*s12^5*(6*s13^2 + 5*s13*s23 + 3*s23^2) + 20*s13*s23^3*
              (4*s13^3 + 4*s13^2*s23 - s13*s23^2 - s23^3) + 
             3*s12*s13*s23^2*(63*s13^3 + 82*s13^2*s23 + s23^3) + 
             s12^4*(12*s13^3 + 63*s13^2*s23 + 23*s13*s23^2 + 12*s23^3) + 
             s12^2*s23*(124*s13^4 + 258*s13^3*s23 - 26*s13^2*s23^2 + 7*s13*
                s23^3 + 12*s23^4) + s12^3*(24*s13^4 + 95*s13^3*s23 + 3*s13^2*
                s23^2 + 9*s13*s23^3 + 18*s23^4))) - (p2q + p3q)*
          (2*p3q^4*s12^2*(-2*s12^4*s13*s23 - 3*s12^5*(s13 + s23) + 
             s13^2*s23^2*(-13*s13^2 + 14*s13*s23 - 13*s23^2) + 
             6*s12^2*s13*s23*(5*s13^2 + 13*s13*s23 + 5*s23^2) + 
             s12*s13*s23*(-13*s13^3 + 37*s13^2*s23 + 37*s13*s23^2 - 13*
                s23^3) + s12^3*(3*s13^3 + 38*s13^2*s23 + 38*s13*s23^2 + 3*
                s23^3)) + p2q^4*s13^2*(20*s13^3*s23^2*(s13 + s23) + 
             s12*s13^2*s23^2*(83*s13 + 63*s23) + s12^4*(6*s13^2 + 11*s13*
                s23 + 12*s23^2) + s12^3*(12*s13^3 + 28*s13^2*s23 + 79*s13*
                s23^2 + 12*s23^3) + s12^2*s13*(6*s13^3 + 17*s13^2*s23 + 130*
                s13*s23^2 + 56*s23^3)) + p2q*p3q^3*s12*(-6*s12^6*s13 + 
             40*s13^4*s23^2*(s13 + s23) + s12^5*(6*s13^2 + 26*s13*s23 + 24*
                s23^2) + s12*s13^2*s23*(66*s13^3 - 49*s13^2*s23 + 4*s13*
                s23^2 - 81*s23^3) - 2*s12^3*s13*(9*s13^3 + 68*s13^2*s23 + 4*
                s13*s23^2 - 39*s23^3) + s12^4*(-6*s13^3 + 55*s13^2*s23 + 143*
                s13*s23^2 + 24*s23^3) - s12^2*s13*s23*(135*s13^3 + 180*s13^2*
                s23 - 14*s13*s23^2 + 81*s23^3)) + p2q^2*p3q^2*
            (-20*s13^4*s23^2*(s13 + s23)^2 + 2*s12^6*(9*s13^2 + 5*s13*s23 + 6*
                s23^2) + 2*s12^2*s13^2*s23*(39*s13^3 - 25*s13^2*s23 - 63*s13*
                s23^2 - 56*s23^3) + 2*s12^4*s13*(9*s13^3 - 48*s13^2*s23 - 126*
                s13*s23^2 - 2*s23^3) + s12^5*(18*s13^3 - 15*s13^2*s23 + 14*
                s13*s23^2 + 12*s23^3) - s12*s13^3*s23*(60*s13^3 + 77*s13^2*
                s23 + 80*s13*s23^2 + 63*s23^3) + s12^3*s13*(18*s13^4 + 31*
                s13^3*s23 - 235*s13^2*s23^2 - 99*s13*s23^3 - 68*s23^4)) - 
           p2q^3*p3q*s13*(3*s12^5*(6*s13^2 + 7*s13*s23 + 8*s23^2) - 
             20*s13^3*s23*(s13^3 + 2*s13^2*s23 - s23^3) + 
             s12^4*(30*s13^3 + 33*s13^2*s23 + 119*s13*s23^2 + 12*s23^3) + 
             s12*s13^2*s23*(3*s13^3 - 40*s13^2*s23 + 40*s13*s23^2 + 63*
                s23^3) + s12^3*(18*s13^4 - 28*s13^3*s23 + 33*s13^2*s23^2 + 48*
                s13*s23^3 + 12*s23^4) + s12^2*s13*(6*s13^4 - 29*s13^3*s23 - 
               66*s13^2*s23^2 + 74*s13*s23^3 + 56*s23^4))) + 
         p1q*(p3q^4*s12*(-40*s13^2*s23^4*(s13 + s23) + 
             6*s12^6*(s13 + 2*s23) - 2*s12^5*(12*s13^2 + 11*s13*s23 + 3*
                s23^2) - s12^4*s13*(30*s13^2 + 219*s13*s23 + 131*s23^2) + 
             s12*s13*s23^2*(107*s13^3 - 32*s13^2*s23 + 75*s13*s23^2 - 66*
                s23^3) + 2*s12^3*s23*(-69*s13^3 - 74*s13^2*s23 + 38*s13*
                s23^2 + 9*s23^3) + s12^2*s13*s23*(107*s13^3 - 88*s13^2*s23 + 
               106*s13*s23^2 + 161*s23^3)) + p2q*p3q^3*
            (12*s12^7*(s13 + s23) - 40*s13^3*s23^3*(s13 + s23)^2 - 
             4*s12^6*(3*s13^2 + 17*s13*s23 + 3*s23^2) + 
             s12^5*(60*s13^3 - 217*s13^2*s23 - 217*s13*s23^2 + 60*s23^3) - 
             s12*s13^2*s23^2*(163*s13^3 + 117*s13^2*s23 + 117*s13*s23^2 + 163*
                s23^3) + s12^3*s13*s23*(383*s13^3 + 314*s13^2*s23 + 314*s13*
                s23^2 + 383*s23^3) - 4*s12^2*s13*s23*(51*s13^4 - 40*s13^3*
                s23 - 25*s13^2*s23^2 - 40*s13*s23^3 + 51*s23^4) + 
             s12^4*(84*s13^4 + 258*s13^3*s23 + 220*s13^2*s23^2 + 258*s13*
                s23^3 + 84*s23^4)) + p2q^4*s13*
            (2*s12^5*(3*s13^2 + 5*s13*s23 + 6*s23^2) - 20*s13^3*s23*
              (s13^3 + s13^2*s23 - 4*s13*s23^2 - 4*s23^3) + 
             s12^4*(12*s13^3 + 23*s13^2*s23 + 63*s13*s23^2 + 12*s23^3) + 
             3*s12*s13^2*s23*(s13^3 + 82*s13*s23^2 + 63*s23^3) + 
             s12^3*(18*s13^4 + 9*s13^3*s23 + 3*s13^2*s23^2 + 95*s13*s23^3 + 
               24*s23^4) + s12^2*s13*(12*s13^4 + 7*s13^3*s23 - 26*s13^2*
                s23^2 + 258*s13*s23^3 + 124*s23^4)) + p2q^2*p3q^2*
            (6*s12^7*s13 - 4*s12^6*(3*s13^2 + 14*s13*s23 + 3*s23^2) + 
             20*s13^3*s23^2*(4*s13^3 + 4*s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
             s12^5*(24*s13^3 - 17*s13^2*s23 - 67*s13*s23^2 + 72*s23^3) + 
             s12*s13^2*s23*(123*s13^4 - 92*s13^3*s23 - 37*s13^2*s23^2 - 91*
                s13*s23^3 - 249*s23^4) + s12^2*s13*s23*(-333*s13^4 - 101*
                s13^3*s23 + 366*s13^2*s23^2 + 215*s13*s23^3 - 194*s23^4) + 
             s12^4*(-36*s13^4 + 347*s13^3*s23 + 671*s13^2*s23^2 + 270*s13*
                s23^3 + 84*s23^4) + s12^3*s13*(-78*s13^4 + 68*s13^3*s23 + 443*
                s13^2*s23^2 + 388*s13*s23^3 + 345*s23^4)) + 
           p2q^3*p3q*(-2*s12^6*s13*(6*s13 + 5*s23) + s12^5*(-12*s13^3 + 27*
                s13^2*s23 + 44*s13*s23^2 + 24*s23^3) + 2*s12*s13^2*s23*
              (63*s13^4 + 54*s13^3*s23 + 180*s13^2*s23^2 + 86*s13*s23^3 - 63*
                s23^4) - 20*s13^3*s23*(s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 
               4*s13*s23^3 + 3*s23^4) + s12^4*(-36*s13^4 + 82*s13^3*s23 + 394*
                s13^2*s23^2 + 114*s13*s23^3 + 24*s23^4) + 
             s12^3*s13*(-12*s13^4 - 91*s13^3*s23 + 82*s13^2*s23^2 + 257*s13*
                s23^3 + 148*s23^4) + 2*s12^2*s13*(12*s13^5 - 43*s13^4*s23 - 
               73*s13^3*s23^2 + 233*s13^2*s23^3 + 119*s13*s23^4 - 28*
                s23^5))) + p1q^3*(p3q^2*(-2*s12^6*(6*s13^2 + 5*s13*s23 + 9*
                s23^2) + 2*s12^5*s13*(-6*s13^2 + 5*s13*s23 + 18*s23^2) + 
             s12^3*s13*s23*(80*s13^3 + 147*s13^2*s23 + 268*s13*s23^2 - 59*
                s23^3) + 20*s13*s23^4*(2*s13^3 + 2*s13^2*s23 - s13*s23^2 - 
               s23^3) + s12^4*s23*(16*s13^3 + 371*s13^2*s23 + 129*s13*s23^2 + 
               12*s23^3) + s12*s13*s23^3*(126*s13^3 + 120*s13^2*s23 + 37*s13*
                s23^2 + 63*s23^3) + s12^2*s23^2*(168*s13^4 + 200*s13^3*s23 - 
               16*s13^2*s23^2 - 107*s13*s23^3 + 6*s23^4)) + 
           p2q^2*(2*s12^5*s13*s23*(11*s13 + 4*s23) - 40*s13^2*s23^3*
              (3*s13^3 + 3*s13^2*s23 - 2*s13*s23^2 - 2*s23^3) + 
             s12^3*s13*(-12*s13^4 - 16*s13^3*s23 + 62*s13^2*s23^2 + 3*s13*
                s23^3 - 55*s23^4) + s12^4*(-12*s13^4 + 26*s13^3*s23 + 143*
                s13^2*s23^2 - 6*s13*s23^3 - 12*s23^4) + s12*s13*s23^2*
              (-189*s13^4 - 240*s13^3*s23 + 74*s13*s23^3 + 63*s23^4) - 
             2*s12^2*s23*(40*s13^5 + 57*s13^4*s23 - 49*s13^3*s23^2 + 28*s13^2*
                s23^3 + 13*s13*s23^4 - 6*s23^5)) + 
           p2q*p3q*(-2*s12^6*s23*(5*s13 + 6*s23) + s12^5*(24*s13^3 + 44*s13^2*
                s23 + 27*s13*s23^2 - 12*s23^3) + 2*s12^4*(12*s13^4 + 57*s13^3*
                s23 + 197*s13^2*s23^2 + 41*s13*s23^3 - 18*s23^4) + 
             s12^3*s23*(148*s13^4 + 257*s13^3*s23 + 82*s13^2*s23^2 - 91*s13*
                s23^3 - 12*s23^4) - 20*s13*s23^3*(3*s13^4 - 4*s13^3*s23 - 12*
                s13^2*s23^2 - 4*s13*s23^3 + s23^4) + 2*s12*s13*s23^2*
              (-63*s13^4 + 86*s13^3*s23 + 180*s13^2*s23^2 + 54*s13*s23^3 + 63*
                s23^4) + 2*s12^2*s23*(-28*s13^5 + 119*s13^4*s23 + 233*s13^3*
                s23^2 - 73*s13^2*s23^3 - 43*s13*s23^4 + 12*s23^5))) + 
         p1q^2*(p2q*p3q^2*(6*s12^7*s23 - 4*s12^6*(3*s13^2 + 14*s13*s23 + 3*
                s23^2) - 20*s13^2*s23^3*(5*s13^3 + 5*s13^2*s23 - 4*s13*
                s23^2 - 4*s23^3) + s12^5*(72*s13^3 - 67*s13^2*s23 - 17*s13*
                s23^2 + 24*s23^3) + s12^2*s13*s23*(-194*s13^4 + 215*s13^3*
                s23 + 366*s13^2*s23^2 - 101*s13*s23^3 - 333*s23^4) - 
             s12*s13*s23^2*(249*s13^4 + 91*s13^3*s23 + 37*s13^2*s23^2 + 92*
                s13*s23^3 - 123*s23^4) + s12^3*s23*(345*s13^4 + 388*s13^3*
                s23 + 443*s13^2*s23^2 + 68*s13*s23^3 - 78*s23^4) + 
             s12^4*(84*s13^4 + 270*s13^3*s23 + 671*s13^2*s23^2 + 347*s13*
                s23^3 - 36*s23^4)) + p3q^3*(6*s12^7*s23 + 20*s13^2*s23^4*
              (s13 + s23)^2 - 12*s12^6*(3*s13^2 + 3*s13*s23 + 2*s23^2) + 
             2*s12^4*s13*s23*(-37*s13^2 + 130*s13*s23 + 116*s23^2) + 
             s12^2*s13*s23^2*(193*s13^3 + 122*s13^2*s23 + 99*s13*s23^2 - 144*
                s23^3) - s12^5*(36*s13^3 + 157*s13^2*s23 + 40*s13*s23^2 + 12*
                s23^3) + s12*s13*s23^3*(63*s13^3 + 40*s13^2*s23 + 37*s13*
                s23^2 + 60*s23^3) + s12^3*s23*(149*s13^4 + 85*s13^3*s23 + 415*
                s13^2*s23^2 + 104*s13*s23^3 - 18*s23^4)) + 
           p2q^3*(2*s12^5*s13*s23*(4*s13 + 11*s23) + 40*s13^3*s23^2*
              (2*s13^3 + 2*s13^2*s23 - 3*s13*s23^2 - 3*s23^3) + 
             s12*s13^2*s23*(63*s13^4 + 74*s13^3*s23 - 240*s13*s23^3 - 189*
                s23^4) + s12^3*s23*(-55*s13^4 + 3*s13^3*s23 + 62*s13^2*
                s23^2 - 16*s13*s23^3 - 12*s23^4) + s12^4*(-12*s13^4 - 6*s13^3*
                s23 + 143*s13^2*s23^2 + 26*s13*s23^3 - 12*s23^4) + 
             2*s12^2*s13*(6*s13^5 - 13*s13^4*s23 - 28*s13^3*s23^2 + 49*s13^2*
                s23^3 - 57*s13*s23^4 - 40*s23^5)) - p2q^2*p3q*
            (20*s12^6*s13*s23 - 60*s13^2*s23^2*(s13 + s23)^2*(s13^2 - 4*s13*
                s23 + s23^2) - 2*s12^5*(12*s13^3 + 19*s13^2*s23 + 19*s13*
                s23^2 + 12*s23^3) + 2*s12^4*(18*s13^4 - 79*s13^3*s23 - 295*
                s13^2*s23^2 - 79*s13*s23^3 + 18*s23^4) + 8*s12^2*s13*s23*
              (35*s13^4 + 23*s13^3*s23 - 48*s13^2*s23^2 + 23*s13*s23^3 + 35*
                s23^4) + s12*s13*s23*(-63*s13^5 + 275*s13^4*s23 + 348*s13^3*
                s23^2 + 348*s13^2*s23^3 + 275*s13*s23^4 - 63*s23^5) + 
             3*s12^3*(20*s13^5 + 13*s13^4*s23 - 89*s13^3*s23^2 - 89*s13^2*
                s23^3 + 13*s13*s23^4 + 20*s23^5))))/(27*ep*(p1q + p3q)*
         (p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*s23^2*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) + 
       (ep^2*(-(p1q^6*s13*s23^3*(s12 + s23)*(s13 + s23)*
            (5*s12^5*(s13 - s23) + s13^2*s23^2*(s13 + s23)^2 + 
             10*s12^4*(s13^2 - s23^2) + 4*s12^2*s13*s23*(2*s13^2 + s13*s23 - 
               s23^2) + s12*s13^2*s23*(2*s13^2 + 5*s13*s23 + 3*s23^2) + 
             s12^3*(5*s13^3 + 11*s13^2*s23 - 9*s13*s23^2 - 5*s23^3))) + 
          p1q^5*s23^2*(p2q*(s13 + s23)*(5*s12^7*s13*(s13 - s23) + 
              s13^2*s23^3*(s13 + s23)^2*(4*s13^2 - s13*s23 - s23^2) - 
              2*s12^6*(20*s13^3 + 62*s13^2*s23 + 57*s13*s23^2 + 25*s23^3) + 
              s12*s13^2*s23^2*(9*s13^4 + 20*s13^3*s23 + 7*s13^2*s23^2 - 
                6*s13*s23^3 - 2*s23^4) - s12^5*(15*s13^4 + 213*s13^3*s23 + 
                401*s13^2*s23^2 + 293*s13*s23^3 + 140*s23^4) + 
              s12^4*(20*s13^5 - 32*s13^4*s23 - 351*s13^3*s23^2 - 
                428*s13^2*s23^3 - 269*s13*s23^4 - 120*s23^5) + 
              s12^2*s23*(-6*s13^6 + 39*s13^5*s23 + 15*s13^4*s23^2 - 
                38*s13^3*s23^3 - 23*s13^2*s23^4 - 5*s13*s23^5 + 10*s23^6) - 
              s12^3*(10*s13^6 - 46*s13^5*s23 + 9*s13^4*s23^2 + 213*s13^3*
                 s23^3 + 178*s13^2*s23^4 + 90*s13*s23^5 + 20*s23^6)) + 
            p3q*(5*s12^7*s13*(2*s13^2 + s13*s23 - 3*s23^2) + 
              s13^2*s23^3*(s13 + s23)^3*(s13^2 - 2*s13*s23 - s23^2) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(3*s13^3 - s13^2*s23 - 
                7*s13*s23^2 - 2*s23^3) - s12^6*(45*s13^4 + 149*s13^3*s23 + 
                228*s13^2*s23^2 + 184*s13*s23^3 + 50*s23^4) - 
              s12^5*(30*s13^5 + 246*s13^4*s23 + 569*s13^3*s23^2 + 
                656*s13^2*s23^3 + 433*s13*s23^4 + 140*s23^5) + 
              s12^4*(25*s13^6 - 33*s13^5*s23 - 369*s13^4*s23^2 - 
                674*s13^3*s23^3 - 622*s13^2*s23^4 - 369*s13*s23^5 - 
                120*s23^6) - s12^3*s23*(-51*s13^6 - 31*s13^5*s23 + 
                175*s13^4*s23^2 + 292*s13^3*s23^3 + 217*s13^2*s23^4 + 
                100*s13*s23^5 + 20*s23^6) + s12^2*s23*(2*s13^7 + 
                30*s13^6*s23 + 32*s13^5*s23^2 - 16*s13^4*s23^3 - 
                34*s13^3*s23^4 - 19*s13^2*s23^5 + 5*s13*s23^6 + 10*s23^7))) + 
          (s12 + s13)*(-(p2q^6*s13^3*s23*(s13 + s23)*(-5*s12^5*(s13 - s23) + 
               s13^2*s23^2*(s13 + s23)^2 - 10*s12^4*(s13^2 - s23^2) + 4*s12^2*
                s13*s23*(-s13^2 + s13*s23 + 2*s23^2) + s12*s13*s23^2*
                (3*s13^2 + 5*s13*s23 + 2*s23^2) + s12^3*(-5*s13^3 - 
                 9*s13^2*s23 + 11*s13*s23^2 + 5*s23^3))) + 
            p3q^6*s12^3*(-3*s13^2*s23^3*(5*s13^3 - 9*s13^2*s23 - 
                9*s13*s23^2 + 5*s23^3) + s12^5*(60*s13^3 + 26*s13^2*s23 + 
                26*s13*s23^2 + 60*s23^3) + s12*s13*s23^2*(33*s13^4 + 
                28*s13^3*s23 + 53*s13^2*s23^2 - 14*s13*s23^3 + 48*s23^4) + 
              2*s12^4*(60*s13^4 + 68*s13^3*s23 + 29*s13^2*s23^2 + 
                51*s13*s23^3 + 90*s23^4) + s12^2*s23*(108*s13^5 + 
                99*s13^4*s23 + 44*s13^3*s23^2 + 19*s13^2*s23^3 + 
                146*s13*s23^4 + 60*s23^5) + 2*s12^3*(30*s13^5 + 109*s13^4*
                 s23 + 47*s13^3*s23^2 + 25*s13^2*s23^3 + 87*s13*s23^4 + 
                90*s23^5)) - p2q^5*p3q*s13^2*(s13^2*s23^2*(s13 + s23)^3*(
                s13^2 + 2*s13*s23 - s23^2) - 5*s12^6*s23*(-3*s13^2 + 
                s13*s23 + 2*s23^2) + s12^5*(s13 + s23)^2*(50*s13^2 + 
                69*s13*s23 + 45*s23^2) + s12*s13*s23^2*(s13 + s23)^2*(s13^3 + 
                4*s13^2*s23 - 2*s23^3) + s12^4*(90*s13^5 + 264*s13^4*s23 + 
                423*s13^3*s23^2 + 410*s13^2*s23^3 + 201*s13*s23^4 + 
                30*s23^5) + s12^2*s13*(-10*s13^6 - 5*s13^5*s23 + 
                18*s13^4*s23^2 + 28*s13^3*s23^3 + 7*s13^2*s23^4 - 
                34*s13*s23^5 - 26*s23^6) + s12^3*(30*s13^6 + 105*s13^5*s23 + 
                199*s13^4*s23^2 + 264*s13^3*s23^3 + 168*s13^2*s23^4 + 
                3*s13*s23^5 - 25*s23^6)) + p2q*p3q^5*s12^2*
             (s13^2*s23^3*(s13 + s23)^2*(15*s13^2 - 22*s13*s23 - 5*s23^2) + 
              2*s12^6*(55*s13^3 + 16*s13^2*s23 + 31*s13*s23^2 + 60*s23^3) + 
              s12^5*(30*s13^4 - 35*s13^3*s23 - 87*s13^2*s23^2 - 2*s13*s23^3 + 
                300*s23^4) - s12^4*(270*s13^5 + 308*s13^4*s23 + 473*s13^3*
                 s23^2 + 399*s13^2*s23^3 + 224*s13*s23^4 - 180*s23^5) - 
              s12*s13*s23^2*(52*s13^5 + 133*s13^4*s23 - 26*s13^3*s23^2 - 
                27*s13^2*s23^3 + 148*s13*s23^4 + 68*s23^5) - 
              s12^2*s23*(262*s13^6 + 370*s13^5*s23 + 219*s13^4*s23^2 - 
                7*s13^3*s23^3 + 412*s13^2*s23^4 + 170*s13*s23^5 + 60*s23^6) - 
              s12^3*(190*s13^6 + 503*s13^5*s23 + 622*s13^4*s23^2 + 
                376*s13^3*s23^3 + 549*s13^2*s23^4 + 262*s13*s23^5 + 
                60*s23^6)) + p2q^2*p3q^4*s12*(-(s13^4*s23^3*(s13 + s23)^3) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(18*s13^3 + 71*s13^2*s23 - 
                42*s13*s23^2 - 26*s23^3) + s12^7*(50*s13^3 + s13^2*s23 + 
                41*s13*s23^2 + 60*s23^3) - s12^6*(240*s13^4 + 337*s13^3*s23 + 
                322*s13^2*s23^2 + 335*s13*s23^3 - 60*s23^4) - 
              s12^5*(420*s13^5 + 526*s13^4*s23 + 564*s13^3*s23^2 + 
                613*s13^2*s23^3 + 885*s13*s23^4 + 180*s23^5) + 
              s12^4*(80*s13^6 - 77*s13^5*s23 - 12*s13^4*s23^2 + 256*s13^3*
                 s23^3 - 516*s13^2*s23^4 - 757*s13*s23^5 - 300*s23^6) + 
              2*s12^2*s13*s23*(100*s13^6 + 185*s13^5*s23 + 143*s13^4*s23^2 + 
                176*s13^3*s23^3 + 100*s13^2*s23^4 - 96*s13*s23^5 - 
                78*s23^6) + s12^3*(210*s13^7 + 311*s13^6*s23 + 501*s13^5*
                 s23^2 + 693*s13^4*s23^3 + 705*s13^3*s23^4 - 392*s13^2*
                 s23^5 - 404*s13*s23^6 - 120*s23^7)) + p2q^3*p3q^3*
             (5*s12^8*s13*s23*(-s13 + s23) + s13^4*s23^3*(s13 + s23)^4 + 
              s12*s13^3*s23^2*(s13 + s23)^2*(2*s13^3 + 3*s13^2*s23 + 
                2*s13*s23^2 + 2*s23^3) - s12^7*(150*s13^4 + 151*s13^3*s23 + 
                187*s13^2*s23^2 + 236*s13*s23^3 + 60*s23^4) + 
              s12^6*(60*s13^5 + 324*s13^4*s23 + 367*s13^3*s23^2 + 
                171*s13^2*s23^3 - 372*s13*s23^4 - 180*s23^5) + 
              2*s12^5*(240*s13^6 + 474*s13^5*s23 + 622*s13^4*s23^2 + 
                696*s13^3*s23^3 + 341*s13^2*s23^4 - 62*s13*s23^5 - 
                90*s23^6) + s12^2*s13^2*s23*(-46*s13^6 - 99*s13^5*s23 + 
                19*s13^4*s23^2 + 160*s13^3*s23^3 + 61*s13^2*s23^4 - 
                64*s13*s23^5 - 37*s23^6) + s12^3*s13*(-90*s13^7 + 
                15*s13^6*s23 + 167*s13^5*s23^2 + 201*s13^4*s23^3 + 
                433*s13^3*s23^4 + 435*s13^2*s23^5 + 33*s13*s23^6 - 
                108*s23^7) + s12^4*(180*s13^7 + 539*s13^6*s23 + 913*s13^5*
                 s23^2 + 1197*s13^4*s23^3 + 1333*s13^3*s23^4 + 399*s13^2*
                 s23^5 - 101*s13*s23^6 - 60*s23^7)) + p2q^4*p3q^2*s13*
             (-(s13^3*s23^2*(s13 + s23)^3*(s13^2 - 2*s23^2)) - 
              5*s12^7*s23*(-3*s13^2 + 2*s13*s23 + s23^2) + s12*s13^2*s23^
                2*(s13 + s23)^2*(s13^3 + 3*s13^2*s23 + 5*s13*s23^2 + 
                4*s23^3) + s12^6*(150*s13^4 + 309*s13^3*s23 + 369*s13^2*
                 s23^2 + 345*s13*s23^3 + 115*s23^4) + s12^5*(160*s13^5 + 
                240*s13^4*s23 + 302*s13^3*s23^2 + 562*s13^2*s23^3 + 
                585*s13*s23^4 + 225*s23^5) + s12^4*(-120*s13^6 - 
                308*s13^5*s23 - 424*s13^4*s23^2 - 143*s13^3*s23^3 + 
                391*s13^2*s23^4 + 363*s13*s23^5 + 85*s23^6) + 
              s12^2*s13*(10*s13^7 - 41*s13^6*s23 - 139*s13^5*s23^2 - 
                101*s13^4*s23^3 + 55*s13^3*s23^4 + 108*s13^2*s23^5 + 
                24*s13*s23^6 - 16*s23^7) - s12^3*(120*s13^7 + 295*s13^6*s23 + 
                468*s13^5*s23^2 + 465*s13^4*s23^3 + 72*s13^3*s23^4 - 
                237*s13^2*s23^5 - 117*s13*s23^6 + 20*s23^7))) + 
          p1q^4*s23*(p2q^2*(s13 + s23)*(-(s13^2*s23^3*(s13 + s23)^2*
                (6*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3)) + 
              s12^7*(55*s13^3 + 126*s13^2*s23 + 101*s13*s23^2 + 50*s23^3) + 
              s12^6*(35*s13^4 + 206*s13^3*s23 + 248*s13^2*s23^2 + 
                177*s13*s23^3 + 90*s23^4) + s12^5*(-75*s13^5 + 87*s13^4*s23 + 
                276*s13^3*s23^2 + 132*s13^2*s23^3 + 88*s13*s23^4 - 
                20*s23^5) + s12*s13^2*s23^2*(-9*s13^5 - 18*s13^4*s23 + 
                5*s13^3*s23^2 + 24*s13^2*s23^3 + 11*s13*s23^4 + s23^5) + 
              s12^4*(-35*s13^6 - 106*s13^5*s23 + 162*s13^4*s23^2 + 
                120*s13^3*s23^3 + 11*s13^2*s23^4 + 14*s13*s23^5 - 
                100*s23^6) + s12^3*(20*s13^7 - 85*s13^6*s23 - 36*s13^5*
                 s23^2 + 158*s13^4*s23^3 + 19*s13^3*s23^4 - 3*s13^2*s23^5 - 
                33*s13*s23^6 - 30*s23^7) + s12^2*s23*(28*s13^7 - 
                54*s13^6*s23 - 21*s13^5*s23^2 + 55*s13^4*s23^3 + 
                37*s13^3*s23^4 - 2*s13^2*s23^5 - 35*s13*s23^6 + 10*s23^7)) + 
            p3q^2*(s12 + s23)*(-5*s12^7*s13*(s13^2 + 2*s13*s23 - 3*s23^2) + 
              s13^2*s23^3*(s13 + s23)^3*(2*s13^2 - s23^2) + s12*s13^2*s23^
                2*(s13 + s23)^2*(4*s13^3 + 5*s13^2*s23 + 3*s13*s23^2 + 
                s23^3) + s12^6*(115*s13^4 + 345*s13^3*s23 + 369*s13^2*s23^2 + 
                309*s13*s23^3 + 150*s23^4) + s12^5*(225*s13^5 + 585*s13^4*
                 s23 + 562*s13^3*s23^2 + 302*s13^2*s23^3 + 240*s13*s23^4 + 
                160*s23^5) + s12^4*(85*s13^6 + 363*s13^5*s23 + 391*s13^4*
                 s23^2 - 143*s13^3*s23^3 - 424*s13^2*s23^4 - 308*s13*s23^5 - 
                120*s23^6) + s12^2*s23*(-16*s13^7 + 24*s13^6*s23 + 
                108*s13^5*s23^2 + 55*s13^4*s23^3 - 101*s13^3*s23^4 - 
                139*s13^2*s23^5 - 41*s13*s23^6 + 10*s23^7) - 
              s12^3*(20*s13^7 - 117*s13^6*s23 - 237*s13^5*s23^2 + 
                72*s13^4*s23^3 + 465*s13^3*s23^4 + 468*s13^2*s23^5 + 
                295*s13*s23^6 + 120*s23^7)) + p2q*p3q*
             (-5*s12^8*s13*(s13^2 + s13*s23 - 2*s23^2) - s13^2*s23^3*
               (s13 + s23)^3*(3*s13^3 - 8*s13^2*s23 - 3*s13*s23^2 + 
                2*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(6*s13^4 - 
                7*s13^3*s23 - 21*s13^2*s23^2 - 6*s13*s23^3 - s23^4) + 
              s12^7*(160*s13^4 + 486*s13^3*s23 + 581*s13^2*s23^2 + 
                485*s13*s23^3 + 200*s23^4) + s12^6*(220*s13^5 + 800*s13^4*
                 s23 + 1211*s13^3*s23^2 + 1107*s13^2*s23^3 + 876*s13*s23^4 + 
                400*s23^5) + s12^5*(-50*s13^6 + 387*s13^5*s23 + 961*s13^4*
                 s23^2 + 603*s13^3*s23^3 + 159*s13^2*s23^4 + 70*s13*s23^5 + 
                20*s23^6) - s12^4*(95*s13^7 + 127*s13^6*s23 - 254*s13^5*
                 s23^2 - 130*s13^4*s23^3 + 666*s13^3*s23^4 + 824*s13^2*
                 s23^5 + 664*s13*s23^6 + 340*s23^7) + s12^3*(10*s13^8 - 
                197*s13^7*s23 - 220*s13^6*s23^2 + 110*s13^5*s23^3 - 
                156*s13^4*s23^4 - 661*s13^3*s23^5 - 641*s13^2*s23^6 - 
                399*s13*s23^7 - 140*s23^8) + s12^2*s23*(8*s13^8 - 
                101*s13^7*s23 - 134*s13^6*s23^2 + 41*s13^5*s23^3 + 
                59*s13^4*s23^4 - 97*s13^3*s23^5 - 176*s13^2*s23^6 - 
                66*s13*s23^7 + 20*s23^8))) + 
          p1q*(-(p2q^5*s13^2*(s13 + s23)*(5*s12^7*(s13 - s23)*s23 + s13^3*
                s23^2*(s13 + s23)^2*(s13^2 + s13*s23 - 4*s23^2) + 2*s12^6*
                (25*s13^3 + 57*s13^2*s23 + 62*s13*s23^2 + 20*s23^3) + s12*
                s13^2*s23^2*(2*s13^4 + 6*s13^3*s23 - 7*s13^2*s23^2 - 
                 20*s13*s23^3 - 9*s23^4) + s12^5*(140*s13^4 + 293*s13^3*s23 + 
                 401*s13^2*s23^2 + 213*s13*s23^3 + 15*s23^4) + s12^4*
                (120*s13^5 + 269*s13^4*s23 + 428*s13^3*s23^2 + 351*s13^2*
                  s23^3 + 32*s13*s23^4 - 20*s23^5) + s12^2*s13*(-10*s13^6 + 
                 5*s13^5*s23 + 23*s13^4*s23^2 + 38*s13^3*s23^3 - 
                 15*s13^2*s23^4 - 39*s13*s23^5 + 6*s23^6) + s12^3*
                (20*s13^6 + 90*s13^5*s23 + 178*s13^4*s23^2 + 213*s13^3*
                  s23^3 + 9*s13^2*s23^4 - 46*s13*s23^5 + 10*s23^6))) + 
            p3q^5*s12^2*(-(s13^3*s23^3*(s13 + s23)^2*(5*s13^2 + 22*s13*s23 - 
                 15*s23^2)) + 2*s12^7*(60*s13^3 + 31*s13^2*s23 + 
                16*s13*s23^2 + 55*s23^3) + s12^6*(300*s13^4 + 118*s13^3*s23 - 
                25*s13^2*s23^2 - 3*s13*s23^3 + 140*s23^4) + 
              s12^5*(180*s13^5 + 76*s13^4*s23 - 401*s13^3*s23^2 - 
                560*s13^2*s23^3 - 343*s13*s23^4 - 240*s23^5) - 
              s12*s13^2*s23^2*(73*s13^5 + 180*s13^4*s23 + 7*s13^3*s23^2 - 
                34*s13^2*s23^3 + 118*s13*s23^4 + 52*s23^5) - s12^2*s13*s23*(
                128*s13^6 + 318*s13^5*s23 + 385*s13^4*s23^2 - 33*s13^3*
                 s23^3 + 352*s13^2*s23^4 + 422*s13*s23^5 + 262*s23^6) - 
              s12^4*(60*s13^6 + 82*s13^5*s23 + 773*s13^4*s23^2 + 
                775*s13^3*s23^3 + 1095*s13^2*s23^4 + 811*s13*s23^5 + 
                460*s23^6) - s12^3*(60*s13^7 + 230*s13^6*s23 + 674*s13^5*
                 s23^2 + 542*s13^4*s23^3 + 595*s13^3*s23^4 + 992*s13^2*
                 s23^5 + 765*s13*s23^6 + 190*s23^7)) + p2q^4*p3q*s13*
             (-5*s12^8*s23*(-2*s13^2 + s13*s23 + s23^2) - s13^3*s23^2*
               (s13 + s23)^3*(2*s13^3 - 3*s13^2*s23 - 8*s13*s23^2 + 
                3*s23^3) + s12*s13^2*s23^2*(s13 + s23)^2*(s13^4 + 
                6*s13^3*s23 + 21*s13^2*s23^2 + 7*s13*s23^3 - 6*s23^4) + 
              s12^7*(200*s13^4 + 485*s13^3*s23 + 581*s13^2*s23^2 + 
                486*s13*s23^3 + 160*s23^4) + s12^6*(400*s13^5 + 876*s13^4*
                 s23 + 1107*s13^3*s23^2 + 1211*s13^2*s23^3 + 800*s13*s23^4 + 
                220*s23^5) + s12^5*(20*s13^6 + 70*s13^5*s23 + 159*s13^4*
                 s23^2 + 603*s13^3*s23^3 + 961*s13^2*s23^4 + 387*s13*s23^5 - 
                50*s23^6) - s12^4*(340*s13^7 + 664*s13^6*s23 + 824*s13^5*
                 s23^2 + 666*s13^4*s23^3 - 130*s13^3*s23^4 - 254*s13^2*
                 s23^5 + 127*s13*s23^6 + 95*s23^7) - s12^3*(140*s13^8 + 
                399*s13^7*s23 + 641*s13^6*s23^2 + 661*s13^5*s23^3 + 
                156*s13^4*s23^4 - 110*s13^3*s23^5 + 220*s13^2*s23^6 + 
                197*s13*s23^7 - 10*s23^8) + s12^2*s13*(20*s13^8 - 
                66*s13^7*s23 - 176*s13^6*s23^2 - 97*s13^5*s23^3 + 
                59*s13^4*s23^4 + 41*s13^3*s23^5 - 134*s13^2*s23^6 - 
                101*s13*s23^7 + 8*s23^8)) + p2q*p3q^4*s12*
             (2*s13^4*s23^4*(s13 + s23)^3 + 4*s12^8*(55*s13^3 + 
                21*s13^2*s23 + 21*s13*s23^2 + 55*s23^3) + 3*s12*s13^2*s23^
                2*(s13 + s23)^2*(13*s13^4 + 17*s13^3*s23 - 38*s13^2*s23^2 + 
                17*s13*s23^3 + 13*s23^4) + s12^7*(230*s13^4 - 304*s13^3*s23 - 
                348*s13^2*s23^2 - 304*s13*s23^3 + 230*s23^4) - 
              s12^6*(500*s13^5 + 1005*s13^4*s23 + 1391*s13^3*s23^2 + 
                1391*s13^2*s23^3 + 1005*s13*s23^4 + 500*s23^5) - 
              s12^5*(680*s13^6 + 1089*s13^5*s23 + 1491*s13^4*s23^2 + 
                284*s13^3*s23^3 + 1491*s13^2*s23^4 + 1089*s13*s23^5 + 
                680*s23^6) - s12^4*(40*s13^7 + 625*s13^6*s23 + 500*s13^5*
                 s23^2 - 1403*s13^4*s23^3 - 1403*s13^3*s23^4 + 500*s13^2*
                 s23^5 + 625*s13*s23^6 + 40*s23^7) + 3*s12^2*s13*s23*(
                58*s13^7 + 65*s13^6*s23 + 40*s13^5*s23^2 + 205*s13^4*s23^3 + 
                205*s13^3*s23^4 + 40*s13^2*s23^5 + 65*s13*s23^6 + 58*s23^7) + 
              s12^3*(130*s13^8 + 21*s13^7*s23 + 188*s13^6*s23^2 + 
                827*s13^5*s23^3 + 2220*s13^4*s23^4 + 827*s13^3*s23^5 + 
                188*s13^2*s23^6 + 21*s13*s23^7 + 130*s23^8)) + 
            p2q^3*p3q^2*(5*s12^9*s13*s23*(-s13 + s23) - s13^4*s23^2*
               (s13 + s23)^3*(s13^3 - 4*s13^2*s23 - 2*s13*s23^2 + 5*s23^3) + 
              s12*s13^3*s23^2*(s13 + s23)^2*(4*s13^4 + 3*s13^3*s23 + 
                s13^2*s23^2 - 6*s13*s23^3 - 10*s23^4) - 2*s12^8*(125*s13^4 + 
                169*s13^3*s23 + 145*s13^2*s23^2 + 186*s13*s23^3 + 55*s23^4) + 
              s12^7*(-160*s13^5 + 253*s13^4*s23 + 686*s13^3*s23^2 + 
                456*s13^2*s23^3 - 347*s13*s23^4 - 260*s23^5) + 
              s12^6*(790*s13^6 + 1939*s13^5*s23 + 3081*s13^4*s23^2 + 
                3672*s13^3*s23^3 + 1597*s13^2*s23^4 + 117*s13*s23^5 - 
                120*s23^6) + s12^5*(840*s13^7 + 1919*s13^6*s23 + 
                3391*s13^5*s23^2 + 4920*s13^4*s23^3 + 4163*s13^3*s23^4 + 
                1105*s13^2*s23^5 - 90*s13*s23^6 + 100*s23^7) + 
              s12^2*s13^2*(10*s13^8 - 107*s13^7*s23 - 119*s13^6*s23^2 + 
                240*s13^5*s23^3 + 344*s13^4*s23^4 - 93*s13^3*s23^5 - 
                311*s13^2*s23^6 - 48*s13*s23^7 + 68*s23^8) + 
              s12^4*(-70*s13^8 + 586*s13^7*s23 + 1649*s13^6*s23^2 + 
                2451*s13^5*s23^3 + 2992*s13^4*s23^4 + 1314*s13^3*s23^5 + 
                s13^2*s23^6 - 29*s13*s23^7 + 70*s23^8) + s12^3*s13*(
                -200*s13^8 - 87*s13^7*s23 + 234*s13^6*s23^2 + 589*s13^5*
                 s23^3 + 1019*s13^4*s23^4 + 538*s13^3*s23^5 - 341*s13^2*
                 s23^6 - 180*s13*s23^7 + 148*s23^8)) + p2q^2*p3q^3*
             (s13^4*(s13 - 2*s23)*s23^3*(s13 + s23)^4 + s12^9*(100*s13^3 + 
                17*s13^2*s23 + 57*s13*s23^2 + 110*s23^3) + s12*s13^3*s23^
                2*(s13 + s23)^2*(s13^4 - 4*s13^3*s23 - 4*s13^2*s23^2 - 
                2*s13*s23^3 - 4*s23^4) - s12^8*(320*s13^4 + 780*s13^3*s23 + 
                623*s13^2*s23^2 + 663*s13*s23^3 + 20*s23^4) - 
              s12^7*(1040*s13^5 + 1378*s13^4*s23 + 1011*s13^3*s23^2 + 
                892*s13^2*s23^3 + 1149*s13*s23^4 + 520*s23^5) + 
              s12^6*(-280*s13^6 - 258*s13^5*s23 + 613*s13^4*s23^2 + 
                2483*s13^3*s23^3 + 351*s13^2*s23^4 - 351*s13*s23^5 - 
                340*s23^6) + s12^2*s13^2*s23*(-46*s13^7 + 17*s13^6*s23 + 
                301*s13^5*s23^2 + 199*s13^4*s23^3 - 241*s13^3*s23^4 - 
                138*s13^2*s23^5 + 163*s13*s23^6 + 99*s23^7) + 
              s12^5*(700*s13^7 + 821*s13^6*s23 + 2052*s13^5*s23^2 + 
                4887*s13^4*s23^3 + 4697*s13^3*s23^4 + 1231*s13^2*s23^5 + 
                120*s13*s23^6 + 250*s23^7) + s12^4*(280*s13^8 + 860*s13^7*
                 s23 + 1697*s13^6*s23^2 + 2662*s13^5*s23^3 + 4098*s13^4*
                 s23^4 + 2140*s13^3*s23^5 + 791*s13^2*s23^6 + 354*s13*s23^7 + 
                200*s23^8) + s12^3*s13*(-80*s13^8 + 316*s13^7*s23 + 
                605*s13^6*s23^2 + 657*s13^5*s23^3 + 1125*s13^4*s23^4 + 
                881*s13^3*s23^5 + 154*s13^2*s23^6 + 262*s13*s23^7 + 
                312*s23^8))) + p1q^2*(p2q^4*s13*(s13 + s23)*
             (-(s13^3*s23^2*(s13 + s23)^2*(s13^3 - 4*s13^2*s23 - 
                 4*s13*s23^2 + 6*s23^3)) + s12^7*(50*s13^3 + 101*s13^2*s23 + 
                126*s13*s23^2 + 55*s23^3) + s12^6*(90*s13^4 + 177*s13^3*s23 + 
                248*s13^2*s23^2 + 206*s13*s23^3 + 35*s23^4) + 
              s12^5*(-20*s13^5 + 88*s13^4*s23 + 132*s13^3*s23^2 + 
                276*s13^2*s23^3 + 87*s13*s23^4 - 75*s23^5) + s12*s13^2*s23^2*(
                s13^5 + 11*s13^4*s23 + 24*s13^3*s23^2 + 5*s13^2*s23^3 - 
                18*s13*s23^4 - 9*s23^5) + s12^4*(-100*s13^6 + 14*s13^5*s23 + 
                11*s13^4*s23^2 + 120*s13^3*s23^3 + 162*s13^2*s23^4 - 
                106*s13*s23^5 - 35*s23^6) - s12^3*(30*s13^7 + 33*s13^6*s23 + 
                3*s13^5*s23^2 - 19*s13^4*s23^3 - 158*s13^3*s23^4 + 
                36*s13^2*s23^5 + 85*s13*s23^6 - 20*s23^7) + s12^2*s13*(
                10*s13^7 - 35*s13^6*s23 - 2*s13^5*s23^2 + 37*s13^4*s23^3 + 
                55*s13^3*s23^4 - 21*s13^2*s23^5 - 54*s13*s23^6 + 28*s23^7)) + 
            p3q^4*s12*(s12 + s23)*(-(s13^3*s23^4*(s13 + s23)^3) - 
              s12*s13^2*s23^2*(s13 + s23)^2*(26*s13^3 + 42*s13^2*s23 - 
                71*s13*s23^2 - 18*s23^3) + s12^7*(60*s13^3 + 41*s13^2*s23 + 
                s13*s23^2 + 50*s23^3) + s12^6*(60*s13^4 - 335*s13^3*s23 - 
                322*s13^2*s23^2 - 337*s13*s23^3 - 240*s23^4) - 
              s12^5*(180*s13^5 + 885*s13^4*s23 + 613*s13^3*s23^2 + 
                564*s13^2*s23^3 + 526*s13*s23^4 + 420*s23^5) - 
              s12^4*(300*s13^6 + 757*s13^5*s23 + 516*s13^4*s23^2 - 
                256*s13^3*s23^3 + 12*s13^2*s23^4 + 77*s13*s23^5 - 80*s23^6) + 
              2*s12^2*s13*s23*(-78*s13^6 - 96*s13^5*s23 + 100*s13^4*s23^2 + 
                176*s13^3*s23^3 + 143*s13^2*s23^4 + 185*s13*s23^5 + 
                100*s23^6) + s12^3*(-120*s13^7 - 404*s13^6*s23 - 
                392*s13^5*s23^2 + 705*s13^4*s23^3 + 693*s13^3*s23^4 + 
                501*s13^2*s23^5 + 311*s13*s23^6 + 210*s23^7)) + 
            p2q*p3q^3*(-(s13^3*(2*s13 - s23)*s23^4*(s13 + s23)^4) + 
              s12^9*(110*s13^3 + 57*s13^2*s23 + 17*s13*s23^2 + 100*s23^3) - 
              s12*s13^2*s23^3*(s13 + s23)^2*(4*s13^4 + 2*s13^3*s23 + 
                4*s13^2*s23^2 + 4*s13*s23^3 - s23^4) - s12^8*(20*s13^4 + 
                663*s13^3*s23 + 623*s13^2*s23^2 + 780*s13*s23^3 + 
                320*s23^4) - s12^7*(520*s13^5 + 1149*s13^4*s23 + 
                892*s13^3*s23^2 + 1011*s13^2*s23^3 + 1378*s13*s23^4 + 
                1040*s23^5) + s12^6*(-340*s13^6 - 351*s13^5*s23 + 
                351*s13^4*s23^2 + 2483*s13^3*s23^3 + 613*s13^2*s23^4 - 
                258*s13*s23^5 - 280*s23^6) + s12^2*s13*s23^2*(99*s13^7 + 
                163*s13^6*s23 - 138*s13^5*s23^2 - 241*s13^4*s23^3 + 
                199*s13^3*s23^4 + 301*s13^2*s23^5 + 17*s13*s23^6 - 
                46*s23^7) + s12^5*(250*s13^7 + 120*s13^6*s23 + 1231*s13^5*
                 s23^2 + 4697*s13^4*s23^3 + 4887*s13^3*s23^4 + 2052*s13^2*
                 s23^5 + 821*s13*s23^6 + 700*s23^7) + s12^3*s23*(312*s13^8 + 
                262*s13^7*s23 + 154*s13^6*s23^2 + 881*s13^5*s23^3 + 
                1125*s13^4*s23^4 + 657*s13^3*s23^5 + 605*s13^2*s23^6 + 
                316*s13*s23^7 - 80*s23^8) + s12^4*(200*s13^8 + 354*s13^7*
                 s23 + 791*s13^6*s23^2 + 2140*s13^5*s23^3 + 4098*s13^4*
                 s23^4 + 2662*s13^3*s23^5 + 1697*s13^2*s23^6 + 860*s13*
                 s23^7 + 280*s23^8)) + p2q^2*p3q^2*(s13^3*s23^3*(s13 + s23)^
                4*(4*s13^2 - 9*s13*s23 + 4*s23^2) + 2*s12^9*(25*s13^3 + 
                8*s13^2*s23 + 8*s13*s23^2 + 25*s23^3) + s12*s13^2*s23^2*
               (s13 + s23)^3*(4*s13^4 - 9*s13^3*s23 + 3*s13^2*s23^2 - 
                9*s13*s23^3 + 4*s23^4) - 5*s12^8*(36*s13^4 + 115*s13^3*s23 + 
                102*s13^2*s23^2 + 115*s13*s23^3 + 36*s23^4) - 
              2*s12^7*(205*s13^5 + 127*s13^4*s23 - 240*s13^3*s23^2 - 
                240*s13^2*s23^3 + 127*s13*s23^4 + 205*s23^5) - 
              2*s12^2*s13*s23*(s13 + s23)^2*(33*s13^6 - 120*s13^5*s23 + 
                26*s13^4*s23^2 + 74*s13^3*s23^3 + 26*s13^2*s23^4 - 
                120*s13*s23^5 + 33*s23^6) + s12^6*(260*s13^6 + 1247*s13^5*
                 s23 + 3141*s13^4*s23^2 + 5188*s13^3*s23^3 + 3141*s13^2*
                 s23^4 + 1247*s13*s23^5 + 260*s23^6) + s12^5*(690*s13^7 + 
                1369*s13^6*s23 + 3503*s13^5*s23^2 + 7060*s13^4*s23^3 + 
                7060*s13^3*s23^4 + 3503*s13^2*s23^5 + 1369*s13*s23^6 + 
                690*s23^7) + s12^4*(160*s13^8 + 886*s13^7*s23 + 1871*s13^6*
                 s23^2 + 3247*s13^5*s23^3 + 4804*s13^4*s23^4 + 3247*s13^3*
                 s23^5 + 1871*s13^2*s23^6 + 886*s13*s23^7 + 160*s23^8) + 
              s12^3*(-90*s13^9 + 361*s13^8*s23 + 607*s13^7*s23^2 + 
                555*s13^6*s23^3 + 1073*s13^5*s23^4 + 1073*s13^4*s23^5 + 
                555*s13^3*s23^6 + 607*s13^2*s23^7 + 361*s13*s23^8 - 
                90*s23^9)) + p2q^3*p3q*(-(s13^3*s23^2*(s13 + s23)^3*
                (s13^4 - 8*s13^3*s23 + 2*s13^2*s23^2 + 12*s13*s23^3 - 
                 3*s23^4)) - s12^8*(100*s13^4 + 167*s13^3*s23 + 133*s13^2*
                 s23^2 + 146*s13*s23^3 + 50*s23^4) + s12^7*(-20*s13^5 + 
                321*s13^4*s23 + 868*s13^3*s23^2 + 863*s13^2*s23^3 + 
                266*s13*s23^4 - 30*s23^5) + s12*s13^2*s23^2*(s13 + s23)^2*(
                5*s13^5 + 5*s13^4*s23 - 4*s13^3*s23^2 - 20*s13^2*s23^3 - 
                11*s13*s23^4 + 3*s23^5) + 2*s12^6*(195*s13^6 + 564*s13^5*
                 s23 + 1176*s13^4*s23^2 + 1643*s13^3*s23^3 + 1122*s13^2*
                 s23^4 + 441*s13*s23^5 + 100*s23^6) + s12^5*(300*s13^7 + 
                813*s13^6*s23 + 2025*s13^5*s23^2 + 3870*s13^4*s23^3 + 
                3973*s13^3*s23^4 + 1987*s13^2*s23^5 + 692*s13*s23^6 + 
                280*s23^7) + s12^4*(-140*s13^8 + 270*s13^7*s23 + 
                972*s13^6*s23^2 + 1863*s13^5*s23^3 + 2774*s13^4*s23^4 + 
                1930*s13^3*s23^5 + 959*s13^2*s23^6 + 512*s13*s23^7 + 
                90*s23^8) + s12^2*s13*(10*s13^9 - 91*s13^8*s23 - 
                8*s13^7*s23^2 + 266*s13^6*s23^3 + 194*s13^5*s23^4 - 
                103*s13^4*s23^5 - 120*s13^3*s23^6 + 166*s13^2*s23^7 + 
                142*s13*s23^8 - 20*s23^9) + s12^3*(-120*s13^9 + 6*s13^8*s23 + 
                284*s13^7*s23^2 + 492*s13^6*s23^3 + 962*s13^5*s23^4 + 
                853*s13^4*s23^5 + 304*s13^3*s23^6 + 359*s13^2*s23^7 + 
                270*s13*s23^8 - 10*s23^9))) + 
          p1q^3*(p3q^3*(s12 + s23)*(5*s12^8*s13*(s13 - s23)*s23 + 
              s13^3*s23^4*(s13 + s23)^4 + s12*s13^2*s23^3*(s13 + s23)^2*(
                2*s13^3 + 2*s13^2*s23 + 3*s13*s23^2 + 2*s23^3) - 
              s12^7*(60*s13^4 + 236*s13^3*s23 + 187*s13^2*s23^2 + 
                151*s13*s23^3 + 150*s23^4) + s12^6*(-180*s13^5 - 
                372*s13^4*s23 + 171*s13^3*s23^2 + 367*s13^2*s23^3 + 
                324*s13*s23^4 + 60*s23^5) + s12^2*s13*s23^2*(-37*s13^6 - 
                64*s13^5*s23 + 61*s13^4*s23^2 + 160*s13^3*s23^3 + 
                19*s13^2*s23^4 - 99*s13*s23^5 - 46*s23^6) + 
              2*s12^5*(-90*s13^6 - 62*s13^5*s23 + 341*s13^4*s23^2 + 
                696*s13^3*s23^3 + 622*s13^2*s23^4 + 474*s13*s23^5 + 
                240*s23^6) + s12^3*s23*(-108*s13^7 + 33*s13^6*s23 + 
                435*s13^5*s23^2 + 433*s13^4*s23^3 + 201*s13^3*s23^4 + 
                167*s13^2*s23^5 + 15*s13*s23^6 - 90*s23^7) + 
              s12^4*(-60*s13^7 - 101*s13^6*s23 + 399*s13^5*s23^2 + 
                1333*s13^4*s23^3 + 1197*s13^3*s23^4 + 913*s13^2*s23^5 + 
                539*s13*s23^6 + 180*s23^7)) + p2q^3*(s13 + s23)*
             (2*s13^3*s23^3*(s13 + s23)^3*(2*s13^2 - 5*s13*s23 + 2*s23^2) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(3*s13^4 - 2*s13^3*s23 - 
                16*s13^2*s23^2 - 2*s13*s23^3 + 3*s23^4) + s12^7*(50*s13^4 + 
                161*s13^3*s23 + 242*s13^2*s23^2 + 161*s13*s23^3 + 50*s23^4) + 
              s12^6*(140*s13^5 + 331*s13^4*s23 + 613*s13^3*s23^2 + 
                613*s13^2*s23^3 + 331*s13*s23^4 + 140*s23^5) + 
              s12^5*(120*s13^6 + 321*s13^5*s23 + 630*s13^4*s23^2 + 
                958*s13^3*s23^3 + 630*s13^2*s23^4 + 321*s13*s23^5 + 
                120*s23^6) + s12^2*s13*s23*(-30*s13^7 + 53*s13^6*s23 + 
                20*s13^5*s23^2 - 35*s13^4*s23^3 - 35*s13^3*s23^4 + 
                20*s13^2*s23^5 + 53*s13*s23^6 - 30*s23^7) + s12^4*(20*s13^7 + 
                263*s13^6*s23 + 322*s13^5*s23^2 + 639*s13^4*s23^3 + 
                639*s13^3*s23^4 + 322*s13^2*s23^5 + 263*s13*s23^6 + 
                20*s23^7) + s12^3*(-10*s13^8 + 82*s13^7*s23 + 113*s13^6*
                 s23^2 + 135*s13^5*s23^3 + 308*s13^4*s23^4 + 135*s13^3*
                 s23^5 + 113*s13^2*s23^6 + 82*s13*s23^7 - 10*s23^8)) + 
            p2q*p3q^2*(5*s12^9*s13*(s13 - s23)*s23 - s13^2*s23^4*(s13 + s23)^
                3*(5*s13^3 - 2*s13^2*s23 - 4*s13*s23^2 + s23^3) - 
              s12*s13^2*s23^3*(s13 + s23)^2*(10*s13^4 + 6*s13^3*s23 - 
                s13^2*s23^2 - 3*s13*s23^3 - 4*s23^4) - 2*s12^8*(55*s13^4 + 
                186*s13^3*s23 + 145*s13^2*s23^2 + 169*s13*s23^3 + 
                125*s23^4) + s12^7*(-260*s13^5 - 347*s13^4*s23 + 
                456*s13^3*s23^2 + 686*s13^2*s23^3 + 253*s13*s23^4 - 
                160*s23^5) + s12^6*(-120*s13^6 + 117*s13^5*s23 + 
                1597*s13^4*s23^2 + 3672*s13^3*s23^3 + 3081*s13^2*s23^4 + 
                1939*s13*s23^5 + 790*s23^6) + s12^5*(100*s13^7 - 
                90*s13^6*s23 + 1105*s13^5*s23^2 + 4163*s13^4*s23^3 + 
                4920*s13^3*s23^4 + 3391*s13^2*s23^5 + 1919*s13*s23^6 + 
                840*s23^7) + s12^3*s23*(148*s13^8 - 180*s13^7*s23 - 
                341*s13^6*s23^2 + 538*s13^5*s23^3 + 1019*s13^4*s23^4 + 
                589*s13^3*s23^5 + 234*s13^2*s23^6 - 87*s13*s23^7 - 
                200*s23^8) + s12^4*(70*s13^8 - 29*s13^7*s23 + s13^6*s23^2 + 
                1314*s13^5*s23^3 + 2992*s13^4*s23^4 + 2451*s13^3*s23^5 + 
                1649*s13^2*s23^6 + 586*s13*s23^7 - 70*s23^8) + 
              s12^2*s23^2*(68*s13^8 - 48*s13^7*s23 - 311*s13^6*s23^2 - 
                93*s13^5*s23^3 + 344*s13^4*s23^4 + 240*s13^3*s23^5 - 
                119*s13^2*s23^6 - 107*s13*s23^7 + 10*s23^8)) + 
            p2q^2*p3q*(s13^2*s23^3*(s13 + s23)^3*(3*s13^4 - 12*s13^3*s23 - 
                2*s13^2*s23^2 + 8*s13*s23^3 - s23^4) - s12^8*(50*s13^4 + 
                146*s13^3*s23 + 133*s13^2*s23^2 + 167*s13*s23^3 + 
                100*s23^4) + s12^7*(-30*s13^5 + 266*s13^4*s23 + 863*s13^3*
                 s23^2 + 868*s13^2*s23^3 + 321*s13*s23^4 - 20*s23^5) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(3*s13^5 - 11*s13^4*s23 - 
                20*s13^3*s23^2 - 4*s13^2*s23^3 + 5*s13*s23^4 + 5*s23^5) + 
              2*s12^6*(100*s13^6 + 441*s13^5*s23 + 1122*s13^4*s23^2 + 
                1643*s13^3*s23^3 + 1176*s13^2*s23^4 + 564*s13*s23^5 + 
                195*s23^6) + s12^5*(280*s13^7 + 692*s13^6*s23 + 1987*s13^5*
                 s23^2 + 3973*s13^4*s23^3 + 3870*s13^3*s23^4 + 2025*s13^2*
                 s23^5 + 813*s13*s23^6 + 300*s23^7) + s12^4*(90*s13^8 + 
                512*s13^7*s23 + 959*s13^6*s23^2 + 1930*s13^5*s23^3 + 
                2774*s13^4*s23^4 + 1863*s13^3*s23^5 + 972*s13^2*s23^6 + 
                270*s13*s23^7 - 140*s23^8) + s12^3*(-10*s13^9 + 270*s13^8*
                 s23 + 359*s13^7*s23^2 + 304*s13^6*s23^3 + 853*s13^5*s23^4 + 
                962*s13^4*s23^5 + 492*s13^3*s23^6 + 284*s13^2*s23^7 + 
                6*s13*s23^8 - 120*s23^9) + s12^2*s23*(-20*s13^9 + 
                142*s13^8*s23 + 166*s13^7*s23^2 - 120*s13^6*s23^3 - 
                103*s13^5*s23^4 + 194*s13^4*s23^5 + 266*s13^3*s23^6 - 
                8*s13^2*s23^7 - 91*s13*s23^8 + 10*s23^9)))))/
        (27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)*
         s23^2*(s12 + s23)*(s13 + s23)*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - 
       (-(p1q^6*s23^2*(s12 + s23)^2*(s13 + s23)^2*
           (61*s13^4*s23^3*(s13 + s23) + 6*s12^6*(8*s13^2 + 5*s13*s23 + 
              3*s23^2) + s12*s13^3*s23^2*(193*s13^2 + 336*s13*s23 + 
              82*s23^2) + s12^2*s13^2*s23*(210*s13^3 + 575*s13^2*s23 + 
              221*s13*s23^2 - 33*s23^3) + 6*s12^5*(24*s13^3 + 24*s13^2*s23 + 
              17*s13*s23^2 + 6*s23^3) + 3*s12^4*(48*s13^4 + 136*s13^3*s23 + 
              25*s13^2*s23^2 + 32*s13*s23^3 + 6*s23^4) + 
            s12^3*s13*(48*s13^4 + 504*s13^3*s23 + 373*s13^2*s23^2 - 
              54*s13*s23^3 + 24*s23^4))) + p1q^5*s23*(s12 + s23)*(s13 + s23)*
          (p3q*(61*s13^3*s23^4*(s13 + s23)^2*(s13^2 - 2*s13*s23 - s23^2) + 
             6*s12^8*(16*s13^3 + 33*s13^2*s23 + 21*s13*s23^2 + 12*s23^3) + 
             s12^7*(240*s13^4 + 570*s13^3*s23 + 519*s13^2*s23^2 + 451*s13*
                s23^3 + 180*s23^4) + s12*s13^2*s23^3*(254*s13^5 + 147*s13^4*
                s23 - 687*s13^3*s23^2 - 820*s13^2*s23^3 - 322*s13*s23^4 - 82*
                s23^5) + s12^6*(240*s13^5 + 960*s13^4*s23 + 470*s13^3*s23^2 - 
               231*s13^2*s23^3 + 532*s13*s23^4 + 156*s23^5) + 
             s12^2*s13*s23^2*(403*s13^6 + 411*s13^5*s23 - 1090*s13^4*s23^2 - 
               1507*s13^3*s23^3 - 241*s13^2*s23^4 + 218*s13*s23^5 - 11*
                s23^6) + s12^5*(144*s13^6 + 852*s13^5*s23 + 629*s13^4*s23^2 - 
               1219*s13^3*s23^3 - 1329*s13^2*s23^4 + 29*s13*s23^5 + 60*
                s23^6) + 2*s12^3*s13*s23*(129*s13^6 + 316*s13^5*s23 - 264*
                s13^4*s23^2 - 992*s13^3*s23^3 - 547*s13^2*s23^4 + 148*s13*
                s23^5 + 94*s23^6) + s12^4*(48*s13^7 + 522*s13^6*s23 + 661*
                s13^5*s23^2 - 1094*s13^4*s23^3 - 2259*s13^3*s23^4 - 841*s13^2*
                s23^5 + 21*s13*s23^6 + 12*s23^7)) + 
           p2q*(61*s13^3*s23^4*(s13 + s23)^2*(4*s13^2 - s13*s23 - s23^2) + 
             6*s12^8*(8*s13^3 + 12*s13^2*s23 + 7*s13*s23^2 + 3*s23^3) + 
             s12^7*(144*s13^4 + 216*s13^3*s23 + 131*s13^2*s23^2 + 147*s13*
                s23^3 + 36*s23^4) + s12*s13^2*s23^3*(783*s13^5 + 1796*s13^4*
                s23 + 923*s13^3*s23^2 - 248*s13^2*s23^3 - 240*s13*s23^4 - 82*
                s23^5) + 2*s12^6*(120*s13^5 + 324*s13^4*s23 - 93*s13^3*
                s23^2 - 202*s13^2*s23^3 + 119*s13*s23^4 + 24*s23^5) + 
             s12^2*s13*s23^2*(1021*s13^6 + 2731*s13^5*s23 + 1366*s13^4*
                s23^2 - 802*s13^3*s23^3 - 262*s13^2*s23^4 + 185*s13*s23^5 - 
               11*s23^6) + s12^5*(240*s13^6 + 1092*s13^5*s23 + 27*s13^4*
                s23^2 - 1839*s13^3*s23^3 - 929*s13^2*s23^4 + 41*s13*s23^5 + 
               60*s23^6) + s12^3*s13*s23*(564*s13^6 + 2278*s13^5*s23 + 1175*
                s13^4*s23^2 - 2323*s13^3*s23^3 - 1646*s13^2*s23^4 + 298*s13*
                s23^5 + 212*s23^6) + s12^4*(96*s13^7 + 1152*s13^6*s23 + 1439*
                s13^5*s23^2 - 1999*s13^4*s23^3 - 2978*s13^3*s23^4 - 495*s13^2*
                s23^5 + 131*s13*s23^6 + 30*s23^7))) - 
         (s12 + s13)*(p3q^6*s12^3*(s12 + s23)*(6*s12^7*(3*s13^2 + 2*s13*s23 + 
               3*s23^2) - s12^5*(s13 + s23)^2*(42*s13^2 + 235*s13*s23 + 42*
                s23^2) + 10*s13^3*s23^3*(s13^3 - 47*s13^2*s23 - 47*s13*
                s23^2 + s23^3) + s12^6*(6*s13^3 - 26*s13^2*s23 - 26*s13*
                s23^2 + 6*s23^3) - s12*s13^2*s23^2*(s13^4 + 1200*s13^3*s23 + 
               2350*s13^2*s23^2 + 1200*s13*s23^3 + s23^4) - 
             s12^3*s13*s23*(669*s13^4 + 2339*s13^3*s23 + 3268*s13^2*s23^2 + 
               2339*s13*s23^3 + 669*s23^4) - s12^2*s13*s23*(21*s13^5 + 1299*
                s13^4*s23 + 3382*s13^3*s23^2 + 3382*s13^2*s23^3 + 1299*s13*
                s23^4 + 21*s23^5) - s12^4*(30*s13^5 + 929*s13^4*s23 + 1491*
                s13^3*s23^2 + 1491*s13^2*s23^3 + 929*s13*s23^4 + 30*s23^5)) + 
           p2q^6*s13^2*(s13 + s23)^2*(61*s13^4*s23^4*(s13 + s23) + 
             6*s12^7*(3*s13^2 + 5*s13*s23 + 8*s23^2) + s12*s13^3*s23^3*
              (82*s13^2 + 397*s13*s23 + 254*s23^2) + 6*s12^6*(9*s13^3 + 22*
                s13^2*s23 + 32*s13*s23^2 + 24*s23^3) + s12^2*s13^2*s23^2*
              (-33*s13^3 + 303*s13^2*s23 + 911*s13*s23^2 + 403*s23^3) + 
             3*s12^5*(18*s13^4 + 66*s13^3*s23 + 73*s13^2*s23^2 + 184*s13*
                s23^3 + 48*s23^4) + s12^3*s13*s23*(24*s13^4 - 87*s13^3*s23 + 
               594*s13^2*s23^2 + 1079*s13*s23^3 + 258*s23^4) + 
             s12^4*(18*s13^5 + 120*s13^4*s23 + 21*s13^3*s23^2 + 781*s13^2*
                s23^3 + 648*s13*s23^4 + 48*s23^5)) + p2q*p3q^5*s12^2*
            (-(s13^3*s23^4*(s13 + s23)^2*(109*s13^2 - 523*s13*s23 - 
                4*s23^2)) + 18*s12^9*(2*s13^2 + s13*s23 + s23^2) - 
             2*s12^8*(6*s13^3 + 26*s13^2*s23 + 107*s13*s23^2 + 45*s23^3) - 
             2*s12^7*(6*s13^4 + 168*s13^3*s23 + 505*s13^2*s23^2 + 553*s13*
                s23^3 + 174*s23^4) + s12^6*(156*s13^5 - 315*s13^4*s23 - 187*
                s13^3*s23^2 - 2169*s13^2*s23^3 - 2777*s13*s23^4 - 324*
                s23^5) + s12*s13^2*s23^3*(-255*s13^5 + 2014*s13^4*s23 + 4415*
                s13^3*s23^2 + 3741*s13^2*s23^3 + 1624*s13*s23^4 + 29*s23^5) + 
             s12^5*(120*s13^6 + 2103*s13^5*s23 + 2340*s13^4*s23^2 + 336*s13^3*
                s23^3 - 2549*s13^2*s23^4 - 2330*s13*s23^5 - 54*s23^6) + 
             s12^4*s23*(2195*s13^6 + 7214*s13^5*s23 + 7594*s13^4*s23^2 + 2081*
                s13^3*s23^3 - 316*s13^2*s23^4 + 460*s13*s23^5 + 30*s23^6) + 
             s12^2*s13*s23^2*(-113*s13^6 + 4756*s13^5*s23 + 9803*s13^4*
                s23^2 + 8170*s13^3*s23^3 + 4978*s13^2*s23^4 + 1945*s13*
                s23^5 + 35*s23^6) + s12^3*s13*s23*(43*s13^6 + 5052*s13^5*
                s23 + 11646*s13^4*s23^2 + 9981*s13^3*s23^3 + 5180*s13^2*
                s23^4 + 2902*s13*s23^5 + 922*s23^6)) - p2q^5*p3q*s13*
            (s13 + s23)*(-61*s13^4*s23^3*(s13 + s23)^2*(s13^2 + 2*s13*s23 - 
               s23^2) + 6*s12^8*(12*s13^3 + 21*s13^2*s23 + 33*s13*s23^2 + 16*
                s23^3) + s12^7*(180*s13^4 + 451*s13^3*s23 + 519*s13^2*s23^2 + 
               570*s13*s23^3 + 240*s23^4) - s12*s13^3*s23^2*(82*s13^5 + 322*
                s13^4*s23 + 820*s13^3*s23^2 + 687*s13^2*s23^3 - 147*s13*
                s23^4 - 254*s23^5) + s12^6*(156*s13^5 + 532*s13^4*s23 - 231*
                s13^3*s23^2 + 470*s13^2*s23^3 + 960*s13*s23^4 + 240*s23^5) + 
             2*s12^3*s13*s23*(94*s13^6 + 148*s13^5*s23 - 547*s13^4*s23^2 - 
               992*s13^3*s23^3 - 264*s13^2*s23^4 + 316*s13*s23^5 + 129*
                s23^6) + s12^5*(60*s13^6 + 29*s13^5*s23 - 1329*s13^4*s23^2 - 
               1219*s13^3*s23^3 + 629*s13^2*s23^4 + 852*s13*s23^5 + 144*
                s23^6) + s12^2*s13^2*s23*(-11*s13^6 + 218*s13^5*s23 - 241*
                s13^4*s23^2 - 1507*s13^3*s23^3 - 1090*s13^2*s23^4 + 411*s13*
                s23^5 + 403*s23^6) + s12^4*(12*s13^7 + 21*s13^6*s23 - 841*
                s13^5*s23^2 - 2259*s13^4*s23^3 - 1094*s13^3*s23^4 + 661*s13^2*
                s23^5 + 522*s13*s23^6 + 48*s23^7)) + p2q^2*p3q^4*s12*
            (s13^4*(160*s13 - 57*s23)*s23^4*(s13 + s23)^3 + 
             6*s12^10*s13*(3*s13 + s23) + s12*s13^3*s23^3*(s13 + s23)^2*
              (488*s13^3 - 646*s13^2*s23 + 944*s13*s23^2 - 307*s23^3) - 
             2*s12^9*(45*s13^3 + 61*s13^2*s23 + 139*s13*s23^2 + 81*s23^3) - 
             s12^8*(78*s13^4 + 188*s13^3*s23 + 177*s13^2*s23^2 + 559*s13*
                s23^3 + 360*s23^4) + s12^7*(6*s13^5 + 410*s13^4*s23 + 3059*
                s13^3*s23^2 + 2213*s13^2*s23^3 - 598*s13*s23^4 - 108*s23^5) + 
             s12^2*s13^2*s23^2*(346*s13^6 - 2473*s13^5*s23 - 3287*s13^4*
                s23^2 + 2256*s13^3*s23^3 + 4999*s13^2*s23^4 + 1861*s13*
                s23^5 - 414*s23^6) + s12^6*(-204*s13^6 + 2346*s13^5*s23 + 
               5245*s13^4*s23^2 + 8571*s13^3*s23^3 + 6856*s13^2*s23^4 + 1496*
                s13*s23^5 + 216*s23^6) + s12^4*s13*s23*(-2504*s13^6 - 4386*
                s13^5*s23 + 3219*s13^4*s23^2 + 14749*s13^3*s23^3 + 16596*
                s13^2*s23^4 + 8993*s13*s23^5 + 1889*s23^6) + 
             s12^3*s13*s23*(-12*s13^7 - 4724*s13^6*s23 - 6712*s13^5*s23^2 + 
               3018*s13^4*s23^3 + 11657*s13^3*s23^4 + 9650*s13^2*s23^5 + 3093*
                s13*s23^6 - 134*s23^7) + s12^5*(-180*s13^7 - 616*s13^6*s23 + 
               3571*s13^5*s23^2 + 12111*s13^4*s23^3 + 14828*s13^3*s23^4 + 
               10092*s13^2*s23^5 + 3842*s13*s23^6 + 126*s23^7)) - 
           p2q^3*p3q^3*(61*s13^5*s23^4*(s13 + s23)^4 - s12^9*s13*s23*
              (39*s13^2 + 529*s13*s23 + 418*s23^2) + 6*s12^10*
              (12*s13^3 + 13*s13^2*s23 + 13*s13*s23^2 + 8*s23^3) + 
             s12*s13^4*s23^3*(s13 + s23)^2*(303*s13^3 + 223*s13^2*s23 + 227*
                s13*s23^2 + 368*s23^3) - s12^8*(72*s13^5 + 408*s13^4*s23 + 
               1951*s13^3*s23^2 + 2792*s13^2*s23^3 + 1393*s13*s23^4 + 288*
                s23^5) + s12^7*(24*s13^6 - 443*s13^5*s23 + 1213*s13^4*s23^2 - 
               1553*s13^3*s23^3 - 5509*s13^2*s23^4 - 2804*s13*s23^5 - 384*
                s23^6) + s12^2*s13^3*s23^2*(293*s13^6 - 150*s13^5*s23 + 223*
                s13^4*s23^2 + 2358*s13^3*s23^3 + 3078*s13^2*s23^4 + 2421*s13*
                s23^5 + 1035*s23^6) + s12^5*s13*(-120*s13^7 + 1381*s13^6*
                s23 + 8149*s13^5*s23^2 + 15137*s13^4*s23^3 + 10596*s13^3*
                s23^4 + 98*s13^2*s23^5 - 2811*s13*s23^6 - 730*s23^7) - 
             s12^6*(96*s13^7 - 2480*s13^6*s23 - 7201*s13^5*s23^2 - 6468*s13^4*
                s23^3 + 763*s13^3*s23^4 + 5310*s13^2*s23^5 + 3064*s13*s23^6 + 
               144*s23^7) + s12^4*s13*s23*(-1230*s13^7 + 587*s13^6*s23 + 9408*
                s13^5*s23^2 + 14630*s13^4*s23^3 + 8977*s13^3*s23^4 + 1991*
                s13^2*s23^5 + 360*s13*s23^6 + 427*s23^7) + s12^3*s13^2*s23*
              (21*s13^7 - 2025*s13^6*s23 - 1067*s13^5*s23^2 + 6022*s13^4*
                s23^3 + 8521*s13^3*s23^4 + 4711*s13^2*s23^5 + 2418*s13*
                s23^6 + 1185*s23^7)) + p2q^4*p3q^2*
            (61*s13^5*s23^3*(s13 + s23)^3*(s13^2 - 2*s23^2) + 
             s12*s13^4*s23^2*(s13 + s23)^2*(82*s13^4 - 145*s13^3*s23 - 200*
                s13^2*s23^2 - 477*s13*s23^3 - 565*s23^4) + 
             12*s12^9*(9*s13^4 + 17*s13^3*s23 + 23*s13^2*s23^2 + 18*s13*
                s23^3 + 4*s23^4) + s12^8*(180*s13^5 + 456*s13^4*s23 + 191*
                s13^3*s23^2 + 161*s13^2*s23^3 + 366*s13*s23^4 + 144*s23^5) + 
             2*s12^7*(51*s13^6 + 101*s13^5*s23 - 973*s13^4*s23^2 - 1569*s13^3*
                s23^3 - 462*s13^2*s23^4 + 168*s13*s23^5 + 72*s23^6) + 
             s12^2*s13^3*s23*(11*s13^7 - 467*s13^6*s23 - 552*s13^5*s23^2 - 
               398*s13^4*s23^3 - 2124*s13^3*s23^4 - 4110*s13^2*s23^5 - 3437*
                s13*s23^6 - 1127*s23^7) + s12^5*s13*(6*s13^7 + 771*s13^6*
                s23 + 1942*s13^5*s23^2 - 2851*s13^4*s23^3 - 10509*s13^3*
                s23^4 - 9253*s13^2*s23^5 - 3120*s13*s23^6 - 360*s23^7) + 
             s12^6*(66*s13^7 - 576*s13^6*s23 - 2401*s13^5*s23^2 - 6163*s13^4*
                s23^3 - 7244*s13^3*s23^4 - 2804*s13^2*s23^5 + 132*s13*s23^6 + 
               48*s23^7) - s12^3*s13^2*s23*(233*s13^7 - 1234*s13^6*s23 - 3639*
                s13^5*s23^2 - 167*s13^4*s23^3 + 6390*s13^3*s23^4 + 7198*s13^2*
                s23^5 + 3813*s13*s23^6 + 1000*s23^7) - s12^4*s13*
              (30*s13^8 - 1053*s13^7*s23 - 4565*s13^6*s23^2 - 4208*s13^5*
                s23^3 + 5053*s13^4*s23^4 + 11336*s13^3*s23^5 + 7400*s13^2*
                s23^6 + 2125*s13*s23^7 + 306*s23^8))) + 
         p1q*(-(p3q^5*s12^2*(s12 + s23)*(s13^4*s23^3*(s13 + s23)^2*(4*s13^2 + 
                523*s13*s23 - 109*s23^2) + 18*s12^9*(s13^2 + s13*s23 + 
                2*s23^2) - 2*s12^8*(45*s13^3 + 107*s13^2*s23 + 26*s13*s23^2 + 
                6*s23^3) - 2*s12^7*(174*s13^4 + 553*s13^3*s23 + 505*s13^2*
                 s23^2 + 168*s13*s23^3 + 6*s23^4) + s12*s13^3*s23^2*(
                29*s13^5 + 1624*s13^4*s23 + 3741*s13^3*s23^2 + 4415*s13^2*
                 s23^3 + 2014*s13*s23^4 - 255*s23^5) - s12^6*(324*s13^5 + 
                2777*s13^4*s23 + 2169*s13^3*s23^2 + 187*s13^2*s23^3 + 
                315*s13*s23^4 - 156*s23^5) + s12^2*s13^2*s23*(35*s13^6 + 
                1945*s13^5*s23 + 4978*s13^4*s23^2 + 8170*s13^3*s23^3 + 
                9803*s13^2*s23^4 + 4756*s13*s23^5 - 113*s23^6) + 
              s12^3*s13*s23*(922*s13^6 + 2902*s13^5*s23 + 5180*s13^4*s23^2 + 
                9981*s13^3*s23^3 + 11646*s13^2*s23^4 + 5052*s13*s23^5 + 
                43*s23^6) + s12^5*(-54*s13^6 - 2330*s13^5*s23 - 2549*s13^4*
                 s23^2 + 336*s13^3*s23^3 + 2340*s13^2*s23^4 + 2103*s13*
                 s23^5 + 120*s23^6) + s12^4*s13*(30*s13^6 + 460*s13^5*s23 - 
                316*s13^4*s23^2 + 2081*s13^3*s23^3 + 7594*s13^2*s23^4 + 
                7214*s13*s23^5 + 2195*s23^6))) + p2q^5*s13*(s12 + s13)*
            (s13 + s23)*(-61*s13^4*s23^3*(s13 + s23)^2*(s13^2 + s13*s23 - 4*
                s23^2) + 6*s12^8*(3*s13^3 + 7*s13^2*s23 + 12*s13*s23^2 + 8*
                s23^3) + s12^7*(36*s13^4 + 147*s13^3*s23 + 131*s13^2*s23^2 + 
               216*s13*s23^3 + 144*s23^4) + 2*s12^6*(24*s13^5 + 119*s13^4*
                s23 - 202*s13^3*s23^2 - 93*s13^2*s23^3 + 324*s13*s23^4 + 120*
                s23^5) + s12*s13^3*s23^2*(-82*s13^5 - 240*s13^4*s23 - 248*
                s13^3*s23^2 + 923*s13^2*s23^3 + 1796*s13*s23^4 + 783*s23^5) + 
             s12^5*(60*s13^6 + 41*s13^5*s23 - 929*s13^4*s23^2 - 1839*s13^3*
                s23^3 + 27*s13^2*s23^4 + 1092*s13*s23^5 + 240*s23^6) + 
             s12^3*s13*s23*(212*s13^6 + 298*s13^5*s23 - 1646*s13^4*s23^2 - 
               2323*s13^3*s23^3 + 1175*s13^2*s23^4 + 2278*s13*s23^5 + 564*
                s23^6) + s12^2*s13^2*s23*(-11*s13^6 + 185*s13^5*s23 - 262*
                s13^4*s23^2 - 802*s13^3*s23^3 + 1366*s13^2*s23^4 + 2731*s13*
                s23^5 + 1021*s23^6) + s12^4*(30*s13^7 + 131*s13^6*s23 - 495*
                s13^5*s23^2 - 2978*s13^4*s23^3 - 1999*s13^3*s23^4 + 1439*
                s13^2*s23^5 + 1152*s13*s23^6 + 96*s23^7)) - 
           p2q*p3q^4*s12*(12*s12^11*(3*s13^2 + 2*s13*s23 + 3*s23^2) + 
             s13^4*s23^4*(s13 + s23)^3*(99*s13^2 - 236*s13*s23 + 99*s23^2) - 
             2*s12^10*(21*s13^3 + 113*s13^2*s23 + 113*s13*s23^2 + 21*s23^3) + 
             s12^9*(198*s13^4 - 181*s13^3*s23 - 710*s13^2*s23^2 - 181*s13*
                s23^3 + 198*s23^4) + s12*s13^3*s23^3*(s13 + s23)^2*
              (232*s13^4 - 1605*s13^3*s23 + 1180*s13^2*s23^2 - 1605*s13*
                s23^3 + 232*s23^4) + 2*s12^8*(558*s13^5 + 662*s13^4*s23 + 
               2341*s13^3*s23^2 + 2341*s13^2*s23^3 + 662*s13*s23^4 + 558*
                s23^5) + s12^7*(1200*s13^6 + 7862*s13^5*s23 + 15281*s13^4*
                s23^2 + 17958*s13^3*s23^3 + 15281*s13^2*s23^4 + 7862*s13*
                s23^5 + 1200*s23^6) + s12^2*s13^2*s23^2*(107*s13^7 - 4189*
                s13^6*s23 - 5024*s13^5*s23^2 + 882*s13^4*s23^3 + 882*s13^3*
                s23^4 - 5024*s13^2*s23^5 - 4189*s13*s23^6 + 107*s23^7) + 
             s12^6*(270*s13^7 + 10334*s13^6*s23 + 24983*s13^5*s23^2 + 35181*
                s13^4*s23^3 + 35181*s13^3*s23^4 + 24983*s13^2*s23^5 + 10334*
                s13*s23^6 + 270*s23^7) - 2*s12^4*s13*s23*(1020*s13^7 + s13^6*
                s23 - 8340*s13^5*s23^2 - 16126*s13^4*s23^3 - 16126*s13^3*
                s23^4 - 8340*s13^2*s23^5 + s13*s23^6 + 1020*s23^7) + 
             s12^5*(-90*s13^8 + 1723*s13^7*s23 + 19824*s13^6*s23^2 + 38926*
                s13^5*s23^3 + 42934*s13^4*s23^4 + 38926*s13^3*s23^5 + 19824*
                s13^2*s23^6 + 1723*s13*s23^7 - 90*s23^8) - 3*s12^3*s13*s23*
              (12*s13^8 + 1629*s13^7*s23 + 1621*s13^6*s23^2 - 2320*s13^5*
                s23^3 - 4808*s13^4*s23^4 - 2320*s13^3*s23^5 + 1621*s13^2*
                s23^6 + 1629*s13*s23^7 + 12*s23^8)) + p2q^2*p3q^3*
            (61*s13^5*(s13 - 2*s23)*s23^4*(s13 + s23)^4 - 6*s12^12*s13*
              (3*s13 + s23) + 6*s12^11*(9*s13^3 + 25*s13^2*s23 + 38*s13*
                s23^2 + 14*s23^3) + s12*s13^4*s23^3*(s13 + s23)^2*
              (242*s13^4 - 673*s13^3*s23 - 326*s13^2*s23^2 - 63*s13*s23^3 - 
               713*s23^4) - s12^10*(102*s13^4 + 254*s13^3*s23 + 765*s13^2*
                s23^2 + 817*s13*s23^3 + 324*s23^4) - s12^9*(54*s13^5 + 815*
                s13^4*s23 + 7117*s13^3*s23^2 + 8364*s13^2*s23^3 + 3136*s13*
                s23^4 + 1128*s23^5) + s12^8*(1170*s13^6 - 2311*s13^5*s23 - 
               8786*s13^4*s23^2 - 15131*s13^3*s23^3 - 15876*s13^2*s23^4 - 
               7406*s13*s23^5 - 600*s23^6) + s12^2*s13^3*s23^2*
              (211*s13^7 - 2073*s13^6*s23 - 2902*s13^5*s23^2 - 15*s13^4*
                s23^3 + 1989*s13^3*s23^4 + 2525*s13^2*s23^5 - 321*s13*s23^6 - 
               1460*s23^7) + s12^7*(1626*s13^7 + 3570*s13^6*s23 + 3281*s13^5*
                s23^2 - 7427*s13^4*s23^3 - 16299*s13^3*s23^4 - 13117*s13^2*
                s23^5 - 5258*s13*s23^6 + 468*s23^7) + s12^3*s13^2*s23*
              (10*s13^8 - 3247*s13^7*s23 + 349*s13^6*s23^2 + 12029*s13^5*
                s23^3 + 15181*s13^4*s23^4 + 14083*s13^3*s23^5 + 13843*s13^2*
                s23^6 + 5325*s13*s23^7 - 1193*s23^8) + s12^4*s13*s23*
              (-1465*s13^8 + 5476*s13^7*s23 + 26211*s13^6*s23^2 + 38092*s13^5*
                s23^3 + 32326*s13^4*s23^4 + 26754*s13^3*s23^5 + 21152*s13^2*
                s23^6 + 8078*s13*s23^7 - 304*s23^8) + 
             s12^6*(486*s13^8 + 11540*s13^7*s23 + 22200*s13^6*s23^2 + 20462*
                s13^5*s23^3 + 10853*s13^4*s23^4 - 951*s13^3*s23^5 + 409*s13^2*
                s23^6 + 4349*s13*s23^7 + 348*s23^8) + s12^5*s13*
              (-90*s13^8 + 4589*s13^7*s23 + 25191*s13^6*s23^2 + 43408*s13^5*
                s23^3 + 37919*s13^4*s23^4 + 24990*s13^3*s23^5 + 20433*s13^2*
                s23^6 + 14352*s13*s23^7 + 3982*s23^8)) + 
           p2q^3*p3q^2*(6*s12^11*s13*(9*s13^2 + 12*s13*s23 + 5*s23^2) - 
             61*s13^5*s23^3*(s13 + s23)^3*(s13^3 - 4*s13^2*s23 - 2*s13*
                s23^2 + 5*s23^3) + s12^10*(54*s13^4 + 11*s13^3*s23 - 683*
                s13^2*s23^2 - 784*s13*s23^3 - 192*s23^4) + 
             s12^9*(234*s13^5 + 362*s13^4*s23 - 1576*s13^3*s23^2 - 2637*s13^2*
                s23^3 - 1101*s13*s23^4 - 240*s23^5) - s12*s13^4*s23^2*
              (s13 + s23)^2*(82*s13^5 - 805*s13^4*s23 - 5*s13^3*s23^2 - 216*
                s13^2*s23^3 + 106*s13*s23^4 + 1326*s23^5) + 
             s12^8*(450*s13^6 + 601*s13^5*s23 + 5183*s13^4*s23^2 + 5895*s13^3*
                s23^3 + 197*s13^2*s23^4 - 522*s13*s23^5 + 432*s23^6) + 
             s12^7*(-294*s13^7 + 3599*s13^6*s23 + 17907*s13^5*s23^2 + 28629*
                s13^4*s23^3 + 23023*s13^3*s23^4 + 10248*s13^2*s23^5 + 2476*
                s13*s23^6 + 816*s23^7) + s12^3*s13^2*s23*(399*s13^8 - 4109*
                s13^7*s23 - 10627*s13^6*s23^2 - 3489*s13^5*s23^3 + 12513*
                s13^4*s23^4 + 19193*s13^3*s23^5 + 12609*s13^2*s23^6 + 1433*
                s13*s23^7 - 1866*s23^8) + s12^6*(-918*s13^8 + 3254*s13^7*
                s23 + 19142*s13^6*s23^2 + 47708*s13^5*s23^3 + 61266*s13^4*
                s23^4 + 40277*s13^3*s23^5 + 16645*s13^2*s23^6 + 5664*s13*
                s23^7 + 336*s23^8) - s12^2*s13^3*s23*(11*s13^8 - 1049*s13^7*
                s23 + 470*s13^6*s23^2 + 4107*s13^5*s23^3 + 1965*s13^4*s23^4 - 
               3334*s13^3*s23^5 - 2285*s13^2*s23^6 + 2764*s13*s23^7 + 2327*
                s23^8) + s12^5*s13*(-378*s13^8 - 3712*s13^7*s23 + 2246*s13^6*
                s23^2 + 34382*s13^5*s23^3 + 67398*s13^4*s23^4 + 65114*s13^3*
                s23^5 + 38762*s13^2*s23^6 + 14551*s13*s23^7 + 2403*s23^8) + 
             s12^4*s13*(30*s13^9 - 3135*s13^8*s23 - 10275*s13^7*s23^2 - 1660*
                s13^6*s23^3 + 29979*s13^5*s23^4 + 49805*s13^4*s23^5 + 39869*
                s13^3*s23^6 + 19160*s13^2*s23^7 + 4209*s13*s23^8 - 550*
                s23^9)) + p2q^4*p3q*(-61*s13^5*s23^3*(s13 + s23)^3*
              (2*s13^3 - 3*s13^2*s23 - 8*s13*s23^2 + 3*s23^3) - 
             18*s12^10*s13*(3*s13^3 + 7*s13^2*s23 + 8*s13*s23^2 + 4*s23^3) + 
             s12^9*(-126*s13^5 - 380*s13^4*s23 + 123*s13^3*s23^2 + 731*s13^2*
                s23^3 + 474*s13*s23^4 + 96*s23^5) - s12*s13^4*s23^2*
              (s13 + s23)^2*(164*s13^5 - 426*s13^4*s23 - 746*s13^3*s23^2 - 
               2204*s13^2*s23^3 - 1153*s13*s23^4 + 712*s23^5) + 
             s12^8*(-240*s13^6 - 785*s13^5*s23 + 2171*s13^4*s23^2 + 5880*
                s13^3*s23^3 + 4418*s13^2*s23^4 + 1518*s13*s23^5 + 288*
                s23^6) + s12^7*(-396*s13^7 - 550*s13^6*s23 + 2538*s13^5*
                s23^2 + 11181*s13^4*s23^3 + 16097*s13^3*s23^4 + 9732*s13^2*
                s23^5 + 2364*s13*s23^6 + 288*s23^7) + s12^2*s13^3*s23*
              (-22*s13^8 + 989*s13^7*s23 + 1412*s13^6*s23^2 - 523*s13^5*
                s23^3 + 2538*s13^4*s23^4 + 9876*s13^3*s23^5 + 7792*s13^2*
                s23^6 + 279*s13*s23^7 - 1099*s23^8) + s12^3*s13^2*s23*
              (686*s13^8 + 412*s13^7*s23 - 6714*s13^6*s23^2 - 13046*s13^5*
                s23^3 - 1804*s13^4*s23^4 + 13730*s13^3*s23^5 + 11237*s13^2*
                s23^6 + 1529*s13*s23^7 - 780*s23^8) + 
             s12^6*(-198*s13^8 - 1422*s13^7*s23 - 4213*s13^6*s23^2 + 4924*
                s13^5*s23^3 + 23430*s13^4*s23^4 + 23911*s13^3*s23^5 + 10470*
                s13^2*s23^6 + 2220*s13*s23^7 + 96*s23^8) + 
             s12^5*s13*(138*s13^8 - 2460*s13^7*s23 - 11085*s13^6*s23^2 - 
               12708*s13^5*s23^3 + 7157*s13^4*s23^4 + 26342*s13^3*s23^5 + 
               20983*s13^2*s23^6 + 6613*s13*s23^7 + 618*s23^8) + 
             s12^4*s13*(108*s13^9 - 349*s13^8*s23 - 6979*s13^7*s23^2 - 19374*
                s13^6*s23^3 - 15036*s13^5*s23^4 + 9730*s13^4*s23^5 + 21062*
                s13^3*s23^6 + 10886*s13^2*s23^7 + 1552*s13*s23^8 - 210*
                s23^9))) - p1q^4*(p3q^2*(s12 + s23)*
            (-61*s13^3*s23^5*(s13 + s23)^3*(2*s13^2 - s23^2) - 
             s12*s13^2*s23^4*(s13 + s23)^2*(565*s13^4 + 477*s13^3*s23 + 200*
                s13^2*s23^2 + 145*s13*s23^3 - 82*s23^4) + 
             12*s12^9*(4*s13^4 + 18*s13^3*s23 + 23*s13^2*s23^2 + 17*s13*
                s23^3 + 9*s23^4) + s12^8*(144*s13^5 + 366*s13^4*s23 + 161*
                s13^3*s23^2 + 191*s13^2*s23^3 + 456*s13*s23^4 + 180*s23^5) + 
             2*s12^7*(72*s13^6 + 168*s13^5*s23 - 462*s13^4*s23^2 - 1569*s13^3*
                s23^3 - 973*s13^2*s23^4 + 101*s13*s23^5 + 51*s23^6) - 
             s12^2*s13*s23^3*(1127*s13^7 + 3437*s13^6*s23 + 4110*s13^5*
                s23^2 + 2124*s13^4*s23^3 + 398*s13^3*s23^4 + 552*s13^2*
                s23^5 + 467*s13*s23^6 - 11*s23^7) + s12^5*s23*
              (-360*s13^7 - 3120*s13^6*s23 - 9253*s13^5*s23^2 - 10509*s13^4*
                s23^3 - 2851*s13^3*s23^4 + 1942*s13^2*s23^5 + 771*s13*s23^6 + 
               6*s23^7) + s12^6*(48*s13^7 + 132*s13^6*s23 - 2804*s13^5*
                s23^2 - 7244*s13^4*s23^3 - 6163*s13^3*s23^4 - 2401*s13^2*
                s23^5 - 576*s13*s23^6 + 66*s23^7) - s12^3*s13*s23^2*
              (1000*s13^7 + 3813*s13^6*s23 + 7198*s13^5*s23^2 + 6390*s13^4*
                s23^3 - 167*s13^3*s23^4 - 3639*s13^2*s23^5 - 1234*s13*s23^6 + 
               233*s23^7) - s12^4*s23*(306*s13^8 + 2125*s13^7*s23 + 7400*
                s13^6*s23^2 + 11336*s13^5*s23^3 + 5053*s13^4*s23^4 - 4208*
                s13^3*s23^5 - 4565*s13^2*s23^6 - 1053*s13*s23^7 + 30*
                s23^8)) - p2q^2*(s13 + s23)*(-61*s13^3*s23^5*(s13 + s23)^2*
              (6*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
             2*s12^9*s23*(60*s13^3 + 102*s13^2*s23 + 25*s13*s23^2 + 9*
                s23^3) + s12^8*(-48*s13^5 + 126*s13^4*s23 + 1163*s13^3*
                s23^2 + 966*s13^2*s23^3 + 105*s13*s23^4 + 24*s23^5) + 
             s12*s13^2*s23^4*(-1191*s13^6 - 1949*s13^5*s23 + 589*s13^4*
                s23^2 + 2462*s13^3*s23^3 + 1539*s13^2*s23^4 + 342*s13*s23^5 - 
               82*s23^6) + s12^7*(-144*s13^6 + 2553*s13^4*s23^2 + 3192*s13^3*
                s23^3 + 873*s13^2*s23^4 + 462*s13*s23^5 + 60*s23^6) + 
             s12^2*s13*s23^3*(-1648*s13^7 - 2599*s13^6*s23 + 1671*s13^5*
                s23^2 + 3963*s13^4*s23^3 + 1712*s13^3*s23^4 + 964*s13^2*
                s23^5 + 582*s13*s23^6 - 11*s23^7) + s12^6*(-144*s13^7 - 300*
                s13^6*s23 + 2496*s13^5*s23^2 + 7253*s13^4*s23^3 + 3108*s13^3*
                s23^4 - 1068*s13^2*s23^5 + 433*s13*s23^6 + 216*s23^7) + 
             s12^3*s13*s23^2*(-1187*s13^7 - 1833*s13^6*s23 + 3795*s13^5*
                s23^2 + 6825*s13^4*s23^3 + 179*s13^3*s23^4 - 1924*s13^2*
                s23^5 + 561*s13*s23^6 + 488*s23^7) + s12^4*s23*
              (-402*s13^8 - 1267*s13^7*s23 + 3385*s13^6*s23^2 + 10412*s13^5*
                s23^3 + 2929*s13^4*s23^4 - 5242*s13^3*s23^5 - 1576*s13^2*
                s23^6 + 633*s13*s23^7 + 96*s23^8) + s12^5*(-48*s13^8 - 696*
                s13^7*s23 + 822*s13^6*s23^2 + 8247*s13^5*s23^3 + 7941*s13^4*
                s23^4 - 1858*s13^3*s23^5 - 2652*s13^2*s23^6 + 160*s13*s23^7 + 
               258*s23^8)) + p2q*p3q*(61*s13^3*s23^5*(s13 + s23)^3*
              (3*s13^3 - 8*s13^2*s23 - 3*s13*s23^2 + 2*s23^3) + 
             18*s12^10*s23*(4*s13^3 + 8*s13^2*s23 + 7*s13*s23^2 + 3*s23^3) - 
             s12^9*(96*s13^5 + 474*s13^4*s23 + 731*s13^3*s23^2 + 123*s13^2*
                s23^3 - 380*s13*s23^4 - 126*s23^5) + s12*s13^2*s23^4*
              (s13 + s23)^2*(712*s13^5 - 1153*s13^4*s23 - 2204*s13^3*s23^2 - 
               746*s13^2*s23^3 - 426*s13*s23^4 + 164*s23^5) - 
             s12^8*(288*s13^6 + 1518*s13^5*s23 + 4418*s13^4*s23^2 + 5880*
                s13^3*s23^3 + 2171*s13^2*s23^4 - 785*s13*s23^5 - 240*s23^6) - 
             s12^7*(288*s13^7 + 2364*s13^6*s23 + 9732*s13^5*s23^2 + 16097*
                s13^4*s23^3 + 11181*s13^3*s23^4 + 2538*s13^2*s23^5 - 550*s13*
                s23^6 - 396*s23^7) + s12^3*s13*s23^2*(780*s13^8 - 1529*s13^7*
                s23 - 11237*s13^6*s23^2 - 13730*s13^5*s23^3 + 1804*s13^4*
                s23^4 + 13046*s13^3*s23^5 + 6714*s13^2*s23^6 - 412*s13*
                s23^7 - 686*s23^8) - s12^6*(96*s13^8 + 2220*s13^7*s23 + 10470*
                s13^6*s23^2 + 23911*s13^5*s23^3 + 23430*s13^4*s23^4 + 4924*
                s13^3*s23^5 - 4213*s13^2*s23^6 - 1422*s13*s23^7 - 198*
                s23^8) + s12^2*s13*s23^3*(1099*s13^8 - 279*s13^7*s23 - 7792*
                s13^6*s23^2 - 9876*s13^5*s23^3 - 2538*s13^4*s23^4 + 523*s13^3*
                s23^5 - 1412*s13^2*s23^6 - 989*s13*s23^7 + 22*s23^8) - 
             s12^5*s23*(618*s13^8 + 6613*s13^7*s23 + 20983*s13^6*s23^2 + 
               26342*s13^5*s23^3 + 7157*s13^4*s23^4 - 12708*s13^3*s23^5 - 
               11085*s13^2*s23^6 - 2460*s13*s23^7 + 138*s23^8) + 
             s12^4*s23*(210*s13^9 - 1552*s13^8*s23 - 10886*s13^7*s23^2 - 
               21062*s13^6*s23^3 - 9730*s13^5*s23^4 + 15036*s13^4*s23^5 + 
               19374*s13^3*s23^6 + 6979*s13^2*s23^7 + 349*s13*s23^8 - 108*
                s23^9))) + p1q^2*(-(p3q^4*s12*(s12 + s23)*
             (-(s13^4*(57*s13 - 160*s23)*s23^4*(s13 + s23)^3) + 
              6*s12^10*s23*(s13 + 3*s23) - s12*s13^3*s23^3*(s13 + s23)^2*(
                307*s13^3 - 944*s13^2*s23 + 646*s13*s23^2 - 488*s23^3) - 
              2*s12^9*(81*s13^3 + 139*s13^2*s23 + 61*s13*s23^2 + 45*s23^3) - 
              s12^8*(360*s13^4 + 559*s13^3*s23 + 177*s13^2*s23^2 + 
                188*s13*s23^3 + 78*s23^4) + s12^7*(-108*s13^5 - 598*s13^4*
                 s23 + 2213*s13^3*s23^2 + 3059*s13^2*s23^3 + 410*s13*s23^4 + 
                6*s23^5) + s12^4*s13*s23*(1889*s13^6 + 8993*s13^5*s23 + 
                16596*s13^4*s23^2 + 14749*s13^3*s23^3 + 3219*s13^2*s23^4 - 
                4386*s13*s23^5 - 2504*s23^6) + s12^6*(216*s13^6 + 
                1496*s13^5*s23 + 6856*s13^4*s23^2 + 8571*s13^3*s23^3 + 
                5245*s13^2*s23^4 + 2346*s13*s23^5 - 204*s23^6) + 
              s12^2*s13^2*s23^2*(-414*s13^6 + 1861*s13^5*s23 + 4999*s13^4*
                 s23^2 + 2256*s13^3*s23^3 - 3287*s13^2*s23^4 - 2473*s13*
                 s23^5 + 346*s23^6) + s12^5*(126*s13^7 + 3842*s13^6*s23 + 
                10092*s13^5*s23^2 + 14828*s13^4*s23^3 + 12111*s13^3*s23^4 + 
                3571*s13^2*s23^5 - 616*s13*s23^6 - 180*s23^7) + 
              s12^3*s13*s23*(-134*s13^7 + 3093*s13^6*s23 + 9650*s13^5*s23^2 + 
                11657*s13^4*s23^3 + 3018*s13^3*s23^4 - 6712*s13^2*s23^5 - 
                4724*s13*s23^6 - 12*s23^7))) + p2q^4*(s13 + s23)*
            (-61*s13^5*s23^3*(s13 + s23)^2*(s13^3 - 4*s13^2*s23 - 4*s13*
                s23^2 + 6*s23^3) + 2*s12^9*s13*(9*s13^3 + 25*s13^2*s23 + 102*
                s13*s23^2 + 60*s23^3) + s12^8*(24*s13^5 + 105*s13^4*s23 + 966*
                s13^3*s23^2 + 1163*s13^2*s23^3 + 126*s13*s23^4 - 48*s23^5) + 
             s12*s13^4*s23^2*(-82*s13^6 + 342*s13^5*s23 + 1539*s13^4*s23^2 + 
               2462*s13^3*s23^3 + 589*s13^2*s23^4 - 1949*s13*s23^5 - 1191*
                s23^6) + 3*s12^7*(20*s13^6 + 154*s13^5*s23 + 291*s13^4*
                s23^2 + 1064*s13^3*s23^3 + 851*s13^2*s23^4 - 48*s23^6) + 
             s12^2*s13^3*s23*(-11*s13^7 + 582*s13^6*s23 + 964*s13^5*s23^2 + 
               1712*s13^4*s23^3 + 3963*s13^3*s23^4 + 1671*s13^2*s23^5 - 2599*
                s13*s23^6 - 1648*s23^7) + s12^3*s13^2*s23*(488*s13^7 + 561*
                s13^6*s23 - 1924*s13^5*s23^2 + 179*s13^4*s23^3 + 6825*s13^3*
                s23^4 + 3795*s13^2*s23^5 - 1833*s13*s23^6 - 1187*s23^7) + 
             s12^6*(216*s13^7 + 433*s13^6*s23 - 1068*s13^5*s23^2 + 3108*s13^4*
                s23^3 + 7253*s13^3*s23^4 + 2496*s13^2*s23^5 - 300*s13*s23^6 - 
               144*s23^7) + s12^4*s13*(96*s13^8 + 633*s13^7*s23 - 1576*s13^6*
                s23^2 - 5242*s13^5*s23^3 + 2929*s13^4*s23^4 + 10412*s13^3*
                s23^5 + 3385*s13^2*s23^6 - 1267*s13*s23^7 - 402*s23^8) + 
             s12^5*(258*s13^8 + 160*s13^7*s23 - 2652*s13^6*s23^2 - 1858*s13^5*
                s23^3 + 7941*s13^4*s23^4 + 8247*s13^3*s23^5 + 822*s13^2*
                s23^6 - 696*s13*s23^7 - 48*s23^8)) + p2q*p3q^3*
            (-61*s13^4*(2*s13 - s23)*s23^5*(s13 + s23)^4 - 6*s12^12*s23*
              (s13 + 3*s23) + 6*s12^11*(14*s13^3 + 38*s13^2*s23 + 25*s13*
                s23^2 + 9*s23^3) - s12*s13^3*s23^4*(s13 + s23)^2*
              (713*s13^4 + 63*s13^3*s23 + 326*s13^2*s23^2 + 673*s13*s23^3 - 
               242*s23^4) - s12^10*(324*s13^4 + 817*s13^3*s23 + 765*s13^2*
                s23^2 + 254*s13*s23^3 + 102*s23^4) - s12^9*(1128*s13^5 + 3136*
                s13^4*s23 + 8364*s13^3*s23^2 + 7117*s13^2*s23^3 + 815*s13*
                s23^4 + 54*s23^5) - s12^8*(600*s13^6 + 7406*s13^5*s23 + 15876*
                s13^4*s23^2 + 15131*s13^3*s23^3 + 8786*s13^2*s23^4 + 2311*s13*
                s23^5 - 1170*s23^6) - s12^2*s13^2*s23^3*(1460*s13^7 + 321*
                s13^6*s23 - 2525*s13^5*s23^2 - 1989*s13^4*s23^3 + 15*s13^3*
                s23^4 + 2902*s13^2*s23^5 + 2073*s13*s23^6 - 211*s23^7) + 
             s12^7*(468*s13^7 - 5258*s13^6*s23 - 13117*s13^5*s23^2 - 16299*
                s13^4*s23^3 - 7427*s13^3*s23^4 + 3281*s13^2*s23^5 + 3570*s13*
                s23^6 + 1626*s23^7) + s12^4*s13*s23*(-304*s13^8 + 8078*s13^7*
                s23 + 21152*s13^6*s23^2 + 26754*s13^5*s23^3 + 32326*s13^4*
                s23^4 + 38092*s13^3*s23^5 + 26211*s13^2*s23^6 + 5476*s13*
                s23^7 - 1465*s23^8) + s12^5*s23*(3982*s13^8 + 14352*s13^7*
                s23 + 20433*s13^6*s23^2 + 24990*s13^5*s23^3 + 37919*s13^4*
                s23^4 + 43408*s13^3*s23^5 + 25191*s13^2*s23^6 + 4589*s13*
                s23^7 - 90*s23^8) + s12^3*s13*s23^2*(-1193*s13^8 + 5325*s13^7*
                s23 + 13843*s13^6*s23^2 + 14083*s13^5*s23^3 + 15181*s13^4*
                s23^4 + 12029*s13^3*s23^5 + 349*s13^2*s23^6 - 3247*s13*
                s23^7 + 10*s23^8) + s12^6*(348*s13^8 + 4349*s13^7*s23 + 409*
                s13^6*s23^2 - 951*s13^5*s23^3 + 10853*s13^4*s23^4 + 20462*
                s13^3*s23^5 + 22200*s13^2*s23^6 + 11540*s13*s23^7 + 486*
                s23^8)) + p2q^3*p3q*(-6*s12^10*s13*(6*s13^3 + 18*s13^2*s23 + 
               37*s13*s23^2 + 21*s23^3) - 61*s13^4*s23^3*(s13 + s23)^3*
              (s13^4 - 8*s13^3*s23 + 2*s13^2*s23^2 + 12*s13*s23^3 - 3*
                s23^4) + s12^9*(36*s13^5 + 235*s13^4*s23 + 441*s13^3*s23^2 + 
               830*s13^2*s23^3 + 852*s13*s23^4 + 240*s23^5) - 
             s12*s13^3*s23^2*(s13 + s23)^2*(82*s13^6 - 1145*s13^5*s23 - 72*
                s13^4*s23^2 + 445*s13^3*s23^3 + 1857*s13^2*s23^4 + 1966*s13*
                s23^5 - 479*s23^6) + s12^8*(-120*s13^6 - 260*s13^5*s23 + 5212*
                s13^4*s23^2 + 10895*s13^3*s23^3 + 7075*s13^2*s23^4 + 1892*s13*
                s23^5 + 480*s23^6) + s12^7*s13*(-840*s13^6 - 311*s13^5*s23 + 
               9796*s13^4*s23^2 + 27161*s13^3*s23^3 + 30919*s13^2*s23^4 + 
               15816*s13*s23^5 + 2743*s23^6) + s12^6*(-900*s13^8 - 1677*s13^7*
                s23 + 3859*s13^6*s23^2 + 32924*s13^5*s23^3 + 62396*s13^4*
                s23^4 + 47689*s13^3*s23^5 + 15815*s13^2*s23^6 + 1922*s13*
                s23^7 - 480*s23^8) + s12^4*s13*(96*s13^9 - 1952*s13^8*s23 - 
               12168*s13^7*s23^2 - 16599*s13^6*s23^3 + 17763*s13^5*s23^4 + 
               61355*s13^4*s23^5 + 51053*s13^3*s23^6 + 12027*s13^2*s23^7 - 
               3433*s13*s23^8 - 1592*s23^9) - s12^2*s13^2*s23*
              (11*s13^9 - 1235*s13^8*s23 + 453*s13^7*s23^2 + 6269*s13^6*
                s23^3 + 3083*s13^5*s23^4 - 4385*s13^4*s23^5 + 1040*s13^3*
                s23^6 + 7098*s13^2*s23^7 + 2707*s13*s23^8 - 453*s23^9) + 
             s12^5*(-156*s13^9 - 4597*s13^8*s23 - 9039*s13^7*s23^2 + 11957*
                s13^6*s23^3 + 59205*s13^5*s23^4 + 75545*s13^4*s23^5 + 40641*
                s13^3*s23^6 + 6296*s13^2*s23^7 - 1666*s13*s23^8 - 240*
                s23^9) + s12^3*s13*s23*(665*s13^9 - 3200*s13^8*s23 - 14829*
                s13^7*s23^2 - 11786*s13^6*s23^3 + 17427*s13^5*s23^4 + 31019*
                s13^4*s23^5 + 10487*s13^3*s23^6 - 5704*s13^2*s23^7 - 3254*s13*
                s23^8 + 167*s23^9)) + p2q^2*p3q^2*
            (61*s13^4*s23^4*(s13 + s23)^4*(4*s13^2 - 9*s13*s23 + 4*s23^2) + 
             2*s12^11*(9*s13^3 + 23*s13^2*s23 + 23*s13*s23^2 + 9*s23^3) - 
             2*s12^10*(72*s13^4 + 295*s13^3*s23 + 506*s13^2*s23^2 + 295*s13*
                s23^3 + 72*s23^4) + s12*s13^3*s23^3*(s13 + s23)^3*
              (721*s13^4 - 1937*s13^3*s23 + 1493*s13^2*s23^2 - 1937*s13*
                s23^3 + 721*s23^4) + s12^9*(222*s13^5 + 201*s13^4*s23 - 3227*
                s13^3*s23^2 - 3227*s13^2*s23^3 + 201*s13*s23^4 + 222*s23^5) + 
             s12^2*s13^2*s23^2*(s13 + s23)^2*(664*s13^6 - 4156*s13^5*s23 + 
               1731*s13^4*s23^2 + 2114*s13^3*s23^3 + 1731*s13^2*s23^4 - 4156*
                s13*s23^5 + 664*s23^6) + s12^8*(1392*s13^6 + 1753*s13^5*s23 + 
               4647*s13^4*s23^2 + 7996*s13^3*s23^3 + 4647*s13^2*s23^4 + 1753*
                s13*s23^5 + 1392*s23^6) + s12^7*(1134*s13^7 + 7087*s13^6*
                s23 + 23114*s13^5*s23^2 + 37335*s13^4*s23^3 + 37335*s13^3*
                s23^4 + 23114*s13^2*s23^5 + 7087*s13*s23^6 + 1134*s23^7) + 
             s12^4*s13*s23*(-2697*s13^8 - 831*s13^7*s23 + 23024*s13^6*s23^2 + 
               62242*s13^5*s23^3 + 81832*s13^4*s23^4 + 62242*s13^3*s23^5 + 
               23024*s13^2*s23^6 - 831*s13*s23^7 - 2697*s23^8) + 
             s12^6*(-192*s13^8 + 9894*s13^7*s23 + 32768*s13^6*s23^2 + 67374*
                s13^5*s23^3 + 88592*s13^4*s23^4 + 67374*s13^3*s23^5 + 32768*
                s13^2*s23^6 + 9894*s13*s23^7 - 192*s23^8) + 
             s12^5*(-318*s13^9 + 849*s13^8*s23 + 21279*s13^7*s23^2 + 64641*
                s13^6*s23^3 + 100421*s13^5*s23^4 + 100421*s13^4*s23^5 + 64641*
                s13^3*s23^6 + 21279*s13^2*s23^7 + 849*s13*s23^8 - 318*
                s23^9) + s12^3*s13*s23*(177*s13^9 - 4976*s13^8*s23 - 5592*
                s13^7*s23^2 + 12501*s13^6*s23^3 + 32884*s13^5*s23^4 + 32884*
                s13^4*s23^5 + 12501*s13^3*s23^6 - 5592*s13^2*s23^7 - 4976*s13*
                s23^8 + 177*s23^9))) + p1q^3*(p3q^3*(s12 + s23)*
            (61*s13^4*s23^5*(s13 + s23)^4 - s12^9*s13*s23*(418*s13^2 + 529*
                s13*s23 + 39*s23^2) + 6*s12^10*(8*s13^3 + 13*s13^2*s23 + 13*
                s13*s23^2 + 12*s23^3) + s12*s13^3*s23^4*(s13 + s23)^2*
              (368*s13^3 + 227*s13^2*s23 + 223*s13*s23^2 + 303*s23^3) - 
             s12^8*(288*s13^5 + 1393*s13^4*s23 + 2792*s13^3*s23^2 + 1951*
                s13^2*s23^3 + 408*s13*s23^4 + 72*s23^5) - 
             s12^7*(384*s13^6 + 2804*s13^5*s23 + 5509*s13^4*s23^2 + 1553*
                s13^3*s23^3 - 1213*s13^2*s23^4 + 443*s13*s23^5 - 24*s23^6) + 
             s12^2*s13^2*s23^3*(1035*s13^6 + 2421*s13^5*s23 + 3078*s13^4*
                s23^2 + 2358*s13^3*s23^3 + 223*s13^2*s23^4 - 150*s13*s23^5 + 
               293*s23^6) + s12^4*s13*s23*(427*s13^7 + 360*s13^6*s23 + 1991*
                s13^5*s23^2 + 8977*s13^4*s23^3 + 14630*s13^3*s23^4 + 9408*
                s13^2*s23^5 + 587*s13*s23^6 - 1230*s23^7) + 
             s12^5*s23*(-730*s13^7 - 2811*s13^6*s23 + 98*s13^5*s23^2 + 10596*
                s13^4*s23^3 + 15137*s13^3*s23^4 + 8149*s13^2*s23^5 + 1381*s13*
                s23^6 - 120*s23^7) + s12^3*s13*s23^2*(1185*s13^7 + 2418*s13^6*
                s23 + 4711*s13^5*s23^2 + 8521*s13^4*s23^3 + 6022*s13^3*
                s23^4 - 1067*s13^2*s23^5 - 2025*s13*s23^6 + 21*s23^7) - 
             s12^6*(144*s13^7 + 3064*s13^6*s23 + 5310*s13^5*s23^2 + 763*s13^4*
                s23^3 - 6468*s13^3*s23^4 - 7201*s13^2*s23^5 - 2480*s13*
                s23^6 + 96*s23^7)) + p2q*p3q^2*(6*s12^11*s23*(5*s13^2 + 12*
                s13*s23 + 9*s23^2) - 61*s13^3*s23^5*(s13 + s23)^3*
              (5*s13^3 - 2*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
             s12^10*(-192*s13^4 - 784*s13^3*s23 - 683*s13^2*s23^2 + 11*s13*
                s23^3 + 54*s23^4) - s12^9*(240*s13^5 + 1101*s13^4*s23 + 2637*
                s13^3*s23^2 + 1576*s13^2*s23^3 - 362*s13*s23^4 - 234*s23^5) - 
             s12*s13^2*s23^4*(s13 + s23)^2*(1326*s13^5 + 106*s13^4*s23 - 216*
                s13^3*s23^2 - 5*s13^2*s23^3 - 805*s13*s23^4 + 82*s23^5) + 
             s12^8*(432*s13^6 - 522*s13^5*s23 + 197*s13^4*s23^2 + 5895*s13^3*
                s23^3 + 5183*s13^2*s23^4 + 601*s13*s23^5 + 450*s23^6) + 
             s12^7*(816*s13^7 + 2476*s13^6*s23 + 10248*s13^5*s23^2 + 23023*
                s13^4*s23^3 + 28629*s13^3*s23^4 + 17907*s13^2*s23^5 + 3599*
                s13*s23^6 - 294*s23^7) + s12^6*(336*s13^8 + 5664*s13^7*s23 + 
               16645*s13^6*s23^2 + 40277*s13^5*s23^3 + 61266*s13^4*s23^4 + 
               47708*s13^3*s23^5 + 19142*s13^2*s23^6 + 3254*s13*s23^7 - 918*
                s23^8) + s12^5*s23*(2403*s13^8 + 14551*s13^7*s23 + 38762*
                s13^6*s23^2 + 65114*s13^5*s23^3 + 67398*s13^4*s23^4 + 34382*
                s13^3*s23^5 + 2246*s13^2*s23^6 - 3712*s13*s23^7 - 378*
                s23^8) - s12^2*s13*s23^3*(2327*s13^8 + 2764*s13^7*s23 - 2285*
                s13^6*s23^2 - 3334*s13^5*s23^3 + 1965*s13^4*s23^4 + 4107*
                s13^3*s23^5 + 470*s13^2*s23^6 - 1049*s13*s23^7 + 11*s23^8) + 
             s12^3*s13*s23^2*(-1866*s13^8 + 1433*s13^7*s23 + 12609*s13^6*
                s23^2 + 19193*s13^5*s23^3 + 12513*s13^4*s23^4 - 3489*s13^3*
                s23^5 - 10627*s13^2*s23^6 - 4109*s13*s23^7 + 399*s23^8) + 
             s12^4*s23*(-550*s13^9 + 4209*s13^8*s23 + 19160*s13^7*s23^2 + 
               39869*s13^6*s23^3 + 49805*s13^5*s23^4 + 29979*s13^4*s23^5 - 
               1660*s13^3*s23^6 - 10275*s13^2*s23^7 - 3135*s13*s23^8 + 30*
                s23^9)) + p2q^3*(s13 + s23)*(122*s13^4*s23^4*(s13 + s23)^3*
              (2*s13^2 - 5*s13*s23 + 2*s23^2) + 8*s12^9*s13*s23*
              (10*s13^2 + 33*s13*s23 + 10*s23^2) + s12*s13^3*s23^3*
              (s13 + s23)^2*(561*s13^4 - 883*s13^3*s23 - 1066*s13^2*s23^2 - 
               883*s13*s23^3 + 561*s23^4) - 6*s12^8*(16*s13^5 + 25*s13^4*
                s23 - 256*s13^3*s23^2 - 256*s13^2*s23^3 + 25*s13*s23^4 + 16*
                s23^5) + s12^7*(-240*s13^6 - 397*s13^5*s23 + 2361*s13^4*
                s23^2 + 5556*s13^3*s23^3 + 2361*s13^2*s23^4 - 397*s13*s23^5 - 
               240*s23^6) - 4*s12^6*(36*s13^7 + 206*s13^6*s23 - 136*s13^5*
                s23^2 - 2441*s13^4*s23^3 - 2441*s13^3*s23^4 - 136*s13^2*
                s23^5 + 206*s13*s23^6 + 36*s23^7) + 2*s12^2*s13^2*s23^2*
              (256*s13^7 - 267*s13^6*s23 - 1667*s13^5*s23^2 - 1902*s13^4*
                s23^3 - 1902*s13^3*s23^4 - 1667*s13^2*s23^5 - 267*s13*s23^6 + 
               256*s23^7) + 2*s12^5*(24*s13^8 - 597*s13^7*s23 - 1202*s13^6*
                s23^2 + 3131*s13^5*s23^3 + 7788*s13^4*s23^4 + 3131*s13^3*
                s23^5 - 1202*s13^2*s23^6 - 597*s13*s23^7 + 24*s23^8) + 
             s12^3*s13*s23*(263*s13^8 - 1013*s13^7*s23 - 4211*s13^6*s23^2 - 
               1458*s13^5*s23^3 + 3266*s13^4*s23^4 - 1458*s13^3*s23^5 - 4211*
                s13^2*s23^6 - 1013*s13*s23^7 + 263*s23^8) + 
             s12^4*(48*s13^9 - 274*s13^8*s23 - 3384*s13^7*s23^2 - 2278*s13^6*
                s23^3 + 9914*s13^5*s23^4 + 9914*s13^4*s23^5 - 2278*s13^3*
                s23^6 - 3384*s13^2*s23^7 - 274*s13*s23^8 + 48*s23^9)) + 
           p2q^2*p3q*(-6*s12^10*s23*(21*s13^3 + 37*s13^2*s23 + 18*s13*s23^2 + 
               6*s23^3) + 61*s13^3*s23^4*(s13 + s23)^3*(3*s13^4 - 12*s13^3*
                s23 - 2*s13^2*s23^2 + 8*s13*s23^3 - s23^4) + 
             s12^9*(240*s13^5 + 852*s13^4*s23 + 830*s13^3*s23^2 + 441*s13^2*
                s23^3 + 235*s13*s23^4 + 36*s23^5) + s12^7*s23*
              (2743*s13^6 + 15816*s13^5*s23 + 30919*s13^4*s23^2 + 27161*s13^3*
                s23^3 + 9796*s13^2*s23^4 - 311*s13*s23^5 - 840*s23^6) + 
             s12^8*(480*s13^6 + 1892*s13^5*s23 + 7075*s13^4*s23^2 + 10895*
                s13^3*s23^3 + 5212*s13^2*s23^4 - 260*s13*s23^5 - 120*s23^6) + 
             s12*s13^2*s23^3*(s13 + s23)^2*(479*s13^6 - 1966*s13^5*s23 - 1857*
                s13^4*s23^2 - 445*s13^3*s23^3 + 72*s13^2*s23^4 + 1145*s13*
                s23^5 - 82*s23^6) + s12^6*(-480*s13^8 + 1922*s13^7*s23 + 
               15815*s13^6*s23^2 + 47689*s13^5*s23^3 + 62396*s13^4*s23^4 + 
               32924*s13^3*s23^5 + 3859*s13^2*s23^6 - 1677*s13*s23^7 - 900*
                s23^8) + s12^5*(-240*s13^9 - 1666*s13^8*s23 + 6296*s13^7*
                s23^2 + 40641*s13^6*s23^3 + 75545*s13^5*s23^4 + 59205*s13^4*
                s23^5 + 11957*s13^3*s23^6 - 9039*s13^2*s23^7 - 4597*s13*
                s23^8 - 156*s23^9) + s12^2*s13*s23^2*(453*s13^9 - 2707*s13^8*
                s23 - 7098*s13^7*s23^2 - 1040*s13^6*s23^3 + 4385*s13^5*
                s23^4 - 3083*s13^4*s23^5 - 6269*s13^3*s23^6 - 453*s13^2*
                s23^7 + 1235*s13*s23^8 - 11*s23^9) + s12^4*s23*
              (-1592*s13^9 - 3433*s13^8*s23 + 12027*s13^7*s23^2 + 51053*s13^6*
                s23^3 + 61355*s13^5*s23^4 + 17763*s13^4*s23^5 - 16599*s13^3*
                s23^6 - 12168*s13^2*s23^7 - 1952*s13*s23^8 + 96*s23^9) + 
             s12^3*s13*s23*(167*s13^9 - 3254*s13^8*s23 - 5704*s13^7*s23^2 + 
               10487*s13^6*s23^3 + 31019*s13^5*s23^4 + 17427*s13^4*s23^5 - 
               11786*s13^3*s23^6 - 14829*s13^2*s23^7 - 3200*s13*s23^8 + 665*
                s23^9))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*
         s13^2*(s12 + s13)^2*s23^2*(s12 + s23)^2*(s13 + s23)*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))) - 
       (ep*(p1q^6*(s12 + s13)*s23^3*(s12 + s23)^2*(s13 + s23)*
           (19*s13^3*s23^2*(s13 + s23)^2 + 2*s12^5*(7*s13^2 + 3*s13*s23 + 
              3*s23^2) + 2*s12^4*(13*s13^3 + 13*s13^2*s23 + 6*s13*s23^2 + 
              6*s23^3) - s12*s13^2*s23*(4*s13^3 + 8*s13^2*s23 + 
              23*s13*s23^2 + 19*s23^3) + s12^3*(-38*s13^4 - 12*s13^3*s23 + 
              6*s13^2*s23^2 + 6*s23^4) - s12^2*s13*(50*s13^4 + 84*s13^3*s23 + 
              53*s13^2*s23^2 + 25*s13*s23^3 + 6*s23^4)) - 
          p1q^5*s23^2*(s12 + s23)*(p2q*(s13 + s23)*
             (19*s13^3*s23^3*(s13 + s23)^2*(4*s13^2 - s13*s23 - s23^2) + 
              2*s12^8*(5*s13^2 + s13*s23 + 3*s23^2) + s12^7*(280*s13^3 + 
                276*s13^2*s23 + 230*s13*s23^2 + 32*s23^3) + 
              s12^6*(484*s13^4 + 1025*s13^3*s23 + 854*s13^2*s23^2 + 
                375*s13*s23^3 + 20*s23^4) + s12*s13^2*s23^2*(43*s13^5 + 
                212*s13^4*s23 + 154*s13^3*s23^2 - 97*s13^2*s23^3 - 
                99*s13*s23^4 - 17*s23^5) + s12^5*(144*s13^5 + 1327*s13^4*
                 s23 + 1296*s13^3*s23^2 + 562*s13^2*s23^3 + 19*s13*s23^4 - 
                12*s23^5) - s12^2*s13*s23*(184*s13^6 + 17*s13^5*s23 - 
                424*s13^4*s23^2 + 80*s13^3*s23^3 + 466*s13^2*s23^4 + 
                107*s13*s23^5 - 22*s23^6) + s12^4*(-190*s13^6 + 433*s13^5*
                 s23 + 1303*s13^4*s23^2 + 362*s13^3*s23^3 - 495*s13^2*s23^4 - 
                191*s13*s23^5 + 14*s23^6) - s12^3*(120*s13^7 + 327*s13^6*
                 s23 - 557*s13^5*s23^2 - 461*s13^4*s23^3 + 585*s13^3*s23^4 + 
                559*s13^2*s23^5 + 41*s13*s23^6 - 20*s23^7)) + 
            p3q*(19*s13^3*s23^3*(s13 + s23)^3*(s13^2 - 2*s13*s23 - s23^2) + 
              s12^8*(64*s13^3 + 86*s13^2*s23 + 32*s13*s23^2 + 24*s23^3) + 
              s12*s13^2*s23^2*(s13 + s23)^2*(15*s13^4 + 25*s13^3*s23 - 
                74*s13^2*s23^2 - 82*s13*s23^3 - 17*s23^4) + 
              s12^7*(366*s13^4 + 792*s13^3*s23 + 702*s13^2*s23^2 + 
                356*s13*s23^3 + 80*s23^4) + s12^6*(392*s13^5 + 1411*s13^4*
                 s23 + 1973*s13^3*s23^2 + 1373*s13^2*s23^3 + 503*s13*s23^4 + 
                56*s23^5) + s12^5*(-12*s13^6 + 835*s13^5*s23 + 1823*s13^4*
                 s23^2 + 1449*s13^3*s23^3 + 522*s13^2*s23^4 + 37*s13*s23^5 - 
                12*s23^6) + s12^4*(-152*s13^7 + 65*s13^6*s23 + 954*s13^5*
                 s23^2 + 729*s13^4*s23^3 - 620*s13^3*s23^4 - 791*s13^2*
                 s23^5 - 185*s13*s23^6 + 8*s23^7) + s12^2*s13*s23*(
                -54*s13^7 + 79*s13^6*s23 + 468*s13^5*s23^2 + 179*s13^4*
                 s23^3 - 583*s13^3*s23^4 - 509*s13^2*s23^5 - 60*s13*s23^6 + 
                22*s23^7) - s12^3*(50*s13^8 + 119*s13^7*s23 - 478*s13^6*
                 s23^2 - 763*s13^5*s23^3 + 472*s13^4*s23^4 + 1246*s13^3*
                 s23^5 + 599*s13^2*s23^6 + 21*s13*s23^7 - 20*s23^8))) + 
          (s12 + s13)*(p2q^6*s13^3*(s12 + s23)*(s13 + s23)*
             (19*s13^3*s23^3*(s13 + s23)^2 + 2*s12^6*(3*s13^2 + 3*s13*s23 + 
                7*s23^2) + 2*s12^5*(9*s13^3 + 9*s13^2*s23 + 20*s13*s23^2 + 
                13*s23^3) + s12*s13^2*s23^2*(-19*s13^3 - 4*s13^2*s23 + 
                30*s13*s23^2 + 15*s23^3) + 2*s12^4*(9*s13^4 + 6*s13^3*s23 + 
                16*s13^2*s23^2 + 7*s13*s23^3 - 19*s23^4) - 2*s12^2*s13*s23*(
                3*s13^4 + 22*s13^3*s23 + 38*s13^2*s23^2 + 46*s13*s23^3 + 
                27*s23^4) + s12^3*(6*s13^5 - 6*s13^4*s23 - 19*s13^3*s23^2 - 
                65*s13^2*s23^3 - 122*s13*s23^4 - 50*s23^5)) + 
            p3q^6*s12^3*(s12 + s23)*(46*s12^7*(s13^2 + s23^2) - 
              s13^3*s23^3*(111*s13^3 + 373*s13^2*s23 + 373*s13*s23^2 + 
                111*s23^3) + s12^6*(238*s13^3 + 244*s13^2*s23 + 
                244*s13*s23^2 + 238*s23^3) - s12*s13^2*s23^2*(168*s13^4 + 
                893*s13^3*s23 + 1218*s13^2*s23^2 + 893*s13*s23^3 + 
                168*s23^4) + s12^5*(378*s13^4 + 701*s13^3*s23 + 694*s13^2*
                 s23^2 + 701*s13*s23^3 + 378*s23^4) - s12^2*s13*s23*(
                27*s13^5 + 541*s13^4*s23 + 1302*s13^3*s23^2 + 1302*s13^2*
                 s23^3 + 541*s13*s23^4 + 27*s23^5) + s12^4*(226*s13^5 + 
                679*s13^4*s23 + 703*s13^3*s23^2 + 703*s13^2*s23^3 + 
                679*s13*s23^4 + 226*s23^5) + s12^3*(40*s13^6 + 195*s13^5*
                 s23 - 166*s13^4*s23^2 - 270*s13^3*s23^3 - 166*s13^2*s23^4 + 
                195*s13*s23^5 + 40*s23^6)) + p2q*p3q^5*s12^2*
             (s12^9*(52*s13^2 + 86*s23^2) + s13^3*s23^4*(s13 + s23)^2*(
                117*s13^2 + 252*s13*s23 + 119*s23^2) + 2*s12^8*(66*s13^3 + 
                152*s13^2*s23 + 160*s13*s23^2 + 249*s23^3) + 
              s12^7*(-316*s13^4 - 366*s13^3*s23 + 134*s13^2*s23^2 + 
                672*s13*s23^3 + 912*s23^4) - s12^6*(920*s13^5 + 2833*s13^4*
                 s23 + 3538*s13^3*s23^2 + 2042*s13^2*s23^3 - 39*s13*s23^4 - 
                568*s23^5) + s12*s13^2*s23^3*(381*s13^5 + 1747*s13^4*s23 + 
                2362*s13^3*s23^2 + 1723*s13^2*s23^3 + 911*s13*s23^4 + 
                184*s23^5) + s12^2*s13*s23^2*(333*s13^6 + 1785*s13^5*s23 + 
                1907*s13^4*s23^2 + 1357*s13^3*s23^3 + 466*s13^2*s23^4 + 
                411*s13*s23^5 + 35*s23^6) - s12^5*(624*s13^6 + 3553*s13^5*
                 s23 + 7763*s13^4*s23^2 + 7773*s13^3*s23^3 + 5067*s13^2*
                 s23^4 + 944*s13*s23^5 + 78*s23^6) - s12^3*s23*(21*s13^7 + 
                273*s13^6*s23 + 2023*s13^5*s23^2 + 3654*s13^4*s23^3 + 
                3638*s13^3*s23^4 + 1231*s13^2*s23^5 + 216*s13*s23^6 + 
                40*s23^7) - s12^4*(100*s13^7 + 1411*s13^6*s23 + 4931*s13^5*
                 s23^2 + 9034*s13^4*s23^3 + 8045*s13^3*s23^4 + 4601*s13^2*
                 s23^5 + 882*s13*s23^6 + 186*s23^7)) + p2q^2*p3q^4*s12*
             (s13^4*s23^4*(s13 + s23)^3*(13*s13 + 2*s23) + s12^10*(6*s13^2 + 
                40*s23^2) - s12*s13^3*s23^3*(s13 + s23)^2*(72*s13^3 + 
                24*s13^2*s23 - 550*s13*s23^2 - 333*s23^3) - 
              2*s12^9*(65*s13^3 - 3*s13^2*s23 + 27*s13*s23^2 - 87*s23^3) - 
              s12^8*(670*s13^4 + 1617*s13^3*s23 + 1508*s13^2*s23^2 + 
                1225*s13*s23^3 - 36*s23^4) - s12^7*(510*s13^5 + 2599*s13^4*
                 s23 + 4981*s13^3*s23^2 + 5088*s13^2*s23^3 + 3156*s13*s23^4 + 
                616*s23^5) + s12^6*(500*s13^6 + 940*s13^5*s23 - 1946*s13^4*
                 s23^2 - 5087*s13^3*s23^3 - 6485*s13^2*s23^4 - 3170*s13*
                 s23^5 - 924*s23^6) + s12^2*s13^2*s23^2*(-164*s13^6 - 
                100*s13^5*s23 + 2891*s13^4*s23^2 + 5784*s13^3*s23^3 + 
                5228*s13^2*s23^4 + 2716*s13*s23^5 + 445*s23^6) + 
              s12^5*(536*s13^7 + 3520*s13^6*s23 + 7429*s13^5*s23^2 + 
                4811*s13^4*s23^3 + 486*s13^3*s23^4 - 2612*s13^2*s23^5 - 
                1438*s13*s23^6 - 486*s23^7) + s12^3*s13*s23*(-19*s13^7 + 
                1108*s13^6*s23 + 6616*s13^5*s23^2 + 11418*s13^4*s23^3 + 
                11141*s13^3*s23^4 + 5882*s13^2*s23^5 + 1806*s13*s23^6 + 
                64*s23^7) + s12^4*(60*s13^8 + 1585*s13^7*s23 + 7080*s13^6*
                 s23^2 + 12953*s13^5*s23^3 + 12005*s13^4*s23^4 + 
                5578*s13^3*s23^5 + 1654*s13^2*s23^6 - 189*s13*s23^7 - 
                80*s23^8)) - p2q^5*p3q*s13^2*(-19*s13^3*s23^3*(s13 + s23)^3*(
                s13^2 + 2*s13*s23 - s23^2) + s12^8*(24*s13^3 + 32*s13^2*s23 + 
                86*s13*s23^2 + 64*s23^3) - s12*s13^2*s23^2*(s13 + s23)^2*(
                17*s13^4 + 82*s13^3*s23 + 74*s13^2*s23^2 - 25*s13*s23^3 - 
                15*s23^4) + s12^7*(80*s13^4 + 356*s13^3*s23 + 702*s13^2*
                 s23^2 + 792*s13*s23^3 + 366*s23^4) + s12^6*(56*s13^5 + 
                503*s13^4*s23 + 1373*s13^3*s23^2 + 1973*s13^2*s23^3 + 
                1411*s13*s23^4 + 392*s23^5) + s12^5*(-12*s13^6 + 
                37*s13^5*s23 + 522*s13^4*s23^2 + 1449*s13^3*s23^3 + 
                1823*s13^2*s23^4 + 835*s13*s23^5 - 12*s23^6) + 
              s12^4*(8*s13^7 - 185*s13^6*s23 - 791*s13^5*s23^2 - 
                620*s13^4*s23^3 + 729*s13^3*s23^4 + 954*s13^2*s23^5 + 
                65*s13*s23^6 - 152*s23^7) + s12^2*s13*s23*(22*s13^7 - 
                60*s13^6*s23 - 509*s13^5*s23^2 - 583*s13^4*s23^3 + 
                179*s13^3*s23^4 + 468*s13^2*s23^5 + 79*s13*s23^6 - 
                54*s23^7) + s12^3*(20*s13^8 - 21*s13^7*s23 - 599*s13^6*
                 s23^2 - 1246*s13^5*s23^3 - 472*s13^4*s23^4 + 763*s13^3*
                 s23^5 + 478*s13^2*s23^6 - 119*s13*s23^7 - 50*s23^8)) + 
            p2q^3*p3q^3*(-19*s13^5*s23^4*(s13 + s23)^4 - s12*s13^4*s23^3*
               (s13 + s23)^2*(49*s13^3 + 122*s13^2*s23 + 65*s13*s23^2 + 
                11*s23^3) - 2*s12^10*(12*s13^3 + 4*s13^2*s23 + 65*s13*s23^2 + 
                20*s23^3) + s12^9*(60*s13^4 - 284*s13^3*s23 - 548*s13^2*
                 s23^2 - 862*s13*s23^3 - 260*s23^4) + s12^8*(740*s13^5 + 
                1915*s13^4*s23 + 1195*s13^3*s23^2 - 199*s13^2*s23^3 - 
                1237*s13*s23^4 - 580*s23^5) + s12^7*(1040*s13^6 + 
                5135*s13^5*s23 + 8292*s13^4*s23^2 + 6892*s13^3*s23^3 + 
                2155*s13^2*s23^4 - 324*s13*s23^5 - 580*s23^6) + 
              s12^2*s13^3*s23^2*(9*s13^6 - 245*s13^5*s23 - 1325*s13^4*s23^2 - 
                1623*s13^3*s23^3 + 44*s13^2*s23^4 + 955*s13*s23^5 + 
                359*s23^6) + s12^6*(240*s13^7 + 3048*s13^6*s23 + 
                10285*s13^5*s23^2 + 14117*s13^4*s23^3 + 11465*s13^3*s23^4 + 
                4175*s13^2*s23^5 + 284*s13*s23^6 - 260*s23^7) + 
              s12^3*s13^2*s23*(49*s13^7 - 600*s13^6*s23 - 3098*s13^5*s23^2 - 
                2961*s13^4*s23^3 + 735*s13^3*s23^4 + 3285*s13^2*s23^5 + 
                2418*s13*s23^6 + 380*s23^7) + s12^5*(-124*s13^8 - 
                588*s13^7*s23 + 1280*s13^6*s23^2 + 8707*s13^5*s23^3 + 
                13610*s13^4*s23^4 + 9852*s13^3*s23^5 + 3765*s13^2*s23^6 + 
                122*s13*s23^7 - 40*s23^8) + s12^4*s13*(20*s13^8 - 
                643*s13^7*s23 - 2935*s13^6*s23^2 - 2143*s13^5*s23^3 + 
                3520*s13^4*s23^4 + 8159*s13^3*s23^5 + 5883*s13^2*s23^6 + 
                1784*s13*s23^7 + 19*s23^8)) + p2q^4*p3q^2*s13*
             (19*s13^4*s23^3*(s13 + s23)^3*(s13^2 - 2*s23^2) + 
              2*s12^9*(18*s13^3 + 14*s13^2*s23 + 78*s13*s23^2 + 45*s23^3) + 
              s12*s13^3*s23^2*(s13 + s23)^2*(17*s13^4 + 33*s13^3*s23 - 
                95*s13^2*s23^2 - 120*s13*s23^3 - 28*s23^4) + 
              2*s12^8*(40*s13^4 + 296*s13^3*s23 + 574*s13^2*s23^2 + 
                693*s13*s23^3 + 289*s23^4) + s12^7*(-210*s13^5 - 
                147*s13^4*s23 + 1240*s13^3*s23^2 + 2967*s13^2*s23^3 + 
                2670*s13*s23^4 + 1028*s23^5) + s12^6*(-470*s13^6 - 
                2441*s13^5*s23 - 3172*s13^4*s23^2 - 319*s13^3*s23^3 + 
                3055*s13^2*s23^4 + 2501*s13*s23^5 + 672*s23^6) - 
              s12^5*(190*s13^7 + 2279*s13^6*s23 + 6480*s13^5*s23^2 + 
                6388*s13^4*s23^3 + 1394*s13^3*s23^4 - 2008*s13^2*s23^5 - 
                1601*s13*s23^6 - 122*s23^7) + s12^2*s13^2*s23*(-22*s13^7 + 
                94*s13^6*s23 + 409*s13^5*s23^2 - 363*s13^4*s23^3 - 
                1623*s13^3*s23^4 - 962*s13^2*s23^5 + 204*s13*s23^6 + 
                199*s23^7) + s12^4*(6*s13^8 - 457*s13^7*s23 - 2924*s13^6*
                 s23^2 - 6035*s13^5*s23^3 - 5313*s13^4*s23^4 - 792*s13^3*
                 s23^5 + 1494*s13^2*s23^6 + 709*s13*s23^7 - 10*s23^8) + 
              s12^3*s13*(-20*s13^8 + 70*s13^7*s23 + 213*s13^6*s23^2 - 
                1226*s13^5*s23^3 - 3270*s13^4*s23^4 - 2744*s13^3*s23^5 - 
                99*s13^2*s23^6 + 893*s13*s23^7 + 169*s23^8))) + 
          p1q^4*s23*(p3q^2*(s12 + s23)*(-19*s13^3*s23^4*(s13 + s23)^3*(
                2*s13^2 - s23^2) + 2*s12^9*(45*s13^3 + 78*s13^2*s23 + 
                14*s13*s23^2 + 18*s23^3) - s12*s13^2*s23^3*(s13 + s23)^2*(
                28*s13^4 + 120*s13^3*s23 + 95*s13^2*s23^2 - 33*s13*s23^3 - 
                17*s23^4) + 2*s12^8*(289*s13^4 + 693*s13^3*s23 + 
                574*s13^2*s23^2 + 296*s13*s23^3 + 40*s23^4) + 
              s12^7*(1028*s13^5 + 2670*s13^4*s23 + 2967*s13^3*s23^2 + 
                1240*s13^2*s23^3 - 147*s13*s23^4 - 210*s23^5) + 
              s12^6*(672*s13^6 + 2501*s13^5*s23 + 3055*s13^4*s23^2 - 
                319*s13^3*s23^3 - 3172*s13^2*s23^4 - 2441*s13*s23^5 - 
                470*s23^6) + s12^5*(122*s13^7 + 1601*s13^6*s23 + 
                2008*s13^5*s23^2 - 1394*s13^4*s23^3 - 6388*s13^3*s23^4 - 
                6480*s13^2*s23^5 - 2279*s13*s23^6 - 190*s23^7) + 
              s12^2*s13*s23^2*(199*s13^7 + 204*s13^6*s23 - 962*s13^5*s23^2 - 
                1623*s13^4*s23^3 - 363*s13^3*s23^4 + 409*s13^2*s23^5 + 
                94*s13*s23^6 - 22*s23^7) + s12^3*s23*(169*s13^8 + 
                893*s13^7*s23 - 99*s13^6*s23^2 - 2744*s13^5*s23^3 - 
                3270*s13^4*s23^4 - 1226*s13^3*s23^5 + 213*s13^2*s23^6 + 
                70*s13*s23^7 - 20*s23^8) - s12^4*(10*s13^8 - 709*s13^7*s23 - 
                1494*s13^6*s23^2 + 792*s13^5*s23^3 + 5313*s13^4*s23^4 + 
                6035*s13^3*s23^5 + 2924*s13^2*s23^6 + 457*s13*s23^7 - 
                6*s23^8)) + p2q^2*(s13 + s23)*(19*s13^3*s23^4*(s13 + s23)^2*(
                6*s13^3 - 4*s13^2*s23 - 4*s13*s23^2 + s23^3) + 
              2*s12^9*(115*s13^3 + 102*s13^2*s23 + 88*s13*s23^2 + 7*s23^3) + 
              s12^8*(662*s13^4 + 863*s13^3*s23 + 472*s13^2*s23^2 - 
                67*s13*s23^3 - 4*s23^4) + s12^7*(672*s13^5 + 2393*s13^4*s23 + 
                829*s13^3*s23^2 - 989*s13^2*s23^3 - 1267*s13*s23^4 - 
                56*s23^5) + s12^6*(188*s13^6 + 3135*s13^5*s23 + 3344*s13^4*
                 s23^2 - 1401*s13^3*s23^3 - 4088*s13^2*s23^4 - 1646*s13*
                 s23^5 - 24*s23^6) + s12*s13^2*s23^3*(153*s13^6 + 
                496*s13^5*s23 + 83*s13^4*s23^2 - 616*s13^3*s23^3 - 
                340*s13^2*s23^4 + 33*s13*s23^5 + 17*s23^6) + s12^2*s13*s23^2*(
                -187*s13^7 + 686*s13^6*s23 + 1543*s13^5*s23^2 - 691*s13^4*
                 s23^3 - 1536*s13^3*s23^4 + 103*s13^2*s23^5 + 256*s13*s23^6 - 
                22*s23^7) + s12^5*(-142*s13^7 + 1435*s13^6*s23 + 
                5759*s13^5*s23^2 + 1401*s13^4*s23^3 - 4790*s13^3*s23^4 - 
                4127*s13^2*s23^5 - 440*s13*s23^6 + 14*s23^7) + 
              s12^3*s23*(-316*s13^8 + 192*s13^7*s23 + 3436*s13^6*s23^2 + 
                1277*s13^5*s23^3 - 2981*s13^4*s23^4 - 1604*s13^3*s23^5 + 
                639*s13^2*s23^6 + 155*s13*s23^7 - 20*s23^8) - 
              s12^4*(90*s13^8 + 282*s13^7*s23 - 3327*s13^6*s23^2 - 
                4847*s13^5*s23^3 + 1949*s13^4*s23^4 + 4886*s13^3*s23^5 + 
                896*s13^2*s23^6 - 359*s13*s23^7 + 20*s23^8)) + 
            p2q*p3q*(19*s13^3*s23^4*(s13 + s23)^3*(3*s13^3 - 8*s13^2*s23 - 
                3*s13*s23^2 + 2*s23^3) + 2*s12^10*(25*s13^3 + 31*s13^2*s23 + 
                8*s13*s23^2 + 9*s23^3) + 2*s12^9*(284*s13^4 + 707*s13^3*s23 + 
                674*s13^2*s23^2 + 371*s13*s23^3 + 41*s23^4) + 
              s12^8*(1150*s13^5 + 3273*s13^4*s23 + 4222*s13^3*s23^2 + 
                2335*s13^2*s23^3 + 310*s13*s23^4 - 140*s23^5) + 
              s12*s13^2*s23^3*(s13 + s23)^2*(85*s13^5 - 2*s13^4*s23 - 
                563*s13^3*s23^2 - 385*s13^2*s23^3 + 68*s13*s23^4 + 
                34*s23^5) + s12^7*(784*s13^6 + 3774*s13^5*s23 + 4852*s13^4*
                 s23^2 + 298*s13^3*s23^3 - 4389*s13^2*s23^4 - 3781*s13*
                 s23^5 - 640*s23^6) + s12^6*(70*s13^7 + 2798*s13^6*s23 + 
                3987*s13^5*s23^2 - 2955*s13^4*s23^3 - 14337*s13^3*s23^4 - 
                15283*s13^2*s23^5 - 6116*s13*s23^6 - 570*s23^7) + 
              s12^2*s13*s23^2*(-102*s13^8 + 611*s13^7*s23 + 1358*s13^6*
                 s23^2 - 1838*s13^5*s23^3 - 4897*s13^4*s23^4 - 2050*s13^3*
                 s23^5 + 728*s13^2*s23^6 + 320*s13*s23^7 - 44*s23^8) - 
              s12^5*(152*s13^8 - 1020*s13^7*s23 - 4477*s13^6*s23^2 + 
                1238*s13^5*s23^3 + 16635*s13^4*s23^4 + 23041*s13^3*s23^5 + 
                13977*s13^2*s23^6 + 2992*s13*s23^7 + 122*s23^8) + 
              s12^3*s23*(-200*s13^9 + 479*s13^8*s23 + 3581*s13^7*s23^2 + 
                279*s13^6*s23^3 - 9293*s13^5*s23^4 - 9760*s13^4*s23^5 - 
                2361*s13^3*s23^6 + 952*s13^2*s23^7 + 183*s13*s23^8 - 
                40*s23^9) - s12^4*(70*s13^9 + 125*s13^8*s23 - 3033*s13^7*
                 s23^2 - 3579*s13^6*s23^3 + 8053*s13^5*s23^4 + 19505*s13^4*
                 s23^5 + 14255*s13^3*s23^6 + 3466*s13^2*s23^7 + 
                14*s13*s23^8 + 28*s23^9))) - 
          p1q*(p2q^5*s13^2*(s12 + s13)*(s13 + s23)*(-19*s13^3*s23^3*
               (s13 + s23)^2*(s13^2 + s13*s23 - 4*s23^2) + 2*s12^8*(3*s13^2 + 
                s13*s23 + 5*s23^2) + s12^7*(32*s13^3 + 230*s13^2*s23 + 
                276*s13*s23^2 + 280*s23^3) + s12^6*(20*s13^4 + 375*s13^3*
                 s23 + 854*s13^2*s23^2 + 1025*s13*s23^3 + 484*s23^4) + 
              s12*s13^2*s23^2*(-17*s13^5 - 99*s13^4*s23 - 97*s13^3*s23^2 + 
                154*s13^2*s23^3 + 212*s13*s23^4 + 43*s23^5) + 
              s12^5*(-12*s13^5 + 19*s13^4*s23 + 562*s13^3*s23^2 + 
                1296*s13^2*s23^3 + 1327*s13*s23^4 + 144*s23^5) + 
              s12^4*(14*s13^6 - 191*s13^5*s23 - 495*s13^4*s23^2 + 
                362*s13^3*s23^3 + 1303*s13^2*s23^4 + 433*s13*s23^5 - 
                190*s23^6) + s12^2*s13*s23*(22*s13^6 - 107*s13^5*s23 - 
                466*s13^4*s23^2 - 80*s13^3*s23^3 + 424*s13^2*s23^4 - 
                17*s13*s23^5 - 184*s23^6) + s12^3*(20*s13^7 - 41*s13^6*s23 - 
                559*s13^5*s23^2 - 585*s13^4*s23^3 + 461*s13^3*s23^4 + 
                557*s13^2*s23^5 - 327*s13*s23^6 - 120*s23^7)) - 
            p3q^5*s12^2*(s12 + s23)*(s12^9*(86*s13^2 + 52*s23^2) + 
              s13^4*s23^3*(s13 + s23)^2*(119*s13^2 + 252*s13*s23 + 
                117*s23^2) + 2*s12^8*(249*s13^3 + 160*s13^2*s23 + 
                152*s13*s23^2 + 66*s23^3) + 2*s12^7*(456*s13^4 + 
                336*s13^3*s23 + 67*s13^2*s23^2 - 183*s13*s23^3 - 158*s23^4) + 
              s12^6*(568*s13^5 + 39*s13^4*s23 - 2042*s13^3*s23^2 - 
                3538*s13^2*s23^3 - 2833*s13*s23^4 - 920*s23^5) + 
              s12*s13^3*s23^2*(184*s13^5 + 911*s13^4*s23 + 1723*s13^3*s23^2 + 
                2362*s13^2*s23^3 + 1747*s13*s23^4 + 381*s23^5) + 
              s12^2*s13^2*s23*(35*s13^6 + 411*s13^5*s23 + 466*s13^4*s23^2 + 
                1357*s13^3*s23^3 + 1907*s13^2*s23^4 + 1785*s13*s23^5 + 
                333*s23^6) - s12^5*(78*s13^6 + 944*s13^5*s23 + 5067*s13^4*
                 s23^2 + 7773*s13^3*s23^3 + 7763*s13^2*s23^4 + 3553*s13*
                 s23^5 + 624*s23^6) - s12^3*s13*(40*s13^7 + 216*s13^6*s23 + 
                1231*s13^5*s23^2 + 3638*s13^4*s23^3 + 3654*s13^3*s23^4 + 
                2023*s13^2*s23^5 + 273*s13*s23^6 + 21*s23^7) - 
              s12^4*(186*s13^7 + 882*s13^6*s23 + 4601*s13^5*s23^2 + 
                8045*s13^4*s23^3 + 9034*s13^3*s23^4 + 4931*s13^2*s23^5 + 
                1411*s13*s23^6 + 100*s23^7)) - p2q*p3q^4*s12*
             (92*s12^11*(s13^2 + s23^2) - 2*s13^4*s23^4*(s13 + s23)^3*(
                3*s13^2 + 17*s13*s23 + 3*s23^2) + s12^10*(338*s13^3 + 
                444*s13^2*s23 + 444*s13*s23^2 + 338*s23^3) - s12*s13^3*s23^
                3*(s13 + s23)^2*(110*s13^4 - 157*s13^3*s23 - 864*s13^2*
                 s23^2 - 157*s13*s23^3 + 110*s23^4) - 2*s12^9*(145*s13^4 + 
                456*s13^3*s23 + 386*s13^2*s23^2 + 456*s13*s23^3 + 
                145*s23^4) - s12^8*(1860*s13^5 + 5705*s13^4*s23 + 
                8101*s13^3*s23^2 + 8101*s13^2*s23^3 + 5705*s13*s23^4 + 
                1860*s23^5) - 4*s12^7*(445*s13^6 + 1818*s13^5*s23 + 
                3760*s13^4*s23^2 + 3806*s13^3*s23^3 + 3760*s13^2*s23^4 + 
                1818*s13*s23^5 + 445*s23^6) + 2*s12^3*s13^2*s23^2*(
                650*s13^6 + 4722*s13^5*s23 + 9627*s13^4*s23^2 + 12298*s13^3*
                 s23^3 + 9627*s13^2*s23^4 + 4722*s13*s23^5 + 650*s23^6) + 
              s12^2*s13^2*s23^2*(-154*s13^7 + 574*s13^6*s23 + 5529*s13^5*
                 s23^2 + 9655*s13^4*s23^3 + 9655*s13^3*s23^4 + 5529*s13^2*
                 s23^5 + 574*s13*s23^6 - 154*s23^7) - 2*s12^6*(109*s13^7 + 
                1137*s13^6*s23 + 3261*s13^5*s23^2 + 4490*s13^4*s23^3 + 
                4490*s13^3*s23^4 + 3261*s13^2*s23^5 + 1137*s13*s23^6 + 
                109*s23^7) + 2*s12^5*(149*s13^8 + 836*s13^7*s23 + 
                3508*s13^6*s23^2 + 4970*s13^5*s23^3 + 7094*s13^4*s23^4 + 
                4970*s13^3*s23^5 + 3508*s13^2*s23^6 + 836*s13*s23^7 + 
                149*s23^8) + s12^4*(60*s13^9 + 1023*s13^8*s23 + 6929*s13^7*
                 s23^2 + 19307*s13^6*s23^3 + 27171*s13^5*s23^4 + 
                27171*s13^4*s23^5 + 19307*s13^3*s23^6 + 6929*s13^2*s23^7 + 
                1023*s13*s23^8 + 60*s23^9)) - p2q^2*p3q^3*
             (-19*s13^5*(s13 - 2*s23)*s23^4*(s13 + s23)^4 + s12^12*(6*s13^2 + 
                40*s23^2) - 2*s12^11*(89*s13^3 + 5*s13^2*s23 - 25*s13*s23^2 - 
                54*s23^3) - s12*s13^4*s23^3*(s13 + s23)^2*(30*s13^4 + 
                9*s13^3*s23 - 137*s13^2*s23^2 - 153*s13*s23^3 - 56*s23^4) - 
              2*s12^10*(589*s13^4 + 1440*s13^3*s23 + 1192*s13^2*s23^2 + 
                909*s13*s23^3 + 188*s23^4) - s12^9*(1570*s13^5 + 
                5683*s13^4*s23 + 7951*s13^3*s23^2 + 6380*s13^2*s23^3 + 
                3618*s13*s23^4 + 1044*s23^5) + s12^8*(410*s13^6 + 
                1016*s13^5*s23 - 1969*s13^4*s23^2 - 163*s13^3*s23^3 - 
                1251*s13^2*s23^4 + 209*s13*s23^5 - 316*s23^6) + 
              s12^2*s13^3*s23^2*(26*s13^7 - 396*s13^6*s23 - 1205*s13^5*
                 s23^2 + 1133*s13^4*s23^3 + 4791*s13^3*s23^4 + 3238*s13^2*
                 s23^5 + 83*s13*s23^6 - 280*s23^7) + s12^7*(1666*s13^7 + 
                9375*s13^6*s23 + 20979*s13^5*s23^2 + 25376*s13^4*s23^3 + 
                23699*s13^3*s23^4 + 15367*s13^2*s23^5 + 5292*s13*s23^6 + 
                776*s23^7) + s12^3*s13^2*s23*(27*s13^8 - 995*s13^7*s23 - 
                2912*s13^6*s23^2 + 3939*s13^5*s23^3 + 14263*s13^4*s23^4 + 
                16827*s13^3*s23^5 + 9114*s13^2*s23^6 + 294*s13*s23^7 - 
                427*s23^8) + s12^4*s13*s23*(-768*s13^8 - 2151*s13^7*s23 + 
                7731*s13^6*s23^2 + 28197*s13^5*s23^3 + 40956*s13^4*s23^4 + 
                31554*s13^3*s23^5 + 13475*s13^2*s23^6 + 1195*s13*s23^7 - 
                69*s23^8) + s12^6*(602*s13^8 + 6488*s13^7*s23 + 27702*s13^6*
                 s23^2 + 48034*s13^5*s23^3 + 55686*s13^4*s23^4 + 
                41508*s13^3*s23^5 + 22186*s13^2*s23^6 + 4806*s13*s23^7 + 
                572*s23^8) + s12^5*(-78*s13^9 + 147*s13^8*s23 + 9181*s13^7*
                 s23^2 + 37226*s13^6*s23^3 + 57021*s13^5*s23^4 + 
                55153*s13^4*s23^5 + 35796*s13^3*s23^6 + 11202*s13^2*s23^7 + 
                1404*s13*s23^8 + 80*s23^9)) + p2q^4*p3q*s13*
             (-19*s13^4*s23^3*(s13 + s23)^3*(2*s13^3 - 3*s13^2*s23 - 
                8*s13*s23^2 + 3*s23^3) - 2*s12^10*(9*s13^3 + 8*s13^2*s23 + 
                31*s13*s23^2 + 25*s23^3) - 2*s12^9*(41*s13^4 + 371*s13^3*
                 s23 + 674*s13^2*s23^2 + 707*s13*s23^3 + 284*s23^4) + 
              s12^8*(140*s13^5 - 310*s13^4*s23 - 2335*s13^3*s23^2 - 
                4222*s13^2*s23^3 - 3273*s13*s23^4 - 1150*s23^5) - 
              s12*s13^3*s23^2*(s13 + s23)^2*(34*s13^5 + 68*s13^4*s23 - 
                385*s13^3*s23^2 - 563*s13^2*s23^3 - 2*s13*s23^4 + 85*s23^5) + 
              s12^7*(640*s13^6 + 3781*s13^5*s23 + 4389*s13^4*s23^2 - 
                298*s13^3*s23^3 - 4852*s13^2*s23^4 - 3774*s13*s23^5 - 
                784*s23^6) + s12^6*(570*s13^7 + 6116*s13^6*s23 + 
                15283*s13^5*s23^2 + 14337*s13^4*s23^3 + 2955*s13^3*s23^4 - 
                3987*s13^2*s23^5 - 2798*s13*s23^6 - 70*s23^7) + 
              s12^2*s13^2*s23*(44*s13^8 - 320*s13^7*s23 - 728*s13^6*s23^2 + 
                2050*s13^5*s23^3 + 4897*s13^4*s23^4 + 1838*s13^3*s23^5 - 
                1358*s13^2*s23^6 - 611*s13*s23^7 + 102*s23^8) + 
              s12^5*(122*s13^8 + 2992*s13^7*s23 + 13977*s13^6*s23^2 + 
                23041*s13^5*s23^3 + 16635*s13^4*s23^4 + 1238*s13^3*s23^5 - 
                4477*s13^2*s23^6 - 1020*s13*s23^7 + 152*s23^8) + 
              s12^4*(28*s13^9 + 14*s13^8*s23 + 3466*s13^7*s23^2 + 
                14255*s13^6*s23^3 + 19505*s13^5*s23^4 + 8053*s13^4*s23^5 - 
                3579*s13^3*s23^6 - 3033*s13^2*s23^7 + 125*s13*s23^8 + 
                70*s23^9) + s12^3*s13*(40*s13^9 - 183*s13^8*s23 - 
                952*s13^7*s23^2 + 2361*s13^6*s23^3 + 9760*s13^5*s23^4 + 
                9293*s13^4*s23^5 - 279*s13^3*s23^6 - 3581*s13^2*s23^7 - 
                479*s13*s23^8 + 200*s23^9)) + p2q^3*p3q^2*
             (-19*s13^5*s23^3*(s13 + s23)^3*(s13^3 - 4*s13^2*s23 - 
                2*s13*s23^2 + 5*s23^3) + 2*s12^11*(9*s13^3 + 4*s13^2*s23 + 
                45*s13*s23^2 + 20*s23^3) + s12^10*(-42*s13^4 + 462*s13^3*
                 s23 + 832*s13^2*s23^2 + 884*s13*s23^3 + 240*s23^4) - 
              s12^9*(946*s13^5 + 2783*s13^4*s23 + 2020*s13^3*s23^2 + 
                575*s13^2*s23^3 - 392*s13*s23^4 - 360*s23^5) - 
              s12*s13^4*s23^2*(s13 + s23)^2*(17*s13^5 - 46*s13^4*s23 - 
                310*s13^3*s23^2 - 6*s13^2*s23^3 + 350*s13*s23^4 + 
                147*s23^5) - s12^8*(2010*s13^6 + 10372*s13^5*s23 + 
                16418*s13^4*s23^2 + 14833*s13^3*s23^3 + 7526*s13^2*s23^4 + 
                2513*s13*s23^5 - 20*s23^6) - s12^7*(1110*s13^7 + 
                9465*s13^6*s23 + 27930*s13^5*s23^2 + 36032*s13^4*s23^3 + 
                29118*s13^3*s23^4 + 14951*s13^2*s23^5 + 3618*s13*s23^6 + 
                300*s23^7) + 2*s12^6*(149*s13^8 + 130*s13^7*s23 - 
                6365*s13^6*s23^2 - 17672*s13^5*s23^3 - 22361*s13^4*s23^4 - 
                15736*s13^3*s23^5 - 6856*s13^2*s23^6 - 935*s13*s23^7 - 
                90*s23^8) + s12^2*s13^3*s23*(22*s13^8 - 222*s13^7*s23 + 
                146*s13^6*s23^2 + 3063*s13^5*s23^3 + 2552*s13^4*s23^4 - 
                3476*s13^3*s23^5 - 4376*s13^2*s23^6 - 749*s13*s23^7 + 
                272*s23^8) + s12^5*(258*s13^9 + 3823*s13^8*s23 + 
                7971*s13^7*s23^2 - 7851*s13^6*s23^3 - 30401*s13^5*s23^4 - 
                36587*s13^4*s23^5 - 23046*s13^3*s23^6 - 5351*s13^2*s23^7 - 
                224*s13*s23^8 - 20*s23^9) + s12^4*s13*(-6*s13^9 + 
                1020*s13^8*s23 + 7234*s13^7*s23^2 + 11058*s13^6*s23^3 - 
                2464*s13^5*s23^4 - 22252*s13^4*s23^5 - 22520*s13^3*s23^6 - 
                8863*s13^2*s23^7 + 10*s13*s23^8 + 139*s23^9) + 
              s12^3*s13^2*(20*s13^9 - 191*s13^8*s23 + 602*s13^7*s23^2 + 
                6298*s13^6*s23^3 + 7392*s13^5*s23^4 - 2990*s13^4*s23^5 - 
                12838*s13^3*s23^6 - 8682*s13^2*s23^7 - 268*s13*s23^8 + 
                473*s23^9))) + p1q^3*(-(p3q^3*(s12 + s23)*(19*s13^4*s23^5*
                (s13 + s23)^4 + 2*s12^10*(20*s13^3 + 65*s13^2*s23 + 
                 4*s13*s23^2 + 12*s23^3) + s12*s13^3*s23^4*(s13 + s23)^2*
                (11*s13^3 + 65*s13^2*s23 + 122*s13*s23^2 + 49*s23^3) + s12^9*
                (260*s13^4 + 862*s13^3*s23 + 548*s13^2*s23^2 + 284*s13*
                  s23^3 - 60*s23^4) + s12^8*(580*s13^5 + 1237*s13^4*s23 + 
                 199*s13^3*s23^2 - 1195*s13^2*s23^3 - 1915*s13*s23^4 - 
                 740*s23^5) + s12^7*(580*s13^6 + 324*s13^5*s23 - 2155*s13^4*
                  s23^2 - 6892*s13^3*s23^3 - 8292*s13^2*s23^4 - 5135*s13*
                  s23^5 - 1040*s23^6) + s12^2*s13^2*s23^3*(-359*s13^6 - 
                 955*s13^5*s23 - 44*s13^4*s23^2 + 1623*s13^3*s23^3 + 
                 1325*s13^2*s23^4 + 245*s13*s23^5 - 9*s23^6) + s12^6*
                (260*s13^7 - 284*s13^6*s23 - 4175*s13^5*s23^2 - 11465*s13^4*
                  s23^3 - 14117*s13^3*s23^4 - 10285*s13^2*s23^5 - 
                 3048*s13*s23^6 - 240*s23^7) - s12^3*s13*s23^2*(380*s13^7 + 
                 2418*s13^6*s23 + 3285*s13^5*s23^2 + 735*s13^4*s23^3 - 
                 2961*s13^3*s23^4 - 3098*s13^2*s23^5 - 600*s13*s23^6 + 
                 49*s23^7) - s12^4*s23*(19*s13^8 + 1784*s13^7*s23 + 
                 5883*s13^6*s23^2 + 8159*s13^5*s23^3 + 3520*s13^4*s23^4 - 
                 2143*s13^3*s23^5 - 2935*s13^2*s23^6 - 643*s13*s23^7 + 
                 20*s23^8) + s12^5*(40*s13^8 - 122*s13^7*s23 - 3765*s13^6*
                  s23^2 - 9852*s13^5*s23^3 - 13610*s13^4*s23^4 - 8707*s13^3*
                  s23^5 - 1280*s13^2*s23^6 + 588*s13*s23^7 + 124*s23^8))) + 
            p2q*p3q^2*(19*s13^3*s23^5*(s13 + s23)^3*(5*s13^3 - 2*s13^2*s23 - 
                4*s13*s23^2 + s23^3) - 2*s12^11*(20*s13^3 + 45*s13^2*s23 + 
                4*s13*s23^2 + 9*s23^3) - 2*s12^10*(120*s13^4 + 442*s13^3*
                 s23 + 416*s13^2*s23^2 + 231*s13*s23^3 - 21*s23^4) + 
              s12*s13^2*s23^4*(s13 + s23)^2*(147*s13^5 + 350*s13^4*s23 - 
                6*s13^3*s23^2 - 310*s13^2*s23^3 - 46*s13*s23^4 + 17*s23^5) + 
              s12^9*(-360*s13^5 - 392*s13^4*s23 + 575*s13^3*s23^2 + 
                2020*s13^2*s23^3 + 2783*s13*s23^4 + 946*s23^5) + 
              s12^8*(-20*s13^6 + 2513*s13^5*s23 + 7526*s13^4*s23^2 + 
                14833*s13^3*s23^3 + 16418*s13^2*s23^4 + 10372*s13*s23^5 + 
                2010*s23^6) + s12^7*(300*s13^7 + 3618*s13^6*s23 + 
                14951*s13^5*s23^2 + 29118*s13^4*s23^3 + 36032*s13^3*s23^4 + 
                27930*s13^2*s23^5 + 9465*s13*s23^6 + 1110*s23^7) + 
              2*s12^6*(90*s13^8 + 935*s13^7*s23 + 6856*s13^6*s23^2 + 
                15736*s13^5*s23^3 + 22361*s13^4*s23^4 + 17672*s13^3*s23^5 + 
                6365*s13^2*s23^6 - 130*s13*s23^7 - 149*s23^8) + 
              s12^2*s13*s23^3*(-272*s13^8 + 749*s13^7*s23 + 4376*s13^6*
                 s23^2 + 3476*s13^5*s23^3 - 2552*s13^4*s23^4 - 3063*s13^3*
                 s23^5 - 146*s13^2*s23^6 + 222*s13*s23^7 - 22*s23^8) + 
              s12^5*(20*s13^9 + 224*s13^8*s23 + 5351*s13^7*s23^2 + 
                23046*s13^6*s23^3 + 36587*s13^5*s23^4 + 30401*s13^4*s23^5 + 
                7851*s13^3*s23^6 - 7971*s13^2*s23^7 - 3823*s13*s23^8 - 
                258*s23^9) + s12^3*s23^2*(-473*s13^9 + 268*s13^8*s23 + 
                8682*s13^7*s23^2 + 12838*s13^6*s23^3 + 2990*s13^5*s23^4 - 
                7392*s13^4*s23^5 - 6298*s13^3*s23^6 - 602*s13^2*s23^7 + 
                191*s13*s23^8 - 20*s23^9) + s12^4*s23*(-139*s13^9 - 
                10*s13^8*s23 + 8863*s13^7*s23^2 + 22520*s13^6*s23^3 + 
                22252*s13^5*s23^4 + 2464*s13^4*s23^5 - 11058*s13^3*s23^6 - 
                7234*s13^2*s23^7 - 1020*s13*s23^8 + 6*s23^9)) + 
            p2q^3*(s13 + s23)*(-38*s13^4*s23^4*(s13 + s23)^3*(2*s13^2 - 
                5*s13*s23 + 2*s23^2) + 4*s12^9*(5*s13^4 + 102*s13^3*s23 + 
                107*s13^2*s23^2 + 102*s13*s23^3 + 5*s23^4) - s12*s13^3*s23^
                3*(s13 + s23)^2*(85*s13^4 + 118*s13^3*s23 - 580*s13^2*s23^2 + 
                118*s13*s23^3 + 85*s23^4) + s12^8*(40*s13^5 + 833*s13^4*s23 + 
                1915*s13^3*s23^2 + 1915*s13^2*s23^3 + 833*s13*s23^4 + 
                40*s23^5) + s12^7*(20*s13^6 + 40*s13^5*s23 + 3078*s13^4*
                 s23^2 + 4348*s13^3*s23^3 + 3078*s13^2*s23^4 + 40*s13*s23^5 + 
                20*s23^6) + s12^6*(20*s13^7 - 1010*s13^6*s23 + 703*s13^5*
                 s23^2 + 6157*s13^4*s23^3 + 6157*s13^3*s23^4 + 703*s13^2*
                 s23^5 - 1010*s13*s23^6 + 20*s23^7) + s12^2*s13^2*s23^2*(
                107*s13^7 - 697*s13^6*s23 - 1180*s13^5*s23^2 + 1558*s13^4*
                 s23^3 + 1558*s13^3*s23^4 - 1180*s13^2*s23^5 - 697*s13*
                 s23^6 + 107*s23^7) + s12^5*(40*s13^8 - 712*s13^7*s23 - 
                2772*s13^6*s23^2 + 3137*s13^5*s23^3 + 7822*s13^4*s23^4 + 
                3137*s13^3*s23^5 - 2772*s13^2*s23^6 - 712*s13*s23^7 + 
                40*s23^8) + s12^3*s13*s23*(136*s13^8 - 418*s13^7*s23 - 
                2910*s13^6*s23^2 + 185*s13^5*s23^3 + 4010*s13^4*s23^4 + 
                185*s13^3*s23^5 - 2910*s13^2*s23^6 - 418*s13*s23^7 + 
                136*s23^8) + s12^4*(20*s13^9 + 49*s13^8*s23 - 2409*s13^7*
                 s23^2 - 2477*s13^6*s23^3 + 5123*s13^5*s23^4 + 5123*s13^4*
                 s23^5 - 2477*s13^3*s23^6 - 2409*s13^2*s23^7 + 49*s13*s23^8 + 
                20*s23^9)) + p2q^2*p3q*(-19*s13^3*s23^4*(s13 + s23)^3*(
                3*s13^4 - 12*s13^3*s23 - 2*s13^2*s23^2 + 8*s13*s23^3 - 
                s23^4) + 2*s12^10*(10*s13^4 - 91*s13^3*s23 - 115*s13^2*
                 s23^2 - 87*s13*s23^3 + 6*s23^4) + s12^9*(240*s13^5 + 
                1273*s13^4*s23 + 2064*s13^3*s23^2 + 2309*s13^2*s23^3 + 
                1678*s13*s23^4 + 256*s23^5) - s12*s13^2*s23^3*(s13 + s23)^2*(
                68*s13^6 - 56*s13^5*s23 - 835*s13^4*s23^2 - 284*s13^3*s23^3 + 
                488*s13^2*s23^4 + 82*s13*s23^5 - 17*s23^6) + 
              s12^8*(600*s13^6 + 4510*s13^5*s23 + 9090*s13^4*s23^2 + 
                12079*s13^3*s23^3 + 10228*s13^2*s23^4 + 4577*s13*s23^5 + 
                444*s23^6) + s12^7*(580*s13^7 + 4834*s13^6*s23 + 
                15916*s13^5*s23^2 + 23944*s13^4*s23^3 + 23385*s13^3*s23^4 + 
                13267*s13^2*s23^5 + 1852*s13*s23^6 - 24*s23^7) + 
              s12^6*(240*s13^8 + 1818*s13^7*s23 + 13166*s13^6*s23^2 + 
                29009*s13^5*s23^3 + 34240*s13^4*s23^4 + 20012*s13^3*s23^5 + 
                1271*s13^2*s23^6 - 3432*s13*s23^7 - 376*s23^8) + 
              s12^4*s13*(20*s13^9 - 90*s13^8*s23 - 1847*s13^7*s23^2 + 
                4482*s13^6*s23^3 + 22952*s13^5*s23^4 + 26932*s13^4*s23^5 + 
                4238*s13^3*s23^6 - 11162*s13^2*s23^7 - 6054*s13*s23^8 - 
                365*s23^9) + s12^5*(60*s13^9 - 167*s13^8*s23 + 3045*s13^7*
                 s23^2 + 21090*s13^6*s23^3 + 35543*s13^5*s23^4 + 
                25568*s13^4*s23^5 + 1263*s13^3*s23^6 - 9816*s13^2*s23^7 - 
                3224*s13*s23^8 - 132*s23^9) + s12^2*s13*s23^2*(85*s13^9 - 
                778*s13^8*s23 - 819*s13^7*s23^2 + 4676*s13^6*s23^3 + 
                6520*s13^5*s23^4 - 1036*s13^4*s23^5 - 3669*s13^3*s23^6 - 
                378*s13^2*s23^7 + 345*s13*s23^8 - 22*s23^9) + 
              s12^3*s23*(116*s13^10 - 761*s13^9*s23 - 2657*s13^8*s23^2 + 
                5860*s13^7*s23^3 + 16454*s13^6*s23^4 + 8169*s13^5*s23^5 - 
                6406*s13^4*s23^6 - 6276*s13^3*s23^7 - 217*s13^2*s23^8 + 
                278*s13*s23^9 - 20*s23^10))) + 
          p1q^2*(p3q^4*s12*(s12 + s23)*(s13^4*s23^4*(s13 + s23)^3*(2*s13 + 
                13*s23) + s12^10*(40*s13^2 + 6*s23^2) + s12*s13^3*s23^3*
               (s13 + s23)^2*(333*s13^3 + 550*s13^2*s23 - 24*s13*s23^2 - 
                72*s23^3) + 2*s12^9*(87*s13^3 - 27*s13^2*s23 + 3*s13*s23^2 - 
                65*s23^3) + s12^8*(36*s13^4 - 1225*s13^3*s23 - 1508*s13^2*
                 s23^2 - 1617*s13*s23^3 - 670*s23^4) - s12^7*(616*s13^5 + 
                3156*s13^4*s23 + 5088*s13^3*s23^2 + 4981*s13^2*s23^3 + 
                2599*s13*s23^4 + 510*s23^5) - s12^6*(924*s13^6 + 
                3170*s13^5*s23 + 6485*s13^4*s23^2 + 5087*s13^3*s23^3 + 
                1946*s13^2*s23^4 - 940*s13*s23^5 - 500*s23^6) + 
              s12^2*s13^2*s23^2*(445*s13^6 + 2716*s13^5*s23 + 5228*s13^4*
                 s23^2 + 5784*s13^3*s23^3 + 2891*s13^2*s23^4 - 100*s13*
                 s23^5 - 164*s23^6) + s12^3*s13*s23*(64*s13^7 + 1806*s13^6*
                 s23 + 5882*s13^5*s23^2 + 11141*s13^4*s23^3 + 11418*s13^3*
                 s23^4 + 6616*s13^2*s23^5 + 1108*s13*s23^6 - 19*s23^7) + 
              s12^5*(-486*s13^7 - 1438*s13^6*s23 - 2612*s13^5*s23^2 + 
                486*s13^4*s23^3 + 4811*s13^3*s23^4 + 7429*s13^2*s23^5 + 
                3520*s13*s23^6 + 536*s23^7) + s12^4*(-80*s13^8 - 
                189*s13^7*s23 + 1654*s13^6*s23^2 + 5578*s13^5*s23^3 + 
                12005*s13^4*s23^4 + 12953*s13^3*s23^5 + 7080*s13^2*s23^6 + 
                1585*s13*s23^7 + 60*s23^8)) + p2q^4*s13*(s13 + s23)*
             (19*s13^4*s23^3*(s13 + s23)^2*(s13^3 - 4*s13^2*s23 - 
                4*s13*s23^2 + 6*s23^3) + 2*s12^9*(7*s13^3 + 88*s13^2*s23 + 
                102*s13*s23^2 + 115*s23^3) + s12^8*(-4*s13^4 - 67*s13^3*s23 + 
                472*s13^2*s23^2 + 863*s13*s23^3 + 662*s23^4) + 
              s12^7*(-56*s13^5 - 1267*s13^4*s23 - 989*s13^3*s23^2 + 
                829*s13^2*s23^3 + 2393*s13*s23^4 + 672*s23^5) + 
              s12*s13^3*s23^2*(17*s13^6 + 33*s13^5*s23 - 340*s13^4*s23^2 - 
                616*s13^3*s23^3 + 83*s13^2*s23^4 + 496*s13*s23^5 + 
                153*s23^6) + s12^6*(-24*s13^6 - 1646*s13^5*s23 - 
                4088*s13^4*s23^2 - 1401*s13^3*s23^3 + 3344*s13^2*s23^4 + 
                3135*s13*s23^5 + 188*s23^6) + s12^2*s13^2*s23*(-22*s13^7 + 
                256*s13^6*s23 + 103*s13^5*s23^2 - 1536*s13^4*s23^3 - 
                691*s13^3*s23^4 + 1543*s13^2*s23^5 + 686*s13*s23^6 - 
                187*s23^7) + s12^5*(14*s13^7 - 440*s13^6*s23 - 4127*s13^5*
                 s23^2 - 4790*s13^4*s23^3 + 1401*s13^3*s23^4 + 5759*s13^2*
                 s23^5 + 1435*s13*s23^6 - 142*s23^7) + s12^3*s13*(-20*s13^8 + 
                155*s13^7*s23 + 639*s13^6*s23^2 - 1604*s13^5*s23^3 - 
                2981*s13^4*s23^4 + 1277*s13^3*s23^5 + 3436*s13^2*s23^6 + 
                192*s13*s23^7 - 316*s23^8) - s12^4*(20*s13^8 - 359*s13^7*
                 s23 + 896*s13^6*s23^2 + 4886*s13^5*s23^3 + 1949*s13^4*
                 s23^4 - 4847*s13^3*s23^5 - 3327*s13^2*s23^6 + 282*s13*
                 s23^7 + 90*s23^8)) + p2q*p3q^3*(19*s13^4*(2*s13 - s23)*s23^
                5*(s13 + s23)^4 + s12^12*(40*s13^2 + 6*s23^2) + 
              2*s12^11*(54*s13^3 + 25*s13^2*s23 - 5*s13*s23^2 - 89*s23^3) + 
              s12*s13^3*s23^4*(s13 + s23)^2*(56*s13^4 + 153*s13^3*s23 + 
                137*s13^2*s23^2 - 9*s13*s23^3 - 30*s23^4) - 
              2*s12^10*(188*s13^4 + 909*s13^3*s23 + 1192*s13^2*s23^2 + 
                1440*s13*s23^3 + 589*s23^4) - s12^9*(1044*s13^5 + 
                3618*s13^4*s23 + 6380*s13^3*s23^2 + 7951*s13^2*s23^3 + 
                5683*s13*s23^4 + 1570*s23^5) + s12^8*(-316*s13^6 + 
                209*s13^5*s23 - 1251*s13^4*s23^2 - 163*s13^3*s23^3 - 
                1969*s13^2*s23^4 + 1016*s13*s23^5 + 410*s23^6) + 
              s12^2*s13^2*s23^3*(-280*s13^7 + 83*s13^6*s23 + 3238*s13^5*
                 s23^2 + 4791*s13^4*s23^3 + 1133*s13^3*s23^4 - 1205*s13^2*
                 s23^5 - 396*s13*s23^6 + 26*s23^7) + s12^7*(776*s13^7 + 
                5292*s13^6*s23 + 15367*s13^5*s23^2 + 23699*s13^4*s23^3 + 
                25376*s13^3*s23^4 + 20979*s13^2*s23^5 + 9375*s13*s23^6 + 
                1666*s23^7) + s12^4*s13*s23*(-69*s13^8 + 1195*s13^7*s23 + 
                13475*s13^6*s23^2 + 31554*s13^5*s23^3 + 40956*s13^4*s23^4 + 
                28197*s13^3*s23^5 + 7731*s13^2*s23^6 - 2151*s13*s23^7 - 
                768*s23^8) + s12^3*s13*s23^2*(-427*s13^8 + 294*s13^7*s23 + 
                9114*s13^6*s23^2 + 16827*s13^5*s23^3 + 14263*s13^4*s23^4 + 
                3939*s13^3*s23^5 - 2912*s13^2*s23^6 - 995*s13*s23^7 + 
                27*s23^8) + s12^6*(572*s13^8 + 4806*s13^7*s23 + 22186*s13^6*
                 s23^2 + 41508*s13^5*s23^3 + 55686*s13^4*s23^4 + 
                48034*s13^3*s23^5 + 27702*s13^2*s23^6 + 6488*s13*s23^7 + 
                602*s23^8) + s12^5*(80*s13^9 + 1404*s13^8*s23 + 11202*s13^7*
                 s23^2 + 35796*s13^6*s23^3 + 55153*s13^5*s23^4 + 
                57021*s13^4*s23^5 + 37226*s13^3*s23^6 + 9181*s13^2*s23^7 + 
                147*s13*s23^8 - 78*s23^9)) + p2q^2*p3q^2*
             (-19*s13^4*s23^4*(s13 + s23)^4*(4*s13^2 - 9*s13*s23 + 4*s23^2) - 
              2*s12^11*(33*s13^3 + 8*s13^2*s23 + 8*s13*s23^2 + 33*s23^3) - 
              s12*s13^3*s23^3*(s13 + s23)^3*(98*s13^4 + 65*s13^3*s23 - 
                405*s13^2*s23^2 + 65*s13*s23^3 + 98*s23^4) - 
              s12^10*(400*s13^4 + 1501*s13^3*s23 + 1486*s13^2*s23^2 + 
                1501*s13*s23^3 + 400*s23^4) - 2*s12^9*(93*s13^5 + 
                285*s13^4*s23 + 488*s13^3*s23^2 + 488*s13^2*s23^3 + 
                285*s13*s23^4 + 93*s23^5) + s12^2*s13^2*s23^2*(s13 + s23)^2*(
                111*s13^6 - 1171*s13^5*s23 - 513*s13^4*s23^2 + 3852*s13^3*
                 s23^3 - 513*s13^2*s23^4 - 1171*s13*s23^5 + 111*s23^6) + 
              s12^8*(1056*s13^6 + 6443*s13^5*s23 + 10839*s13^4*s23^2 + 
                14296*s13^3*s23^3 + 10839*s13^2*s23^4 + 6443*s13*s23^5 + 
                1056*s23^6) + s12^7*(1294*s13^7 + 9229*s13^6*s23 + 
                27014*s13^5*s23^2 + 38085*s13^4*s23^3 + 38085*s13^3*s23^4 + 
                27014*s13^2*s23^5 + 9229*s13*s23^6 + 1294*s23^7) + 
              s12^6*(300*s13^8 + 3239*s13^7*s23 + 22513*s13^6*s23^2 + 
                46397*s13^5*s23^3 + 58282*s13^4*s23^4 + 46397*s13^3*s23^5 + 
                22513*s13^2*s23^6 + 3239*s13*s23^7 + 300*s23^8) + 
              s12^5*(-66*s13^9 - 1338*s13^8*s23 + 2614*s13^7*s23^2 + 
                28364*s13^6*s23^3 + 50232*s13^5*s23^4 + 50232*s13^4*s23^5 + 
                28364*s13^3*s23^6 + 2614*s13^2*s23^7 - 1338*s13*s23^8 - 
                66*s23^9) + s12^3*s13*s23*(143*s13^9 - 1300*s13^8*s23 - 
                5581*s13^7*s23^2 + 1762*s13^6*s23^3 + 15638*s13^5*s23^4 + 
                15638*s13^4*s23^5 + 1762*s13^3*s23^6 - 5581*s13^2*s23^7 - 
                1300*s13*s23^8 + 143*s23^9) + s12^4*(20*s13^10 - 
                733*s13^9*s23 - 4641*s13^8*s23^2 + 1485*s13^7*s23^3 + 
                23429*s13^6*s23^4 + 38072*s13^5*s23^5 + 23429*s13^4*s23^6 + 
                1485*s13^3*s23^7 - 4641*s13^2*s23^8 - 733*s13*s23^9 + 
                20*s23^10)) + p2q^3*p3q*(19*s13^4*s23^3*(s13 + s23)^3*(
                s13^4 - 8*s13^3*s23 + 2*s13^2*s23^2 + 12*s13*s23^3 - 
                3*s23^4) + 2*s12^10*(6*s13^4 - 87*s13^3*s23 - 115*s13^2*
                 s23^2 - 91*s13*s23^3 + 10*s23^4) + s12^9*(256*s13^5 + 
                1678*s13^4*s23 + 2309*s13^3*s23^2 + 2064*s13^2*s23^3 + 
                1273*s13*s23^4 + 240*s23^5) + s12*s13^3*s23^2*(s13 + s23)^2*(
                17*s13^6 - 82*s13^5*s23 - 488*s13^4*s23^2 + 284*s13^3*s23^3 + 
                835*s13^2*s23^4 + 56*s13*s23^5 - 68*s23^6) + 
              s12^8*(444*s13^6 + 4577*s13^5*s23 + 10228*s13^4*s23^2 + 
                12079*s13^3*s23^3 + 9090*s13^2*s23^4 + 4510*s13*s23^5 + 
                600*s23^6) + s12^7*(-24*s13^7 + 1852*s13^6*s23 + 
                13267*s13^5*s23^2 + 23385*s13^4*s23^3 + 23944*s13^3*s23^4 + 
                15916*s13^2*s23^5 + 4834*s13*s23^6 + 580*s23^7) + 
              s12^6*(-376*s13^8 - 3432*s13^7*s23 + 1271*s13^6*s23^2 + 
                20012*s13^5*s23^3 + 34240*s13^4*s23^4 + 29009*s13^3*s23^5 + 
                13166*s13^2*s23^6 + 1818*s13*s23^7 + 240*s23^8) - 
              s12^2*s13^2*s23*(22*s13^9 - 345*s13^8*s23 + 378*s13^7*s23^2 + 
                3669*s13^6*s23^3 + 1036*s13^5*s23^4 - 6520*s13^4*s23^5 - 
                4676*s13^3*s23^6 + 819*s13^2*s23^7 + 778*s13*s23^8 - 
                85*s23^9) + s12^4*s23*(-365*s13^9 - 6054*s13^8*s23 - 
                11162*s13^7*s23^2 + 4238*s13^6*s23^3 + 26932*s13^5*s23^4 + 
                22952*s13^4*s23^5 + 4482*s13^3*s23^6 - 1847*s13^2*s23^7 - 
                90*s13*s23^8 + 20*s23^9) + s12^5*(-132*s13^9 - 3224*s13^8*
                 s23 - 9816*s13^7*s23^2 + 1263*s13^6*s23^3 + 25568*s13^5*
                 s23^4 + 35543*s13^4*s23^5 + 21090*s13^3*s23^6 + 
                3045*s13^2*s23^7 - 167*s13*s23^8 + 60*s23^9) + 
              s12^3*s13*(-20*s13^10 + 278*s13^9*s23 - 217*s13^8*s23^2 - 
                6276*s13^7*s23^3 - 6406*s13^6*s23^4 + 8169*s13^5*s23^5 + 
                16454*s13^4*s23^6 + 5860*s13^3*s23^7 - 2657*s13^2*s23^8 - 
                761*s13*s23^9 + 116*s23^10)))))/(54*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*s13^2*(s12 + s13)^2*s23^2*(s12 + s23)^2*
         (s13 + s23)*(p1q^3*s23*(s12 + s23)*(s13 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p3q^2*s12*(s12 + s23) + 
            p2q^2*s13*(s13 + s23) - p2q*p3q*(s23*(s13 + s23) + 
              s12*(2*s13 + s23))) - p1q*(p2q^2*(s13 + s23)*
             (s12^2 - s13*(s13 - 2*s23) + s12*s23) - p3q^2*(s12 + s23)*
             (s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p1 + p2 + p3]] + 
     ((-5*ep^3*s12*s23*(-(p2q*s13*(s12 + s13 - s23)) - 
          p1q*s23*(s12 - s13 + s23) + p3q*(s12^2 + 2*s13*s23 + 
            s12*(s13 + s23))))/(27*(p1q + p2q + p3q)*s13^2) + 
       (5*ep^2*(-(p2q^2*s13^2*s23*(s12 + s13 + s23)) - 2*p2q*p3q*s12*s13*
           (s13^2 + s12*(s13 - 4*s23) - 3*s13*s23 + 2*s23^2) + 
          p3q^2*s12*(s12^2*(2*s13 - 7*s23) + 4*s13*(s13 - 2*s23)*s23 + 
            s12*(2*s13^2 - s13*s23 - 7*s23^2)) - p1q^2*s23*
           (s23^2*(s13 + s23) - 2*s12^2*(s13 + 3*s23) + 
            s12*(-2*s13^2 + 4*s13*s23 - 5*s23^2)) + 
          2*p1q*(p2q*s13*(-(s12^2*(s13 - 3*s23)) + s23^2*(s13 + s23) - 
              s12*(s13^2 - 2*s13*s23 + 2*s23^2)) + p3q*s12*
             (s12^2*(s13 - 3*s23) + s12*(s13^2 + s13*s23 + s23^2) + 
              s23*(3*s13^2 - 5*s13*s23 + 4*s23^2)))))/
        (54*(p1q + p3q)*(p1q + p2q + p3q)*s13^2) - 
       (ep*(3*p1q^4*(s12 - s13)*s23^3*(s12 + s13 + s23) - 
          (p2q + p3q)*(5*p2q^3*(s12 - 3*s13)*s13^2*s23*(s12 + s13 + s23) - 
            p2q^2*p3q*s13*(20*s12^4 + s12^3*(59*s13 + 50*s23) + 
              s12*s13*(-15*s13^2 + 18*s13*s23 - 95*s23^2) + s12^2*(21*s13^2 + 
                10*s13*s23 - 50*s23^2) + 3*s13^2*(s13^2 + 6*s13*s23 + 
                5*s23^2)) + p3q^3*s12*(23*s12^4 + s12^3*(109*s13 + 8*s23) + 
              s12*s13*(71*s13^2 - 44*s13*s23 - 15*s23^2) + s12^2*(133*s13^2 - 
                24*s13*s23 - 15*s23^2) + 4*s13^2*(6*s13^2 - 13*s13*s23 + 
                10*s23^2)) + p2q*p3q^2*s12*(20*s12^4 + 5*s12^3*(12*s13 + 
                s23) + s12^2*(8*s13^2 - 120*s13*s23 - 15*s23^2) + 
              s12*s13*(-4*s13^2 - 139*s13*s23 + 15*s23^2) + 
              2*s13^2*(14*s13^2 - 47*s13*s23 + 55*s23^2))) + 
          p1q^3*s23*(p2q*(s12^3*(20*s13 - 3*s23) + s12^2*(-40*s13^2 - 
                23*s13*s23 + 17*s23^2) + 3*s23*(3*s13^3 + 3*s13^2*s23 - 
                5*s13*s23^2 - 5*s23^3) + s12*(20*s13^3 - 47*s13^2*s23 + 
                60*s13*s23^2 + 5*s23^3)) + p3q*(s12^3*(20*s13 - 9*s23) + 
              s12^2*(-40*s13^2 - 29*s13*s23 + 14*s23^2) + 3*s23*(s13^3 - 
                6*s13*s23^2 - 5*s23^3) + s12*(20*s13^3 - 53*s13^2*s23 + 
                60*s13*s23^2 + 8*s23^3))) - 
          p1q*(p2q^2*p3q*(-3*s13^5 + 20*s12^4*(s13 - 2*s23) + 6*s13^4*s23 + 
              84*s13^3*s23^2 + 75*s13^2*s23^3 - s12^3*(11*s13^2 + 
                340*s13*s23 + 10*s23^2) + s12*s13^2*(103*s13^2 - 
                244*s13*s23 + 296*s23^2) + 5*s12^2*(15*s13^3 - 62*s13^2*s23 + 
                22*s13*s23^2 + 6*s23^3)) + p2q^3*s13*(s12^3*(s13 - 60*s23) + 
              s12^2*(39*s13^2 - 55*s13*s23 + 30*s23^2) - 3*s13*(s13^3 + 
                s13^2*s23 - 15*s13*s23^2 - 15*s23^3) + s12*(35*s13^3 - 
                38*s13^2*s23 + 95*s13*s23^2 + 10*s23^3)) + 
            p3q^3*s12*(3*s12^4 + s12^3*(69*s13 - 66*s23) + s12^2*(73*s13^2 - 
                252*s13*s23 - 24*s23^2) + 2*s13*(12*s13^3 - 86*s13^2*s23 + 
                91*s13*s23^2 + 15*s23^3) + s12*(31*s13^3 - 198*s13^2*s23 + 
                66*s13*s23^2 + 45*s23^3)) + p2q*p3q^2*(3*s12^5 + 
              s12^4*(89*s13 - 103*s23) + s12^3*(61*s13^2 - 526*s13*s23 - 
                31*s23^2) + 6*s13^2*s23*(s13^2 + 6*s13*s23 + 5*s23^2) + 
              4*s12*s13*(23*s13^3 - 96*s13^2*s23 + 95*s13*s23^2 + 5*s23^3) + 
              s12^2*(67*s13^3 - 453*s13^2*s23 + 149*s13*s23^2 + 75*s23^3))) + 
          p1q^2*(p3q^2*(2*s12^3*(49*s13 - 30*s23)*s23 + s12^4*(-20*s13 + 
                9*s23) + 3*s13*s23^2*(s13^2 + 6*s13*s23 + 5*s23^2) + 
              s12^2*(20*s13^3 + 9*s13^2*s23 - 200*s13*s23^2 - 24*s23^3) + 
              15*s12*s23*(8*s13^3 - 15*s13^2*s23 + 4*s13*s23^2 + 3*s23^3)) + 
            p2q^2*(s12^2*s23*(31*s13^2 - 100*s13*s23 - 5*s23^2) + 
              20*s12^3*(s13^2 + 3*s13*s23 - s23^2) - 9*s13*s23*(s13^3 + 
                s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + s12*(-20*s13^4 + 
                82*s13^3*s23 - 101*s13^2*s23^2 + 80*s13*s23^3 + 15*s23^4)) + 
            p2q*p3q*(s12^4*(-20*s13 + 6*s23) + s12^3*(20*s13^2 + 
                152*s13*s23 - 77*s23^2) + s12^2*(20*s13^3 + 40*s13^2*s23 - 
                297*s13*s23^2 - 23*s23^3) + 3*s13*s23*(-2*s13^3 + s13^2*s23 + 
                23*s13*s23^2 + 20*s23^3) + s12*(-20*s13^4 + 208*s13^3*s23 - 
                317*s13^2*s23^2 + 140*s13*s23^3 + 60*s23^4)))))/
        (108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) - 
       (-3*p1q^4*s23^2*(s13*s23^2*(s13 + s23) + s12^2*(32*s13^2 + 
             16*s13*s23 + 5*s23^2) + s12*(32*s13^3 + 48*s13^2*s23 + 
             22*s13*s23^2 + 5*s23^3)) - (p2q + p3q)*
          (5*p2q^3*s13^2*s23*(12*s12^3 - 3*s13*s23*(s13 + s23) + 
             s12^2*(24*s13 + s23) + s12*(12*s13^2 - 2*s13*s23 - 11*s23^2)) + 
           p3q^3*s12*(5*s12^4*s23 - 48*s13^4*s23 + s12^3*(96*s13^2 - 25*s13*
                s23 - 10*s23^2) - 3*s12*s13*s23*(s13^2 + 6*s13*s23 + 5*
                s23^2) + s12^2*(96*s13^3 - 81*s13^2*s23 + 100*s13*s23^2 - 15*
                s23^3)) + p2q^2*p3q*s13*(-80*s12^4*s23 + 
             s12^3*s23*(-123*s13 + 70*s23) - 3*s13^2*s23*(s13^2 + 6*s13*s23 + 
               5*s23^2) + s12*s13*(96*s13^3 + 95*s13^2*s23 - 30*s13*s23^2 - 
               65*s23^3) + s12^2*(96*s13^3 + 151*s13^2*s23 + 26*s13*s23^2 - 
               10*s23^3)) + p2q*p3q^2*s12*(20*s12^4*s23 + 5*s12^3*s23*
              (-10*s13 + s23) + 6*s13^2*s23*(-15*s13^2 + 6*s13*s23 + 5*
                s23^2) - s12^2*(192*s13^3 + 282*s13^2*s23 - 250*s13*s23^2 + 
               15*s23^3) + s12*s13*(-192*s13^3 - 110*s13^2*s23 + 121*s13*
                s23^2 + 15*s23^3))) + p1q^3*s23*
          (p3q*(s12^3*(192*s13^2 + 56*s13*s23 + 45*s23^2) + 
             3*s23^2*(s13^3 - 6*s13*s23^2 - 5*s23^3) + 
             s12^2*(96*s13^3 + 80*s13^2*s23 + 69*s13*s23^2 + 50*s23^3) + 
             s12*(96*s13^4 - 136*s13^3*s23 - 373*s13^2*s23^2 - 190*s13*
                s23^3 - 10*s23^4)) + p2q*(s12^3*(96*s13^2 + 8*s13*s23 + 15*
                s23^2) + 3*s23^2*(3*s13^3 + 3*s13^2*s23 - 5*s13*s23^2 - 5*
                s23^3) + s12^2*(96*s13^3 + 80*s13^2*s23 + 63*s13*s23^2 + 35*
                s23^3) + s12*(192*s13^4 + 104*s13^3*s23 - 151*s13^2*s23^2 - 
               100*s13*s23^3 + 5*s23^4))) + 
         p1q*(p3q^3*s12*(15*s12^4*s23 + s12^3*(-192*s13^2 + 17*s13*s23 + 30*
                s23^2) + s12*s23*(-77*s13^3 + 174*s13^2*s23 + 182*s13*s23^2 - 
               45*s23^3) + 6*s13*s23*(24*s13^3 - s13^2*s23 - 6*s13*s23^2 - 5*
                s23^3) - s12^2*(192*s13^3 - 165*s13^2*s23 + 206*s13*s23^2 + 
               30*s23^3)) + p2q^2*p3q*(10*s12^4*s23*(5*s13 + 4*s23) + 
             s12^2*s23*(-89*s13^3 + 782*s13^2*s23 + 488*s13*s23^2 - 30*
                s23^3) + 3*s13^2*s23*(s13^3 - 2*s13^2*s23 - 28*s13*s23^2 - 25*
                s23^3) + s12^3*(192*s13^3 + 349*s13^2*s23 - 92*s13*s23^2 + 10*
                s23^3) + s12*s13*(-192*s13^4 + 191*s13^3*s23 + 716*s13^2*
                s23^2 + 410*s13*s23^3 - 100*s23^4)) + 
           p2q*p3q^2*(15*s12^5*s23 - 6*s13^2*s23^2*(s13^2 + 6*s13*s23 + 5*
                s23^2) + s12^4*(-96*s13^2 + 67*s13*s23 + 85*s23^2) + 
             2*s12*s13*s23*(301*s13^3 + 324*s13^2*s23 + 149*s13*s23^2 - 30*
                s23^3) + s12^3*(288*s13^3 + 723*s13^2*s23 - 298*s13*s23^2 - 5*
                s23^3) + s12^2*(384*s13^4 + 409*s13^3*s23 + 847*s13^2*s23^2 + 
               565*s13*s23^3 - 75*s23^4)) - p2q^3*s13*(17*s12^3*s13*s23 + 
             s12^2*(96*s13^3 + 191*s13^2*s23 - 259*s13*s23^2 - 90*s23^3) - 
             3*s13*s23*(s13^3 + s13^2*s23 - 15*s13*s23^2 - 15*s23^3) + 
             s12*(96*s13^4 + 75*s13^3*s23 - 230*s13^2*s23^2 - 145*s13*s23^3 + 
               70*s23^4))) + p1q^2*(p3q^2*(3*s13*s23^3*(s13^2 + 6*s13*s23 + 5*
                s23^2) - s12^4*(96*s13^2 + 8*s13*s23 + 45*s23^2) - 
             4*s12^3*(24*s13^3 - 84*s13^2*s23 + 5*s13*s23^2 + 15*s23^3) + 
             s12^2*s23*(56*s13^3 + 467*s13^2*s23 + 374*s13*s23^2 + 30*
                s23^3) + s12*s23*(192*s13^4 - 6*s13^3*s23 - 175*s13^2*s23^2 - 
               64*s13*s23^3 + 45*s23^4)) + p2q*p3q*
            (-2*s12^4*s23*(4*s13 + 15*s23) + s12^3*(192*s13^3 + 536*s13^2*
                s23 - 130*s13*s23^2 - 95*s23^3) + 3*s13*s23^2*
              (-2*s13^3 + s13^2*s23 + 23*s13*s23^2 + 20*s23^3) + 
             s12^2*(192*s13^4 + 392*s13^3*s23 + 760*s13^2*s23^2 + 323*s13*
                s23^3 - 5*s23^4) + s12*s23*(616*s13^4 + 598*s13^3*s23 - 83*
                s13^2*s23^2 - 200*s13*s23^3 + 60*s23^4)) + 
           p2q^2*(-2*s12^3*s23*(-52*s13^2 + 31*s13*s23 + 10*s23^2) - 
             9*s13*s23^2*(s13^3 + s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
             s12^2*(-96*s13^4 - 48*s13^3*s23 + 239*s13^2*s23^2 + 18*s13*
                s23^3 - 5*s23^4) + s12*(-96*s13^5 + 136*s13^4*s23 + 292*s13^3*
                s23^2 - 55*s13^2*s23^3 - 160*s13*s23^4 + 15*s23^5))))/
        (216*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       ((s12 + s13 + s23)*(3*p1q^3*(3*s12 - s13)*s23^2 + 
          (p3q*s12 - p2q*s13)^2*(29*p3q*s12 + 5*p2q*(4*s12 - 3*s23) - 
            3*p3q*(s13 + 5*s23)) + p1q^2*s23*(p2q*(-18*s12*s13 + 6*s13^2 + 
              20*s12*s23 - 15*s23^2) + p3q*(-18*s12^2 - 3*s23*(s13 + 5*s23) + 
              s12*(6*s13 + 29*s23))) + p1q*(p2q^2*s13*(9*s12*s13 - 3*s13^2 - 
              40*s12*s23 + 30*s23^2) + p3q^2*s12*(9*s12^2 + 6*s23*(s13 + 
                5*s23) - s12*(3*s13 + 58*s23)) + 2*p2q*p3q*
             (3*s13*s23*(s13 + 5*s23) - s12^2*(9*s13 + 20*s23) + 
              s12*(3*s13^2 - 29*s13*s23 + 15*s23^2))))*den[-1 + 2*ep])/
        (216*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*DS[k + p1 + p2 + p3]] + 
     ((-5*ep^3*s12*s13*(-(p2q*s13*(s12 + s13 - s23)) - 
          p1q*s23*(s12 - s13 + s23) + p3q*(s12^2 + 2*s13*s23 + 
            s12*(s13 + s23))))/(27*(p1q + p2q + p3q)*s23^2) - 
       (5*ep^2*(p1q^2*s13*s23^2*(s12 + s13 + s23) + 2*p1q*p3q*s12*s23*
           (2*s13^2 - 3*s13*s23 + s23^2 + s12*(-4*s13 + s23)) + 
          p3q^2*s12*(s12^2*(7*s13 - 2*s23) + 4*s13*(2*s13 - s23)*s23 + 
            s12*(7*s13^2 + s13*s23 - 2*s23^2)) + p2q^2*s13*
           (s13^2*(s13 + s23) - 2*s12^2*(3*s13 + s23) + 
            s12*(-5*s13^2 + 4*s13*s23 - 2*s23^2)) + 
          2*p2q*(p1q*s23*(s12^2*(-3*s13 + s23) - s13^2*(s13 + s23) + 
              s12*(2*s13^2 - 2*s13*s23 + s23^2)) + p3q*s12*
             (s12^2*(3*s13 - s23) + s13*(-4*s13^2 + 5*s13*s23 - 3*s23^2) - 
              s12*(s13^2 + s13*s23 + s23^2)))))/(54*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2) + 
       (ep*(-3*p2q^4*s13^3*(s12 - s23)*(s12 + s13 + s23) + 
          5*p1q^4*s13*(s12 - 3*s23)*s23^2*(s12 + s13 + s23) + 
          p3q^4*s12*(23*s12^4 + s12^3*(8*s13 + 109*s23) + 
            4*s23^2*(10*s13^2 - 13*s13*s23 + 6*s23^2) + 
            s12*s23*(-15*s13^2 - 44*s13*s23 + 71*s23^2) + 
            s12^2*(-15*s13^2 - 24*s13*s23 + 133*s23^2)) + 
          p2q^3*p3q*s13*(s12^3*(9*s13 - 20*s23) + s12^2*(-14*s13^2 + 
              29*s13*s23 + 40*s23^2) + 3*s13*(5*s13^3 + 6*s13^2*s23 - 
              s23^3) - s12*(8*s13^3 + 60*s13^2*s23 - 53*s13*s23^2 + 
              20*s23^3)) - p2q^2*p3q^2*(s12^4*(9*s13 - 20*s23) + 
            s12^3*(-60*s13^2 + 98*s13*s23) + 3*s13^2*s23*(5*s13^2 + 
              6*s13*s23 + s23^2) + 15*s12*s13*(3*s13^3 + 4*s13^2*s23 - 
              15*s13*s23^2 + 8*s23^3) + s12^2*(-24*s13^3 - 200*s13^2*s23 + 
              9*s13*s23^2 + 20*s23^3)) + p2q*p3q^3*s12*
           (3*s12^4 + s12^3*(-66*s13 + 69*s23) + s12^2*(-24*s13^2 - 
              252*s13*s23 + 73*s23^2) + 2*s23*(15*s13^3 + 91*s13^2*s23 - 
              86*s13*s23^2 + 12*s23^3) + s12*(45*s13^3 + 66*s13^2*s23 - 
              198*s13*s23^2 + 31*s23^3)) - p1q^3*s23*
           (p3q*(20*s12^4 + s12^3*(50*s13 + 59*s23) + s12*s23*(-100*s13^2 + 
                28*s13*s23 - 15*s23^2) + 3*s23^2*(10*s13^2 + 11*s13*s23 + 
                s23^2) + s12^2*(-50*s13^2 + 5*s13*s23 + 21*s23^2)) + 
            p2q*(s12^3*(60*s13 - s23) + s12^2*(-30*s13^2 + 55*s13*s23 - 
                39*s23^2) + 3*s23*(-15*s13^3 - 15*s13^2*s23 + s13*s23^2 + 
                s23^3) - s12*(10*s13^3 + 95*s13^2*s23 - 38*s13*s23^2 + 
                35*s23^3))) + p1q*(p3q^3*s12*(43*s12^4 + 13*s12^3*(s13 + 
                13*s23) + s12*s23^2*(-183*s13 + 67*s23) - 3*s12^2*(10*s13^2 + 
                48*s13*s23 - 47*s23^2) + 2*s23^2*(75*s13^2 - 73*s13*s23 + 
                26*s23^2)) + p2q^3*s13*(s12^3*(3*s13 - 20*s23) + 
              s12^2*(-17*s13^2 + 23*s13*s23 + 40*s23^2) + 3*s13*(5*s13^3 + 
                5*s13^2*s23 - 3*s13*s23^2 - 3*s23^3) - s12*(5*s13^3 + 
                60*s13^2*s23 - 47*s13*s23^2 + 20*s23^3)) + 
            p2q*p3q^2*(3*s12^5 + s12^4*(-103*s13 + 89*s23) + 6*s13*s23^2*(
                5*s13^2 + 6*s13*s23 + s23^2) + s12^3*(-31*s13^2 - 
                526*s13*s23 + 61*s23^2) + 4*s12*s23*(5*s13^3 + 95*s13^2*s23 - 
                96*s13*s23^2 + 23*s23^3) + s12^2*(75*s13^3 + 149*s13^2*s23 - 
                453*s13*s23^2 + 67*s23^3)) - p2q^2*p3q*
             (s12^4*(6*s13 - 20*s23) + s12^3*(-77*s13^2 + 152*s13*s23 + 
                20*s23^2) + 3*s13*s23*(20*s13^3 + 23*s13^2*s23 + s13*s23^2 - 
                2*s23^3) + s12^2*(-23*s13^3 - 297*s13^2*s23 + 40*s13*s23^2 + 
                20*s23^3) + s12*(60*s13^4 + 140*s13^3*s23 - 317*s13^2*s23^2 + 
                208*s13*s23^3 - 20*s23^4))) + 
          p1q^2*(p3q^2*(20*s12^5 + 5*s12^4*(s13 + 8*s23) + s12^2*s23*(
                65*s13^2 - 149*s13*s23 - 25*s23^2) - 3*s23^3*(5*s13^2 + 
                6*s13*s23 + s23^2) + s12*s23^2*(205*s13^2 - 112*s13*s23 + 
                43*s23^2) - s12^3*(15*s13^2 + 170*s13*s23 + 51*s23^2)) + 
            p2q*p3q*(20*s12^4*(-2*s13 + s23) - s12^3*(10*s13^2 + 
                340*s13*s23 + 11*s23^2) + s12*s23^2*(296*s13^2 - 
                244*s13*s23 + 103*s23^2) + 3*s23^2*(25*s13^3 + 28*s13^2*s23 + 
                2*s13*s23^2 - s23^3) + 5*s12^2*(6*s13^3 + 22*s13^2*s23 - 
                62*s13*s23^2 + 15*s23^3)) + p2q^2*(s12^2*s13*(5*s13^2 + 
                100*s13*s23 - 31*s23^2) + 20*s12^3*(s13^2 - 3*s13*s23 - 
                s23^2) + 9*s13*s23*(-5*s13^3 - 5*s13^2*s23 + s13*s23^2 + 
                s23^3) + s12*(-15*s13^4 - 80*s13^3*s23 + 101*s13^2*s23^2 - 
                82*s13*s23^3 + 20*s23^4)))))/(108*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (5*p1q^4*s13*s23^2*(12*s12^3 - 
           3*s13*s23*(s13 + s23) + s12^2*(s13 + 24*s23) + 
           s12*(-11*s13^2 - 2*s13*s23 + 12*s23^2)) + 3*p2q^4*s13^2*
          (s13^2*s23*(s13 + s23) + s12^2*(5*s13^2 + 16*s13*s23 + 32*s23^2) + 
           s12*(5*s13^3 + 22*s13^2*s23 + 48*s13*s23^2 + 32*s23^3)) + 
         p3q^4*s12*(5*s12^4*s13 - 48*s13*s23^4 - 3*s12*s13*s23*
            (5*s13^2 + 6*s13*s23 + s23^2) + s12^3*(-10*s13^2 - 25*s13*s23 + 
             96*s23^2) + s12^2*(-15*s13^3 + 100*s13^2*s23 - 81*s13*s23^2 + 
             96*s23^3)) + p2q*p3q^3*s12*(-15*s12^4*s13 + 
           s12^3*(-30*s13^2 - 17*s13*s23 + 192*s23^2) + 
           6*s13*s23*(5*s13^3 + 6*s13^2*s23 + s13*s23^2 - 24*s23^3) + 
           s12*s13*(45*s13^3 - 182*s13^2*s23 - 174*s13*s23^2 + 77*s23^3) + 
           s12^2*(30*s13^3 + 206*s13^2*s23 - 165*s13*s23^2 + 192*s23^3)) + 
         p2q^2*p3q^2*(-3*s13^3*s23*(5*s13^2 + 6*s13*s23 + s23^2) + 
           s12^4*(45*s13^2 + 8*s13*s23 + 96*s23^2) + 
           4*s12^3*(15*s13^3 + 5*s13^2*s23 - 84*s13*s23^2 + 24*s23^3) - 
           s12^2*s13*(30*s13^3 + 374*s13^2*s23 + 467*s13*s23^2 + 56*s23^3) + 
           s12*s13*(-45*s13^4 + 64*s13^3*s23 + 175*s13^2*s23^2 + 
             6*s13*s23^3 - 192*s23^4)) - p2q^3*p3q*s13*
          (s12^3*(45*s13^2 + 56*s13*s23 + 192*s23^2) + 
           3*s13^2*(-5*s13^3 - 6*s13^2*s23 + s23^3) + 
           s12^2*(50*s13^3 + 69*s13^2*s23 + 80*s13*s23^2 + 96*s23^3) - 
           s12*(10*s13^4 + 190*s13^3*s23 + 373*s13^2*s23^2 + 136*s13*s23^3 - 
             96*s23^4)) + p1q^3*s23*
          (-(p3q*(80*s12^4*s13 + 7*s12^3*s13*(-10*s13 + 9*s23) + 
              3*s13*s23^2*(10*s13^2 + 11*s13*s23 + s23^2) + s12^2*(10*s13^3 - 
                31*s13^2*s23 - 271*s13*s23^2 - 96*s23^3) + 
              s12*s23*(120*s13^3 + 40*s13^2*s23 - 155*s13*s23^2 - 
                96*s23^3))) + p2q*(17*s12^3*s13*s23 + 3*s13*s23*
              (15*s13^3 + 15*s13^2*s23 - s13*s23^2 - s23^3) + 
             s12^2*(-90*s13^3 - 259*s13^2*s23 + 191*s13*s23^2 + 96*s23^3) + 
             s12*(70*s13^4 - 145*s13^3*s23 - 230*s13^2*s23^2 + 75*s13*s23^3 + 
               96*s23^4))) - p1q*(p3q^3*s12*(-25*s12^4*s13 + 
             s12^3*(5*s13^2 + 75*s13*s23 - 96*s23^2) - 6*s13*s23^2*
              (5*s13^2 + 6*s13*s23 - 23*s23^2) + s12*s23^2*(-103*s13^2 + 113*
                s13*s23 + 192*s23^2) + s12^2*(30*s13^3 - 350*s13^2*s23 + 363*
                s13*s23^2 + 96*s23^3)) + p2q^3*s13*
            (s12^3*(15*s13^2 + 8*s13*s23 + 96*s23^2) + 
             3*s13^2*(-5*s13^3 - 5*s13^2*s23 + 3*s13*s23^2 + 3*s23^3) + 
             s12^2*(35*s13^3 + 63*s13^2*s23 + 80*s13*s23^2 + 96*s23^3) + 
             s12*(5*s13^4 - 100*s13^3*s23 - 151*s13^2*s23^2 + 104*s13*s23^3 + 
               192*s23^4)) + p2q*p3q^2*(15*s12^5*s13 + 
             s12^4*(85*s13^2 + 67*s13*s23 - 96*s23^2) - 6*s13^2*s23^2*
              (5*s13^2 + 6*s13*s23 + s23^2) + s12^3*(-5*s13^3 - 298*s13^2*
                s23 + 723*s13*s23^2 + 288*s23^3) + 2*s12*s13*s23*
              (-30*s13^3 + 149*s13^2*s23 + 324*s13*s23^2 + 301*s23^3) + 
             s12^2*(-75*s13^4 + 565*s13^3*s23 + 847*s13^2*s23^2 + 409*s13*
                s23^3 + 384*s23^4)) + p2q^2*p3q*
            (-2*s12^4*s13*(15*s13 + 4*s23) + 3*s13^2*s23*(20*s13^3 + 23*s13^2*
                s23 + s13*s23^2 - 2*s23^3) + s12^3*(-95*s13^3 - 130*s13^2*
                s23 + 536*s13*s23^2 + 192*s23^3) + s12^2*(-5*s13^4 + 323*
                s13^3*s23 + 760*s13^2*s23^2 + 392*s13*s23^3 + 192*s23^4) + 
             s12*s13*(60*s13^4 - 200*s13^3*s23 - 83*s13^2*s23^2 + 598*s13*
                s23^3 + 616*s23^4))) + 
         p1q^2*(p3q^2*(20*s12^5*s13 + 5*s12^4*s13*(s13 - 26*s23) - 
             3*s13*s23^3*(5*s13^2 + 6*s13*s23 + s23^2) + 
             s12^2*s23*(5*s13^3 + 147*s13^2*s23 + 41*s13*s23^2 - 96*s23^3) + 
             s12*s23^2*(-35*s13^3 + 6*s13^2*s23 + 5*s13*s23^2 + 96*s23^3) - 
             s12^3*(15*s13^3 - 320*s13^2*s23 + 405*s13*s23^2 + 192*s23^3)) - 
           p2q*p3q*(10*s12^4*s13*(4*s13 + 5*s23) + s12^2*s13*(-30*s13^3 + 488*
                s13^2*s23 + 782*s13*s23^2 - 89*s23^3) + 3*s13*s23^2*
              (-25*s13^3 - 28*s13^2*s23 - 2*s13*s23^2 + s23^3) + 
             s12^3*(10*s13^3 - 92*s13^2*s23 + 349*s13*s23^2 + 192*s23^3) + 
             s12*s23*(-100*s13^4 + 410*s13^3*s23 + 716*s13^2*s23^2 + 191*s13*
                s23^3 - 192*s23^4)) + p2q^2*(2*s12^3*s13*(10*s13^2 + 31*s13*
                s23 - 52*s23^2) + 9*s13^2*s23*(-5*s13^3 - 5*s13^2*s23 + s13*
                s23^2 + s23^3) + s12^2*(5*s13^4 - 18*s13^3*s23 - 239*s13^2*
                s23^2 + 48*s13*s23^3 + 96*s23^4) + s12*(-15*s13^5 + 160*s13^4*
                s23 + 55*s13^3*s23^2 - 292*s13^2*s23^3 - 136*s13*s23^4 + 96*
                s23^5))))/(216*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*
         s23^2*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       ((s12 + s13 + s23)*(5*p1q^3*(4*s12 - 3*s13)*s23^2 + 
          (p3q*s12 - p2q*s13)^2*(29*p3q*s12 + p2q*(9*s12 - 3*s23) - 
            3*p3q*(5*s13 + s23)) + p1q^2*s23*(p2q*(-40*s12*s13 + 30*s13^2 + 
              9*s12*s23 - 3*s23^2) + p3q*(-40*s12^2 - 3*s23*(5*s13 + s23) + 
              s12*(30*s13 + 29*s23))) + 
          p1q*(p2q^2*s13*(20*s12*s13 - 15*s13^2 - 18*s12*s23 + 6*s23^2) + 
            p3q^2*s12*(20*s12^2 + 6*s23*(5*s13 + s23) - s12*(15*s13 + 
                58*s23)) + 2*p2q*p3q*(3*s13*s23*(5*s13 + s23) - 
              s12^2*(20*s13 + 9*s23) + s12*(15*s13^2 - 29*s13*s23 + 
                3*s23^2))))*den[-1 + 2*ep])/(216*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s23^2))*Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*
        DS[k + p1 + p2 + p3]] + 
     ((ep^2*(p2q^3*s13*(2*s12 + s13)*s23*(s12 + s13 + s23) + 
          p1q^3*s13*s23*(2*s12 + s23)*(s12 + s13 + s23) + 
          p2q*p3q^2*s12^2*(-4*s12^2 - 4*s12*s13 + 8*s13^2 - 11*s12*s23 - 
            7*s13*s23 + s23^2) - p3q^3*s12^2*(4*s12^2 + s13^2 + 10*s13*s23 + 
            s23^2 + 9*s12*(s13 + s23)) + p2q^2*p3q*(s12^3*(4*s13 - 2*s23) + 
            s13^2*(s13 + s23)^2 + 2*s12^2*(4*s13^2 + 2*s13*s23 + s23^2) + 
            s12*s13*(s13^2 + 3*s13*s23 + 2*s23^2)) + 
          p1q^2*(p3q*(-2*s12^3*(s13 - 2*s23) + s23^2*(s13 + s23)^2 + 
              s12*s23*(2*s13^2 + 3*s13*s23 + s23^2) + 2*s12^2*(s13^2 + 
                2*s13*s23 + 4*s23^2)) + p2q*(4*s12^3*s23 + 2*s12^2*(s13^2 + 
                2*s13*s23 + 4*s23^2) + s12*(-2*s13^3 - 4*s13^2*s23 + s23^3) + 
              s23*(-2*s13^3 - 2*s13^2*s23 + s13*s23^2 + s23^3))) + 
          p1q*(p3q^2*s12^2*(-4*s12^2 - 11*s12*s13 + s13^2 - 4*s12*s23 - 
              7*s13*s23 + 8*s23^2) + p2q^2*(4*s12^3*s13 + 2*s12^2*(4*s13^2 + 
                2*s13*s23 + s23^2) + s12*(s13^3 - 4*s13*s23^2 - 2*s23^3) + 
              s13*(s13^3 + s13^2*s23 - 2*s13*s23^2 - 2*s23^3)) - 
            2*p2q*p3q*(2*s12^4 + 2*s12^3*(s13 + s23) + s13*s23*(s13 + s23)^
                2 - 5*s12^2*(s13^2 + s23^2) + s12*(s13^3 + 2*s13^2*s23 + 
                2*s13*s23^2 + s23^3)))))/(108*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2) + 
       (ep*(p1q^5*s23^2*(4*s12^4 - 9*s12^3*s23 + 20*s13*s23^2*(s13 + s23) + 
            s12^2*(-4*s13^2 + 3*s13*s23 - 30*s23^2) + 
            s12*s23*(20*s13^2 + 23*s13*s23 - 17*s23^2)) + 
          p1q^4*s23*(p3q*(-12*s12^5 + s12^4*(12*s13 + 211*s23) + 
              s12^3*(-4*s13^2 - 258*s13*s23 + 429*s23^2) + 20*s23^2*(-s13^3 + 
                s13^2*s23 + 3*s13*s23^2 + s23^3) + 5*s12*s23*(-4*s13^3 - 
                s13^2*s23 + 18*s13*s23^2 + 7*s23^3) + s12^2*(4*s13^3 - 
                49*s13^2*s23 - 232*s13*s23^2 + 221*s23^3)) + 
            p2q*(-8*s12^5 + s12^4*(8*s13 + 173*s23) + s12^3*(-8*s13^2 - 
                318*s13*s23 + 375*s23^2) + 20*s23^2*(-4*s13^3 - 4*s13^2*s23 + 
                s13*s23^2 + s23^3) + 3*s12*s23*(-20*s13^3 - 46*s13^2*s23 + 
                17*s13*s23^2 + 23*s23^3) + s12^2*(8*s13^3 - 95*s13^2*s23 - 
                287*s13*s23^2 + 243*s23^3))) + (p2q + p3q)*
           (p2q^4*s13^2*(4*s12^4 - 9*s12^3*s13 + 20*s13^2*s23*(s13 + s23) + 
              s12^2*(-30*s13^2 + 3*s13*s23 - 4*s23^2) + s12*s13*(-17*s13^2 + 
                23*s13*s23 + 20*s23^2)) + p2q^2*p3q^2*(8*s12^6 - 
              20*s13^3*s23*(s13 + s23)^2 - s12^5*(239*s13 + 4*s23) + 
              s12^4*(-100*s13^2 + 227*s13*s23 - 8*s23^2) + s12^3*(463*s13^3 - 
                451*s13^2*s23 + 412*s13*s23^2 + 4*s23^3) - 2*s12*s13^2*(
                7*s13^3 + 44*s13^2*s23 + 46*s13*s23^2 + 9*s23^3) + 
              2*s12^2*s13*(151*s13^3 - 363*s13^2*s23 + 166*s13*s23^2 + 
                9*s23^3)) + 2*p3q^4*s12^2*(29*s12^4 - 21*s12^3*(s13 + s23) + 
              s12^2*(-117*s13^2 + 31*s13*s23 - 117*s23^2) + 
              s13*s23*(-63*s13^2 + 94*s13*s23 - 63*s23^2) - s12*(67*s13^3 + 
                15*s13^2*s23 + 15*s13*s23^2 + 67*s23^3)) + 
            p2q*p3q^3*s12*(41*s12^5 - 2*s12^4*(183*s13 + 50*s23) + 
              s12^3*(-655*s13^2 + 121*s13*s23 - 275*s23^2) + 2*s13^2*s23*(
                -3*s13^2 - 2*s13*s23 + s23^2) + 2*s12*s13*(64*s13^3 - 
                265*s13^2*s23 + 277*s13*s23^2 - 58*s23^3) - 
              s12^2*(120*s13^3 + 327*s13^2*s23 - 323*s13*s23^2 + 
                134*s23^3)) + p2q^3*p3q*s13*(-12*s12^5 + 3*s12^4*(69*s13 + 
                4*s23) + s12^3*(438*s13^2 - 258*s13*s23 - 4*s23^2) + 
              s12*s13*(52*s13^3 + 67*s13^2*s23 - 25*s13*s23^2 - 20*s23^3) + 
              s12^2*(251*s13^3 - 235*s13^2*s23 - 45*s13*s23^2 + 4*s23^3) + 
              20*(s13^5 + 2*s13^4*s23 - s13^2*s23^3))) - 
          p1q*(p2q^4*s13*(8*s12^5 - s12^4*(173*s13 + 8*s23) + 
              s12^3*(-375*s13^2 + 318*s13*s23 + 8*s23^2) + 
              s12^2*(-243*s13^3 + 287*s13^2*s23 + 95*s13*s23^2 - 8*s23^3) - 
              20*s13^2*(s13^3 + s13^2*s23 - 4*s13*s23^2 - 4*s23^3) + 
              3*s12*s13*(-23*s13^3 - 17*s13^2*s23 + 46*s13*s23^2 + 
                20*s23^3)) + p3q^4*s12*(-99*s12^5 + 2*s12^4*(71*s13 + 
                204*s23) - 2*s13*s23^2*(s13^2 - 2*s13*s23 - 3*s23^2) + 
              s12^3*(509*s13^2 - 183*s13*s23 + 889*s23^2) + 2*s12*s23*(
                121*s13^3 - 371*s13^2*s23 + 328*s13*s23^2 - 64*s23^3) + 
              s12^2*(268*s13^3 - 293*s13^2*s23 + 357*s13*s23^2 + 
                254*s23^3)) + p2q^3*p3q*(-8*s12^6 + 2*s12^5*(199*s13 + 
                6*s23) + s12^4*(268*s13^2 - 622*s13*s23 + 4*s23^2) - 
              s12^3*(541*s13^3 - 1177*s13^2*s23 + 960*s13*s23^2 + 12*s23^3) + 
              s12*s13*(-35*s13^4 + 277*s13^3*s23 + 387*s13^2*s23^2 - 
                45*s13*s23^3 - 40*s23^4) - 2*s12^2*(209*s13^4 - 964*s13^3*
                 s23 + 503*s13^2*s23^2 + 78*s13*s23^3 - 2*s23^4) - 
              20*s13^2*(s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 4*s13*s23^3 + 
                3*s23^4)) + p2q^2*p3q^2*(-57*s12^6 + s12^5*(1095*s13 + 
                472*s23) + s12^4*(1716*s13^2 - 1351*s13*s23 + 941*s23^2) + 
              20*s13^2*s23*(4*s13^3 + 4*s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
              s12^3*(241*s13^3 + 903*s13^2*s23 - 1530*s13*s23^2 + 
                430*s23^3) + s12*s13*(34*s13^4 + 239*s13^3*s23 - 
                21*s13^2*s23^2 - 318*s13*s23^3 - 72*s23^4) + 
              s12^2*(-289*s13^4 + 2693*s13^3*s23 - 3245*s13^2*s23^2 + 
                556*s13*s23^3 + 18*s23^4)) - p2q*p3q^3*(148*s12^6 - 
              847*s12^5*(s13 + s23) + 40*s13^2*s23^2*(s13 + s23)^2 - 
              4*s12^4*(446*s13^2 - 245*s13*s23 + 446*s23^2) + 
              s12^3*(-675*s13^3 + 283*s13^2*s23 + 283*s13*s23^2 - 
                675*s23^3) + 2*s12*s13*s23*(13*s13^3 + 93*s13^2*s23 + 
                93*s13*s23^2 + 13*s23^3) + 2*s12^2*(57*s13^4 - 671*s13^3*
                 s23 + 1438*s13^2*s23^2 - 671*s13*s23^3 + 57*s23^4))) - 
          p1q^2*(p3q^3*(-49*s12^6 + 20*s13*s23^3*(s13 + s23)^2 + 
              s12^5*(104*s13 + 605*s23) + s12^4*(283*s13^2 - 348*s13*s23 + 
                755*s23^2) + s12^3*(130*s13^3 - 735*s13^2*s23 + 
                778*s13*s23^2 - 343*s23^3) + 2*s12^2*s23*(49*s13^3 - 
                443*s13^2*s23 + 628*s13*s23^2 - 215*s23^3) + 2*s12*s23^2*(
                8*s13^3 + 48*s13^2*s23 + 47*s13*s23^2 + 7*s23^3)) + 
            p2q^3*(8*s12^5*(22*s13 + s23) + s12^4*(353*s13^2 - 348*s13*s23 - 
                4*s23^2) + s12^3*(246*s13^3 + 375*s13^2*s23 - 573*s13*s23^2 - 
                8*s23^3) + 40*s13^2*s23*(2*s13^3 + 2*s13^2*s23 - 
                3*s13*s23^2 - 3*s23^3) + 2*s12*s13*(10*s13^4 + 115*s13^3*
                 s23 + 17*s13^2*s23^2 - 138*s13*s23^3 - 30*s23^4) + 
              s12^2*(89*s13^4 + 833*s13^3*s23 - 907*s13^2*s23^2 - 
                181*s13*s23^3 + 4*s23^4)) + p2q*p3q^2*(-57*s12^6 + 
              s12^5*(472*s13 + 1095*s23) + s12^4*(941*s13^2 - 1351*s13*s23 + 
                1716*s23^2) - 20*s13*s23^2*(5*s13^3 + 5*s13^2*s23 - 
                4*s13*s23^2 - 4*s23^3) + s12^3*(430*s13^3 - 1530*s13^2*s23 + 
                903*s13*s23^2 + 241*s23^3) + s12^2*(18*s13^4 + 556*s13^3*
                 s23 - 3245*s13^2*s23^2 + 2693*s13*s23^3 - 289*s23^4) + 
              s12*s23*(-72*s13^4 - 318*s13^3*s23 - 21*s13^2*s23^2 + 
                239*s13*s23^3 + 34*s23^4)) + p2q^2*p3q*(-8*s12^6 + 
              544*s12^5*(s13 + s23) + 60*s13*s23*(s13 + s23)^2*(s13^2 - 
                4*s13*s23 + s23^2) + s12^4*(1011*s13^2 - 1252*s13*s23 + 
                1011*s23^2) + 13*s12^3*(42*s13^3 - 31*s13^2*s23 - 
                31*s13*s23^2 + 42*s23^3) + s12^2*(107*s13^4 + 1192*s13^3*
                 s23 - 3414*s13^2*s23^2 + 1192*s13*s23^3 + 107*s23^4) + 
              s12*(20*s13^5 + 75*s13^4*s23 - 539*s13^3*s23^2 - 539*s13^2*
                 s23^3 + 75*s13*s23^4 + 20*s23^5))) + 
          p1q^3*(p3q^2*(8*s12^6 - s12^5*(4*s13 + 251*s23) + s12^4*(-8*s13^2 + 
                239*s13*s23 + 107*s23^2) + 20*s23^3*(-2*s13^3 - 2*s13^2*s23 + 
                s13*s23^2 + s23^3) + s12*s23^2*(-38*s13^3 - 117*s13^2*s23 - 
                21*s13*s23^2 + 38*s23^3) + s12^2*s23*(22*s13^3 + 
                287*s13^2*s23 - 961*s13*s23^2 + 553*s23^3) + s12^3*(4*s13^3 + 
                408*s13^2*s23 - 709*s13*s23^2 + 901*s23^3)) + 
            p2q*p3q*(8*s12^6 - 2*s12^5*(6*s13 + 199*s23) + s12^4*(-4*s13^2 + 
                622*s13*s23 - 268*s23^2) + s12^3*(12*s13^3 + 960*s13^2*s23 - 
                1177*s13*s23^2 + 541*s23^3) - 2*s12^2*(2*s13^4 - 
                78*s13^3*s23 - 503*s13^2*s23^2 + 964*s13*s23^3 - 209*s23^4) + 
              20*s23^2*(3*s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 
                4*s13*s23^3 + s23^4) + s12*s23*(40*s13^4 + 45*s13^3*s23 - 
                387*s13^2*s23^2 - 277*s13*s23^3 + 35*s23^4)) - 
            p2q^2*(8*s12^5*(s13 + 22*s23) + s12^4*(-4*s13^2 - 348*s13*s23 + 
                353*s23^2) - 40*s13*s23^2*(3*s13^3 + 3*s13^2*s23 - 
                2*s13*s23^2 - 2*s23^3) + s12^3*(-8*s13^3 - 573*s13^2*s23 + 
                375*s13*s23^2 + 246*s23^3) + s12^2*(4*s13^4 - 181*s13^3*s23 - 
                907*s13^2*s23^2 + 833*s13*s23^3 + 89*s23^4) + 
              s12*(-60*s13^4*s23 - 276*s13^3*s23^2 + 34*s13^2*s23^3 + 
                230*s13*s23^4 + 20*s23^5)))))/(216*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s12^2*(p1q^2*s23*(s12 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p2q*s13 - p3q*(s12 + s23)) - 
          p1q*(p3q*(s12 + s13 - s23)*(s12 + s23) + p2q*(s12^2 + 2*s13*s23 + 
              s12*(s13 + s23))))) + 
       (-(p1q^5*s13*s23^2*(102*s13*s23^3*(s13 + s23) + 
            8*s12^4*(84*s13 + s23) + 3*s12^2*s23*(336*s13^2 + 493*s13*s23 + 
              14*s23^2) + s12*s23^2*(446*s13^2 + 565*s13*s23 + 17*s23^2) + 
            s12^3*(672*s13^2 + 1688*s13*s23 + 33*s23^2))) + 
         p1q^4*s23*(p2q*(16*s12^5*s13*(42*s13 + s23) + s12^4*s13*
              (672*s13^2 + 664*s13*s23 - 311*s23^2) + 102*s13*s23^3*
              (4*s13^3 + 4*s13^2*s23 - s13*s23^2 - s23^3) + 
             3*s12*s13*s23^2*(446*s13^3 + 524*s13^2*s23 + 17*s13*s23^2 + 41*
                s23^3) + s12^2*s23*(2688*s13^4 + 2539*s13^3*s23 - 669*s13^2*
                s23^2 - 95*s13*s23^3 + 672*s23^4) + s12^3*(1344*s13^4 + 2040*
                s13^3*s23 - 478*s13^2*s23^2 + 25*s13*s23^3 + 672*s23^4)) + 
           p3q*(24*s12^5*s13*(56*s13 + s23) + s12^4*s13*(672*s13^2 + 1000*s13*
                s23 - 269*s23^2) + 102*s13*s23^3*(s13^3 - s13^2*s23 - 3*s13*
                s23^2 - s23^3) + s12*s13*s23^2*(446*s13^3 - 341*s13^2*s23 - 
               902*s13*s23^2 + 89*s23^3) + s12^2*s23*(1008*s13^4 - 1543*s13^3*
                s23 - 2902*s13^2*s23^2 - 137*s13*s23^3 + 672*s23^4) + 
             s12^3*(672*s13^4 - 656*s13^3*s23 - 2298*s13^2*s23^2 + 51*s13*
                s23^3 + 672*s23^4))) - (p2q + p3q)*
          (p2q^4*s13^2*s23*(102*s13^3*s23*(s13 + s23) + 
             8*s12^4*(s13 + 84*s23) + 3*s12^2*s13*(14*s13^2 + 493*s13*s23 + 
               336*s23^2) + s12*s13^2*(17*s13^2 + 565*s13*s23 + 446*s23^2) + 
             s12^3*(33*s13^2 + 1688*s13*s23 + 672*s23^2)) + 
           2*p3q^4*s12^2*(s13^2*s23^2*(-219*s13^2 + 554*s13*s23 - 219*
                s23^2) + s12^4*(336*s13^2 - s13*s23 + 336*s23^2) + 
             s12^2*s13*s23*(721*s13^2 + 769*s13*s23 + 721*s23^2) + 
             s12*s13*s23*(-219*s13^3 + 779*s13^2*s23 + 779*s13*s23^2 - 219*
                s23^3) + s12^3*(336*s13^3 + 603*s13^2*s23 + 603*s13*s23^2 + 
               336*s23^3)) + p2q*p3q^3*s12*(3*s12^5*s23*(5*s13 + 448*s23) + 
             4*s13^3*s23^2*(51*s13^2 + 22*s13*s23 - 29*s23^2) - 
             s12^3*s13*(2016*s13^3 + 2947*s13^2*s23 + 1507*s13*s23^2 - 2419*
                s23^3) + 2*s12*s13^2*s23*(321*s13^3 - 1124*s13^2*s23 + 586*
                s13*s23^2 - 785*s23^3) - 4*s12^4*(504*s13^3 + 161*s13^2*s23 - 
               300*s13*s23^2 - 336*s23^3) - s12^2*s13*s23*(3662*s13^3 + 2183*
                s13^2*s23 - 2191*s13*s23^2 + 1454*s23^3)) + 
           p2q^2*p3q^2*(-102*s13^4*s23^2*(s13 + s23)^2 + 16*s12^6*s23*
              (s13 + 42*s23) + 3*s12^5*s23*(-103*s13^2 - 448*s13*s23 + 224*
                s23^2) + 2*s12^2*s13^2*s23*(1163*s13^3 - 225*s13^2*s23 - 23*
                s13*s23^2 - 1066*s23^3) - 2*s12*s13^3*s23*(153*s13^3 + 93*
                s13^2*s23 + 221*s13*s23^2 + 281*s23^3) + 
             s12^4*s13*(2016*s13^3 + 688*s13^2*s23 - 4249*s13*s23^2 + 320*
                s23^3) + s12^3*s13*(2016*s13^4 + 1629*s13^3*s23 - 2311*s13^2*
                s23^2 + 200*s13*s23^3 - 1680*s23^4)) - p2q^3*p3q*s13*
            (24*s12^5*s23*(s13 + 56*s23) + s12^4*s23*(-261*s13^2 + 1672*s13*
                s23 + 672*s23^2) - 102*s13^3*s23*(s13^3 + 2*s13^2*s23 - s23^
                3) + s12*s13^2*s23*(106*s13^3 - 337*s13^2*s23 + 105*s13*
                s23^2 + 446*s23^3) + 2*s12^3*(336*s13^4 + 42*s13^3*s23 - 305*
                s13^2*s23^2 + 8*s13*s23^3 + 336*s23^4) + 
             s12^2*s13*(672*s13^4 - 95*s13^3*s23 - 1423*s13^2*s23^2 - 535*s13*
                s23^3 + 1008*s23^4))) + 
         p1q*(-(p3q^4*s12*(4*s13^2*s23^3*(-29*s13^2 + 22*s13*s23 + 
                51*s23^2) + s12^5*(2016*s13^2 + 13*s13*s23 + 672*s23^2) + 
              s12^3*s23*(3861*s13^3 + 31*s13^2*s23 - 1505*s13*s23^2 - 
                2016*s23^3) + 2*s12^4*(1008*s13^3 + 1203*s13^2*s23 + 
                281*s13*s23^2 - 672*s23^3) + 2*s12*s13*s23^2*(-1004*s13^3 + 
                1140*s13^2*s23 - 1343*s13*s23^2 + 321*s23^3) - 
              s12^2*s13*s23*(1892*s13^3 - 3749*s13^2*s23 + 625*s13*s23^2 + 
                4100*s23^3))) + p2q*p3q^3*(-204*s13^3*s23^3*(s13 + s23)^2 - 
             12*s12^6*(112*s13^2 + 5*s13*s23 + 112*s23^2) - 8*s12*s13^2*s23^2*
              (134*s13^3 + 53*s13^2*s23 + 53*s13*s23^2 + 134*s23^3) + 
             7*s12^5*(576*s13^3 + 227*s13^2*s23 + 227*s13*s23^2 + 576*
                s23^3) + s12^3*s13*s23*(12433*s13^3 + 3949*s13^2*s23 + 3949*
                s13*s23^2 + 12433*s23^3) + 16*s12^4*(336*s13^4 + 346*s13^3*
                s23 + 559*s13^2*s23^2 + 346*s13*s23^3 + 336*s23^4) - 
             2*s12^2*s13*s23*(1103*s13^4 - 4329*s13^3*s23 + 534*s13^2*s23^2 - 
               4329*s13*s23^3 + 1103*s23^4)) + p2q^4*s13*
            (16*s12^5*s23*(s13 + 42*s23) + s12^4*s23*(-311*s13^2 + 664*s13*
                s23 + 672*s23^2) - 102*s13^3*s23*(s13^3 + s13^2*s23 - 4*s13*
                s23^2 - 4*s23^3) + 3*s12*s13^2*s23*(41*s13^3 + 17*s13^2*s23 + 
               524*s13*s23^2 + 446*s23^3) + s12^3*(672*s13^4 + 25*s13^3*s23 - 
               478*s13^2*s23^2 + 2040*s13*s23^3 + 1344*s23^4) + 
             s12^2*s13*(672*s13^4 - 95*s13^3*s23 - 669*s13^2*s23^2 + 2539*s13*
                s23^3 + 2688*s23^4)) + p2q^2*p3q^2*
            (-21*s12^6*s23*(3*s13 + 32*s23) + 102*s13^3*s23^2*
              (4*s13^3 + 4*s13^2*s23 - 5*s13*s23^2 - 5*s23^3) + 
             s12^5*(3360*s13^3 + 2673*s13^2*s23 + 5518*s13*s23^2 + 4032*
                s23^3) + s12^2*s13*s23*(-8337*s13^4 + 3905*s13^3*s23 + 2689*
                s13^2*s23^2 + 10722*s13*s23^3 - 2572*s23^4) + 
             s12*s13^2*s23*(752*s13^4 - 965*s13^3*s23 + 151*s13^2*s23^2 + 6*
                s13*s23^3 - 1760*s23^4) + s12^4*(-1344*s13^4 + 2030*s13^3*
                s23 + 12509*s13^2*s23^2 + 7053*s13*s23^3 + 4704*s23^4) + 
             s12^3*s13*(-4704*s13^4 + 2301*s13^3*s23 + 5213*s13^2*s23^2 + 
               5310*s13*s23^3 + 13684*s23^4)) + p2q^3*p3q*
            (-16*s12^6*s13*s23 + 2*s12^5*s23*(355*s13^2 + 2024*s13*s23 + 672*
                s23^2) + s12*s13^2*s23*(875*s13^4 + 239*s13^3*s23 + 2221*
                s13^2*s23^2 + 1557*s13*s23^3 - 892*s23^4) - 
             102*s13^3*s23*(s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 4*s13*
                s23^3 + 3*s23^4) + s12^4*(-2688*s13^4 - 1630*s13^3*s23 + 6688*
                s13^2*s23^2 + 3712*s13*s23^3 + 1344*s23^4) + 
             s12^3*s13*(-1344*s13^4 - 2167*s13^3*s23 + 1867*s13^2*s23^2 + 
               5628*s13*s23^3 + 6704*s23^4) + 2*s12^2*s13*(672*s13^5 - 2105*
                s13^4*s23 - 543*s13^3*s23^2 + 2677*s13^2*s23^3 + 3947*s13*
                s23^4 - 504*s23^5))) + 
         p1q^3*(p3q^2*(-16*s12^6*s13*(42*s13 + s23) + 3*s12^5*s13*
              (-224*s13^2 + 896*s13*s23 + 111*s23^2) + s12^4*s23*
              (352*s13^3 + 5921*s13^2*s23 - 949*s13*s23^2 - 2016*s23^3) + 
             102*s13*s23^4*(2*s13^3 + 2*s13^2*s23 - s13*s23^2 - s23^3) + 
             s12*s13*s23^3*(1008*s13^3 + 547*s13^2*s23 - 151*s13*s23^2 + 412*
                s23^3) + s12^3*s23*(2352*s13^4 - 184*s13^3*s23 + 1701*s13^2*
                s23^2 - 1545*s13*s23^3 - 1344*s23^4) + s12^2*s23^2*
              (3140*s13^4 - 489*s13^3*s23 - 973*s13^2*s23^2 - 2421*s13*
                s23^3 + 672*s23^4)) + p2q*p3q*(-16*s12^6*s13*s23 + 
             2*s12^5*s13*(672*s13^2 + 2024*s13*s23 + 355*s23^2) + 
             s12^3*s23*(6704*s13^4 + 5628*s13^3*s23 + 1867*s13^2*s23^2 - 2167*
                s13*s23^3 - 1344*s23^4) + 2*s12^4*(672*s13^4 + 1856*s13^3*
                s23 + 3344*s13^2*s23^2 - 815*s13*s23^3 - 1344*s23^4) - 
             102*s13*s23^3*(3*s13^4 - 4*s13^3*s23 - 12*s13^2*s23^2 - 4*s13*
                s23^3 + s23^4) + s12*s13*s23^2*(-892*s13^4 + 1557*s13^3*s23 + 
               2221*s13^2*s23^2 + 239*s13*s23^3 + 875*s23^4) + 
             2*s12^2*s23*(-504*s13^5 + 3947*s13^4*s23 + 2677*s13^3*s23^2 - 
               543*s13^2*s23^3 - 2105*s13*s23^4 + 672*s23^5)) + 
           p2q^2*(16*s12^5*s13*s23*(43*s13 + 23*s23) - 204*s13^2*s23^3*
              (3*s13^3 + 3*s13^2*s23 - 2*s13*s23^2 - 2*s23^3) - 
             2*s12*s13*s23^2*(669*s13^4 + 663*s13^3*s23 + 17*s13^2*s23^2 - 98*
                s13*s23^3 - 223*s23^4) - s12^3*s13*(672*s13^4 + 352*s13^3*
                s23 - 367*s13^2*s23^2 + 25*s13*s23^3 + 528*s23^4) - 
             s12^4*(672*s13^4 + 672*s13^3*s23 - 934*s13^2*s23^2 + 639*s13*
                s23^3 + 672*s23^4) + s12^2*s23*(-2352*s13^5 + 31*s13^4*s23 + 
               1369*s13^3*s23^2 - 563*s13^2*s23^3 - 1763*s13*s23^4 + 672*
                s23^5))) + p1q^2*(p3q^3*(102*s13^2*s23^4*(s13 + s23)^2 - 
             s12^6*s13*(2016*s13 + 31*s23) + s12^4*s13*s23*(-2739*s13^2 + 
               5756*s13*s23 + 2259*s23^2) + 2*s12^2*s13*s23^2*
              (1851*s13^3 - 563*s13^2*s23 + 1349*s13*s23^2 - 1484*s23^3) + 
             6*s12*s13*s23^3*(113*s13^3 + 59*s13^2*s23 - 3*s13*s23^2 + 51*
                s23^3) + s12^5*(-2016*s13^3 + 144*s13^2*s23 + 953*s13*s23^2 + 
               2016*s23^3) + s12^3*s23*(3134*s13^4 - 2391*s13^3*s23 + 4494*
                s13^2*s23^2 + 2033*s13*s23^3 - 2016*s23^4)) + 
           p2q*p3q^2*(-21*s12^6*s13*(32*s13 + 3*s23) - 102*s13^2*s23^3*
              (5*s13^3 + 5*s13^2*s23 - 4*s13*s23^2 - 4*s23^3) + 
             s12^5*(4032*s13^3 + 5518*s13^2*s23 + 2673*s13*s23^2 + 3360*
                s23^3) + s12^2*s13*s23*(-2572*s13^4 + 10722*s13^3*s23 + 2689*
                s13^2*s23^2 + 3905*s13*s23^3 - 8337*s23^4) + 
             s12^3*s23*(13684*s13^4 + 5310*s13^3*s23 + 5213*s13^2*s23^2 + 
               2301*s13*s23^3 - 4704*s23^4) + s12^4*(4704*s13^4 + 7053*s13^3*
                s23 + 12509*s13^2*s23^2 + 2030*s13*s23^3 - 1344*s23^4) + 
             s12*s13*s23^2*(-1760*s13^4 + 6*s13^3*s23 + 151*s13^2*s23^2 - 965*
                s13*s23^3 + 752*s23^4)) + p2q^3*(16*s12^5*s13*s23*
              (23*s13 + 43*s23) + 204*s13^3*s23^2*(2*s13^3 + 2*s13^2*s23 - 3*
                s13*s23^2 - 3*s23^3) + 2*s12*s13^2*s23*(223*s13^4 + 98*s13^3*
                s23 - 17*s13^2*s23^2 - 663*s13*s23^3 - 669*s23^4) - 
             s12^3*s23*(528*s13^4 + 25*s13^3*s23 - 367*s13^2*s23^2 + 352*s13*
                s23^3 + 672*s23^4) - s12^4*(672*s13^4 + 639*s13^3*s23 - 934*
                s13^2*s23^2 + 672*s13*s23^3 + 672*s23^4) + 
             s12^2*s13*(672*s13^5 - 1763*s13^4*s23 - 563*s13^3*s23^2 + 1369*
                s13^2*s23^3 + 31*s13*s23^4 - 2352*s23^5)) - 
           p2q^2*p3q*(32*s12^6*s13*s23 - 306*s13^2*s23^2*(s13 + s23)^2*
              (s13^2 - 4*s13*s23 + s23^2) - 6*s12^5*(224*s13^3 + 397*s13^2*
                s23 + 397*s13*s23^2 + 224*s23^3) + 9*s12^4*(224*s13^4 + 103*
                s13^3*s23 - 484*s13^2*s23^2 + 103*s13*s23^3 + 224*s23^4) + 
             s12^2*s13*s23*(7695*s13^4 - 1086*s13^3*s23 - 2446*s13^2*s23^2 - 
               1086*s13*s23^3 + 7695*s23^4) + s12*s13*s23*(-446*s13^5 + 2091*
                s13^4*s23 + 1647*s13^3*s23^2 + 1647*s13^2*s23^3 + 2091*s13*
                s23^4 - 446*s23^5) + s12^3*(3360*s13^5 + 58*s13^4*s23 + 575*
                s13^3*s23^2 + 575*s13^2*s23^3 + 58*s13*s23^4 + 3360*s23^5))))/
        (432*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12^2*s13*s23*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       ((s12 + s13 + s23)*(p1q^3*(17*s12 - 58*s13)*s23^2 + 
          (p3q*s12 - p2q*s13)^2*(34*p3q*s12 + p2q*(17*s12 - 58*s23) - 
            58*p3q*(s13 + s23)) + p1q^2*s23*(-34*p3q*s12^2 + 
            17*p2q*s12*(-2*s13 + s23) - 58*p3q*s23*(s13 + s23) + 
            2*p3q*s12*(58*s13 + 17*s23) + 58*p2q*(2*s13^2 - s23^2)) + 
          p1q*(p3q^2*s12*(17*s12^2 + 116*s23*(s13 + s23) - 2*s12*(29*s13 + 
                34*s23)) - 2*p2q*p3q*(17*s12^2*(s13 + s23) - 
              58*s13*s23*(s13 + s23) + s12*(-58*s13^2 + 34*s13*s23 - 
                58*s23^2)) + p2q^2*s13*(17*s12*(s13 - 2*s23) - 
              58*(s13^2 - 2*s23^2))))*den[-1 + 2*ep])/(432*(p1q + p3q)*
         (p2q + p3q)*(p1q + p2q + p3q)*s12^2))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]] + 
     ((ep^2*p1q*(s12 + s13 + s23)*(p2q*s13 + p3q*(s12 + 2*s13) - p1q*s23))/
        (54*(p1q + p2q + p3q)*s23) - 
       (ep*p1q*(-4*p2q^4*s13^2*(s12 + s13 + s23) + 2*p1q^4*s23*
           (s12 + s13 + s23)^2 + p2q^3*p3q*s13*(6*s12^2 + 19*s12*s13 + 
            13*s13^2 + 8*s12*s23 + 15*s13*s23 + 2*s23^2) + 
          p3q^4*(15*s12^3 + s12^2*(15*s13 + 118*s23) + 
            s12*s23*(107*s13 + 187*s23) + 4*s23*(s13^2 + 22*s13*s23 + 
              21*s23^2)) - p2q^2*p3q^2*(2*s12^3 + 30*s12^2*s13 + 
            s12*(13*s13^2 + 125*s13*s23 - 2*s23^2) + 
            3*s13*(-5*s13^2 + 28*s13*s23 + 33*s23^2)) - 
          p1q^3*(s12 + s13 + s23)*(p3q*(2*s12^2 - 2*s12*s13 - 69*s12*s23 - 
              10*s13*s23 - 67*s23^2) - p2q*(2*s12*s13 - 2*s13^2 + 
              65*s12*s23 + 2*s13*s23 + 61*s23^2)) + 
          p2q*p3q^3*(15*s12^3 + s12^2*(-15*s13 + 122*s23) + 
            s23*(-95*s13^2 - 11*s13*s23 + 84*s23^2) + 
            s12*(-30*s13^2 - 18*s13*s23 + 191*s23^2)) + 
          p1q^2*(s12 + s13 + s23)*(-(p2q^2*(23*s12*s13 + 4*s13^2 - 2*s12*
                s23 + 82*s13*s23 + 2*s23^2)) + p2q*p3q*(19*s12^2 - 
              17*s12*s13 - 6*s13^2 + 241*s12*s23 - 74*s13*s23 + 206*s23^2) + 
            p3q^2*(13*s12^2 + 2*s12*s13 + 239*s12*s23 + 16*s13*s23 + 
              214*s23^2)) + p1q*(s12 + s13 + s23)*
           (p2q^3*s13*(2*s12 + 21*s13 + 6*s23) - p2q^2*p3q*
             (2*s12^2 + 59*s12*s13 - 15*s13^2 - 4*s12*s23 + 181*s13*s23 + 
              2*s23^2) + p2q*p3q^2*(34*s12^2 - 53*s12*s13 - 4*s13^2 + 
              283*s12*s23 - 175*s13*s23 + 229*s23^2) + 
            p3q^3*(30*s12^2 + 275*s12*s23 + s23*(12*s13 + 233*s23)))))/
        (108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p1q*(p1q^5*s13*s23*(s12 + s13 + s23)^2 - p1q^4*(s12 + s13 + s23)*
           (p2q*(s13^3 - s13^2*s23 + 84*s23^3 - s12*s13*(s13 + 44*s23)) + 
            p3q*(s12^2*s13 - s12*s13*(s13 + 45*s23) - 2*s23*(2*s13^2 + 
                s13*s23 - 42*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p2q^2*(-2*s13^3 + 3*s13^2*s23 + 125*s13*s23^2 - 84*s23^3 + 
              s12*s13*(2*s13 + 85*s23)) - 2*p2q*p3q*(s12^2*s13 + s13^3 - 
              3*s13^2*s23 - 83*s13*s23^2 + 126*s23^3 - 3*s12*(s13^2 + 
                36*s13*s23 + 28*s23^2)) + p3q^2*(-4*s12^2*s13 + 
              s23*(5*s13^2 + 43*s13*s23 - 168*s23^2) + s12*(2*s13^2 + 
                131*s13*s23 + 168*s23^2))) - 
          p3q*(2*p2q^4*s13^2*(s12 + s13 + s23)*(s13 + 42*s23) + 
            p2q^3*p3q*s13*(3*s13^3 + 128*s13^2*s23 + 41*s13*s23^2 - 
              84*s23^3 - 3*s12^2*(s13 + 56*s23) - 2*s12*s23*(23*s13 + 
                126*s23)) + 2*p3q^4*(-21*s12*s13*s23^2 - 21*s13*s23^2*(s13 + 
                s23) + s12^3*(s13 + 42*s23) + s12^2*(s13^2 + 43*s13*s23 + 
                42*s23^2)) + 2*p2q*p3q^3*(-63*s13*s23^2*(s13 + s23) + 
              s12^3*(s13 + 84*s23) + s12^2*(-s13^2 + 21*s13*s23 + 84*s23^2) - 
              s12*s13*(2*s13^2 + 66*s13*s23 + 127*s23^2)) + 
            p2q^2*p3q^2*(s12^3*(s13 + 84*s23) + s12^2*(-4*s13^2 - 
                210*s13*s23 + 84*s23^2) - s12*s13*(3*s13^2 + 258*s13*s23 + 
                463*s23^2) + 2*s13*(s13^3 + 22*s13^2*s23 - 63*s13*s23^2 - 
                84*s23^3))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*s13*(s12*(s13 + 84*s23) - 3*(s13^2 + 13*s13*s23 - 
                56*s23^2)) + p3q^3*(-7*s12^2*(s13 + 12*s23) + 
              2*s23*(s13^2 + 63*s13*s23 - 42*s23^2) + s12*(s13^2 + 
                131*s13*s23 + 336*s23^2)) - p2q*p3q^2*(s13^3 + 77*s13^2*s23 - 
              374*s13*s23^2 + 168*s23^3 + 6*s12^2*(s13 + 14*s23) - 
              s12*(11*s13^2 + 344*s13*s23 + 504*s23^2)) + 
            p2q^2*p3q*(-(s12^2*s13) + 3*s12*(3*s13^2 + 99*s13*s23 + 
                56*s23^2) - 2*(2*s13^3 + 58*s13^2*s23 - 209*s13*s23^2 + 
                42*s23^3))) + p1q*(-2*p2q^4*s13^2*(s12 + s13 + s23)*
             (s13 + 42*s23) - 2*p2q^3*p3q*s13*(3*s13^3 + 169*s13^2*s23 + 
              124*s13*s23^2 - 42*s23^3 - 2*s12^2*(s13 + 21*s23) + 
              s12*(s13^2 + 122*s13*s23 - 84*s23^2)) - 
            2*p3q^4*(-63*s13*s23^2*(s13 + s23) + 3*s12^3*(s13 + 28*s23) + 
              s12^2*s13*(3*s13 + 65*s23) - s12*s23*(22*s13^2 + 169*s13*s23 + 
                84*s23^2)) + p2q^2*p3q^2*(-2*s12^3*(s13 + 42*s23) + 
              s12^2*(10*s13^2 + 253*s13*s23 + 84*s23^2) - s13*(4*s13^3 + 
                333*s13^2*s23 + 36*s13*s23^2 - 293*s23^3) + 2*s12*(4*s13^3 + 
                11*s13^2*s23 + 400*s13*s23^2 + 84*s23^3)) + 
            2*p2q*p3q^3*(-3*s12^3*(s13 + 42*s23) + s12^2*(2*s13^2 + 
                21*s13*s23 + 42*s23^2) + s13*s23*(-41*s13^2 + 126*s13*s23 + 
                167*s23^2) + s12*(5*s13^3 + 114*s13^2*s23 + 485*s13*s23^2 + 
                168*s23^3)))))/(54*(p1q + p3q)^2*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*Eik[k]] + 
     ((-5*ep^2*p3q*(s12 + s13 + s23)*(p3q*s12*(s12 + s13) - 
          p2q*s13*(s12 + s13) + p1q*(-s12 + s13)*s23))/(27*(p1q + p2q + p3q)*
         s12*s23) - (ep*p3q*(s12 + s13 + s23)*(20*p2q^4*s12*s13^2 - 
          10*p1q^4*s12*s23*(s12 + s13 + s23) + p2q^3*p3q*s13*
           (-30*s12^2 + 60*s12*s13 + 10*s13^2 - 10*s12*s23 + 3*s13*s23) + 
          p3q^4*s12*(30*s12^2 - 10*s12*s13 + 19*s12*s23 - 30*s13*s23 + 
            9*s23^2) + p2q*p3q^3*(30*s12^3 - s12^2*(90*s13 + s23) - 
            s13*s23*(10*s13 + 3*s23) + s12*s23*(-92*s13 + 9*s23)) + 
          p2q^2*p3q^2*(10*s12^3 + 2*s12*s13*(25*s13 - 31*s23) - 
            10*s12^2*(9*s13 + s23) + s13*(10*s13^2 - 7*s13*s23 - 3*s23^2)) + 
          p1q^3*(p3q*(10*s12^3 - 5*s12*s23*(8*s13 + s23) + s23^2*(10*s13 + 
                3*s23) - 2*s12^2*(5*s13 + 9*s23)) + 
            p2q*(2*s12^2*(-5*s13 + s23) + s23^2*(10*s13 + 3*s23) + 
              5*s12*(2*s13^2 + 5*s23^2))) + 
          p1q*(p2q^3*s13*(-10*s12^2 + 20*s12*s13 + 10*s13^2 - 30*s12*s23 + 
              3*s13*s23) + p3q^3*(60*s12^3 - 20*s12^2*(s13 - s23) + 
              s23^2*(10*s13 + 3*s23) + s12*s23*(-70*s13 + 23*s23)) + 
            p2q^2*p3q*(10*s12^3 - 20*s12^2*(3*s13 + s23) + s13*(10*s13^2 - 
                27*s13*s23 - 9*s23^2) + s12*(40*s13^2 - 107*s13*s23 + 
                10*s23^2)) + p2q*p3q^2*(40*s12^3 - 10*s12^2*(11*s13 + 
                2*s23) + s23*(-30*s13^2 + s13*s23 + 3*s23^2) + 
              s12*(10*s13^2 - 147*s13*s23 + 43*s23^2))) + 
          p1q^2*(p3q^2*(40*s12^3 + 2*s23^2*(10*s13 + 3*s23) - 
              s12^2*(20*s13 + 7*s23) + s12*s23*(-70*s13 + 19*s23)) - 
            p2q^2*(10*s12^2*(s13 + s23) + 2*s13*s23*(10*s13 + 3*s23) - 
              5*s12*(2*s13^2 - 9*s13*s23 + 2*s23^2)) + 
            p2q*p3q*(10*s12^3 - s12^2*(50*s13 + 17*s23) + 2*s23*(-10*s13^2 + 
                7*s13*s23 + 3*s23^2) + s12*(20*s13^2 - 75*s13*s23 + 
                59*s23^2)))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (p3q*(-5*p1q^5*s13*s23*(s12 + s13 + s23)^2 + p1q^4*(s12 + s13 + s23)*
           (-(p2q*(-5*s13^3 + 5*s13^2*s23 + 12*s23^3 + s12*s13*(5*s13 + 
                 4*s23))) + p3q*(5*s12^2*s13 - s12*s13*(5*s13 + 9*s23) - 
              2*s23*(10*s13^2 + 5*s13*s23 + 6*s23^2))) - 
          p1q^3*(s12 + s13 + s23)*(-2*p2q*p3q*(5*s12^2*s13 - 15*s12*s13^2 + 
              5*s13^3 - 15*s13^2*s23 + 12*s12*s23^2 + 17*s13*s23^2 - 
              18*s23^3) + p2q^2*(-10*s13^3 + s12*s13*(10*s13 - 7*s23) + 
              15*s13^2*s23 - 23*s13*s23^2 + 12*s23^3) + 
            p3q^2*(-20*s12^2*s13 + s12*(10*s13^2 + 7*s13*s23 - 24*s23^2) + 
              s23*(25*s13^2 - s13*s23 + 24*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*s13*(-5*s12*s13 + 15*s13^2 + 12*s12*s23 - 21*s13*s23 + 
              24*s23^2) + p2q^2*p3q*(5*s12^2*s13 + 20*s13^3 - 68*s13^2*s23 + 
              70*s13*s23^2 - 12*s23^3 + s12*(-45*s13^2 + 27*s13*s23 + 
                24*s23^2)) + p3q^3*(s12^2*(35*s13 - 12*s23) - 
              2*s23*(5*s13^2 - 9*s13*s23 + 6*s23^2) + s12*(-5*s13^2 - 
                7*s13*s23 + 48*s23^2)) + p2q*p3q^2*(5*s13^3 + 
              6*s12^2*(5*s13 - 2*s23) - 47*s13^2*s23 + 74*s13*s23^2 - 
              24*s23^3 + s12*(-55*s13^2 + 8*s13*s23 + 72*s23^2))) + 
          p3q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*(s12 + s13 + s23) + 
            p2q^3*p3q*s13*(15*s13^3 - 3*s12^2*(5*s13 - 8*s23) - 8*s13^2*s23 - 
              11*s13*s23^2 + 12*s23^3 + 2*s12*s23*(-7*s13 + 18*s23)) + 
            2*p3q^4*(s12^3*(5*s13 - 6*s23) + 3*s12*s13*s23^2 + 
              3*s13*s23^2*(s13 + s23) + s12^2*(5*s13^2 - s13*s23 - 
                6*s23^2)) + 2*p2q*p3q^3*(s12^3*(5*s13 - 12*s23) + 
              9*s13*s23^2*(s13 + s23) - s12^2*(5*s13^2 + 3*s13*s23 + 
                12*s23^2) + s12*s13*(-10*s13^2 - 6*s13*s23 + 13*s23^2)) + 
            p2q^2*p3q^2*(s12^3*(5*s13 - 12*s23) - 2*s12^2*(10*s13^2 - 
                15*s13*s23 + 6*s23^2) + s12*s13*(-15*s13^2 + 6*s13*s23 + 
                61*s23^2) + 2*s13*(5*s13^3 + 2*s13^2*s23 + 9*s13*s23^2 + 
                12*s23^3))) + p1q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*
             (s12 + s13 + s23) + 2*p2q^3*p3q*s13*(15*s13^3 - 19*s13^2*s23 - 
              28*s13*s23^2 + 6*s23^3 + s12^2*(-10*s13 + 6*s23) + 
              s12*(5*s13^2 - 38*s13*s23 + 12*s23^2)) + 
            2*p3q^4*(3*s12^3*(5*s13 - 4*s23) + 9*s13*s23^2*(s13 + s23) + 
              s12^2*s13*(15*s13 + s23) + s12*s23*(-2*s13^2 + 19*s13*s23 + 
                12*s23^2)) + 2*p2q*p3q^3*(3*s12^3*(5*s13 - 6*s23) + 
              s12^2*(-10*s13^2 + 3*s13*s23 + 6*s23^2) + s13*s23*(-11*s13^2 + 
                18*s13*s23 + 29*s23^2) + s12*(-25*s13^3 - 30*s13^2*s23 + 
                59*s13*s23^2 + 24*s23^3)) + p2q^2*p3q^2*
             (2*s12^3*(5*s13 - 6*s23) + s12^2*(-50*s13^2 + 31*s13*s23 + 
                12*s23^2) - 2*s12*(20*s13^3 + 55*s13^2*s23 - 52*s13*s23^2 - 
                12*s23^3) + s13*(20*s13^3 - 63*s13^2*s23 - 36*s13*s23^2 + 
                47*s23^3)))))/(27*(p1q + p3q)^2*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(-(p2q*s13) + p1q*s23 + p3q*(s12 + 2*s23)))/
        (54*(p1q + p2q + p3q)*s13) - 
       (ep*p2q*(-4*p1q^4*s23^2*(s12 + s13 + s23) + p1q^3*s23*
           (s12 + s13 + s23)*(p3q*(6*s12 + 2*s13 + 13*s23) + 
            p2q*(2*s12 + 6*s13 + 21*s23)) + p1q*(s12 + s13 + s23)*
           (p3q^3*(15*s12^2 + 107*s12*s13 + 84*s13^2 - 30*s12*s23 - 
              95*s13*s23) + p2q^2*p3q*(19*s12^2 + 241*s12*s13 + 206*s13^2 - 
              17*s12*s23 - 74*s13*s23 - 6*s23^2) + p2q*p3q^2*
             (34*s12^2 + 283*s12*s13 + 229*s13^2 - 53*s12*s23 - 175*s13*s23 - 
              4*s23^2) + p2q^3*(65*s12*s13 + 61*s13^2 + 2*s12*s23 + 
              2*s13*s23 - 2*s23^2)) - p1q^2*(s12 + s13 + s23)*
           (p3q^2*(2*s12^2 - 2*s12*s13 + 28*s12*s23 + 99*s13*s23 - 
              15*s23^2) + p2q*p3q*(2*s12^2 - 4*s12*s13 + 2*s13^2 + 
              59*s12*s23 + 181*s13*s23 - 15*s23^2) + 
            p2q^2*(-2*s12*s13 + 2*s13^2 + 23*s12*s23 + 82*s13*s23 + 
              4*s23^2)) + (p2q + p3q)*(2*p2q^3*s13*(s12 + s13 + s23)^2 + 
            p3q^3*(15*s12^3 + s12^2*(118*s13 + 15*s23) + s12*s13*(187*s13 + 
                107*s23) + 4*s13*(21*s13^2 + 22*s13*s23 + s23^2)) + 
            p2q^2*p3q*(-2*s12^3 + 65*s12^2*s13 + s12*(132*s13^2 + 
                77*s13*s23 + 2*s23^2) + s13*(65*s13^2 + 73*s13*s23 + 
                8*s23^2)) + p2q*p3q^2*(15*s12^3 + s12^2*(187*s13 + 15*s23) + 
              3*s12*s13*(107*s13 + 60*s23) + s13*(149*s13^2 + 157*s13*s23 + 
                8*s23^2)))))/(108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (p2q*(s12 + s13 + s23)*(-2*p1q^4*(p2q + p3q)*s23^2*(42*s13 + s23) + 
          p1q^3*s23*(2*p2q*p3q*(42*s13^2 - 166*s13*s23 - 3*s23^2 + 
              2*s12*(21*s13 + s23)) + p3q^2*(84*s13^2 - 125*s13*s23 - 
              3*s23^2 + 3*s12*(56*s13 + s23)) + p2q^2*(168*s13^2 - 
              39*s13*s23 - 3*s23^2 + s12*(84*s13 + s23))) - 
          (p2q + p3q)^2*(-(p2q^3*s13*s23*(s12 + s13 + s23)) + 
            2*p3q^3*(-21*s13^2*s23 + s12^2*(42*s13 + s23)) + 
            p2q^2*p3q*(84*s13^3 + s12*(s12 - s23)*s23 - s13*s23*(43*s12 + 
                2*s23)) + 2*p2q*p3q^2*(s12^2*s23 - 21*s13^2*s23 - 
              2*s12*s13*(42*s13 + 11*s23))) + p1q*(p2q + p3q)*
           (p2q^3*(-84*s13^3 + (s12 - s23)*s23^2 + s13*s23*(44*s12 + s23)) + 
            2*p3q^3*(63*s13^2*s23 + 2*s12*s23*(32*s13 + s23) - 
              s12^2*(84*s13 + s23)) + 2*p2q*p3q^2*(s13*(104*s13 - 41*s23)*
               s23 - 2*s12^2*(21*s13 + s23) + s12*(168*s13^2 + 86*s13*s23 + 
                3*s23^2)) + p2q^2*p3q*(-168*s13^3 - 2*s12^2*s23 + 
              166*s13^2*s23 + 5*s13*s23^2 - s23^3 + s12*(168*s13^2 + 
                172*s13*s23 + 5*s23^2))) + 
          p1q^2*(p2q^3*(-84*s13^3 + 125*s13^2*s23 + 2*(s12 - s23)*s23^2 + 
              s13*s23*(85*s12 + 3*s23)) - p3q^3*(-5*s12*s23*(59*s13 + s23) + 
              s12^2*(84*s13 + s23) + 2*s23*(-84*s13^2 + 21*s13*s23 + 
                s23^2)) + p2q*p3q^2*(-2*s12^2*(42*s13 + s23) + 
              s23*(293*s13^2 - 329*s13*s23 - 4*s23^2) + 3*s12*(56*s13^2 + 
                113*s13*s23 + 4*s23^2)) + p2q^2*p3q*(-(s12^2*s23) + 
              3*s12*(56*s13^2 + 99*s13*s23 + 3*s23^2) - 2*(42*s13^3 - 
                209*s13^2*s23 + 58*s13*s23^2 + 2*s23^3)))))/
        (54*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*s13*s23*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*Eik[k]] + 
     ((-5*ep^2*p3q*(s12 + s13 + s23)*(p2q*s13*(-s12 + s23) + 
          p3q*s12*(s12 + s23) - p1q*s23*(s12 + s23)))/(27*(p1q + p2q + p3q)*
         s12*s13) - (ep*p3q*(s12 + s13 + s23)*(20*p1q^4*s12*s23^2 + 
          p1q^3*s23*(p2q*(-10*s12^2 - 30*s12*s13 + 20*s12*s23 + 3*s13*s23 + 
              10*s23^2) + p3q*(-30*s12^2 - 10*s12*s13 + 60*s12*s23 + 
              3*s13*s23 + 10*s23^2)) - (p2q + p3q)*
           (10*p2q^3*s12*s13*(s12 + s13 + s23) + p3q^3*s12*(-30*s12^2 - 
              19*s12*s13 - 9*s13^2 + 10*s12*s23 + 30*s13*s23) + 
            p2q^2*p3q*(-10*s12^3 - 5*s12*s13*(s13 - 6*s23) + 2*s12^2*(4*s13 + 
                5*s23) - s13^2*(3*s13 + 10*s23)) - p2q*p3q^2*
             (30*s12^3 + 2*s12*s13*(7*s13 - 20*s23) + s12^2*(s13 - 10*s23) + 
              s13^2*(3*s13 + 10*s23))) - 
          p1q^2*(p3q^2*(-10*s12^3 + 2*s12*(31*s13 - 25*s23)*s23 + 
              10*s12^2*(s13 + 9*s23) + s23*(3*s13^2 + 7*s13*s23 - 
                10*s23^2)) + p2q*p3q*(-10*s12^3 + 20*s12^2*(s13 + 3*s23) + 
              s12*(-10*s13^2 + 107*s13*s23 - 40*s23^2) + s23*(9*s13^2 + 
                27*s13*s23 - 10*s23^2)) + p2q^2*(10*s12^2*(s13 + s23) + 
              2*s13*s23*(3*s13 + 10*s23) - 5*s12*(2*s13^2 - 9*s13*s23 + 
                2*s23^2))) + p1q*(p3q^3*(30*s12^3 + s12*s13*(9*s13 - 
                92*s23) - s13*s23*(3*s13 + 10*s23) - s12^2*(s13 + 90*s23)) + 
            p2q^3*(2*s12^2*(s13 - 5*s23) + s13^2*(3*s13 + 10*s23) + 
              5*s12*(5*s13^2 + 2*s23^2)) + p2q*p3q^2*(40*s12^3 - 
              10*s12^2*(2*s13 + 11*s23) + s13*(3*s13^2 + s13*s23 - 
                30*s23^2) + s12*(43*s13^2 - 147*s13*s23 + 10*s23^2)) + 
            p2q^2*p3q*(10*s12^3 - s12^2*(17*s13 + 50*s23) + 2*s13*(3*s13^2 + 
                7*s13*s23 - 10*s23^2) + s12*(59*s13^2 - 75*s13*s23 + 
                20*s23^2)))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) - 
       (p3q*(s12 + s13 + s23)*(2*p1q^4*(p2q + p3q)*(6*s13 - 5*s23)*s23^2 - 
          p1q^3*s23*(2*p2q*p3q*(6*s12*s13 + 6*s13^2 - 10*s12*s23 - 
              34*s13*s23 + 15*s23^2) + p3q^2*(12*s13^2 + 3*s12*(8*s13 - 
                5*s23) - 23*s13*s23 + 15*s23^2) + p2q^2*(12*s12*s13 + 
              24*s13^2 - 5*s12*s23 - 21*s13*s23 + 15*s23^2)) + 
          (p2q + p3q)^2*(5*p2q^3*s13*s23*(s12 + s13 + s23) + 
            2*p3q^3*(s12^2*(6*s13 - 5*s23) - 3*s13^2*s23) - 
            2*p2q*p3q^2*(2*s12*s13*(6*s13 - s23) + 5*s12^2*s23 + 
              3*s13^2*s23) + p2q^2*p3q*(12*s13^3 + 5*s12*s23*(-s12 + s23) + 
              s13*s23*(-s12 + 10*s23))) - 
          p1q^2*(p2q^3*(-12*s13^3 + 23*s13^2*s23 + s13*(7*s12 - 15*s23)*s23 + 
              10*s23^2*(-s12 + s23)) + p2q^2*p3q*(-12*s13^3 + 5*s12^2*s23 + 
              70*s13^2*s23 - 68*s13*s23^2 + 20*s23^3 + 3*s12*(8*s13^2 + 
                9*s13*s23 - 15*s23^2)) + p3q^3*(s12*(37*s13 - 25*s23)*s23 + 
              s12^2*(-12*s13 + 5*s23) + 2*s23*(12*s13^2 - 3*s13*s23 + 
                5*s23^2)) + p2q*p3q^2*(-2*s12^2*(6*s13 - 5*s23) + 
              3*s12*(8*s13^2 + 11*s13*s23 - 20*s23^2) + s23*(47*s13^2 - 
                83*s13*s23 + 20*s23^2))) + p1q*(p2q + p3q)*
           (p2q^3*(12*s13^3 + 5*(s12 - s23)*s23^2 + s13*s23*(4*s12 + 
                5*s23)) + 2*p3q^3*(s12^2*(12*s13 - 5*s23) - 9*s13^2*s23 + 
              2*s12*s23*(-2*s13 + 5*s23)) + 2*p2q*p3q^2*
             (2*s12^2*(3*s13 - 5*s23) + s13*s23*(-20*s13 + 11*s23) + 
              s12*(-24*s13^2 - 2*s13*s23 + 15*s23^2)) + 
            p2q^2*p3q*(24*s13^3 - 10*s12^2*s23 - 34*s13^2*s23 + 
              25*s13*s23^2 - 5*s23^3 + s12*(-24*s13^2 - 4*s13*s23 + 
                25*s23^2)))))/(27*(p1q + p3q)*(p2q + p3q)^2*(p1q + p2q + p3q)*
         s13*s23*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k]] + 
     ((ep^2*p1q*(s12 + s13 + s23)*(-2*p1q^2*s23^2*(s12 - 3*s13 + s23) - 
          p1q*p3q*s23*(-3*s12^2 + 4*s12*s13 + 7*s13^2 - 2*s12*s23 - 
            8*s13*s23 + s23^2) + p2q^2*s13*(3*s12^2 + 6*s12*s13 + 3*s13^2 - 
            4*s12*s23 - 4*s13*s23 + s23^2) + 
          p3q^2*(-s12^3 + 2*s13*(s13 - s23)^2 + s12*(3*s13^2 - 4*s13*s23 + 
              s23^2)) + p2q*(p1q*s23*(s12^2 - 8*s12*s13 - (-3*s13 + s23)^2) + 
            p3q*(-s12^3 + 3*s12^2*s13 + s12*(9*s13^2 - 8*s13*s23 + s23^2) + 
              s13*(5*s13^2 - 8*s13*s23 + 3*s23^2)))))/(54*(p1q + p2q + p3q)*
         s13*s23*(-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (ep*p1q*(s12 + s13 + s23)*(2*p1q^5*s23^2*(s12^2 - s13^2 + 2*s12*s23 + 
            s23^2) - 2*p1q^4*s23*(p3q*(3*s12^3 - s13^3 + 6*s13^2*s23 + 
              31*s13*s23^2 - 40*s23^3 - s12^2*(3*s13 + 40*s23) + 
              s12*(s13^2 + 30*s13*s23 - 83*s23^2)) + 
            p2q*(2*s12^3 - 2*s13^3 + 5*s13^2*s23 + 34*s13*s23^2 - 37*s23^3 - 
              s12^2*(2*s13 + 39*s23) + 2*s12*(s13^2 + 17*s13*s23 - 
                39*s23^2))) + (p2q + p3q)*(2*p2q^4*s13^2*(s12^2 + 2*s12*s13 + 
              s13^2 - s23^2) + p2q^3*p3q*s13*(-6*s12^3 + 5*s13^3 - 
              112*s13^2*s23 + 13*s13*s23^2 + 2*s23^3 + s12^2*(5*s13 + 
                6*s23) + 2*s12*(8*s13^2 - 55*s13*s23 - s23^2)) + 
            p3q^4*(31*s12^4 + s12^3*(62*s13 - 11*s23) + s12^2*(43*s13^2 + 
                92*s13*s23 - 103*s23^2) + 16*s13*s23*(s13^2 + 4*s13*s23 - 
                5*s23^2) + s12*(12*s13^3 + 115*s13^2*s23 - 54*s13*s23^2 - 
                61*s23^3)) + p2q^2*p3q^2*(4*s12^4 - 2*s12^3*(20*s13 + s23) + 
              s12^2*(-61*s13^2 + 161*s13*s23 - 4*s23^2) - 2*s12*(11*s13^3 + 
                9*s13^2*s23 - 75*s13*s23^2 - s23^3) - s13*(5*s13^3 + 
                169*s13^2*s23 - 205*s13*s23^2 + 15*s23^3)) + 
            p2q*p3q^3*(31*s12^4 + s12^3*(12*s13 - 23*s23) + 
              s12^2*(-45*s13^2 + 217*s13*s23 - 115*s23^2) + s12*(-38*s13^3 + 
                177*s13^2*s23 + 82*s13*s23^2 - 61*s23^3) - 3*s13*(4*s13^3 + 
                17*s13^2*s23 - 82*s13*s23^2 + 33*s23^3))) - 
          p1q*(-(p2q^4*s13*(-4*s12^3 + s13^3 - 118*s13^2*s23 + 13*s13*s23^2 + 
               4*s23^3 + s12^2*(5*s13 + 4*s23) + 2*s12*(5*s13^2 - 
                 59*s13*s23 - 2*s23^2))) + p2q^3*p3q*(-4*s12^4 + 16*s13^4 + 
              357*s13^3*s23 - 516*s13^2*s23^2 + 41*s13*s23^3 + 2*s23^4 + 
              s12^3*(55*s13 + 6*s23) + s12^2*(66*s13^2 - 345*s13*s23 + 
                2*s23^2) + s12*(23*s13^3 + 46*s13^2*s23 - 271*s13*s23^2 - 
                6*s23^3)) - p3q^4*(62*s12^4 + s12^3*(112*s13 - 145*s23) + 
              s12^2*(74*s13^2 + 90*s13*s23 - 367*s23^2) + 3*s12*(8*s13^3 + 
                81*s13^2*s23 - 128*s13*s23^2 - 33*s23^3) + s23*(36*s13^3 + 
                141*s13^2*s23 - 346*s13*s23^2 + 61*s23^3)) + 
            p2q^2*p3q^2*(-58*s12^4 + 33*s13^4 + 292*s13^3*s23 - 
              1160*s13^2*s23^2 + 484*s13*s23^3 - 17*s23^4 + 5*s12^3*(4*s13 + 
                27*s23) + s12^2*(103*s13^2 - 844*s13*s23 + 331*s23^2) + 
              s12*(58*s13^3 - 591*s13^2*s23 - 236*s13*s23^2 + 121*s23^3)) + 
            p2q*p3q^3*(-116*s12^4 + 16*s13^4 + 15*s13^3*s23 - 
              802*s13^2*s23^2 + 783*s13*s23^3 - 80*s23^4 + s12^3*(-143*s13 + 
                272*s23) + s12^2*(-42*s13^2 - 599*s13*s23 + 692*s23^2) + 
              s12*(s13^3 - 768*s13^2*s23 + 415*s13*s23^2 + 224*s23^3))) + 
          p1q^3*(p2q^2*(-2*s13^4 + 20*s13^3*s23 + 131*s13^2*s23^2 - 
              262*s13*s23^3 + 13*s23^4 - s12^3*(4*s13 + 65*s23) + 
              s12^2*(2*s13^2 + 26*s13*s23 - 93*s23^2) + s12*(4*s13^3 + 
                75*s13^2*s23 - 256*s13*s23^2 - 15*s23^3)) + 
            2*p2q*p3q*(2*s12^4 - s13^4 + 14*s13^3*s23 + 64*s13^2*s23^2 - 
              286*s13*s23^3 + 113*s23^4 - s12^3*(3*s13 + 89*s23) - 
              s12^2*(s13^2 + 12*s13*s23 + 35*s23^2) + s12*(3*s13^3 + 
                47*s13^2*s23 - 315*s13*s23^2 + 169*s23^3)) + 
            p3q^2*(4*s12^4 - s12^3*(2*s13 + 119*s23) + s12^2*(-4*s13^2 - 
                52*s13*s23 + 17*s23^2) + s23*(10*s13^3 + 3*s13^2*s23 - 
                300*s13*s23^2 + 219*s23^3) + s12*(2*s13^3 + 25*s13^2*s23 - 
                366*s13*s23^2 + 359*s23^3))) + 
          p1q^2*(p2q^2*p3q*(23*s12^4 - 16*s13^4 - 50*s13^3*s23 + 
              842*s13^2*s23^2 - 630*s13*s23^3 + 30*s23^4 - s12^3*(2*s13 + 
                175*s23) + s12^2*(-5*s13^2 + 482*s13*s23 - 305*s23^2) + 
              s12*(4*s13^3 + 499*s13^2*s23 - 254*s13*s23^2 - 77*s23^3)) + 
            p2q*p3q^2*(58*s12^4 - 6*s13^4 + s12^3*(61*s13 - 412*s23) + 
              42*s13^3*s23 + 626*s13^2*s23^2 - 1110*s13*s23^3 + 232*s23^4 + 
              s12^2*(38*s13^2 + 256*s13*s23 - 622*s23^2) + s12*(29*s13^3 + 
                566*s13^2*s23 - 1011*s13*s23^2 + 80*s23^3)) + 
            p3q^3*(35*s12^4 + s12^3*(48*s13 - 247*s23) + s12^2*(27*s13^2 - 
                60*s13*s23 - 325*s23^2) + 2*s23*(14*s13^3 + 45*s13^2*s23 - 
                252*s13*s23^2 + 101*s23^3) + s12*(14*s13^3 + 155*s13^2*s23 - 
                636*s13*s23^2 + 159*s23^3)) - p2q^3*(s12^3*(15*s13 + 4*s23) + 
              2*s12^2*(8*s13^2 - 88*s13*s23 - s23^2) + s12*(11*s13^3 - 
                90*s13^2*s23 - 129*s13*s23^2 - 4*s23^3) + 2*(5*s13^4 + 
                33*s13^3*s23 - 152*s13^2*s23^2 + 13*s13*s23^3 + s23^4)))))/
        (108*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       (p1q*(s12 + s13 + s23)*(p1q^5*s13*s23^2*(s12^2*(12*s13 - s23) + 
            2*s12*(6*s13^2 + 12*s13*s23 - s23^2) + 
            s23*(13*s13^2 + 12*s13*s23 - s23^2)) + p1q^4*s23*
           (p3q*(3*s12^3*s13*(-8*s13 + s23) - s12^2*s13*(12*s13^2 + 
                9*s13*s23 + 40*s23^2) + s23*(-13*s13^4 + 34*s13^3*s23 + 
                37*s13^2*s23^2 + 2*s13*s23^3 + 84*s23^4) + s12*(-12*s13^4 + 
                19*s13^3*s23 + 96*s13^2*s23^2 + 43*s13*s23^3 + 84*s23^4)) + 
            p2q*(2*s12^3*s13*(-6*s13 + s23) - s12^2*s13*(12*s13^2 + 
                8*s13*s23 + 41*s23^2) + s23*(-38*s13^4 - 13*s13^3*s23 + 
                16*s13^2*s23^2 + 3*s13*s23^3 + 84*s23^4) + s12*(-24*s13^4 - 
                28*s13^3*s23 + 64*s13^2*s23^2 + 44*s13*s23^3 + 84*s23^4))) - 
          (p2q + p3q)*(p2q^4*s13^2*s23*(s12^2*(s13 + 84*s23) + 
              2*s12*(s13^2 + 84*s13*s23 + 42*s23^2) + s13*(s13^2 + 
                84*s13*s23 + 83*s23^2)) - 2*p3q^4*(s12^4*(6*s13^2 - 
                2*s13*s23 - 42*s23^2) + 2*s12^2*s13*s23*(5*s13^2 - s13*s23 - 
                31*s23^2) - 3*s13^2*s23^2*(s13^2 + 6*s13*s23 - 7*s23^2) + 
              s12^3*(6*s13^3 + 5*s13^2*s23 - 43*s13*s23^2 - 42*s23^3) - 
              3*s12*s13*s23*(s13^3 - 2*s13^2*s23 + 14*s13*s23^2 - 7*s23^3)) + 
            2*p2q*p3q^3*(2*s12^4*s23*(s13 + 42*s23) + s12*s13*s23*(26*s13^3 - 
                18*s13^2*s23 + 100*s13*s23^2 - 63*s23^3) - 3*s13^2*s23*(
                s13^3 - 4*s13^2*s23 - 20*s13*s23^2 + 21*s23^3) + 
              s12^3*(18*s13^3 + 6*s13^2*s23 + 19*s13*s23^2 + 84*s23^3) + 
              s12^2*s13*(18*s13^3 + 15*s13^2*s23 - 77*s13*s23^2 + 
                122*s23^3)) + p2q^3*p3q*s13*(-3*s12^3*s23*(s13 + 56*s23) - 
              3*s12^2*s23*(3*s13^2 + 41*s13*s23 + 28*s23^2) + 
              s12*(12*s13^4 + 3*s13^3*s23 + 168*s13^2*s23^2 + 41*s13*s23^3 - 
                84*s23^4) + s13*(12*s13^4 - 3*s13^3*s23 + 119*s13^2*s23^2 + 
                123*s13*s23^3 - 83*s23^4)) + p2q^2*p3q^2*
             (2*s12^4*s23*(s13 + 42*s23) + s12^3*s23*(3*s13^2 - 211*s13*s23 + 
                84*s23^2) + 2*s13^2*s23*(-16*s13^3 + 23*s13^2*s23 + 
                64*s13*s23^2 - 83*s23^3) - 2*s12^2*s13*(18*s13^3 + 
                10*s13^2*s23 + 181*s13*s23^2 - 20*s23^3) - 
              s12*s13*(36*s13^4 + 17*s13^3*s23 + 33*s13^2*s23^2 - 
                81*s13*s23^3 + 167*s23^4))) + 
          p1q^3*(p3q^2*(2*s12^4*s13*(6*s13 - s23) + s12^3*s13*(12*s13^2 - 
                53*s13*s23 + 48*s23^2) - s12^2*s23*(4*s13^3 + 91*s13^2*s23 + 
                211*s13*s23^2 + 252*s23^3) + s23^2*(-39*s13^4 + 
                37*s13^3*s23 + 75*s13^2*s23^2 - 205*s13*s23^3 + 84*s23^4) - 
              s12*s23*(37*s13^4 + 26*s13^3*s23 - 57*s13^2*s23^2 + 
                130*s13*s23^3 + 168*s23^4)) - p2q*p3q*(2*s12^4*s13*s23 + 
              3*s12^3*s13*(8*s13^2 + 25*s13*s23 - 31*s23^2) + 
              s12*s23*(117*s13^4 + 183*s13^3*s23 - 85*s13^2*s23^2 + 
                169*s13*s23^3 + 168*s23^4) + s12^2*(24*s13^4 + 59*s13^3*s23 + 
                112*s13^2*s23^2 + 337*s13*s23^3 + 336*s23^4) + 
              s23*(-13*s13^5 + 130*s13^4*s23 + 52*s13^3*s23^2 - 
                18*s13^2*s23^3 + 409*s13*s23^4 - 168*s23^5)) - 
            p2q^2*(2*s12^3*s13*(5*s13 - 23*s23)*s23 - 2*s12*s13*(6*s13^4 + 
                2*s13^3*s23 - 29*s13^2*s23^2 + 26*s13*s23^3 - 20*s23^4) + 
              s12^2*(-12*s13^4 - 17*s13^3*s23 + 14*s13^2*s23^2 + 
                125*s13*s23^3 + 84*s23^4) + s23*(-37*s13^5 + 22*s13^4*s23 + 
                26*s13^3*s23^2 + 40*s13^2*s23^3 + 205*s13*s23^4 - 
                84*s23^5))) + p1q*(2*p3q^4*(2*s12^4*(9*s13^2 - 2*s13*s23 - 
                21*s23^2) - 3*s13*s23^2*(4*s13^3 + 10*s13^2*s23 - 
                35*s13*s23^2 + 7*s23^3) + s12^3*(18*s13^3 + 10*s13^2*s23 + 
                23*s13*s23^2 + 84*s23^3) + s12^2*s23*(32*s13^3 + 
                27*s13^2*s23 + 67*s13*s23^2 + 126*s23^3) + s12*s13*s23*(
                -12*s13^3 + 2*s13^2*s23 - 24*s13*s23^2 + 187*s23^3)) + 
            p2q^4*s13*(2*s12^3*s23*(s13 + 42*s23) + s12^2*s23*(7*s13^2 + 
                40*s13*s23 + 84*s23^2) - 4*s12*(3*s13^4 + s13^3*s23 + 
                20*s13^2*s23^2 - 53*s13*s23^3 - 42*s23^4) + s13*(-12*s13^4 + 
                3*s13^3*s23 - 32*s13^2*s23^2 + 131*s13*s23^3 + 250*s23^4)) + 
            2*p2q*p3q^3*(4*s12^4*(3*s13^2 - 2*s13*s23 - 21*s23^2) - 
              4*s12^3*(9*s13^3 + 7*s13^2*s23 - 59*s13*s23^2 - 63*s23^3) + 
              6*s12*s13*s23*(-17*s13^3 + 6*s13^2*s23 + 18*s13*s23^2 + 
                107*s23^3) + s13*s23*(9*s13^4 - 22*s13^3*s23 - 26*s13^2*
                 s23^2 + 410*s13*s23^3 - 63*s23^4) + s12^2*(-48*s13^4 - 
                35*s13^3*s23 + 266*s13^2*s23^2 + 277*s13*s23^3 + 
                336*s23^4)) + p2q^2*p3q^2*(-2*s12^4*s23*(5*s13 + 42*s23) + 
              s12^3*(-60*s13^3 - 45*s13^2*s23 + 892*s13*s23^2 + 504*s23^3) + 
              s13*s23*(122*s13^4 + 79*s13^3*s23 + 247*s13^2*s23^2 + 
                1203*s13*s23^3 - 167*s23^4) + s12^2*(24*s13^4 + 
                14*s13^3*s23 + 1049*s13^2*s23^2 + 759*s13*s23^3 + 
                588*s23^4) + s12*s13*(84*s13^4 - 45*s13^3*s23 + 284*s13^2*
                 s23^2 + 773*s13*s23^3 + 1538*s23^4)) + 
            p2q^3*p3q*(-2*s12^4*s13*s23 + 3*s12^3*s23*(-s13^2 + 183*s13*s23 + 
                56*s23^2) + s12^2*(48*s13^4 + 47*s13^3*s23 + 560*s13^2*
                 s23^2 + 421*s13*s23^3 + 168*s23^4) + s12*s13*(24*s13^4 + 
                23*s13^3*s23 + 37*s13^2*s23^2 + 681*s13*s23^3 + 795*s23^4) + 
              s13*(-24*s13^5 + 71*s13^4*s23 + 18*s13^3*s23^2 + 332*s13^2*
                 s23^3 + 830*s13*s23^4 - 83*s23^5))) - 
          p1q^2*(p3q^3*(6*s12^4*s13*(-6*s13 + s23) - 2*s12^2*s13*s23*(
                26*s13^2 - 6*s13*s23 + 43*s23^2) + 2*s13*s23^2*(22*s13^3 + 
                4*s13^2*s23 - 109*s13*s23^2 + 125*s23^3) - s12^3*(36*s13^3 - 
                19*s13^2*s23 + 177*s13*s23^2 + 252*s23^3) + 
              s12*s23*(43*s13^4 + 41*s13^3*s23 - 21*s13^2*s23^2 - 
                157*s13*s23^3 + 252*s23^4)) + p2q*p3q^2*
             (-2*s12^4*s13*(6*s13 - 5*s23) + s12^3*(72*s13^3 + 116*s13^2*
                 s23 - 435*s13*s23^2 - 420*s23^3) + s12^2*(84*s13^4 + 
                105*s13^3*s23 + 55*s13^2*s23^2 + 130*s13*s23^3 + 168*s23^4) + 
              s12*s23*(238*s13^4 + 379*s13^3*s23 + 148*s13^2*s23^2 - 
                147*s13*s23^3 + 588*s23^4) + s13*s23*(-25*s13^4 + 
                189*s13^3*s23 + 185*s13^2*s23^2 - 319*s13*s23^3 + 
                790*s23^4)) + p2q^3*(2*s12^3*s13*(s13 - 43*s23)*s23 + 
              s12^2*(-12*s13^4 - 19*s13^3*s23 + 14*s13^2*s23^2 + 
                127*s13*s23^3 + 84*s23^4) + s12*(-8*s13^4*s23 + 
                92*s13^3*s23^2 - 38*s13^2*s23^3 + 44*s13*s23^4 + 84*s23^5) + 
              s13*(12*s13^5 - 35*s13^4*s23 - 8*s13^3*s23^2 - 70*s13^2*s23^3 - 
                74*s13*s23^4 + 251*s23^5)) + p2q^2*p3q*(4*s12^4*s13*s23 + 
              3*s12^3*(8*s13^3 + 13*s13^2*s23 - 115*s13*s23^2 - 56*s23^3) - 
              2*s12^2*(18*s13^4 + 21*s13^3*s23 + 7*s13^2*s23^2 - 
                171*s13*s23^3 - 126*s23^4) + 4*s13*s23*(-30*s13^4 + 
                11*s13^3*s23 + 10*s13^2*s23^2 - 49*s13*s23^3 + 198*s23^4) + 
              s12*(-60*s13^5 + 7*s13^4*s23 + 267*s13^3*s23^2 + 75*s13^2*
                 s23^3 + 55*s13*s23^4 + 420*s23^5)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23^2*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep^2*p2q*(s12 + s13 + s23)*(2*p2q^2*s13^2*(s12 + s13 - 3*s23) - 
          p1q^2*s23*(3*s12^2 - 4*s12*s13 + s13^2 + 6*s12*s23 - 4*s13*s23 + 
            3*s23^2) + p2q*p3q*s13*(-3*s12^2 - 2*s12*s13 + s13^2 + 
            4*s12*s23 - 8*s13*s23 + 7*s23^2) + 
          p3q^2*(s12^3 - 2*(s13 - s23)^2*s23 - s12*(s13^2 - 4*s13*s23 + 
              3*s23^2)) + p1q*(p2q*s13*(-s12^2 + (s13 - 3*s23)^2 + 
              8*s12*s23) + p3q*(s12^3 - 3*s12^2*s23 + s23*(-3*s13^2 + 
                8*s13*s23 - 5*s23^2) - s12*(s13^2 - 8*s13*s23 + 9*s23^2)))))/
        (54*(p1q + p2q + p3q)*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) - (ep*p2q*(s12 + s13 + s23)*
         (2*p1q^5*s23^2*(s12^2 - s13^2 + 2*s12*s23 + s23^2) + 
          p1q^4*s23*(p3q*(-6*s12^3 + 2*s13^3 + 11*s13^2*s23 - 112*s13*s23^2 + 
              7*s23^3 + s12^2*(6*s13 + 7*s23) - 2*s12*(s13^2 + 55*s13*s23 - 
                10*s23^2)) + p2q*(-4*s12^3 + 4*s13^3 + 13*s13^2*s23 - 
              118*s13*s23^2 + s23^3 + s12^2*(4*s13 + 5*s23) - 
              2*s12*(2*s13^2 + 59*s13*s23 - 5*s23^2))) + 
          (p2q + p3q)*(2*p2q^4*s13^2*(s12^2 + 2*s12*s13 + s13^2 - s23^2) + 
            2*p2q^3*p3q*s13*(-3*s12^3 + 39*s13^3 - 31*s13^2*s23 - 
              5*s13*s23^2 + s23^3 + 3*s12^2*(13*s13 + s23) + s12*(81*s13^2 - 
                30*s13*s23 - s23^2)) + p2q^2*p3q^2*(4*s12^4 - 
              s12^3*(113*s13 + 2*s23) - s12^2*(61*s13^2 + 58*s13*s23 + 
                4*s23^2) + s12*(197*s13^3 - 306*s13^2*s23 + 27*s13*s23^2 + 
                2*s23^3) + s13*(141*s13^3 - 238*s13^2*s23 + 13*s13*s23^2 + 
                8*s23^3)) + p3q^4*(31*s12^4 + s12^3*(-11*s13 + 62*s23) + 
              16*s13*s23*(-5*s13^2 + 4*s13*s23 + s23^2) + s12^2*(-103*s13^2 + 
                92*s13*s23 + 43*s23^2) + s12*(-61*s13^3 - 54*s13^2*s23 + 
                115*s13*s23^2 + 12*s23^3)) + p2q*p3q^3*(31*s12^4 + 
              s12^3*(-134*s13 + 50*s23) + s12^2*(-264*s13^2 - 2*s13*s23 + 
                31*s23^2) - 2*s12*(19*s13^3 + 165*s13^2*s23 - 64*s13*s23^2 - 
                6*s23^3) + s13*(61*s13^3 - 266*s13^2*s23 + 77*s13*s23^2 + 
                20*s23^3))) + p1q*(2*p2q^4*s13*(-2*s12^3 + 37*s13^3 - 
              34*s13^2*s23 - 5*s13*s23^2 + 2*s23^3 + s12^2*(39*s13 + 2*s23) + 
              s12*(78*s13^2 - 34*s13*s23 - 2*s23^2)) + p2q*p3q^3*
             (116*s12^4 + 80*s13^4 - 783*s13^3*s23 + 802*s13^2*s23^2 - 
              15*s13*s23^3 - 16*s23^4 + s12^3*(-272*s13 + 143*s23) + 
              s12^2*(-692*s13^2 + 599*s13*s23 + 42*s23^2) - s12*(224*s13^3 + 
                415*s13^2*s23 - 768*s13*s23^2 + s23^3)) + 
            2*p2q^3*p3q*(2*s12^4 + 113*s13^4 - 286*s13^3*s23 + 
              64*s13^2*s23^2 + 14*s13*s23^3 - s23^4 - s12^3*(89*s13 + 
                3*s23) - s12^2*(35*s13^2 + 12*s13*s23 + s23^2) + 
              s12*(169*s13^3 - 315*s13^2*s23 + 47*s13*s23^2 + 3*s23^3)) + 
            p3q^4*(62*s12^4 + s12^3*(-34*s13 + 74*s23) + s12^2*(-218*s13^2 + 
                309*s13*s23 - 2*s23^2) + s12*(-122*s13^3 + 28*s13^2*s23 + 
                292*s13*s23^2 - 26*s23^3) - s23*(179*s13^3 - 310*s13^2*s23 + 
                35*s13*s23^2 + 12*s23^3)) + p2q^2*p3q^2*(58*s12^4 + 
              232*s13^4 - 1110*s13^3*s23 + 626*s13^2*s23^2 + 42*s13*s23^3 - 
              6*s23^4 + s12^3*(-412*s13 + 61*s23) + s12^2*(-622*s13^2 + 
                256*s13*s23 + 38*s23^2) + s12*(80*s13^3 - 1011*s13^2*s23 + 
                566*s13*s23^2 + 29*s23^3))) - 
          p1q^2*(p2q^2*p3q*(-23*s12^4 - 30*s13^4 + 630*s13^3*s23 - 
              842*s13^2*s23^2 + 50*s13*s23^3 + 16*s23^4 + s12^3*(175*s13 + 
                2*s23) + s12^2*(305*s13^2 - 482*s13*s23 + 5*s23^2) + 
              s12*(77*s13^3 + 254*s13^2*s23 - 499*s13*s23^2 - 4*s23^3)) + 
            p2q^3*(-13*s13^4 + 262*s13^3*s23 - 131*s13^2*s23^2 - 
              20*s13*s23^3 + 2*s23^4 + s12^3*(65*s13 + 4*s23) + 
              s12^2*(93*s13^2 - 26*s13*s23 - 2*s23^2) + s12*(15*s13^3 + 
                256*s13^2*s23 - 75*s13*s23^2 - 4*s23^3)) + 
            p2q*p3q^2*(-58*s12^4 - 17*s13^4 + 484*s13^3*s23 - 
              1160*s13^2*s23^2 + 292*s13*s23^3 + 33*s23^4 + 5*s12^3*(27*s13 + 
                4*s23) + s12^2*(331*s13^2 - 844*s13*s23 + 103*s23^2) + 
              s12*(121*s13^3 - 236*s13^2*s23 - 591*s13*s23^2 + 58*s23^3)) + 
            p3q^3*(-35*s12^4 + s12^3*(25*s13 + 28*s23) + s12^2*(119*s13^2 - 
                378*s13*s23 + 106*s23^2) + s23*(114*s13^3 - 451*s13^2*s23 + 
                220*s13*s23^2 + 17*s23^3) + s12*(59*s13^3 - 232*s13^2*s23 - 
                159*s13*s23^2 + 60*s23^3))) - 
          p1q^3*(p3q^2*(-4*s12^4 + 2*s12^3*(s13 + 23*s23) + s12^2*(4*s13^2 - 
                167*s13*s23 + 56*s23^2) + s13*s23*(13*s13^2 - 218*s13*s23 + 
                281*s23^2) - 2*s12*(s13^3 + 74*s13^2*s23 - 64*s13*s23^2 - 
                3*s23^3)) + p2q*p3q*(-4*s12^4 + 2*s13^4 + 41*s13^3*s23 - 
              516*s13^2*s23^2 + 357*s13*s23^3 + 16*s23^4 + s12^3*(6*s13 + 
                55*s23) + s12^2*(2*s13^2 - 345*s13*s23 + 66*s23^2) + 
              s12*(-6*s13^3 - 271*s13^2*s23 + 46*s13*s23^2 + 23*s23^3)) + 
            p2q^2*(s12^3*(4*s13 + 15*s23) - 2*s12^2*(s13^2 + 88*s13*s23 - 
                8*s23^2) - s12*(4*s13^3 + 129*s13^2*s23 + 90*s13*s23^2 - 
                11*s23^3) + 2*(s13^4 + 13*s13^3*s23 - 152*s13^2*s23^2 + 
                33*s13*s23^3 + 5*s23^4)))))/(108*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23*(p1q^2*s23*(s12 + s23) + 
          (p2q + p3q)*(s12 + s13)*(p2q*s13 - p3q*(s12 + s23)) - 
          p1q*(p3q*(s12 + s13 - s23)*(s12 + s23) + p2q*(s12^2 + 2*s13*s23 + 
              s12*(s13 + s23))))) + (p2q*(s12 + s13 + s23)*
         (p1q^5*s13*s23^2*(s12^2*(84*s13 + s23) + 2*s12*(42*s13^2 + 
              84*s13*s23 + s23^2) + s23*(83*s13^2 + 84*s13*s23 + s23^2)) - 
          p1q^4*s23*(p3q*(3*s12^3*s13*(56*s13 + s23) + s12^2*s13*(84*s13^2 + 
                39*s13*s23 + 8*s23^2) + s12*(84*s13^4 - 125*s13^3*s23 - 
                336*s13^2*s23^2 - 5*s13*s23^3 - 12*s23^4) + s23*(83*s13^4 - 
                206*s13^3*s23 - 203*s13^2*s23^2 + 2*s13*s23^3 - 12*s23^4)) + 
            p2q*(2*s12^3*s13*(42*s13 + s23) + s12^2*s13*(84*s13^2 + 
                40*s13*s23 + 7*s23^2) + s23*(250*s13^4 + 131*s13^3*s23 - 
                32*s13^2*s23^2 + 3*s13*s23^3 - 12*s23^4) + 4*s12*(42*s13^4 + 
                53*s13^3*s23 - 20*s13^2*s23^2 - s13*s23^3 - 3*s23^4))) + 
          (p2q + p3q)*(p2q^4*s13^2*s23*(s12^2*(s13 - 12*s23) + 
              s13*(s13^2 - 12*s13*s23 - 13*s23^2) + 2*s12*(s13^2 - 
                12*s13*s23 - 6*s23^2)) + 2*p3q^4*(2*s12^2*s13*s23*(31*s13^2 + 
                s13*s23 - 5*s23^2) + 2*s12^4*(21*s13^2 + s13*s23 - 3*s23^2) + 
              3*s13^2*s23^2*(-7*s13^2 + 6*s13*s23 + s23^2) + 
              s12^3*(42*s13^3 + 43*s13^2*s23 - 5*s13*s23^2 - 6*s23^3) + 
              3*s12*s13*s23*(-7*s13^3 + 14*s13^2*s23 - 2*s13*s23^2 + 
                s23^3)) + 2*p2q*p3q^3*(2*s12^4*(s13 - 6*s23)*s23 + 
              3*s13^2*s23*(7*s13^3 - 28*s13^2*s23 + 4*s13*s23^2 + 3*s23^3) + 
              s12*s13*s23*(-166*s13^3 - 18*s13^2*s23 + 4*s13*s23^2 + 
                9*s23^3) - s12^3*(126*s13^3 + 66*s13^2*s23 + 5*s13*s23^2 + 
                12*s23^3) - s12^2*s13*(126*s13^3 + 129*s13^2*s23 + 
                29*s13*s23^2 + 22*s23^3)) - p2q^3*p3q*s13*
             (3*s12^3*(s13 - 8*s23)*s23 - 3*s12^2*s23*(13*s13^2 + 7*s13*s23 + 
                4*s23^2) + s13*(84*s13^4 + 3*s13^3*s23 + 25*s13^2*s23^2 + 
                21*s13*s23^3 - 13*s23^4) + s12*(84*s13^4 + 45*s13^3*s23 + 
                72*s13^2*s23^2 + 7*s13*s23^3 - 12*s23^4)) + 
            p2q^2*p3q^2*(2*s12^4*(s13 - 6*s23)*s23 + s12^3*s23*(-45*s13^2 + 
                29*s13*s23 - 12*s23^2) + 2*s12^2*s13*(126*s13^3 + 
                86*s13^2*s23 + 35*s13*s23^2 - 4*s23^3) + 2*s13^2*s23*(
                104*s13^3 - 25*s13^2*s23 - 8*s13*s23^2 + 13*s23^3) + 
              s12*s13*(252*s13^4 + 175*s13^3*s23 + 15*s13^2*s23^2 + 
                33*s13*s23^3 + 25*s23^4))) + 
          p1q^2*(p3q^3*(6*s12^4*s13*(42*s13 + s23) + 2*s12^2*s13*s23*(
                142*s13^2 - 258*s13*s23 + 5*s23^2) + 2*s13*s23^2*(
                -146*s13^3 + 124*s13^2*s23 + 35*s13*s23^2 - 19*s23^3) + 
              s12^3*(252*s13^3 - 173*s13^2*s23 + 15*s13*s23^2 + 36*s23^3) + 
              s12*s23*(-293*s13^4 + 281*s13^3*s23 - 69*s13^2*s23^2 + 
                35*s13*s23^3 - 36*s23^4)) + p2q*p3q^2*
             (2*s12^4*s13*(42*s13 + 5*s23) + s12^3*(-504*s13^3 - 
                892*s13^2*s23 + 45*s13*s23^2 + 60*s23^3) + 
              s13*s23*(167*s13^4 - 1203*s13^3*s23 - 247*s13^2*s23^2 - 
                79*s13*s23^3 - 122*s23^4) - s12^2*(588*s13^4 + 759*s13^3*
                 s23 + 1049*s13^2*s23^2 + 14*s13*s23^3 + 24*s23^4) - 
              s12*s23*(1538*s13^4 + 773*s13^3*s23 + 284*s13^2*s23^2 - 
                45*s13*s23^3 + 84*s23^4)) + p2q^2*p3q*(4*s12^4*s13*s23 - 
              3*s12^3*(56*s13^3 + 115*s13^2*s23 - 13*s13*s23^2 - 8*s23^3) + 
              4*s13*s23*(198*s13^4 - 49*s13^3*s23 + 10*s13^2*s23^2 + 
                11*s13*s23^3 - 30*s23^4) + 2*s12^2*(126*s13^4 + 171*s13^3*
                 s23 - 7*s13^2*s23^2 - 21*s13*s23^3 - 18*s23^4) + 
              s12*(420*s13^5 + 55*s13^4*s23 + 75*s13^3*s23^2 + 267*s13^2*
                 s23^3 + 7*s13*s23^4 - 60*s23^5)) + 
            p2q^3*(2*s12^3*s13*s23*(-23*s13 + 5*s23) + s12^2*(84*s13^4 + 
                125*s13^3*s23 + 14*s13^2*s23^2 - 17*s13*s23^3 - 12*s23^4) - 
              2*s12*s23*(-20*s13^4 + 26*s13^3*s23 - 29*s13^2*s23^2 + 
                2*s13*s23^3 + 6*s23^4) + s13*(-84*s13^5 + 205*s13^4*s23 + 
                40*s13^3*s23^2 + 26*s13^2*s23^3 + 22*s13*s23^4 - 
                37*s23^5))) + p1q*(2*p3q^4*(2*s12^4*(63*s13^2 + 2*s13*s23 - 
                3*s23^2) - 3*s13*s23^2*(28*s13^3 - 26*s13^2*s23 - 
                5*s13*s23^2 + s23^3) + s12^3*(126*s13^3 + 62*s13^2*s23 + 
                s13*s23^2 + 12*s23^3) + s12^2*s23*(184*s13^3 - 75*s13^2*s23 + 
                5*s13*s23^2 + 18*s23^3) + s12*s13*s23*(-84*s13^3 + 
                142*s13^2*s23 - 24*s13*s23^2 + 29*s23^3)) + 
            p2q^4*s13*(-2*s12^3*(s13 - 6*s23)*s23 + s12^2*s23*(41*s13^2 + 
                8*s13*s23 + 12*s23^2) - 4*s12*(21*s13^4 + 11*s13^3*s23 + 
                16*s13^2*s23^2 - 7*s13*s23^3 - 6*s23^4) + s13*(-84*s13^4 - 
                3*s13^3*s23 - 16*s13^2*s23^2 + 13*s13*s23^3 + 38*s23^4)) + 
            2*p2q*p3q^3*(4*s12^4*(21*s13^2 + 2*s13*s23 - 3*s23^2) - 
              6*s12*s13*s23*(107*s13^3 + 18*s13^2*s23 + 6*s13*s23^2 - 
                17*s23^3) - 4*s12^3*(63*s13^3 + 59*s13^2*s23 - 7*s13*s23^2 - 
                9*s23^3) + s13*s23*(63*s13^4 - 410*s13^3*s23 + 26*s13^2*
                 s23^2 + 22*s13*s23^3 - 9*s23^4) + s12^2*(-336*s13^4 - 
                277*s13^3*s23 - 266*s13^2*s23^2 + 35*s13*s23^3 + 48*s23^4)) + 
            p2q^2*p3q^2*(2*s12^4*(5*s13 - 6*s23)*s23 + s12^3*(-420*s13^3 - 
                435*s13^2*s23 + 116*s13*s23^2 + 72*s23^3) + 
              s13*s23*(790*s13^4 - 319*s13^3*s23 + 185*s13^2*s23^2 + 
                189*s13*s23^3 - 25*s23^4) + s12^2*(168*s13^4 + 130*s13^3*
                 s23 + 55*s13^2*s23^2 + 105*s13*s23^3 + 84*s23^4) + 
              s12*s13*(588*s13^4 - 147*s13^3*s23 + 148*s13^2*s23^2 + 
                379*s13*s23^3 + 238*s23^4)) + p2q^3*p3q*(2*s12^4*s13*s23 + 
              3*s12^3*s23*(-31*s13^2 + 25*s13*s23 + 8*s23^2) + 
              s12^2*(336*s13^4 + 337*s13^3*s23 + 112*s13^2*s23^2 + 
                59*s13*s23^3 + 24*s23^4) + s12*s13*(168*s13^4 + 169*s13^3*
                 s23 - 85*s13^2*s23^2 + 183*s13*s23^3 + 117*s23^4) + 
              s13*(-168*s13^5 + 409*s13^4*s23 - 18*s13^3*s23^2 + 
                52*s13^2*s23^3 + 130*s13*s23^4 - 13*s23^5))) + 
          p1q^3*(p3q^2*(s12^3*s13^2*(84*s13 - 379*s23) + 2*s12^4*s13*(
                42*s13 + s23) - s12^2*s23*(44*s13^3 + 485*s13^2*s23 + 
                29*s13*s23^2 + 36*s23^3) + s12*s23*(-251*s13^4 + 
                122*s13^3*s23 + 135*s13^2*s23^2 - 14*s13*s23^3 - 24*s23^4) + 
              s23^2*(-249*s13^4 + 251*s13^3*s23 + 165*s13^2*s23^2 - 
                35*s13*s23^3 + 12*s23^4)) + p2q^2*(2*s12^3*s13*s23*(-43*s13 + 
                s23) + s12^2*(84*s13^4 + 127*s13^3*s23 + 14*s13^2*s23^2 - 
                19*s13*s23^3 - 12*s23^4) + 2*s12*s13*(42*s13^4 + 
                22*s13^3*s23 - 19*s13^2*s23^2 + 46*s13*s23^3 - 4*s23^4) + 
              s23*(251*s13^5 - 74*s13^4*s23 - 70*s13^3*s23^2 - 8*s13^2*
                 s23^3 - 35*s13*s23^4 + 12*s23^5)) + 
            p2q*p3q*(2*s12^4*s13*s23 - 3*s12^3*s13*(56*s13^2 + 183*s13*s23 - 
                s23^2) - s12*s23*(795*s13^4 + 681*s13^3*s23 + 37*s13^2*
                 s23^2 + 23*s13*s23^3 + 24*s23^4) - s12^2*(168*s13^4 + 
                421*s13^3*s23 + 560*s13^2*s23^2 + 47*s13*s23^3 + 48*s23^4) + 
              s23*(83*s13^5 - 830*s13^4*s23 - 332*s13^3*s23^2 - 
                18*s13^2*s23^3 - 71*s13*s23^4 + 24*s23^5)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23^2*
         (p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((-5*ep^2*p3q*(s12 + s13 + s23)*(2*p3q^2*s12^2*((s13 - s23)^2 + 
            s12*(s13 + s23)) + p1q^2*s23*(4*s12*s13*(s13 + s23) - 
            (s13 - s23)*(s13 + s23)^2 - s12^2*(3*s13 + s23)) + 
          p2q^2*s13*(4*s12*s23*(s13 + s23) + (s13 - s23)*(s13 + s23)^2 - 
            s12^2*(s13 + 3*s23)) + p2q*p3q*s12*(-3*s13^3 + s13^2*s23 + 
            3*s13*s23^2 - s23^3 + s12^2*(s13 + s23) - 2*s12*s13*
             (s13 + 5*s23)) + p1q*(p3q*s12*(-s13^3 + 3*s13^2*s23 + 
              s13*s23^2 - 3*s23^3 + s12^2*(s13 + s23) - 2*s12*s23*(5*s13 + 
                s23)) + p2q*(8*s12*s13*s23*(s13 + s23) + (s13^2 - s23^2)^2 - 
              s12^2*(s13^2 + 6*s13*s23 + s23^2)))))/(27*(p1q + p2q + p3q)*s12*
         s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (p3q*(s12 + s13 + s23)*(-(p1q^5*s13*s23^2*(s12^2*(12*s13 - 5*s23) + 
             2*s12*(6*s13^2 + 12*s13*s23 - 5*s23^2) + 
             s23*(17*s13^2 + 12*s13*s23 - 5*s23^2))) + 
          p1q^4*s23*(p2q*(2*s12^3*s13*(6*s13 - 5*s23) + s12^2*s13*(12*s13^2 + 
                16*s13*s23 - 11*s23^2) + 4*s12*(6*s13^4 + 5*s13^3*s23 - 
                14*s13^2*s23^2 - s13*s23^3 + 3*s23^4) + s23*(46*s13^4 - 
                7*s13^3*s23 - 56*s13^2*s23^2 - 15*s13*s23^3 + 12*s23^4)) + 
            p3q*(3*s12^3*s13*(8*s13 - 5*s23) + s12^2*s13*(12*s13^2 + 
                21*s13*s23 - 16*s23^2) + s23*(17*s13^4 - 50*s13^3*s23 - 
                65*s13^2*s23^2 - 10*s13*s23^3 + 12*s23^4) + s12*(12*s13^4 - 
                23*s13^3*s23 - 72*s13^2*s23^2 + s13*s23^3 + 12*s23^4))) + 
          (p2q + p3q)*(p2q^4*s13^2*s23*(s12^2*(5*s13 - 12*s23) + 
              s13*(5*s13^2 - 12*s13*s23 - 17*s23^2) + 2*s12*(5*s13^2 - 
                12*s13*s23 - 6*s23^2)) - 2*p3q^4*(-3*s13^2*(s13 - s23)^2*s23^
                2 + 2*s12^4*(3*s13^2 - 5*s13*s23 + 3*s23^2) + 
              2*s12^2*s13*s23*(7*s13^2 - 5*s13*s23 + 7*s23^2) - 
              3*s12*s13*s23*(s13^3 - 2*s13^2*s23 - 2*s13*s23^2 + s23^3) + 
              s12^3*(6*s13^3 + s13^2*s23 + s13*s23^2 + 6*s23^3)) + 
            2*p2q*p3q^3*(2*s12^4*(5*s13 - 6*s23)*s23 + s12^2*s13*(18*s13^3 + 
                3*s13^2*s23 + 23*s13*s23^2 - 38*s23^3) + s12^3*(18*s13^3 - 
                6*s13^2*s23 - 13*s13*s23^2 - 12*s23^3) - 3*s13^2*s23*(s13^3 - 
                4*s13^2*s23 + 4*s13*s23^2 - 3*s23^3) + s12*s13*s23*(
                34*s13^3 + 6*s13^2*s23 - 28*s13*s23^2 + 9*s23^3)) + 
            p2q^3*p3q*s13*(-3*s12^3*(5*s13 - 8*s23)*s23 + 3*s12^2*s23*(
                -7*s13^2 + 11*s13*s23 + 4*s23^2) + s12*(12*s13^4 - 
                9*s13^3*s23 - 48*s13^2*s23^2 - 11*s13*s23^3 + 12*s23^4) + 
              s13*(12*s13^4 - 15*s13^3*s23 - 53*s13^2*s23^2 - 33*s13*s23^3 + 
                17*s23^4)) + p2q^2*p3q^2*(2*s12^4*(5*s13 - 6*s23)*s23 + 
              s12^3*s23*(-9*s13^2 + 25*s13*s23 - 12*s23^2) - 2*s13^2*s23*(
                20*s13^3 + 5*s13^2*s23 + 4*s13*s23^2 - 17*s23^3) - 
              2*s12^2*s13*(18*s13^3 + 2*s13^2*s23 - 67*s13*s23^2 + 8*s23^3) + 
              s12*s13*(-36*s13^4 + 11*s13^3*s23 + 51*s13^2*s23^2 - 
                3*s13*s23^3 + 29*s23^4))) + 
          p1q*(-2*p3q^4*(2*s12^4*(9*s13^2 - 10*s13*s23 + 3*s23^2) + 
              s12*s13*s23*(-12*s13^3 + 34*s13^2*s23 - 37*s23^3) + 
              s12^2*s23*(52*s13^3 - 33*s13^2*s23 + 11*s13*s23^2 - 18*s23^3) + 
              s12^3*(18*s13^3 + 14*s13^2*s23 + 7*s13*s23^2 - 12*s23^3) + 
              3*s13*s23^2*(-4*s13^3 + 6*s13^2*s23 - 5*s13*s23^2 + s23^3)) + 
            p2q^4*s13*(-2*s12^3*(5*s13 - 6*s23)*s23 + s12^2*s23*(-11*s13^2 + 
                16*s13*s23 + 12*s23^2) + 4*s12*(3*s13^4 - s13^3*s23 - 
                14*s13^2*s23^2 + 5*s13*s23^3 + 6*s23^4) + s13*(12*s13^4 - 
                15*s13^3*s23 - 56*s13^2*s23^2 - 7*s13*s23^3 + 46*s23^4)) + 
            2*p2q*p3q^3*(-4*s12^4*(3*s13^2 - 10*s13*s23 + 3*s23^2) + 
              4*s12^3*(9*s13^3 + 2*s13^2*s23 + 2*s13*s23^2 + 9*s23^3) + 
              6*s12*s13*s23*(23*s13^3 + 12*s13^2*s23 + 12*s13*s23^2 + 
                23*s23^3) + s13*s23*(-9*s13^4 + 86*s13^3*s23 + 34*s13^2*
                 s23^2 + 86*s13*s23^3 - 9*s23^4) + s12^2*(48*s13^4 + 
                19*s13^3*s23 + 206*s13^2*s23^2 + 19*s13*s23^3 + 48*s23^4)) + 
            p2q^2*p3q^2*(2*s12^4*(25*s13 - 6*s23)*s23 + s12^3*(60*s13^3 - 
                15*s13^2*s23 + 76*s13*s23^2 + 72*s23^3) + s13*s23*(
                -154*s13^4 + 61*s13^3*s23 + 133*s13^2*s23^2 + 249*s13*s23^3 - 
                29*s23^4) + s12^2*(-24*s13^4 + 2*s13^3*s23 + 491*s13^2*
                 s23^2 + 93*s13*s23^3 + 84*s23^4) + s12*s13*(-84*s13^4 + 
                129*s13^3*s23 + 140*s13^2*s23^2 + 167*s13*s23^3 + 
                302*s23^4)) + p2q^3*p3q*(10*s12^4*s13*s23 + 3*s12^3*s23*(
                -11*s13^2 + 21*s13*s23 + 8*s23^2) + s12^2*(-48*s13^4 - 
                43*s13^3*s23 + 224*s13^2*s23^2 + 55*s13*s23^3 + 24*s23^4) + 
              s12*s13*(-24*s13^4 - 19*s13^3*s23 - 17*s13^2*s23^2 + 
                99*s13*s23^3 + 129*s23^4) + s13*(24*s13^5 - 115*s13^4*s23 - 
                90*s13^3*s23^2 + 68*s13^2*s23^3 + 170*s13*s23^4 - 
                17*s23^5))) - p1q^3*(p3q^2*(2*s12^4*s13*(6*s13 - 5*s23) + 
              s12^3*s13*(12*s13^2 - 49*s13*s23 + 24*s23^2) + 
              s12^2*s23*(4*s13^3 - 167*s13^2*s23 + 25*s13*s23^2 + 36*s23^3) + 
              s23^2*(-51*s13^4 + 41*s13^3*s23 + 63*s13^2*s23^2 + 
                55*s13*s23^3 - 12*s23^4) + s12*s23*(-41*s13^4 + 
                14*s13^3*s23 - 3*s13^2*s23^2 - 2*s13*s23^3 + 24*s23^4)) + 
            p2q^2*(-2*s12^3*s13*(s13 - 7*s23)*s23 + 2*s12*s13*(6*s13^4 - 
                2*s13^3*s23 - 25*s13^2*s23^2 - 2*s13*s23^3 + 8*s23^4) + 
              s12^2*(12*s13^4 + 13*s13^3*s23 - 70*s13^2*s23^2 + 
                23*s13*s23^3 + 12*s23^4) + s23*(41*s13^5 - 62*s13^4*s23 - 
                82*s13^3*s23^2 + 16*s13^2*s23^3 + 55*s13*s23^4 - 12*s23^5)) - 
            p2q*p3q*(10*s12^4*s13*s23 + 3*s12^3*s13*(8*s13^2 + 21*s13*s23 - 
                11*s23^2) + s12^2*(24*s13^4 + 55*s13^3*s23 + 224*s13^2*
                 s23^2 - 43*s13*s23^3 - 48*s23^4) + s12*s23*(129*s13^4 + 
                99*s13^3*s23 - 17*s13^2*s23^2 - 19*s13*s23^3 - 24*s23^4) + 
              s23*(-17*s13^5 + 170*s13^4*s23 + 68*s13^3*s23^2 - 
                90*s13^2*s23^3 - 115*s13*s23^4 + 24*s23^5))) + 
          p1q^2*(p3q^3*(-6*s12^4*s13*(6*s13 - 5*s23) + 2*s12^2*s13*s23*(
                -46*s13^2 + 90*s13*s23 + s23^2) - s12^3*(36*s13^3 + 
                s13^2*s23 + 21*s13*s23^2 - 36*s23^3) + 2*s13*s23^2*(
                26*s13^3 - 16*s13^2*s23 + 7*s13*s23^2 - 23*s23^3) + 
              s12*s23*(47*s13^4 - 59*s13^3*s23 + 63*s13^2*s23^2 + 
                79*s13*s23^3 - 36*s23^4)) + p2q*p3q^2*
             (2*s12^4*s13*(-6*s13 + 25*s23) + s12^3*(72*s13^3 + 
                76*s13^2*s23 - 15*s13*s23^2 + 60*s23^3) + s13*s23*(
                -29*s13^4 + 249*s13^3*s23 + 133*s13^2*s23^2 + 61*s13*s23^3 - 
                154*s23^4) + s12*s23*(302*s13^4 + 167*s13^3*s23 + 
                140*s13^2*s23^2 + 129*s13*s23^3 - 84*s23^4) + 
              s12^2*(84*s13^4 + 93*s13^3*s23 + 491*s13^2*s23^2 + 
                2*s13*s23^3 - 24*s23^4)) + p2q^2*p3q*(20*s12^4*s13*s23 + 
              3*s12^3*(8*s13^3 + s13^2*s23 + s13*s23^2 + 8*s23^3) - 
              2*s12^2*(18*s13^4 + 9*s13^3*s23 - 157*s13^2*s23^2 + 
                9*s13*s23^3 + 18*s23^4) - 4*s13*s23*(36*s13^4 - 
                25*s13^3*s23 - 50*s13^2*s23^2 - 25*s13*s23^3 + 36*s23^4) + 
              s12*(-60*s13^5 + 59*s13^4*s23 + 87*s13^3*s23^2 + 87*s13^2*
                 s23^3 + 59*s13*s23^4 - 60*s23^5)) - 
            p2q^3*(2*s12^3*s13*(7*s13 - s23)*s23 + 2*s12*s23*(8*s13^4 - 
                2*s13^3*s23 - 25*s13^2*s23^2 - 2*s13*s23^3 + 6*s23^4) + 
              s12^2*(12*s13^4 + 23*s13^3*s23 - 70*s13^2*s23^2 + 
                13*s13*s23^3 + 12*s23^4) + s13*(-12*s13^5 + 55*s13^4*s23 + 
                16*s13^3*s23^2 - 82*s13^2*s23^3 - 62*s13*s23^4 + 
                41*s23^5)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23^2*(p1q^2*s23*(s12 + s23) + (p2q + p3q)*(s12 + s13)*
           (p2q*s13 - p3q*(s12 + s23)) - p1q*(p3q*(s12 + s13 - s23)*
             (s12 + s23) + p2q*(s12^2 + 2*s13*s23 + s12*(s13 + s23))))) - 
       (ep*p3q*(s12 + s13 + s23)*(-10*p1q^6*s12*s23^2*(s13 + s23)*
           (s12^2 - s13^2 + 2*s12*s23 + s23^2) - (p2q + p3q)*
           (10*p2q^5*s12*s13^2*(s13 + s23)*(s12^2 + 2*s12*s13 + s13^2 - 
              s23^2) - 4*p3q^5*s12^2*(10*s12^4 + 8*s13*(s13 - s23)^2*s23 + 
              8*s12^3*(s13 + s23) + s12^2*(s13^2 + s23^2) + s12*(3*s13^3 - 
                5*s13^2*s23 - 5*s13*s23^2 + 3*s23^3)) - p2q^4*p3q*s13*
             (7*s13^2*(s13 - s23)*(s13 + s23)^2 + 10*s12^4*(4*s13 + 3*s23) + 
              s12^3*(69*s13^2 + 5*s13*s23 - 30*s23^2) + s12^2*(85*s13^3 + 
                11*s13^2*s23 - 50*s13*s23^2 + 10*s23^3) + s12*(63*s13^4 + 
                23*s13^3*s23 + 3*s13^2*s23^2 + 33*s13*s23^3 - 10*s23^4)) + 
            p2q*p3q^4*s12*(-40*s12^5 + s12^4*(69*s13 + 75*s23) + 
              s12^3*(35*s13^2 + 160*s13*s23 + 109*s23^2) + s12^2*(-57*s13^3 - 
                44*s13^2*s23 + 160*s13*s23^2 + 13*s23^3) + 
              s13*s23*(25*s13^3 - 39*s13^2*s23 - 25*s13*s23^2 + 39*s23^3) + 
              s12*(17*s13^4 - 184*s13^3*s23 + 132*s13^2*s23^2 - 
                32*s13*s23^3 + 19*s23^4)) - p2q^2*p3q^3*(20*s12^6 - 
              7*s13^2*(s13 - s23)*s23*(s13 + s23)^2 - 3*s12^5*(17*s13 + 
                19*s23) + s12^4*(83*s13^2 + 162*s13*s23 - 13*s23^2) + 
              s12^3*(37*s13^3 + 381*s13^2*s23 + 121*s13*s23^2 + 45*s23^3) + 
              s12^2*(-119*s13^4 + 125*s13^3*s23 + 49*s13^2*s23^2 + 
                156*s13*s23^3 - 19*s23^4) - 2*s12*s13*(s13^4 + 82*s13^3*s23 - 
                19*s13^2*s23^2 - 74*s13*s23^3 + 26*s23^4)) + 
            p2q^3*p3q^2*(10*s12^5*(5*s13 + 2*s23) + 2*s12^4*(19*s13^2 - 
                36*s13*s23 - 5*s23^2) - 7*(s13^3 - s13*s23^2)^2 + 
              s12^3*(129*s13^3 + 88*s13^2*s23 + 39*s13*s23^2 - 20*s23^3) + 
              s12^2*(97*s13^4 + 276*s13^3*s23 + 203*s13^2*s23^2 - 
                66*s13*s23^3 + 10*s23^4) + s12*s13*(-51*s13^4 + 176*s13^3*
                 s23 + 98*s13^2*s23^2 - 96*s13*s23^3 + 33*s23^4))) + 
          p1q^5*s23*(p3q*(-7*(s13 - s23)*s23^2*(s13 + s23)^2 + 
              10*s12^4*(3*s13 + 4*s23) + s12^3*(-30*s13^2 - 5*s13*s23 + 
                59*s23^2) + s12^2*(10*s13^3 - 50*s13^2*s23 - 9*s13*s23^2 + 
                65*s23^3) + s12*(-10*s13^4 + 43*s13^3*s23 + 13*s13^2*s23^2 + 
                13*s13*s23^3 + 53*s23^4)) + p2q*(20*s12^4*(s13 + s23) - 
              7*(s13 - s23)*s23^2*(s13 + s23)^2 + s12^3*(-20*s13^2 + 
                5*s13*s23 + 39*s23^2) + s12^2*(20*s13^3 + 10*s13^2*s23 + 
                61*s13*s23^2 + 85*s23^3) + s12*(-20*s13^4 + 33*s13^3*s23 + 
                43*s13^2*s23^2 + 63*s13*s23^3 + 73*s23^4))) + 
          p1q*(p2q^5*s13*(20*s12^4*(s13 + s23) + 7*s13^2*(s13 - s23)*
               (s13 + s23)^2 + s12^3*(39*s13^2 + 5*s13*s23 - 20*s23^2) + 
              s12^2*(85*s13^3 + 61*s13^2*s23 + 10*s13*s23^2 + 20*s23^3) + 
              s12*(73*s13^4 + 63*s13^3*s23 + 43*s13^2*s23^2 + 33*s13*s23^3 - 
                20*s23^4)) + p3q^5*s12*(80*s12^5 - s12^4*(43*s13 + 37*s23) - 
              s12^3*(105*s13^2 + 160*s13*s23 + 31*s23^2) - s12^2*(s13^3 + 
                180*s13^2*s23 - 24*s13*s23^2 - 69*s23^3) + 
              s13*s23*(-39*s13^3 + 25*s13^2*s23 + 39*s13*s23^2 - 25*s23^3) + 
              s12*(-19*s13^4 + 64*s13^3*s23 - 196*s13^2*s23^2 + 
                216*s13*s23^3 - 17*s23^4)) - p2q^4*p3q*
             (20*s12^5*(2*s13 + s23) + s12^4*(7*s13^2 - 127*s13*s23 - 
                30*s23^2) - 7*s13^2*(s13 + s23)^2*(3*s13^2 - 7*s13*s23 + 
                4*s23^2) + s12^3*(176*s13^3 + 273*s13^2*s23 + 145*s13*s23^2 - 
                10*s23^3) + s12^2*(-10*s13^4 + 386*s13^3*s23 + 227*s13^2*
                 s23^2 - 169*s13*s23^3 + 30*s23^4) + s12*(-240*s13^5 + 
                213*s13^4*s23 + 65*s13^3*s23^2 - 259*s13^2*s23^3 + 
                119*s13*s23^4 - 10*s23^5)) + p2q*p3q^4*(120*s12^6 - 
              308*s12^5*(s13 + s23) - 7*s13*s23*(s13^2 - s23^2)^2 - 
              8*s12^4*(11*s13^2 + 43*s13*s23 + 11*s23^2) + 
              4*s12^3*(55*s13^3 + 13*s13^2*s23 + 13*s13*s23^2 + 55*s23^3) + 
              s12^2*(-108*s13^4 + 489*s13^3*s23 - 442*s13^2*s23^2 + 
                489*s13*s23^3 - 108*s23^4) + 2*s12*(6*s13^5 - 133*s13^4*s23 + 
                111*s13^3*s23^2 + 111*s13^2*s23^3 - 133*s13*s23^4 + 
                6*s23^5)) + p2q^3*p3q^2*(20*s12^6 - 4*s12^5*(23*s13 + 
                31*s23) + s12^4*(288*s13^2 + 617*s13*s23 + 135*s23^2) + 
              7*s13*(s13 + s23)^2*(3*s13^3 - 11*s13^2*s23 + 10*s13*s23^2 - 
                2*s23^3) + s12^3*(-187*s13^3 + 299*s13^2*s23 + 91*s13*s23^2 + 
                85*s23^3) - s12^2*(365*s13^4 + 432*s13^3*s23 + 189*s13^2*
                 s23^2 - 421*s13*s23^3 + 171*s23^4) + s12*(243*s13^5 - 
                785*s13^4*s23 + 56*s13^3*s23^2 + 666*s13^2*s23^3 - 
                395*s13*s23^4 + 23*s23^5)) + p2q^2*p3q^3*(60*s12^6 - 
              s12^5*(317*s13 + 385*s23) + 2*s12^4*(166*s13^2 + 143*s13*s23 + 
                9*s23^2) + 7*s13*(s13 + s23)^2*(s13^3 - 6*s13^2*s23 + 
                8*s13*s23^2 - 3*s23^3) + s12^3*(249*s13^3 + 749*s13^2*s23 + 
                154*s13*s23^2 + 196*s23^3) + s12^2*(-379*s13^4 + 
                400*s13^3*s23 - 288*s13^2*s23^2 + 485*s13*s23^3 - 
                242*s23^4) + s12*(88*s13^5 - 746*s13^4*s23 + 331*s13^3*
                 s23^2 + 593*s13^2*s23^3 - 547*s13*s23^4 + 25*s23^5))) + 
          p1q^4*(-(p3q^2*(10*s12^5*(2*s13 + 5*s23) - 2*s12^4*(5*s13^2 + 
                 51*s13*s23 + s23^2) - 7*s23^2*(s13 + s23)^2*(s13^2 - 
                 3*s13*s23 + 2*s23^2) + s12^3*(-20*s13^3 + 69*s13^2*s23 + 
                 83*s13*s23^2 + 60*s23^3) + s12*s23*(43*s13^4 - 129*s13^3*
                  s23 + 95*s13^2*s23^2 + 153*s13*s23^3 - 114*s23^4) + s12^2*
                (10*s13^4 - 76*s13^3*s23 + 253*s13^2*s23^2 + 265*s13*s23^3 + 
                 12*s23^4))) - p2q*p3q*(20*s12^5*(s13 + 2*s23) - 
              7*s23^2*(s13 + s23)^2*(4*s13^2 - 7*s13*s23 + 3*s23^2) + 
              s12^4*(-30*s13^2 - 127*s13*s23 + 7*s23^2) + s12^3*(-10*s13^3 + 
                145*s13^2*s23 + 273*s13*s23^2 + 176*s23^3) + 
              s12^2*(30*s13^4 - 169*s13^3*s23 + 227*s13^2*s23^2 + 
                386*s13*s23^3 - 10*s23^4) + s12*(-10*s13^5 + 119*s13^4*s23 - 
                259*s13^3*s23^2 + 65*s13^2*s23^3 + 213*s13*s23^4 - 
                240*s23^5)) + p2q^2*(7*s23^2*(s13 + s23)^2*(3*s13^2 - 
                4*s13*s23 + s23^2) + s12^4*(20*s13^2 + 55*s13*s23 + 
                21*s23^2) - 2*s12^3*(5*s13^3 + 23*s13^2*s23 + 45*s13*s23^2 + 
                13*s23^3) + s12^2*(-20*s13^4 + 63*s13^3*s23 - 4*s13^2*s23^2 - 
                71*s13*s23^3 + 72*s23^4) + 2*s12*(5*s13^5 - 48*s13^4*s23 + 
                35*s13^3*s23^2 - 15*s13^2*s23^3 - 40*s13*s23^4 + 
                63*s23^5))) + p1q^2*(p3q^4*(60*s12^6 + 7*s13*(s13 - s23)*s23^
                2*(s13 + s23)^2 - 12*s12^5*(11*s13 + 10*s23) + 
              s12^4*(-122*s13^2 + 2*s13*s23 + 48*s23^2) + s12^3*(32*s13^3 - 
                39*s13^2*s23 + 425*s13*s23^2 + 94*s23^3) + s12^2*(-38*s13^4 + 
                188*s13^3*s23 - 83*s13^2*s23^2 + 309*s13*s23^3 - 136*s23^4) + 
              s12*s23*(-91*s13^4 + 173*s13^3*s23 + 77*s13^2*s23^2 - 
                189*s13*s23^3 - 2*s23^4)) + p2q^4*(7*s13^2*(s13 + s23)^2*(
                s13^2 - 4*s13*s23 + 3*s23^2) + s12^4*(21*s13^2 + 55*s13*s23 + 
                20*s23^2) - 2*s12^3*(13*s13^3 + 45*s13^2*s23 + 23*s13*s23^2 + 
                5*s23^3) + s12^2*(72*s13^4 - 71*s13^3*s23 - 4*s13^2*s23^2 + 
                63*s13*s23^3 - 20*s23^4) + 2*s12*(63*s13^5 - 40*s13^4*s23 - 
                15*s13^3*s23^2 + 35*s13^2*s23^3 - 48*s13*s23^4 + 5*s23^5)) - 
            p2q^3*p3q*(s12^5*(21*s13 + 47*s23) - s12^4*(234*s13^2 + 
                443*s13*s23 + 159*s23^2) - 7*s13*(s13 + s23)^2*(2*s13^3 - 
                11*s13^2*s23 + 14*s13*s23^2 - 5*s23^3) + s12^3*(130*s13^3 + 
                25*s13^2*s23 + 52*s13*s23^2 + 65*s23^3) + s12^2*(132*s13^4 + 
                220*s13^3*s23 - 87*s13^2*s23^2 - 140*s13*s23^3 + 195*s23^4) - 
              s12*(267*s13^5 - 614*s13^4*s23 + 160*s13^3*s23^2 + 
                426*s13^2*s23^3 - 539*s13*s23^4 + 76*s23^5)) + 
            p2q^2*p3q^2*(-274*s12^5*(s13 + s23) + 7*(s13^2 - s23^2)^2*(
                s13^2 - 8*s13*s23 + s23^2) + s12^4*(353*s13^2 + 602*s13*s23 + 
                353*s23^2) + 12*s12^3*(5*s13^3 + 19*s13^2*s23 + 
                19*s13*s23^2 + 5*s23^3) - 2*s12^2*(204*s13^4 - 89*s13^3*s23 + 
                42*s13^2*s23^2 - 89*s13*s23^3 + 204*s23^4) + 
              2*s12*(83*s13^5 - 485*s13^4*s23 + 330*s13^3*s23^2 + 
                330*s13^2*s23^3 - 485*s13*s23^4 + 83*s23^5)) + 
            p2q*p3q^3*(60*s12^6 - s12^5*(385*s13 + 317*s23) + 
              2*s12^4*(9*s13^2 + 143*s13*s23 + 166*s23^2) + 7*s23*(s13 + s23)^
                2*(-3*s13^3 + 8*s13^2*s23 - 6*s13*s23^2 + s23^3) + 
              s12^3*(196*s13^3 + 154*s13^2*s23 + 749*s13*s23^2 + 249*s23^3) + 
              s12^2*(-242*s13^4 + 485*s13^3*s23 - 288*s13^2*s23^2 + 
                400*s13*s23^3 - 379*s23^4) + s12*(25*s13^5 - 547*s13^4*s23 + 
                593*s13^3*s23^2 + 331*s13^2*s23^3 - 746*s13*s23^4 + 
                88*s23^5))) + p1q^3*(p3q^3*(20*s12^6 - s12^5*(77*s13 + 
                101*s23) - 3*s12^4*(s13^2 - 78*s13*s23 - 15*s23^2) + 
              7*s23^2*(s13 + s23)^2*(2*s13^2 - 3*s13*s23 + s23^2) + 
              s12^3*(65*s13^3 + 82*s13^2*s23 + 293*s13*s23^2 - 92*s23^3) + 
              s12*s23*(-85*s13^4 + 244*s13^3*s23 - 60*s13^2*s23^2 - 
                340*s13*s23^3 + 49*s23^4) - s12^2*(29*s13^4 - 222*s13^3*s23 + 
                154*s13^2*s23^2 + 151*s13*s23^3 + 216*s23^4)) + 
            p2q^3*(-21*s13*s23*(s13^2 - s23^2)^2 + 7*s12^4*(3*s13^2 + 
                10*s13*s23 + 3*s23^2) - s12^3*(85*s13^3 + 131*s13^2*s23 + 
                131*s13*s23^2 + 85*s23^3) - s12^2*(53*s13^4 + 109*s13^3*s23 + 
                28*s13^2*s23^2 + 109*s13*s23^3 + 53*s23^4) + s12*(53*s13^5 - 
                229*s13^4*s23 - 16*s13^3*s23^2 - 16*s13^2*s23^3 - 
                229*s13*s23^4 + 53*s23^5)) + p2q*p3q^2*(20*s12^6 - 
              4*s12^5*(31*s13 + 23*s23) + s12^4*(135*s13^2 + 617*s13*s23 + 
                288*s23^2) + s12^3*(85*s13^3 + 91*s13^2*s23 + 299*s13*s23^2 - 
                187*s23^3) + 7*s23*(s13 + s23)^2*(-2*s13^3 + 10*s13^2*s23 - 
                11*s13*s23^2 + 3*s23^3) - s12^2*(171*s13^4 - 421*s13^3*s23 + 
                189*s13^2*s23^2 + 432*s13*s23^3 + 365*s23^4) + 
              s12*(23*s13^5 - 395*s13^4*s23 + 666*s13^3*s23^2 + 
                56*s13^2*s23^3 - 785*s13*s23^4 + 243*s23^5)) - 
            p2q^2*p3q*(s12^5*(47*s13 + 21*s23) - s12^4*(159*s13^2 + 
                443*s13*s23 + 234*s23^2) + 7*s23*(s13 + s23)^2*(5*s13^3 - 
                14*s13^2*s23 + 11*s13*s23^2 - 2*s23^3) + s12^3*(65*s13^3 + 
                52*s13^2*s23 + 25*s13*s23^2 + 130*s23^3) + s12^2*(195*s13^4 - 
                140*s13^3*s23 - 87*s13^2*s23^2 + 220*s13*s23^3 + 132*s23^4) - 
              s12*(76*s13^5 - 539*s13^4*s23 + 426*s13^3*s23^2 + 160*s13^2*
                 s23^3 - 614*s13*s23^4 + 267*s23^5)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*
         (p1q^3*s23*(s12 + s23)*(s13 + s23) + (p2q + p3q)*(s12 + s13)*
           (p3q^2*s12*(s12 + s23) + p2q^2*s13*(s13 + s23) - 
            p2q*p3q*(s23*(s13 + s23) + s12*(2*s13 + s23))) - 
          p1q*(p2q^2*(s13 + s23)*(s12^2 - s13*(s13 - 2*s23) + s12*s23) - 
            p3q^2*(s12 + s23)*(s12^2 - 2*s12*s23 - s13*(s13 + s23)) + 
            p2q*p3q*(-s12^3 + s12^2*(s13 + s23) - (s13 - s23)^2*(s13 + s23) + 
              s12*(s13^2 + s23^2))) - p1q^2*(p2q*(s13 + s23)*
             (s12^2 + s12*s13 + (2*s13 - s23)*s23) + 
            p3q*(s12^2*(s13 + 2*s23) + s23*(s13^2 - s23^2) + s12*(s13^2 + 
                s13*s23 + s23^2))))))*Int[DS[k]*DS[k + p3]*
        DS[k + p1 + p2 + p3]*Eik[k]] + 
     (-1/108*(ep*(s12 + s13 + s23)*(p1q^2*s23*(s12 + s23)*(15*s12 + 20*s13 + 
             6*s23) + p2q^2*s13^2*(43*s12 + 20*s13 + 6*s23) + 
           p1q*p3q*(s12 + s23)*(39*s12^2 + 16*s12*s13 + 63*s12*s23 + 
             20*s13*s23 + 6*s23^2) - p2q*p3q*s13*(82*s12^2 + 36*s12*s13 + 
             97*s12*s23 + 20*s13*s23 + 6*s23^2) - p1q*p2q*s13*
            (43*s12^2 + 20*s12*s13 + 64*s12*s23 + 40*s13*s23 + 12*s23^2) + 
           p3q^2*s12*(s12 + s23)*(39*s12 + 16*(s13 + 3*s23))))/
         ((p1q + p2q + p3q)*s12*s13*s23) + (ep^2*(s12 + s13 + s23)*
         (p1q^2*(9*s12 - 10*s13)*s23*(s12 + s23) - 
          (p3q*s12*(9*s12 + 8*s13) - p2q*s13*(11*s12 + 10*s13))*
           (-(p2q*s13) + p3q*(s12 + s23)) + 
          p1q*(-(p3q*(s12 + s23)*(9*s12^2 + 8*s12*s13 - 9*s12*s23 + 10*s13*
                s23)) + p2q*s13*(11*s12^2 + 20*s13*s23 + 2*s12*(5*s13 + 
                s23)))))/(54*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     (-1/108*(ep*(s12 + s13 + s23)*(p2q^2*s13*(s12 + s13)*(15*s12 + 6*s13 + 
             20*s23) + p1q^2*s23^2*(43*s12 + 6*s13 + 20*s23) + 
           p2q*p3q*(s12 + s13)*(39*s12^2 + 63*s12*s13 + 6*s13^2 + 
             16*s12*s23 + 20*s13*s23) - p1q*p3q*s23*(82*s12^2 + 97*s12*s13 + 
             6*s13^2 + 36*s12*s23 + 20*s13*s23) - p1q*p2q*s23*
            (43*s12^2 + 64*s12*s13 + 12*s13^2 + 20*s12*s23 + 40*s13*s23) + 
           p3q^2*s12*(s12 + s13)*(39*s12 + 16*(3*s13 + s23))))/
         ((p1q + p2q + p3q)*s12*s13*s23) + (ep^2*(s12 + s13 + s23)*
         (p2q^2*s13*(s12 + s13)*(9*s12 - 10*s23) - 
          (p3q*(s12 + s13) - p1q*s23)*(p3q*s12*(9*s12 + 8*s23) - 
            p1q*s23*(11*s12 + 10*s23)) + 
          p2q*(-(p3q*(s12 + s13)*(9*s12^2 - 9*s12*s13 + 8*s12*s23 + 10*s13*
                s23)) + p1q*s23*(11*s12^2 + 20*s13*s23 + 2*s12*(s13 + 
                5*s23)))))/(54*(p1q + p2q + p3q)*s12*s13*s23))*
      Int[DS[k]*DS[k + p2 + p3]*DS[k + p1 + p2 + p3]*Eik[k]] + 
     ((ep^2*(p2q + p3q)^2*(s12 + s13 + s23)*(p2q*s13*(3*s12 + 3*s13 - s23) + 
          p1q*s23*(s12 - 3*s13 + s23) - p3q*(s12^2 + s12*(-s13 + s23) + 
            2*s13*(-s13 + s23))))/(54*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       ((s12 + s13 + s23)*(-2*p1q^4*(p2q + p3q)*(6*s13 - s23)*s23^2 + 
          p1q^3*s23*(2*p2q*p3q*(6*s12*s13 + 6*s13^2 - 2*s12*s23 - 
              26*s13*s23 + 3*s23^2) + p3q^2*(24*s12*s13 + 12*s13^2 - 
              3*s12*s23 - 19*s13*s23 + 3*s23^2) + p2q^2*(12*s12*s13 + 
              24*s13^2 - s12*s23 - 9*s13*s23 + 3*s23^2)) - 
          (p2q + p3q)^2*(p2q^3*s13*s23*(s12 + s13 + s23) + 
            2*p3q^3*(s12^2*(6*s13 - s23) - 3*s13^2*s23) - 
            2*p2q*p3q^2*(s12^2*s23 + 3*s13^2*s23 + 2*s12*s13*(6*s13 + s23)) + 
            p2q^2*p3q*(12*s13^3 + s12*s23*(-s12 + s23) + s13*s23*(-5*s12 + 
                2*s23))) + p1q*(p2q + p3q)*
           (p2q^3*(-12*s13^3 + s13*(4*s12 - s23)*s23 + s23^2*(-s12 + s23)) + 
            2*p3q^3*(9*s13^2*s23 + 2*s12*(4*s13 - s23)*s23 + s12^2*(-12*s13 + 
                s23)) + p2q^2*p3q*(-24*s13^3 + 2*s12^2*s23 + 26*s13^2*s23 - 
              5*s13*s23^2 + s23^3 + s12*(24*s13^2 + 20*s13*s23 - 5*s23^2)) + 
            2*p2q*p3q^2*(s13*(16*s13 - 7*s23)*s23 + s12^2*(-6*s13 + 2*s23) + 
              s12*(24*s13^2 + 10*s13*s23 - 3*s23^2))) + 
          p1q^2*(p2q^3*(-12*s13^3 + 19*s13^2*s23 + s13*(11*s12 - 3*s23)*s23 + 
              2*s23^2*(-s12 + s23)) + p2q^2*p3q*(-12*s13^3 + s12^2*s23 + 
              62*s13^2*s23 - 28*s13*s23^2 + 4*s23^3 + 3*s12*(8*s13^2 + 
                13*s13*s23 - 3*s23^2)) + p3q^3*(s12*(41*s13 - 5*s23)*s23 + 
              s12^2*(-12*s13 + s23) + 2*s23*(12*s13^2 - 3*s13*s23 + s23^2)) + 
            p2q*p3q^2*(2*s12^2*(-6*s13 + s23) + 3*s12*(8*s13^2 + 15*s13*s23 - 
                4*s23^2) + s23*(43*s13^2 - 55*s13*s23 + 4*s23^2)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)) + 
       (ep*(2*p1q^3*(p3q*(3*s12 + s13 - 5*s23) + p2q*(s12 + 3*s13 - s23))*s23*
           (s12 + s13 + s23) - 4*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q*(s12 + s13 + s23)*(-(p2q*p3q^2*(50*s12^2 + 5*s13^2 + 5*s12*
                (7*s13 - 4*s23) + 117*s13*s23 - 38*s23^2)) - 
            p3q^3*(27*s12^2 + 27*s12*s13 + 8*s13^2 - 16*s12*s23 + 
              45*s13*s23 - 19*s23^2) + p2q^3*(15*s12*s13 + 11*s13^2 + 
              2*s12*s23 - 21*s13*s23 - 2*s23^2) + p2q^2*p3q*
             (-23*s12^2 + 7*s12*s13 + 14*s13^2 + 10*s12*s23 - 89*s13*s23 + 
              17*s23^2)) + p1q^2*(s12 + s13 + s23)*
           (p3q^2*(-2*s12^2 + 2*s12*s13 + 37*s12*s23 - 7*s13*s23 + 
              11*s23^2) + p2q^2*(2*s12*s13 - 2*s13^2 + 23*s12*s23 - 
              9*s13*s23 + 19*s23^2) - 2*p2q*p3q*(s12^2 + s13^2 + 8*s13*s23 - 
              17*s23^2 - 2*s12*(s13 + 13*s23))) + (p2q + p3q)*
           (2*p2q^3*s13*(s12 + s13 + s23)^2 - p3q^3*(27*s12^3 + 
              s12^2*(58*s13 + 46*s23) + 2*s13*(4*s13^2 + 23*s13*s23 + 
                19*s23^2) + s12*(39*s13^2 + 88*s13*s23 + 19*s23^2)) - 
            p2q*p3q^2*(27*s12^3 + s12^2*(39*s13 + 46*s23) + s12*(5*s13^2 + 
                88*s13*s23 + 19*s23^2) + s13*(-7*s13^2 + 50*s13*s23 + 
                57*s23^2)) + p2q^2*p3q*(-2*s12^3 + 15*s12^2*s13 + 
              2*s12*(16*s13^2 + 2*s13*s23 + s23^2) + 15*(s13^3 - 
                s13*s23^2)))))/(108*(p1q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)))*
      Int[DS[k]*DS[k + p2 + p3]*Eik[k - p1]] + 
     ((ep*(2*p2q^4*s13^2*(s12 + s13 + s23) - p1q^4*s23*(s12 + s13 + s23)^2 + 
          p2q^3*p3q*s13*(-3*s12^2 + 5*s13^2 + 2*s12*(s13 - 2*s23) + 
            4*s13*s23 - s23^2) + p2q^2*p3q^2*(s12^3 - 6*s12^2*s13 - 
            s12*(s13^2 - 9*s13*s23 + s23^2) + s13*(6*s13^2 + 23*s13*s23 + 
              17*s23^2)) + p2q*p3q^3*(2*s12^3 + 2*s13^3 + 15*s13^2*s23 - 
            8*s13*s23^2 - 21*s23^3 - 3*s12^2*(2*s13 + 7*s23) - 
            2*s12*(3*s13^2 + 9*s13*s23 + 22*s23^2)) + 
          p3q^4*(2*s12^3 - 19*s12^2*s23 - s23*(4*s13^2 + 25*s13*s23 + 
              21*s23^2) - s12*(2*s13^2 + 27*s13*s23 + 42*s23^2)) - 
          p1q*(s12 + s13 + s23)*(p2q^3*s13*(s12 - s13 + 3*s23) - 
            p2q^2*p3q*(s12^2 - 3*s12*s13 + 6*s13^2 - 2*s12*s23 + 35*s13*s23 + 
              s23^2) + p2q*p3q^2*(-2*s12^2 + 10*s12*s13 - 4*s13^2 + 
              69*s12*s23 - 28*s13*s23 + 61*s23^2) + 
            p3q^3*(-4*s12^2 + 4*s12*s13 + 65*s12*s23 + 10*s13*s23 + 
              63*s23^2)) + p1q^3*(s12 + s13 + s23)*
           (-(p2q*(-s13^2 + s13*s23 + 19*s23^2 + s12*(s13 + 21*s23))) + 
            p3q*(s12^2 - s23*(5*s13 + 22*s23) - s12*(s13 + 23*s23))) + 
          p1q^2*(s12 + s13 + s23)*(p2q*p3q*(-5*s12*s13 + 3*s13^2 - 
              67*s12*s23 + 12*s13*s23 - 59*s23^2) + 
            p2q^2*(2*s13^2 + 18*s13*s23 + s23*(-s12 + s23)) + 
            p3q^2*(3*s12^2 - 3*s12*(s13 + 22*s23) - s23*(10*s13 + 63*s23)))))/
        (54*(p2q + p3q)*(p1q + p2q + p3q)*s13*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))) + (p1q^5*s13*s23*(s12 + s13 + s23)^2 - 
         p1q^4*(s12 + s13 + s23)*(p2q*(s13^3 - s13^2*s23 + 84*s23^3 - 
             s12*s13*(s13 + 44*s23)) + p3q*(s12^2*s13 - 
             s12*s13*(s13 + 45*s23) - 2*s23*(2*s13^2 + s13*s23 - 42*
                s23^2))) + p1q^3*(s12 + s13 + s23)*
          (p2q^2*(-2*s13^3 + 3*s13^2*s23 + 125*s13*s23^2 - 84*s23^3 + 
             s12*s13*(2*s13 + 85*s23)) - 2*p2q*p3q*(s12^2*s13 + s13^3 - 
             3*s13^2*s23 - 83*s13*s23^2 + 126*s23^3 - 
             3*s12*(s13^2 + 36*s13*s23 + 28*s23^2)) + 
           p3q^2*(-4*s12^2*s13 + s23*(5*s13^2 + 43*s13*s23 - 168*s23^2) + 
             s12*(2*s13^2 + 131*s13*s23 + 168*s23^2))) - 
         p3q*(2*p2q^4*s13^2*(s12 + s13 + s23)*(s13 + 42*s23) + 
           p2q^3*p3q*s13*(3*s13^3 + 128*s13^2*s23 + 41*s13*s23^2 - 84*s23^3 - 
             3*s12^2*(s13 + 56*s23) - 2*s12*s23*(23*s13 + 126*s23)) + 
           2*p3q^4*(-21*s12*s13*s23^2 - 21*s13*s23^2*(s13 + s23) + 
             s12^3*(s13 + 42*s23) + s12^2*(s13^2 + 43*s13*s23 + 42*s23^2)) + 
           2*p2q*p3q^3*(-63*s13*s23^2*(s13 + s23) + s12^3*(s13 + 84*s23) + 
             s12^2*(-s13^2 + 21*s13*s23 + 84*s23^2) - 
             s12*s13*(2*s13^2 + 66*s13*s23 + 127*s23^2)) + 
           p2q^2*p3q^2*(s12^3*(s13 + 84*s23) + s12^2*(-4*s13^2 - 210*s13*
                s23 + 84*s23^2) - s12*s13*(3*s13^2 + 258*s13*s23 + 463*
                s23^2) + 2*s13*(s13^3 + 22*s13^2*s23 - 63*s13*s23^2 - 84*
                s23^3))) + p1q^2*(s12 + s13 + s23)*
          (p2q^3*s13*(s12*(s13 + 84*s23) - 3*(s13^2 + 13*s13*s23 - 56*
                s23^2)) + p3q^3*(-7*s12^2*(s13 + 12*s23) + 
             2*s23*(s13^2 + 63*s13*s23 - 42*s23^2) + s12*(s13^2 + 131*s13*
                s23 + 336*s23^2)) - p2q*p3q^2*(s13^3 + 77*s13^2*s23 - 
             374*s13*s23^2 + 168*s23^3 + 6*s12^2*(s13 + 14*s23) - 
             s12*(11*s13^2 + 344*s13*s23 + 504*s23^2)) + 
           p2q^2*p3q*(-(s12^2*s13) + 3*s12*(3*s13^2 + 99*s13*s23 + 56*
                s23^2) - 2*(2*s13^3 + 58*s13^2*s23 - 209*s13*s23^2 + 42*
                s23^3))) + p1q*(-2*p2q^4*s13^2*(s12 + s13 + s23)*
            (s13 + 42*s23) - 2*p2q^3*p3q*s13*(3*s13^3 + 169*s13^2*s23 + 
             124*s13*s23^2 - 42*s23^3 - 2*s12^2*(s13 + 21*s23) + 
             s12*(s13^2 + 122*s13*s23 - 84*s23^2)) - 
           2*p3q^4*(-63*s13*s23^2*(s13 + s23) + 3*s12^3*(s13 + 28*s23) + 
             s12^2*s13*(3*s13 + 65*s23) - s12*s23*(22*s13^2 + 169*s13*s23 + 
               84*s23^2)) + p2q^2*p3q^2*(-2*s12^3*(s13 + 42*s23) + 
             s12^2*(10*s13^2 + 253*s13*s23 + 84*s23^2) - 
             s13*(4*s13^3 + 333*s13^2*s23 + 36*s13*s23^2 - 293*s23^3) + 
             2*s12*(4*s13^3 + 11*s13^2*s23 + 400*s13*s23^2 + 84*s23^3)) + 
           2*p2q*p3q^3*(-3*s12^3*(s13 + 42*s23) + s12^2*(2*s13^2 + 21*s13*
                s23 + 42*s23^2) + s13*s23*(-41*s13^2 + 126*s13*s23 + 167*
                s23^2) + s12*(5*s13^3 + 114*s13^2*s23 + 485*s13*s23^2 + 168*
                s23^3))))/(54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*Eik[k - p1]] + 
     ((ep^2*(p1q + p3q)^2*(s12 + s13 + s23)*(-(p2q*s13*(s12 + s13 - 3*s23)) + 
          p1q*(-3*s12 + s13 - 3*s23)*s23 + p3q*(s12^2 + s12*(s13 - s23) + 
            2*(s13 - s23)*s23)))/(54*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (ep*(4*p2q^4*s13^2*(s12 + s13 + s23) - 2*p1q^4*s23*(s12 + s13 + s23)^
            2 - 2*p2q^3*p3q*s13*(3*s12^2 - 2*s12*s13 - 5*s13^2 + 4*s12*s23 - 
            4*s13*s23 + s23^2) + p1q^3*(s12 + s13 + s23)*
           (p3q*(2*s12^2 - 2*s12*s13 - 19*s12*s23 + 13*s13*s23 - 17*s23^2) + 
            p2q*(-2*s12*s13 + 2*s13^2 - 15*s12*s23 + 21*s13*s23 - 
              11*s23^2)) + p2q*p3q^3*(27*s12^3 - 19*s13^3 + 26*s13^2*s23 + 
            53*s13*s23^2 + 8*s23^3 + s12^2*(11*s13 + 54*s23) - 
            7*s12*(5*s13^2 - 8*s13*s23 - 5*s23^2)) + p1q^2*(s12 + s13 + s23)*
           (p3q^2*(29*s12^2 + 17*s12*s13 - 5*s12*s23 + 72*s13*s23 - 
              22*s23^2) + p2q*p3q*(23*s12^2 - 10*s12*s13 - 17*s13^2 - 
              7*s12*s23 + 89*s13*s23 - 14*s23^2) + p2q^2*(-23*s12*s13 - 
              19*s13^2 - 2*s12*s23 + 9*s13*s23 + 2*s23^2)) + 
          p2q^2*p3q^2*(2*s12^3 - 35*s12^2*s13 - 2*s12*(24*s13^2 + 
              16*s13*s23 + s23^2) + s13*(-11*s13^2 - 4*s13*s23 + 7*s23^2)) + 
          p3q^4*(27*s12^3 + s12^2*(46*s13 + 58*s23) + 
            2*s23*(19*s13^2 + 23*s13*s23 + 4*s23^2) + 
            s12*(19*s13^2 + 88*s13*s23 + 39*s23^2)) + p1q*(s12 + s13 + s23)*
           (2*p2q^3*s13*(-s12 + s13 - 3*s23) + p3q^3*(54*s12^2 + 38*s12*s13 + 
              43*s12*s23 + 95*s13*s23 + s23^2) + p2q*p3q^2*
             (50*s12^2 - 20*s12*s13 - 38*s13^2 + 35*s12*s23 + 117*s13*s23 + 
              5*s23^2) + 2*p2q^2*p3q*(s12^2 - 17*s13^2 + 8*s13*s23 + s23^2 - 
              2*s12*(13*s13 + s23)))))/(108*(p2q + p3q)*(p1q + p2q + p3q)*s13*
         s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (-(p1q^5*s13*s23*(s12 + s13 + s23)^2) + p1q^4*(s12 + s13 + s23)*
          (p2q*(s13^3 - s12*s13*(s13 - 4*s23) - s13^2*s23 - 12*s23^3) + 
           p3q*(s12^2*s13 - s12*s13*(s13 - 3*s23) - 2*s23*(2*s13^2 + s13*
                s23 + 6*s23^2))) + p1q^3*(s12 + s13 + s23)*
          (p2q^2*(2*s13^3 - 3*s13^2*s23 + 19*s13*s23^2 - 12*s23^3 + 
             s12*s13*(-2*s13 + 11*s23)) + 2*p2q*p3q*(s12^2*s13 + s13^3 - 
             3*s13^2*s23 + 13*s13*s23^2 - 18*s23^3 - 3*s12*(s13^2 - 4*s13*
                s23 - 4*s23^2)) + p3q^2*(4*s12^2*s13 + 
             s23*(-5*s13^2 + 5*s13*s23 - 24*s23^2) + s12*(-2*s13^2 + 13*s13*
                s23 + 24*s23^2))) + p1q^2*(s12 + s13 + s23)*
          (p2q^3*s13*(-(s12*s13) + 3*s13^2 + 12*s12*s23 - 9*s13*s23 + 
             24*s23^2) + p2q^2*p3q*(s12^2*s13 + 4*s13^3 - 28*s13^2*s23 + 
             62*s13*s23^2 - 12*s23^3 + s12*(-9*s13^2 + 39*s13*s23 + 24*
                s23^2)) + p3q^3*(s12^2*(7*s13 - 12*s23) - 
             2*s23*(s13^2 - 9*s13*s23 + 6*s23^2) + s12*(-s13^2 + 13*s13*s23 + 
               48*s23^2)) + p2q*p3q^2*(s13^3 + 6*s12^2*(s13 - 2*s23) - 
             19*s13^2*s23 + 58*s13*s23^2 - 24*s23^3 + 
             s12*(-11*s13^2 + 40*s13*s23 + 72*s23^2))) + 
         p3q*(2*p2q^4*s13^2*(s13 - 6*s23)*(s12 + s13 + s23) + 
           p2q^3*p3q*s13*(3*s13^3 - 3*s12^2*(s13 - 8*s23) - 16*s13^2*s23 - 
             7*s13*s23^2 + 12*s23^3 + 2*s12*s23*(s13 + 18*s23)) + 
           2*p3q^4*(s12^3*(s13 - 6*s23) + 3*s12*s13*s23^2 + 
             3*s13*s23^2*(s13 + s23) + s12^2*(s13^2 - 5*s13*s23 - 6*s23^2)) + 
           2*p2q*p3q^3*(s12^3*(s13 - 12*s23) + 9*s13*s23^2*(s13 + s23) - 
             s12^2*(s13^2 + 3*s13*s23 + 12*s23^2) + s12*s13*(-2*s13^2 + 6*s13*
                s23 + 17*s23^2)) + p2q^2*p3q^2*(s12^3*(s13 - 12*s23) - 
             2*s12^2*(2*s13^2 - 15*s13*s23 + 6*s23^2) + 
             s12*s13*(-3*s13^2 + 30*s13*s23 + 65*s23^2) + 
             2*s13*(s13^3 - 2*s13^2*s23 + 9*s13*s23^2 + 12*s23^3))) + 
         p1q*(2*p2q^4*s13^2*(s13 - 6*s23)*(s12 + s13 + s23) + 
           2*p2q^3*p3q*s13*(3*s13^3 - 2*s12^2*(s13 - 3*s23) - 23*s13^2*s23 - 
             20*s13*s23^2 + 6*s23^3 + s12*(s13^2 - 22*s13*s23 + 12*s23^2)) + 
           2*p3q^4*(s12^2*s13*(3*s13 - 7*s23) + 3*s12^3*(s13 - 4*s23) + 
             9*s13*s23^2*(s13 + s23) + s12*s23*(2*s13^2 + 23*s13*s23 + 12*
                s23^2)) + 2*p2q*p3q^3*(3*s12^3*(s13 - 6*s23) + 
             s12^2*(-2*s13^2 + 3*s13*s23 + 6*s23^2) + 
             s13*s23*(-7*s13^2 + 18*s13*s23 + 25*s23^2) + 
             s12*(-5*s13^3 + 6*s13^2*s23 + 67*s13*s23^2 + 24*s23^3)) + 
           p2q^2*p3q^2*(2*s12^3*(s13 - 6*s23) + s12^2*(-10*s13^2 + 35*s13*
                s23 + 12*s23^2) + s12*(-8*s13^3 - 22*s13^2*s23 + 112*s13*
                s23^2 + 24*s23^3) + s13*(4*s13^3 - 51*s13^2*s23 - 12*s13*
                s23^2 + 43*s23^3))))/(54*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((ep*(p1q^3*(p3q*(3*s12 + s13 - 5*s23) + p2q*(s12 + 3*s13 - s23))*s23*
           (s12 + s13 + s23) - 2*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q*(s12 + s13 + s23)*(p2q*p3q^2*(-2*s12^2 + 69*s12*s13 + 
              61*s13^2 + 10*s12*s23 - 28*s13*s23 - 4*s23^2) + 
            p2q^2*p3q*(67*s12*s13 + 59*s13^2 + 5*s12*s23 - 12*s13*s23 - 
              3*s23^2) + p3q^3*(-2*s12^2 + 23*s12*s13 + 21*s13^2 + 
              8*s12*s23 - 13*s13*s23 - 2*s23^2) + p2q^3*(19*s13^2 + s13*s23 - 
              s23^2 + s12*(21*s13 + s23))) - p1q^2*(s12 + s13 + s23)*
           (p2q^2*(-(s12*s13) + s13^2 + 18*s13*s23 + 2*s23^2) + 
            p2q*p3q*(s12^2 - 2*s12*s13 + s13^2 - 3*s12*s23 + 35*s13*s23 + 
              6*s23^2) + p3q^2*(s12^2 + s23*(17*s13 + 6*s23) - 
              s12*(s13 + 7*s23))) + (p2q + p3q)*
           (p2q^3*s13*(s12 + s13 + s23)^2 + 2*p2q*p3q^2*(-s12^3 + 
              21*s12^2*s13 + 3*s13*(7*s13^2 + 8*s13*s23 + s23^2) + 
              s12*(43*s13^2 + 26*s13*s23 + s23^2)) + p2q^2*p3q*
             (-s12^3 + 21*s12^2*s13 + s12*(43*s13^2 + 27*s13*s23 + s23^2) + 
              s13*(21*s13^2 + 25*s13*s23 + 4*s23^2)) + 
            p3q^3*(-2*s12^3 + 19*s12^2*s13 + s12*(42*s13^2 + 27*s13*s23 + 
                2*s23^2) + s13*(21*s13^2 + 25*s13*s23 + 4*s23^2)))))/
        (54*(p1q + p3q)*(p1q + p2q + p3q)*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) - 
       ((s12 + s13 + s23)*(2*p1q^4*(p2q + p3q)*s23^2*(42*s13 + s23) - 
          p1q^3*s23*(2*p2q*p3q*(42*s13^2 - 166*s13*s23 - 3*s23^2 + 
              2*s12*(21*s13 + s23)) + p3q^2*(84*s13^2 - 125*s13*s23 - 
              3*s23^2 + 3*s12*(56*s13 + s23)) + p2q^2*(168*s13^2 - 
              39*s13*s23 - 3*s23^2 + s12*(84*s13 + s23))) + 
          (p2q + p3q)^2*(-(p2q^3*s13*s23*(s12 + s13 + s23)) + 
            2*p3q^3*(-21*s13^2*s23 + s12^2*(42*s13 + s23)) + 
            p2q^2*p3q*(84*s13^3 + s12*(s12 - s23)*s23 - s13*s23*(43*s12 + 
                2*s23)) + 2*p2q*p3q^2*(s12^2*s23 - 21*s13^2*s23 - 
              2*s12*s13*(42*s13 + 11*s23))) - p1q*(p2q + p3q)*
           (p2q^3*(-84*s13^3 + (s12 - s23)*s23^2 + s13*s23*(44*s12 + s23)) + 
            2*p3q^3*(63*s13^2*s23 + 2*s12*s23*(32*s13 + s23) - 
              s12^2*(84*s13 + s23)) + 2*p2q*p3q^2*(s13*(104*s13 - 41*s23)*
               s23 - 2*s12^2*(21*s13 + s23) + s12*(168*s13^2 + 86*s13*s23 + 
                3*s23^2)) + p2q^2*p3q*(-168*s13^3 - 2*s12^2*s23 + 
              166*s13^2*s23 + 5*s13*s23^2 - s23^3 + s12*(168*s13^2 + 
                172*s13*s23 + 5*s23^2))) - 
          p1q^2*(p2q^3*(-84*s13^3 + 125*s13^2*s23 + 2*(s12 - s23)*s23^2 + 
              s13*s23*(85*s12 + 3*s23)) - p3q^3*(-5*s12*s23*(59*s13 + s23) + 
              s12^2*(84*s13 + s23) + 2*s23*(-84*s13^2 + 21*s13*s23 + 
                s23^2)) + p2q*p3q^2*(-2*s12^2*(42*s13 + s23) + 
              s23*(293*s13^2 - 329*s13*s23 - 4*s23^2) + 3*s12*(56*s13^2 + 
                113*s13*s23 + 4*s23^2)) + p2q^2*p3q*(-(s12^2*s23) + 
              3*s12*(56*s13^2 + 99*s13*s23 + 3*s23^2) - 2*(42*s13^3 - 
                209*s13^2*s23 + 58*s13*s23^2 + 2*s23^3)))))/
        (54*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s23^2*
         (p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*Eik[k - p2]] + 
     ((-7*ep*(p1q + p2q)^2*(s12 + s13 + s23)*
         (p2q*s13*(s12*s13 + s13^2 + 3*s12*s23 - s23^2) + 
          p1q*s23*(3*s12*s13 - s13^2 + s12*s23 + s23^2) - 
          p3q*s12*((s13 - s23)^2 + s12*(s13 + s23))))/(54*(p1q + p2q + p3q)*
         s12*s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))) - 
       (5*ep^2*(p1q + p2q)^2*(s12 + s13 + s23)*
         (p2q*s13*(s12*s13 + s13^2 + 3*s12*s23 - s23^2) + 
          p1q*s23*(3*s12*s13 - s13^2 + s12*s23 + s23^2) - 
          p3q*s12*((s13 - s23)^2 + s12*(s13 + s23))))/(27*(p1q + p2q + p3q)*
         s12*s13*s23*(-(p3q*s12) + (p1q + p2q)*(s13 + s23))))*
      Int[DS[k]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep*s12*(-10*p2q^4*s13^2*(s12 + s13 + s23) + 5*p1q^4*s23*
           (s12 + s13 + s23)^2 + 5*p2q^3*p3q*s13*(3*s12^2 - 2*s12*s13 - 
            5*s13^2 + 4*s12*s23 - 4*s13*s23 + s23^2) + 
          p3q^4*(-10*s12^3 - 13*s12^2*s23 + s12*(10*s13^2 + 27*s13*s23 - 
              6*s23^2) + s23*(20*s13^2 + 17*s13*s23 - 3*s23^2)) + 
          p2q*p3q^3*(-10*s12^3 - 10*s13^3 + s12^2*(30*s13 - 3*s23) + 
            33*s13^2*s23 + 40*s13*s23^2 - 3*s23^3 + 
            s12*(30*s13^2 + 90*s13*s23 + 4*s23^2)) - p1q^3*(s12 + s13 + s23)*
           (p3q*(5*s12^2 - 5*s12*s13 - 7*s12*s23 - 25*s13*s23 - 2*s23^2) + 
            p2q*(-5*s12*s13 + 5*s13^2 + 3*s12*s23 - 5*s13*s23 + 13*s23^2)) + 
          p2q^2*p3q^2*(-5*s12^3 + 30*s12^2*s13 + s12*(5*s13^2 + 63*s13*s23 + 
              5*s23^2) + s13*(-30*s13^2 - 7*s13*s23 + 23*s23^2)) + 
          p1q*(s12 + s13 + s23)*(5*p2q^3*s13*(s12 - s13 + 3*s23) + 
            p2q*p3q^2*(-10*s12^2 + 50*s12*s13 - 20*s13^2 + 21*s12*s23 + 
              76*s13*s23 - 19*s23^2) + p3q^3*(-20*s12^2 + (50*s13 - 9*s23)*
               s23 + s12*(20*s13 + s23)) + p2q^2*p3q*(-5*s12^2 - 30*s13^2 + 
              41*s13*s23 - 5*s23^2 + 5*s12*(3*s13 + 2*s23))) - 
          p1q^2*(s12 + s13 + s23)*(p2q*p3q*(-25*s12*s13 + 15*s13^2 - 
              11*s12*s23 - 48*s13*s23 + 29*s23^2) + 
            p2q^2*(10*s13^2 - 18*s13*s23 + 5*s23*(-s12 + s23)) + 
            p3q^2*(15*s12^2 - 3*s12*(5*s13 + 2*s23) + s23*(-50*s13 + 
                9*s23)))))/(27*(p2q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) + 
       (s12*(-5*p1q^5*s13*s23*(s12 + s13 + s23)^2 + p1q^4*(s12 + s13 + s23)*
           (-(p2q*(-5*s13^3 + 5*s13^2*s23 + 12*s23^3 + s12*s13*(5*s13 + 
                 4*s23))) + p3q*(5*s12^2*s13 - s12*s13*(5*s13 + 9*s23) - 
              2*s23*(10*s13^2 + 5*s13*s23 + 6*s23^2))) - 
          p1q^3*(s12 + s13 + s23)*(-2*p2q*p3q*(5*s12^2*s13 - 15*s12*s13^2 + 
              5*s13^3 - 15*s13^2*s23 + 12*s12*s23^2 + 17*s13*s23^2 - 
              18*s23^3) + p2q^2*(-10*s13^3 + s12*s13*(10*s13 - 7*s23) + 
              15*s13^2*s23 - 23*s13*s23^2 + 12*s23^3) + 
            p3q^2*(-20*s12^2*s13 + s12*(10*s13^2 + 7*s13*s23 - 24*s23^2) + 
              s23*(25*s13^2 - s13*s23 + 24*s23^2))) + p1q^2*(s12 + s13 + s23)*
           (p2q^3*s13*(-5*s12*s13 + 15*s13^2 + 12*s12*s23 - 21*s13*s23 + 
              24*s23^2) + p2q^2*p3q*(5*s12^2*s13 + 20*s13^3 - 68*s13^2*s23 + 
              70*s13*s23^2 - 12*s23^3 + s12*(-45*s13^2 + 27*s13*s23 + 
                24*s23^2)) + p3q^3*(s12^2*(35*s13 - 12*s23) - 
              2*s23*(5*s13^2 - 9*s13*s23 + 6*s23^2) + s12*(-5*s13^2 - 
                7*s13*s23 + 48*s23^2)) + p2q*p3q^2*(5*s13^3 + 
              6*s12^2*(5*s13 - 2*s23) - 47*s13^2*s23 + 74*s13*s23^2 - 
              24*s23^3 + s12*(-55*s13^2 + 8*s13*s23 + 72*s23^2))) + 
          p3q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*(s12 + s13 + s23) + 
            p2q^3*p3q*s13*(15*s13^3 - 3*s12^2*(5*s13 - 8*s23) - 8*s13^2*s23 - 
              11*s13*s23^2 + 12*s23^3 + 2*s12*s23*(-7*s13 + 18*s23)) + 
            2*p3q^4*(s12^3*(5*s13 - 6*s23) + 3*s12*s13*s23^2 + 
              3*s13*s23^2*(s13 + s23) + s12^2*(5*s13^2 - s13*s23 - 
                6*s23^2)) + 2*p2q*p3q^3*(s12^3*(5*s13 - 12*s23) + 
              9*s13*s23^2*(s13 + s23) - s12^2*(5*s13^2 + 3*s13*s23 + 
                12*s23^2) + s12*s13*(-10*s13^2 - 6*s13*s23 + 13*s23^2)) + 
            p2q^2*p3q^2*(s12^3*(5*s13 - 12*s23) - 2*s12^2*(10*s13^2 - 
                15*s13*s23 + 6*s23^2) + s12*s13*(-15*s13^2 + 6*s13*s23 + 
                61*s23^2) + 2*s13*(5*s13^3 + 2*s13^2*s23 + 9*s13*s23^2 + 
                12*s23^3))) + p1q*(2*p2q^4*s13^2*(5*s13 - 6*s23)*
             (s12 + s13 + s23) + 2*p2q^3*p3q*s13*(15*s13^3 - 19*s13^2*s23 - 
              28*s13*s23^2 + 6*s23^3 + s12^2*(-10*s13 + 6*s23) + 
              s12*(5*s13^2 - 38*s13*s23 + 12*s23^2)) + 
            2*p3q^4*(3*s12^3*(5*s13 - 4*s23) + 9*s13*s23^2*(s13 + s23) + 
              s12^2*s13*(15*s13 + s23) + s12*s23*(-2*s13^2 + 19*s13*s23 + 
                12*s23^2)) + 2*p2q*p3q^3*(3*s12^3*(5*s13 - 6*s23) + 
              s12^2*(-10*s13^2 + 3*s13*s23 + 6*s23^2) + s13*s23*(-11*s13^2 + 
                18*s13*s23 + 29*s23^2) + s12*(-25*s13^3 - 30*s13^2*s23 + 
                59*s13*s23^2 + 24*s23^3)) + p2q^2*p3q^2*
             (2*s12^3*(5*s13 - 6*s23) + s12^2*(-50*s13^2 + 31*s13*s23 + 
                12*s23^2) - 2*s12*(20*s13^3 + 55*s13^2*s23 - 52*s13*s23^2 - 
                12*s23^3) + s13*(20*s13^3 - 63*s13^2*s23 - 36*s13*s23^2 + 
                47*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13^2*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p1]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep*s12*(-5*p1q^3*(p3q*(3*s12 + s13 - 5*s23) + p2q*(s12 + 3*s13 - s23))*
           s23*(s12 + s13 + s23) + 10*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q*(s12 + s13 + s23)*(p2q^3*(3*s12*s13 + 13*s13^2 - 5*s12*s23 - 
              5*s13*s23 + 5*s23^2) + p3q^3*(10*s12^2 - 7*s12*s13 + 3*s13^2 - 
              40*s12*s23 - 43*s13*s23 + 10*s23^2) + p2q^2*p3q*
             (-11*s12*s13 + 29*s13^2 - 25*s12*s23 - 48*s13*s23 + 15*s23^2) + 
            p2q*p3q^2*(10*s12^2 - 21*s12*s13 + 19*s13^2 - 50*s12*s23 - 
              76*s13*s23 + 20*s23^2)) - p1q^2*(s12 + s13 + s23)*
           (p2q^2*(5*s12*s13 - 5*s13^2 + 18*s13*s23 - 10*s23^2) + 
            p2q*p3q*(-5*s12^2 - 5*s13^2 + 41*s13*s23 - 30*s23^2 + 
              5*s12*(2*s13 + 3*s23)) + p3q^2*(-5*s12^2 + (23*s13 - 30*s23)*
               s23 + 5*s12*(s13 + 7*s23))) - (p2q + p3q)*
           (5*p2q^3*s13*(s12 + s13 + s23)^2 - 2*p2q*p3q^2*
             (5*s12^3 + 3*s12^2*s13 + s12*(s13^2 - 22*s13*s23 - 5*s23^2) + 
              3*s13*(s13^2 - 4*s13*s23 - 5*s23^2)) + p2q^2*p3q*
             (-5*s12^3 - 3*s12^2*s13 + s12*(-s13^2 + 27*s13*s23 + 5*s23^2) + 
              s13*(-3*s13^2 + 17*s13*s23 + 20*s23^2)) + 
            p3q^3*(-10*s12^3 - 13*s12^2*s13 + s12*(-6*s13^2 + 27*s13*s23 + 
                10*s23^2) + s13*(-3*s13^2 + 17*s13*s23 + 20*s23^2)))))/
        (27*(p1q + p3q)*(p1q + p2q + p3q)*s13*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) - (s12*(s12 + s13 + s23)*
         (2*p1q^4*(p2q + p3q)*(6*s13 - 5*s23)*s23^2 - 
          p1q^3*s23*(2*p2q*p3q*(6*s12*s13 + 6*s13^2 - 10*s12*s23 - 
              34*s13*s23 + 15*s23^2) + p3q^2*(12*s13^2 + 3*s12*(8*s13 - 
                5*s23) - 23*s13*s23 + 15*s23^2) + p2q^2*(12*s12*s13 + 
              24*s13^2 - 5*s12*s23 - 21*s13*s23 + 15*s23^2)) + 
          (p2q + p3q)^2*(5*p2q^3*s13*s23*(s12 + s13 + s23) + 
            2*p3q^3*(s12^2*(6*s13 - 5*s23) - 3*s13^2*s23) - 
            2*p2q*p3q^2*(2*s12*s13*(6*s13 - s23) + 5*s12^2*s23 + 
              3*s13^2*s23) + p2q^2*p3q*(12*s13^3 + 5*s12*s23*(-s12 + s23) + 
              s13*s23*(-s12 + 10*s23))) - 
          p1q^2*(p2q^3*(-12*s13^3 + 23*s13^2*s23 + s13*(7*s12 - 15*s23)*s23 + 
              10*s23^2*(-s12 + s23)) + p2q^2*p3q*(-12*s13^3 + 5*s12^2*s23 + 
              70*s13^2*s23 - 68*s13*s23^2 + 20*s23^3 + 3*s12*(8*s13^2 + 
                9*s13*s23 - 15*s23^2)) + p3q^3*(s12*(37*s13 - 25*s23)*s23 + 
              s12^2*(-12*s13 + 5*s23) + 2*s23*(12*s13^2 - 3*s13*s23 + 
                5*s23^2)) + p2q*p3q^2*(-2*s12^2*(6*s13 - 5*s23) + 
              3*s12*(8*s13^2 + 11*s13*s23 - 20*s23^2) + s23*(47*s13^2 - 
                83*s13*s23 + 20*s23^2))) + p1q*(p2q + p3q)*
           (p2q^3*(12*s13^3 + 5*(s12 - s23)*s23^2 + s13*s23*(4*s12 + 
                5*s23)) + 2*p3q^3*(s12^2*(12*s13 - 5*s23) - 9*s13^2*s23 + 
              2*s12*s23*(-2*s13 + 5*s23)) + 2*p2q*p3q^2*
             (2*s12^2*(3*s13 - 5*s23) + s13*s23*(-20*s13 + 11*s23) + 
              s12*(-24*s13^2 - 2*s13*s23 + 15*s23^2)) + 
            p2q^2*p3q*(24*s13^3 - 10*s12^2*s23 - 34*s13^2*s23 + 
              25*s13*s23^2 - 5*s23^3 + s12*(-24*s13^2 - 4*s13*s23 + 
                25*s23^2)))))/(27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - p1q*s23)))*
      Int[DS[k]*DS[k + p2]*DS[k + p1 + p2]*Eik[k - p3]] + 
     ((ep^2*(s12 + s13 + s23)*(2*p1q^4*s23^2*(s12 + s13 + s23) + 
          p1q^3*s23*(p2q*(-4*s12*s13 - 4*s13^2 + 21*s12*s23 - 4*s13*s23 + 
              17*s23^2) + p3q*(-4*s12^2 - 4*s12*s13 + 21*s12*s23 + 
              4*s13*s23 + 21*s23^2)) + (p3q*s12 - p2q*s13)^2*
           (p2q^2*(2*s12 - 19*s13 - 2*s23) + p3q^2*(25*s12 + 4*s13 + 
              21*s23) + p2q*p3q*(25*s12 + 17*(-s13 + s23))) + 
          p1q^2*(p3q^2*(2*s12^3 + 2*s12^2*(s13 - 24*s23) - s12*s23*(8*s13 + 
                17*s23) + s23^2*(4*s13 + 21*s23)) + 
            p2q^2*(2*s13^3 + 2*s13^2*s23 - 53*s13*s23^2 - 2*s23^3 + 
              2*s12*(s13^2 - 21*s13*s23 + s23^2)) - 
            p2q*p3q*(s12^2*(4*s13 + 42*s23) + s23*(8*s13^2 + 59*s13*s23 - 
                17*s23^2) + s12*(4*s13^2 + 54*s13*s23 + 9*s23^2))) + 
          p1q*(p3q^3*s12*(s12 - 2*s23)*(25*s12 + 4*s13 + 21*s23) + 
            p2q^3*s13*(21*s12*s13 - 4*s12*s23 + 55*s13*s23 + 4*s23^2) + 
            p2q^2*p3q*(-2*s12^2*(21*s13 + 2*s23) + s13*(4*s13^2 + 
                55*s13*s23 - 34*s23^2) + s12*(25*s13^2 - 46*s13*s23 + 
                4*s23^2)) + p2q*p3q^2*(21*s12^3 - 2*s13*s23*(4*s13 + 
                21*s23) - s12^2*(50*s13 + 33*s23) - 2*s12*(4*s13^2 + 
                29*s13*s23 + 17*s23^2)))))/(54*(p2q + p3q)*(p1q + p2q + p3q)*
         s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (ep*(p1q^5*s13*s23^2*(s12 + s13 + s23)^2 + p3q*(p3q*s12 - p2q*s13)^2*
           (s12 + s13 + s23)*(2*p3q^2*(21*s13*s23 + s12*(s13 + 42*s23)) + 
            p2q^2*(-(s13*(s13 - 41*s23)) + s12*(s13 + 84*s23)) + 
            2*p2q*p3q*(-(s13*(s13 - 41*s23)) + s12*(s13 + 84*s23))) - 
          p1q^4*s23*(s12 + s13 + s23)*(2*p2q*(s13^3 + s12*s13*(s13 - s23) + 
              s13^2*s23 + 21*s13*s23^2 + 42*s23^3) + 
            p3q*(2*s12^2*s13 + s12*s13*(2*s13 - s23) + s23*(-s13^2 + 
                41*s13*s23 + 84*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p2q^2*(s13^4 + s13^3*s23 + 83*s13^2*s23^2 + 125*s13*s23^3 - 
              84*s23^4 + s12*s13*(s13^2 - 4*s13*s23 + s23^2)) + 
            p3q^2*(s12^3*s13 + s12^2*s13*(s13 - 5*s23) - 84*s23^4 + 
              2*s12*s23*(-s13^2 + 43*s13*s23 + 126*s23^2)) - 
            2*p2q*p3q*(s12^2*s13*(s13 + 2*s23) + s12*(s13^3 + 4*s13^2*s23 - 
                44*s13*s23^2 - 126*s23^3) + s23*(s13^3 - 40*s13^2*s23 - 
                62*s13*s23^2 + 84*s23^3))) - 
          p1q*(p2q^4*s13^2*(-(s12^2*s13) + s13^3 + 44*s13^2*s23 + 
              127*s13*s23^2 + 84*s23^3 + 42*s12*s23*(s13 + 2*s23)) + 
            2*p2q^3*p3q*s13^2*(s12^3 + s13^3 + 22*s13^2*s23 + 146*s13*s23^2 + 
              125*s23^3 - s12^2*(2*s13 + 83*s23) + s12*(-2*s13^2 - 
                66*s13*s23 + 41*s23^2)) + 4*p3q^4*s12*
             (21*s13*s23^2*(s13 + s23) - s12^3*(s13 + 21*s23) - 
              s12^2*(s13^2 + 21*s13*s23 - 42*s23^2) + s12*s23*(s13^2 + 
                85*s13*s23 + 63*s23^2)) + 2*p2q*p3q^3*
             (42*s13^2*s23^2*(s13 + s23) - 2*s12^4*(s13 + 21*s23) + 
              2*s12*s13*s23^2*(62*s13 + 41*s23) + s12^3*(3*s13^2 + 
                64*s13*s23 + 210*s23^2) + s12^2*(5*s13^3 + 113*s13^2*s23 + 
                442*s13*s23^2 + 252*s23^3)) + p2q^2*p3q^2*(-(s12^4*s13) - 
              4*s13^2*s23*(s13^2 - 61*s13*s23 - 62*s23^2) + 
              4*s12^3*(2*s13^2 + 53*s13*s23 + 63*s23^2) - 2*s12*s13*(
                4*s13^3 + 91*s13^2*s23 - 80*s13*s23^2 - 41*s23^3) + 
              s12^2*(s13^3 + 52*s13^2*s23 + 547*s13*s23^2 + 252*s23^3))) + 
          p1q^2*(s12 + s13 + s23)*(p3q^3*(3*s12^3*s13 + 42*s13*s23^3 + 
              2*s12*s23^2*(s13 + 126*s23) + s12^2*(s13^2 - 49*s13*s23 - 
                252*s23^2)) + 2*p2q^3*s13*(s12*s13*(s13 - s23) + 
              s23*(-20*s13^2 + s13*s23 + 84*s23^2)) + 2*p2q*p3q^2*
             (s12^3*s13 - s13*(s13 - 125*s23)*s23^2 - s12^2*(3*s13^2 + 
                25*s13*s23 + 126*s23^2) + s12*(-s13^3 + 39*s13^2*s23 + 
                45*s13*s23^2 + 252*s23^3)) + p2q^2*p3q*
             (-2*s12^2*s13*(2*s13 + s23) + 3*s12*(s13^3 + 26*s13^2*s23 + 
                29*s13*s23^2 + 84*s23^3) + s13*(s13^3 - 37*s13^2*s23 + 
                3*s13*s23^2 + 377*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13^2*s23*(-(p2q*s13) + p1q*(s12 + s23) + 
          p3q*(s12 + s23))))*Int[DS[k]*DS[k + p1]*DS[k + p1 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((10*ep^3*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(27*(p1q + p2q + p3q)*s12*s23) + 
       (ep^2*(s12 + s13 + s23)*(10*p1q^4*s12*s23^2*(s12 + s13 + s23) + 
          (p3q*s12 - p2q*s13)^2*(p2q*p3q*(20*s12^2 + 30*s12*s13 - 10*s13^2 - 
              17*s12*s23 + 7*s13*s23 + 3*s23^2) + p2q^2*(10*s12^2 + 
              10*s12*(s13 - s23) - s13*(10*s13 + 3*s23)) + 
            p3q^2*(20*s12^2 + 3*s12*(10*s13 + s23) + s23*(10*s13 + 3*s23))) + 
          p1q^3*s23*(p3q*(-20*s12^3 - 20*s12^2*s13 + 3*s12*s23*(10*s13 + 
                s23) + s23^2*(10*s13 + 3*s23)) - p2q*(20*s12^2*s13 - 
              s23^2*(10*s13 + 3*s23) + s12*(20*s13^2 + 10*s13*s23 + 
                17*s23^2))) + p1q*(p3q^3*s12*(s12 - 2*s23)*
             (20*s12^2 + 3*s12*(10*s13 + s23) + s23*(10*s13 + 3*s23)) - 
            p2q*p3q^2*(2*s13*s23^2*(10*s13 + 3*s23) + s12^3*(30*s13 + 
                57*s23) + s12^2*(60*s13^2 + 96*s13*s23 - 37*s23^2) + 
              2*s12*s23*(30*s13^2 + 13*s13*s23 + 3*s23^2)) + 
            p2q^3*s13*(-20*s12^2*s23 + 3*s13*s23*(10*s13 + 3*s23) + 
              s12*(10*s13^2 - 37*s13*s23 + 20*s23^2)) + 
            p2q^2*p3q*(-20*s12^3*s23 + s13*s23*(30*s13^2 - 11*s13*s23 - 
                6*s23^2) + s12^2*(-26*s13*s23 + 20*s23^2) + 
              s12*s13*(30*s13^2 - 57*s13*s23 + 34*s23^2))) + 
          p1q^2*(p3q^2*(10*s12^4 + 10*s12^3*(s13 - 3*s23) + s12*(10*s13 - 
                3*s23)*s23^2 + s23^3*(10*s13 + 3*s23) + 2*s12^2*s23*(
                -30*s13 + 7*s23)) + p2q*p3q*(-20*s12^3*s13 + 
              s12*s23*(-60*s13^2 + 4*s13*s23 - 23*s23^2) + s23^2*(-30*s13^2 + 
                s13*s23 + 3*s23^2) + s12^2*(-20*s13^2 - 80*s13*s23 + 
                54*s23^2)) + p2q^2*(-3*s13*s23^2*(10*s13 + 3*s23) + 
              10*s12^2*(s13^2 + s23^2) + 2*s12*(5*s13^3 - 5*s13^2*s23 + 
                22*s13*s23^2 - 5*s23^3)))))/(27*(p2q + p3q)*(p1q + p2q + p3q)*
         s12*s13*s23*(-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))) - 
       (2*ep*(5*p1q^5*s13*s23^2*(s12 + s13 + s23)^2 + 
          p3q*(p3q*s12 - p2q*s13)^2*(s12 + s13 + s23)*
           (p2q^2*(5*s12*s13 - 5*s13^2 - 12*s12*s23 - 11*s13*s23) + 
            2*p2q*p3q*(5*s12*s13 - 5*s13^2 - 12*s12*s23 - 11*s13*s23) + 
            2*p3q^2*(5*s12*s13 - 6*s12*s23 - 3*s13*s23)) - 
          p1q^4*s23*(s12 + s13 + s23)*(2*p2q*(5*s13^3 + 5*s12*s13*(s13 - 
                s23) + 5*s13^2*s23 - 3*s13*s23^2 - 6*s23^3) + 
            p3q*(10*s12^2*s13 + 5*s12*s13*(2*s13 - s23) - s23*(5*s13^2 + 
                11*s13*s23 + 12*s23^2))) + p1q^3*(s12 + s13 + s23)*
           (p2q^2*(5*s13^4 + 5*s13^3*s23 - 17*s13^2*s23^2 - 23*s13*s23^3 + 
              12*s23^4 + 5*s12*s13*(s13^2 - 4*s13*s23 + s23^2)) + 
            p3q^2*(5*s12^3*s13 + 5*s12^2*s13*(s13 - 5*s23) + 12*s23^4 - 
              2*s12*s23*(5*s13^2 + s13*s23 + 18*s23^2)) - 
            2*p2q*p3q*(5*s12^2*s13*(s13 + 2*s23) + s23*(5*s13^3 + 
                16*s13^2*s23 + 14*s13*s23^2 - 12*s23^3) + s12*(5*s13^3 + 
                20*s13^2*s23 - 4*s13*s23^2 + 18*s23^3))) + 
          p1q^2*(s12 + s13 + s23)*(2*p2q^3*s13*(5*s12*s13*(s13 - s23) + 
              s23*(8*s13^2 + 5*s13*s23 - 12*s23^2)) + 
            p3q^3*(15*s12^3*s13 + 2*s12*(5*s13 - 18*s23)*s23^2 - 
              6*s13*s23^3 + s12^2*(5*s13^2 - 29*s13*s23 + 36*s23^2)) + 
            p2q^2*p3q*(-10*s12^2*s13*(2*s13 + s23) + s13*(5*s13^3 + 
                31*s13^2*s23 + 15*s13*s23^2 - 59*s23^3) + 3*s12*(5*s13^3 - 
                14*s13^2*s23 + s13*s23^2 - 12*s23^3)) + 2*p2q*p3q^2*
             (5*s12^3*s13 - s13*s23^2*(5*s13 + 23*s23) + s12^2*(-15*s13^2 - 
                17*s13*s23 + 18*s23^2) - s12*(5*s13^3 + 21*s13^2*s23 - 
                9*s13*s23^2 + 36*s23^3))) + 
          p1q*(p2q^4*s13^2*(5*s12^2*s13 - 5*s13^3 - 4*s13^2*s23 + 
              13*s13*s23^2 + 12*s23^3 + 6*s12*s23*(s13 + 2*s23)) + 
            4*p3q^4*s12*(s12^3*(5*s13 - 3*s23) + 3*s13*s23^2*(s13 + s23) + 
              s12^2*(5*s13^2 - 3*s13*s23 + 6*s23^2) + s12*s23*(-5*s13^2 + 
                7*s13*s23 + 9*s23^2)) + 2*p2q^3*p3q*s13^2*(-5*s12^3 - 
              5*s13^3 + s12^2*(10*s13 - 17*s23) - 2*s13^2*s23 + 
              26*s13*s23^2 + 23*s23^3 + s12*(10*s13^2 + 6*s13*s23 + 
                11*s23^2)) + 2*p2q*p3q^3*(2*s12^4*(5*s13 - 3*s23) + 
              6*s13^2*s23^2*(s13 + s23) + 2*s12*s13*s23^2*(14*s13 + 11*s23) + 
              s12^3*(-15*s13^2 + 4*s13*s23 + 30*s23^2) + s12^2*(-25*s13^3 - 
                25*s13^2*s23 + 58*s13*s23^2 + 36*s23^3)) + 
            p2q^2*p3q^2*(5*s12^4*s13 + 4*s13^2*s23*(5*s13^2 + 19*s13*s23 + 
                14*s23^2) + s12^3*(-40*s13^2 + 20*s13*s23 + 36*s23^2) + 
              2*s12*s13*(20*s13^3 + 23*s13^2*s23 + 32*s13*s23^2 + 11*s23^3) + 
              s12^2*(-5*s13^3 - 44*s13^2*s23 + 73*s13*s23^2 + 36*s23^3)))))/
        (27*(p1q + p3q)*(p2q + p3q)*(p1q + p2q + p3q)*s13^2*s23*
         (-(p2q*s13) + p1q*(s12 + s23) + p3q*(s12 + s23))))*
      Int[DS[k]*DS[k + p3]*DS[k + p1 + p3]*DS[k + p1 + p2 + p3]*Eik[k], 
       6 - 2*ep] + 
     ((ep^2*(s12 + s13 + s23)*(p1q^4*s23^2*(-2*s12 + 2*s13 + 19*s23) - 
          (p3q*s12 - p2q*s13)^2*(2*p2q^2*(s12 + s13 + s23) + 
            p2q*p3q*(25*s12 + 21*s13 + 4*s23) + p3q^2*(25*s12 + 21*s13 + 
              4*s23)) + p1q^3*s23*(p2q*(4*s12*s13 - 4*s13^2 - 21*s12*s23 - 
              55*s13*s23) + p3q*(4*s12^2 + 17*s23*(-s13 + s23) - 
              s12*(4*s13 + 63*s23))) + 
          p1q*(p2q^3*s13*(-21*s12*s13 - 17*s13^2 + 4*s12*s23 + 4*s13*s23 + 
              4*s23^2) + p3q^3*s12*(-25*s12^2 - 17*s12*s13 + 67*s12*s23 + 
              42*s13*s23 + 8*s23^2) + p2q*p3q^2*(-21*s12^3 + 
              2*s13*s23*(21*s13 + 4*s23) + s12^2*(33*s13 + 50*s23) + 
              s12*(34*s13^2 + 58*s13*s23 + 8*s23^2)) + p2q^2*p3q*
             (s12^2*(42*s13 + 4*s23) + s12*(9*s13^2 + 54*s13*s23 + 4*s23^2) + 
              s13*(-17*s13^2 + 59*s13*s23 + 8*s23^2))) - 
          p1q^2*(p3q^2*(2*s12^3 + s23^2*(21*s13 + 4*s23) + s12*s23*(-34*s13 + 
                59*s23) - s12^2*(2*s13 + 69*s23)) + 
            p2q^2*(-2*s13^3 - 53*s13^2*s23 + 2*s13*s23^2 + 2*s23^3 + 
              2*s12*(s13^2 - 21*s13*s23 + s23^2)) + 
            p2q*p3q*(-2*s12^2*(2*s13 + 21*s23) + s23*(-34*s13^2 + 
                55*s13*s23 + 4*s23^2) + s12*(4*s13^2 - 46*s13*s23 + 
                25*s23^2)))))/(54*(p1q + p3q)*(p1q + p2q + p3q)*s13*s23*
         (-(p2q*(s12 + s13)) - p3q*(s12 + s13) + p1q*s23)) - 
       (ep*(s12 + s13 + s23)*((p2q + p3q)*(p3q*s12 - p2q*s13)^2*
           (p2q^2*s23*(s12 + s13 + s23) + 2*p2q*p3q*(-42*s13^2 + s12*s23 - 
              21*s13*s23) + 2*p3q^2*(21*s13*s23 + s12*(42*s13 + s23))) + 
          p1q^4*s23^2*(-(p2q*(84*s13^2 + 43*s13*s23 + s23*(-s12 + s23))) + 
            p3q*((41*s13 - s23)*s23 + s12*(84*s13 + s23))) - 
          2*p1q^3*s23*(p2q*p3q*s23*(s12^2 + 125*s13^2 + 21*s13*s23 + s23^2 - 
              3*s12*(28*s13 + s23)) + p3q^2*(s12 - s23)*((41*s13 - s23)*s23 + 
              s12*(84*s13 + s23)) - p2q^2*(84*s13^3 + s13^2*s23 + s12*s23^2 - 
              s13*s23*(s12 + 20*s23))) + 
          2*p1q*(-(p2q^4*s13*(42*s13^3 + 21*s13^2*s23 + s13*s23*
                (-s12 + s23) + s23^2*(s12 + s23))) + p3q^4*s12*
             (-42*s13*s23^2 + s12^2*(84*s13 + s23) - s12*s23*(43*s13 + 
                3*s23)) + p2q*p3q^3*(-82*s12*s13^2*s23 - 42*s13^2*s23^2 + 
              2*s12^3*(21*s13 + s23) - s12^2*(252*s13^2 + 108*s13*s23 + 
                5*s23^2)) + p2q^2*p3q^2*(s12^3*s23 + s13^2*(125*s13 - s23)*
               s23 - s12^2*(126*s13^2 + 25*s13*s23 + 3*s23^2) + 
              s12*(252*s13^3 + 45*s13^2*s23 + 39*s13*s23^2 - s23^3)) - 
            p2q^3*p3q*(s12^2*s23*(2*s13 + s23) + s13*(84*s13^3 - 
                62*s13^2*s23 - 40*s13*s23^2 + s23^3) + s12*(-126*s13^3 - 
                44*s13^2*s23 + 4*s13*s23^2 + s23^3))) + 
          p1q^2*(p2q^3*(-84*s13^4 + 125*s13^3*s23 + s13*s23^2*(-4*s12 + 
                s23) + s23^3*(s12 + s23) + s13^2*s23*(s12 + 83*s23)) + 
            p2q*p3q^2*(s12^3*s23 + 4*s13*s23^2*(-62*s13 + s23) - 
              3*s12^2*(84*s13^2 + 71*s13*s23 + 3*s23^2) + 2*s12*s23*(
                -41*s13^2 + 85*s13*s23 + 4*s23^2)) + p2q^2*p3q*
             (-2*s12^2*s23*(s13 + 2*s23) + s23*(377*s13^3 + 3*s13^2*s23 - 
                37*s13*s23^2 + s23^3) + 3*s12*(84*s13^3 + 29*s13^2*s23 + 
                26*s13*s23^2 + s23^3)) + p3q^3*(42*s13*s23^3 - 
              5*s12^2*s23*(59*s13 + s23) + s12^3*(84*s13 + s23) + 
              s12*(-80*s13*s23^2 + 6*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23)))*Int[DS[k]*DS[k + p2]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep] + 
     ((10*ep^3*(s12 + s13 + s23)*(p3q^2*s12^2 + (p2q*s13 - p1q*s23)^2 - 
          2*p3q*s12*(p2q*s13 + p1q*s23)))/(27*(p1q + p2q + p3q)*s12*s13) - 
       (ep^2*(s12 + s13 + s23)*(p1q^4*s23^2*(10*s12^2 - 10*s12*(s13 - s23) - 
            s23*(3*s13 + 10*s23)) + (p3q*s12 - p2q*s13)^2*
           (10*p2q^2*s12*(s12 + s13 + s23) + p2q*p3q*(20*s12^2 + 3*s12*s13 + 
              3*s13^2 + 30*s12*s23 + 10*s13*s23) + 
            p3q^2*(20*s12^2 + 3*s12*s13 + 3*s13^2 + 30*s12*s23 + 
              10*s13*s23)) + p1q^3*s23*(p3q*(-20*s12^3 + 20*s12^2*s13 + 
              s12*s23*(-11*s13 + 50*s23) + s23*(3*s13^2 + 7*s13*s23 - 
                10*s23^2)) + p2q*(-20*s12^2*s13 + 3*s13*s23*(3*s13 + 
                10*s23) + s12*(20*s13^2 - 37*s13*s23 + 10*s23^2))) + 
          p1q*(p3q^3*s12*(20*s12^3 - 2*s13*s23*(3*s13 + 10*s23) - 
              s12^2*(17*s13 + 10*s23) + s12*(3*s13^2 + s13*s23 - 70*s23^2)) + 
            p2q^2*p3q*(-20*s12^3*s23 + s12*s13*(-23*s13^2 + 4*s13*s23 - 
                60*s23^2) + s13^2*(3*s13^2 + s13*s23 - 30*s23^2) + 
              s12^2*(54*s13^2 - 80*s13*s23 - 20*s23^2)) + 
            p2q^3*s13*(-20*s12^2*s23 + s13^2*(3*s13 + 10*s23) - 
              s12*(17*s13^2 + 10*s13*s23 + 20*s23^2)) - 
            p2q*p3q^2*(2*s13^2*s23*(3*s13 + 10*s23) + s12^3*(57*s13 + 
                30*s23) + 2*s12*s13*(3*s13^2 + 13*s13*s23 + 30*s23^2) + 
              s12^2*(-37*s13^2 + 96*s13*s23 + 60*s23^2))) + 
          p1q^2*(p2q*p3q*(-20*s12^3*s13 + 2*s12^2*s13*(10*s13 - 13*s23) + 
              s12*s23*(34*s13^2 - 57*s13*s23 + 30*s23^2) + 
              s13*s23*(-6*s13^2 - 11*s13*s23 + 30*s23^2)) + 
            p3q^2*(10*s12^4 + s12^2*(31*s13 - 50*s23)*s23 - 10*s12^3*(s13 + 
                3*s23) + s13*s23^2*(3*s13 + 10*s23) + s12*s23*(-6*s13^2 - 
                11*s13*s23 + 50*s23^2)) + p2q^2*(-3*s13^2*s23*(3*s13 + 
                10*s23) + 10*s12^2*(s13^2 + s23^2) - 2*s12*(5*s13^3 - 
                22*s13^2*s23 + 5*s13*s23^2 - 5*s23^3)))))/
        (27*(p1q + p3q)*(p1q + p2q + p3q)*s12*s13*s23*(-(p2q*(s12 + s13)) - 
          p3q*(s12 + s13) + p1q*s23)) + (2*ep*(s12 + s13 + s23)*
         (-((p2q + p3q)*(p3q*s12 - p2q*s13)^2*(5*p2q^2*s23*(s12 + s13 + 
               s23) - 2*p3q^2*(6*s12*s13 - 5*s12*s23 + 3*s13*s23) + 
             2*p2q*p3q*(6*s13^2 + 5*s12*s23 + 3*s13*s23))) + 
          p1q^4*s23^2*(-(p2q*(12*s13^2 + s13*s23 + 5*(s12 - s23)*s23)) + 
            p3q*(12*s12*s13 - 5*s12*s23 + 11*s13*s23 + 5*s23^2)) + 
          2*p1q^3*s23*(p3q^2*(s12 - s23)*(-12*s12*s13 + 5*s12*s23 - 
              11*s13*s23 - 5*s23^2) + p2q*p3q*s23*(5*s12^2 - 23*s13^2 + 
              3*s12*(4*s13 - 5*s23) - 3*s13*s23 + 5*s23^2) + 
            p2q^2*(12*s13^3 - 5*s13^2*s23 + s13*(5*s12 - 8*s23)*s23 - 
              5*s12*s23^2)) - 2*p1q*(p2q^4*s13*(6*s13^3 + 3*s13^2*s23 + 
              5*s13*(s12 - s23)*s23 - 5*s23^2*(s12 + s23)) + 
            p3q^4*s12*(s12*(s13 - 15*s23)*s23 + 6*s13*s23^2 + 
              s12^2*(-12*s13 + 5*s23)) + p2q*p3q^3*(22*s12*s13^2*s23 + 
              6*s13^2*s23^2 + s12^3*(-6*s13 + 10*s23) + s12^2*(36*s13^2 - 
                25*s23^2)) - p2q^3*p3q*(5*s12^2*s23*(2*s13 + s23) + 
              s13*(-12*s13^3 + 14*s13^2*s23 + 16*s13*s23^2 + 5*s23^3) + 
              s12*(18*s13^3 - 4*s13^2*s23 + 20*s13*s23^2 + 5*s23^3)) + 
            p2q^2*p3q^2*(5*s12^3*s23 - s13^2*s23*(23*s13 + 5*s23) + 
              s12^2*(18*s13^2 - 17*s13*s23 - 15*s23^2) - s12*(36*s13^3 - 
                9*s13^2*s23 + 21*s13*s23^2 + 5*s23^3))) + 
          p1q^2*(-(p2q^3*(12*s13^4 - 23*s13^3*s23 + s13^2*(5*s12 - 17*s23)*
                s23 + 5*s13*s23^2*(-4*s12 + s23) + 5*s23^3*(s12 + s23))) + 
            p3q^3*(s12^3*(12*s13 - 5*s23) + 6*s13*s23^3 - 2*s12*s23^2*(
                16*s13 + 15*s23) + s12^2*s23*(-37*s13 + 25*s23)) - 
            p2q*p3q^2*(5*s12^3*s23 + 4*s13*s23^2*(14*s13 + 5*s23) + 
              3*s12^2*(12*s13^2 + 5*s13*s23 - 15*s23^2) + 2*s12*s23*(
                11*s13^2 - 7*s13*s23 + 20*s23^2)) + p2q^2*p3q*
             (10*s12^2*s23*(s13 + 2*s23) + 3*s12*(12*s13^3 - s13^2*s23 + 
                14*s13*s23^2 - 5*s23^3) - s23*(-59*s13^3 + 15*s13^2*s23 + 
                31*s13*s23^2 + 5*s23^3)))))/(27*(p1q + p3q)*(p2q + p3q)*
         (p1q + p2q + p3q)*s13*s23^2*(p2q*(s12 + s13) + p3q*(s12 + s13) - 
          p1q*s23)))*Int[DS[k]*DS[k + p3]*DS[k + p2 + p3]*
        DS[k + p1 + p2 + p3]*Eik[k], 6 - 2*ep]
